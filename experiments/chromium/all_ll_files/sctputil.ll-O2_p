; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctputil.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.37, %struct.anon.38, %struct.anon.39, %struct.anon.40, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon.6, %struct.anon.7, %struct.anon.8, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.9, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon.6 = type { %struct.socket*, %struct.socket** }
%struct.anon.7 = type { %struct.socket*, %struct.socket** }
%struct.anon.8 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.sigio = type opaque
%struct.anon.9 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.2 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.pkthdr, %union.anon.5 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.4, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.4 = type { %struct.m_tag* }
%union.anon.5 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.10, %struct.sctp_readhead, %struct.anon.32, %struct.anon.33, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.10 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.11, %struct.anon.12, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.17, %struct.anon.18, %struct.anon.19, %struct.inpcbport*, %struct.mtx }
%struct.anon.11 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.12 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.14, %union.anon.16 }
%union.anon.14 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.16 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.17 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.18 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.19 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.13, %struct.inpcbhead, i16 }
%struct.anon.13 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.28, %struct.anon.29, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.20, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.20 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.22, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.22 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.23, %struct.anon.24, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.23 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.24 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.26, %struct.anon.27, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.25, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.25 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.26 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.27 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.21, i32, i8*, void (i8*)*, i32 }
%struct.anon.21 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.28 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.29 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.30, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.31, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.30 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.31 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.32 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.33 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctp_laddr = type { %struct.anon.34, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.34 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.35, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.35 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_iterator = type { %struct.anon.36, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.36 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.37 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.38 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.39 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.40 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.41, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.41 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.47 }
%union.anon.47 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.48, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.48 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.42, %struct.anon.43, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.42 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.43 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.45, i16 }
%struct.anon.45 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.49, i32, i32, i32, [0 x i16] }
%struct.anon.49 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.50, [15 x %struct.sctp_timewait] }
%struct.anon.50 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutexattr_t = type { i32 }
%struct.iterator_control = type { %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_cond_t, i64, %struct.sctpiterators, %struct.sctp_iterator*, i32, i32 }
%struct.sctpiterators = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_gen_error_cause = type { i16, i16, [0 x i8] }
%struct.sctp_abort_chunk = type { %struct.sctp_chunkhdr }
%struct.sctphdr = type { i16, i16, i32, i32 }
%struct.sctp_init_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_init }
%struct.sctp_init = type { i32, i32, i16, i16, i32 }
%struct.sctp_error_no_user_data = type { %struct.sctp_error_cause, i32 }
%struct.sctp_error_cause = type { i16, i16 }
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32, i32 }
%struct.iovec = type { i8*, i64 }
%struct.sctp_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16, [92 x i8] }
%struct.malloc_type = type { %struct.malloc_type*, i64, i64, i64, i64, i64, i64, i8*, i8*, i8*, i8*, i32, i8*, %struct.witness*, i64, i32 }
%struct.witness = type opaque
%struct.generic.51 = type { %struct.generic.51* }

@hz = external local_unnamed_addr global i32, align 4
@sctp_mtu_sizes = internal unnamed_addr constant [18 x i32] [i32 68, i32 296, i32 508, i32 512, i32 544, i32 576, i32 1004, i32 1492, i32 1500, i32 1536, i32 2000, i32 2048, i32 4352, i32 4464, i32 8168, i32 17912, i32 32000, i32 65532], align 16
@sctp_cc_functions = external local_unnamed_addr constant [0 x %struct.sctp_cc_functions], align 8
@sctp_ss_functions = external local_unnamed_addr constant [0 x %struct.sctp_ss_functions], align 8
@system_base_info = external global %struct.sctp_base_info, align 8
@.str = private unnamed_addr constant [84 x i8] c"Mapping array size: %d, baseTSN: %8.8x, cumAck: %8.8x, highestTSN: (%8.8x, %8.8x).\0A\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"Renegable mapping array (last %d entries are zero):\0A\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%2.2x%c\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"Non renegable mapping array (last %d entries are zero):\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"No memory for expansion of SCTP mapping array %d\0A\00", align 1
@sctp_it_ctl = external global %struct.iterator_control, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"Shutdown guard timer expired\00", align 1
@accept_mtx = external global %union.pthread_mutex_t, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"AF_CONN address: %p\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"?\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"hash_of_addr:%x mask:%x table:%x - \00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"No such bucket for address\0A\00", align 1
@.str.11 = private unnamed_addr constant [56 x i8] c"Strange, data left in the control buffer. Cleaning up.\0A\00", align 1
@.str.13 = private unnamed_addr constant [69 x i8] c"Strange, data left in the control buffer .. invarients would panic?\0A\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"hashinit: bad elements?\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"hashdestroy: hash not empty.\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"lo\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"Unknown it ctl flag %x\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"Failed to initiate iterator for handle_addr_wq\0A\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_sblog(%struct.sockbuf* nocapture, %struct.sctp_tcb* nocapture, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_closing(%struct.sctp_inpcb* nocapture, %struct.sctp_tcb* nocapture, i16 signext) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @rto_logging(%struct.sctp_nets* nocapture, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_strm_del_alt(%struct.sctp_tcb* nocapture, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_nagle_event(%struct.sctp_tcb* nocapture, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_sack(i32, i32, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_map(i32, i32, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_fr(i32, i32, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_strm_del(%struct.sctp_queued_to_read* nocapture, %struct.sctp_queued_to_read* nocapture, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_cwnd(%struct.sctp_tcb* nocapture, %struct.sctp_nets* nocapture, i32, i8 zeroext) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_maxburst(%struct.sctp_tcb* nocapture, %struct.sctp_nets* nocapture, i32, i32, i8 zeroext) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_rwnd(i8 zeroext, i32, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_rwnd_set(i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_misc_ints(i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_wakeup_log(%struct.sctp_tcb* nocapture, i32, i32) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @sctp_log_block(i8 zeroext, %struct.sctp_association* nocapture, i64) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_fill_stat_log(i8* nocapture readnone, i64* nocapture readnone) local_unnamed_addr #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_msecs_to_ticks(i32) local_unnamed_addr #1 {
  %2 = load i32, i32* @hz, align 4
  %3 = icmp eq i32 %2, 1000
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = zext i32 %0 to i64
  %6 = sext i32 %2 to i64
  %7 = mul nsw i64 %6, %5
  %8 = add nsw i64 %7, 999
  %9 = icmp ugt i64 %8, 4294967295999
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = udiv i64 %8, 1000
  %12 = trunc i64 %11 to i32
  br label %13

13:                                               ; preds = %4, %1, %10
  %14 = phi i32 [ %12, %10 ], [ %0, %1 ], [ -1, %4 ]
  ret i32 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_ticks_to_msecs(i32) local_unnamed_addr #1 {
  %2 = load i32, i32* @hz, align 4
  %3 = icmp eq i32 %2, 1000
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = zext i32 %0 to i64
  %6 = mul nuw nsw i64 %5, 1000
  %7 = add nsw i32 %2, -1
  %8 = sext i32 %7 to i64
  %9 = add nsw i64 %6, %8
  %10 = sext i32 %2 to i64
  %11 = udiv i64 %9, %10
  %12 = icmp ult i64 %11, 4294967295
  %13 = select i1 %12, i64 %11, i64 4294967295
  %14 = trunc i64 %13 to i32
  ret i32 %14

15:                                               ; preds = %1
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_secs_to_ticks(i32) local_unnamed_addr #1 {
  %2 = zext i32 %0 to i64
  %3 = load i32, i32* @hz, align 4
  %4 = sext i32 %3 to i64
  %5 = mul nsw i64 %4, %2
  %6 = icmp ult i64 %5, 4294967295
  %7 = select i1 %6, i64 %5, i64 4294967295
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_ticks_to_secs(i32) local_unnamed_addr #1 {
  %2 = zext i32 %0 to i64
  %3 = load i32, i32* @hz, align 4
  %4 = add nsw i32 %3, -1
  %5 = sext i32 %4 to i64
  %6 = add nsw i64 %5, %2
  %7 = sext i32 %3 to i64
  %8 = udiv i64 %6, %7
  %9 = icmp ult i64 %8, 4294967295
  %10 = select i1 %9, i64 %8, i64 4294967295
  %11 = trunc i64 %10 to i32
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %3 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %2, align 8
  tail call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612748)
  tail call void @sctp_timer_stop(i32 13, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612749)
  tail call void @sctp_timer_stop(i32 10, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612750)
  tail call void @sctp_timer_stop(i32 12, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612751)
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %5 = load %struct.sctp_nets*, %struct.sctp_nets** %4, align 8
  %6 = icmp eq %struct.sctp_nets* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1, %7
  %8 = phi %struct.sctp_nets* [ %10, %7 ], [ %5, %1 ]
  tail call void @sctp_timer_stop(i32 8, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %8, i32 1610612752)
  tail call void @sctp_timer_stop(i32 5, %struct.sctp_inpcb* %3, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %8, i32 1610612753)
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %8, i64 0, i32 0, i32 0
  %10 = load %struct.sctp_nets*, %struct.sctp_nets** %9, align 8
  %11 = icmp eq %struct.sctp_nets* %10, null
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_timer_stop(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #3 {
  switch i32 %0, label %228 [
    i32 1, label %6
    i32 2, label %14
    i32 3, label %22
    i32 4, label %30
    i32 5, label %38
    i32 6, label %46
    i32 7, label %54
    i32 8, label %62
    i32 9, label %70
    i32 10, label %78
    i32 11, label %86
    i32 12, label %94
    i32 13, label %102
    i32 14, label %110
    i32 15, label %118
    i32 16, label %126
    i32 17, label %132
  ]

6:                                                ; preds = %5
  %7 = icmp eq %struct.sctp_inpcb* %1, null
  %8 = icmp eq %struct.sctp_tcb* %2, null
  %9 = or i1 %7, %8
  %10 = icmp eq %struct.sctp_nets* %3, null
  %11 = or i1 %9, %10
  br i1 %11, label %228, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  br label %140

14:                                               ; preds = %5
  %15 = icmp eq %struct.sctp_inpcb* %1, null
  %16 = icmp eq %struct.sctp_tcb* %2, null
  %17 = or i1 %15, %16
  %18 = icmp eq %struct.sctp_nets* %3, null
  %19 = or i1 %17, %18
  br i1 %19, label %228, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  br label %140

22:                                               ; preds = %5
  %23 = icmp eq %struct.sctp_inpcb* %1, null
  %24 = icmp eq %struct.sctp_tcb* %2, null
  %25 = or i1 %23, %24
  %26 = icmp ne %struct.sctp_nets* %3, null
  %27 = or i1 %25, %26
  br i1 %27, label %228, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 7
  br label %140

30:                                               ; preds = %5
  %31 = icmp eq %struct.sctp_inpcb* %1, null
  %32 = icmp eq %struct.sctp_tcb* %2, null
  %33 = or i1 %31, %32
  %34 = icmp eq %struct.sctp_nets* %3, null
  %35 = or i1 %33, %34
  br i1 %35, label %228, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  br label %140

38:                                               ; preds = %5
  %39 = icmp eq %struct.sctp_inpcb* %1, null
  %40 = icmp eq %struct.sctp_tcb* %2, null
  %41 = or i1 %39, %40
  %42 = icmp eq %struct.sctp_nets* %3, null
  %43 = or i1 %41, %42
  br i1 %43, label %228, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 2
  br label %140

46:                                               ; preds = %5
  %47 = icmp eq %struct.sctp_inpcb* %1, null
  %48 = icmp eq %struct.sctp_tcb* %2, null
  %49 = or i1 %47, %48
  %50 = icmp eq %struct.sctp_nets* %3, null
  %51 = or i1 %49, %50
  br i1 %51, label %228, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  br label %140

54:                                               ; preds = %5
  %55 = icmp eq %struct.sctp_inpcb* %1, null
  %56 = icmp ne %struct.sctp_tcb* %2, null
  %57 = or i1 %55, %56
  %58 = icmp ne %struct.sctp_nets* %3, null
  %59 = or i1 %57, %58
  br i1 %59, label %228, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 27
  br label %140

62:                                               ; preds = %5
  %63 = icmp eq %struct.sctp_inpcb* %1, null
  %64 = icmp eq %struct.sctp_tcb* %2, null
  %65 = or i1 %63, %64
  %66 = icmp eq %struct.sctp_nets* %3, null
  %67 = or i1 %65, %66
  br i1 %67, label %228, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 1
  br label %140

70:                                               ; preds = %5
  %71 = icmp eq %struct.sctp_inpcb* %1, null
  %72 = icmp eq %struct.sctp_tcb* %2, null
  %73 = or i1 %71, %72
  %74 = icmp eq %struct.sctp_nets* %3, null
  %75 = or i1 %73, %74
  br i1 %75, label %228, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  br label %140

78:                                               ; preds = %5
  %79 = icmp eq %struct.sctp_inpcb* %1, null
  %80 = icmp eq %struct.sctp_tcb* %2, null
  %81 = or i1 %79, %80
  %82 = icmp ne %struct.sctp_nets* %3, null
  %83 = or i1 %81, %82
  br i1 %83, label %228, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 8
  br label %140

86:                                               ; preds = %5
  %87 = icmp eq %struct.sctp_inpcb* %1, null
  %88 = icmp eq %struct.sctp_tcb* %2, null
  %89 = or i1 %87, %88
  %90 = icmp ne %struct.sctp_nets* %3, null
  %91 = or i1 %89, %90
  br i1 %91, label %228, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 10
  br label %140

94:                                               ; preds = %5
  %95 = icmp eq %struct.sctp_inpcb* %1, null
  %96 = icmp eq %struct.sctp_tcb* %2, null
  %97 = or i1 %95, %96
  %98 = icmp ne %struct.sctp_nets* %3, null
  %99 = or i1 %97, %98
  br i1 %99, label %228, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 11
  br label %140

102:                                              ; preds = %5
  %103 = icmp eq %struct.sctp_inpcb* %1, null
  %104 = icmp eq %struct.sctp_tcb* %2, null
  %105 = or i1 %103, %104
  %106 = icmp ne %struct.sctp_nets* %3, null
  %107 = or i1 %105, %106
  br i1 %107, label %228, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 9
  br label %140

110:                                              ; preds = %5
  %111 = icmp eq %struct.sctp_inpcb* %1, null
  %112 = icmp ne %struct.sctp_tcb* %2, null
  %113 = or i1 %111, %112
  %114 = icmp ne %struct.sctp_nets* %3, null
  %115 = or i1 %113, %114
  br i1 %115, label %228, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 27
  br label %140

118:                                              ; preds = %5
  %119 = icmp eq %struct.sctp_inpcb* %1, null
  %120 = icmp eq %struct.sctp_tcb* %2, null
  %121 = or i1 %119, %120
  %122 = icmp ne %struct.sctp_nets* %3, null
  %123 = or i1 %121, %122
  br i1 %123, label %228, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 9
  br label %140

126:                                              ; preds = %5
  %127 = icmp ne %struct.sctp_inpcb* %1, null
  %128 = icmp ne %struct.sctp_tcb* %2, null
  %129 = or i1 %127, %128
  %130 = icmp ne %struct.sctp_nets* %3, null
  %131 = or i1 %129, %130
  br i1 %131, label %228, label %140

132:                                              ; preds = %5
  %133 = icmp eq %struct.sctp_inpcb* %1, null
  %134 = icmp eq %struct.sctp_tcb* %2, null
  %135 = or i1 %133, %134
  %136 = icmp ne %struct.sctp_nets* %3, null
  %137 = or i1 %135, %136
  br i1 %137, label %228, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 12
  br label %140

140:                                              ; preds = %126, %138, %124, %116, %108, %100, %92, %84, %76, %68, %60, %52, %44, %36, %28, %20, %12
  %141 = phi %struct.sctp_timer* [ %139, %138 ], [ %125, %124 ], [ %117, %116 ], [ %109, %108 ], [ %101, %100 ], [ %93, %92 ], [ %85, %84 ], [ %77, %76 ], [ %69, %68 ], [ %61, %60 ], [ %53, %52 ], [ %45, %44 ], [ %37, %36 ], [ %29, %28 ], [ %21, %20 ], [ %13, %12 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40), %126 ]
  %142 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  %145 = icmp eq i32 %143, %0
  %146 = or i1 %144, %145
  br i1 %146, label %147, label %228

147:                                              ; preds = %140
  %148 = icmp eq i32 %0, 1
  %149 = icmp ne %struct.sctp_tcb* %2, null
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 140
  %153 = load i16, i16* %152, align 8
  %154 = add i16 %153, -1
  %155 = icmp sgt i16 %154, 0
  %156 = select i1 %155, i16 %154, i16 0
  store i16 %156, i16* %152, align 8
  br label %157

157:                                              ; preds = %151, %147
  %158 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 5
  store i8* null, i8** %158, align 8
  %159 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 7
  store i32 %4, i32* %159, align 4
  %160 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 0
  %161 = tail call i32 @sctp_os_timer_stop(%struct.sctp_callout* %160) #12
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %228

163:                                              ; preds = %157
  %164 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 2
  %165 = load i8*, i8** %164, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 37
  %169 = atomicrmw add i32* %168, i32 -1 seq_cst
  store i8* null, i8** %164, align 8
  br label %170

170:                                              ; preds = %163, %167
  %171 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 3
  %172 = load i8*, i8** %171, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 120
  %176 = atomicrmw add i32* %175, i32 -1 seq_cst
  store i8* null, i8** %171, align 8
  br label %177

177:                                              ; preds = %170, %174
  %178 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %141, i64 0, i32 4
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %228, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds i8, i8* %179, i64 504
  %183 = bitcast i8* %182 to i32*
  %184 = atomicrmw add i32* %183, i32 -1 seq_cst
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %227

186:                                              ; preds = %181
  %187 = bitcast i8** %178 to %struct.sctp_nets**
  %188 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  %189 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %188, i64 0, i32 3, i32 0
  %190 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %189, align 8
  %191 = icmp eq %struct.sctp_rtentry* %190, null
  br i1 %191, label %207, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %190, i64 0, i32 3
  %194 = load i64, i64* %193, align 8
  %195 = icmp sgt i64 %194, 1
  %196 = add nsw i64 %194, -1
  store i64 %196, i64* %193, align 8
  %197 = icmp sgt i64 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %201, label %199

199:                                              ; preds = %192
  %200 = bitcast %struct.sctp_rtentry* %190 to i8*
  tail call void @free(i8* %200) #12
  br label %201

201:                                              ; preds = %192, %199
  %202 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  %203 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %202, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %203, align 8
  %204 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  %205 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %204, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %205, align 8
  %206 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  br label %207

207:                                              ; preds = %186, %201
  %208 = phi %struct.sctp_nets* [ %188, %186 ], [ %206, %201 ]
  %209 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %208, i64 0, i32 47
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %218, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %208, i64 0, i32 3, i32 2
  %214 = load %struct.sctp_ifa*, %struct.sctp_ifa** %213, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %214) #12
  %215 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  %216 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %215, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %216, align 8
  %217 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  br label %218

218:                                              ; preds = %207, %212
  %219 = phi %struct.sctp_nets* [ %208, %207 ], [ %217, %212 ]
  %220 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %219, i64 0, i32 47
  store i8 0, i8* %220, align 1
  %221 = load %struct.sctp_nets*, %struct.sctp_nets** %187, align 8
  %222 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %221, i64 0, i32 37
  %223 = load i16, i16* %222, align 4
  %224 = and i16 %223, -2
  store i16 %224, i16* %222, align 4
  %225 = load i8*, i8** %178, align 8
  tail call void @free(i8* %225) #12
  %226 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %227

227:                                              ; preds = %181, %218
  store i8* null, i8** %178, align 8
  br label %228

228:                                              ; preds = %227, %157, %177, %140, %5, %132, %126, %118, %110, %102, %94, %86, %78, %70, %62, %54, %46, %38, %30, %22, %14, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_stop_association_timers(%struct.sctp_tcb*, i1 zeroext) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %4 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %3, align 8
  tail call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612754)
  tail call void @sctp_timer_stop(i32 13, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612755)
  br i1 %1, label %5, label %6

5:                                                ; preds = %2
  tail call void @sctp_timer_stop(i32 15, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612756)
  br label %6

6:                                                ; preds = %5, %2
  tail call void @sctp_timer_stop(i32 10, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612757)
  tail call void @sctp_timer_stop(i32 12, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612758)
  tail call void @sctp_timer_stop(i32 11, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612759)
  tail call void @sctp_timer_stop(i32 17, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 1610612760)
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %8 = load %struct.sctp_nets*, %struct.sctp_nets** %7, align 8
  %9 = icmp eq %struct.sctp_nets* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %struct.sctp_nets* [ %13, %10 ], [ %8, %6 ]
  tail call void @sctp_timer_stop(i32 1, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612761)
  tail call void @sctp_timer_stop(i32 2, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612762)
  tail call void @sctp_timer_stop(i32 4, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612763)
  tail call void @sctp_timer_stop(i32 6, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612764)
  tail call void @sctp_timer_stop(i32 9, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612765)
  tail call void @sctp_timer_stop(i32 8, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612766)
  tail call void @sctp_timer_stop(i32 5, %struct.sctp_inpcb* %4, %struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %11, i32 1610612767)
  %12 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %11, i64 0, i32 0, i32 0
  %13 = load %struct.sctp_nets*, %struct.sctp_nets** %12, align 8
  %14 = icmp eq %struct.sctp_nets* %13, null
  br i1 %14, label %15, label %10

15:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_get_prev_mtu(i32) local_unnamed_addr #0 {
  %2 = and i32 %0, -4
  %3 = icmp ult i32 %2, 69
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = icmp ugt i32 %2, 296
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = icmp ugt i32 %2, 508
  br i1 %7, label %14, label %8

8:                                                ; preds = %42, %40, %38, %36, %34, %32, %30, %28, %26, %24, %22, %20, %18, %16, %14, %6, %4
  %9 = phi i64 [ 0, %4 ], [ 1, %6 ], [ 2, %14 ], [ 3, %16 ], [ 4, %18 ], [ 5, %20 ], [ 6, %22 ], [ 7, %24 ], [ 8, %26 ], [ 9, %28 ], [ 10, %30 ], [ 11, %32 ], [ 12, %34 ], [ 13, %36 ], [ 14, %38 ], [ 15, %40 ], [ %44, %42 ]
  %10 = getelementptr inbounds [18 x i32], [18 x i32]* @sctp_mtu_sizes, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i32 [ %11, %8 ], [ %2, %1 ]
  ret i32 %13

14:                                               ; preds = %6
  %15 = icmp ugt i32 %2, 512
  br i1 %15, label %16, label %8

16:                                               ; preds = %14
  %17 = icmp ugt i32 %2, 544
  br i1 %17, label %18, label %8

18:                                               ; preds = %16
  %19 = icmp ugt i32 %2, 576
  br i1 %19, label %20, label %8

20:                                               ; preds = %18
  %21 = icmp ugt i32 %2, 1004
  br i1 %21, label %22, label %8

22:                                               ; preds = %20
  %23 = icmp ugt i32 %2, 1492
  br i1 %23, label %24, label %8

24:                                               ; preds = %22
  %25 = icmp ugt i32 %2, 1500
  br i1 %25, label %26, label %8

26:                                               ; preds = %24
  %27 = icmp ugt i32 %2, 1536
  br i1 %27, label %28, label %8

28:                                               ; preds = %26
  %29 = icmp ugt i32 %2, 2000
  br i1 %29, label %30, label %8

30:                                               ; preds = %28
  %31 = icmp ugt i32 %2, 2048
  br i1 %31, label %32, label %8

32:                                               ; preds = %30
  %33 = icmp ugt i32 %2, 4352
  br i1 %33, label %34, label %8

34:                                               ; preds = %32
  %35 = icmp ugt i32 %2, 4464
  br i1 %35, label %36, label %8

36:                                               ; preds = %34
  %37 = icmp ugt i32 %2, 8168
  br i1 %37, label %38, label %8

38:                                               ; preds = %36
  %39 = icmp ugt i32 %2, 17912
  br i1 %39, label %40, label %8

40:                                               ; preds = %38
  %41 = icmp ugt i32 %2, 32000
  br i1 %41, label %42, label %8

42:                                               ; preds = %40
  %43 = icmp ugt i32 %2, 65532
  %44 = select i1 %43, i64 17, i64 16
  br label %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_get_next_mtu(i32) local_unnamed_addr #0 {
  %2 = and i32 %0, -4
  %3 = icmp ult i32 %2, 68
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = icmp ult i32 %2, 296
  br i1 %5, label %6, label %8

6:                                                ; preds = %36, %34, %32, %30, %28, %26, %24, %22, %20, %18, %16, %14, %12, %10, %8, %4, %1
  %7 = phi i32 [ 68, %1 ], [ 296, %4 ], [ 508, %8 ], [ 512, %10 ], [ 544, %12 ], [ 576, %14 ], [ 1004, %16 ], [ 1492, %18 ], [ 1500, %20 ], [ 1536, %22 ], [ 2000, %24 ], [ 2048, %26 ], [ 4352, %28 ], [ 4464, %30 ], [ 8168, %32 ], [ 17912, %34 ], [ 32000, %36 ]
  ret i32 %7

8:                                                ; preds = %4
  %9 = icmp ult i32 %2, 508
  br i1 %9, label %6, label %10

10:                                               ; preds = %8
  %11 = icmp ult i32 %2, 512
  br i1 %11, label %6, label %12

12:                                               ; preds = %10
  %13 = icmp ult i32 %2, 544
  br i1 %13, label %6, label %14

14:                                               ; preds = %12
  %15 = icmp ult i32 %2, 576
  br i1 %15, label %6, label %16

16:                                               ; preds = %14
  %17 = icmp ult i32 %2, 1004
  br i1 %17, label %6, label %18

18:                                               ; preds = %16
  %19 = icmp ult i32 %2, 1492
  br i1 %19, label %6, label %20

20:                                               ; preds = %18
  %21 = icmp ult i32 %2, 1500
  br i1 %21, label %6, label %22

22:                                               ; preds = %20
  %23 = icmp ult i32 %2, 1536
  br i1 %23, label %6, label %24

24:                                               ; preds = %22
  %25 = icmp ult i32 %2, 2000
  br i1 %25, label %6, label %26

26:                                               ; preds = %24
  %27 = icmp ult i32 %2, 2048
  br i1 %27, label %6, label %28

28:                                               ; preds = %26
  %29 = icmp ult i32 %2, 4352
  br i1 %29, label %6, label %30

30:                                               ; preds = %28
  %31 = icmp ult i32 %2, 4464
  br i1 %31, label %6, label %32

32:                                               ; preds = %30
  %33 = icmp ult i32 %2, 8168
  br i1 %33, label %6, label %34

34:                                               ; preds = %32
  %35 = icmp ult i32 %2, 17912
  br i1 %35, label %6, label %36

36:                                               ; preds = %34
  %37 = icmp ult i32 %2, 32000
  br i1 %37, label %6, label %38

38:                                               ; preds = %36
  %39 = icmp ugt i32 %2, 65532
  %40 = select i1 %39, i32 %2, i32 65532
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_fill_random_store(%struct.sctp_pcb*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 33
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 25, i64 0
  %4 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 24
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 26, i64 0
  %7 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %3, i32 20, i8* %5, i32 4, i8* %6) #12
  %8 = load i32, i32* %4, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %4, align 4
  ret void
}

declare i32 @sctp_hmac(i16 zeroext, i8*, i32, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_select_initial_TSN(%struct.sctp_pcb*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 30
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 33
  br label %9

7:                                                ; preds = %1
  %8 = add i32 %3, 1
  store i32 %8, i32* %2, align 8
  br label %31

9:                                                ; preds = %5, %9
  %10 = load i32, i32* %6, align 4
  %11 = add i32 %10, 4
  %12 = icmp sgt i32 %11, 16
  %13 = select i1 %12, i32 0, i32 %11
  %14 = cmpxchg i32* %6, i32 %10, i32 %13 seq_cst seq_cst
  %15 = extractvalue { i32, i1 } %14, 1
  br i1 %15, label %16, label %9

16:                                               ; preds = %9
  %17 = sext i32 %10 to i64
  %18 = icmp eq i32 %13, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  store i32 0, i32* %6, align 4
  %20 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 25, i64 0
  %21 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 24
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 26, i64 0
  %24 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %20, i32 20, i8* %22, i32 4, i8* %23) #12
  %25 = load i32, i32* %21, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %21, align 4
  br label %27

27:                                               ; preds = %19, %16
  %28 = getelementptr inbounds %struct.sctp_pcb, %struct.sctp_pcb* %0, i64 0, i32 26, i64 %17
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %27, %7
  %32 = phi i32 [ %3, %7 ], [ %30, %27 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_select_a_tag(%struct.sctp_inpcb*, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #3 {
  %5 = alloca %struct.timeval, align 8
  %6 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = icmp ne i32 %3, 0
  %8 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  br i1 %7, label %9, label %11

9:                                                ; preds = %4
  %10 = call i32 @gettimeofday(%struct.timeval* nonnull %5, i8* null) #12
  br label %11

11:                                               ; preds = %9, %4
  %12 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 30
  %13 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 33
  %14 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 25, i64 0
  %15 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 24
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 0
  br label %18

18:                                               ; preds = %42, %11
  %19 = load i32, i32* %12, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = add i32 %19, 1
  store i32 %22, i32* %12, align 8
  br label %43

23:                                               ; preds = %18, %23
  %24 = load i32, i32* %13, align 4
  %25 = add i32 %24, 4
  %26 = icmp sgt i32 %25, 16
  %27 = select i1 %26, i32 0, i32 %25
  %28 = cmpxchg i32* %13, i32 %24, i32 %27 seq_cst seq_cst
  %29 = extractvalue { i32, i1 } %28, 1
  br i1 %29, label %30, label %23

30:                                               ; preds = %23
  %31 = sext i32 %24 to i64
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  store i32 0, i32* %13, align 4
  %34 = call i32 @sctp_hmac(i16 zeroext 1, i8* %14, i32 20, i8* %16, i32 4, i8* %17) #12
  %35 = load i32, i32* %15, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %15, align 4
  br label %37

37:                                               ; preds = %30, %33
  %38 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 %31
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %37, %45
  br label %18

43:                                               ; preds = %21, %37
  %44 = phi i32 [ %19, %21 ], [ %40, %37 ]
  br i1 %7, label %45, label %48

45:                                               ; preds = %43
  %46 = call i32 @sctp_is_vtag_good(i32 %44, i16 zeroext %1, i16 zeroext %2, %struct.timeval* nonnull %5) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %42, label %48

48:                                               ; preds = %45, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret i32 %44
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #5

declare i32 @sctp_is_vtag_good(i32, i16 zeroext, i16 zeroext, %struct.timeval*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_map_assoc_state(i32) local_unnamed_addr #0 {
  %2 = and i32 %0, 2048
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %1
  %5 = trunc i32 %0 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = and i32 %0, 127
  switch i32 %8, label %15 [
    i32 64, label %14
    i32 32, label %13
    i32 2, label %9
    i32 4, label %10
    i32 8, label %11
    i32 16, label %12
  ]

9:                                                ; preds = %7
  br label %15

10:                                               ; preds = %7
  br label %15

11:                                               ; preds = %7
  br label %15

12:                                               ; preds = %7
  br label %15

13:                                               ; preds = %7
  br label %15

14:                                               ; preds = %7
  br label %15

15:                                               ; preds = %7, %4, %1, %14, %13, %12, %11, %10, %9
  %16 = phi i32 [ %8, %14 ], [ %8, %13 ], [ %8, %12 ], [ %8, %11 ], [ %8, %10 ], [ %8, %9 ], [ 0, %1 ], [ 128, %4 ], [ 0, %7 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_init_asoc(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32, i16 zeroext) local_unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -128
  %10 = or i32 %9, 1
  store i32 %10, i32* %7, align 8
  %11 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 34
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 147
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 35
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 148
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 3, i64 3
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @hz, align 4
  %20 = icmp eq i32 %19, 1000
  br i1 %20, label %32, label %21

21:                                               ; preds = %5
  %22 = zext i32 %18 to i64
  %23 = mul nuw nsw i64 %22, 1000
  %24 = add nsw i32 %19, -1
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %23, %25
  %27 = sext i32 %19 to i64
  %28 = udiv i64 %26, %27
  %29 = icmp ult i64 %28, 4294967295
  %30 = select i1 %29, i64 %28, i64 4294967295
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %5, %21
  %33 = phi i32 [ %31, %21 ], [ %18, %5 ]
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 99
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 28
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 103
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 21
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 189
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 22
  %43 = load i8, i8* %42, align 8
  %44 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 161
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 23
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 162
  store i8 %46, i8* %47, align 4
  %48 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 24
  %49 = load i8, i8* %48, align 2
  %50 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  store i8 %49, i8* %50, align 1
  %51 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 26
  %52 = load i8, i8* %51, align 4
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 164
  store i8 %52, i8* %53, align 2
  %54 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 27
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 165
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 28
  %58 = load i8, i8* %57, align 2
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 166
  store i8 %58, i8* %59, align 8
  %60 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 29
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 167
  store i8 %61, i8* %62, align 1
  %63 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 25
  %64 = load i8, i8* %63, align 1
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  store i8 %64, i8* %65, align 2
  %66 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 192
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 16
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 77
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 8
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 36
  %74 = load i8, i8* %73, align 8
  %75 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 158
  store i8 %74, i8* %75, align 8
  %76 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 19
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 195
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 80
  store i32 0, i32* %79, align 4
  %80 = icmp eq i32 %2, 0
  br i1 %80, label %81, label %89

81:                                               ; preds = %32
  %82 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %83 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %82, align 8
  %84 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %83, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 12
  %87 = load i16, i16* %86, align 8
  %88 = tail call i32 @sctp_select_a_tag(%struct.sctp_inpcb* %0, i16 zeroext %85, i16 zeroext %87, i32 1)
  br label %89

89:                                               ; preds = %32, %81
  %90 = phi i32 [ %88, %81 ], [ %2, %32 ]
  %91 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 48
  store i32 %90, i32* %91, align 8
  %92 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 30
  %93 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 33
  %94 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 25, i64 0
  %95 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 24
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 0
  br label %98

98:                                               ; preds = %117, %89
  %99 = load i32, i32* %92, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = add i32 %99, 1
  store i32 %102, i32* %92, align 8
  br label %122

103:                                              ; preds = %98, %103
  %104 = load i32, i32* %93, align 4
  %105 = add i32 %104, 4
  %106 = icmp sgt i32 %105, 16
  %107 = select i1 %106, i32 0, i32 %105
  %108 = cmpxchg i32* %93, i32 %104, i32 %107 seq_cst seq_cst
  %109 = extractvalue { i32, i1 } %108, 1
  br i1 %109, label %110, label %103

110:                                              ; preds = %103
  %111 = sext i32 %104 to i64
  %112 = icmp eq i32 %107, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  store i32 0, i32* %93, align 4
  %114 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %94, i32 20, i8* %96, i32 4, i8* %97) #12
  %115 = load i32, i32* %95, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %95, align 4
  br label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 %111
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %98, label %122

122:                                              ; preds = %117, %101
  %123 = phi i32 [ %99, %101 ], [ %120, %117 ]
  %124 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 50
  store i32 %123, i32* %124, align 8
  br label %125

125:                                              ; preds = %144, %122
  %126 = load i32, i32* %92, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = add i32 %126, 1
  store i32 %129, i32* %92, align 8
  br label %149

130:                                              ; preds = %125, %130
  %131 = load i32, i32* %93, align 4
  %132 = add i32 %131, 4
  %133 = icmp sgt i32 %132, 16
  %134 = select i1 %133, i32 0, i32 %132
  %135 = cmpxchg i32* %93, i32 %131, i32 %134 seq_cst seq_cst
  %136 = extractvalue { i32, i1 } %135, 1
  br i1 %136, label %137, label %130

137:                                              ; preds = %130
  %138 = sext i32 %131 to i64
  %139 = icmp eq i32 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  store i32 0, i32* %93, align 4
  %141 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %94, i32 20, i8* %96, i32 4, i8* %97) #12
  %142 = load i32, i32* %95, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %95, align 4
  br label %144

144:                                              ; preds = %140, %137
  %145 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 %138
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %125, label %149

149:                                              ; preds = %144, %128
  %150 = phi i32 [ %126, %128 ], [ %147, %144 ]
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 51
  store i32 %150, i32* %151, align 4
  %152 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 41
  store i32 %3, i32* %152, align 4
  %153 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 185
  store i8 0, i8* %154, align 1
  %155 = load i32, i32* %92, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %149
  %158 = add i32 %155, 1
  store i32 %158, i32* %92, align 8
  br label %177

159:                                              ; preds = %149, %159
  %160 = load i32, i32* %93, align 4
  %161 = add i32 %160, 4
  %162 = icmp sgt i32 %161, 16
  %163 = select i1 %162, i32 0, i32 %161
  %164 = cmpxchg i32* %93, i32 %160, i32 %163 seq_cst seq_cst
  %165 = extractvalue { i32, i1 } %164, 1
  br i1 %165, label %166, label %159

166:                                              ; preds = %159
  %167 = sext i32 %160 to i64
  %168 = icmp eq i32 %163, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  store i32 0, i32* %93, align 4
  %170 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %94, i32 20, i8* %96, i32 4, i8* %97) #12
  %171 = load i32, i32* %95, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %95, align 4
  br label %173

173:                                              ; preds = %169, %166
  %174 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 26, i64 %167
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 4
  br label %177

177:                                              ; preds = %157, %173
  %178 = phi i32 [ %155, %157 ], [ %176, %173 ]
  %179 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 56
  store i32 %178, i32* %179, align 8
  %180 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 57
  store i32 %178, i32* %180, align 4
  %181 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 46
  store i32 %178, i32* %181, align 8
  %182 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 43
  store i32 %178, i32* %182, align 4
  %183 = add i32 %178, -1
  %184 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 44
  store i32 %183, i32* %184, align 8
  %185 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 171
  store i8 0, i8* %185, align 1
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  store i32 0, i32* %186, align 4
  %187 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 32
  store %struct.sctp_nets* null, %struct.sctp_nets** %187, align 8
  %188 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 55
  store i32 %183, i32* %188, align 4
  %189 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 58
  store i32 %183, i32* %189, align 8
  %190 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 45
  store i32 %183, i32* %190, align 4
  %191 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 47
  store i32 %178, i32* %191, align 4
  %192 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 7
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 110
  store i32 %193, i32* %194, align 8
  %195 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 6
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  store i32 %196, i32* %197, align 4
  %198 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 17
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 123
  store i32 %199, i32* %200, align 4
  %201 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 18
  %202 = load i16, i16* %201, align 8
  %203 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 132
  store i16 %202, i16* %203, align 8
  %204 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 19
  %205 = load i16, i16* %204, align 2
  %206 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  store i16 %205, i16* %206, align 2
  %207 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 20
  %208 = load i16, i16* %207, align 4
  %209 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 134
  store i16 %208, i16* %209, align 4
  %210 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 21
  %211 = load i16, i16* %210, align 2
  %212 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 135
  store i16 %211, i16* %212, align 2
  %213 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 143
  store i16 0, i16* %213, align 2
  %214 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 190
  store i8 0, i8* %214, align 2
  %215 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 18
  %216 = load i32, i32* %215, align 8
  %217 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  store i32 %216, i32* %217, align 8
  %218 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 20
  %219 = load i8, i8* %218, align 8
  %220 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 170
  store i8 %219, i8* %220, align 4
  %221 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 6
  %222 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 30
  %223 = bitcast %struct.sctp_nonpad_sndrcvinfo* %221 to i8*
  %224 = bitcast %struct.sctp_nonpad_sndrcvinfo* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 36, i1 false)
  %225 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 3, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = load i32, i32* @hz, align 4
  %228 = icmp eq i32 %227, 1000
  br i1 %228, label %240, label %229

229:                                              ; preds = %177
  %230 = zext i32 %226 to i64
  %231 = mul nuw nsw i64 %230, 1000
  %232 = add nsw i32 %227, -1
  %233 = sext i32 %232 to i64
  %234 = add nsw i64 %231, %233
  %235 = sext i32 %227 to i64
  %236 = udiv i64 %234, %235
  %237 = icmp ult i64 %236, 4294967295
  %238 = select i1 %237, i64 %236, i64 4294967295
  %239 = trunc i64 %238 to i32
  br label %240

240:                                              ; preds = %177, %229
  %241 = phi i32 [ %239, %229 ], [ %226, %177 ]
  %242 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 104
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 8
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 106
  store i32 %244, i32* %245, align 4
  %246 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 82
  store i32 0, i32* %246, align 4
  %247 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  store i32 0, i32* %247, align 4
  %248 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %249 = load i32, i32* %248, align 8
  %250 = and i32 %249, 67108864
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172
  %253 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 1
  br i1 %251, label %263, label %254

254:                                              ; preds = %240
  store i8 1, i8* %253, align 1
  %255 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 6
  %256 = load i32, i32* %255, align 4
  %257 = trunc i32 %256 to i16
  %258 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %252, i64 0, i32 0
  %259 = lshr i16 %257, 15
  %260 = trunc i16 %259 to i8
  %261 = xor i8 %260, 1
  store i8 %261, i8* %258, align 2
  %262 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  store i8 0, i8* %262, align 2
  br label %271

263:                                              ; preds = %240
  store i8 0, i8* %253, align 1
  %264 = load i32, i32* %248, align 8
  %265 = icmp slt i32 %264, 0
  %266 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  br i1 %265, label %267, label %269

267:                                              ; preds = %263
  store i8 1, i8* %266, align 2
  %268 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %252, i64 0, i32 0
  store i8 0, i8* %268, align 2
  br label %271

269:                                              ; preds = %263
  store i8 0, i8* %266, align 2
  %270 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %252, i64 0, i32 0
  store i8 1, i8* %270, align 2
  br label %271

271:                                              ; preds = %267, %269, %254
  %272 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %273 = load %struct.socket*, %struct.socket** %272, align 8
  %274 = getelementptr inbounds %struct.socket, %struct.socket* %273, i64 0, i32 21, i32 9
  %275 = load i32, i32* %274, align 8
  %276 = icmp ugt i32 %275, 4096
  %277 = select i1 %276, i32 %275, i32 4096
  %278 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 75
  store i32 %277, i32* %278, align 8
  %279 = load %struct.socket*, %struct.socket** %272, align 8
  %280 = getelementptr inbounds %struct.socket, %struct.socket* %279, i64 0, i32 21, i32 9
  %281 = load i32, i32* %280, align 8
  %282 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 74
  store i32 %281, i32* %282, align 4
  %283 = load i32, i32* %67, align 8
  %284 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 53
  store i32 %283, i32* %284, align 4
  %285 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 4
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  store i32 %286, i32* %287, align 8
  %288 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 5
  %289 = load i32, i32* %288, align 8
  %290 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  store i32 %289, i32* %290, align 4
  %291 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 141
  store i16 0, i16* %291, align 2
  %292 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 142
  store i16 0, i16* %292, align 4
  %293 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 144
  store i8 0, i8* %293, align 8
  %294 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 146
  store i8 1, i8* %294, align 2
  %295 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %295, align 8
  %296 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 0
  store %struct.sctp_nets* null, %struct.sctp_nets** %296, align 8
  %297 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 1
  store %struct.sctp_nets** %296, %struct.sctp_nets*** %297, align 8
  %298 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 36, i32 0
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %298, align 8
  %299 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 36, i32 1
  store %struct.sctp_queued_to_read** %298, %struct.sctp_queued_to_read*** %299, align 8
  %300 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 24, i32 0
  store %struct.sctp_asconf_ack* null, %struct.sctp_asconf_ack** %300, align 8
  %301 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 24, i32 1
  store %struct.sctp_asconf_ack** %300, %struct.sctp_asconf_ack*** %301, align 8
  %302 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 157
  store i8 4, i8* %302, align 1
  %303 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 29
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 100
  store i32 %304, i32* %305, align 4
  %306 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 11
  %307 = load i32, i32* %306, align 8
  %308 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 38
  store i32 %307, i32* %308, align 8
  %309 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 37
  %310 = load i32, i32* %306, align 8
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds [0 x %struct.sctp_cc_functions], [0 x %struct.sctp_cc_functions]* @sctp_cc_functions, i64 0, i64 %311
  %313 = bitcast %struct.sctp_cc_functions* %309 to i8*
  %314 = bitcast %struct.sctp_cc_functions* %312 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %313, i8* align 8 %314, i64 112, i1 false)
  %315 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 12
  %316 = load i32, i32* %315, align 4
  %317 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 40
  store i32 %316, i32* %317, align 8
  %318 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39
  %319 = load i32, i32* %315, align 4
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [0 x %struct.sctp_ss_functions], [0 x %struct.sctp_ss_functions]* @sctp_ss_functions, i64 0, i64 %320
  %322 = bitcast %struct.sctp_ss_functions* %318 to i8*
  %323 = bitcast %struct.sctp_ss_functions* %321 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %322, i8* align 8 %323, i64 96, i1 false)
  %324 = zext i16 %4 to i32
  %325 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 101
  store i32 %324, i32* %325, align 8
  %326 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 129
  store i16 %4, i16* %326, align 2
  %327 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 130
  store i16 %4, i16* %327, align 4
  %328 = zext i16 %4 to i64
  %329 = shl nuw nsw i64 %328, 6
  %330 = tail call noalias i8* @malloc(i64 %329) #12
  %331 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 28
  %332 = bitcast %struct.sctp_stream_out** %331 to i8**
  store i8* %330, i8** %332, align 8
  %333 = icmp eq i8* %330, null
  %334 = bitcast i8* %330 to %struct.sctp_stream_out*
  br i1 %333, label %426, label %335

335:                                              ; preds = %271
  %336 = icmp eq i16 %4, 0
  br i1 %336, label %374, label %337

337:                                              ; preds = %335
  %338 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 2
  br label %339

339:                                              ; preds = %371, %337
  %340 = phi %struct.sctp_stream_out* [ %334, %337 ], [ %373, %371 ]
  %341 = phi i64 [ 0, %337 ], [ %367, %371 ]
  %342 = phi i32 [ 0, %337 ], [ %372, %371 ]
  %343 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %340, i64 %341, i32 0, i32 0
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %343, align 8
  %344 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %345 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %344, i64 %341, i32 0, i32 0
  %346 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %344, i64 %341, i32 0, i32 1
  store %struct.sctp_stream_queue_pending** %345, %struct.sctp_stream_queue_pending*** %346, align 8
  %347 = load void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)** %338, align 8
  %348 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %349 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %348, i64 %341
  tail call void %347(%struct.sctp_tcb* %1, %struct.sctp_stream_out* %349, %struct.sctp_stream_out* null) #12
  %350 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %351 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %350, i64 %341, i32 2
  store i32 0, i32* %351, align 8
  %352 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %353 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %352, i64 %341, i32 4, i64 0
  store i32 0, i32* %353, align 8
  %354 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %355 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %354, i64 %341, i32 3, i64 0
  store i32 0, i32* %355, align 4
  %356 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %357 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %356, i64 %341, i32 5
  store i32 0, i32* %357, align 4
  %358 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %359 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %358, i64 %341, i32 6
  store i32 0, i32* %359, align 8
  %360 = trunc i32 %342 to i16
  %361 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %362 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %361, i64 %341, i32 7
  store i16 %360, i16* %362, align 4
  %363 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %364 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %363, i64 %341, i32 8
  store i8 0, i8* %364, align 2
  %365 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  %366 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %365, i64 %341, i32 9
  store i8 1, i8* %366, align 1
  %367 = add nuw nsw i64 %341, 1
  %368 = load i16, i16* %326, align 2
  %369 = zext i16 %368 to i64
  %370 = icmp ult i64 %367, %369
  br i1 %370, label %371, label %374

371:                                              ; preds = %339
  %372 = add nuw nsw i32 %342, 1
  %373 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %331, align 8
  br label %339

374:                                              ; preds = %339, %335
  %375 = getelementptr inbounds %struct.sctp_ss_functions, %struct.sctp_ss_functions* %318, i64 0, i32 0
  %376 = load void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32)** %375, align 8
  tail call void %376(%struct.sctp_tcb* %1, %struct.sctp_association* %6, i32 0) #12
  %377 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 136
  store i16 16, i16* %377, align 8
  %378 = tail call noalias i8* @malloc(i64 16) #12
  %379 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 29
  store i8* %378, i8** %379, align 8
  %380 = icmp eq i8* %378, null
  br i1 %380, label %381, label %383

381:                                              ; preds = %374
  %382 = load i8*, i8** %332, align 8
  tail call void @free(i8* %382) #12
  br label %426

383:                                              ; preds = %374
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %378, i8 0, i64 16, i1 false)
  %384 = tail call noalias i8* @malloc(i64 16) #12
  %385 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 62
  store i8* %384, i8** %385, align 8
  %386 = icmp eq i8* %384, null
  br i1 %386, label %387, label %390

387:                                              ; preds = %383
  %388 = load i8*, i8** %332, align 8
  tail call void @free(i8* %388) #12
  %389 = load i8*, i8** %379, align 8
  tail call void @free(i8* %389) #12
  br label %426

390:                                              ; preds = %383
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %384, i8 0, i64 16, i1 false)
  %391 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 17, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %391, align 8
  %392 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 17, i32 1
  store %struct.sctp_tmit_chunk** %391, %struct.sctp_tmit_chunk*** %392, align 8
  %393 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %393, align 8
  %394 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %393, %struct.sctp_tmit_chunk*** %394, align 8
  %395 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 19, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %395, align 8
  %396 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 19, i32 1
  store %struct.sctp_tmit_chunk** %395, %struct.sctp_tmit_chunk*** %396, align 8
  %397 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %397, align 8
  %398 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 1
  store %struct.sctp_tmit_chunk** %397, %struct.sctp_tmit_chunk*** %398, align 8
  %399 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %399, align 8
  %400 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 1
  store %struct.sctp_tmit_chunk** %399, %struct.sctp_tmit_chunk*** %400, align 8
  %401 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 35, i32 0
  store %struct.sctp_stream_reset_list* null, %struct.sctp_stream_reset_list** %401, align 8
  %402 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 35, i32 1
  store %struct.sctp_stream_reset_list** %401, %struct.sctp_stream_reset_list*** %402, align 8
  %403 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 23
  %404 = load i16, i16* %403, align 2
  %405 = zext i16 %404 to i32
  %406 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 102
  store i32 %405, i32* %406, align 4
  %407 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 1, i32 0
  store %struct.sctp_asconf_addr* null, %struct.sctp_asconf_addr** %407, align 8
  %408 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 1, i32 1
  store %struct.sctp_asconf_addr** %407, %struct.sctp_asconf_addr*** %408, align 8
  %409 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 3
  %410 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 118, i32 0
  %411 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 197
  store i32 0, i32* %411, align 8
  %412 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 39
  %413 = bitcast %struct.sctp_shared_key** %410 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 16, i1 false)
  %414 = bitcast %struct.sctp_key** %409 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %414, i8 0, i64 22, i1 false)
  %415 = load i16, i16* %412, align 4
  %416 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 196
  store i16 %415, i16* %416, align 4
  %417 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 198
  %418 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 205
  %419 = bitcast i32* %417 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %419, i8 0, i64 28, i1 false)
  %420 = tail call i32 @gettimeofday(%struct.timeval* %418, i8* null) #12
  %421 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 206
  %422 = bitcast %struct.timeval* %421 to i8*
  %423 = bitcast %struct.timeval* %418 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %422, i8* align 8 %423, i64 16, i1 false)
  %424 = getelementptr %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 207, i64 0
  %425 = bitcast i64* %424 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %425, i8 0, i64 64, i1 false)
  br label %426

426:                                              ; preds = %390, %271, %387, %381
  %427 = phi i32 [ 12, %381 ], [ 12, %387 ], [ 12, %271 ], [ 0, %390 ]
  ret i32 %427
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_set_state(%struct.sctp_tcb* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -128
  %6 = or i32 %5, %1
  switch i32 %1, label %9 [
    i32 64, label %7
    i32 32, label %7
    i32 16, label %7
  ]

7:                                                ; preds = %2, %2, %2
  %8 = and i32 %6, -129
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ %8, %7 ], [ %6, %2 ]
  store i32 %10, i32* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_print_mapping_array(%struct.sctp_association* nocapture readonly) local_unnamed_addr #3 {
  %2 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %3 = icmp eq void (i8*, ...)* %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 136
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 60
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 59
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 61
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 63
  %15 = load i32, i32* %14, align 8
  tail call void (i8*, ...) %2(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13, i32 %15) #12
  br label %16

16:                                               ; preds = %1, %4
  %17 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 136
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 29
  %21 = zext i16 %18 to i64
  br label %22

22:                                               ; preds = %25, %16
  %23 = phi i64 [ %32, %25 ], [ %21, %16 ]
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %25, label %33

25:                                               ; preds = %22
  %26 = load i8*, i8** %20, align 8
  %27 = add i64 %23, 4294967295
  %28 = and i64 %27, 4294967295
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  %32 = add nsw i64 %23, -1
  br i1 %31, label %22, label %33

33:                                               ; preds = %25, %22
  %34 = trunc i64 %23 to i32
  %35 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %36 = icmp eq void (i8*, ...)* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = sub i32 %19, %34
  tail call void (i8*, ...) %35(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 %38) #12
  br label %39

39:                                               ; preds = %33, %37
  %40 = icmp eq i32 %34, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %39
  %42 = and i64 %23, 4294967295
  br label %43

43:                                               ; preds = %58, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %58 ]
  %45 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %46 = icmp eq void (i8*, ...)* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = add nuw nsw i64 %44, 1
  br label %58

49:                                               ; preds = %43
  %50 = load i8*, i8** %20, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = add nuw nsw i64 %44, 1
  %55 = and i64 %54, 15
  %56 = icmp eq i64 %55, 0
  %57 = select i1 %56, i32 10, i32 32
  tail call void (i8*, ...) %45(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %53, i32 %57) #12
  br label %58

58:                                               ; preds = %47, %49
  %59 = phi i64 [ %48, %47 ], [ %54, %49 ]
  %60 = icmp eq i64 %59, %42
  br i1 %60, label %61, label %43

61:                                               ; preds = %58
  %62 = and i32 %34, 15
  %63 = icmp ne i32 %62, 0
  %64 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %65 = icmp ne void (i8*, ...)* %64, null
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %68

67:                                               ; preds = %61
  tail call void (i8*, ...) %64(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %68

68:                                               ; preds = %39, %67, %61
  %69 = load i16, i16* %17, align 8
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 62
  %72 = zext i16 %69 to i64
  br label %73

73:                                               ; preds = %76, %68
  %74 = phi i64 [ %83, %76 ], [ %72, %68 ]
  %75 = icmp ugt i64 %74, 1
  br i1 %75, label %76, label %84

76:                                               ; preds = %73
  %77 = load i8*, i8** %71, align 8
  %78 = add i64 %74, 4294967295
  %79 = and i64 %78, 4294967295
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  %83 = add nsw i64 %74, -1
  br i1 %82, label %73, label %84

84:                                               ; preds = %76, %73
  %85 = trunc i64 %74 to i32
  %86 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %87 = icmp eq void (i8*, ...)* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = sub i32 %70, %85
  tail call void (i8*, ...) %86(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i32 %89) #12
  br label %90

90:                                               ; preds = %84, %88
  %91 = icmp eq i32 %85, 0
  br i1 %91, label %119, label %92

92:                                               ; preds = %90
  %93 = and i64 %74, 4294967295
  br label %94

94:                                               ; preds = %109, %92
  %95 = phi i64 [ 0, %92 ], [ %110, %109 ]
  %96 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %97 = icmp eq void (i8*, ...)* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = add nuw nsw i64 %95, 1
  br label %109

100:                                              ; preds = %94
  %101 = load i8*, i8** %71, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %95
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = add nuw nsw i64 %95, 1
  %106 = and i64 %105, 15
  %107 = icmp eq i64 %106, 0
  %108 = select i1 %107, i32 10, i32 32
  tail call void (i8*, ...) %96(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %104, i32 %108) #12
  br label %109

109:                                              ; preds = %98, %100
  %110 = phi i64 [ %99, %98 ], [ %105, %100 ]
  %111 = icmp eq i64 %110, %93
  br i1 %111, label %112, label %94

112:                                              ; preds = %109
  %113 = and i32 %85, 15
  %114 = icmp ne i32 %113, 0
  %115 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %116 = icmp ne void (i8*, ...)* %115, null
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %112
  tail call void (i8*, ...) %115(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %119

119:                                              ; preds = %90, %118, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_expand_mapping_array(%struct.sctp_association* nocapture, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 136
  %4 = load i16, i16* %3, align 8
  %5 = zext i16 %4 to i32
  %6 = add i32 %1, 7
  %7 = lshr i32 %6, 3
  %8 = add nuw nsw i32 %7, 32
  %9 = add nuw nsw i32 %8, %5
  %10 = zext i32 %9 to i64
  %11 = tail call noalias i8* @malloc(i64 %10) #12
  %12 = tail call noalias i8* @malloc(i64 %10) #12
  %13 = icmp eq i8* %11, null
  %14 = icmp eq i8* %12, null
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %2
  %17 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %18 = icmp eq void (i8*, ...)* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void (i8*, ...) %17(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i32 %9) #12
  br label %20

20:                                               ; preds = %16, %19
  br i1 %13, label %22, label %21

21:                                               ; preds = %20
  tail call void @free(i8* nonnull %11) #12
  br label %22

22:                                               ; preds = %20, %21
  br i1 %14, label %32, label %23

23:                                               ; preds = %22
  tail call void @free(i8* nonnull %12) #12
  br label %32

24:                                               ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 0, i64 %10, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 %10, i1 false)
  %25 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 29
  %26 = load i8*, i8** %25, align 8
  %27 = zext i16 %4 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 %26, i64 %27, i1 false)
  %28 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 62
  %29 = load i8*, i8** %28, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %29, i64 %27, i1 false)
  tail call void @free(i8* %26) #12
  %30 = load i8*, i8** %28, align 8
  tail call void @free(i8* %30) #12
  store i8* %11, i8** %25, align 8
  store i8* %12, i8** %28, align 8
  %31 = trunc i32 %9 to i16
  store i16 %31, i16* %3, align 8
  br label %32

32:                                               ; preds = %23, %22, %24
  %33 = phi i32 [ 0, %24 ], [ -1, %22 ], [ -1, %23 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_iterator_worker() local_unnamed_addr #3 {
  store i32 1, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 6), align 8
  %1 = load %struct.sctp_iterator*, %struct.sctp_iterator** getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 4, i32 0), align 8
  %2 = icmp eq %struct.sctp_iterator* %1, null
  br i1 %2, label %278, label %3

3:                                                ; preds = %0, %273
  %4 = phi %struct.sctp_iterator* [ %276, %273 ], [ %1, %0 ]
  %5 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 0, i32 0
  %6 = load %struct.sctp_iterator*, %struct.sctp_iterator** %5, align 8
  %7 = icmp eq %struct.sctp_iterator* %6, null
  %8 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 0, i32 1
  %9 = bitcast %struct.sctp_iterator*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %6, i64 0, i32 0, i32 1
  %12 = bitcast %struct.sctp_iterator*** %11 to i64*
  %13 = select i1 %7, i64* bitcast (%struct.sctp_iterator*** getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 4, i32 1) to i64*), i64* %12
  store i64 %10, i64* %13, align 8
  %14 = bitcast %struct.sctp_iterator* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.sctp_iterator*** %8 to i64**
  %17 = load i64*, i64** %16, align 8
  store i64 %15, i64* %17, align 8
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 0)) #12
  %19 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 22)) #12
  %20 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 1)) #12
  store %struct.sctp_iterator* %4, %struct.sctp_iterator** getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 5), align 8
  %21 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 2
  %22 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %23 = icmp eq %struct.sctp_inpcb* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %22, i64 0, i32 34
  %26 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #12
  %27 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %28 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %27, i64 0, i32 37
  %29 = atomicrmw add i32* %28, i32 -1 seq_cst
  %30 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %31 = icmp eq %struct.sctp_inpcb* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 11
  %34 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 12
  %35 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 14
  %36 = bitcast %struct.sctp_inpcb** %21 to i64*
  %37 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 3
  %38 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 16
  %39 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 6
  %40 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 9
  %41 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 10
  %42 = bitcast %struct.sctp_tcb** %37 to i64*
  %43 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 13
  %44 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 5
  %45 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 15
  %46 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 7
  br label %58

47:                                               ; preds = %266, %94, %179, %264, %192, %91, %24, %3
  store %struct.sctp_iterator* null, %struct.sctp_iterator** getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 5), align 8
  %48 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 1)) #12
  %49 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 22)) #12
  %50 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 8
  %51 = load void (i8*, i32)*, void (i8*, i32)** %50, align 8
  %52 = icmp eq void (i8*, i32)* %51, null
  br i1 %52, label %273, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 9
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %struct.sctp_iterator, %struct.sctp_iterator* %4, i64 0, i32 10
  %57 = load i32, i32* %56, align 8
  tail call void %51(i8* %55, i32 %57) #12
  br label %273

58:                                               ; preds = %266, %32
  %59 = phi %struct.sctp_inpcb* [ %272, %266 ], [ %30, %32 ]
  %60 = phi i32 [ %259, %266 ], [ 0, %32 ]
  %61 = phi i32 [ %260, %266 ], [ 0, %32 ]
  %62 = phi i1 [ true, %266 ], [ false, %32 ]
  br i1 %62, label %63, label %67

63:                                               ; preds = %58, %94
  %64 = phi %struct.sctp_inpcb* [ %100, %94 ], [ %59, %58 ]
  %65 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %64, i64 0, i32 34
  %66 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %65) #12
  br label %67

67:                                               ; preds = %63, %58
  %68 = load i32, i32* %33, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %67
  %71 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %72 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %71, i64 0, i32 9
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, %68
  %75 = icmp eq i32 %74, %68
  br i1 %75, label %76, label %86

76:                                               ; preds = %70, %67
  %77 = load i32, i32* %34, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %102, label %79

79:                                               ; preds = %76
  %80 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %81 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %80, i64 0, i32 8
  %82 = load i64, i64* %81, align 8
  %83 = zext i32 %77 to i64
  %84 = and i64 %82, %83
  %85 = icmp eq i64 %84, %83
  br i1 %85, label %102, label %86

86:                                               ; preds = %79, %70
  %87 = phi %struct.sctp_inpcb* [ %80, %79 ], [ %71, %70 ]
  %88 = load i32, i32* %35, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %87, i64 0, i32 34
  %93 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %92) #12
  br label %47

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %87, i64 0, i32 2, i32 0
  %96 = bitcast %struct.sctp_inpcb** %95 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %36, align 8
  store %struct.sctp_tcb* null, %struct.sctp_tcb** %37, align 8
  %98 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %87, i64 0, i32 34
  %99 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %98) #12
  %100 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %101 = icmp eq %struct.sctp_inpcb* %100, null
  br i1 %101, label %47, label %63

102:                                              ; preds = %79, %76
  %103 = load i8, i8* %38, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %115

105:                                              ; preds = %102
  %106 = load i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)** %39, align 8
  %107 = icmp eq i32 (%struct.sctp_inpcb*, i8*, i32)* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %105
  %109 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %110 = load i8*, i8** %40, align 8
  %111 = load i32, i32* %41, align 8
  %112 = tail call i32 %106(%struct.sctp_inpcb* %109, i8* %110, i32 %111) #12
  br label %113

113:                                              ; preds = %108, %105
  %114 = phi i32 [ %112, %108 ], [ %61, %105 ]
  store i8 1, i8* %38, align 1
  br label %115

115:                                              ; preds = %113, %102
  %116 = phi i32 [ %114, %113 ], [ %61, %102 ]
  %117 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %118 = icmp eq %struct.sctp_tcb* %117, null
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %121 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %120, i64 0, i32 14, i32 0
  %122 = bitcast %struct.sctp_tcb** %121 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %42, align 8
  %124 = inttoptr i64 %123 to %struct.sctp_tcb*
  br label %125

125:                                              ; preds = %119, %115
  %126 = phi %struct.sctp_tcb* [ %124, %119 ], [ %117, %115 ]
  %127 = icmp ne i32 %116, 0
  %128 = icmp eq %struct.sctp_tcb* %126, null
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %143

130:                                              ; preds = %125
  %131 = load i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)** %46, align 8
  %132 = icmp eq i32 (%struct.sctp_inpcb*, i8*, i32)* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %130
  %134 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %135 = load i8*, i8** %40, align 8
  %136 = load i32, i32* %41, align 8
  %137 = tail call i32 %131(%struct.sctp_inpcb* %134, i8* %135, i32 %136) #12
  br label %138

138:                                              ; preds = %133, %130
  %139 = phi i32 [ %137, %133 ], [ %116, %130 ]
  %140 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %141 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %140, i64 0, i32 34
  %142 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %141) #12
  br label %258

143:                                              ; preds = %125, %249
  %144 = phi i32 [ %251, %249 ], [ 0, %125 ]
  %145 = phi i32 [ %233, %249 ], [ %60, %125 ]
  %146 = phi %struct.sctp_tcb* [ %250, %249 ], [ %126, %125 ]
  %147 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %146, i64 0, i32 14
  %148 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %147) #12
  %149 = load i32, i32* %43, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %143
  %152 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %153 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %152, i64 0, i32 7, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, %149
  %156 = icmp eq i32 %155, %149
  br i1 %156, label %157, label %231

157:                                              ; preds = %151, %143
  %158 = add nsw i32 %145, 1
  %159 = icmp sgt i32 %145, 19
  br i1 %159, label %160, label %217

160:                                              ; preds = %157
  %161 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %162 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %161, i64 0, i32 7, i32 120
  %163 = atomicrmw add i32* %162, i32 1 seq_cst
  %164 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %165 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %164, i64 0, i32 14
  %166 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %165) #12
  %167 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %168 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %167, i64 0, i32 37
  %169 = atomicrmw add i32* %168, i32 1 seq_cst
  %170 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %171 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %170, i64 0, i32 34
  %172 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %171) #12
  %173 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 1)) #12
  %174 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 22)) #12
  %175 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 22)) #12
  %176 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 1)) #12
  %177 = load i32, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 7), align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %204, label %179

179:                                              ; preds = %160
  %180 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %181 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %180, i64 0, i32 37
  %182 = atomicrmw add i32* %181, i32 -1 seq_cst
  %183 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %184 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %183, i64 0, i32 7, i32 120
  %185 = atomicrmw add i32* %184, i32 -1 seq_cst
  %186 = load i32, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 7), align 4
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %47

189:                                              ; preds = %179
  %190 = and i32 %186, 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = and i32 %186, -5
  store i32 %193, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 7), align 4
  br label %47

194:                                              ; preds = %189
  %195 = and i32 %186, 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %194
  %198 = and i32 %186, -9
  store i32 %198, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 7), align 4
  br label %258

199:                                              ; preds = %194
  %200 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %201 = icmp eq void (i8*, ...)* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  tail call void (i8*, ...) %200(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 %186) #12
  br label %203

203:                                              ; preds = %202, %199
  store i32 0, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 7), align 4
  br label %204

204:                                              ; preds = %203, %160
  %205 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %206 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %205, i64 0, i32 34
  %207 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %206) #12
  %208 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %209 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %208, i64 0, i32 37
  %210 = atomicrmw add i32* %209, i32 -1 seq_cst
  %211 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %212 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %211, i64 0, i32 14
  %213 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %212) #12
  %214 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %215 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %214, i64 0, i32 7, i32 120
  %216 = atomicrmw add i32* %215, i32 -1 seq_cst
  br label %217

217:                                              ; preds = %204, %157
  %218 = phi i32 [ 0, %204 ], [ %158, %157 ]
  %219 = load void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)** %44, align 8
  %220 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %221 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %222 = load i8*, i8** %40, align 8
  %223 = load i32, i32* %41, align 8
  tail call void %219(%struct.sctp_inpcb* %220, %struct.sctp_tcb* %221, i8* %222, i32 %223) #12
  %224 = load i8, i8* %45, align 4
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %217
  %227 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %228 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %227, %struct.sctp_tcb* %228, i32 1, i32 0) #12
  br label %229

229:                                              ; preds = %226, %217
  %230 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  br label %231

231:                                              ; preds = %151, %229
  %232 = phi %struct.sctp_tcb* [ %230, %229 ], [ %152, %151 ]
  %233 = phi i32 [ %218, %229 ], [ %145, %151 ]
  %234 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %232, i64 0, i32 14
  %235 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %234) #12
  %236 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  %237 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %236, i64 0, i32 3, i32 0
  %238 = load %struct.sctp_tcb*, %struct.sctp_tcb** %237, align 8
  store %struct.sctp_tcb* %238, %struct.sctp_tcb** %37, align 8
  %239 = icmp eq %struct.sctp_tcb* %238, null
  br i1 %239, label %240, label %249

240:                                              ; preds = %231
  %241 = load i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)** %46, align 8
  %242 = icmp eq i32 (%struct.sctp_inpcb*, i8*, i32)* %241, null
  br i1 %242, label %253, label %243

243:                                              ; preds = %240
  %244 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %245 = load i8*, i8** %40, align 8
  %246 = load i32, i32* %41, align 8
  %247 = tail call i32 %241(%struct.sctp_inpcb* %244, i8* %245, i32 %246) #12
  %248 = load %struct.sctp_tcb*, %struct.sctp_tcb** %37, align 8
  br label %249

249:                                              ; preds = %243, %231
  %250 = phi %struct.sctp_tcb* [ %248, %243 ], [ %238, %231 ]
  %251 = phi i32 [ %247, %243 ], [ %144, %231 ]
  %252 = icmp eq %struct.sctp_tcb* %250, null
  br i1 %252, label %253, label %143

253:                                              ; preds = %249, %240
  %254 = phi i32 [ %251, %249 ], [ %144, %240 ]
  %255 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %256 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %255, i64 0, i32 34
  %257 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %256) #12
  br label %258

258:                                              ; preds = %253, %197, %138
  %259 = phi i32 [ %60, %138 ], [ %158, %197 ], [ %233, %253 ]
  %260 = phi i32 [ %139, %138 ], [ %144, %197 ], [ %254, %253 ]
  store i8 0, i8* %38, align 1
  %261 = load i32, i32* %35, align 8
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %258
  %265 = bitcast %struct.sctp_inpcb** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 16, i1 false) #12
  br label %47

266:                                              ; preds = %258
  %267 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %268 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %267, i64 0, i32 2, i32 0
  %269 = bitcast %struct.sctp_inpcb** %268 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %36, align 8
  store %struct.sctp_tcb* null, %struct.sctp_tcb** %37, align 8
  %271 = icmp eq i64 %270, 0
  %272 = inttoptr i64 %270 to %struct.sctp_inpcb*
  br i1 %271, label %47, label %58

273:                                              ; preds = %47, %53
  %274 = bitcast %struct.sctp_iterator* %4 to i8*
  tail call void @free(i8* %274) #12
  %275 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 0)) #12
  %276 = load %struct.sctp_iterator*, %struct.sctp_iterator** getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 4, i32 0), align 8
  %277 = icmp eq %struct.sctp_iterator* %276, null
  br i1 %277, label %278, label %3

278:                                              ; preds = %273, %0
  store i32 0, i32* getelementptr inbounds (%struct.iterator_control, %struct.iterator_control* @sctp_it_ctl, i64 0, i32 6), align 8
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_timeout_handler(i8* nocapture) #3 {
  %2 = alloca %struct.timeval, align 8
  %3 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %5 = getelementptr inbounds i8, i8* %0, i64 56
  %6 = bitcast i8* %5 to %struct.sctp_inpcb**
  %7 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %6, align 8
  %9 = getelementptr inbounds i8, i8* %0, i64 64
  %10 = bitcast i8* %9 to %struct.sctp_tcb**
  %11 = load %struct.sctp_tcb*, %struct.sctp_tcb** %10, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 72
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.sctp_nets*
  %16 = getelementptr inbounds i8, i8* %0, i64 48
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 92
  %20 = bitcast i8* %19 to i32*
  store i32 40961, i32* %20, align 4
  %21 = icmp ne %struct.sctp_tcb* %11, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %435, label %26

26:                                               ; preds = %22, %1
  store i32 40962, i32* %20, align 4
  %27 = getelementptr inbounds i8, i8* %0, i64 40
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %435, label %32

32:                                               ; preds = %26
  store i32 40963, i32* %20, align 4
  br i1 %21, label %33, label %46

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 14
  %35 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %34) #12
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 120
  %37 = atomicrmw add i32* %36, i32 -1 seq_cst
  %38 = icmp eq i32 %18, 15
  br i1 %38, label %53, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %41, 0
  %43 = and i32 %41, 512
  %44 = icmp eq i32 %43, 0
  %45 = and i1 %42, %44
  br i1 %45, label %53, label %393

46:                                               ; preds = %32
  %47 = icmp eq %struct.sctp_inpcb* %8, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 34
  %50 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %49) #12
  br label %53

51:                                               ; preds = %46
  %52 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 26)) #12
  br label %53

53:                                               ; preds = %39, %33, %48, %51
  %54 = phi i8 [ 1, %33 ], [ 0, %48 ], [ 0, %51 ], [ 1, %39 ]
  store i32 %18, i32* %20, align 4
  %55 = load i32, i32* %28, align 8
  %56 = and i32 %55, 6
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %391

58:                                               ; preds = %53
  %59 = and i32 %55, -3
  store i32 %59, i32* %28, align 8
  br i1 %21, label %60, label %78

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 1
  %62 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %61, align 8
  %63 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %62, i64 0, i32 9
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 268435456
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %78

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 0
  %69 = load %struct.socket*, %struct.socket** %68, align 8
  %70 = icmp eq %struct.socket* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.socket, %struct.socket* %69, i64 0, i32 21, i32 1
  %73 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %72) #12
  %74 = getelementptr inbounds %struct.socket, %struct.socket* %69, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %72) #12
  br label %78

78:                                               ; preds = %67, %60, %71, %58
  %79 = phi %struct.socket* [ null, %60 ], [ %69, %71 ], [ null, %67 ], [ null, %58 ]
  switch i32 %18, label %391 [
    i32 1, label %80
    i32 2, label %115
    i32 3, label %122
    i32 4, label %127
    i32 5, label %135
    i32 6, label %149
    i32 7, label %157
    i32 8, label %247
    i32 9, label %249
    i32 10, label %257
    i32 11, label %262
    i32 12, label %281
    i32 13, label %283
    i32 14, label %288
    i32 15, label %294
    i32 16, label %297
    i32 17, label %386
  ]

80:                                               ; preds = %78
  %81 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 67), i32 1 seq_cst
  %82 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 199
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 8
  %85 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 140
  %86 = load i16, i16* %85, align 8
  %87 = add i16 %86, -1
  %88 = icmp sgt i16 %87, 0
  %89 = select i1 %88, i16 %87, i16 0
  store i16 %89, i16* %85, align 8
  %90 = tail call i32 @sctp_t3rxt_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %406

92:                                               ; preds = %80
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 1, i32 0) #12
  %93 = load i16, i16* %85, align 8
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %388

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 86
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %388, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 20, i32 0
  %101 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %100, align 8
  %102 = icmp eq %struct.sctp_tmit_chunk* %101, null
  br i1 %102, label %388, label %107

103:                                              ; preds = %107
  %104 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %108, i64 0, i32 6, i32 0
  %105 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %104, align 8
  %106 = icmp eq %struct.sctp_tmit_chunk* %105, null
  br i1 %106, label %388, label %107

107:                                              ; preds = %99, %103
  %108 = phi %struct.sctp_tmit_chunk* [ %105, %103 ], [ %101, %99 ]
  %109 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %108, i64 0, i32 5
  %110 = load %struct.sctp_nets*, %struct.sctp_nets** %109, align 8
  %111 = icmp eq %struct.sctp_nets* %110, null
  br i1 %111, label %103, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 1
  %114 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %113, align 8
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %114, %struct.sctp_tcb* %11, %struct.sctp_nets* nonnull %110)
  br label %388

115:                                              ; preds = %78
  %116 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 69), i32 1 seq_cst
  %117 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 198
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %117, align 4
  %120 = tail call i32 @sctp_t1init_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %391, label %406

122:                                              ; preds = %78
  %123 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 70), i32 1 seq_cst
  %124 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 200
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  tail call void @sctp_send_sack(%struct.sctp_tcb* %11, i32 0) #12
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 4, i32 0) #12
  br label %388

127:                                              ; preds = %78
  %128 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 71), i32 1 seq_cst
  %129 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 201
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 8
  %132 = tail call i32 @sctp_shutdown_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %406

134:                                              ; preds = %127
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 5, i32 0) #12
  br label %388

135:                                              ; preds = %78
  %136 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 72), i32 1 seq_cst
  %137 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 202
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 4
  %140 = tail call i32 @sctp_heartbeat_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %406

142:                                              ; preds = %135
  %143 = getelementptr inbounds i8, i8* %14, i64 596
  %144 = bitcast i8* %143 to i16*
  %145 = load i16, i16* %144, align 4
  %146 = and i16 %145, 4
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %391

148:                                              ; preds = %142
  tail call void @sctp_timer_start(i32 5, %struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15)
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 6, i32 0) #12
  br label %388

149:                                              ; preds = %78
  %150 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 73), i32 1 seq_cst
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 203
  %152 = load i32, i32* %151, align 8
  %153 = add i32 %152, 1
  store i32 %153, i32* %151, align 8
  %154 = tail call i32 @sctp_cookie_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %406

156:                                              ; preds = %149
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 1, i32 0) #12
  br label %388

157:                                              ; preds = %78
  %158 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 74), i32 1 seq_cst
  %159 = call i32 @gettimeofday(%struct.timeval* nonnull %2, i8* null) #12
  %160 = load i64, i64* %4, align 8
  %161 = trunc i64 %160 to i32
  %162 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 0
  store i32 %161, i32* %162, align 8
  %163 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 37
  %164 = load i8, i8* %163, align 1
  %165 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 38
  store i8 %164, i8* %165, align 2
  %166 = add i8 %164, 1
  %167 = icmp sgt i8 %166, 1
  %168 = select i1 %167, i8 0, i8 %166
  store i8 %168, i8* %163, align 1
  %169 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 30
  %170 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 33
  %171 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 25, i64 0
  %172 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 24
  %173 = bitcast i32* %172 to i8*
  %174 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 26, i64 0
  %175 = sext i8 %168 to i64
  br label %176

176:                                              ; preds = %200, %157
  %177 = phi i64 [ 0, %157 ], [ %203, %200 ]
  %178 = load i32, i32* %169, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = add i32 %178, 1
  store i32 %181, i32* %169, align 8
  br label %200

182:                                              ; preds = %176, %182
  %183 = load i32, i32* %170, align 4
  %184 = add i32 %183, 4
  %185 = icmp sgt i32 %184, 16
  %186 = select i1 %185, i32 0, i32 %184
  %187 = cmpxchg i32* %170, i32 %183, i32 %186 seq_cst seq_cst
  %188 = extractvalue { i32, i1 } %187, 1
  br i1 %188, label %189, label %182

189:                                              ; preds = %182
  %190 = sext i32 %183 to i64
  %191 = icmp eq i32 %186, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %189
  store i32 0, i32* %170, align 4
  %193 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %171, i32 20, i8* %173, i32 4, i8* %174) #12
  %194 = load i32, i32* %172, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %172, align 4
  br label %196

196:                                              ; preds = %192, %189
  %197 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 26, i64 %190
  %198 = bitcast i8* %197 to i32*
  %199 = load i32, i32* %198, align 4
  br label %200

200:                                              ; preds = %180, %196
  %201 = phi i32 [ %178, %180 ], [ %199, %196 ]
  %202 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 1, i64 %175, i64 %177
  store i32 %201, i32* %202, align 4
  %203 = add nuw nsw i64 %177, 1
  %204 = icmp eq i64 %203, 8
  br i1 %204, label %205, label %176

205:                                              ; preds = %200
  %206 = icmp eq %struct.sctp_inpcb* %8, null
  br i1 %206, label %391, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27
  %209 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 0, i32 4
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %391

213:                                              ; preds = %207
  %214 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %208, i64 0, i32 0
  %215 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 3, i64 6
  %216 = load i32, i32* %215, align 8
  %217 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 7
  store i32 0, i32* %217, align 4
  %218 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 1
  store i32 7, i32* %218, align 8
  %219 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 2
  %220 = bitcast i8** %219 to %struct.sctp_inpcb**
  store %struct.sctp_inpcb* %8, %struct.sctp_inpcb** %220, align 8
  %221 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 3
  %222 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 4
  %223 = bitcast %struct.sctp_timer* %208 to i8*
  %224 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 5
  %225 = bitcast i8** %224 to %struct.sctp_timer**
  %226 = bitcast i8** %221 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 16, i1 false)
  store %struct.sctp_timer* %208, %struct.sctp_timer** %225, align 8
  %227 = tail call i32 @sctp_get_tick_count() #12
  %228 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 11, i32 27, i32 6
  store i32 %227, i32* %228, align 8
  %229 = tail call i32 @sctp_os_timer_start(%struct.sctp_callout* %214, i32 %216, void (i8*)* nonnull @sctp_timeout_handler, i8* %223) #12
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %391

231:                                              ; preds = %213
  %232 = load i8*, i8** %219, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 37
  %236 = atomicrmw add i32* %235, i32 1 seq_cst
  br label %237

237:                                              ; preds = %234, %231
  %238 = load i8*, i8** %221, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = atomicrmw add i32* inttoptr (i64 1776 to i32*), i32 1 seq_cst
  br label %242

242:                                              ; preds = %240, %237
  %243 = load i8*, i8** %222, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %391, label %245

245:                                              ; preds = %242
  %246 = atomicrmw add i32* inttoptr (i64 504 to i32*), i32 1 seq_cst
  br label %391

247:                                              ; preds = %78
  %248 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 75), i32 1 seq_cst
  tail call void @sctp_pathmtu_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  br label %391

249:                                              ; preds = %78
  %250 = tail call i32 @sctp_shutdownack_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %406

252:                                              ; preds = %249
  %253 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 76), i32 1 seq_cst
  %254 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7, i32 204
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %254, align 4
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 7, i32 0) #12
  br label %388

257:                                              ; preds = %78
  %258 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 80), i32 1 seq_cst
  %259 = tail call i32 @sctp_asconf_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* %15) #12
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %406

261:                                              ; preds = %257
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 8, i32 0) #12
  br label %388

262:                                              ; preds = %78
  %263 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 77), i32 1 seq_cst
  %264 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %265 = trunc i32 %264 to i16
  %266 = icmp eq i16 %265, 0
  br i1 %266, label %279, label %267

267:                                              ; preds = %262
  %268 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 32, i32 0, i32 1, i32 1, i32 1) #12
  %269 = icmp eq %struct.mbuf* %268, null
  br i1 %269, label %279, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %268, i64 0, i32 0, i32 3
  store i32 32, i32* %271, align 8
  %272 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %268, i64 0, i32 0, i32 2
  %273 = bitcast i8** %272 to %struct.sctp_gen_error_cause**
  %274 = load %struct.sctp_gen_error_cause*, %struct.sctp_gen_error_cause** %273, align 8
  %275 = tail call i16 @llvm.bswap.i16(i16 %265) #12
  %276 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %274, i64 0, i32 0
  store i16 %275, i16* %276, align 1
  %277 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %274, i64 0, i32 1
  store i16 8192, i16* %277, align 1
  %278 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %274, i64 0, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %278, i8* nonnull align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i64 28, i1 false) #12
  br label %279

279:                                              ; preds = %262, %267, %270
  %280 = phi %struct.mbuf* [ null, %262 ], [ null, %267 ], [ %268, %270 ]
  tail call void @sctp_abort_an_association(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.mbuf* %280, i32 0)
  br label %406

281:                                              ; preds = %78
  %282 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 82), i32 1 seq_cst
  tail call void @sctp_autoclose_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11) #12
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 10, i32 0) #12
  br label %388

283:                                              ; preds = %78
  %284 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 78), i32 1 seq_cst
  %285 = tail call i32 @sctp_strreset_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11) #12
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %406

287:                                              ; preds = %283
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 9, i32 0) #12
  br label %388

288:                                              ; preds = %78
  %289 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 84), i32 1 seq_cst
  tail call void @sctp_timer_stop(i32 14, %struct.sctp_inpcb* %8, %struct.sctp_tcb* null, %struct.sctp_nets* null, i32 1610612739)
  %290 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 37
  %291 = atomicrmw add i32* %290, i32 -1 seq_cst
  %292 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 34
  %293 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %292) #12
  tail call void @sctp_inpcb_free(%struct.sctp_inpcb* %8, i32 1, i32 2) #12
  br label %406

294:                                              ; preds = %78
  %295 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 83), i32 1 seq_cst
  tail call void @sctp_timer_stop(i32 15, %struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, %struct.sctp_nets* null, i32 1610612737)
  %296 = tail call i32 @sctp_free_assoc(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11, i32 0, i32 1610612738) #12
  br label %406

297:                                              ; preds = %78
  %298 = tail call noalias i8* @malloc(i64 16) #12
  %299 = icmp eq i8* %298, null
  br i1 %299, label %300, label %323

300:                                              ; preds = %297
  %301 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 0, i32 4), align 8
  %302 = and i32 %301, 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %388

304:                                              ; preds = %300
  store i32 0, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 7), align 4
  store i32 16, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 1), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 2) to i8*), i8 0, i64 24, i1 false) #12
  store %struct.sctp_timer* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40), %struct.sctp_timer** bitcast (i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 5) to %struct.sctp_timer**), align 8
  %305 = tail call i32 @sctp_get_tick_count() #12
  store i32 %305, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 6), align 8
  %306 = tail call i32 @sctp_os_timer_start(%struct.sctp_callout* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 0), i32 2, void (i8*)* nonnull @sctp_timeout_handler, i8* bitcast (%struct.sctp_timer* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40) to i8*)) #12
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %388

308:                                              ; preds = %304
  %309 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 2), align 8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %308
  %312 = atomicrmw add i32* inttoptr (i64 960 to i32*), i32 1 seq_cst
  br label %313

313:                                              ; preds = %311, %308
  %314 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 3), align 8
  %315 = icmp eq i8* %314, null
  br i1 %315, label %318, label %316

316:                                              ; preds = %313
  %317 = atomicrmw add i32* inttoptr (i64 1776 to i32*), i32 1 seq_cst
  br label %318

318:                                              ; preds = %316, %313
  %319 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 4), align 8
  %320 = icmp eq i8* %319, null
  br i1 %320, label %388, label %321

321:                                              ; preds = %318
  %322 = atomicrmw add i32* inttoptr (i64 504 to i32*), i32 1 seq_cst
  br label %388

323:                                              ; preds = %297
  %324 = bitcast i8* %298 to %struct.sctp_laddr**
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %324, align 8
  %325 = getelementptr inbounds i8, i8* %298, i64 8
  %326 = bitcast i8* %325 to i32*
  store i32 0, i32* %326, align 8
  %327 = load %struct.sctp_laddr*, %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), align 8
  %328 = icmp eq %struct.sctp_laddr* %327, null
  br i1 %328, label %358, label %329

329:                                              ; preds = %323, %352
  %330 = phi %struct.sctp_laddr* [ %332, %352 ], [ %327, %323 ]
  %331 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %330, i64 0, i32 0, i32 0
  %332 = load %struct.sctp_laddr*, %struct.sctp_laddr** %331, align 8
  %333 = icmp eq %struct.sctp_laddr* %332, null
  br i1 %333, label %342, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %330, i64 0, i32 0, i32 1
  %336 = bitcast %struct.sctp_laddr*** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %332, i64 0, i32 0, i32 1
  %339 = bitcast %struct.sctp_laddr*** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast %struct.sctp_laddr* %330 to i64*
  %341 = load i64, i64* %340, align 8
  br label %342

342:                                              ; preds = %329, %334
  %343 = phi i64 [ %341, %334 ], [ 0, %329 ]
  %344 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %330, i64 0, i32 0, i32 1
  %345 = bitcast %struct.sctp_laddr*** %344 to i64**
  %346 = load i64*, i64** %345, align 8
  store i64 %343, i64* %346, align 8
  %347 = load %struct.sctp_laddr*, %struct.sctp_laddr** %324, align 8
  store %struct.sctp_laddr* %347, %struct.sctp_laddr** %331, align 8
  %348 = icmp eq %struct.sctp_laddr* %347, null
  br i1 %348, label %352, label %349

349:                                              ; preds = %342
  %350 = load %struct.sctp_laddr*, %struct.sctp_laddr** %324, align 8
  %351 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %350, i64 0, i32 0, i32 1
  store %struct.sctp_laddr** %331, %struct.sctp_laddr*** %351, align 8
  br label %352

352:                                              ; preds = %349, %342
  store %struct.sctp_laddr* %330, %struct.sctp_laddr** %324, align 8
  %353 = bitcast %struct.sctp_laddr*** %344 to i8**
  store i8* %298, i8** %353, align 8
  %354 = load i32, i32* %326, align 8
  %355 = add nsw i32 %354, 1
  store i32 %355, i32* %326, align 8
  br i1 %333, label %356, label %329

356:                                              ; preds = %352
  %357 = icmp eq i32 %355, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %356, %323
  tail call void @free(i8* %298) #12
  br label %388

359:                                              ; preds = %356
  %360 = tail call i32 @sctp_initiate_iterator(i32 (%struct.sctp_inpcb*, i8*, i32)* nonnull @sctp_asconf_iterator_ep, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)* nonnull @sctp_asconf_iterator_stcb, i32 (%struct.sctp_inpcb*, i8*, i32)* null, i32 4, i32 0, i32 0, i8* nonnull %298, i32 0, void (i8*, i32)* nonnull @sctp_asconf_iterator_end, %struct.sctp_inpcb* null, i8 zeroext 0) #12
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %388, label %362

362:                                              ; preds = %359
  %363 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %364 = icmp eq void (i8*, ...)* %363, null
  br i1 %364, label %366, label %365

365:                                              ; preds = %362
  tail call void (i8*, ...) %363(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0)) #12
  br label %366

366:                                              ; preds = %365, %362
  %367 = load i8, i8* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 4), align 1
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %372, label %369

369:                                              ; preds = %366
  %370 = load %struct.sctp_laddr*, %struct.sctp_laddr** %324, align 8
  %371 = icmp eq %struct.sctp_laddr* %370, null
  br i1 %371, label %385, label %373

372:                                              ; preds = %366
  tail call void @sctp_asconf_iterator_end(i8* nonnull %298, i32 0) #12
  br label %388

373:                                              ; preds = %369, %381
  %374 = phi %struct.sctp_laddr* [ %383, %381 ], [ %370, %369 ]
  %375 = load %struct.sctp_laddr*, %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), align 8
  %376 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %374, i64 0, i32 0, i32 0
  store %struct.sctp_laddr* %375, %struct.sctp_laddr** %376, align 8
  %377 = icmp eq %struct.sctp_laddr* %375, null
  br i1 %377, label %381, label %378

378:                                              ; preds = %373
  %379 = load %struct.sctp_laddr*, %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), align 8
  %380 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %379, i64 0, i32 0, i32 1
  store %struct.sctp_laddr** %376, %struct.sctp_laddr*** %380, align 8
  br label %381

381:                                              ; preds = %378, %373
  store %struct.sctp_laddr* %374, %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), align 8
  %382 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %374, i64 0, i32 0, i32 1
  store %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), %struct.sctp_laddr*** %382, align 8
  %383 = load %struct.sctp_laddr*, %struct.sctp_laddr** %376, align 8
  %384 = icmp eq %struct.sctp_laddr* %383, null
  br i1 %384, label %385, label %373

385:                                              ; preds = %381, %369
  tail call void @free(i8* %298) #12
  br label %388

386:                                              ; preds = %78
  %387 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 81), i32 1 seq_cst
  tail call void @sctp_delete_prim_timer(%struct.sctp_inpcb* %8, %struct.sctp_tcb* %11) #12
  br label %391

388:                                              ; preds = %103, %99, %385, %372, %359, %358, %321, %318, %304, %300, %112, %95, %148, %92, %287, %281, %261, %252, %156, %134, %122
  br i1 %21, label %389, label %398

389:                                              ; preds = %388
  %390 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 7
  tail call void @sctp_fix_ecn_echo(%struct.sctp_association* %390) #12
  br label %393

391:                                              ; preds = %53, %245, %242, %213, %207, %205, %142, %115, %247, %386, %78
  %392 = phi %struct.socket* [ null, %53 ], [ %79, %78 ], [ %79, %386 ], [ %79, %247 ], [ %79, %115 ], [ %79, %142 ], [ %79, %205 ], [ %79, %207 ], [ %79, %213 ], [ %79, %242 ], [ %79, %245 ]
  br i1 %21, label %393, label %398

393:                                              ; preds = %389, %39, %391
  %394 = phi i8 [ %54, %391 ], [ 1, %39 ], [ %54, %389 ]
  %395 = phi %struct.socket* [ %392, %391 ], [ null, %39 ], [ %79, %389 ]
  %396 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %11, i64 0, i32 14
  %397 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %396) #12
  br label %406

398:                                              ; preds = %388, %391
  %399 = phi %struct.socket* [ %392, %391 ], [ %79, %388 ]
  %400 = icmp eq %struct.sctp_inpcb* %8, null
  br i1 %400, label %404, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %8, i64 0, i32 34
  %403 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %402) #12
  br label %406

404:                                              ; preds = %398
  %405 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 26)) #12
  br label %406

406:                                              ; preds = %80, %115, %127, %135, %149, %249, %257, %283, %393, %404, %401, %294, %288, %279
  %407 = phi %struct.sctp_inpcb* [ %8, %393 ], [ %8, %401 ], [ null, %404 ], [ %8, %294 ], [ null, %288 ], [ %8, %283 ], [ %8, %279 ], [ %8, %257 ], [ %8, %249 ], [ %8, %149 ], [ %8, %135 ], [ %8, %127 ], [ %8, %115 ], [ %8, %80 ]
  %408 = phi %struct.sctp_tcb* [ %11, %393 ], [ null, %401 ], [ null, %404 ], [ null, %294 ], [ %11, %288 ], [ %11, %283 ], [ %11, %279 ], [ %11, %257 ], [ %11, %249 ], [ %11, %149 ], [ %11, %135 ], [ %11, %127 ], [ %11, %115 ], [ %11, %80 ]
  %409 = phi %struct.socket* [ %395, %393 ], [ %399, %401 ], [ %399, %404 ], [ %79, %294 ], [ %79, %288 ], [ %79, %283 ], [ %79, %279 ], [ %79, %257 ], [ %79, %249 ], [ %79, %149 ], [ %79, %135 ], [ %79, %127 ], [ %79, %115 ], [ %79, %80 ]
  %410 = phi i8 [ %394, %393 ], [ %54, %401 ], [ %54, %404 ], [ %54, %294 ], [ %54, %288 ], [ %54, %283 ], [ %54, %279 ], [ %54, %257 ], [ %54, %249 ], [ %54, %149 ], [ %54, %135 ], [ %54, %127 ], [ %54, %115 ], [ %54, %80 ]
  %411 = icmp eq %struct.socket* %409, null
  br i1 %411, label %435, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %struct.socket, %struct.socket* %409, i64 0, i32 23
  %414 = load void (%struct.socket*, i8*, i32)*, void (%struct.socket*, i8*, i32)** %413, align 8
  %415 = icmp eq void (%struct.socket*, i8*, i32)* %414, null
  br i1 %415, label %423, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %struct.socket, %struct.socket* %409, i64 0, i32 17
  %418 = load i16, i16* %417, align 8
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %423, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %struct.socket, %struct.socket* %409, i64 0, i32 24
  %422 = load i8*, i8** %421, align 8
  tail call void %414(%struct.socket* nonnull %409, i8* %422, i32 1) #12
  br label %423

423:                                              ; preds = %416, %412, %420
  %424 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @accept_mtx) #12
  %425 = getelementptr inbounds %struct.socket, %struct.socket* %409, i64 0, i32 21, i32 1
  %426 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %425) #12
  %427 = getelementptr inbounds %struct.socket, %struct.socket* %409, i64 0, i32 0
  %428 = load i32, i32* %427, align 8
  %429 = add nsw i32 %428, -1
  store i32 %429, i32* %427, align 8
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %423
  tail call void @sofree(%struct.socket* nonnull %409) #12
  br label %435

432:                                              ; preds = %423
  %433 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %425) #12
  %434 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @accept_mtx) #12
  br label %435

435:                                              ; preds = %26, %22, %406, %431, %432
  %436 = phi i8 [ %410, %406 ], [ %410, %431 ], [ %410, %432 ], [ 0, %22 ], [ 0, %26 ]
  %437 = phi %struct.sctp_tcb* [ %408, %406 ], [ %408, %431 ], [ %408, %432 ], [ %11, %22 ], [ %11, %26 ]
  %438 = phi %struct.sctp_inpcb* [ %407, %406 ], [ %407, %431 ], [ %407, %432 ], [ %8, %22 ], [ %8, %26 ]
  %439 = icmp eq %struct.sctp_inpcb* %438, null
  br i1 %439, label %443, label %440

440:                                              ; preds = %435
  %441 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %438, i64 0, i32 37
  %442 = atomicrmw add i32* %441, i32 -1 seq_cst
  br label %443

443:                                              ; preds = %435, %440
  %444 = icmp ne %struct.sctp_tcb* %437, null
  %445 = and i8 %436, 1
  %446 = icmp eq i8 %445, 0
  %447 = and i1 %444, %446
  br i1 %447, label %448, label %451

448:                                              ; preds = %443
  %449 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %437, i64 0, i32 7, i32 120
  %450 = atomicrmw add i32* %449, i32 -1 seq_cst
  br label %451

451:                                              ; preds = %443, %448
  %452 = icmp eq i8* %14, null
  br i1 %452, label %483, label %453

453:                                              ; preds = %451
  %454 = getelementptr inbounds i8, i8* %14, i64 504
  %455 = bitcast i8* %454 to i32*
  %456 = atomicrmw add i32* %455, i32 -1 seq_cst
  %457 = icmp eq i32 %456, 1
  br i1 %457, label %458, label %483

458:                                              ; preds = %453
  %459 = getelementptr inbounds i8, i8* %14, i64 208
  %460 = bitcast i8* %459 to %struct.sctp_rtentry**
  %461 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %460, align 8
  %462 = icmp eq %struct.sctp_rtentry* %461, null
  br i1 %462, label %473, label %463

463:                                              ; preds = %458
  %464 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %461, i64 0, i32 3
  %465 = load i64, i64* %464, align 8
  %466 = icmp sgt i64 %465, 1
  %467 = add nsw i64 %465, -1
  store i64 %467, i64* %464, align 8
  %468 = icmp sgt i64 %467, 0
  %469 = or i1 %466, %468
  br i1 %469, label %472, label %470

470:                                              ; preds = %463
  %471 = bitcast %struct.sctp_rtentry* %461 to i8*
  tail call void @free(i8* %471) #12
  br label %472

472:                                              ; preds = %463, %470
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %460, align 8
  br label %473

473:                                              ; preds = %458, %472
  %474 = getelementptr inbounds i8, i8* %14, i64 611
  %475 = load i8, i8* %474, align 1
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %481, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds i8, i8* %14, i64 248
  %479 = bitcast i8* %478 to %struct.sctp_ifa**
  %480 = load %struct.sctp_ifa*, %struct.sctp_ifa** %479, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %480) #12
  br label %481

481:                                              ; preds = %473, %477
  tail call void @free(i8* nonnull %14) #12
  %482 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %483

483:                                              ; preds = %451, %481, %453
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret void
}

declare i32 @sctp_t3rxt_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare void @sctp_chunk_output(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_timer_start(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #3 {
  %5 = icmp ne %struct.sctp_tcb* %2, null
  br i1 %5, label %6, label %20

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 512
  %10 = icmp ne i32 %9, 0
  %11 = icmp ne i32 %0, 15
  %12 = and i1 %11, %10
  br i1 %12, label %564, label %13

13:                                               ; preds = %6
  %14 = icmp eq %struct.sctp_nets* %3, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 37
  %17 = load i16, i16* %16, align 4
  %18 = and i16 %17, 8
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %564

20:                                               ; preds = %15, %13, %4
  switch i32 %0, label %564 [
    i32 1, label %21
    i32 2, label %58
    i32 3, label %95
    i32 4, label %116
    i32 5, label %153
    i32 6, label %230
    i32 7, label %267
    i32 8, label %276
    i32 9, label %291
    i32 10, label %328
    i32 11, label %365
    i32 12, label %404
    i32 13, label %414
    i32 14, label %451
    i32 15, label %468
    i32 16, label %486
    i32 17, label %491
  ]

21:                                               ; preds = %20
  %22 = icmp eq %struct.sctp_inpcb* %1, null
  %23 = icmp eq %struct.sctp_tcb* %2, null
  %24 = or i1 %22, %23
  %25 = icmp eq %struct.sctp_nets* %3, null
  %26 = or i1 %24, %25
  br i1 %26, label %564, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  %29 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* @hz, align 4
  %36 = icmp eq i32 %35, 1000
  br i1 %36, label %512, label %37

37:                                               ; preds = %32
  %38 = zext i32 %34 to i64
  %39 = sext i32 %35 to i64
  %40 = mul nsw i64 %39, %38
  %41 = add nsw i64 %40, 999
  %42 = icmp ugt i64 %41, 4294967295999
  br i1 %42, label %512, label %43

43:                                               ; preds = %37
  %44 = udiv i64 %41, 1000
  %45 = trunc i64 %44 to i32
  br label %512

46:                                               ; preds = %27
  %47 = load i32, i32* @hz, align 4
  %48 = icmp eq i32 %47, 1000
  br i1 %48, label %512, label %49

49:                                               ; preds = %46
  %50 = zext i32 %30 to i64
  %51 = sext i32 %47 to i64
  %52 = mul nsw i64 %51, %50
  %53 = add nsw i64 %52, 999
  %54 = icmp ugt i64 %53, 4294967295999
  br i1 %54, label %512, label %55

55:                                               ; preds = %49
  %56 = udiv i64 %53, 1000
  %57 = trunc i64 %56 to i32
  br label %512

58:                                               ; preds = %20
  %59 = icmp eq %struct.sctp_inpcb* %1, null
  %60 = icmp eq %struct.sctp_tcb* %2, null
  %61 = or i1 %59, %60
  %62 = icmp eq %struct.sctp_nets* %3, null
  %63 = or i1 %61, %62
  br i1 %63, label %564, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  %66 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* @hz, align 4
  %73 = icmp eq i32 %72, 1000
  br i1 %73, label %512, label %74

74:                                               ; preds = %69
  %75 = zext i32 %71 to i64
  %76 = sext i32 %72 to i64
  %77 = mul nsw i64 %76, %75
  %78 = add nsw i64 %77, 999
  %79 = icmp ugt i64 %78, 4294967295999
  br i1 %79, label %512, label %80

80:                                               ; preds = %74
  %81 = udiv i64 %78, 1000
  %82 = trunc i64 %81 to i32
  br label %512

83:                                               ; preds = %64
  %84 = load i32, i32* @hz, align 4
  %85 = icmp eq i32 %84, 1000
  br i1 %85, label %512, label %86

86:                                               ; preds = %83
  %87 = zext i32 %67 to i64
  %88 = sext i32 %84 to i64
  %89 = mul nsw i64 %88, %87
  %90 = add nsw i64 %89, 999
  %91 = icmp ugt i64 %90, 4294967295999
  br i1 %91, label %512, label %92

92:                                               ; preds = %86
  %93 = udiv i64 %90, 1000
  %94 = trunc i64 %93 to i32
  br label %512

95:                                               ; preds = %20
  %96 = icmp eq %struct.sctp_inpcb* %1, null
  %97 = icmp eq %struct.sctp_tcb* %2, null
  %98 = or i1 %96, %97
  %99 = icmp ne %struct.sctp_nets* %3, null
  %100 = or i1 %98, %99
  br i1 %100, label %564, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 7
  %103 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 104
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @hz, align 4
  %106 = icmp eq i32 %105, 1000
  br i1 %106, label %512, label %107

107:                                              ; preds = %101
  %108 = zext i32 %104 to i64
  %109 = sext i32 %105 to i64
  %110 = mul nsw i64 %109, %108
  %111 = add nsw i64 %110, 999
  %112 = icmp ugt i64 %111, 4294967295999
  br i1 %112, label %512, label %113

113:                                              ; preds = %107
  %114 = udiv i64 %111, 1000
  %115 = trunc i64 %114 to i32
  br label %512

116:                                              ; preds = %20
  %117 = icmp eq %struct.sctp_inpcb* %1, null
  %118 = icmp eq %struct.sctp_tcb* %2, null
  %119 = or i1 %117, %118
  %120 = icmp eq %struct.sctp_nets* %3, null
  %121 = or i1 %119, %120
  br i1 %121, label %564, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  %124 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %141

127:                                              ; preds = %122
  %128 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %129 = load i32, i32* %128, align 4
  %130 = load i32, i32* @hz, align 4
  %131 = icmp eq i32 %130, 1000
  br i1 %131, label %512, label %132

132:                                              ; preds = %127
  %133 = zext i32 %129 to i64
  %134 = sext i32 %130 to i64
  %135 = mul nsw i64 %134, %133
  %136 = add nsw i64 %135, 999
  %137 = icmp ugt i64 %136, 4294967295999
  br i1 %137, label %512, label %138

138:                                              ; preds = %132
  %139 = udiv i64 %136, 1000
  %140 = trunc i64 %139 to i32
  br label %512

141:                                              ; preds = %122
  %142 = load i32, i32* @hz, align 4
  %143 = icmp eq i32 %142, 1000
  br i1 %143, label %512, label %144

144:                                              ; preds = %141
  %145 = zext i32 %125 to i64
  %146 = sext i32 %142 to i64
  %147 = mul nsw i64 %146, %145
  %148 = add nsw i64 %147, 999
  %149 = icmp ugt i64 %148, 4294967295999
  br i1 %149, label %512, label %150

150:                                              ; preds = %144
  %151 = udiv i64 %148, 1000
  %152 = trunc i64 %151 to i32
  br label %512

153:                                              ; preds = %20
  %154 = icmp eq %struct.sctp_inpcb* %1, null
  %155 = icmp eq %struct.sctp_tcb* %2, null
  %156 = or i1 %154, %155
  %157 = icmp eq %struct.sctp_nets* %3, null
  %158 = or i1 %156, %157
  br i1 %158, label %564, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 37
  %161 = load i16, i16* %160, align 4
  %162 = and i16 %161, 516
  %163 = icmp eq i16 %162, 4
  br i1 %163, label %564, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 2
  %166 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %171 = load i32, i32* %170, align 4
  br label %172

172:                                              ; preds = %164, %169
  %173 = phi i32 [ %171, %169 ], [ %167, %164 ]
  %174 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 30
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 33
  br label %181

179:                                              ; preds = %172
  %180 = add i32 %175, 1
  store i32 %180, i32* %174, align 8
  br label %203

181:                                              ; preds = %181, %177
  %182 = load i32, i32* %178, align 4
  %183 = add i32 %182, 4
  %184 = icmp sgt i32 %183, 16
  %185 = select i1 %184, i32 0, i32 %183
  %186 = cmpxchg i32* %178, i32 %182, i32 %185 seq_cst seq_cst
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %188, label %181

188:                                              ; preds = %181
  %189 = sext i32 %182 to i64
  %190 = icmp eq i32 %185, 0
  br i1 %190, label %191, label %199

191:                                              ; preds = %188
  store i32 0, i32* %178, align 4
  %192 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 25, i64 0
  %193 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 24
  %194 = bitcast i32* %193 to i8*
  %195 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 26, i64 0
  %196 = tail call i32 @sctp_hmac(i16 zeroext 1, i8* %192, i32 20, i8* %194, i32 4, i8* %195) #12
  %197 = load i32, i32* %193, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %193, align 4
  br label %199

199:                                              ; preds = %191, %188
  %200 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 26, i64 %189
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  br label %203

203:                                              ; preds = %179, %199
  %204 = phi i32 [ %175, %179 ], [ %202, %199 ]
  %205 = urem i32 %204, %173
  %206 = icmp ugt i32 %173, 1
  %207 = zext i1 %206 to i32
  %208 = lshr i32 %173, %207
  %209 = tail call i32 @llvm.uadd.sat.i32(i32 %208, i32 %205)
  %210 = load i16, i16* %160, align 4
  %211 = and i16 %210, 2560
  %212 = icmp eq i16 %211, 0
  br i1 %212, label %213, label %217

213:                                              ; preds = %203
  %214 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 36
  %215 = load i32, i32* %214, align 8
  %216 = tail call i32 @llvm.uadd.sat.i32(i32 %209, i32 %215)
  br label %217

217:                                              ; preds = %213, %203
  %218 = phi i32 [ %209, %203 ], [ %216, %213 ]
  %219 = load i32, i32* @hz, align 4
  %220 = icmp eq i32 %219, 1000
  br i1 %220, label %512, label %221

221:                                              ; preds = %217
  %222 = zext i32 %218 to i64
  %223 = sext i32 %219 to i64
  %224 = mul nsw i64 %223, %222
  %225 = add nsw i64 %224, 999
  %226 = icmp ugt i64 %225, 4294967295999
  br i1 %226, label %512, label %227

227:                                              ; preds = %221
  %228 = udiv i64 %225, 1000
  %229 = trunc i64 %228 to i32
  br label %512

230:                                              ; preds = %20
  %231 = icmp eq %struct.sctp_inpcb* %1, null
  %232 = icmp eq %struct.sctp_tcb* %2, null
  %233 = or i1 %231, %232
  %234 = icmp eq %struct.sctp_nets* %3, null
  %235 = or i1 %233, %234
  br i1 %235, label %564, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  %238 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %239 = load i32, i32* %238, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %255

241:                                              ; preds = %236
  %242 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %243 = load i32, i32* %242, align 4
  %244 = load i32, i32* @hz, align 4
  %245 = icmp eq i32 %244, 1000
  br i1 %245, label %512, label %246

246:                                              ; preds = %241
  %247 = zext i32 %243 to i64
  %248 = sext i32 %244 to i64
  %249 = mul nsw i64 %248, %247
  %250 = add nsw i64 %249, 999
  %251 = icmp ugt i64 %250, 4294967295999
  br i1 %251, label %512, label %252

252:                                              ; preds = %246
  %253 = udiv i64 %250, 1000
  %254 = trunc i64 %253 to i32
  br label %512

255:                                              ; preds = %236
  %256 = load i32, i32* @hz, align 4
  %257 = icmp eq i32 %256, 1000
  br i1 %257, label %512, label %258

258:                                              ; preds = %255
  %259 = zext i32 %239 to i64
  %260 = sext i32 %256 to i64
  %261 = mul nsw i64 %260, %259
  %262 = add nsw i64 %261, 999
  %263 = icmp ugt i64 %262, 4294967295999
  br i1 %263, label %512, label %264

264:                                              ; preds = %258
  %265 = udiv i64 %262, 1000
  %266 = trunc i64 %265 to i32
  br label %512

267:                                              ; preds = %20
  %268 = icmp eq %struct.sctp_inpcb* %1, null
  %269 = or i1 %268, %5
  %270 = icmp ne %struct.sctp_nets* %3, null
  %271 = or i1 %269, %270
  br i1 %271, label %564, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 27
  %274 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 3, i64 6
  %275 = load i32, i32* %274, align 8
  br label %512

276:                                              ; preds = %20
  %277 = icmp eq %struct.sctp_inpcb* %1, null
  %278 = icmp eq %struct.sctp_tcb* %2, null
  %279 = or i1 %277, %278
  %280 = icmp eq %struct.sctp_nets* %3, null
  %281 = or i1 %279, %280
  br i1 %281, label %564, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 37
  %284 = load i16, i16* %283, align 4
  %285 = and i16 %284, 2
  %286 = icmp eq i16 %285, 0
  br i1 %286, label %287, label %564

287:                                              ; preds = %282
  %288 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 1
  %289 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 3, i64 4
  %290 = load i32, i32* %289, align 8
  br label %512

291:                                              ; preds = %20
  %292 = icmp eq %struct.sctp_inpcb* %1, null
  %293 = icmp eq %struct.sctp_tcb* %2, null
  %294 = or i1 %292, %293
  %295 = icmp eq %struct.sctp_nets* %3, null
  %296 = or i1 %294, %295
  br i1 %296, label %564, label %297

297:                                              ; preds = %291
  %298 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 14
  %299 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %316

302:                                              ; preds = %297
  %303 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %304 = load i32, i32* %303, align 4
  %305 = load i32, i32* @hz, align 4
  %306 = icmp eq i32 %305, 1000
  br i1 %306, label %512, label %307

307:                                              ; preds = %302
  %308 = zext i32 %304 to i64
  %309 = sext i32 %305 to i64
  %310 = mul nsw i64 %309, %308
  %311 = add nsw i64 %310, 999
  %312 = icmp ugt i64 %311, 4294967295999
  br i1 %312, label %512, label %313

313:                                              ; preds = %307
  %314 = udiv i64 %311, 1000
  %315 = trunc i64 %314 to i32
  br label %512

316:                                              ; preds = %297
  %317 = load i32, i32* @hz, align 4
  %318 = icmp eq i32 %317, 1000
  br i1 %318, label %512, label %319

319:                                              ; preds = %316
  %320 = zext i32 %300 to i64
  %321 = sext i32 %317 to i64
  %322 = mul nsw i64 %321, %320
  %323 = add nsw i64 %322, 999
  %324 = icmp ugt i64 %323, 4294967295999
  br i1 %324, label %512, label %325

325:                                              ; preds = %319
  %326 = udiv i64 %323, 1000
  %327 = trunc i64 %326 to i32
  br label %512

328:                                              ; preds = %20
  %329 = icmp eq %struct.sctp_inpcb* %1, null
  %330 = icmp eq %struct.sctp_tcb* %2, null
  %331 = or i1 %329, %330
  %332 = icmp eq %struct.sctp_nets* %3, null
  %333 = or i1 %331, %332
  br i1 %333, label %564, label %334

334:                                              ; preds = %328
  %335 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 8
  %336 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %353

339:                                              ; preds = %334
  %340 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %341 = load i32, i32* %340, align 4
  %342 = load i32, i32* @hz, align 4
  %343 = icmp eq i32 %342, 1000
  br i1 %343, label %512, label %344

344:                                              ; preds = %339
  %345 = zext i32 %341 to i64
  %346 = sext i32 %342 to i64
  %347 = mul nsw i64 %346, %345
  %348 = add nsw i64 %347, 999
  %349 = icmp ugt i64 %348, 4294967295999
  br i1 %349, label %512, label %350

350:                                              ; preds = %344
  %351 = udiv i64 %348, 1000
  %352 = trunc i64 %351 to i32
  br label %512

353:                                              ; preds = %334
  %354 = load i32, i32* @hz, align 4
  %355 = icmp eq i32 %354, 1000
  br i1 %355, label %512, label %356

356:                                              ; preds = %353
  %357 = zext i32 %337 to i64
  %358 = sext i32 %354 to i64
  %359 = mul nsw i64 %358, %357
  %360 = add nsw i64 %359, 999
  %361 = icmp ugt i64 %360, 4294967295999
  br i1 %361, label %512, label %362

362:                                              ; preds = %356
  %363 = udiv i64 %360, 1000
  %364 = trunc i64 %363 to i32
  br label %512

365:                                              ; preds = %20
  %366 = icmp eq %struct.sctp_inpcb* %1, null
  %367 = icmp eq %struct.sctp_tcb* %2, null
  %368 = or i1 %366, %367
  %369 = icmp ne %struct.sctp_nets* %3, null
  %370 = or i1 %368, %369
  br i1 %370, label %564, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 10
  %373 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 3, i64 5
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %512

376:                                              ; preds = %371
  %377 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 113
  %378 = load i32, i32* %377, align 4
  %379 = icmp ult i32 %378, 858993459
  br i1 %379, label %380, label %393

380:                                              ; preds = %376
  %381 = mul i32 %378, 5
  %382 = load i32, i32* @hz, align 4
  %383 = icmp eq i32 %382, 1000
  br i1 %383, label %512, label %384

384:                                              ; preds = %380
  %385 = zext i32 %381 to i64
  %386 = sext i32 %382 to i64
  %387 = mul nsw i64 %386, %385
  %388 = add nsw i64 %387, 999
  %389 = icmp ugt i64 %388, 4294967295999
  br i1 %389, label %512, label %390

390:                                              ; preds = %384
  %391 = udiv i64 %388, 1000
  %392 = trunc i64 %391 to i32
  br label %512

393:                                              ; preds = %376
  %394 = load i32, i32* @hz, align 4
  %395 = icmp eq i32 %394, 1000
  br i1 %395, label %512, label %396

396:                                              ; preds = %393
  %397 = sext i32 %394 to i64
  %398 = mul nsw i64 %397, 4294967295
  %399 = add nsw i64 %398, 999
  %400 = icmp ugt i64 %399, 4294967295999
  br i1 %400, label %512, label %401

401:                                              ; preds = %396
  %402 = udiv i64 %399, 1000
  %403 = trunc i64 %402 to i32
  br label %512

404:                                              ; preds = %20
  %405 = icmp eq %struct.sctp_inpcb* %1, null
  %406 = icmp eq %struct.sctp_tcb* %2, null
  %407 = or i1 %405, %406
  %408 = icmp ne %struct.sctp_nets* %3, null
  %409 = or i1 %407, %408
  br i1 %409, label %564, label %410

410:                                              ; preds = %404
  %411 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 11
  %412 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 100
  %413 = load i32, i32* %412, align 4
  br label %512

414:                                              ; preds = %20
  %415 = icmp eq %struct.sctp_inpcb* %1, null
  %416 = icmp eq %struct.sctp_tcb* %2, null
  %417 = or i1 %415, %416
  %418 = icmp eq %struct.sctp_nets* %3, null
  %419 = or i1 %417, %418
  br i1 %419, label %564, label %420

420:                                              ; preds = %414
  %421 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 9
  %422 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 13
  %423 = load i32, i32* %422, align 8
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %439

425:                                              ; preds = %420
  %426 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %427 = load i32, i32* %426, align 4
  %428 = load i32, i32* @hz, align 4
  %429 = icmp eq i32 %428, 1000
  br i1 %429, label %512, label %430

430:                                              ; preds = %425
  %431 = zext i32 %427 to i64
  %432 = sext i32 %428 to i64
  %433 = mul nsw i64 %432, %431
  %434 = add nsw i64 %433, 999
  %435 = icmp ugt i64 %434, 4294967295999
  br i1 %435, label %512, label %436

436:                                              ; preds = %430
  %437 = udiv i64 %434, 1000
  %438 = trunc i64 %437 to i32
  br label %512

439:                                              ; preds = %420
  %440 = load i32, i32* @hz, align 4
  %441 = icmp eq i32 %440, 1000
  br i1 %441, label %512, label %442

442:                                              ; preds = %439
  %443 = zext i32 %423 to i64
  %444 = sext i32 %440 to i64
  %445 = mul nsw i64 %444, %443
  %446 = add nsw i64 %445, 999
  %447 = icmp ugt i64 %446, 4294967295999
  br i1 %447, label %512, label %448

448:                                              ; preds = %442
  %449 = udiv i64 %446, 1000
  %450 = trunc i64 %449 to i32
  br label %512

451:                                              ; preds = %20
  %452 = icmp eq %struct.sctp_inpcb* %1, null
  %453 = or i1 %452, %5
  %454 = icmp ne %struct.sctp_nets* %3, null
  %455 = or i1 %453, %454
  br i1 %455, label %564, label %456

456:                                              ; preds = %451
  %457 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 11, i32 27
  %458 = load i32, i32* @hz, align 4
  %459 = icmp eq i32 %458, 1000
  br i1 %459, label %512, label %460

460:                                              ; preds = %456
  %461 = sext i32 %458 to i64
  %462 = mul nsw i64 %461, 20
  %463 = add nsw i64 %462, 999
  %464 = icmp ugt i64 %463, 4294967295999
  br i1 %464, label %512, label %465

465:                                              ; preds = %460
  %466 = udiv i64 %463, 1000
  %467 = trunc i64 %466 to i32
  br label %512

468:                                              ; preds = %20
  %469 = icmp eq %struct.sctp_inpcb* %1, null
  %470 = icmp eq %struct.sctp_tcb* %2, null
  %471 = or i1 %469, %470
  %472 = icmp ne %struct.sctp_nets* %3, null
  %473 = or i1 %471, %472
  br i1 %473, label %564, label %474

474:                                              ; preds = %468
  %475 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 9
  %476 = load i32, i32* @hz, align 4
  %477 = icmp eq i32 %476, 1000
  br i1 %477, label %512, label %478

478:                                              ; preds = %474
  %479 = sext i32 %476 to i64
  %480 = mul nsw i64 %479, 10
  %481 = add nsw i64 %480, 999
  %482 = icmp ugt i64 %481, 4294967295999
  br i1 %482, label %512, label %483

483:                                              ; preds = %478
  %484 = udiv i64 %481, 1000
  %485 = trunc i64 %484 to i32
  br label %512

486:                                              ; preds = %20
  %487 = icmp ne %struct.sctp_inpcb* %1, null
  %488 = or i1 %487, %5
  %489 = icmp ne %struct.sctp_nets* %3, null
  %490 = or i1 %488, %489
  br i1 %490, label %564, label %512

491:                                              ; preds = %20
  %492 = icmp eq %struct.sctp_inpcb* %1, null
  %493 = icmp eq %struct.sctp_tcb* %2, null
  %494 = or i1 %492, %493
  %495 = icmp ne %struct.sctp_nets* %3, null
  %496 = or i1 %494, %495
  br i1 %496, label %564, label %497

497:                                              ; preds = %491
  %498 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 12
  %499 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 111
  %500 = load i32, i32* %499, align 4
  %501 = load i32, i32* @hz, align 4
  %502 = icmp eq i32 %501, 1000
  br i1 %502, label %512, label %503

503:                                              ; preds = %497
  %504 = zext i32 %500 to i64
  %505 = sext i32 %501 to i64
  %506 = mul nsw i64 %505, %504
  %507 = add nsw i64 %506, 999
  %508 = icmp ugt i64 %507, 4294967295999
  br i1 %508, label %512, label %509

509:                                              ; preds = %503
  %510 = udiv i64 %507, 1000
  %511 = trunc i64 %510 to i32
  br label %512

512:                                              ; preds = %509, %503, %497, %483, %478, %474, %465, %460, %456, %448, %442, %439, %436, %430, %425, %401, %396, %393, %390, %384, %380, %362, %356, %353, %350, %344, %339, %325, %319, %316, %313, %307, %302, %264, %258, %255, %252, %246, %241, %227, %221, %217, %150, %144, %141, %138, %132, %127, %113, %107, %101, %92, %86, %83, %80, %74, %69, %55, %49, %46, %43, %37, %32, %486, %371, %410, %287, %272
  %513 = phi %struct.sctp_timer* [ %411, %410 ], [ %288, %287 ], [ %273, %272 ], [ %372, %371 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40), %486 ], [ %28, %32 ], [ %28, %37 ], [ %28, %43 ], [ %28, %46 ], [ %28, %49 ], [ %28, %55 ], [ %65, %69 ], [ %65, %74 ], [ %65, %80 ], [ %65, %83 ], [ %65, %86 ], [ %65, %92 ], [ %102, %101 ], [ %102, %107 ], [ %102, %113 ], [ %123, %127 ], [ %123, %132 ], [ %123, %138 ], [ %123, %141 ], [ %123, %144 ], [ %123, %150 ], [ %165, %217 ], [ %165, %221 ], [ %165, %227 ], [ %237, %241 ], [ %237, %246 ], [ %237, %252 ], [ %237, %255 ], [ %237, %258 ], [ %237, %264 ], [ %298, %302 ], [ %298, %307 ], [ %298, %313 ], [ %298, %316 ], [ %298, %319 ], [ %298, %325 ], [ %335, %339 ], [ %335, %344 ], [ %335, %350 ], [ %335, %353 ], [ %335, %356 ], [ %335, %362 ], [ %372, %380 ], [ %372, %384 ], [ %372, %390 ], [ %372, %393 ], [ %372, %396 ], [ %372, %401 ], [ %421, %425 ], [ %421, %430 ], [ %421, %436 ], [ %421, %439 ], [ %421, %442 ], [ %421, %448 ], [ %457, %456 ], [ %457, %460 ], [ %457, %465 ], [ %475, %474 ], [ %475, %478 ], [ %475, %483 ], [ %498, %497 ], [ %498, %503 ], [ %498, %509 ]
  %514 = phi i32 [ %413, %410 ], [ %290, %287 ], [ %275, %272 ], [ %374, %371 ], [ 2, %486 ], [ %34, %32 ], [ -1, %37 ], [ %45, %43 ], [ %30, %46 ], [ -1, %49 ], [ %57, %55 ], [ %71, %69 ], [ -1, %74 ], [ %82, %80 ], [ %67, %83 ], [ -1, %86 ], [ %94, %92 ], [ %104, %101 ], [ -1, %107 ], [ %115, %113 ], [ %129, %127 ], [ -1, %132 ], [ %140, %138 ], [ %125, %141 ], [ -1, %144 ], [ %152, %150 ], [ %218, %217 ], [ -1, %221 ], [ %229, %227 ], [ %243, %241 ], [ -1, %246 ], [ %254, %252 ], [ %239, %255 ], [ -1, %258 ], [ %266, %264 ], [ %304, %302 ], [ -1, %307 ], [ %315, %313 ], [ %300, %316 ], [ -1, %319 ], [ %327, %325 ], [ %341, %339 ], [ -1, %344 ], [ %352, %350 ], [ %337, %353 ], [ -1, %356 ], [ %364, %362 ], [ %381, %380 ], [ -1, %384 ], [ %392, %390 ], [ -1, %393 ], [ -1, %396 ], [ %403, %401 ], [ %427, %425 ], [ -1, %430 ], [ %438, %436 ], [ %423, %439 ], [ -1, %442 ], [ %450, %448 ], [ 20, %456 ], [ -1, %460 ], [ %467, %465 ], [ 10, %474 ], [ -1, %478 ], [ %485, %483 ], [ %500, %497 ], [ -1, %503 ], [ %511, %509 ]
  %515 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 0
  %516 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 0, i32 4
  %517 = load i32, i32* %516, align 8
  %518 = and i32 %517, 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %564

520:                                              ; preds = %512
  %521 = icmp eq i32 %0, 1
  br i1 %521, label %522, label %526

522:                                              ; preds = %520
  %523 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 140
  %524 = load i16, i16* %523, align 8
  %525 = add i16 %524, 1
  store i16 %525, i16* %523, align 8
  br label %526

526:                                              ; preds = %522, %520
  %527 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 7
  store i32 0, i32* %527, align 4
  %528 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 1
  store i32 %0, i32* %528, align 8
  %529 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 2
  %530 = bitcast i8** %529 to %struct.sctp_inpcb**
  store %struct.sctp_inpcb* %1, %struct.sctp_inpcb** %530, align 8
  %531 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 3
  %532 = bitcast i8** %531 to %struct.sctp_tcb**
  store %struct.sctp_tcb* %2, %struct.sctp_tcb** %532, align 8
  %533 = icmp eq i32 %0, 13
  %534 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 4
  br i1 %533, label %535, label %536

535:                                              ; preds = %526
  store i8* null, i8** %534, align 8
  br label %538

536:                                              ; preds = %526
  %537 = bitcast i8** %534 to %struct.sctp_nets**
  store %struct.sctp_nets* %3, %struct.sctp_nets** %537, align 8
  br label %538

538:                                              ; preds = %536, %535
  %539 = bitcast %struct.sctp_timer* %513 to i8*
  %540 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 5
  %541 = bitcast i8** %540 to %struct.sctp_timer**
  store %struct.sctp_timer* %513, %struct.sctp_timer** %541, align 8
  %542 = tail call i32 @sctp_get_tick_count() #12
  %543 = getelementptr inbounds %struct.sctp_timer, %struct.sctp_timer* %513, i64 0, i32 6
  store i32 %542, i32* %543, align 8
  %544 = tail call i32 @sctp_os_timer_start(%struct.sctp_callout* %515, i32 %514, void (i8*)* nonnull @sctp_timeout_handler, i8* %539) #12
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %564

546:                                              ; preds = %538
  %547 = load i8*, i8** %529, align 8
  %548 = icmp eq i8* %547, null
  br i1 %548, label %552, label %549

549:                                              ; preds = %546
  %550 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 37
  %551 = atomicrmw add i32* %550, i32 1 seq_cst
  br label %552

552:                                              ; preds = %546, %549
  %553 = load i8*, i8** %531, align 8
  %554 = icmp eq i8* %553, null
  br i1 %554, label %558, label %555

555:                                              ; preds = %552
  %556 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 120
  %557 = atomicrmw add i32* %556, i32 1 seq_cst
  br label %558

558:                                              ; preds = %552, %555
  %559 = load i8*, i8** %534, align 8
  %560 = icmp eq i8* %559, null
  br i1 %560, label %564, label %561

561:                                              ; preds = %558
  %562 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 17
  %563 = atomicrmw add i32* %562, i32 1 seq_cst
  br label %564

564:                                              ; preds = %561, %538, %558, %512, %20, %491, %486, %468, %451, %414, %404, %365, %328, %291, %282, %276, %267, %230, %159, %153, %116, %95, %58, %21, %15, %6
  ret void
}

declare i32 @sctp_t1init_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare void @sctp_send_sack(%struct.sctp_tcb*, i32) local_unnamed_addr #4

declare i32 @sctp_shutdown_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare i32 @sctp_heartbeat_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare i32 @sctp_cookie_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare void @sctp_pathmtu_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare i32 @sctp_shutdownack_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

declare i32 @sctp_asconf_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_generate_cause(i16 zeroext, i8* readonly) local_unnamed_addr #3 {
  %3 = icmp eq i16 %0, 0
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #13
  %8 = icmp ugt i64 %7, 65531
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = trunc i64 %7 to i16
  %11 = add nuw i16 %10, 4
  %12 = zext i16 %11 to i32
  %13 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %12, i32 0, i32 1, i32 1, i32 1) #12
  %14 = icmp eq %struct.mbuf* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 3
  store i32 %12, i32* %16, align 8
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 2
  %18 = bitcast i8** %17 to %struct.sctp_gen_error_cause**
  %19 = load %struct.sctp_gen_error_cause*, %struct.sctp_gen_error_cause** %18, align 8
  %20 = tail call i16 @llvm.bswap.i16(i16 %0) #12
  %21 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %19, i64 0, i32 0
  store i16 %20, i16* %21, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %11) #12
  %23 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %19, i64 0, i32 1
  store i16 %22, i16* %23, align 1
  %24 = getelementptr inbounds %struct.sctp_gen_error_cause, %struct.sctp_gen_error_cause* %19, i64 0, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %1, i64 %7, i1 false)
  br label %25

25:                                               ; preds = %15, %9, %6, %2
  %26 = phi %struct.mbuf* [ null, %2 ], [ null, %6 ], [ null, %9 ], [ %13, %15 ]
  ret %struct.mbuf* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_abort_an_association(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.mbuf*, i32) local_unnamed_addr #3 {
  %5 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 268435456
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 14, i32 0
  %13 = load %struct.sctp_tcb*, %struct.sctp_tcb** %12, align 8
  %14 = icmp eq %struct.sctp_tcb* %13, null
  br i1 %14, label %15, label %31

15:                                               ; preds = %11
  tail call void @sctp_inpcb_free(%struct.sctp_inpcb* %0, i32 1, i32 0) #12
  br label %31

16:                                               ; preds = %4
  tail call void @sctp_send_abort_tcb(%struct.sctp_tcb* nonnull %1, %struct.mbuf* %2, i32 %3) #12
  %17 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 6), i32 1 seq_cst
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 127
  switch i32 %20, label %23 [
    i32 8, label %21
    i32 32, label %21
  ]

21:                                               ; preds = %16, %16
  %22 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 1), i32 1 seq_cst
  br label %23

23:                                               ; preds = %16, %21
  %24 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 268435456
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @sctp_abort_notification(%struct.sctp_tcb* nonnull %1, i8 zeroext 0, i16 zeroext 0, %struct.sctp_abort_chunk* null, i32 %3)
  br label %29

29:                                               ; preds = %28, %23
  %30 = tail call i32 @sctp_free_assoc(%struct.sctp_inpcb* %0, %struct.sctp_tcb* nonnull %1, i32 0, i32 1610612741) #12
  br label %31

31:                                               ; preds = %6, %15, %11, %29
  ret void
}

declare void @sctp_autoclose_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*) local_unnamed_addr #4

declare i32 @sctp_strreset_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*) local_unnamed_addr #4

declare void @sctp_inpcb_free(%struct.sctp_inpcb*, i32, i32) local_unnamed_addr #4

declare i32 @sctp_free_assoc(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32) local_unnamed_addr #4

declare void @sctp_delete_prim_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*) local_unnamed_addr #4

declare void @sctp_fix_ecn_echo(%struct.sctp_association*) local_unnamed_addr #4

declare void @sofree(%struct.socket*) local_unnamed_addr #4

declare void @sctp_free_ifa(%struct.sctp_ifa*) local_unnamed_addr #4

declare i32 @sctp_get_tick_count() local_unnamed_addr #4

declare i32 @sctp_os_timer_start(%struct.sctp_callout*, i32, void (i8*)*, i8*) local_unnamed_addr #4

declare i32 @sctp_os_timer_stop(%struct.sctp_callout*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_calculate_len(%struct.mbuf* readonly) local_unnamed_addr #1 {
  %2 = icmp eq %struct.mbuf* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1, %3
  %4 = phi %struct.mbuf* [ %10, %3 ], [ %0, %1 ]
  %5 = phi i32 [ %8, %3 ], [ 0, %1 ]
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, %5
  %9 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 0
  %10 = load %struct.mbuf*, %struct.mbuf** %9, align 8
  %11 = icmp eq %struct.mbuf* %10, null
  br i1 %11, label %12, label %3

12:                                               ; preds = %3, %1
  %13 = phi i32 [ 0, %1 ], [ %8, %3 ]
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_mtu_size_reset(%struct.sctp_inpcb* nocapture readnone, %struct.sctp_association* nocapture, i32) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 53
  store i32 %2, i32* %4, align 4
  %5 = add i32 %2, -32
  %6 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 21, i32 0
  %7 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %6, align 8
  %8 = icmp eq %struct.sctp_tmit_chunk* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %3, %19
  %10 = phi %struct.sctp_tmit_chunk* [ %21, %19 ], [ %7, %3 ]
  %11 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 10
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = icmp ult i32 %5, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 9
  %17 = load i16, i16* %16, align 2
  %18 = or i16 %17, 256
  store i16 %18, i16* %16, align 2
  br label %19

19:                                               ; preds = %9, %15
  %20 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 0
  %21 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %20, align 8
  %22 = icmp eq %struct.sctp_tmit_chunk* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %19, %3
  %24 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 20, i32 0
  %25 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %24, align 8
  %26 = icmp eq %struct.sctp_tmit_chunk* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %23, %37
  %28 = phi %struct.sctp_tmit_chunk* [ %39, %37 ], [ %25, %23 ]
  %29 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 10
  %30 = load i16, i16* %29, align 8
  %31 = zext i16 %30 to i32
  %32 = icmp ult i32 %5, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 9
  %35 = load i16, i16* %34, align 2
  %36 = or i16 %35, 256
  store i16 %36, i16* %34, align 2
  br label %37

37:                                               ; preds = %27, %33
  %38 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 6, i32 0
  %39 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %38, align 8
  %40 = icmp eq %struct.sctp_tmit_chunk* %39, null
  br i1 %40, label %41, label %27

41:                                               ; preds = %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_calculate_rto(%struct.sctp_tcb*, %struct.sctp_association* nocapture readonly, %struct.sctp_nets*, %struct.timeval* nocapture readonly, i32) local_unnamed_addr #3 {
  %6 = alloca %struct.timeval, align 8
  %7 = bitcast %struct.timeval* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 0
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 1
  %10 = bitcast %struct.timeval* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = call i32 @gettimeofday(%struct.timeval* nonnull %6, i8* null) #12
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = load i64, i64* %8, align 8
  %15 = icmp slt i64 %14, %13
  br i1 %15, label %116, label %16

16:                                               ; preds = %5
  %17 = icmp eq i64 %14, %13
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %9, align 8
  %21 = icmp slt i64 %20, %19
  %22 = and i1 %17, %21
  br i1 %22, label %116, label %23

23:                                               ; preds = %16
  %24 = sub nsw i64 %14, %13
  store i64 %24, i64* %8, align 8
  %25 = sub nsw i64 %20, %19
  store i64 %25, i64* %9, align 8
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = add nsw i64 %24, -1
  store i64 %28, i64* %8, align 8
  %29 = add nsw i64 %25, 1000000
  store i64 %29, i64* %9, align 8
  br label %30

30:                                               ; preds = %27, %23
  %31 = phi i64 [ %29, %27 ], [ %25, %23 ]
  %32 = phi i64 [ %28, %27 ], [ %24, %23 ]
  %33 = mul i64 %32, 1000000
  %34 = add i64 %33, %31
  %35 = icmp ugt i64 %34, 60000000
  br i1 %35, label %116, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 12
  store i64 %34, i64* %37, align 8
  %38 = trunc i64 %34 to i32
  %39 = udiv i32 %38, 1000
  %40 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 37, i32 13
  %41 = load void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)** %40, align 8
  %42 = icmp ne void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* %41, null
  %43 = icmp eq i32 %4, 1
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %46

45:                                               ; preds = %36
  call void %41(%struct.sctp_tcb* %0, %struct.sctp_nets* %2, %struct.timeval* nonnull %6) #12
  br label %46

46:                                               ; preds = %45, %36
  br i1 %43, label %47, label %56

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 56
  %49 = load i8, i8* %48, align 4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %47
  %52 = load i64, i64* %37, align 8
  %53 = icmp ugt i64 %52, 900
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  store i8 2, i8* %48, align 4
  br label %56

55:                                               ; preds = %51
  store i8 1, i8* %48, align 4
  br label %56

56:                                               ; preds = %54, %55, %47, %46
  %57 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 54
  %58 = load i8, i8* %57, align 2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 10
  %62 = load i32, i32* %61, align 8
  %63 = ashr i32 %62, 3
  %64 = sub nsw i32 %39, %63
  %65 = add nsw i32 %64, %62
  store i32 %65, i32* %61, align 8
  %66 = icmp slt i32 %64, 0
  %67 = sub nsw i32 0, %64
  %68 = select i1 %66, i32 %67, i32 %64
  %69 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 11
  %70 = load i32, i32* %69, align 4
  %71 = ashr i32 %70, 2
  %72 = sub i32 %70, %71
  %73 = add i32 %72, %68
  store i32 %73, i32* %69, align 4
  br label %80

74:                                               ; preds = %56
  store i8 1, i8* %57, align 2
  %75 = shl nuw nsw i32 %39, 3
  %76 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 10
  store i32 %75, i32* %76, align 8
  %77 = shl nuw nsw i32 %39, 1
  %78 = and i32 %77, 131068
  %79 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 11
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %74, %60
  %81 = phi i32 [ %65, %60 ], [ %75, %74 ]
  %82 = phi i32 [ %73, %60 ], [ %78, %74 ]
  %83 = phi i32 [ 0, %60 ], [ 1, %74 ]
  %84 = icmp eq i32 %82, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 11
  store i32 10, i32* %86, align 4
  br label %87

87:                                               ; preds = %85, %80
  %88 = phi i32 [ 10, %85 ], [ %82, %80 ]
  %89 = ashr i32 %81, 3
  %90 = add nsw i32 %89, %88
  %91 = icmp ugt i32 %90, 400
  br i1 %91, label %92, label %98

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 150
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 149
  store i8 1, i8* %97, align 4
  br label %106

98:                                               ; preds = %92, %87
  %99 = icmp eq i32 %83, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %98
  %101 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 149
  %102 = load i8, i8* %101, align 4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  store i8 0, i8* %101, align 4
  %105 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 150
  store i8 1, i8* %105, align 1
  br label %106

106:                                              ; preds = %100, %98, %104, %96
  %107 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 112
  %108 = load i32, i32* %107, align 8
  %109 = icmp ult i32 %90, %108
  %110 = select i1 %109, i32 %108, i32 %90
  %111 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 113
  %112 = load i32, i32* %111, align 4
  %113 = icmp ugt i32 %110, %112
  %114 = select i1 %113, i32 %112, i32 %110
  %115 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  store i32 %114, i32* %115, align 8
  br label %116

116:                                              ; preds = %16, %30, %5, %106
  %117 = phi i32 [ 1, %106 ], [ 0, %5 ], [ 0, %30 ], [ 0, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret i32 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @sctp_m_getptr(%struct.mbuf* readonly, i32, i32, i8*) local_unnamed_addr #3 {
  %5 = icmp slt i32 %1, 0
  %6 = icmp slt i32 %2, 1
  %7 = or i1 %5, %6
  br i1 %7, label %85, label %8

8:                                                ; preds = %4
  %9 = icmp ne %struct.mbuf* %0, null
  %10 = icmp sgt i32 %1, 0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %8, %18
  %13 = phi i32 [ %19, %18 ], [ %1, %8 ]
  %14 = phi %struct.mbuf* [ %21, %18 ], [ %0, %8 ]
  %15 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %14, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = sub nsw i32 %13, %16
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %14, i64 0, i32 0, i32 0
  %21 = load %struct.mbuf*, %struct.mbuf** %20, align 8
  %22 = icmp ne %struct.mbuf* %21, null
  %23 = icmp sgt i32 %19, 0
  %24 = and i1 %22, %23
  br i1 %24, label %12, label %25

25:                                               ; preds = %18, %8
  %26 = phi %struct.mbuf* [ %0, %8 ], [ %21, %18 ]
  %27 = phi i32 [ %1, %8 ], [ %19, %18 ]
  %28 = icmp eq %struct.mbuf* %26, null
  br i1 %28, label %85, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %26, i64 0, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %12, %29
  %33 = phi i32 [ %31, %29 ], [ %16, %12 ]
  %34 = phi %struct.mbuf* [ %26, %29 ], [ %14, %12 ]
  %35 = phi i32 [ %27, %29 ], [ %13, %12 ]
  %36 = sub nsw i32 %33, %35
  %37 = icmp slt i32 %36, %2
  br i1 %37, label %38, label %55

38:                                               ; preds = %32
  %39 = icmp sgt i32 %2, 0
  br i1 %39, label %40, label %79

40:                                               ; preds = %38
  %41 = sub nsw i32 %33, %35
  %42 = icmp sgt i32 %41, %2
  %43 = select i1 %42, i32 %2, i32 %41
  %44 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %34, i64 0, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = sext i32 %35 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = zext i32 %43 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %47, i64 %48, i1 false)
  %49 = sub i32 %2, %43
  %50 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %34, i64 0, i32 0, i32 0
  %51 = load %struct.mbuf*, %struct.mbuf** %50, align 8
  %52 = icmp ne %struct.mbuf* %51, null
  %53 = icmp sgt i32 %49, 0
  %54 = and i1 %52, %53
  br i1 %54, label %60, label %79

55:                                               ; preds = %32
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %34, i64 0, i32 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = sext i32 %35 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  br label %85

60:                                               ; preds = %40, %60
  %61 = phi %struct.mbuf* [ %75, %60 ], [ %51, %40 ]
  %62 = phi i32 [ %73, %60 ], [ %49, %40 ]
  %63 = phi i64 [ %72, %60 ], [ %48, %40 ]
  %64 = phi i8* [ %65, %60 ], [ %3, %40 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  %66 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, %62
  %69 = select i1 %68, i32 %62, i32 %67
  %70 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = zext i32 %69 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %71, i64 %72, i1 false)
  %73 = sub i32 %62, %69
  %74 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 0
  %75 = load %struct.mbuf*, %struct.mbuf** %74, align 8
  %76 = icmp ne %struct.mbuf* %75, null
  %77 = icmp sgt i32 %73, 0
  %78 = and i1 %76, %77
  br i1 %78, label %60, label %79

79:                                               ; preds = %60, %40, %38
  %80 = phi %struct.mbuf* [ %34, %38 ], [ %51, %40 ], [ %75, %60 ]
  %81 = phi i1 [ %39, %38 ], [ %53, %40 ], [ %77, %60 ]
  %82 = icmp eq %struct.mbuf* %80, null
  %83 = and i1 %82, %81
  %84 = select i1 %83, i8* null, i8* %3
  br label %85

85:                                               ; preds = %79, %25, %4, %55
  %86 = phi i8* [ %59, %55 ], [ null, %4 ], [ null, %25 ], [ %84, %79 ]
  ret i8* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* readonly, i32, %struct.sctp_paramhdr*, i32) local_unnamed_addr #3 {
  %5 = bitcast %struct.sctp_paramhdr* %2 to i8*
  %6 = icmp slt i32 %1, 0
  %7 = icmp slt i32 %3, 1
  %8 = or i1 %6, %7
  br i1 %8, label %85, label %9

9:                                                ; preds = %4
  %10 = icmp ne %struct.mbuf* %0, null
  %11 = icmp sgt i32 %1, 0
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %26

13:                                               ; preds = %9, %19
  %14 = phi i32 [ %20, %19 ], [ %1, %9 ]
  %15 = phi %struct.mbuf* [ %22, %19 ], [ %0, %9 ]
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %15, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %17
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %15, i64 0, i32 0, i32 0
  %22 = load %struct.mbuf*, %struct.mbuf** %21, align 8
  %23 = icmp ne %struct.mbuf* %22, null
  %24 = icmp sgt i32 %20, 0
  %25 = and i1 %24, %23
  br i1 %25, label %13, label %26

26:                                               ; preds = %19, %9
  %27 = phi %struct.mbuf* [ %0, %9 ], [ %22, %19 ]
  %28 = phi i32 [ %1, %9 ], [ %20, %19 ]
  %29 = icmp eq %struct.mbuf* %27, null
  br i1 %29, label %85, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %27, i64 0, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  br label %33

33:                                               ; preds = %13, %30
  %34 = phi i32 [ %32, %30 ], [ %17, %13 ]
  %35 = phi %struct.mbuf* [ %27, %30 ], [ %15, %13 ]
  %36 = phi i32 [ %28, %30 ], [ %14, %13 ]
  %37 = sub nsw i32 %34, %36
  %38 = icmp slt i32 %37, %3
  br i1 %38, label %39, label %55

39:                                               ; preds = %33
  %40 = icmp sgt i32 %3, 0
  br i1 %40, label %41, label %79

41:                                               ; preds = %39
  %42 = icmp sgt i32 %37, %3
  %43 = select i1 %42, i32 %3, i32 %37
  %44 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = sext i32 %36 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = zext i32 %43 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %47, i64 %48, i1 false) #12
  %49 = sub i32 %3, %43
  %50 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 0
  %51 = load %struct.mbuf*, %struct.mbuf** %50, align 8
  %52 = icmp ne %struct.mbuf* %51, null
  %53 = icmp sgt i32 %49, 0
  %54 = and i1 %52, %53
  br i1 %54, label %60, label %79

55:                                               ; preds = %33
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = sext i32 %36 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  br label %85

60:                                               ; preds = %41, %60
  %61 = phi %struct.mbuf* [ %75, %60 ], [ %51, %41 ]
  %62 = phi i32 [ %73, %60 ], [ %49, %41 ]
  %63 = phi i64 [ %72, %60 ], [ %48, %41 ]
  %64 = phi i8* [ %65, %60 ], [ %5, %41 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  %66 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, %62
  %69 = select i1 %68, i32 %62, i32 %67
  %70 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = zext i32 %69 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %71, i64 %72, i1 false) #12
  %73 = sub i32 %62, %69
  %74 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %61, i64 0, i32 0, i32 0
  %75 = load %struct.mbuf*, %struct.mbuf** %74, align 8
  %76 = icmp ne %struct.mbuf* %75, null
  %77 = icmp sgt i32 %73, 0
  %78 = and i1 %76, %77
  br i1 %78, label %60, label %79

79:                                               ; preds = %60, %41, %39
  %80 = phi %struct.mbuf* [ %35, %39 ], [ %51, %41 ], [ %75, %60 ]
  %81 = phi i1 [ false, %39 ], [ %53, %41 ], [ %77, %60 ]
  %82 = icmp eq %struct.mbuf* %80, null
  %83 = and i1 %82, %81
  %84 = select i1 %83, i8* null, i8* %5
  br label %85

85:                                               ; preds = %4, %26, %55, %79
  %86 = phi i8* [ %59, %55 ], [ null, %4 ], [ null, %26 ], [ %84, %79 ]
  %87 = bitcast i8* %86 to %struct.sctp_paramhdr*
  ret %struct.sctp_paramhdr* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf*, i32) local_unnamed_addr #3 {
  %3 = icmp sgt i32 %1, 3
  br i1 %3, label %65, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %4
  %11 = and i32 %7, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %15 = load i32*, i32** %14, align 8
  %16 = load volatile i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %46

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = ptrtoint i8* %24 to i64
  %32 = ptrtoint i8* %30 to i64
  %33 = sub i64 %31, %32
  br label %46

34:                                               ; preds = %4
  %35 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon.2, %union.anon.2* %35, i64 1
  %37 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %38, i64 %41
  %43 = ptrtoint %union.anon.2* %36 to i64
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %43, %44
  br label %46

46:                                               ; preds = %10, %18, %13, %34
  %47 = phi i64 [ %45, %34 ], [ %33, %18 ], [ 0, %13 ], [ 0, %10 ]
  %48 = icmp slt i64 %47, %5
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %1, i32 0, i32 1, i32 1, i32 1) #12
  %51 = icmp eq %struct.mbuf* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %50, i64 0, i32 0, i32 3
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %50, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %54, align 8
  %55 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %0, i64 0, i32 0, i32 0
  store %struct.mbuf* %50, %struct.mbuf** %55, align 8
  br label %56

56:                                               ; preds = %46, %52
  %57 = phi %struct.mbuf* [ %50, %52 ], [ %0, %46 ]
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %57, i64 0, i32 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %57, i64 0, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %59, i64 %62
  %64 = add nsw i32 %61, %1
  store i32 %64, i32* %60, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 %5, i1 false)
  br label %65

65:                                               ; preds = %49, %2, %56
  %66 = phi %struct.mbuf* [ %57, %56 ], [ null, %2 ], [ null, %49 ]
  ret %struct.mbuf* %66
}

declare %struct.mbuf* @sctp_get_mbuf_for_msg(i32, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_pad_lastmbuf(%struct.mbuf*, i32, %struct.mbuf*) local_unnamed_addr #3 {
  %4 = icmp eq %struct.mbuf* %2, null
  br i1 %4, label %68, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %1, 3
  br i1 %6, label %138, label %7

7:                                                ; preds = %5
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %7
  %14 = and i32 %10, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %49

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %18 = load i32*, i32** %17, align 8
  %19 = load volatile i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %49

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %29, i64 %32
  %34 = ptrtoint i8* %27 to i64
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %34, %35
  br label %49

37:                                               ; preds = %7
  %38 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 1
  %39 = getelementptr inbounds %union.anon.2, %union.anon.2* %38, i64 1
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %41, i64 %44
  %46 = ptrtoint %union.anon.2* %39 to i64
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  br label %49

49:                                               ; preds = %37, %21, %16, %13
  %50 = phi i64 [ %48, %37 ], [ %36, %21 ], [ 0, %16 ], [ 0, %13 ]
  %51 = icmp slt i64 %50, %8
  br i1 %51, label %52, label %59

52:                                               ; preds = %49
  %53 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %1, i32 0, i32 1, i32 1, i32 1) #12
  %54 = icmp eq %struct.mbuf* %53, null
  br i1 %54, label %138, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %53, i64 0, i32 0, i32 3
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %53, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %57, align 8
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 0
  store %struct.mbuf* %53, %struct.mbuf** %58, align 8
  br label %59

59:                                               ; preds = %55, %49
  %60 = phi %struct.mbuf* [ %53, %55 ], [ %2, %49 ]
  %61 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = add nsw i32 %64, %1
  store i32 %67, i32* %63, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 0, i64 %8, i1 false) #12
  br label %138

68:                                               ; preds = %3, %71
  %69 = phi %struct.mbuf* [ %73, %71 ], [ %0, %3 ]
  %70 = icmp eq %struct.mbuf* %69, null
  br i1 %70, label %138, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 0
  %73 = load %struct.mbuf*, %struct.mbuf** %72, align 8
  %74 = icmp eq %struct.mbuf* %73, null
  br i1 %74, label %75, label %68

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 0
  %77 = icmp sgt i32 %1, 3
  br i1 %77, label %138, label %78

78:                                               ; preds = %75
  %79 = sext i32 %1 to i64
  %80 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %108, label %84

84:                                               ; preds = %78
  %85 = and i32 %81, 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %120

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %89 = load i32*, i32** %88, align 8
  %90 = load volatile i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %120

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %94, i64 %97
  %99 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 2
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %100, i64 %103
  %105 = ptrtoint i8* %98 to i64
  %106 = ptrtoint i8* %104 to i64
  %107 = sub i64 %105, %106
  br label %120

108:                                              ; preds = %78
  %109 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon.2, %union.anon.2* %109, i64 1
  %111 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 2
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %112, i64 %115
  %117 = ptrtoint %union.anon.2* %110 to i64
  %118 = ptrtoint i8* %116 to i64
  %119 = sub i64 %117, %118
  br label %120

120:                                              ; preds = %108, %92, %87, %84
  %121 = phi i64 [ %119, %108 ], [ %107, %92 ], [ 0, %87 ], [ 0, %84 ]
  %122 = icmp slt i64 %121, %79
  br i1 %122, label %123, label %129

123:                                              ; preds = %120
  %124 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %1, i32 0, i32 1, i32 1, i32 1) #12
  %125 = icmp eq %struct.mbuf* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %124, i64 0, i32 0, i32 3
  store i32 0, i32* %127, align 8
  %128 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %124, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %128, align 8
  store %struct.mbuf* %124, %struct.mbuf** %76, align 8
  br label %129

129:                                              ; preds = %126, %120
  %130 = phi %struct.mbuf* [ %124, %126 ], [ %69, %120 ]
  %131 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %130, i64 0, i32 0, i32 2
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %130, i64 0, i32 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 %135
  %137 = add nsw i32 %134, %1
  store i32 %137, i32* %133, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %136, i8 0, i64 %79, i1 false) #12
  br label %138

138:                                              ; preds = %68, %129, %123, %75, %59, %52, %5
  %139 = phi %struct.mbuf* [ %60, %59 ], [ null, %5 ], [ null, %52 ], [ %130, %129 ], [ null, %75 ], [ null, %123 ], [ null, %68 ]
  ret %struct.mbuf* %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_notify_stream_reset_add(%struct.sctp_tcb*, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #3 {
  %5 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1073741824
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %71, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 169
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %15, %14
  store i8 0, i8* %12, align 1
  br i1 %16, label %71, label %17

17:                                               ; preds = %11
  %18 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 16, i32 0, i32 1, i32 1, i32 1) #12
  %19 = icmp eq %struct.mbuf* %18, null
  br i1 %19, label %71, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 3
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 4
  %26 = bitcast i8* %23 to i16*
  store i16 13, i16* %26, align 4
  %27 = trunc i32 %3 to i16
  %28 = getelementptr inbounds i8, i8* %23, i64 2
  %29 = bitcast i8* %28 to i16*
  store i16 %27, i16* %29, align 2
  %30 = getelementptr inbounds i8, i8* %23, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 16, i32* %31, align 4
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %23, i64 12
  %37 = bitcast i8* %36 to i16*
  store i16 %1, i16* %37, align 4
  %38 = getelementptr inbounds i8, i8* %23, i64 14
  %39 = bitcast i8* %38 to i16*
  store i16 %2, i16* %39, align 2
  store i32 16, i32* %21, align 8
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %40, align 8
  %41 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %42 = load %struct.socket*, %struct.socket** %41, align 8
  %43 = getelementptr inbounds %struct.socket, %struct.socket* %42, i64 0, i32 21, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = icmp ugt i32 %44, 4096
  %46 = select i1 %45, i32 %44, i32 4096
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 79
  %48 = load i32, i32* %47, align 8
  %49 = icmp ule i32 %46, %48
  %50 = sub i32 %46, %48
  %51 = icmp ult i32 %50, 16
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %20
  tail call void @m_freem(%struct.mbuf* nonnull %18) #12
  br label %71

54:                                               ; preds = %20
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %56 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %57 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %58 = load i32, i32* %57, align 8
  %59 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %56, i32 0, i32 0, i32 %58, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %18) #12
  %60 = icmp eq %struct.sctp_queued_to_read* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  tail call void @m_freem(%struct.mbuf* nonnull %18) #12
  br label %71

62:                                               ; preds = %54
  %63 = load i32, i32* %21, align 8
  %64 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %59, i64 0, i32 9
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %59, i64 0, i32 22
  store i16 256, i16* %65, align 2
  %66 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %59, i64 0, i32 15
  store %struct.mbuf* %18, %struct.mbuf** %66, align 8
  %67 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %68 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %67, align 8
  %69 = load %struct.socket*, %struct.socket** %41, align 8
  %70 = getelementptr inbounds %struct.socket, %struct.socket* %69, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %68, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %59, %struct.sockbuf* %70, i32 1, i32 0, i32 0)
  br label %71

71:                                               ; preds = %17, %11, %4, %6, %62, %61, %53
  ret void
}

declare void @m_freem(%struct.mbuf*) local_unnamed_addr #4

declare %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32, i32, i16 zeroext, i32, i8 zeroext, %struct.mbuf*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_add_to_readq(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_queued_to_read*, %struct.sockbuf* nocapture, i32, i32, i32) local_unnamed_addr #3 {
  %8 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %8, label %242, label %9

9:                                                ; preds = %7
  %10 = icmp eq i32 %5, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %13 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #12
  br label %14

14:                                               ; preds = %11, %9
  %15 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1073741824
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %84, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 31
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %80

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 13
  %25 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %26 = icmp eq %struct.sctp_nets* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %25, i64 0, i32 17
  %29 = atomicrmw add i32* %28, i32 -1 seq_cst
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %72

31:                                               ; preds = %27
  %32 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %33 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %32, i64 0, i32 3, i32 0
  %34 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %33, align 8
  %35 = icmp eq %struct.sctp_rtentry* %34, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %34, i64 0, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = icmp sgt i64 %38, 1
  %40 = add nsw i64 %38, -1
  store i64 %40, i64* %37, align 8
  %41 = icmp sgt i64 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = bitcast %struct.sctp_rtentry* %34 to i8*
  tail call void @free(i8* %44) #12
  br label %45

45:                                               ; preds = %36, %43
  %46 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %46, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %47, align 8
  %48 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %49 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %48, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %49, align 8
  %50 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  br label %51

51:                                               ; preds = %31, %45
  %52 = phi %struct.sctp_nets* [ %32, %31 ], [ %50, %45 ]
  %53 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %52, i64 0, i32 47
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %52, i64 0, i32 3, i32 2
  %58 = load %struct.sctp_ifa*, %struct.sctp_ifa** %57, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %58) #12
  %59 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %60 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %59, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %60, align 8
  %61 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %struct.sctp_nets* [ %52, %51 ], [ %61, %56 ]
  %64 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %63, i64 0, i32 47
  store i8 0, i8* %64, align 1
  %65 = load %struct.sctp_nets*, %struct.sctp_nets** %24, align 8
  %66 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %65, i64 0, i32 37
  %67 = load i16, i16* %66, align 4
  %68 = and i16 %67, -2
  store i16 %68, i16* %66, align 4
  %69 = bitcast %struct.sctp_nets** %24 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @free(i8* %70) #12
  %71 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %72

72:                                               ; preds = %23, %27, %62
  %73 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 14
  %74 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %75 = icmp eq %struct.mbuf* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @m_freem(%struct.mbuf* nonnull %74) #12
  br label %77

77:                                               ; preds = %72, %76
  %78 = bitcast %struct.sctp_queued_to_read* %2 to i8*
  tail call void @free(i8* %78) #12
  %79 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  br label %80

80:                                               ; preds = %19, %77
  br i1 %10, label %81, label %242

81:                                               ; preds = %80
  %82 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %83 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %82) #12
  br label %242

84:                                               ; preds = %14
  %85 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 22
  %86 = load i16, i16* %85, align 2
  %87 = and i16 %86, 256
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %98

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 41
  %91 = atomicrmw add i32* %90, i32 1 seq_cst
  %92 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 23
  %93 = load i8, i8* %92, align 4
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 10
  %97 = atomicrmw add i32* %96, i32 1 seq_cst
  br label %98

98:                                               ; preds = %89, %84, %95
  %99 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 14
  %100 = load %struct.mbuf*, %struct.mbuf** %99, align 8
  %101 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 10
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 9
  store i32 0, i32* %102, align 8
  %103 = icmp eq %struct.mbuf* %100, null
  br i1 %103, label %145, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 15
  %106 = getelementptr inbounds %struct.sockbuf, %struct.sockbuf* %3, i64 0, i32 8
  %107 = getelementptr inbounds %struct.sockbuf, %struct.sockbuf* %3, i64 0, i32 10
  %108 = icmp eq %struct.sctp_tcb* %1, null
  %109 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 79
  %110 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 81
  br label %111

111:                                              ; preds = %104, %133
  %112 = phi %struct.mbuf* [ null, %104 ], [ %118, %133 ]
  %113 = phi %struct.mbuf* [ %100, %104 ], [ %137, %133 ]
  %114 = icmp eq %struct.mbuf* %112, null
  %115 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %112, i64 0, i32 0, i32 0
  %116 = select i1 %114, %struct.mbuf** %99, %struct.mbuf** %115
  br label %117

117:                                              ; preds = %122, %111
  %118 = phi %struct.mbuf* [ %113, %111 ], [ %123, %122 ]
  %119 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %118, i64 0, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %117
  %123 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %118) #12
  store %struct.mbuf* %123, %struct.mbuf** %116, align 8
  %124 = icmp eq %struct.mbuf* %123, null
  br i1 %124, label %139, label %117

125:                                              ; preds = %117
  %126 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %118, i64 0, i32 0, i32 3
  %127 = atomicrmw add i32* %106, i32 %120 seq_cst
  %128 = atomicrmw add i32* %107, i32 256 seq_cst
  br i1 %108, label %133, label %129

129:                                              ; preds = %125
  %130 = load i32, i32* %126, align 8
  %131 = atomicrmw add i32* %109, i32 %130 seq_cst
  %132 = atomicrmw add i32* %110, i32 256 seq_cst
  br label %133

133:                                              ; preds = %129, %125
  %134 = load i32, i32* %126, align 8
  %135 = atomicrmw add i32* %102, i32 %134 seq_cst
  %136 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %118, i64 0, i32 0, i32 0
  %137 = load %struct.mbuf*, %struct.mbuf** %136, align 8
  %138 = icmp eq %struct.mbuf* %137, null
  br i1 %138, label %141, label %111

139:                                              ; preds = %122
  store %struct.mbuf* %112, %struct.mbuf** %105, align 8
  %140 = icmp eq %struct.mbuf* %112, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %133, %139
  %142 = phi %struct.mbuf* [ %112, %139 ], [ %118, %133 ]
  %143 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 15
  store %struct.mbuf* %142, %struct.mbuf** %143, align 8
  %144 = icmp eq i32 %4, 0
  br i1 %144, label %207, label %205

145:                                              ; preds = %98, %139
  %146 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 31
  %147 = load i8, i8* %146, align 4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %201

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 13
  %151 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %152 = icmp eq %struct.sctp_nets* %151, null
  br i1 %152, label %198, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %151, i64 0, i32 17
  %155 = atomicrmw add i32* %154, i32 -1 seq_cst
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %198

157:                                              ; preds = %153
  %158 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %159 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %158, i64 0, i32 3, i32 0
  %160 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %159, align 8
  %161 = icmp eq %struct.sctp_rtentry* %160, null
  br i1 %161, label %177, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %160, i64 0, i32 3
  %164 = load i64, i64* %163, align 8
  %165 = icmp sgt i64 %164, 1
  %166 = add nsw i64 %164, -1
  store i64 %166, i64* %163, align 8
  %167 = icmp sgt i64 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %162
  %170 = bitcast %struct.sctp_rtentry* %160 to i8*
  tail call void @free(i8* %170) #12
  br label %171

171:                                              ; preds = %162, %169
  %172 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %173 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %172, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %173, align 8
  %174 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %175 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %174, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %175, align 8
  %176 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  br label %177

177:                                              ; preds = %157, %171
  %178 = phi %struct.sctp_nets* [ %158, %157 ], [ %176, %171 ]
  %179 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %178, i64 0, i32 47
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %178, i64 0, i32 3, i32 2
  %184 = load %struct.sctp_ifa*, %struct.sctp_ifa** %183, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %184) #12
  %185 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %186 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %186, align 8
  %187 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  br label %188

188:                                              ; preds = %177, %182
  %189 = phi %struct.sctp_nets* [ %178, %177 ], [ %187, %182 ]
  %190 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %189, i64 0, i32 47
  store i8 0, i8* %190, align 1
  %191 = load %struct.sctp_nets*, %struct.sctp_nets** %150, align 8
  %192 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %191, i64 0, i32 37
  %193 = load i16, i16* %192, align 4
  %194 = and i16 %193, -2
  store i16 %194, i16* %192, align 4
  %195 = bitcast %struct.sctp_nets** %150 to i8**
  %196 = load i8*, i8** %195, align 8
  tail call void @free(i8* %196) #12
  %197 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %198

198:                                              ; preds = %149, %153, %188
  %199 = bitcast %struct.sctp_queued_to_read* %2 to i8*
  tail call void @free(i8* %199) #12
  %200 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  br label %201

201:                                              ; preds = %145, %198
  br i1 %10, label %202, label %242

202:                                              ; preds = %201
  %203 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %204 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %203) #12
  br label %242

205:                                              ; preds = %141
  %206 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 24
  store i8 1, i8* %206, align 1
  br label %207

207:                                              ; preds = %141, %205
  %208 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 18, i32 0
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %208, align 8
  %209 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 1, i32 1
  %210 = bitcast %struct.sctp_queued_to_read*** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 18, i32 1
  %213 = bitcast %struct.sctp_queued_to_read*** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = load %struct.sctp_queued_to_read**, %struct.sctp_queued_to_read*** %209, align 8
  store %struct.sctp_queued_to_read* %2, %struct.sctp_queued_to_read** %214, align 8
  store %struct.sctp_queued_to_read** %208, %struct.sctp_queued_to_read*** %209, align 8
  %215 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 30
  store i8 1, i8* %215, align 1
  br i1 %10, label %216, label %219

216:                                              ; preds = %207
  %217 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %218 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %217) #12
  br label %219

219:                                              ; preds = %216, %207
  tail call void @sctp_invoke_recv_callback(%struct.sctp_inpcb* nonnull %0, %struct.sctp_tcb* %1, %struct.sctp_queued_to_read* %2, i32 %5)
  %220 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %221 = load %struct.socket*, %struct.socket** %220, align 8
  %222 = icmp eq %struct.socket* %221, null
  br i1 %222, label %242, label %223

223:                                              ; preds = %219
  %224 = load i32, i32* %15, align 8
  %225 = and i32 %224, 8388608
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  %228 = or i32 %224, 33554432
  store i32 %228, i32* %15, align 8
  br label %242

229:                                              ; preds = %223
  %230 = getelementptr inbounds %struct.socket, %struct.socket* %221, i64 0, i32 21, i32 1
  %231 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %230) #12
  %232 = load %struct.socket*, %struct.socket** %220, align 8
  %233 = getelementptr inbounds %struct.socket, %struct.socket* %232, i64 0, i32 21, i32 15
  %234 = load i16, i16* %233, align 8
  %235 = and i16 %234, 444
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %229
  %238 = getelementptr inbounds %struct.socket, %struct.socket* %232, i64 0, i32 21
  tail call void @sowakeup(%struct.socket* %232, %struct.sockbuf* %238) #12
  br label %242

239:                                              ; preds = %229
  %240 = getelementptr inbounds %struct.socket, %struct.socket* %232, i64 0, i32 21, i32 1
  %241 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %240) #12
  br label %242

242:                                              ; preds = %239, %237, %227, %219, %201, %202, %80, %81, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_notify_stream_reset_tsn(%struct.sctp_tcb*, i32, i32, i32) local_unnamed_addr #3 {
  %5 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 536870912
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %6
  %12 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 20, i32 0, i32 1, i32 1, i32 1) #12
  %13 = icmp eq %struct.mbuf* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %12, i64 0, i32 0, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %12, i64 0, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 12, i1 false)
  %19 = bitcast i8* %17 to i16*
  store i16 12, i16* %19, align 4
  %20 = trunc i32 %3 to i16
  %21 = getelementptr inbounds i8, i8* %17, i64 2
  %22 = bitcast i8* %21 to i16*
  store i16 %20, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %17, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 20, i32* %24, align 4
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %17, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %1, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %17, i64 16
  %32 = bitcast i8* %31 to i32*
  store i32 %2, i32* %32, align 4
  store i32 20, i32* %15, align 8
  %33 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %12, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %33, align 8
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %35 = load %struct.socket*, %struct.socket** %34, align 8
  %36 = getelementptr inbounds %struct.socket, %struct.socket* %35, i64 0, i32 21, i32 9
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %37, 4096
  %39 = select i1 %38, i32 %37, i32 4096
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 79
  %41 = load i32, i32* %40, align 8
  %42 = icmp ule i32 %39, %41
  %43 = sub i32 %39, %41
  %44 = icmp ult i32 %43, 20
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %14
  tail call void @m_freem(%struct.mbuf* nonnull %12) #12
  br label %64

47:                                               ; preds = %14
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %49 = load %struct.sctp_nets*, %struct.sctp_nets** %48, align 8
  %50 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %51 = load i32, i32* %50, align 8
  %52 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %49, i32 0, i32 0, i32 %51, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %12) #12
  %53 = icmp eq %struct.sctp_queued_to_read* %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  tail call void @m_freem(%struct.mbuf* nonnull %12) #12
  br label %64

55:                                               ; preds = %47
  %56 = load i32, i32* %15, align 8
  %57 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %52, i64 0, i32 9
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %52, i64 0, i32 22
  store i16 256, i16* %58, align 2
  %59 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %52, i64 0, i32 15
  store %struct.mbuf* %12, %struct.mbuf** %59, align 8
  %60 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %61 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %60, align 8
  %62 = load %struct.socket*, %struct.socket** %34, align 8
  %63 = getelementptr inbounds %struct.socket, %struct.socket* %62, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %61, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %52, %struct.sockbuf* %63, i32 1, i32 0, i32 0)
  br label %64

64:                                               ; preds = %11, %4, %6, %55, %54, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_ulp_notify(i32, %struct.sctp_tcb*, i32, i8*, i32) local_unnamed_addr #3 {
  %6 = alloca %union.sctp_sockstore, align 8
  %7 = alloca %struct.sctp_rcvinfo, align 8
  %8 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %8, label %595, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %11 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %12 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %11, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 805306368
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %595

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 256
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %595

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %23 = load %struct.socket*, %struct.socket** %22, align 8
  %24 = getelementptr inbounds %struct.socket, %struct.socket* %23, i64 0, i32 4
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, 32
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %595

28:                                               ; preds = %21
  %29 = and i32 %18, 127
  switch i32 %29, label %31 [
    i32 2, label %30
    i32 4, label %30
  ]

30:                                               ; preds = %28, %28
  switch i32 %0, label %595 [
    i32 27, label %531
    i32 26, label %494
    i32 25, label %490
    i32 1, label %32
    i32 2, label %109
    i32 7, label %143
    i32 5, label %264
    i32 6, label %266
    i32 15, label %268
    i32 8, label %387
    i32 9, label %394
    i32 10, label %401
    i32 18, label %423
    i32 17, label %425
    i32 19, label %427
    i32 21, label %429
    i32 20, label %431
    i32 22, label %433
    i32 12, label %435
    i32 13, label %437
    i32 14, label %439
    i32 11, label %441
    i32 23, label %482
    i32 24, label %486
  ]

31:                                               ; preds = %28
  switch i32 %0, label %595 [
    i32 1, label %32
    i32 2, label %109
    i32 3, label %134
    i32 4, label %137
    i32 16, label %140
    i32 7, label %143
    i32 5, label %264
    i32 6, label %266
    i32 15, label %268
    i32 8, label %387
    i32 9, label %394
    i32 10, label %401
    i32 18, label %423
    i32 17, label %425
    i32 19, label %427
    i32 21, label %429
    i32 20, label %431
    i32 22, label %433
    i32 12, label %435
    i32 13, label %437
    i32 14, label %439
    i32 11, label %441
    i32 23, label %482
    i32 24, label %486
    i32 25, label %490
    i32 26, label %494
    i32 27, label %531
  ]

32:                                               ; preds = %30, %31
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 185
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = trunc i32 %2 to i16
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 1, %struct.sctp_tcb* nonnull %1, i16 zeroext %37, %struct.sctp_abort_chunk* null, i8 zeroext 0, i32 %4)
  store i8 1, i8* %33, align 1
  br label %38

38:                                               ; preds = %36, %32
  %39 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 186
  %40 = load i8, i8* %39, align 2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %88, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 187
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %88

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 65536
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %88, label %51

51:                                               ; preds = %46
  %52 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 16, i32 0, i32 1, i32 1, i32 1) #12
  %53 = icmp eq %struct.mbuf* %52, null
  br i1 %53, label %88, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %52, i64 0, i32 0, i32 3
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %52, i64 0, i32 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 0, i64* %59, align 4
  %60 = bitcast i8* %57 to i16*
  store i16 6, i16* %60, align 4
  %61 = getelementptr inbounds i8, i8* %57, i64 2
  %62 = bitcast i8* %61 to i16*
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %57, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 16, i32* %64, align 4
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 122
  %66 = load i32, i32* %65, align 8
  %67 = bitcast i8* %58 to i32*
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 12
  %71 = bitcast i8* %70 to i32*
  store i32 %69, i32* %71, align 4
  store i32 16, i32* %55, align 8
  %72 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %52, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %72, align 8
  %73 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %74 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %75 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %76 = load i32, i32* %75, align 8
  %77 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %74, i32 0, i32 0, i32 %76, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %52) #12
  %78 = icmp eq %struct.sctp_queued_to_read* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %54
  tail call void @m_freem(%struct.mbuf* nonnull %52) #12
  br label %88

80:                                               ; preds = %54
  %81 = load i32, i32* %55, align 8
  %82 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %77, i64 0, i32 9
  store i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %77, i64 0, i32 22
  store i16 256, i16* %83, align 2
  %84 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %77, i64 0, i32 15
  store %struct.mbuf* %52, %struct.mbuf** %84, align 8
  %85 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %86 = load %struct.socket*, %struct.socket** %22, align 8
  %87 = getelementptr inbounds %struct.socket, %struct.socket* %86, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %85, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %77, %struct.sockbuf* %87, i32 1, i32 0, i32 0) #12
  br label %88

88:                                               ; preds = %80, %79, %51, %46, %38, %42
  %89 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %595

92:                                               ; preds = %88
  %93 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %94 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %93, i64 0, i32 9
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 805306368
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %595

98:                                               ; preds = %92
  %99 = load i32, i32* %17, align 8
  %100 = and i32 %99, 256
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %595

102:                                              ; preds = %98
  %103 = load %struct.socket*, %struct.socket** %22, align 8
  %104 = getelementptr inbounds %struct.socket, %struct.socket* %103, i64 0, i32 4
  %105 = load i16, i16* %104, align 2
  %106 = and i16 %105, 32
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %108, label %595

108:                                              ; preds = %102
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* nonnull %1, i32 2, i16 zeroext 0, i16 zeroext 0, i32 %4) #12
  br label %595

109:                                              ; preds = %30, %31
  %110 = trunc i32 %2 to i16
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 4, %struct.sctp_tcb* nonnull %1, i16 zeroext %110, %struct.sctp_abort_chunk* null, i8 zeroext 0, i32 %4)
  %111 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %112 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %111, i64 0, i32 48
  %113 = load i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)** %112, align 8
  %114 = icmp eq i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)* %113, null
  br i1 %114, label %595, label %115

115:                                              ; preds = %109
  %116 = load %struct.socket*, %struct.socket** %22, align 8
  %117 = icmp eq %struct.socket* %116, null
  br i1 %117, label %595, label %118

118:                                              ; preds = %115
  %119 = bitcast %union.sctp_sockstore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #12
  %120 = bitcast %struct.sctp_rcvinfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %120) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 28, i1 false)
  %121 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  %122 = atomicrmw add i32* %121, i32 1 seq_cst
  %123 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 14
  %124 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %123) #12
  %125 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %126 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %125, i64 0, i32 48
  %127 = load i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)** %126, align 8
  %128 = load %struct.socket*, %struct.socket** %22, align 8
  %129 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %125, i64 0, i32 47
  %130 = load i8*, i8** %129, align 8
  %131 = tail call i32 %127(%struct.socket* %128, %union.sctp_sockstore* nonnull byval(%union.sctp_sockstore) align 8 %6, i8* null, i64 0, %struct.sctp_rcvinfo* nonnull byval(%struct.sctp_rcvinfo) align 8 %7, i32 0, i8* %130) #12
  %132 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %123) #12
  %133 = atomicrmw sub i32* %121, i32 1 seq_cst
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #12
  br label %595

134:                                              ; preds = %31
  %135 = getelementptr inbounds i8, i8* %3, i64 216
  %136 = bitcast i8* %135 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 2, %struct.sockaddr* %136, i32 %2, i32 %4)
  br label %595

137:                                              ; preds = %31
  %138 = getelementptr inbounds i8, i8* %3, i64 216
  %139 = bitcast i8* %138 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 1, %struct.sockaddr* %139, i32 %2, i32 %4)
  br label %595

140:                                              ; preds = %31
  %141 = getelementptr inbounds i8, i8* %3, i64 216
  %142 = bitcast i8* %141 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 6, %struct.sockaddr* %142, i32 %2, i32 %4)
  br label %595

143:                                              ; preds = %31, %30
  %144 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 2147500032
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %595, label %148

148:                                              ; preds = %143
  %149 = trunc i64 %145 to i32
  %150 = icmp slt i32 %149, 0
  %151 = select i1 %150, i32 32, i32 144
  %152 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %151, i32 0, i32 1, i32 1, i32 1) #12
  %153 = icmp eq %struct.mbuf* %152, null
  br i1 %153, label %595, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %152, i64 0, i32 0, i32 3
  store i32 %151, i32* %155, align 8
  %156 = load i64, i64* %144, align 8
  %157 = trunc i64 %156 to i32
  %158 = icmp slt i32 %157, 0
  %159 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %152, i64 0, i32 0, i32 2
  %160 = load i8*, i8** %159, align 8
  %161 = zext i32 %151 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %160, i8 0, i64 %161, i1 false) #12
  %162 = bitcast i8* %160 to i16*
  br i1 %158, label %163, label %185

163:                                              ; preds = %154
  store i16 14, i16* %162, align 4
  %164 = getelementptr inbounds i8, i8* %160, i64 2
  %165 = bitcast i8* %164 to i16*
  store i16 1, i16* %165, align 2
  %166 = getelementptr inbounds i8, i8* %3, i64 76
  %167 = bitcast i8* %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, %151
  %170 = getelementptr inbounds i8, i8* %160, i64 4
  %171 = bitcast i8* %170 to i32*
  store i32 %169, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %160, i64 8
  %173 = bitcast i8* %172 to i32*
  store i32 %2, i32* %173, align 4
  %174 = getelementptr inbounds i8, i8* %3, i64 94
  %175 = bitcast i8* %174 to i16*
  %176 = load i16, i16* %175, align 2
  %177 = getelementptr inbounds i8, i8* %160, i64 12
  %178 = bitcast i8* %177 to i16*
  store i16 %176, i16* %178, align 4
  %179 = getelementptr inbounds i8, i8* %3, i64 102
  %180 = load i8, i8* %179, align 2
  %181 = icmp eq i8 %180, 0
  %182 = getelementptr inbounds i8, i8* %160, i64 14
  %183 = bitcast i8* %182 to i16*
  %184 = select i1 %181, i16 3, i16 1
  store i16 %184, i16* %183, align 2
  br label %209

185:                                              ; preds = %154
  store i16 4, i16* %162, align 4
  %186 = getelementptr inbounds i8, i8* %160, i64 2
  %187 = bitcast i8* %186 to i16*
  store i16 1, i16* %187, align 2
  %188 = getelementptr inbounds i8, i8* %3, i64 76
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, %151
  %192 = getelementptr inbounds i8, i8* %160, i64 4
  %193 = bitcast i8* %192 to i32*
  store i32 %191, i32* %193, align 4
  %194 = getelementptr inbounds i8, i8* %160, i64 8
  %195 = bitcast i8* %194 to i32*
  store i32 %2, i32* %195, align 4
  %196 = getelementptr inbounds i8, i8* %3, i64 94
  %197 = bitcast i8* %196 to i16*
  %198 = load i16, i16* %197, align 2
  %199 = getelementptr inbounds i8, i8* %160, i64 12
  %200 = bitcast i8* %199 to i16*
  store i16 %198, i16* %200, align 4
  %201 = getelementptr inbounds i8, i8* %160, i64 14
  %202 = bitcast i8* %201 to i16*
  store i16 0, i16* %202, align 2
  %203 = getelementptr inbounds i8, i8* %3, i64 102
  %204 = load i8, i8* %203, align 2
  %205 = icmp eq i8 %204, 0
  %206 = getelementptr inbounds i8, i8* %160, i64 16
  %207 = bitcast i8* %206 to i16*
  %208 = select i1 %205, i16 3, i16 1
  store i16 %208, i16* %207, align 4
  br label %209

209:                                              ; preds = %185, %163
  %210 = phi i64 [ 20, %185 ], [ 16, %163 ]
  %211 = phi i64 [ 24, %185 ], [ 20, %163 ]
  %212 = phi i64 [ 40, %185 ], [ 24, %163 ]
  %213 = phi i64 [ 140, %185 ], [ 28, %163 ]
  %214 = getelementptr inbounds i8, i8* %3, i64 84
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds i8, i8* %160, i64 %210
  %218 = bitcast i8* %217 to i32*
  store i32 %216, i32* %218, align 4
  %219 = getelementptr inbounds i8, i8* %3, i64 88
  %220 = bitcast i8* %219 to i32*
  %221 = load i32, i32* %220, align 8
  %222 = getelementptr inbounds i8, i8* %160, i64 %211
  %223 = bitcast i8* %222 to i32*
  store i32 %221, i32* %223, align 4
  %224 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %225 = load i32, i32* %224, align 8
  %226 = getelementptr inbounds i8, i8* %160, i64 %212
  %227 = bitcast i8* %226 to i32*
  store i32 %225, i32* %227, align 4
  %228 = load i32, i32* %224, align 8
  %229 = getelementptr inbounds i8, i8* %160, i64 %213
  %230 = bitcast i8* %229 to i32*
  store i32 %228, i32* %230, align 4
  %231 = bitcast i8* %3 to %struct.mbuf**
  %232 = bitcast i8* %3 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %struct.mbuf* %152 to i64*
  store i64 %233, i64* %234, align 8
  store %struct.mbuf* null, %struct.mbuf** %231, align 8
  %235 = load %struct.socket*, %struct.socket** %22, align 8
  %236 = getelementptr inbounds %struct.socket, %struct.socket* %235, i64 0, i32 21, i32 9
  %237 = load i32, i32* %236, align 8
  %238 = icmp ugt i32 %237, 4096
  %239 = select i1 %238, i32 %237, i32 4096
  %240 = getelementptr inbounds %struct.socket, %struct.socket* %235, i64 0, i32 21, i32 8
  %241 = load i32, i32* %240, align 4
  %242 = tail call i32 @llvm.usub.sat.i32(i32 %239, i32 %241) #12
  %243 = zext i32 %242 to i64
  %244 = load i32, i32* %155, align 8
  %245 = sext i32 %244 to i64
  %246 = icmp slt i64 %243, %245
  br i1 %246, label %247, label %248

247:                                              ; preds = %209
  tail call void @m_freem(%struct.mbuf* nonnull %152) #12
  br label %595

248:                                              ; preds = %209
  %249 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %250 = load %struct.sctp_nets*, %struct.sctp_nets** %249, align 8
  %251 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %252 = load i32, i32* %251, align 8
  %253 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %250, i32 0, i32 0, i32 %252, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %152) #12
  %254 = icmp eq %struct.sctp_queued_to_read* %253, null
  br i1 %254, label %255, label %256

255:                                              ; preds = %248
  tail call void @m_freem(%struct.mbuf* nonnull %152) #12
  br label %595

256:                                              ; preds = %248
  %257 = load i32, i32* %155, align 8
  %258 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %253, i64 0, i32 9
  store i32 %257, i32* %258, align 8
  %259 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %253, i64 0, i32 22
  store i16 256, i16* %259, align 2
  %260 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %253, i64 0, i32 15
  store %struct.mbuf* %152, %struct.mbuf** %260, align 8
  %261 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %262 = load %struct.socket*, %struct.socket** %22, align 8
  %263 = getelementptr inbounds %struct.socket, %struct.socket* %262, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %261, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %253, %struct.sockbuf* %263, i32 1, i32 0, i32 %4) #12
  br label %595

264:                                              ; preds = %30, %31
  %265 = bitcast i8* %3 to %struct.sctp_tmit_chunk*
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %1, i8 zeroext 1, i32 %2, %struct.sctp_tmit_chunk* %265, i32 %4)
  br label %595

266:                                              ; preds = %30, %31
  %267 = bitcast i8* %3 to %struct.sctp_tmit_chunk*
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %1, i8 zeroext 0, i32 %2, %struct.sctp_tmit_chunk* %267, i32 %4)
  br label %595

268:                                              ; preds = %31, %30
  %269 = bitcast i8* %3 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %272 = load i64, i64* %271, align 8
  %273 = and i64 %272, 131072
  %274 = icmp ne i64 %273, 0
  %275 = and i32 %13, 1073741824
  %276 = icmp eq i32 %275, 0
  %277 = and i1 %276, %274
  br i1 %277, label %278, label %595

278:                                              ; preds = %268
  %279 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 20, i32 0, i32 1, i32 1, i32 1) #12
  %280 = icmp eq %struct.mbuf* %279, null
  br i1 %280, label %595, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %279, i64 0, i32 0, i32 3
  store i32 0, i32* %282, align 8
  %283 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %279, i64 0, i32 0, i32 2
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 16
  %286 = bitcast i8* %285 to i32*
  store i32 0, i32* %286, align 4
  %287 = bitcast i8* %284 to i16*
  store i16 7, i16* %287, align 4
  %288 = getelementptr inbounds i8, i8* %284, i64 2
  %289 = bitcast i8* %288 to i16*
  store i16 0, i16* %289, align 2
  %290 = getelementptr inbounds i8, i8* %284, i64 4
  %291 = bitcast i8* %290 to i32*
  store i32 20, i32* %291, align 4
  %292 = getelementptr inbounds i8, i8* %284, i64 8
  %293 = bitcast i8* %292 to i32*
  store i32 %2, i32* %293, align 4
  %294 = lshr i32 %270, 16
  %295 = trunc i32 %294 to i16
  %296 = getelementptr inbounds i8, i8* %284, i64 12
  %297 = bitcast i8* %296 to i16*
  store i16 %295, i16* %297, align 4
  %298 = trunc i32 %270 to i16
  %299 = getelementptr inbounds i8, i8* %284, i64 14
  %300 = bitcast i8* %299 to i16*
  store i16 %298, i16* %300, align 2
  %301 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %302 = load i32, i32* %301, align 8
  store i32 %302, i32* %286, align 4
  store i32 20, i32* %282, align 8
  %303 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %279, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %303, align 8
  %304 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %305 = load %struct.sctp_nets*, %struct.sctp_nets** %304, align 8
  %306 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %307 = load i32, i32* %306, align 8
  %308 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %305, i32 0, i32 0, i32 %307, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %279) #12
  %309 = icmp eq %struct.sctp_queued_to_read* %308, null
  br i1 %309, label %310, label %311

310:                                              ; preds = %281
  tail call void @m_freem(%struct.mbuf* nonnull %279) #12
  br label %595

311:                                              ; preds = %281
  %312 = load i32, i32* %282, align 8
  %313 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 9
  store i32 %312, i32* %313, align 8
  %314 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 22
  store i16 256, i16* %314, align 2
  %315 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 15
  store %struct.mbuf* %279, %struct.mbuf** %315, align 8
  %316 = load %struct.socket*, %struct.socket** %22, align 8
  %317 = getelementptr inbounds %struct.socket, %struct.socket* %316, i64 0, i32 21, i32 8
  %318 = load i32, i32* %282, align 8
  %319 = atomicrmw add i32* %317, i32 %318 seq_cst
  %320 = getelementptr inbounds %struct.socket, %struct.socket* %316, i64 0, i32 21, i32 10
  %321 = atomicrmw add i32* %320, i32 256 seq_cst
  %322 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 79
  %323 = load i32, i32* %282, align 8
  %324 = atomicrmw add i32* %322, i32 %323 seq_cst
  %325 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 81
  %326 = atomicrmw add i32* %325, i32 256 seq_cst
  %327 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 24
  store i8 1, i8* %327, align 1
  %328 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 67
  %329 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %328, align 8
  %330 = icmp eq %struct.sctp_queued_to_read* %329, null
  br i1 %330, label %348, label %331

331:                                              ; preds = %311
  %332 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %329, i64 0, i32 18, i32 0
  %333 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %332, align 8
  %334 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 18, i32 0
  store %struct.sctp_queued_to_read* %333, %struct.sctp_queued_to_read** %334, align 8
  %335 = icmp eq %struct.sctp_queued_to_read* %333, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %331
  %337 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %333, i64 0, i32 18, i32 1
  br label %341

338:                                              ; preds = %331
  %339 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %340 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %339, i64 0, i32 1, i32 1
  br label %341

341:                                              ; preds = %338, %336
  %342 = phi %struct.sctp_queued_to_read*** [ %340, %338 ], [ %337, %336 ]
  store %struct.sctp_queued_to_read** %334, %struct.sctp_queued_to_read*** %342, align 8
  %343 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %328, align 8
  %344 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %343, i64 0, i32 18, i32 0
  store %struct.sctp_queued_to_read* %308, %struct.sctp_queued_to_read** %344, align 8
  %345 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %328, align 8
  %346 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %345, i64 0, i32 18, i32 0
  %347 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 18, i32 1
  store %struct.sctp_queued_to_read** %346, %struct.sctp_queued_to_read*** %347, align 8
  br label %361

348:                                              ; preds = %311
  %349 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 18, i32 0
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %349, align 8
  %350 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %351 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %350, i64 0, i32 1, i32 1
  %352 = bitcast %struct.sctp_queued_to_read*** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %308, i64 0, i32 18, i32 1
  %355 = bitcast %struct.sctp_queued_to_read*** %354 to i64*
  store i64 %353, i64* %355, align 8
  %356 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %357 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %356, i64 0, i32 1, i32 1
  %358 = load %struct.sctp_queued_to_read**, %struct.sctp_queued_to_read*** %357, align 8
  store %struct.sctp_queued_to_read* %308, %struct.sctp_queued_to_read** %358, align 8
  %359 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %360 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %359, i64 0, i32 1, i32 1
  store %struct.sctp_queued_to_read** %349, %struct.sctp_queued_to_read*** %360, align 8
  br label %361

361:                                              ; preds = %348, %341
  %362 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %363 = icmp eq %struct.sctp_inpcb* %362, null
  br i1 %363, label %595, label %364

364:                                              ; preds = %361
  %365 = load %struct.socket*, %struct.socket** %22, align 8
  %366 = icmp eq %struct.socket* %365, null
  br i1 %366, label %595, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %362, i64 0, i32 9
  %369 = load i32, i32* %368, align 8
  %370 = and i32 %369, 8388608
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %374, label %372

372:                                              ; preds = %367
  %373 = or i32 %369, 33554432
  store i32 %373, i32* %368, align 8
  br label %595

374:                                              ; preds = %367
  %375 = getelementptr inbounds %struct.socket, %struct.socket* %365, i64 0, i32 21, i32 1
  %376 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %375) #12
  %377 = load %struct.socket*, %struct.socket** %22, align 8
  %378 = getelementptr inbounds %struct.socket, %struct.socket* %377, i64 0, i32 21, i32 15
  %379 = load i16, i16* %378, align 8
  %380 = and i16 %379, 444
  %381 = icmp eq i16 %380, 0
  br i1 %381, label %384, label %382

382:                                              ; preds = %374
  %383 = getelementptr inbounds %struct.socket, %struct.socket* %377, i64 0, i32 21
  tail call void @sowakeup(%struct.socket* %377, %struct.sockbuf* %383) #12
  br label %595

384:                                              ; preds = %374
  %385 = getelementptr inbounds %struct.socket, %struct.socket* %377, i64 0, i32 21, i32 1
  %386 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %385) #12
  br label %595

387:                                              ; preds = %30, %31
  switch i32 %29, label %391 [
    i32 2, label %388
    i32 4, label %388
  ]

388:                                              ; preds = %387, %387
  %389 = trunc i32 %2 to i16
  %390 = bitcast i8* %3 to %struct.sctp_abort_chunk*
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 5, %struct.sctp_tcb* nonnull %1, i16 zeroext %389, %struct.sctp_abort_chunk* %390, i8 zeroext 0, i32 %4)
  br label %595

391:                                              ; preds = %387
  %392 = trunc i32 %2 to i16
  %393 = bitcast i8* %3 to %struct.sctp_abort_chunk*
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 2, %struct.sctp_tcb* nonnull %1, i16 zeroext %392, %struct.sctp_abort_chunk* %393, i8 zeroext 0, i32 %4)
  br label %595

394:                                              ; preds = %30, %31
  switch i32 %29, label %398 [
    i32 2, label %395
    i32 4, label %395
  ]

395:                                              ; preds = %394, %394
  %396 = trunc i32 %2 to i16
  %397 = bitcast i8* %3 to %struct.sctp_abort_chunk*
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 5, %struct.sctp_tcb* nonnull %1, i16 zeroext %396, %struct.sctp_abort_chunk* %397, i8 zeroext 1, i32 %4)
  br label %595

398:                                              ; preds = %394
  %399 = trunc i32 %2 to i16
  %400 = bitcast i8* %3 to %struct.sctp_abort_chunk*
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 2, %struct.sctp_tcb* nonnull %1, i16 zeroext %399, %struct.sctp_abort_chunk* %400, i8 zeroext 1, i32 %4)
  br label %595

401:                                              ; preds = %30, %31
  %402 = trunc i32 %2 to i16
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 3, %struct.sctp_tcb* nonnull %1, i16 zeroext %402, %struct.sctp_abort_chunk* null, i8 zeroext 0, i32 %4)
  %403 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %595

406:                                              ; preds = %401
  %407 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %408 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %407, i64 0, i32 9
  %409 = load i32, i32* %408, align 8
  %410 = and i32 %409, 805306368
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %595

412:                                              ; preds = %406
  %413 = load i32, i32* %17, align 8
  %414 = and i32 %413, 256
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %595

416:                                              ; preds = %412
  %417 = load %struct.socket*, %struct.socket** %22, align 8
  %418 = getelementptr inbounds %struct.socket, %struct.socket* %417, i64 0, i32 4
  %419 = load i16, i16* %418, align 2
  %420 = and i16 %419, 32
  %421 = icmp eq i16 %420, 0
  br i1 %421, label %422, label %595

422:                                              ; preds = %416
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* nonnull %1, i32 2, i16 zeroext 0, i16 zeroext 0, i32 %4) #12
  br label %595

423:                                              ; preds = %30, %31
  %424 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %424, i32 2)
  br label %595

425:                                              ; preds = %30, %31
  %426 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %426, i32 1)
  br label %595

427:                                              ; preds = %30, %31
  %428 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %428, i32 10)
  br label %595

429:                                              ; preds = %30, %31
  %430 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %430, i32 6)
  br label %595

431:                                              ; preds = %30, %31
  %432 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %432, i32 9)
  br label %595

433:                                              ; preds = %30, %31
  %434 = bitcast i8* %3 to i16*
  tail call fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb* nonnull %1, i32 %2, i16* %434, i32 5)
  br label %595

435:                                              ; preds = %30, %31
  %436 = bitcast i8* %3 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 4, %struct.sockaddr* %436, i32 %2, i32 %4)
  br label %595

437:                                              ; preds = %30, %31
  %438 = bitcast i8* %3 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 3, %struct.sockaddr* %438, i32 %2, i32 %4)
  br label %595

439:                                              ; preds = %30, %31
  %440 = bitcast i8* %3 to %struct.sockaddr*
  tail call fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb* nonnull %1, i32 5, %struct.sockaddr* %440, i32 %2, i32 %4)
  br label %595

441:                                              ; preds = %30, %31
  %442 = and i32 %13, 4194306
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %445, label %444

444:                                              ; preds = %441
  tail call void @socantsendmore(%struct.socket* %23) #12
  br label %445

445:                                              ; preds = %441, %444
  %446 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %447 = load i64, i64* %446, align 8
  %448 = trunc i64 %447 to i16
  %449 = icmp sgt i16 %448, -1
  br i1 %449, label %595, label %450

450:                                              ; preds = %445
  %451 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 12, i32 0, i32 1, i32 1, i32 1) #12
  %452 = icmp eq %struct.mbuf* %451, null
  br i1 %452, label %595, label %453

453:                                              ; preds = %450
  %454 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %451, i64 0, i32 0, i32 2
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 8
  %457 = bitcast i8* %456 to i32*
  store i32 0, i32* %457, align 4
  %458 = bitcast i8* %455 to i16*
  store i16 5, i16* %458, align 4
  %459 = getelementptr inbounds i8, i8* %455, i64 2
  %460 = bitcast i8* %459 to i16*
  store i16 0, i16* %460, align 2
  %461 = getelementptr inbounds i8, i8* %455, i64 4
  %462 = bitcast i8* %461 to i32*
  store i32 12, i32* %462, align 4
  %463 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %464 = load i32, i32* %463, align 8
  store i32 %464, i32* %457, align 4
  %465 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %451, i64 0, i32 0, i32 3
  store i32 12, i32* %465, align 8
  %466 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %451, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %466, align 8
  %467 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %468 = load %struct.sctp_nets*, %struct.sctp_nets** %467, align 8
  %469 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %470 = load i32, i32* %469, align 8
  %471 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %468, i32 0, i32 0, i32 %470, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %451) #12
  %472 = icmp eq %struct.sctp_queued_to_read* %471, null
  br i1 %472, label %473, label %474

473:                                              ; preds = %453
  tail call void @m_freem(%struct.mbuf* nonnull %451) #12
  br label %595

474:                                              ; preds = %453
  %475 = load i32, i32* %465, align 8
  %476 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %471, i64 0, i32 9
  store i32 %475, i32* %476, align 8
  %477 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %471, i64 0, i32 22
  store i16 256, i16* %477, align 2
  %478 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %471, i64 0, i32 15
  store %struct.mbuf* %451, %struct.mbuf** %478, align 8
  %479 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %480 = load %struct.socket*, %struct.socket** %22, align 8
  %481 = getelementptr inbounds %struct.socket, %struct.socket* %480, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %479, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %471, %struct.sockbuf* %481, i32 1, i32 0, i32 0) #12
  br label %595

482:                                              ; preds = %30, %31
  %483 = trunc i32 %2 to i16
  %484 = ptrtoint i8* %3 to i64
  %485 = trunc i64 %484 to i16
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* nonnull %1, i32 1, i16 zeroext %483, i16 zeroext %485, i32 %4) #12
  br label %595

486:                                              ; preds = %30, %31
  %487 = trunc i32 %2 to i16
  %488 = ptrtoint i8* %3 to i64
  %489 = trunc i64 %488 to i16
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* nonnull %1, i32 3, i16 zeroext %487, i16 zeroext %489, i32 %4) #12
  br label %595

490:                                              ; preds = %30, %31
  %491 = trunc i32 %2 to i16
  %492 = ptrtoint i8* %3 to i64
  %493 = trunc i64 %492 to i16
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* nonnull %1, i32 2, i16 zeroext %491, i16 zeroext %493, i32 %4) #12
  br label %595

494:                                              ; preds = %31, %30
  %495 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %496 = load i64, i64* %495, align 8
  %497 = and i64 %496, 67108864
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %595, label %499

499:                                              ; preds = %494
  %500 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 12, i32 0, i32 1, i32 1, i32 1) #12
  %501 = icmp eq %struct.mbuf* %500, null
  br i1 %501, label %595, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %500, i64 0, i32 0, i32 3
  store i32 0, i32* %503, align 8
  %504 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %500, i64 0, i32 0, i32 2
  %505 = load i8*, i8** %504, align 8
  %506 = getelementptr inbounds i8, i8* %505, i64 8
  %507 = bitcast i8* %506 to i32*
  store i32 0, i32* %507, align 4
  %508 = bitcast i8* %505 to i16*
  store i16 10, i16* %508, align 4
  %509 = getelementptr inbounds i8, i8* %505, i64 2
  %510 = bitcast i8* %509 to i16*
  store i16 0, i16* %510, align 2
  %511 = getelementptr inbounds i8, i8* %505, i64 4
  %512 = bitcast i8* %511 to i32*
  store i32 12, i32* %512, align 4
  %513 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %514 = load i32, i32* %513, align 8
  store i32 %514, i32* %507, align 4
  store i32 12, i32* %503, align 8
  %515 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %500, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %515, align 8
  %516 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %517 = load %struct.sctp_nets*, %struct.sctp_nets** %516, align 8
  %518 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %519 = load i32, i32* %518, align 8
  %520 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %517, i32 0, i32 0, i32 %519, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %500) #12
  %521 = icmp eq %struct.sctp_queued_to_read* %520, null
  br i1 %521, label %522, label %523

522:                                              ; preds = %502
  tail call void @m_freem(%struct.mbuf* nonnull %500) #12
  br label %595

523:                                              ; preds = %502
  %524 = load i32, i32* %503, align 8
  %525 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %520, i64 0, i32 9
  store i32 %524, i32* %525, align 8
  %526 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %520, i64 0, i32 22
  store i16 256, i16* %526, align 2
  %527 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %520, i64 0, i32 15
  store %struct.mbuf* %500, %struct.mbuf** %527, align 8
  %528 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %529 = load %struct.socket*, %struct.socket** %22, align 8
  %530 = getelementptr inbounds %struct.socket, %struct.socket* %529, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %528, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %520, %struct.sockbuf* %530, i32 1, i32 0, i32 %4) #12
  br label %595

531:                                              ; preds = %31, %30
  %532 = trunc i32 %2 to i16
  %533 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %534 = load i64, i64* %533, align 8
  %535 = and i64 %534, 8192
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %595, label %537

537:                                              ; preds = %531
  %538 = icmp eq i8* %3, null
  br i1 %538, label %546, label %539

539:                                              ; preds = %537
  %540 = getelementptr inbounds i8, i8* %3, i64 2
  %541 = bitcast i8* %540 to i16*
  %542 = load i16, i16* %541, align 1
  %543 = tail call i16 @llvm.bswap.i16(i16 %542) #12
  %544 = icmp ult i16 %543, 512
  %545 = select i1 %544, i16 %543, i16 512
  br label %546

546:                                              ; preds = %539, %537
  %547 = phi i16 [ %545, %539 ], [ 0, %537 ]
  %548 = zext i16 %547 to i64
  %549 = add nuw nsw i16 %547, 16
  %550 = zext i16 %549 to i32
  %551 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %550, i32 0, i32 1, i32 1, i32 1) #12
  %552 = icmp eq %struct.mbuf* %551, null
  br i1 %552, label %553, label %556

553:                                              ; preds = %546
  %554 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 16, i32 0, i32 1, i32 1, i32 1) #12
  %555 = icmp eq %struct.mbuf* %554, null
  br i1 %555, label %595, label %556

556:                                              ; preds = %553, %546
  %557 = phi %struct.mbuf* [ %554, %553 ], [ %551, %546 ]
  %558 = phi i32 [ 16, %553 ], [ %550, %546 ]
  %559 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %557, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %559, align 8
  %560 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %557, i64 0, i32 0, i32 2
  %561 = load i8*, i8** %560, align 8
  %562 = zext i32 %558 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %561, i8 0, i64 %562, i1 false) #12
  %563 = bitcast i8* %561 to i16*
  store i16 3, i16* %563, align 4
  %564 = getelementptr inbounds i8, i8* %561, i64 2
  %565 = bitcast i8* %564 to i16*
  store i16 0, i16* %565, align 2
  %566 = getelementptr inbounds i8, i8* %561, i64 4
  %567 = bitcast i8* %566 to i32*
  store i32 16, i32* %567, align 4
  %568 = getelementptr inbounds i8, i8* %561, i64 8
  %569 = bitcast i8* %568 to i16*
  store i16 %532, i16* %569, align 4
  %570 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %571 = load i32, i32* %570, align 8
  %572 = getelementptr inbounds i8, i8* %561, i64 12
  %573 = bitcast i8* %572 to i32*
  store i32 %571, i32* %573, align 4
  %574 = icmp ugt i32 %558, 16
  br i1 %574, label %575, label %577

575:                                              ; preds = %556
  %576 = getelementptr inbounds i8, i8* %561, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %576, i8* align 1 %3, i64 %548, i1 false) #12
  store i32 %550, i32* %567, align 4
  br label %577

577:                                              ; preds = %575, %556
  %578 = phi i32 [ %550, %575 ], [ 16, %556 ]
  %579 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %557, i64 0, i32 0, i32 3
  store i32 %578, i32* %579, align 8
  %580 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %581 = load %struct.sctp_nets*, %struct.sctp_nets** %580, align 8
  %582 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %583 = load i32, i32* %582, align 8
  %584 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %581, i32 0, i32 0, i32 %583, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %557) #12
  %585 = icmp eq %struct.sctp_queued_to_read* %584, null
  br i1 %585, label %594, label %586

586:                                              ; preds = %577
  %587 = load i32, i32* %579, align 8
  %588 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %584, i64 0, i32 9
  store i32 %587, i32* %588, align 8
  %589 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %584, i64 0, i32 22
  store i16 256, i16* %589, align 2
  %590 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %584, i64 0, i32 15
  store %struct.mbuf* %557, %struct.mbuf** %590, align 8
  %591 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %10, align 8
  %592 = load %struct.socket*, %struct.socket** %22, align 8
  %593 = getelementptr inbounds %struct.socket, %struct.socket* %592, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %591, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %584, %struct.sockbuf* %593, i32 1, i32 0, i32 0) #12
  br label %595

594:                                              ; preds = %577
  tail call void @m_freem(%struct.mbuf* nonnull %557) #12
  br label %595

595:                                              ; preds = %268, %594, %586, %553, %531, %523, %522, %499, %494, %474, %473, %450, %445, %422, %416, %412, %406, %384, %382, %372, %364, %361, %310, %278, %256, %255, %247, %148, %143, %108, %102, %98, %92, %30, %115, %109, %21, %16, %9, %31, %401, %395, %398, %388, %391, %118, %88, %5, %490, %486, %482, %439, %437, %435, %433, %431, %429, %427, %425, %423, %266, %264, %140, %137, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_notify_assoc_change(i16 zeroext, %struct.sctp_tcb*, i16 zeroext, %struct.sctp_abort_chunk* readonly, i8 zeroext, i32) unnamed_addr #3 {
  %7 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %7, label %214, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 194
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 2048
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %142, label %13

13:                                               ; preds = %8
  %14 = icmp eq %struct.sctp_abort_chunk* %3, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.sctp_abort_chunk, %struct.sctp_abort_chunk* %3, i64 0, i32 0, i32 2
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #12
  %19 = icmp ult i16 %18, 512
  %20 = select i1 %19, i16 %18, i16 512
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i16 [ %20, %15 ], [ 0, %13 ]
  switch i16 %0, label %26 [
    i16 3, label %27
    i16 1, label %27
    i16 2, label %23
    i16 5, label %23
  ]

23:                                               ; preds = %21, %21
  %24 = add nuw nsw i16 %22, 20
  %25 = zext i16 %24 to i32
  br label %27

26:                                               ; preds = %21
  br label %27

27:                                               ; preds = %21, %21, %26, %23
  %28 = phi i32 [ %25, %23 ], [ 26, %21 ], [ 26, %21 ], [ 20, %26 ]
  %29 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %28, i32 0, i32 1, i32 1, i32 1) #12
  %30 = icmp eq %struct.mbuf* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 20, i32 0, i32 1, i32 1, i32 1) #12
  %33 = icmp eq %struct.mbuf* %32, null
  br i1 %33, label %142, label %34

34:                                               ; preds = %31, %27
  %35 = phi %struct.mbuf* [ %32, %31 ], [ %29, %27 ]
  %36 = phi i32 [ 20, %31 ], [ %28, %27 ]
  %37 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %37, align 8
  %38 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = zext i32 %36 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 %40, i1 false)
  %41 = bitcast i8* %39 to i16*
  store i16 1, i16* %41, align 4
  %42 = getelementptr inbounds i8, i8* %39, i64 2
  %43 = bitcast i8* %42 to i16*
  store i16 0, i16* %43, align 2
  %44 = getelementptr inbounds i8, i8* %39, i64 4
  %45 = bitcast i8* %44 to i32*
  store i32 20, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %39, i64 8
  %47 = bitcast i8* %46 to i16*
  store i16 %0, i16* %47, align 4
  %48 = getelementptr inbounds i8, i8* %39, i64 10
  %49 = bitcast i8* %48 to i16*
  store i16 %2, i16* %49, align 2
  %50 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 129
  %51 = load i16, i16* %50, align 2
  %52 = getelementptr inbounds i8, i8* %39, i64 12
  %53 = bitcast i8* %52 to i16*
  store i16 %51, i16* %53, align 4
  %54 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 128
  %55 = load i16, i16* %54, align 8
  %56 = getelementptr inbounds i8, i8* %39, i64 14
  %57 = bitcast i8* %56 to i16*
  store i16 %55, i16* %57, align 2
  %58 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 52
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds i8, i8* %39, i64 16
  %61 = bitcast i8* %60 to i32*
  store i32 %59, i32* %61, align 4
  %62 = icmp ugt i32 %36, 20
  br i1 %62, label %63, label %122

63:                                               ; preds = %34
  switch i16 %0, label %122 [
    i16 3, label %64
    i16 1, label %64
    i16 2, label %116
    i16 5, label %116
  ]

64:                                               ; preds = %63, %63
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 162
  %66 = load i8, i8* %65, align 4
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = getelementptr inbounds i8, i8* %39, i64 20
  store i8 1, i8* %69, align 1
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i32 [ 1, %68 ], [ 0, %64 ]
  %72 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 1
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %39, i64 20
  %77 = add nuw nsw i32 %71, 1
  %78 = zext i32 %71 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  store i8 2, i8* %79, align 1
  br label %80

80:                                               ; preds = %75, %70
  %81 = phi i32 [ %77, %75 ], [ %71, %70 ]
  %82 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 164
  %83 = load i8, i8* %82, align 2
  %84 = icmp eq i8 %83, 1
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = getelementptr inbounds i8, i8* %39, i64 20
  %87 = add nuw nsw i32 %81, 1
  %88 = zext i32 %81 to i64
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  store i8 3, i8* %89, align 1
  br label %90

90:                                               ; preds = %85, %80
  %91 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %92 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %93 = load i8, i8* %92, align 2
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %39, i64 20
  %97 = add nuw nsw i32 %91, 1
  %98 = zext i32 %91 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  store i8 6, i8* %99, align 1
  br label %100

100:                                              ; preds = %95, %90
  %101 = phi i32 [ %97, %95 ], [ %91, %90 ]
  %102 = getelementptr inbounds i8, i8* %39, i64 20
  %103 = add nuw nsw i32 %101, 1
  %104 = zext i32 %101 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  store i8 4, i8* %105, align 1
  %106 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 165
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 1
  br i1 %108, label %109, label %113

109:                                              ; preds = %100
  %110 = add nuw nsw i32 %101, 2
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds i8, i8* %102, i64 %111
  store i8 5, i8* %112, align 1
  br label %113

113:                                              ; preds = %109, %100
  %114 = phi i32 [ %110, %109 ], [ %103, %100 ]
  %115 = add nuw nsw i32 %114, 20
  store i32 %115, i32* %45, align 4
  br label %122

116:                                              ; preds = %63, %63
  %117 = getelementptr inbounds i8, i8* %39, i64 20
  %118 = getelementptr inbounds %struct.sctp_abort_chunk, %struct.sctp_abort_chunk* %3, i64 0, i32 0, i32 0
  %119 = zext i16 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 1 %118, i64 %119, i1 false)
  %120 = add nuw nsw i16 %22, 20
  %121 = zext i16 %120 to i32
  store i32 %121, i32* %45, align 4
  br label %122

122:                                              ; preds = %63, %113, %116, %34
  %123 = phi i32 [ 20, %63 ], [ %115, %113 ], [ %121, %116 ], [ 20, %34 ]
  %124 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 3
  store i32 %123, i32* %124, align 8
  %125 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %126 = load %struct.sctp_nets*, %struct.sctp_nets** %125, align 8
  %127 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 70
  %128 = load i32, i32* %127, align 8
  %129 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %1, %struct.sctp_nets* %126, i32 0, i32 0, i32 %128, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %35) #12
  %130 = icmp eq %struct.sctp_queued_to_read* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %122
  %132 = load i32, i32* %124, align 8
  %133 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %129, i64 0, i32 9
  store i32 %132, i32* %133, align 8
  %134 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %129, i64 0, i32 22
  store i16 256, i16* %134, align 2
  %135 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %129, i64 0, i32 15
  store %struct.mbuf* %35, %struct.mbuf** %135, align 8
  %136 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %137 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %136, align 8
  %138 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %139 = load %struct.socket*, %struct.socket** %138, align 8
  %140 = getelementptr inbounds %struct.socket, %struct.socket* %139, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %137, %struct.sctp_tcb* nonnull %1, %struct.sctp_queued_to_read* nonnull %129, %struct.sockbuf* %140, i32 1, i32 0, i32 %5)
  br label %142

141:                                              ; preds = %122
  tail call void @m_freem(%struct.mbuf* nonnull %35) #12
  br label %142

142:                                              ; preds = %8, %141, %131, %31
  %143 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %144 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %143, align 8
  %145 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %144, i64 0, i32 9
  %146 = load i32, i32* %145, align 8
  %147 = and i32 %146, 4194306
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %185, label %149

149:                                              ; preds = %142
  switch i16 %0, label %185 [
    i16 2, label %150
    i16 5, label %150
  ]

150:                                              ; preds = %149, %149
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %152 = load %struct.socket*, %struct.socket** %151, align 8
  %153 = getelementptr inbounds %struct.socket, %struct.socket* %152, i64 0, i32 21, i32 1
  %154 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %153) #12
  %155 = icmp eq i8 %4, 0
  %156 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = and i32 %157, 127
  br i1 %155, label %165, label %159

159:                                              ; preds = %150
  %160 = icmp eq i32 %158, 2
  %161 = load %struct.socket*, %struct.socket** %151, align 8
  %162 = getelementptr inbounds %struct.socket, %struct.socket* %161, i64 0, i32 17
  br i1 %160, label %163, label %164

163:                                              ; preds = %159
  store i16 111, i16* %162, align 8
  br label %172

164:                                              ; preds = %159
  store i16 104, i16* %162, align 8
  br label %172

165:                                              ; preds = %150
  switch i32 %158, label %169 [
    i32 4, label %166
    i32 2, label %166
  ]

166:                                              ; preds = %165, %165
  %167 = load %struct.socket*, %struct.socket** %151, align 8
  %168 = getelementptr inbounds %struct.socket, %struct.socket* %167, i64 0, i32 17
  store i16 110, i16* %168, align 8
  br label %172

169:                                              ; preds = %165
  %170 = load %struct.socket*, %struct.socket** %151, align 8
  %171 = getelementptr inbounds %struct.socket, %struct.socket* %170, i64 0, i32 17
  store i16 103, i16* %171, align 8
  br label %172

172:                                              ; preds = %164, %163, %169, %166
  %173 = load %struct.socket*, %struct.socket** %151, align 8
  %174 = getelementptr inbounds %struct.socket, %struct.socket* %173, i64 0, i32 21, i32 1
  %175 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %174) #12
  %176 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %143, align 8
  %177 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %176, i64 0, i32 9
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 4194306
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %172
  switch i16 %0, label %185 [
    i16 2, label %182
    i16 5, label %182
  ]

182:                                              ; preds = %181, %181
  %183 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %184 = load %struct.socket*, %struct.socket** %183, align 8
  tail call void @socantrcvmore(%struct.socket* %184) #12
  br label %185

185:                                              ; preds = %149, %142, %181, %172, %182
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %187 = load %struct.socket*, %struct.socket** %186, align 8
  %188 = getelementptr inbounds %struct.socket, %struct.socket* %187, i64 0, i32 21, i32 1
  %189 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %188) #12
  %190 = load %struct.socket*, %struct.socket** %186, align 8
  %191 = getelementptr inbounds %struct.socket, %struct.socket* %190, i64 0, i32 21, i32 15
  %192 = load i16, i16* %191, align 8
  %193 = and i16 %192, 444
  %194 = icmp eq i16 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %185
  %196 = getelementptr inbounds %struct.socket, %struct.socket* %190, i64 0, i32 21
  tail call void @sowakeup(%struct.socket* %190, %struct.sockbuf* %196) #12
  br label %200

197:                                              ; preds = %185
  %198 = getelementptr inbounds %struct.socket, %struct.socket* %190, i64 0, i32 21, i32 1
  %199 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %198) #12
  br label %200

200:                                              ; preds = %195, %197
  %201 = load %struct.socket*, %struct.socket** %186, align 8
  %202 = getelementptr inbounds %struct.socket, %struct.socket* %201, i64 0, i32 22, i32 1
  %203 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %202) #12
  %204 = load %struct.socket*, %struct.socket** %186, align 8
  %205 = getelementptr inbounds %struct.socket, %struct.socket* %204, i64 0, i32 22, i32 15
  %206 = load i16, i16* %205, align 8
  %207 = and i16 %206, 444
  %208 = icmp eq i16 %207, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %200
  %210 = getelementptr inbounds %struct.socket, %struct.socket* %204, i64 0, i32 22
  tail call void @sowakeup(%struct.socket* %204, %struct.sockbuf* %210) #12
  br label %214

211:                                              ; preds = %200
  %212 = getelementptr inbounds %struct.socket, %struct.socket* %204, i64 0, i32 22, i32 1
  %213 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %212) #12
  br label %214

214:                                              ; preds = %209, %211, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_notify_peer_addr_change(%struct.sctp_tcb*, i32, %struct.sockaddr* nocapture readonly, i32, i32) unnamed_addr #3 {
  %6 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %6, label %58, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4096
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %7
  %13 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 152, i32 0, i32 1, i32 1, i32 1) #12
  %14 = icmp eq %struct.mbuf* %13, null
  br i1 %14, label %58, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 3
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 144, i1 false)
  %20 = bitcast i8* %18 to i16*
  store i16 2, i16* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 2
  %22 = bitcast i8* %21 to i16*
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %18, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 152, i32* %24, align 4
  %25 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %2, i64 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 123
  br i1 %27, label %28, label %31

28:                                               ; preds = %15
  %29 = getelementptr inbounds i8, i8* %18, i64 8
  %30 = bitcast %struct.sockaddr* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 2 %30, i64 16, i1 false)
  br label %31

31:                                               ; preds = %15, %28
  %32 = getelementptr inbounds i8, i8* %18, i64 136
  %33 = bitcast i8* %32 to i32*
  store i32 %1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %18, i64 140
  %35 = bitcast i8* %34 to i32*
  store i32 %3, i32* %35, align 4
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds i8, i8* %18, i64 144
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 8
  store i32 152, i32* %16, align 8
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %40, align 8
  %41 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %42 = load %struct.sctp_nets*, %struct.sctp_nets** %41, align 8
  %43 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %44 = load i32, i32* %43, align 8
  %45 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %42, i32 0, i32 0, i32 %44, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %13) #12
  %46 = icmp eq %struct.sctp_queued_to_read* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %31
  tail call void @m_freem(%struct.mbuf* nonnull %13) #12
  br label %58

48:                                               ; preds = %31
  %49 = load i32, i32* %16, align 8
  %50 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %45, i64 0, i32 9
  store i32 %49, i32* %50, align 8
  %51 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %45, i64 0, i32 22
  store i16 256, i16* %51, align 2
  %52 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %45, i64 0, i32 15
  store %struct.mbuf* %13, %struct.mbuf** %52, align 8
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %54 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %53, align 8
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %56 = load %struct.socket*, %struct.socket** %55, align 8
  %57 = getelementptr inbounds %struct.socket, %struct.socket* %56, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %54, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %45, %struct.sockbuf* %57, i32 1, i32 0, i32 %4)
  br label %58

58:                                               ; preds = %12, %5, %7, %48, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_notify_send_failed(%struct.sctp_tcb*, i8 zeroext, i32, %struct.sctp_tmit_chunk* nocapture, i32) unnamed_addr #3 {
  %6 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %6, label %200, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 2147500032
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %200, label %12

12:                                               ; preds = %7
  %13 = trunc i64 %9 to i32
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 32, i32 144
  %16 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %15, i32 0, i32 1, i32 1, i32 1) #12
  %17 = icmp eq %struct.mbuf* %16, null
  br i1 %17, label %200, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %16, i64 0, i32 0, i32 3
  store i32 %15, i32* %19, align 8
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 16, i32 20
  %24 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 10
  %25 = load i16, i16* %24, align 8
  %26 = zext i16 %25 to i32
  %27 = icmp ugt i32 %23, %26
  %28 = sub nsw i32 %26, %23
  %29 = select i1 %27, i32 0, i32 %28
  %30 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 3
  %31 = load %struct.mbuf*, %struct.mbuf** %30, align 8
  %32 = icmp eq %struct.mbuf* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %18
  %34 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %31, i64 0, i32 0, i32 2
  %35 = bitcast i8** %34 to %struct.sctp_chunkhdr**
  %36 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %35, align 8
  %37 = icmp eq %struct.sctp_chunkhdr* %36, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %36, i64 0, i32 2
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #12
  %42 = zext i16 %41 to i32
  %43 = icmp ugt i32 %23, %42
  %44 = icmp ult i16 %25, %41
  %45 = or i1 %44, %43
  br i1 %45, label %52, label %46

46:                                               ; preds = %38
  %47 = sub nsw i32 %26, %42
  %48 = icmp slt i32 %47, 4
  %49 = sub nsw i32 %28, %47
  %50 = select i1 %48, i32 %47, i32 0
  %51 = select i1 %48, i32 %49, i32 %29
  br label %52

52:                                               ; preds = %46, %18, %33, %38
  %53 = phi i32 [ 0, %38 ], [ 0, %33 ], [ 0, %18 ], [ %50, %46 ]
  %54 = phi i32 [ %29, %38 ], [ %29, %33 ], [ %29, %18 ], [ %51, %46 ]
  %55 = load i64, i64* %8, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp slt i32 %56, 0
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %16, i64 0, i32 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = zext i32 %15 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %60, i1 false)
  %61 = bitcast i8* %59 to i16*
  br i1 %57, label %62, label %81

62:                                               ; preds = %52
  store i16 14, i16* %61, align 4
  %63 = icmp eq i8 %1, 0
  %64 = getelementptr inbounds i8, i8* %59, i64 2
  %65 = bitcast i8* %64 to i16*
  %66 = select i1 %63, i16 1, i16 2
  store i16 %66, i16* %65, align 2
  %67 = add nsw i32 %54, %15
  %68 = getelementptr inbounds i8, i8* %59, i64 4
  %69 = bitcast i8* %68 to i32*
  store i32 %67, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %59, i64 8
  %71 = bitcast i8* %70 to i32*
  store i32 %2, i32* %71, align 4
  %72 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 2
  %73 = load i16, i16* %72, align 8
  %74 = getelementptr inbounds i8, i8* %59, i64 12
  %75 = bitcast i8* %74 to i16*
  store i16 %73, i16* %75, align 4
  %76 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 10
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  %79 = getelementptr inbounds i8, i8* %59, i64 14
  %80 = bitcast i8* %79 to i16*
  store i16 %78, i16* %80, align 2
  br label %105

81:                                               ; preds = %52
  store i16 4, i16* %61, align 4
  %82 = icmp eq i8 %1, 0
  %83 = getelementptr inbounds i8, i8* %59, i64 2
  %84 = bitcast i8* %83 to i16*
  %85 = select i1 %82, i16 1, i16 2
  store i16 %85, i16* %84, align 2
  %86 = add nsw i32 %54, %15
  %87 = getelementptr inbounds i8, i8* %59, i64 4
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %59, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 %2, i32* %90, align 4
  %91 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 2
  %92 = load i16, i16* %91, align 8
  %93 = getelementptr inbounds i8, i8* %59, i64 12
  %94 = bitcast i8* %93 to i16*
  store i16 %92, i16* %94, align 4
  %95 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = trunc i32 %96 to i16
  %98 = getelementptr inbounds i8, i8* %59, i64 14
  %99 = bitcast i8* %98 to i16*
  store i16 %97, i16* %99, align 2
  %100 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 10
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = getelementptr inbounds i8, i8* %59, i64 16
  %104 = bitcast i8* %103 to i16*
  store i16 %102, i16* %104, align 4
  br label %105

105:                                              ; preds = %81, %62
  %106 = phi i64 [ 20, %81 ], [ 16, %62 ]
  %107 = phi i64 [ 24, %81 ], [ 20, %62 ]
  %108 = phi i64 [ 40, %81 ], [ 24, %62 ]
  %109 = phi i64 [ 140, %81 ], [ 28, %62 ]
  %110 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i8, i8* %59, i64 %106
  %113 = bitcast i8* %112 to i32*
  store i32 %111, i32* %113, align 4
  %114 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %3, i64 0, i32 0, i32 0, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds i8, i8* %59, i64 %107
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds i8, i8* %59, i64 %108
  %121 = bitcast i8* %120 to i32*
  store i32 %119, i32* %121, align 4
  %122 = load i32, i32* %118, align 8
  %123 = getelementptr inbounds i8, i8* %59, i64 %109
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 4
  %125 = load %struct.mbuf*, %struct.mbuf** %30, align 8
  %126 = icmp eq %struct.mbuf* %125, null
  %127 = ptrtoint %struct.mbuf* %125 to i64
  br i1 %126, label %166, label %128

128:                                              ; preds = %105
  %129 = load i16, i16* %24, align 8
  %130 = zext i16 %129 to i32
  %131 = add nsw i32 %53, %23
  %132 = add nsw i32 %131, %54
  %133 = icmp eq i32 %132, %130
  br i1 %133, label %134, label %166

134:                                              ; preds = %128
  tail call void @m_adj(%struct.mbuf* nonnull %125, i32 %23) #12
  %135 = load %struct.mbuf*, %struct.mbuf** %30, align 8
  %136 = sub nsw i32 0, %53
  tail call void @m_adj(%struct.mbuf* %135, i32 %136) #12
  %137 = load %struct.mbuf*, %struct.mbuf** %30, align 8
  %138 = icmp eq %struct.mbuf* %137, null
  %139 = ptrtoint %struct.mbuf* %137 to i64
  br i1 %138, label %161, label %140

140:                                              ; preds = %134
  %141 = bitcast %struct.mbuf** %30 to i64*
  %142 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %137, i64 0, i32 0, i32 3
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %161

145:                                              ; preds = %149
  %146 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %155, i64 0, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %159

149:                                              ; preds = %140, %145
  %150 = phi %struct.mbuf* [ %155, %145 ], [ %137, %140 ]
  %151 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %150, i64 0, i32 0, i32 0
  %152 = bitcast %struct.mbuf* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %141, align 8
  store %struct.mbuf* null, %struct.mbuf** %151, align 8
  %154 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %150) #12
  %155 = load %struct.mbuf*, %struct.mbuf** %30, align 8
  %156 = icmp eq %struct.mbuf* %155, null
  br i1 %156, label %157, label %145

157:                                              ; preds = %149
  %158 = ptrtoint %struct.mbuf* %155 to i64
  br label %161

159:                                              ; preds = %145
  %160 = ptrtoint %struct.mbuf* %155 to i64
  br label %161

161:                                              ; preds = %140, %159, %157, %134
  %162 = phi i64 [ %139, %134 ], [ %158, %157 ], [ %160, %159 ], [ %139, %140 ]
  %163 = load i16, i16* %24, align 8
  %164 = trunc i32 %131 to i16
  %165 = sub i16 %163, %164
  store i16 %165, i16* %24, align 8
  br label %166

166:                                              ; preds = %105, %128, %161
  %167 = phi i64 [ %127, %105 ], [ %127, %128 ], [ %162, %161 ]
  %168 = bitcast %struct.mbuf* %16 to i64*
  store i64 %167, i64* %168, align 8
  store %struct.mbuf* null, %struct.mbuf** %30, align 8
  %169 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %170 = load %struct.socket*, %struct.socket** %169, align 8
  %171 = getelementptr inbounds %struct.socket, %struct.socket* %170, i64 0, i32 21, i32 9
  %172 = load i32, i32* %171, align 8
  %173 = icmp ugt i32 %172, 4096
  %174 = select i1 %173, i32 %172, i32 4096
  %175 = getelementptr inbounds %struct.socket, %struct.socket* %170, i64 0, i32 21, i32 8
  %176 = load i32, i32* %175, align 4
  %177 = tail call i32 @llvm.usub.sat.i32(i32 %174, i32 %176)
  %178 = zext i32 %177 to i64
  %179 = load i32, i32* %19, align 8
  %180 = sext i32 %179 to i64
  %181 = icmp slt i64 %178, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %166
  tail call void @m_freem(%struct.mbuf* nonnull %16) #12
  br label %200

183:                                              ; preds = %166
  %184 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %185 = load %struct.sctp_nets*, %struct.sctp_nets** %184, align 8
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %187 = load i32, i32* %186, align 8
  %188 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %185, i32 0, i32 0, i32 %187, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %16) #12
  %189 = icmp eq %struct.sctp_queued_to_read* %188, null
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  tail call void @m_freem(%struct.mbuf* nonnull %16) #12
  br label %200

191:                                              ; preds = %183
  %192 = load i32, i32* %19, align 8
  %193 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %188, i64 0, i32 9
  store i32 %192, i32* %193, align 8
  %194 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %188, i64 0, i32 22
  store i16 256, i16* %194, align 2
  %195 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %188, i64 0, i32 15
  store %struct.mbuf* %16, %struct.mbuf** %195, align 8
  %196 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %197 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %196, align 8
  %198 = load %struct.socket*, %struct.socket** %169, align 8
  %199 = getelementptr inbounds %struct.socket, %struct.socket* %198, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %197, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %188, %struct.sockbuf* %199, i32 1, i32 0, i32 %4)
  br label %200

200:                                              ; preds = %7, %12, %5, %191, %190, %182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_notify_stream_reset(%struct.sctp_tcb*, i32, i16* nocapture readonly, i32) unnamed_addr #3 {
  %5 = bitcast i16* %2 to i8*
  %6 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %6, label %215, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 524288
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %215, label %12

12:                                               ; preds = %7
  %13 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #12
  %14 = icmp eq %struct.mbuf* %13, null
  br i1 %14, label %215, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 3
  store i32 0, i32* %16, align 8
  %17 = shl i32 %1, 1
  %18 = add i32 %17, 12
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %15
  %25 = and i32 %21, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %52

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %29 = load i32*, i32** %28, align 8
  %30 = load volatile i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %52

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 2
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = sub i64 %42, %41
  br label %52

44:                                               ; preds = %15
  %45 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 1
  %46 = getelementptr inbounds %union.anon.2, %union.anon.2* %45, i64 1
  %47 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 2
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint %union.anon.2* %46 to i64
  %51 = sub i64 %50, %49
  br label %52

52:                                               ; preds = %24, %32, %27, %44
  %53 = phi i64 [ %51, %44 ], [ %43, %32 ], [ 0, %27 ], [ 0, %24 ]
  %54 = icmp slt i64 %53, %19
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @m_freem(%struct.mbuf* nonnull %13) #12
  br label %215

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %19, i1 false)
  %59 = bitcast i8* %58 to i16*
  store i16 9, i16* %59, align 4
  %60 = trunc i32 %3 to i16
  %61 = getelementptr inbounds i8, i8* %58, i64 2
  %62 = bitcast i8* %61 to i16*
  store i16 %60, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %58, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 %18, i32* %64, align 4
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds i8, i8* %58, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 %66, i32* %68, align 4
  %69 = icmp sgt i32 %1, 0
  br i1 %69, label %70, label %184

70:                                               ; preds = %56
  %71 = getelementptr inbounds i8, i8* %58, i64 12
  %72 = bitcast i8* %71 to [0 x i16]*
  %73 = zext i32 %1 to i64
  %74 = icmp ult i32 %1, 16
  br i1 %74, label %142, label %75

75:                                               ; preds = %70
  %76 = shl nuw nsw i64 %73, 1
  %77 = add nuw nsw i64 %76, 12
  %78 = getelementptr i8, i8* %58, i64 %77
  %79 = getelementptr i16, i16* %2, i64 %73
  %80 = bitcast i16* %79 to i8*
  %81 = icmp ult i8* %71, %80
  %82 = icmp ugt i8* %78, %5
  %83 = and i1 %81, %82
  br i1 %83, label %142, label %84

84:                                               ; preds = %75
  %85 = and i64 %73, 4294967280
  %86 = add nsw i64 %85, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %86, 0
  br i1 %90, label %124, label %91

91:                                               ; preds = %84
  %92 = sub nuw nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %121, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %122, %93 ]
  %96 = getelementptr inbounds i16, i16* %2, i64 %94
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !2
  %99 = getelementptr inbounds i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %98)
  %103 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %101)
  %104 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %94
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr inbounds i16, i16* %104, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = or i64 %94, 16
  %109 = getelementptr inbounds i16, i16* %2, i64 %108
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = getelementptr inbounds i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %111)
  %116 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %114)
  %117 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %108
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = getelementptr inbounds i16, i16* %117, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = add i64 %94, 32
  %122 = add i64 %95, -2
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %93, !llvm.loop !7

124:                                              ; preds = %93, %84
  %125 = phi i64 [ 0, %84 ], [ %121, %93 ]
  %126 = icmp eq i64 %89, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds i16, i16* %2, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !2
  %131 = getelementptr inbounds i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %130)
  %135 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %133)
  %136 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %125
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !5, !noalias !2
  %138 = getelementptr inbounds i16, i16* %136, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !5, !noalias !2
  br label %140

140:                                              ; preds = %124, %127
  %141 = icmp eq i64 %85, %73
  br i1 %141, label %184, label %142

142:                                              ; preds = %140, %75, %70
  %143 = phi i64 [ 0, %75 ], [ 0, %70 ], [ %85, %140 ]
  %144 = xor i64 %143, -1
  %145 = add nsw i64 %144, %73
  %146 = and i64 %73, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %158, label %148

148:                                              ; preds = %142, %148
  %149 = phi i64 [ %155, %148 ], [ %143, %142 ]
  %150 = phi i64 [ %156, %148 ], [ %146, %142 ]
  %151 = getelementptr inbounds i16, i16* %2, i64 %149
  %152 = load i16, i16* %151, align 2
  %153 = tail call i16 @llvm.bswap.i16(i16 %152) #12
  %154 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %149
  store i16 %153, i16* %154, align 2
  %155 = add nuw nsw i64 %149, 1
  %156 = add i64 %150, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %148, !llvm.loop !9

158:                                              ; preds = %148, %142
  %159 = phi i64 [ %143, %142 ], [ %155, %148 ]
  %160 = icmp ult i64 %145, 3
  br i1 %160, label %184, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %182, %161 ], [ %159, %158 ]
  %163 = getelementptr inbounds i16, i16* %2, i64 %162
  %164 = load i16, i16* %163, align 2
  %165 = tail call i16 @llvm.bswap.i16(i16 %164) #12
  %166 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %162
  store i16 %165, i16* %166, align 2
  %167 = add nuw nsw i64 %162, 1
  %168 = getelementptr inbounds i16, i16* %2, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = tail call i16 @llvm.bswap.i16(i16 %169) #12
  %171 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %167
  store i16 %170, i16* %171, align 2
  %172 = add nuw nsw i64 %162, 2
  %173 = getelementptr inbounds i16, i16* %2, i64 %172
  %174 = load i16, i16* %173, align 2
  %175 = tail call i16 @llvm.bswap.i16(i16 %174) #12
  %176 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %172
  store i16 %175, i16* %176, align 2
  %177 = add nuw nsw i64 %162, 3
  %178 = getelementptr inbounds i16, i16* %2, i64 %177
  %179 = load i16, i16* %178, align 2
  %180 = tail call i16 @llvm.bswap.i16(i16 %179) #12
  %181 = getelementptr inbounds [0 x i16], [0 x i16]* %72, i64 0, i64 %177
  store i16 %180, i16* %181, align 2
  %182 = add nuw nsw i64 %162, 4
  %183 = icmp eq i64 %182, %73
  br i1 %183, label %184, label %161, !llvm.loop !11

184:                                              ; preds = %158, %161, %140, %56
  store i32 %18, i32* %16, align 8
  %185 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %13, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %185, align 8
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %187 = load %struct.socket*, %struct.socket** %186, align 8
  %188 = getelementptr inbounds %struct.socket, %struct.socket* %187, i64 0, i32 21, i32 9
  %189 = load i32, i32* %188, align 8
  %190 = icmp ugt i32 %189, 4096
  %191 = select i1 %190, i32 %189, i32 4096
  %192 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 79
  %193 = load i32, i32* %192, align 8
  %194 = tail call i32 @llvm.usub.sat.i32(i32 %191, i32 %193)
  %195 = zext i32 %194 to i64
  %196 = icmp slt i64 %195, %19
  br i1 %196, label %197, label %198

197:                                              ; preds = %184
  tail call void @m_freem(%struct.mbuf* nonnull %13) #12
  br label %215

198:                                              ; preds = %184
  %199 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %200 = load %struct.sctp_nets*, %struct.sctp_nets** %199, align 8
  %201 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %202 = load i32, i32* %201, align 8
  %203 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %200, i32 0, i32 0, i32 %202, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %13) #12
  %204 = icmp eq %struct.sctp_queued_to_read* %203, null
  br i1 %204, label %205, label %206

205:                                              ; preds = %198
  tail call void @m_freem(%struct.mbuf* nonnull %13) #12
  br label %215

206:                                              ; preds = %198
  %207 = load i32, i32* %16, align 8
  %208 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %203, i64 0, i32 9
  store i32 %207, i32* %208, align 8
  %209 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %203, i64 0, i32 22
  store i16 256, i16* %209, align 2
  %210 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %203, i64 0, i32 15
  store %struct.mbuf* %13, %struct.mbuf** %210, align 8
  %211 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %212 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %211, align 8
  %213 = load %struct.socket*, %struct.socket** %186, align 8
  %214 = getelementptr inbounds %struct.socket, %struct.socket* %213, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %212, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %203, %struct.sockbuf* %214, i32 1, i32 0, i32 0)
  br label %215

215:                                              ; preds = %12, %4, %7, %206, %205, %197, %55
  ret void
}

declare void @sctp_notify_authentication(%struct.sctp_tcb*, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_report_all_outbound(%struct.sctp_tcb*, i16 zeroext, i32) local_unnamed_addr #3 {
  %4 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %4, label %509, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 512
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %509

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %13 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %14 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %13, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 805306368
  %17 = and i32 %8, 256
  %18 = or i32 %16, %17
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %509

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 20, i32 0
  %22 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %21, align 8
  %23 = icmp eq %struct.sctp_tmit_chunk* %22, null
  br i1 %23, label %195, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 20, i32 1
  %26 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 86
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %28 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 121
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 78
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %31 = zext i16 %1 to i32
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %35 = bitcast %struct.sctp_tmit_chunk*** %34 to i64*
  br label %36

36:                                               ; preds = %24, %194
  %37 = phi %struct.sctp_tmit_chunk* [ %22, %24 ], [ %39, %194 ]
  %38 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 6, i32 0
  %39 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %38, align 8
  %40 = icmp eq %struct.sctp_tmit_chunk* %39, null
  %41 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 6, i32 1
  %42 = bitcast %struct.sctp_tmit_chunk*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %39, i64 0, i32 6, i32 1
  %45 = select i1 %40, %struct.sctp_tmit_chunk*** %25, %struct.sctp_tmit_chunk*** %44
  %46 = bitcast %struct.sctp_tmit_chunk*** %45 to i64*
  store i64 %43, i64* %46, align 8
  %47 = bitcast %struct.sctp_tmit_chunk** %38 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %struct.sctp_tmit_chunk*** %41 to i64**
  %50 = load i64*, i64** %49, align 8
  store i64 %48, i64* %50, align 8
  %51 = load i32, i32* %26, align 4
  %52 = add i32 %51, -1
  store i32 %52, i32* %26, align 4
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 40010
  br i1 %55, label %66, label %56

56:                                               ; preds = %36
  %57 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %27, align 8
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 0, i32 0, i32 2
  %59 = load i16, i16* %58, align 8
  %60 = zext i16 %59 to i64
  %61 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %57, i64 %60, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = add i32 %62, -1
  store i32 %65, i32* %61, align 8
  br label %66

66:                                               ; preds = %56, %36, %64
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 3
  %68 = load %struct.mbuf*, %struct.mbuf** %67, align 8
  %69 = icmp eq %struct.mbuf* %68, null
  br i1 %69, label %119, label %70

70:                                               ; preds = %66
  %71 = atomicrmw sub i32* %28, i32 1 seq_cst
  %72 = load i32, i32* %29, align 4
  %73 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 11
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp ult i32 %72, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = atomicrmw sub i32* %29, i32 %75 seq_cst
  br label %80

79:                                               ; preds = %70
  store i32 0, i32* %29, align 4
  br label %80

80:                                               ; preds = %79, %77
  %81 = load %struct.socket*, %struct.socket** %30, align 8
  %82 = icmp eq %struct.socket* %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %85 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %84, i64 0, i32 9
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 4194306
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.socket, %struct.socket* %81, i64 0, i32 22, i32 8
  %91 = load i32, i32* %90, align 4
  %92 = load i16, i16* %73, align 2
  %93 = zext i16 %92 to i32
  %94 = icmp ult i32 %91, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %89
  %96 = atomicrmw sub i32* %90, i32 %93 seq_cst
  br label %98

97:                                               ; preds = %89
  store i32 0, i32* %90, align 4
  br label %98

98:                                               ; preds = %95, %97, %80, %83
  %99 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %100 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %99, i64 0, i32 9
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 805306368
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %115

104:                                              ; preds = %98
  %105 = load i32, i32* %32, align 8
  %106 = and i32 %105, 256
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %104
  %109 = load %struct.socket*, %struct.socket** %30, align 8
  %110 = getelementptr inbounds %struct.socket, %struct.socket* %109, i64 0, i32 4
  %111 = load i16, i16* %110, align 2
  %112 = and i16 %111, 32
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %108
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 1, i32 %31, %struct.sctp_tmit_chunk* nonnull %37, i32 %2) #12
  br label %115

115:                                              ; preds = %98, %104, %108, %114
  %116 = load %struct.mbuf*, %struct.mbuf** %67, align 8
  %117 = icmp eq %struct.mbuf* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  tail call void @m_freem(%struct.mbuf* nonnull %116) #12
  store %struct.mbuf* null, %struct.mbuf** %67, align 8
  br label %119

119:                                              ; preds = %115, %66, %118
  %120 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 14
  %121 = load i8, i8* %120, align 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 13
  %125 = load i16, i16* %124, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %125, i32 %2) #12
  store i8 0, i8* %120, align 8
  br label %126

126:                                              ; preds = %123, %119
  %127 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %37, i64 0, i32 5
  %128 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %129 = icmp eq %struct.sctp_nets* %128, null
  br i1 %129, label %176, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %128, i64 0, i32 17
  %132 = atomicrmw add i32* %131, i32 -1 seq_cst
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %175

134:                                              ; preds = %130
  %135 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %136 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %135, i64 0, i32 3, i32 0
  %137 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %136, align 8
  %138 = icmp eq %struct.sctp_rtentry* %137, null
  br i1 %138, label %154, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %137, i64 0, i32 3
  %141 = load i64, i64* %140, align 8
  %142 = icmp sgt i64 %141, 1
  %143 = add nsw i64 %141, -1
  store i64 %143, i64* %140, align 8
  %144 = icmp sgt i64 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  %147 = bitcast %struct.sctp_rtentry* %137 to i8*
  tail call void @free(i8* %147) #12
  br label %148

148:                                              ; preds = %139, %146
  %149 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %150 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %149, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %150, align 8
  %151 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %152 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %151, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %152, align 8
  %153 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  br label %154

154:                                              ; preds = %134, %148
  %155 = phi %struct.sctp_nets* [ %135, %134 ], [ %153, %148 ]
  %156 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %155, i64 0, i32 47
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %155, i64 0, i32 3, i32 2
  %161 = load %struct.sctp_ifa*, %struct.sctp_ifa** %160, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %161) #12
  %162 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %163 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %162, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %163, align 8
  %164 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  br label %165

165:                                              ; preds = %154, %159
  %166 = phi %struct.sctp_nets* [ %155, %154 ], [ %164, %159 ]
  %167 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %166, i64 0, i32 47
  store i8 0, i8* %167, align 1
  %168 = load %struct.sctp_nets*, %struct.sctp_nets** %127, align 8
  %169 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 37
  %170 = load i16, i16* %169, align 4
  %171 = and i16 %170, -2
  store i16 %171, i16* %169, align 4
  %172 = bitcast %struct.sctp_nets** %127 to i8**
  %173 = load i8*, i8** %172, align 8
  tail call void @free(i8* %173) #12
  %174 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %175

175:                                              ; preds = %130, %165
  store %struct.sctp_nets* null, %struct.sctp_nets** %127, align 8
  br label %176

176:                                              ; preds = %126, %175
  %177 = load i16, i16* %33, align 2
  %178 = zext i16 %177 to i32
  %179 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %180 = icmp ult i32 %179, %178
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %183 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %184 = icmp ugt i32 %182, %183
  br i1 %184, label %185, label %188

185:                                              ; preds = %181, %176
  %186 = bitcast %struct.sctp_tmit_chunk* %37 to i8*
  tail call void @free(i8* %186) #12
  %187 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %194

188:                                              ; preds = %181
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %38, align 8
  %189 = load i64, i64* %35, align 8
  store i64 %189, i64* %42, align 8
  %190 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %34, align 8
  store %struct.sctp_tmit_chunk* %37, %struct.sctp_tmit_chunk** %190, align 8
  store %struct.sctp_tmit_chunk** %38, %struct.sctp_tmit_chunk*** %34, align 8
  %191 = load i16, i16* %33, align 2
  %192 = add i16 %191, 1
  store i16 %192, i16* %33, align 2
  %193 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %194

194:                                              ; preds = %188, %185
  br i1 %40, label %195, label %36

195:                                              ; preds = %194, %20
  %196 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 21, i32 0
  %197 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %196, align 8
  %198 = icmp eq %struct.sctp_tmit_chunk* %197, null
  br i1 %198, label %211, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 21, i32 1
  %201 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 85
  %202 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %203 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 121
  %204 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 78
  %205 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %206 = zext i16 %1 to i32
  %207 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %208 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %209 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %210 = bitcast %struct.sctp_tmit_chunk*** %209 to i64*
  br label %222

211:                                              ; preds = %376, %195
  %212 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %213 = load i16, i16* %212, align 2
  %214 = icmp eq i16 %213, 0
  br i1 %214, label %509, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %217 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 84
  %218 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 5
  %219 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 78
  %220 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %221 = zext i16 %1 to i32
  br label %377

222:                                              ; preds = %199, %376
  %223 = phi %struct.sctp_tmit_chunk* [ %197, %199 ], [ %225, %376 ]
  %224 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 6, i32 0
  %225 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %224, align 8
  %226 = icmp eq %struct.sctp_tmit_chunk* %225, null
  %227 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 6, i32 1
  %228 = bitcast %struct.sctp_tmit_chunk*** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %225, i64 0, i32 6, i32 1
  %231 = select i1 %226, %struct.sctp_tmit_chunk*** %200, %struct.sctp_tmit_chunk*** %230
  %232 = bitcast %struct.sctp_tmit_chunk*** %231 to i64*
  store i64 %229, i64* %232, align 8
  %233 = bitcast %struct.sctp_tmit_chunk** %224 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %struct.sctp_tmit_chunk*** %227 to i64**
  %236 = load i64*, i64** %235, align 8
  store i64 %234, i64* %236, align 8
  %237 = load i32, i32* %201, align 8
  %238 = add i32 %237, -1
  store i32 %238, i32* %201, align 8
  %239 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %202, align 8
  %240 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 0, i32 0, i32 2
  %241 = load i16, i16* %240, align 8
  %242 = zext i16 %241 to i64
  %243 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %239, i64 %242, i32 2
  %244 = load i32, i32* %243, align 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %222
  %247 = add i32 %244, -1
  store i32 %247, i32* %243, align 8
  br label %248

248:                                              ; preds = %222, %246
  %249 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 3
  %250 = load %struct.mbuf*, %struct.mbuf** %249, align 8
  %251 = icmp eq %struct.mbuf* %250, null
  br i1 %251, label %301, label %252

252:                                              ; preds = %248
  %253 = atomicrmw sub i32* %203, i32 1 seq_cst
  %254 = load i32, i32* %204, align 4
  %255 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 11
  %256 = load i16, i16* %255, align 2
  %257 = zext i16 %256 to i32
  %258 = icmp ult i32 %254, %257
  br i1 %258, label %261, label %259

259:                                              ; preds = %252
  %260 = atomicrmw sub i32* %204, i32 %257 seq_cst
  br label %262

261:                                              ; preds = %252
  store i32 0, i32* %204, align 4
  br label %262

262:                                              ; preds = %261, %259
  %263 = load %struct.socket*, %struct.socket** %205, align 8
  %264 = icmp eq %struct.socket* %263, null
  br i1 %264, label %280, label %265

265:                                              ; preds = %262
  %266 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %267 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %266, i64 0, i32 9
  %268 = load i32, i32* %267, align 8
  %269 = and i32 %268, 4194306
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %280, label %271

271:                                              ; preds = %265
  %272 = getelementptr inbounds %struct.socket, %struct.socket* %263, i64 0, i32 22, i32 8
  %273 = load i32, i32* %272, align 4
  %274 = load i16, i16* %255, align 2
  %275 = zext i16 %274 to i32
  %276 = icmp ult i32 %273, %275
  br i1 %276, label %279, label %277

277:                                              ; preds = %271
  %278 = atomicrmw sub i32* %272, i32 %275 seq_cst
  br label %280

279:                                              ; preds = %271
  store i32 0, i32* %272, align 4
  br label %280

280:                                              ; preds = %277, %279, %262, %265
  %281 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %282 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %281, i64 0, i32 9
  %283 = load i32, i32* %282, align 8
  %284 = and i32 %283, 805306368
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %297

286:                                              ; preds = %280
  %287 = load i32, i32* %207, align 8
  %288 = and i32 %287, 256
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %297

290:                                              ; preds = %286
  %291 = load %struct.socket*, %struct.socket** %205, align 8
  %292 = getelementptr inbounds %struct.socket, %struct.socket* %291, i64 0, i32 4
  %293 = load i16, i16* %292, align 2
  %294 = and i16 %293, 32
  %295 = icmp eq i16 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %290
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 0, i32 %206, %struct.sctp_tmit_chunk* nonnull %223, i32 %2) #12
  br label %297

297:                                              ; preds = %280, %286, %290, %296
  %298 = load %struct.mbuf*, %struct.mbuf** %249, align 8
  %299 = icmp eq %struct.mbuf* %298, null
  br i1 %299, label %301, label %300

300:                                              ; preds = %297
  tail call void @m_freem(%struct.mbuf* nonnull %298) #12
  store %struct.mbuf* null, %struct.mbuf** %249, align 8
  br label %301

301:                                              ; preds = %297, %248, %300
  %302 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 14
  %303 = load i8, i8* %302, align 8
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %308, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 13
  %307 = load i16, i16* %306, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %307, i32 %2) #12
  store i8 0, i8* %302, align 8
  br label %308

308:                                              ; preds = %305, %301
  %309 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %223, i64 0, i32 5
  %310 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %311 = icmp eq %struct.sctp_nets* %310, null
  br i1 %311, label %358, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %310, i64 0, i32 17
  %314 = atomicrmw add i32* %313, i32 -1 seq_cst
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %357

316:                                              ; preds = %312
  %317 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %318 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %317, i64 0, i32 3, i32 0
  %319 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %318, align 8
  %320 = icmp eq %struct.sctp_rtentry* %319, null
  br i1 %320, label %336, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %319, i64 0, i32 3
  %323 = load i64, i64* %322, align 8
  %324 = icmp sgt i64 %323, 1
  %325 = add nsw i64 %323, -1
  store i64 %325, i64* %322, align 8
  %326 = icmp sgt i64 %325, 0
  %327 = or i1 %324, %326
  br i1 %327, label %330, label %328

328:                                              ; preds = %321
  %329 = bitcast %struct.sctp_rtentry* %319 to i8*
  tail call void @free(i8* %329) #12
  br label %330

330:                                              ; preds = %321, %328
  %331 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %332 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %331, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %332, align 8
  %333 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %334 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %333, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %334, align 8
  %335 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  br label %336

336:                                              ; preds = %316, %330
  %337 = phi %struct.sctp_nets* [ %317, %316 ], [ %335, %330 ]
  %338 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %337, i64 0, i32 47
  %339 = load i8, i8* %338, align 1
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %347, label %341

341:                                              ; preds = %336
  %342 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %337, i64 0, i32 3, i32 2
  %343 = load %struct.sctp_ifa*, %struct.sctp_ifa** %342, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %343) #12
  %344 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %345 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %344, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %345, align 8
  %346 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  br label %347

347:                                              ; preds = %336, %341
  %348 = phi %struct.sctp_nets* [ %337, %336 ], [ %346, %341 ]
  %349 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %348, i64 0, i32 47
  store i8 0, i8* %349, align 1
  %350 = load %struct.sctp_nets*, %struct.sctp_nets** %309, align 8
  %351 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %350, i64 0, i32 37
  %352 = load i16, i16* %351, align 4
  %353 = and i16 %352, -2
  store i16 %353, i16* %351, align 4
  %354 = bitcast %struct.sctp_nets** %309 to i8**
  %355 = load i8*, i8** %354, align 8
  tail call void @free(i8* %355) #12
  %356 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %357

357:                                              ; preds = %312, %347
  store %struct.sctp_nets* null, %struct.sctp_nets** %309, align 8
  br label %358

358:                                              ; preds = %308, %357
  %359 = load i16, i16* %208, align 2
  %360 = zext i16 %359 to i32
  %361 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %362 = icmp ult i32 %361, %360
  br i1 %362, label %367, label %363

363:                                              ; preds = %358
  %364 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %365 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %366 = icmp ugt i32 %364, %365
  br i1 %366, label %367, label %370

367:                                              ; preds = %363, %358
  %368 = bitcast %struct.sctp_tmit_chunk* %223 to i8*
  tail call void @free(i8* %368) #12
  %369 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %376

370:                                              ; preds = %363
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %224, align 8
  %371 = load i64, i64* %210, align 8
  store i64 %371, i64* %228, align 8
  %372 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %209, align 8
  store %struct.sctp_tmit_chunk* %223, %struct.sctp_tmit_chunk** %372, align 8
  store %struct.sctp_tmit_chunk** %224, %struct.sctp_tmit_chunk*** %209, align 8
  %373 = load i16, i16* %208, align 2
  %374 = add i16 %373, 1
  store i16 %374, i16* %208, align 2
  %375 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %376

376:                                              ; preds = %370, %367
  br i1 %226, label %211, label %222

377:                                              ; preds = %215, %504
  %378 = phi i16 [ %213, %215 ], [ %505, %504 ]
  %379 = phi i64 [ 0, %215 ], [ %506, %504 ]
  %380 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %216, align 8
  %381 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %380, i64 %379
  %382 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %381, i64 0, i32 0, i32 0
  %383 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %382, align 8
  %384 = icmp eq %struct.sctp_stream_queue_pending* %383, null
  br i1 %384, label %504, label %385

385:                                              ; preds = %377
  %386 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %380, i64 %379, i32 0, i32 1
  br label %387

387:                                              ; preds = %385, %499
  %388 = phi %struct.sctp_stream_queue_pending* [ %383, %385 ], [ %391, %499 ]
  %389 = bitcast %struct.sctp_stream_queue_pending* %388 to i8*
  %390 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 4, i32 0
  %391 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %390, align 8
  %392 = atomicrmw sub i32* %217, i32 1 seq_cst
  %393 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %390, align 8
  %394 = icmp eq %struct.sctp_stream_queue_pending* %393, null
  %395 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 4, i32 1
  %396 = bitcast %struct.sctp_stream_queue_pending*** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %393, i64 0, i32 4, i32 1
  %399 = select i1 %394, %struct.sctp_stream_queue_pending*** %386, %struct.sctp_stream_queue_pending*** %398
  %400 = bitcast %struct.sctp_stream_queue_pending*** %399 to i64*
  store i64 %397, i64* %400, align 8
  %401 = bitcast %struct.sctp_stream_queue_pending** %390 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast %struct.sctp_stream_queue_pending*** %395 to i64**
  %404 = load i64*, i64** %403, align 8
  store i64 %402, i64* %404, align 8
  %405 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %218, align 8
  tail call void %405(%struct.sctp_tcb* nonnull %0, %struct.sctp_association* %6, %struct.sctp_stream_out* %381, %struct.sctp_stream_queue_pending* nonnull %388, i32 1) #12
  %406 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 0
  %407 = load %struct.mbuf*, %struct.mbuf** %406, align 8
  %408 = icmp eq %struct.mbuf* %407, null
  br i1 %408, label %442, label %409

409:                                              ; preds = %387
  %410 = load i32, i32* %219, align 4
  %411 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 7
  %412 = load i32, i32* %411, align 4
  %413 = icmp ult i32 %410, %412
  br i1 %413, label %416, label %414

414:                                              ; preds = %409
  %415 = atomicrmw sub i32* %219, i32 %412 seq_cst
  br label %417

416:                                              ; preds = %409
  store i32 0, i32* %219, align 4
  br label %417

417:                                              ; preds = %416, %414
  %418 = load %struct.socket*, %struct.socket** %220, align 8
  %419 = icmp eq %struct.socket* %418, null
  br i1 %419, label %434, label %420

420:                                              ; preds = %417
  %421 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %422 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %421, i64 0, i32 9
  %423 = load i32, i32* %422, align 8
  %424 = and i32 %423, 4194306
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %434, label %426

426:                                              ; preds = %420
  %427 = getelementptr inbounds %struct.socket, %struct.socket* %418, i64 0, i32 22, i32 8
  %428 = load i32, i32* %427, align 4
  %429 = load i32, i32* %411, align 4
  %430 = icmp ult i32 %428, %429
  br i1 %430, label %433, label %431

431:                                              ; preds = %426
  %432 = atomicrmw sub i32* %427, i32 %429 seq_cst
  br label %434

433:                                              ; preds = %426
  store i32 0, i32* %427, align 4
  br label %434

434:                                              ; preds = %420, %417, %433, %431
  %435 = load %struct.mbuf*, %struct.mbuf** %406, align 8
  %436 = icmp eq %struct.mbuf* %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %434
  tail call void @sctp_ulp_notify(i32 7, %struct.sctp_tcb* nonnull %0, i32 %221, i8* %389, i32 %2)
  %438 = load %struct.mbuf*, %struct.mbuf** %406, align 8
  %439 = icmp eq %struct.mbuf* %438, null
  br i1 %439, label %442, label %440

440:                                              ; preds = %437
  tail call void @m_freem(%struct.mbuf* nonnull %438) #12
  store i32 0, i32* %411, align 4
  %441 = bitcast %struct.sctp_stream_queue_pending* %388 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %441, i8 0, i64 16, i1 false)
  br label %442

442:                                              ; preds = %387, %437, %434, %440
  %443 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 3
  %444 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %445 = icmp eq %struct.sctp_nets* %444, null
  br i1 %445, label %492, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %444, i64 0, i32 17
  %448 = atomicrmw add i32* %447, i32 -1 seq_cst
  %449 = icmp eq i32 %448, 1
  br i1 %449, label %450, label %491

450:                                              ; preds = %446
  %451 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %452 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %451, i64 0, i32 3, i32 0
  %453 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %452, align 8
  %454 = icmp eq %struct.sctp_rtentry* %453, null
  br i1 %454, label %470, label %455

455:                                              ; preds = %450
  %456 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %453, i64 0, i32 3
  %457 = load i64, i64* %456, align 8
  %458 = icmp sgt i64 %457, 1
  %459 = add nsw i64 %457, -1
  store i64 %459, i64* %456, align 8
  %460 = icmp sgt i64 %459, 0
  %461 = or i1 %458, %460
  br i1 %461, label %464, label %462

462:                                              ; preds = %455
  %463 = bitcast %struct.sctp_rtentry* %453 to i8*
  tail call void @free(i8* %463) #12
  br label %464

464:                                              ; preds = %455, %462
  %465 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %466 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %465, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %466, align 8
  %467 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %468 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %467, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %468, align 8
  %469 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  br label %470

470:                                              ; preds = %450, %464
  %471 = phi %struct.sctp_nets* [ %451, %450 ], [ %469, %464 ]
  %472 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %471, i64 0, i32 47
  %473 = load i8, i8* %472, align 1
  %474 = icmp eq i8 %473, 0
  br i1 %474, label %481, label %475

475:                                              ; preds = %470
  %476 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %471, i64 0, i32 3, i32 2
  %477 = load %struct.sctp_ifa*, %struct.sctp_ifa** %476, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %477) #12
  %478 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %479 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %478, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %479, align 8
  %480 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  br label %481

481:                                              ; preds = %470, %475
  %482 = phi %struct.sctp_nets* [ %471, %470 ], [ %480, %475 ]
  %483 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %482, i64 0, i32 47
  store i8 0, i8* %483, align 1
  %484 = load %struct.sctp_nets*, %struct.sctp_nets** %443, align 8
  %485 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %484, i64 0, i32 37
  %486 = load i16, i16* %485, align 4
  %487 = and i16 %486, -2
  store i16 %487, i16* %485, align 4
  %488 = bitcast %struct.sctp_nets** %443 to i8**
  %489 = load i8*, i8** %488, align 8
  tail call void @free(i8* %489) #12
  %490 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %491

491:                                              ; preds = %446, %481
  store %struct.sctp_nets* null, %struct.sctp_nets** %443, align 8
  br label %492

492:                                              ; preds = %442, %491
  %493 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 15
  %494 = load i8, i8* %493, align 4
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %499, label %496

496:                                              ; preds = %492
  %497 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %388, i64 0, i32 14
  %498 = load i16, i16* %497, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* nonnull %0, i16 zeroext %498, i32 %2) #12
  store i8 0, i8* %493, align 4
  br label %499

499:                                              ; preds = %492, %496
  tail call void @free(i8* %389) #12
  %500 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  %501 = icmp eq %struct.sctp_stream_queue_pending* %391, null
  br i1 %501, label %502, label %387

502:                                              ; preds = %499
  %503 = load i16, i16* %212, align 2
  br label %504

504:                                              ; preds = %502, %377
  %505 = phi i16 [ %503, %502 ], [ %378, %377 ]
  %506 = add nuw nsw i64 %379, 1
  %507 = zext i16 %505 to i64
  %508 = icmp ult i64 %506, %507
  br i1 %508, label %377, label %509

509:                                              ; preds = %504, %211, %11, %5, %3
  ret void
}

declare void @sctp_auth_key_release(%struct.sctp_tcb*, i16 zeroext, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_abort_notification(%struct.sctp_tcb*, i8 zeroext, i16 zeroext, %struct.sctp_abort_chunk* readonly, i32) local_unnamed_addr #3 {
  %6 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %9 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %8, align 8
  %10 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %9, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 4194304
  %13 = icmp ne i32 %12, 0
  %14 = and i32 %11, 2097154
  %15 = icmp eq i32 %14, 2097154
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = or i32 %11, 1048576
  store i32 %18, i32* %10, align 8
  %19 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %8, align 8
  %20 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %19, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i32 [ %11, %7 ], [ %21, %17 ]
  %24 = and i32 %23, 805306368
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %75

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 256
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %75

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %33 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %32) #12
  %34 = load i32, i32* %27, align 8
  %35 = or i32 %34, 2048
  store i32 %35, i32* %27, align 8
  tail call void @sctp_report_all_outbound(%struct.sctp_tcb* nonnull %0, i16 zeroext %2, i32 %4)
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %32) #12
  %37 = icmp eq i8 %1, 0
  %38 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %8, align 8
  %39 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %38, i64 0, i32 9
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 805306368
  %42 = icmp eq i32 %41, 0
  br i1 %37, label %59, label %43

43:                                               ; preds = %31
  br i1 %42, label %44, label %75

44:                                               ; preds = %43
  %45 = load i32, i32* %27, align 8
  %46 = and i32 %45, 256
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %75

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %50 = load %struct.socket*, %struct.socket** %49, align 8
  %51 = getelementptr inbounds %struct.socket, %struct.socket* %50, i64 0, i32 4
  %52 = load i16, i16* %51, align 2
  %53 = and i16 %52, 32
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %75

55:                                               ; preds = %48
  %56 = and i32 %45, 127
  switch i32 %56, label %58 [
    i32 2, label %57
    i32 4, label %57
  ]

57:                                               ; preds = %55, %55
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 5, %struct.sctp_tcb* nonnull %0, i16 zeroext %2, %struct.sctp_abort_chunk* %3, i8 zeroext 1, i32 %4) #12
  br label %75

58:                                               ; preds = %55
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 2, %struct.sctp_tcb* nonnull %0, i16 zeroext %2, %struct.sctp_abort_chunk* %3, i8 zeroext 1, i32 %4) #12
  br label %75

59:                                               ; preds = %31
  br i1 %42, label %60, label %75

60:                                               ; preds = %59
  %61 = load i32, i32* %27, align 8
  %62 = and i32 %61, 256
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %66 = load %struct.socket*, %struct.socket** %65, align 8
  %67 = getelementptr inbounds %struct.socket, %struct.socket* %66, i64 0, i32 4
  %68 = load i16, i16* %67, align 2
  %69 = and i16 %68, 32
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %64
  %72 = and i32 %61, 127
  switch i32 %72, label %74 [
    i32 2, label %73
    i32 4, label %73
  ]

73:                                               ; preds = %71, %71
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 5, %struct.sctp_tcb* nonnull %0, i16 zeroext %2, %struct.sctp_abort_chunk* %3, i8 zeroext 0, i32 %4) #12
  br label %75

74:                                               ; preds = %71
  tail call fastcc void @sctp_notify_assoc_change(i16 zeroext 2, %struct.sctp_tcb* nonnull %0, i16 zeroext %2, %struct.sctp_abort_chunk* %3, i8 zeroext 0, i32 %4) #12
  br label %75

75:                                               ; preds = %74, %73, %64, %60, %59, %58, %57, %48, %44, %43, %26, %22, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_add_substate(%struct.sctp_tcb* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_abort_association(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.mbuf*, i32, %struct.sockaddr*, %struct.sockaddr*, %struct.sctphdr*, %struct.mbuf*, i32, i16 zeroext) local_unnamed_addr #3 {
  %11 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 49
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 41
  %16 = load i32, i32* %15, align 4
  tail call void @sctp_send_abort(%struct.mbuf* %2, i32 %3, %struct.sockaddr* %4, %struct.sockaddr* %5, %struct.sctphdr* %6, i32 %14, %struct.mbuf* %7, i32 %16, i16 zeroext %9) #12
  tail call void @sctp_abort_notification(%struct.sctp_tcb* nonnull %1, i8 zeroext 0, i16 zeroext 0, %struct.sctp_abort_chunk* null, i32 0)
  %17 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 6), i32 1 seq_cst
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 127
  switch i32 %20, label %23 [
    i32 8, label %21
    i32 32, label %21
  ]

21:                                               ; preds = %12, %12
  %22 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 1), i32 1 seq_cst
  br label %23

23:                                               ; preds = %12, %21
  %24 = tail call i32 @sctp_free_assoc(%struct.sctp_inpcb* %0, %struct.sctp_tcb* nonnull %1, i32 0, i32 1610612740) #12
  br label %26

25:                                               ; preds = %10
  tail call void @sctp_send_abort(%struct.mbuf* %2, i32 %3, %struct.sockaddr* %4, %struct.sockaddr* %5, %struct.sctphdr* %6, i32 0, %struct.mbuf* %7, i32 %8, i16 zeroext %9) #12
  br label %26

26:                                               ; preds = %25, %23
  ret void
}

declare void @sctp_send_abort(%struct.mbuf*, i32, %struct.sockaddr*, %struct.sockaddr*, %struct.sctphdr*, i32, %struct.mbuf*, i32, i16 zeroext) local_unnamed_addr #4

declare void @sctp_send_abort_tcb(%struct.sctp_tcb*, %struct.mbuf*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_handle_ootb(%struct.mbuf*, i32, i32, %struct.sockaddr*, %struct.sockaddr*, %struct.sctphdr*, %struct.sctp_inpcb*, %struct.mbuf*, i32, i16 zeroext) local_unnamed_addr #3 {
  %11 = alloca %struct.sctp_chunkhdr, align 1
  %12 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #12
  store i8 -86, i8* %12, align 1
  %13 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %11, i64 0, i32 1
  store i8 -86, i8* %13, align 1
  %14 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %11, i64 0, i32 2
  store i16 -21846, i16* %14, align 1
  %15 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 8), i32 1 seq_cst
  %16 = icmp eq %struct.sctp_inpcb* %6, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %6, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 268435456
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %6, i64 0, i32 14, i32 0
  %24 = load %struct.sctp_tcb*, %struct.sctp_tcb** %23, align 8
  %25 = icmp eq %struct.sctp_tcb* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @sctp_inpcb_free(%struct.sctp_inpcb* nonnull %6, i32 1, i32 0) #12
  br label %27

27:                                               ; preds = %17, %10, %22, %26
  %28 = icmp slt i32 %2, 0
  br i1 %28, label %188, label %29

29:                                               ; preds = %27
  %30 = icmp ne %struct.mbuf* %0, null
  %31 = icmp ne i32 %2, 0
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %46

33:                                               ; preds = %29, %39
  %34 = phi i32 [ %40, %39 ], [ %2, %29 ]
  %35 = phi %struct.mbuf* [ %42, %39 ], [ %0, %29 ]
  %36 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %53, label %39

39:                                               ; preds = %33
  %40 = sub nsw i32 %34, %37
  %41 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %35, i64 0, i32 0, i32 0
  %42 = load %struct.mbuf*, %struct.mbuf** %41, align 8
  %43 = icmp ne %struct.mbuf* %42, null
  %44 = icmp sgt i32 %40, 0
  %45 = and i1 %44, %43
  br i1 %45, label %33, label %46

46:                                               ; preds = %39, %29
  %47 = phi %struct.mbuf* [ %0, %29 ], [ %42, %39 ]
  %48 = phi i32 [ %2, %29 ], [ %40, %39 ]
  %49 = icmp eq %struct.mbuf* %47, null
  br i1 %49, label %188, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %47, i64 0, i32 0, i32 3
  %52 = load i32, i32* %51, align 8
  br label %53

53:                                               ; preds = %33, %50
  %54 = phi i32 [ %52, %50 ], [ %37, %33 ]
  %55 = phi %struct.mbuf* [ %47, %50 ], [ %35, %33 ]
  %56 = phi i32 [ %48, %50 ], [ %34, %33 ]
  %57 = sub nsw i32 %54, %56
  %58 = icmp slt i32 %57, 4
  %59 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %55, i64 0, i32 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  br i1 %58, label %63, label %95

63:                                               ; preds = %53
  %64 = zext i32 %57 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %62, i64 %64, i1 false) #12
  %65 = sub i32 4, %57
  %66 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %55, i64 0, i32 0, i32 0
  %67 = load %struct.mbuf*, %struct.mbuf** %66, align 8
  %68 = icmp ne %struct.mbuf* %67, null
  %69 = icmp sgt i32 %65, 0
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %90

71:                                               ; preds = %63, %71
  %72 = phi %struct.mbuf* [ %86, %71 ], [ %67, %63 ]
  %73 = phi i32 [ %84, %71 ], [ %65, %63 ]
  %74 = phi i64 [ %83, %71 ], [ %64, %63 ]
  %75 = phi i8* [ %76, %71 ], [ %12, %63 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  %77 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %72, i64 0, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = icmp sgt i32 %78, %73
  %80 = select i1 %79, i32 %73, i32 %78
  %81 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %72, i64 0, i32 0, i32 2
  %82 = load i8*, i8** %81, align 8
  %83 = zext i32 %80 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %82, i64 %83, i1 false) #12
  %84 = sub i32 %73, %80
  %85 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %72, i64 0, i32 0, i32 0
  %86 = load %struct.mbuf*, %struct.mbuf** %85, align 8
  %87 = icmp ne %struct.mbuf* %86, null
  %88 = icmp sgt i32 %84, 0
  %89 = and i1 %87, %88
  br i1 %89, label %71, label %90

90:                                               ; preds = %71, %63
  %91 = phi %struct.mbuf* [ %67, %63 ], [ %86, %71 ]
  %92 = phi i1 [ %69, %63 ], [ %88, %71 ]
  %93 = icmp eq %struct.mbuf* %91, null
  %94 = and i1 %93, %92
  br i1 %94, label %188, label %97

95:                                               ; preds = %53
  %96 = icmp eq i8* %62, null
  br i1 %96, label %188, label %97

97:                                               ; preds = %90, %95
  %98 = phi i8* [ %62, %95 ], [ %12, %90 ]
  %99 = icmp ne %struct.mbuf* %0, null
  br label %100

100:                                              ; preds = %97, %185
  %101 = phi i32 [ 0, %97 ], [ %115, %185 ]
  %102 = phi i8* [ %98, %97 ], [ %186, %185 ]
  %103 = phi i32 [ %2, %97 ], [ %118, %185 ]
  %104 = getelementptr inbounds i8, i8* %102, i64 2
  %105 = bitcast i8* %104 to i16*
  %106 = load i16, i16* %105, align 1
  %107 = call i16 @llvm.bswap.i16(i16 %106) #12
  %108 = zext i16 %107 to i32
  %109 = icmp ult i16 %107, 4
  br i1 %109, label %188, label %110

110:                                              ; preds = %100
  %111 = load i8, i8* %102, align 1
  switch i8 %111, label %114 [
    i8 1, label %112
    i8 -127, label %197
    i8 6, label %197
    i8 14, label %197
    i8 8, label %113
  ]

112:                                              ; preds = %110
  br label %114

113:                                              ; preds = %110
  call void @sctp_send_shutdown_complete2(%struct.sockaddr* %3, %struct.sockaddr* %4, %struct.sctphdr* %5, i32 %8, i16 zeroext %9) #12
  br label %197

114:                                              ; preds = %110, %112
  %115 = phi i32 [ %101, %110 ], [ 1, %112 ]
  %116 = add nuw nsw i32 %108, 3
  %117 = and i32 %116, 131068
  %118 = add i32 %117, %103
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %188, label %120

120:                                              ; preds = %114
  %121 = icmp ne i32 %118, 0
  %122 = and i1 %99, %121
  br i1 %122, label %123, label %136

123:                                              ; preds = %120, %129
  %124 = phi i32 [ %130, %129 ], [ %118, %120 ]
  %125 = phi %struct.mbuf* [ %132, %129 ], [ %0, %120 ]
  %126 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %125, i64 0, i32 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = icmp slt i32 %124, %127
  br i1 %128, label %143, label %129

129:                                              ; preds = %123
  %130 = sub nsw i32 %124, %127
  %131 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %125, i64 0, i32 0, i32 0
  %132 = load %struct.mbuf*, %struct.mbuf** %131, align 8
  %133 = icmp ne %struct.mbuf* %132, null
  %134 = icmp sgt i32 %130, 0
  %135 = and i1 %134, %133
  br i1 %135, label %123, label %136

136:                                              ; preds = %129, %120
  %137 = phi %struct.mbuf* [ %0, %120 ], [ %132, %129 ]
  %138 = phi i32 [ %118, %120 ], [ %130, %129 ]
  %139 = icmp eq %struct.mbuf* %137, null
  br i1 %139, label %188, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %137, i64 0, i32 0, i32 3
  %142 = load i32, i32* %141, align 8
  br label %143

143:                                              ; preds = %123, %140
  %144 = phi i32 [ %142, %140 ], [ %127, %123 ]
  %145 = phi %struct.mbuf* [ %137, %140 ], [ %125, %123 ]
  %146 = phi i32 [ %138, %140 ], [ %124, %123 ]
  %147 = sub nsw i32 %144, %146
  %148 = icmp slt i32 %147, 4
  %149 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %145, i64 0, i32 0, i32 2
  %150 = load i8*, i8** %149, align 8
  %151 = sext i32 %146 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  br i1 %148, label %153, label %185

153:                                              ; preds = %143
  %154 = zext i32 %147 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %152, i64 %154, i1 false) #12
  %155 = sub i32 4, %147
  %156 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %145, i64 0, i32 0, i32 0
  %157 = load %struct.mbuf*, %struct.mbuf** %156, align 8
  %158 = icmp ne %struct.mbuf* %157, null
  %159 = icmp sgt i32 %155, 0
  %160 = and i1 %158, %159
  br i1 %160, label %161, label %180

161:                                              ; preds = %153, %161
  %162 = phi %struct.mbuf* [ %176, %161 ], [ %157, %153 ]
  %163 = phi i32 [ %174, %161 ], [ %155, %153 ]
  %164 = phi i64 [ %173, %161 ], [ %154, %153 ]
  %165 = phi i8* [ %166, %161 ], [ %12, %153 ]
  %166 = getelementptr inbounds i8, i8* %165, i64 %164
  %167 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %162, i64 0, i32 0, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = icmp sgt i32 %168, %163
  %170 = select i1 %169, i32 %163, i32 %168
  %171 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %162, i64 0, i32 0, i32 2
  %172 = load i8*, i8** %171, align 8
  %173 = zext i32 %170 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %166, i8* align 1 %172, i64 %173, i1 false) #12
  %174 = sub i32 %163, %170
  %175 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %162, i64 0, i32 0, i32 0
  %176 = load %struct.mbuf*, %struct.mbuf** %175, align 8
  %177 = icmp ne %struct.mbuf* %176, null
  %178 = icmp sgt i32 %174, 0
  %179 = and i1 %177, %178
  br i1 %179, label %161, label %180

180:                                              ; preds = %161, %153
  %181 = phi %struct.mbuf* [ %157, %153 ], [ %176, %161 ]
  %182 = phi i1 [ %159, %153 ], [ %178, %161 ]
  %183 = icmp eq %struct.mbuf* %181, null
  %184 = and i1 %183, %182
  br i1 %184, label %188, label %185

185:                                              ; preds = %143, %180
  %186 = phi i8* [ %12, %180 ], [ %152, %143 ]
  %187 = icmp eq i8* %186, null
  br i1 %187, label %188, label %100

188:                                              ; preds = %180, %136, %114, %100, %185, %90, %46, %27, %95
  %189 = phi i32 [ 0, %95 ], [ 0, %27 ], [ 0, %46 ], [ 0, %90 ], [ %115, %180 ], [ %115, %136 ], [ %115, %114 ], [ %115, %185 ], [ %101, %100 ]
  %190 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 69), align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = icmp eq i32 %190, 1
  %194 = icmp eq i32 %189, 0
  %195 = and i1 %194, %193
  br i1 %195, label %196, label %197

196:                                              ; preds = %192, %188
  call void @sctp_send_abort(%struct.mbuf* %0, i32 %1, %struct.sockaddr* %3, %struct.sockaddr* %4, %struct.sctphdr* %5, i32 0, %struct.mbuf* %7, i32 %8, i16 zeroext %9) #12
  br label %197

197:                                              ; preds = %110, %110, %110, %192, %196, %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #12
  ret void
}

declare void @sctp_send_shutdown_complete2(%struct.sockaddr*, %struct.sockaddr*, %struct.sctphdr*, i32, i16 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_is_there_an_abort_here(%struct.mbuf* readonly, i32, i32* nocapture) local_unnamed_addr #3 {
  %4 = alloca %struct.sctp_init_chunk, align 1
  %5 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #12
  %6 = add i32 %1, 12
  %7 = icmp slt i32 %6, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 20, i1 false)
  br i1 %7, label %238, label %8

8:                                                ; preds = %3
  %9 = icmp ne %struct.mbuf* %0, null
  %10 = icmp ne i32 %6, 0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %8, %18
  %13 = phi i32 [ %19, %18 ], [ %6, %8 ]
  %14 = phi %struct.mbuf* [ %21, %18 ], [ %0, %8 ]
  %15 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %14, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = sub nsw i32 %13, %16
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %14, i64 0, i32 0, i32 0
  %21 = load %struct.mbuf*, %struct.mbuf** %20, align 8
  %22 = icmp ne %struct.mbuf* %21, null
  %23 = icmp sgt i32 %19, 0
  %24 = and i1 %23, %22
  br i1 %24, label %12, label %25

25:                                               ; preds = %18, %8
  %26 = phi %struct.mbuf* [ %0, %8 ], [ %21, %18 ]
  %27 = phi i32 [ %6, %8 ], [ %19, %18 ]
  %28 = icmp eq %struct.mbuf* %26, null
  br i1 %28, label %238, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %26, i64 0, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %12, %29
  %33 = phi i32 [ %31, %29 ], [ %16, %12 ]
  %34 = phi %struct.mbuf* [ %26, %29 ], [ %14, %12 ]
  %35 = phi i32 [ %27, %29 ], [ %13, %12 ]
  %36 = sub nsw i32 %33, %35
  %37 = icmp slt i32 %36, 4
  %38 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %34, i64 0, i32 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  br i1 %37, label %42, label %74

42:                                               ; preds = %32
  %43 = zext i32 %36 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %41, i64 %43, i1 false) #12
  %44 = sub i32 4, %36
  %45 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %34, i64 0, i32 0, i32 0
  %46 = load %struct.mbuf*, %struct.mbuf** %45, align 8
  %47 = icmp ne %struct.mbuf* %46, null
  %48 = icmp sgt i32 %44, 0
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %69

50:                                               ; preds = %42, %50
  %51 = phi %struct.mbuf* [ %65, %50 ], [ %46, %42 ]
  %52 = phi i32 [ %63, %50 ], [ %44, %42 ]
  %53 = phi i64 [ %62, %50 ], [ %43, %42 ]
  %54 = phi i8* [ %55, %50 ], [ %5, %42 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %51, i64 0, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %57, %52
  %59 = select i1 %58, i32 %52, i32 %57
  %60 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %51, i64 0, i32 0, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = zext i32 %59 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %61, i64 %62, i1 false) #12
  %63 = sub i32 %52, %59
  %64 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %51, i64 0, i32 0, i32 0
  %65 = load %struct.mbuf*, %struct.mbuf** %64, align 8
  %66 = icmp ne %struct.mbuf* %65, null
  %67 = icmp sgt i32 %63, 0
  %68 = and i1 %66, %67
  br i1 %68, label %50, label %69

69:                                               ; preds = %50, %42
  %70 = phi %struct.mbuf* [ %46, %42 ], [ %65, %50 ]
  %71 = phi i1 [ %48, %42 ], [ %67, %50 ]
  %72 = icmp eq %struct.mbuf* %70, null
  %73 = and i1 %72, %71
  br i1 %73, label %238, label %76

74:                                               ; preds = %32
  %75 = icmp eq i8* %41, null
  br i1 %75, label %238, label %76

76:                                               ; preds = %69, %74
  %77 = phi i8* [ %41, %74 ], [ %5, %69 ]
  %78 = icmp ne %struct.mbuf* %0, null
  br label %79

79:                                               ; preds = %76, %235
  %80 = phi i32 [ %6, %76 ], [ %168, %235 ]
  %81 = phi i8* [ %77, %76 ], [ %236, %235 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 2
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 1
  %85 = call i16 @llvm.bswap.i16(i16 %84) #12
  %86 = zext i16 %85 to i32
  %87 = icmp ult i16 %85, 4
  br i1 %87, label %238, label %88

88:                                               ; preds = %79
  %89 = load i8, i8* %81, align 1
  switch i8 %89, label %165 [
    i8 6, label %238
    i8 1, label %90
    i8 2, label %90
  ]

90:                                               ; preds = %88, %88
  %91 = icmp slt i32 %80, 0
  br i1 %91, label %165, label %92

92:                                               ; preds = %90
  %93 = icmp ne i32 %80, 0
  %94 = and i1 %78, %93
  br i1 %94, label %95, label %108

95:                                               ; preds = %92, %101
  %96 = phi i32 [ %102, %101 ], [ %80, %92 ]
  %97 = phi %struct.mbuf* [ %104, %101 ], [ %0, %92 ]
  %98 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %97, i64 0, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp slt i32 %96, %99
  br i1 %100, label %115, label %101

101:                                              ; preds = %95
  %102 = sub nsw i32 %96, %99
  %103 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %97, i64 0, i32 0, i32 0
  %104 = load %struct.mbuf*, %struct.mbuf** %103, align 8
  %105 = icmp ne %struct.mbuf* %104, null
  %106 = icmp sgt i32 %102, 0
  %107 = and i1 %106, %105
  br i1 %107, label %95, label %108

108:                                              ; preds = %101, %92
  %109 = phi %struct.mbuf* [ %0, %92 ], [ %104, %101 ]
  %110 = phi i32 [ %80, %92 ], [ %102, %101 ]
  %111 = icmp eq %struct.mbuf* %109, null
  br i1 %111, label %165, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %109, i64 0, i32 0, i32 3
  %114 = load i32, i32* %113, align 8
  br label %115

115:                                              ; preds = %95, %112
  %116 = phi i32 [ %114, %112 ], [ %99, %95 ]
  %117 = phi %struct.mbuf* [ %109, %112 ], [ %97, %95 ]
  %118 = phi i32 [ %110, %112 ], [ %96, %95 ]
  %119 = sub nsw i32 %116, %118
  %120 = icmp slt i32 %119, 20
  %121 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %117, i64 0, i32 0, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = sext i32 %118 to i64
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  br i1 %120, label %125, label %157

125:                                              ; preds = %115
  %126 = zext i32 %119 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %124, i64 %126, i1 false) #12
  %127 = sub i32 20, %119
  %128 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %117, i64 0, i32 0, i32 0
  %129 = load %struct.mbuf*, %struct.mbuf** %128, align 8
  %130 = icmp ne %struct.mbuf* %129, null
  %131 = icmp sgt i32 %127, 0
  %132 = and i1 %130, %131
  br i1 %132, label %133, label %152

133:                                              ; preds = %125, %133
  %134 = phi %struct.mbuf* [ %148, %133 ], [ %129, %125 ]
  %135 = phi i32 [ %146, %133 ], [ %127, %125 ]
  %136 = phi i64 [ %145, %133 ], [ %126, %125 ]
  %137 = phi i8* [ %138, %133 ], [ %5, %125 ]
  %138 = getelementptr inbounds i8, i8* %137, i64 %136
  %139 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %134, i64 0, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = icmp sgt i32 %140, %135
  %142 = select i1 %141, i32 %135, i32 %140
  %143 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %134, i64 0, i32 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = zext i32 %142 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %144, i64 %145, i1 false) #12
  %146 = sub i32 %135, %142
  %147 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %134, i64 0, i32 0, i32 0
  %148 = load %struct.mbuf*, %struct.mbuf** %147, align 8
  %149 = icmp ne %struct.mbuf* %148, null
  %150 = icmp sgt i32 %146, 0
  %151 = and i1 %149, %150
  br i1 %151, label %133, label %152

152:                                              ; preds = %133, %125
  %153 = phi %struct.mbuf* [ %129, %125 ], [ %148, %133 ]
  %154 = phi i1 [ %131, %125 ], [ %150, %133 ]
  %155 = icmp eq %struct.mbuf* %153, null
  %156 = and i1 %155, %154
  br i1 %156, label %165, label %159

157:                                              ; preds = %115
  %158 = icmp eq i8* %124, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %152, %157
  %160 = phi i8* [ %124, %157 ], [ %5, %152 ]
  %161 = getelementptr inbounds i8, i8* %160, i64 4
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* %162, align 1
  %164 = call i32 @llvm.bswap.i32(i32 %163) #12
  store i32 %164, i32* %2, align 4
  br label %165

165:                                              ; preds = %152, %108, %90, %88, %157, %159
  %166 = add nuw nsw i32 %86, 3
  %167 = and i32 %166, 131068
  %168 = add i32 %167, %80
  %169 = icmp slt i32 %168, 0
  br i1 %169, label %238, label %170

170:                                              ; preds = %165
  %171 = icmp ne i32 %168, 0
  %172 = and i1 %78, %171
  br i1 %172, label %173, label %186

173:                                              ; preds = %170, %179
  %174 = phi i32 [ %180, %179 ], [ %168, %170 ]
  %175 = phi %struct.mbuf* [ %182, %179 ], [ %0, %170 ]
  %176 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %175, i64 0, i32 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = icmp slt i32 %174, %177
  br i1 %178, label %193, label %179

179:                                              ; preds = %173
  %180 = sub nsw i32 %174, %177
  %181 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %175, i64 0, i32 0, i32 0
  %182 = load %struct.mbuf*, %struct.mbuf** %181, align 8
  %183 = icmp ne %struct.mbuf* %182, null
  %184 = icmp sgt i32 %180, 0
  %185 = and i1 %184, %183
  br i1 %185, label %173, label %186

186:                                              ; preds = %179, %170
  %187 = phi %struct.mbuf* [ %0, %170 ], [ %182, %179 ]
  %188 = phi i32 [ %168, %170 ], [ %180, %179 ]
  %189 = icmp eq %struct.mbuf* %187, null
  br i1 %189, label %238, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %187, i64 0, i32 0, i32 3
  %192 = load i32, i32* %191, align 8
  br label %193

193:                                              ; preds = %173, %190
  %194 = phi i32 [ %192, %190 ], [ %177, %173 ]
  %195 = phi %struct.mbuf* [ %187, %190 ], [ %175, %173 ]
  %196 = phi i32 [ %188, %190 ], [ %174, %173 ]
  %197 = sub nsw i32 %194, %196
  %198 = icmp slt i32 %197, 4
  %199 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %195, i64 0, i32 0, i32 2
  %200 = load i8*, i8** %199, align 8
  %201 = sext i32 %196 to i64
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  br i1 %198, label %203, label %235

203:                                              ; preds = %193
  %204 = zext i32 %197 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %202, i64 %204, i1 false) #12
  %205 = sub i32 4, %197
  %206 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %195, i64 0, i32 0, i32 0
  %207 = load %struct.mbuf*, %struct.mbuf** %206, align 8
  %208 = icmp ne %struct.mbuf* %207, null
  %209 = icmp sgt i32 %205, 0
  %210 = and i1 %208, %209
  br i1 %210, label %211, label %230

211:                                              ; preds = %203, %211
  %212 = phi %struct.mbuf* [ %226, %211 ], [ %207, %203 ]
  %213 = phi i32 [ %224, %211 ], [ %205, %203 ]
  %214 = phi i64 [ %223, %211 ], [ %204, %203 ]
  %215 = phi i8* [ %216, %211 ], [ %5, %203 ]
  %216 = getelementptr inbounds i8, i8* %215, i64 %214
  %217 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %212, i64 0, i32 0, i32 3
  %218 = load i32, i32* %217, align 8
  %219 = icmp sgt i32 %218, %213
  %220 = select i1 %219, i32 %213, i32 %218
  %221 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %212, i64 0, i32 0, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = zext i32 %220 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %216, i8* align 1 %222, i64 %223, i1 false) #12
  %224 = sub i32 %213, %220
  %225 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %212, i64 0, i32 0, i32 0
  %226 = load %struct.mbuf*, %struct.mbuf** %225, align 8
  %227 = icmp ne %struct.mbuf* %226, null
  %228 = icmp sgt i32 %224, 0
  %229 = and i1 %227, %228
  br i1 %229, label %211, label %230

230:                                              ; preds = %211, %203
  %231 = phi %struct.mbuf* [ %207, %203 ], [ %226, %211 ]
  %232 = phi i1 [ %209, %203 ], [ %228, %211 ]
  %233 = icmp eq %struct.mbuf* %231, null
  %234 = and i1 %233, %232
  br i1 %234, label %238, label %235

235:                                              ; preds = %193, %230
  %236 = phi i8* [ %5, %230 ], [ %202, %193 ]
  %237 = icmp eq i8* %236, null
  br i1 %237, label %238, label %79

238:                                              ; preds = %230, %186, %165, %88, %235, %79, %69, %25, %3, %74
  %239 = phi i32 [ 0, %74 ], [ 0, %3 ], [ 0, %25 ], [ 0, %69 ], [ 0, %230 ], [ 0, %186 ], [ 0, %165 ], [ 0, %79 ], [ 0, %235 ], [ 1, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #12
  ret i32 %239
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_cmpaddr(%struct.sockaddr* readonly, %struct.sockaddr* readonly) local_unnamed_addr #1 {
  %3 = icmp eq %struct.sockaddr* %0, null
  %4 = icmp eq %struct.sockaddr* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %8, %10
  %12 = icmp eq i16 %8, 123
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %23

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %16 = bitcast i8* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 6
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %17, %20
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %6, %2, %14
  %24 = phi i32 [ %22, %14 ], [ 0, %2 ], [ 0, %6 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_print_address(%struct.sockaddr* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = icmp eq i16 %3, 123
  %5 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %6 = icmp eq void (i8*, ...)* %5, null
  br i1 %4, label %7, label %12

7:                                                ; preds = %1
  br i1 %6, label %14, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void (i8*, ...) %5(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %11) #12
  br label %14

12:                                               ; preds = %1
  br i1 %6, label %14, label %13

13:                                               ; preds = %12
  tail call void (i8*, ...) %5(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %14

14:                                               ; preds = %8, %7, %12, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_pull_off_control_to_new_inp(%struct.sctp_inpcb*, %struct.sctp_inpcb*, %struct.sctp_tcb*, i32) local_unnamed_addr #3 {
  %5 = alloca %struct.sctp_readhead, align 8
  %6 = bitcast %struct.sctp_readhead* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %struct.sctp_readhead, %struct.sctp_readhead* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.sctp_readhead, %struct.sctp_readhead* %5, i64 0, i32 1
  %9 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %10 = load %struct.socket*, %struct.socket** %9, align 8
  %11 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 7
  %12 = load %struct.socket*, %struct.socket** %11, align 8
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %7, align 8
  store %struct.sctp_queued_to_read** %7, %struct.sctp_queued_to_read*** %8, align 8
  %13 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %14 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #12
  %15 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 1, i32 0
  %16 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %15, align 8
  %17 = icmp eq %struct.sctp_queued_to_read* %16, null
  br i1 %17, label %86, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 1, i32 1
  %20 = bitcast %struct.sctp_queued_to_read*** %8 to i64*
  %21 = getelementptr inbounds %struct.socket, %struct.socket* %10, i64 0, i32 21, i32 8
  %22 = getelementptr inbounds %struct.socket, %struct.socket* %10, i64 0, i32 21, i32 10
  %23 = icmp ne %struct.sctp_tcb* %2, null
  %24 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 79
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 81
  br label %26

26:                                               ; preds = %18, %84
  %27 = phi %struct.sctp_queued_to_read* [ %16, %18 ], [ %29, %84 ]
  %28 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %27, i64 0, i32 18, i32 0
  %29 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %28, align 8
  %30 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %27, i64 0, i32 17
  %31 = load %struct.sctp_tcb*, %struct.sctp_tcb** %30, align 8
  %32 = icmp eq %struct.sctp_tcb* %31, %2
  br i1 %32, label %33, label %84

33:                                               ; preds = %26
  %34 = icmp eq %struct.sctp_queued_to_read* %29, null
  %35 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %27, i64 0, i32 18, i32 1
  %36 = bitcast %struct.sctp_queued_to_read*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %29, i64 0, i32 18, i32 1
  %39 = select i1 %34, %struct.sctp_queued_to_read*** %19, %struct.sctp_queued_to_read*** %38
  %40 = bitcast %struct.sctp_queued_to_read*** %39 to i64*
  store i64 %37, i64* %40, align 8
  %41 = bitcast %struct.sctp_queued_to_read** %28 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.sctp_queued_to_read*** %35 to i64**
  %44 = load i64*, i64** %43, align 8
  store i64 %42, i64* %44, align 8
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %28, align 8
  %45 = load i64, i64* %20, align 8
  store i64 %45, i64* %36, align 8
  %46 = inttoptr i64 %45 to %struct.sctp_queued_to_read**
  store %struct.sctp_queued_to_read* %27, %struct.sctp_queued_to_read** %46, align 8
  store %struct.sctp_queued_to_read** %28, %struct.sctp_queued_to_read*** %8, align 8
  %47 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %27, i64 0, i32 14
  %48 = load %struct.mbuf*, %struct.mbuf** %47, align 8
  %49 = icmp eq %struct.mbuf* %48, null
  br i1 %49, label %84, label %50

50:                                               ; preds = %33
  %51 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %27, i64 0, i32 23
  br label %52

52:                                               ; preds = %50, %80
  %53 = phi %struct.mbuf* [ %48, %50 ], [ %82, %80 ]
  %54 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %53, i64 0, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sub nsw i32 0, %55
  %57 = atomicrmw add i32* %21, i32 %56 seq_cst
  %58 = load i32, i32* %54, align 8
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %52
  store i32 0, i32* %21, align 4
  br label %61

61:                                               ; preds = %60, %52
  %62 = atomicrmw add i32* %22, i32 -256 seq_cst
  %63 = icmp slt i32 %62, 256
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  store i32 0, i32* %22, align 4
  br label %65

65:                                               ; preds = %64, %61
  %66 = load i8, i8* %51, align 4
  %67 = icmp eq i8 %66, 0
  %68 = and i1 %23, %67
  br i1 %68, label %69, label %80

69:                                               ; preds = %65
  %70 = load i32, i32* %54, align 8
  %71 = sub nsw i32 0, %70
  %72 = atomicrmw add i32* %24, i32 %71 seq_cst
  %73 = load i32, i32* %54, align 8
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %69
  store i32 0, i32* %24, align 8
  br label %76

76:                                               ; preds = %75, %69
  %77 = atomicrmw add i32* %25, i32 -256 seq_cst
  %78 = icmp slt i32 %77, 256
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  store i32 0, i32* %25, align 8
  br label %80

80:                                               ; preds = %65, %79, %76
  %81 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %53, i64 0, i32 0, i32 0
  %82 = load %struct.mbuf*, %struct.mbuf** %81, align 8
  %83 = icmp eq %struct.mbuf* %82, null
  br i1 %83, label %84, label %52

84:                                               ; preds = %80, %33, %26
  %85 = icmp eq %struct.sctp_queued_to_read* %29, null
  br i1 %85, label %86, label %26

86:                                               ; preds = %84, %4
  %87 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #12
  %88 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 36
  %89 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %88) #12
  %90 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %7, align 8
  %91 = icmp eq %struct.sctp_queued_to_read* %90, null
  br i1 %91, label %127, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1, i64 0, i32 1, i32 1
  %94 = bitcast %struct.sctp_queued_to_read*** %93 to i64*
  %95 = getelementptr inbounds %struct.socket, %struct.socket* %12, i64 0, i32 21, i32 8
  %96 = getelementptr inbounds %struct.socket, %struct.socket* %12, i64 0, i32 21, i32 10
  %97 = icmp eq %struct.sctp_tcb* %2, null
  %98 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 79
  %99 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %2, i64 0, i32 7, i32 81
  br label %102

100:                                              ; preds = %123, %102
  %101 = icmp eq %struct.sctp_queued_to_read* %105, null
  br i1 %101, label %127, label %102

102:                                              ; preds = %92, %100
  %103 = phi %struct.sctp_queued_to_read* [ %90, %92 ], [ %105, %100 ]
  %104 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %103, i64 0, i32 18, i32 0
  %105 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %104, align 8
  store %struct.sctp_queued_to_read* null, %struct.sctp_queued_to_read** %104, align 8
  %106 = load i64, i64* %94, align 8
  %107 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %103, i64 0, i32 18, i32 1
  %108 = bitcast %struct.sctp_queued_to_read*** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = load %struct.sctp_queued_to_read**, %struct.sctp_queued_to_read*** %93, align 8
  store %struct.sctp_queued_to_read* %103, %struct.sctp_queued_to_read** %109, align 8
  store %struct.sctp_queued_to_read** %104, %struct.sctp_queued_to_read*** %93, align 8
  %110 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %103, i64 0, i32 14
  %111 = load %struct.mbuf*, %struct.mbuf** %110, align 8
  %112 = icmp eq %struct.mbuf* %111, null
  br i1 %112, label %100, label %113

113:                                              ; preds = %102, %123
  %114 = phi %struct.mbuf* [ %125, %123 ], [ %111, %102 ]
  %115 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %114, i64 0, i32 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = atomicrmw add i32* %95, i32 %116 seq_cst
  %118 = atomicrmw add i32* %96, i32 256 seq_cst
  br i1 %97, label %123, label %119

119:                                              ; preds = %113
  %120 = load i32, i32* %115, align 8
  %121 = atomicrmw add i32* %98, i32 %120 seq_cst
  %122 = atomicrmw add i32* %99, i32 256 seq_cst
  br label %123

123:                                              ; preds = %119, %113
  %124 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %114, i64 0, i32 0, i32 0
  %125 = load %struct.mbuf*, %struct.mbuf** %124, align 8
  %126 = icmp eq %struct.mbuf* %125, null
  br i1 %126, label %100, label %113

127:                                              ; preds = %100, %86
  %128 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %88) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_wakeup_the_read_socket(%struct.sctp_inpcb*, %struct.sctp_tcb* nocapture readnone, i32) local_unnamed_addr #3 {
  %4 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %7 = load %struct.socket*, %struct.socket** %6, align 8
  %8 = icmp eq %struct.socket* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 8388608
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = or i32 %11, 33554432
  store i32 %15, i32* %10, align 8
  br label %29

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.socket, %struct.socket* %7, i64 0, i32 21, i32 1
  %18 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %17) #12
  %19 = load %struct.socket*, %struct.socket** %6, align 8
  %20 = getelementptr inbounds %struct.socket, %struct.socket* %19, i64 0, i32 21, i32 15
  %21 = load i16, i16* %20, align 8
  %22 = and i16 %21, 444
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.socket, %struct.socket* %19, i64 0, i32 21
  tail call void @sowakeup(%struct.socket* %19, %struct.sockbuf* %25) #12
  br label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.socket, %struct.socket* %19, i64 0, i32 21, i32 1
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #12
  br label %29

29:                                               ; preds = %5, %3, %24, %26, %14
  ret void
}

declare void @sowakeup(%struct.socket*, %struct.sockbuf*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_invoke_recv_callback(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_queued_to_read* nocapture, i32) local_unnamed_addr #3 {
  %5 = alloca %struct.sctp_rcvinfo, align 8
  %6 = alloca %union.sctp_sockstore, align 8
  %7 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 48
  %8 = load i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)** %7, align 8
  %9 = icmp eq i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)* %8, null
  %10 = icmp eq %struct.sctp_tcb* %1, null
  %11 = or i1 %10, %9
  br i1 %11, label %229, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %14 = load %struct.socket*, %struct.socket** %13, align 8
  %15 = icmp eq %struct.socket* %14, null
  br i1 %15, label %229, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.socket, %struct.socket* %14, i64 0, i32 21, i32 9
  %20 = load i32, i32* %19, align 8
  %21 = lshr i32 %20, 1
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %23 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %22, align 8
  %24 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %23, i64 0, i32 17
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %21, %25
  %27 = select i1 %26, i32 %25, i32 %21
  %28 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 24
  %29 = load i8, i8* %28, align 1
  %30 = icmp ne i8 %29, 1
  %31 = icmp ult i32 %18, %27
  %32 = and i1 %30, %31
  br i1 %32, label %229, label %33

33:                                               ; preds = %16
  %34 = bitcast %struct.sctp_rcvinfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %34) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 28, i1 false)
  %35 = bitcast %union.sctp_sockstore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = zext i32 %18 to i64
  %37 = tail call noalias i8* @malloc(i64 %36) #12
  %38 = icmp eq i8* %37, null
  br i1 %38, label %228, label %39

39:                                               ; preds = %33
  %40 = icmp eq i32 %3, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %43 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %42) #12
  %44 = load %struct.socket*, %struct.socket** %13, align 8
  br label %45

45:                                               ; preds = %41, %39
  %46 = phi %struct.socket* [ %44, %41 ], [ %14, %39 ]
  %47 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 14
  %48 = load %struct.mbuf*, %struct.mbuf** %47, align 8
  %49 = icmp eq %struct.mbuf* %48, null
  br i1 %49, label %98, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.socket, %struct.socket* %46, i64 0, i32 21, i32 8
  %52 = getelementptr inbounds %struct.socket, %struct.socket* %46, i64 0, i32 21, i32 10
  %53 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 23
  %54 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 17
  br label %55

55:                                               ; preds = %50, %92
  %56 = phi %struct.mbuf* [ %48, %50 ], [ %94, %92 ]
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %56, i64 0, i32 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = sub nsw i32 0, %58
  %60 = atomicrmw add i32* %51, i32 %59 seq_cst
  %61 = load i32, i32* %57, align 8
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %55
  store i32 0, i32* %51, align 4
  br label %64

64:                                               ; preds = %63, %55
  %65 = atomicrmw add i32* %52, i32 -256 seq_cst
  %66 = icmp slt i32 %65, 256
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  store i32 0, i32* %52, align 4
  br label %68

68:                                               ; preds = %67, %64
  %69 = load i8, i8* %53, align 4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %92

71:                                               ; preds = %68
  %72 = load %struct.sctp_tcb*, %struct.sctp_tcb** %54, align 8
  %73 = icmp eq %struct.sctp_tcb* %72, null
  br i1 %73, label %92, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %72, i64 0, i32 7, i32 79
  %76 = load i32, i32* %57, align 8
  %77 = sub nsw i32 0, %76
  %78 = atomicrmw add i32* %75, i32 %77 seq_cst
  %79 = load i32, i32* %57, align 8
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = load %struct.sctp_tcb*, %struct.sctp_tcb** %54, align 8
  %83 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %82, i64 0, i32 7, i32 79
  store i32 0, i32* %83, align 8
  br label %84

84:                                               ; preds = %81, %74
  %85 = load %struct.sctp_tcb*, %struct.sctp_tcb** %54, align 8
  %86 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %85, i64 0, i32 7, i32 81
  %87 = atomicrmw add i32* %86, i32 -256 seq_cst
  %88 = icmp slt i32 %87, 256
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = load %struct.sctp_tcb*, %struct.sctp_tcb** %54, align 8
  %91 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %90, i64 0, i32 7, i32 81
  store i32 0, i32* %91, align 8
  br label %92

92:                                               ; preds = %84, %89, %71, %68
  %93 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %56, i64 0, i32 0, i32 0
  %94 = load %struct.mbuf*, %struct.mbuf** %93, align 8
  %95 = icmp eq %struct.mbuf* %94, null
  br i1 %95, label %96, label %55

96:                                               ; preds = %92
  %97 = load %struct.mbuf*, %struct.mbuf** %47, align 8
  br label %98

98:                                               ; preds = %96, %45
  %99 = phi %struct.mbuf* [ %97, %96 ], [ null, %45 ]
  tail call void @m_copydata(%struct.mbuf* %99, i32 0, i32 %18, i8* nonnull %37) #12
  %100 = bitcast %struct.sctp_rcvinfo* %5 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 0
  %102 = load i16, i16* %101, align 8
  %103 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 0
  store i16 %102, i16* %103, align 8
  %104 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 8
  %105 = load i32, i32* %104, align 4
  %106 = trunc i32 %105 to i16
  %107 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 1
  store i16 %106, i16* %107, align 2
  %108 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 1
  %109 = load i16, i16* %108, align 2
  %110 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 2
  store i16 %109, i16* %110, align 4
  %111 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 3
  store i32 %112, i32* %113, align 8
  %114 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 5
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 4
  store i32 %115, i32* %116, align 4
  %117 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 6
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 5
  store i32 %118, i32* %119, align 8
  %120 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 6
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 7
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %struct.sctp_rcvinfo, %struct.sctp_rcvinfo* %5, i64 0, i32 7
  store i32 %124, i32* %125, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 32, i1 false)
  %126 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 13
  %127 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %128 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %127, i64 0, i32 3, i32 1
  %129 = bitcast %union.sctp_sockstore* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %129, i64 16, i1 false)
  %130 = load i8, i8* %28, align 1
  %131 = icmp eq i8 %130, 1
  %132 = select i1 %131, i32 128, i32 0
  %133 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 22
  %134 = load i16, i16* %133, align 2
  %135 = shl i16 %134, 5
  %136 = and i16 %135, 8192
  %137 = zext i16 %136 to i32
  %138 = or i32 %132, %137
  %139 = load %struct.mbuf*, %struct.mbuf** %47, align 8
  tail call void @m_freem(%struct.mbuf* %139) #12
  store i32 0, i32* %17, align 8
  %140 = bitcast %struct.mbuf** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 16, i1 false)
  %141 = load i8, i8* %28, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %213, label %143

143:                                              ; preds = %98
  %144 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 18, i32 0
  %145 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %144, align 8
  %146 = icmp eq %struct.sctp_queued_to_read* %145, null
  %147 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 18, i32 1
  %148 = bitcast %struct.sctp_queued_to_read*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  br i1 %146, label %152, label %150

150:                                              ; preds = %143
  %151 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %145, i64 0, i32 18, i32 1
  br label %155

152:                                              ; preds = %143
  %153 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %22, align 8
  %154 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %153, i64 0, i32 1, i32 1
  br label %155

155:                                              ; preds = %152, %150
  %156 = phi %struct.sctp_queued_to_read*** [ %154, %152 ], [ %151, %150 ]
  %157 = bitcast %struct.sctp_queued_to_read*** %156 to i64*
  store i64 %149, i64* %157, align 8
  %158 = bitcast %struct.sctp_queued_to_read** %144 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %struct.sctp_queued_to_read*** %147 to i64**
  %161 = load i64*, i64** %160, align 8
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %2, i64 0, i32 30
  store i8 0, i8* %162, align 1
  %163 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %164 = icmp eq %struct.sctp_nets* %163, null
  br i1 %164, label %210, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %163, i64 0, i32 17
  %167 = atomicrmw add i32* %166, i32 -1 seq_cst
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %210

169:                                              ; preds = %165
  %170 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %171 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %170, i64 0, i32 3, i32 0
  %172 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %171, align 8
  %173 = icmp eq %struct.sctp_rtentry* %172, null
  br i1 %173, label %189, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %172, i64 0, i32 3
  %176 = load i64, i64* %175, align 8
  %177 = icmp sgt i64 %176, 1
  %178 = add nsw i64 %176, -1
  store i64 %178, i64* %175, align 8
  %179 = icmp sgt i64 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %183, label %181

181:                                              ; preds = %174
  %182 = bitcast %struct.sctp_rtentry* %172 to i8*
  tail call void @free(i8* %182) #12
  br label %183

183:                                              ; preds = %174, %181
  %184 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %185 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %184, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %185, align 8
  %186 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %187 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %186, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %187, align 8
  %188 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  br label %189

189:                                              ; preds = %169, %183
  %190 = phi %struct.sctp_nets* [ %170, %169 ], [ %188, %183 ]
  %191 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %190, i64 0, i32 47
  %192 = load i8, i8* %191, align 1
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %190, i64 0, i32 3, i32 2
  %196 = load %struct.sctp_ifa*, %struct.sctp_ifa** %195, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %196) #12
  %197 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %198 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %197, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %198, align 8
  %199 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  br label %200

200:                                              ; preds = %189, %194
  %201 = phi %struct.sctp_nets* [ %190, %189 ], [ %199, %194 ]
  %202 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %201, i64 0, i32 47
  store i8 0, i8* %202, align 1
  %203 = load %struct.sctp_nets*, %struct.sctp_nets** %126, align 8
  %204 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %203, i64 0, i32 37
  %205 = load i16, i16* %204, align 4
  %206 = and i16 %205, -2
  store i16 %206, i16* %204, align 4
  %207 = bitcast %struct.sctp_nets** %126 to i8**
  %208 = load i8*, i8** %207, align 8
  tail call void @free(i8* %208) #12
  %209 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %210

210:                                              ; preds = %155, %165, %200
  %211 = bitcast %struct.sctp_queued_to_read* %2 to i8*
  tail call void @free(i8* %211) #12
  %212 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  br label %213

213:                                              ; preds = %98, %210
  %214 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  %215 = atomicrmw add i32* %214, i32 1 seq_cst
  %216 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 14
  %217 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %216) #12
  br i1 %40, label %218, label %221

218:                                              ; preds = %213
  %219 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 36
  %220 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %219) #12
  br label %221

221:                                              ; preds = %218, %213
  %222 = load i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)** %7, align 8
  %223 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 47
  %224 = load i8*, i8** %223, align 8
  %225 = tail call i32 %222(%struct.socket* %46, %union.sctp_sockstore* nonnull byval(%union.sctp_sockstore) align 8 %6, i8* nonnull %37, i64 %36, %struct.sctp_rcvinfo* nonnull byval(%struct.sctp_rcvinfo) align 8 %5, i32 %138, i8* %224) #12
  %226 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %216) #12
  %227 = atomicrmw sub i32* %214, i32 1 seq_cst
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %34) #12
  br label %229

228:                                              ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %34) #12
  br label %229

229:                                              ; preds = %16, %221, %228, %4, %12
  ret void
}

declare void @m_copydata(%struct.mbuf*, i32, i32, i8*) local_unnamed_addr #4

declare %struct.mbuf* @m_free(%struct.mbuf*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_generate_no_user_data_cause(i32) local_unnamed_addr #3 {
  %2 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #12
  %3 = icmp eq %struct.mbuf* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 3
  store i32 8, i32* %5, align 8
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 2
  %7 = bitcast i8** %6 to %struct.sctp_error_no_user_data**
  %8 = load %struct.sctp_error_no_user_data*, %struct.sctp_error_no_user_data** %7, align 8
  %9 = getelementptr inbounds %struct.sctp_error_no_user_data, %struct.sctp_error_no_user_data* %8, i64 0, i32 0, i32 0
  store i16 2304, i16* %9, align 1
  %10 = getelementptr inbounds %struct.sctp_error_no_user_data, %struct.sctp_error_no_user_data* %8, i64 0, i32 0, i32 1
  store i16 2048, i16* %10, align 1
  %11 = tail call i32 @llvm.bswap.i32(i32 %0) #12
  %12 = getelementptr inbounds %struct.sctp_error_no_user_data, %struct.sctp_error_no_user_data* %8, i64 0, i32 1
  store i32 %11, i32* %12, align 1
  br label %13

13:                                               ; preds = %1, %4
  ret %struct.mbuf* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb*, %struct.sctp_tmit_chunk*, i8 zeroext, i32) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i8 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 0, i32 0, i32 10
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %10, %4
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 208, i64 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 9
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 15
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 208, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  %26 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %27 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %26, align 8
  %28 = zext i16 %6 to i64
  %29 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %27, i64 %28, i32 4, i64 0
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  br label %49

32:                                               ; preds = %10
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 207, i64 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 9
  %37 = load i16, i16* %36, align 2
  %38 = and i16 %37, 15
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 207, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %44 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %43, align 8
  %45 = zext i16 %6 to i64
  %46 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %44, i64 %45, i32 3, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 4
  br label %49

49:                                               ; preds = %32, %15
  %50 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 92
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 93
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 121
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 78
  %54 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 74
  %57 = icmp eq %struct.sctp_tcb* %0, null
  %58 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 87
  br label %60

60:                                               ; preds = %186, %49
  %61 = phi %struct.sctp_tmit_chunk* [ %1, %49 ], [ %188, %186 ]
  %62 = phi i32 [ 0, %49 ], [ %67, %186 ]
  %63 = phi i32 [ 0, %49 ], [ %180, %186 ]
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 11
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = add nuw nsw i32 %62, %66
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 3
  %69 = load %struct.mbuf*, %struct.mbuf** %68, align 8
  %70 = icmp eq %struct.mbuf* %69, null
  br i1 %70, label %179, label %71

71:                                               ; preds = %60
  %72 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 7
  %73 = load i32, i32* %72, align 8
  %74 = icmp slt i32 %73, 4
  br i1 %74, label %75, label %93

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 5
  %77 = load %struct.sctp_nets*, %struct.sctp_nets** %76, align 8
  %78 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %77, i64 0, i32 18
  %79 = load i32, i32* %78, align 4
  %80 = tail call i32 @llvm.usub.sat.i32(i32 %79, i32 %66)
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 20
  store i8 0, i8* %81, align 2
  %82 = load i32, i32* %50, align 4
  %83 = load i16, i16* %64, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp ult i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %75
  %87 = sub i32 %82, %84
  store i32 %87, i32* %50, align 4
  %88 = load i32, i32* %51, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = add i32 %88, -1
  store i32 %91, i32* %51, align 8
  br label %93

92:                                               ; preds = %75
  store i32 0, i32* %50, align 4
  store i32 0, i32* %51, align 8
  br label %93

93:                                               ; preds = %86, %71, %90, %92
  %94 = load %struct.mbuf*, %struct.mbuf** %68, align 8
  %95 = icmp eq %struct.mbuf* %94, null
  br i1 %95, label %123, label %96

96:                                               ; preds = %93
  %97 = atomicrmw sub i32* %52, i32 1 seq_cst
  %98 = load i32, i32* %53, align 4
  %99 = load i16, i16* %64, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp ult i32 %98, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %96
  %103 = atomicrmw sub i32* %53, i32 %100 seq_cst
  br label %105

104:                                              ; preds = %96
  store i32 0, i32* %53, align 4
  br label %105

105:                                              ; preds = %104, %102
  %106 = load %struct.socket*, %struct.socket** %54, align 8
  %107 = icmp eq %struct.socket* %106, null
  br i1 %107, label %123, label %108

108:                                              ; preds = %105
  %109 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %110 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %109, i64 0, i32 9
  %111 = load i32, i32* %110, align 8
  %112 = and i32 %111, 4194306
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %123, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.socket, %struct.socket* %106, i64 0, i32 22, i32 8
  %116 = load i32, i32* %115, align 4
  %117 = load i16, i16* %64, align 2
  %118 = zext i16 %117 to i32
  %119 = icmp ult i32 %116, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = atomicrmw sub i32* %115, i32 %118 seq_cst
  br label %123

122:                                              ; preds = %114
  store i32 0, i32* %115, align 4
  br label %123

123:                                              ; preds = %108, %105, %93, %122, %120
  %124 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 10
  %125 = load i16, i16* %124, align 8
  %126 = zext i16 %125 to i32
  %127 = load i32, i32* %56, align 4
  %128 = add i32 %127, %126
  store i32 %128, i32* %56, align 4
  %129 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  %130 = add i32 %129, %128
  store i32 %130, i32* %56, align 4
  br i1 %9, label %149, label %131

131:                                              ; preds = %123
  br i1 %57, label %167, label %132

132:                                              ; preds = %131
  %133 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %134 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %133, i64 0, i32 9
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 805306368
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %167

138:                                              ; preds = %132
  %139 = load i32, i32* %58, align 8
  %140 = and i32 %139, 256
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %167

142:                                              ; preds = %138
  %143 = load %struct.socket*, %struct.socket** %54, align 8
  %144 = getelementptr inbounds %struct.socket, %struct.socket* %143, i64 0, i32 4
  %145 = load i16, i16* %144, align 2
  %146 = and i16 %145, 32
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %167

148:                                              ; preds = %142
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 1, i32 0, %struct.sctp_tmit_chunk* %61, i32 %3) #12
  br label %167

149:                                              ; preds = %123
  br i1 %57, label %167, label %150

150:                                              ; preds = %149
  %151 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %152 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %151, i64 0, i32 9
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 805306368
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %167

156:                                              ; preds = %150
  %157 = load i32, i32* %58, align 8
  %158 = and i32 %157, 256
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %167

160:                                              ; preds = %156
  %161 = load %struct.socket*, %struct.socket** %54, align 8
  %162 = getelementptr inbounds %struct.socket, %struct.socket* %161, i64 0, i32 4
  %163 = load i16, i16* %162, align 2
  %164 = and i16 %163, 32
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %160
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 0, i32 0, %struct.sctp_tmit_chunk* %61, i32 %3) #12
  br label %167

167:                                              ; preds = %166, %160, %156, %150, %149, %148, %142, %138, %132, %131
  %168 = load %struct.mbuf*, %struct.mbuf** %68, align 8
  %169 = icmp eq %struct.mbuf* %168, null
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  tail call void @m_freem(%struct.mbuf* nonnull %168) #12
  store %struct.mbuf* null, %struct.mbuf** %68, align 8
  br label %171

171:                                              ; preds = %167, %170
  %172 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 9
  %173 = load i16, i16* %172, align 2
  %174 = and i16 %173, 15
  %175 = icmp eq i16 %174, 2
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = load i32, i32* %59, align 8
  %178 = add i32 %177, -1
  store i32 %178, i32* %59, align 8
  br label %179

179:                                              ; preds = %60, %171, %176
  %180 = phi i32 [ 1, %176 ], [ 1, %171 ], [ %63, %60 ]
  %181 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 7
  store i32 30010, i32* %181, align 8
  %182 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 0, i32 0, i32 10
  %183 = load i8, i8* %182, align 1
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %516

186:                                              ; preds = %179
  %187 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 6, i32 0
  %188 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %187, align 8
  %189 = icmp eq %struct.sctp_tmit_chunk* %188, null
  br i1 %189, label %190, label %60

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 21, i32 0
  %192 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %191, align 8
  %193 = icmp eq %struct.sctp_tmit_chunk* %192, null
  br i1 %193, label %334, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %196 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 21, i32 1
  %197 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 20, i32 1
  %198 = bitcast %struct.sctp_tmit_chunk*** %197 to i64*
  %199 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 85
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 86
  %201 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %192, i64 0, i32 0, i32 0, i32 2
  %202 = load i16, i16* %201, align 8
  %203 = icmp eq i16 %202, %6
  br i1 %203, label %208, label %328

204:                                              ; preds = %302
  %205 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %215, i64 0, i32 0, i32 0, i32 2
  %206 = load i16, i16* %205, align 8
  %207 = icmp eq i16 %206, %6
  br i1 %207, label %208, label %328

208:                                              ; preds = %194, %204
  %209 = phi %struct.sctp_tmit_chunk* [ %215, %204 ], [ %192, %194 ]
  %210 = phi %struct.sctp_tmit_chunk* [ %209, %204 ], [ null, %194 ]
  %211 = phi i8 [ %307, %204 ], [ 0, %194 ]
  %212 = phi i32 [ %230, %204 ], [ %67, %194 ]
  %213 = phi i32 [ 1, %204 ], [ %180, %194 ]
  %214 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 6, i32 0
  %215 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %214, align 8
  %216 = load i8, i8* %195, align 2
  %217 = icmp eq i8 %216, 1
  %218 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 0, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %208
  %221 = icmp eq i32 %219, %8
  br i1 %221, label %226, label %328

222:                                              ; preds = %208
  %223 = xor i32 %219, %8
  %224 = and i32 %223, 65535
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %328

226:                                              ; preds = %222, %220
  %227 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 11
  %228 = load i16, i16* %227, align 2
  %229 = zext i16 %228 to i32
  %230 = add nuw nsw i32 %212, %229
  %231 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 3
  %232 = load %struct.mbuf*, %struct.mbuf** %231, align 8
  %233 = icmp eq %struct.mbuf* %232, null
  br i1 %233, label %261, label %234

234:                                              ; preds = %226
  %235 = atomicrmw sub i32* %52, i32 1 seq_cst
  %236 = load i32, i32* %53, align 4
  %237 = load i16, i16* %227, align 2
  %238 = zext i16 %237 to i32
  %239 = icmp ult i32 %236, %238
  br i1 %239, label %242, label %240

240:                                              ; preds = %234
  %241 = atomicrmw sub i32* %53, i32 %238 seq_cst
  br label %243

242:                                              ; preds = %234
  store i32 0, i32* %53, align 4
  br label %243

243:                                              ; preds = %242, %240
  %244 = load %struct.socket*, %struct.socket** %54, align 8
  %245 = icmp eq %struct.socket* %244, null
  br i1 %245, label %261, label %246

246:                                              ; preds = %243
  %247 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %248 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %247, i64 0, i32 9
  %249 = load i32, i32* %248, align 8
  %250 = and i32 %249, 4194306
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %261, label %252

252:                                              ; preds = %246
  %253 = getelementptr inbounds %struct.socket, %struct.socket* %244, i64 0, i32 22, i32 8
  %254 = load i32, i32* %253, align 4
  %255 = load i16, i16* %227, align 2
  %256 = zext i16 %255 to i32
  %257 = icmp ult i32 %254, %256
  br i1 %257, label %260, label %258

258:                                              ; preds = %252
  %259 = atomicrmw sub i32* %253, i32 %256 seq_cst
  br label %261

260:                                              ; preds = %252
  store i32 0, i32* %253, align 4
  br label %261

261:                                              ; preds = %246, %243, %226, %260, %258
  br i1 %9, label %280, label %262

262:                                              ; preds = %261
  br i1 %57, label %298, label %263

263:                                              ; preds = %262
  %264 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %265 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %264, i64 0, i32 9
  %266 = load i32, i32* %265, align 8
  %267 = and i32 %266, 805306368
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %298

269:                                              ; preds = %263
  %270 = load i32, i32* %58, align 8
  %271 = and i32 %270, 256
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %298

273:                                              ; preds = %269
  %274 = load %struct.socket*, %struct.socket** %54, align 8
  %275 = getelementptr inbounds %struct.socket, %struct.socket* %274, i64 0, i32 4
  %276 = load i16, i16* %275, align 2
  %277 = and i16 %276, 32
  %278 = icmp eq i16 %277, 0
  br i1 %278, label %279, label %298

279:                                              ; preds = %273
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 1, i32 0, %struct.sctp_tmit_chunk* nonnull %209, i32 %3) #12
  br label %298

280:                                              ; preds = %261
  br i1 %57, label %298, label %281

281:                                              ; preds = %280
  %282 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %283 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %282, i64 0, i32 9
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 805306368
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %298

287:                                              ; preds = %281
  %288 = load i32, i32* %58, align 8
  %289 = and i32 %288, 256
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %298

291:                                              ; preds = %287
  %292 = load %struct.socket*, %struct.socket** %54, align 8
  %293 = getelementptr inbounds %struct.socket, %struct.socket* %292, i64 0, i32 4
  %294 = load i16, i16* %293, align 2
  %295 = and i16 %294, 32
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %291
  tail call fastcc void @sctp_notify_send_failed(%struct.sctp_tcb* nonnull %0, i8 zeroext 0, i32 0, %struct.sctp_tmit_chunk* nonnull %209, i32 %3) #12
  br label %298

298:                                              ; preds = %297, %291, %287, %281, %280, %279, %273, %269, %263, %262
  %299 = load %struct.mbuf*, %struct.mbuf** %231, align 8
  %300 = icmp eq %struct.mbuf* %299, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  tail call void @m_freem(%struct.mbuf* nonnull %299) #12
  store %struct.mbuf* null, %struct.mbuf** %231, align 8
  br label %302

302:                                              ; preds = %298, %301
  store i16 0, i16* %227, align 2
  %303 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 0, i32 0, i32 10
  %304 = load i8, i8* %303, align 1
  %305 = and i8 %304, 1
  %306 = icmp eq i8 %305, 0
  %307 = select i1 %306, i8 %211, i8 1
  %308 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 7
  store i32 30010, i32* %308, align 8
  %309 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %214, align 8
  %310 = icmp eq %struct.sctp_tmit_chunk* %309, null
  %311 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %209, i64 0, i32 6, i32 1
  %312 = bitcast %struct.sctp_tmit_chunk*** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %309, i64 0, i32 6, i32 1
  %315 = select i1 %310, %struct.sctp_tmit_chunk*** %196, %struct.sctp_tmit_chunk*** %314
  %316 = bitcast %struct.sctp_tmit_chunk*** %315 to i64*
  store i64 %313, i64* %316, align 8
  %317 = bitcast %struct.sctp_tmit_chunk** %214 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %struct.sctp_tmit_chunk*** %311 to i64**
  %320 = load i64*, i64** %319, align 8
  store i64 %318, i64* %320, align 8
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %214, align 8
  %321 = load i64, i64* %198, align 8
  store i64 %321, i64* %312, align 8
  %322 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %197, align 8
  store %struct.sctp_tmit_chunk* %209, %struct.sctp_tmit_chunk** %322, align 8
  store %struct.sctp_tmit_chunk** %214, %struct.sctp_tmit_chunk*** %197, align 8
  %323 = load i32, i32* %199, align 8
  %324 = add i32 %323, -1
  store i32 %324, i32* %199, align 8
  %325 = load i32, i32* %200, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %200, align 4
  %327 = icmp eq %struct.sctp_tmit_chunk* %215, null
  br i1 %327, label %328, label %204

328:                                              ; preds = %204, %302, %222, %220, %194
  %329 = phi %struct.sctp_tmit_chunk* [ null, %194 ], [ %209, %204 ], [ %209, %302 ], [ %210, %222 ], [ %210, %220 ]
  %330 = phi i8 [ 0, %194 ], [ %307, %204 ], [ %307, %302 ], [ %211, %222 ], [ %211, %220 ]
  %331 = phi i32 [ %67, %194 ], [ %230, %204 ], [ %230, %302 ], [ %212, %222 ], [ %212, %220 ]
  %332 = phi i32 [ %180, %194 ], [ 1, %204 ], [ 1, %302 ], [ %213, %222 ], [ %213, %220 ]
  %333 = icmp eq i8 %330, 0
  br i1 %333, label %334, label %516

334:                                              ; preds = %190, %328
  %335 = phi i32 [ %332, %328 ], [ %180, %190 ]
  %336 = phi i32 [ %331, %328 ], [ %67, %190 ]
  %337 = phi %struct.sctp_tmit_chunk* [ %329, %328 ], [ null, %190 ]
  %338 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %339 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %338) #12
  %340 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %341 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %342 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %341, align 8
  %343 = zext i16 %6 to i64
  %344 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 0, i32 0
  %345 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %344, align 8
  %346 = icmp eq %struct.sctp_stream_queue_pending* %345, null
  br i1 %346, label %512, label %347

347:                                              ; preds = %334
  %348 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 20
  store i8 1, i8* %348, align 1
  %349 = icmp eq %struct.sctp_tmit_chunk* %337, null
  br i1 %349, label %350, label %444

350:                                              ; preds = %347
  %351 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %352 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %351, align 8
  %353 = icmp eq %struct.sctp_tmit_chunk* %352, null
  br i1 %353, label %354, label %358

354:                                              ; preds = %350
  %355 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %356 = tail call noalias i8* @malloc(i64 %355) #12
  %357 = icmp eq i8* %356, null
  br i1 %357, label %477, label %379

358:                                              ; preds = %350
  %359 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %352, i64 0, i32 6, i32 0
  %360 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %359, align 8
  %361 = icmp eq %struct.sctp_tmit_chunk* %360, null
  %362 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %352, i64 0, i32 6, i32 1
  %363 = bitcast %struct.sctp_tmit_chunk*** %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %360, i64 0, i32 6, i32 1
  %366 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %367 = select i1 %361, %struct.sctp_tmit_chunk*** %366, %struct.sctp_tmit_chunk*** %365
  %368 = bitcast %struct.sctp_tmit_chunk*** %367 to i64*
  store i64 %364, i64* %368, align 8
  %369 = bitcast %struct.sctp_tmit_chunk** %359 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %struct.sctp_tmit_chunk*** %362 to i64**
  %372 = load i64*, i64** %371, align 8
  store i64 %370, i64* %372, align 8
  %373 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %374 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %352, i64 0, i32 14
  store i8 0, i8* %374, align 8
  %375 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %376 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %377 = load i16, i16* %376, align 2
  %378 = add i16 %377, -1
  store i16 %378, i16* %376, align 2
  br label %385

379:                                              ; preds = %354
  %380 = bitcast i8* %356 to %struct.sctp_tmit_chunk*
  %381 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %382 = getelementptr inbounds i8, i8* %356, i64 104
  %383 = bitcast i8* %382 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %383, align 8
  %384 = getelementptr inbounds i8, i8* %356, i64 144
  store i8 0, i8* %384, align 8
  br label %385

385:                                              ; preds = %379, %358
  %386 = phi %struct.sctp_tmit_chunk* [ %352, %358 ], [ %380, %379 ]
  %387 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 7
  %388 = bitcast %struct.sctp_tmit_chunk* %386 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 152, i1 false)
  store i32 30010, i32* %387, align 8
  %389 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 1
  store %struct.sctp_association* %340, %struct.sctp_association** %389, align 8
  %390 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %391 = load i8, i8* %390, align 2
  %392 = icmp eq i8 %391, 0
  %393 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 11
  %394 = load i16, i16* %393, align 4
  %395 = and i16 %394, 1024
  %396 = icmp ne i16 %395, 0
  br i1 %392, label %397, label %401

397:                                              ; preds = %385
  br i1 %396, label %408, label %398

398:                                              ; preds = %397
  %399 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 5
  %400 = load i32, i32* %399, align 4
  br label %408

401:                                              ; preds = %385
  br i1 %396, label %402, label %405

402:                                              ; preds = %401
  %403 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 6
  %404 = load i32, i32* %403, align 8
  br label %408

405:                                              ; preds = %401
  %406 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 5
  %407 = load i32, i32* %406, align 4
  br label %408

408:                                              ; preds = %397, %402, %405, %398
  %409 = phi i32 [ %404, %402 ], [ %407, %405 ], [ %400, %398 ], [ 0, %397 ]
  %410 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 0, i32 0, i32 1
  store i32 %409, i32* %410, align 4
  %411 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 12
  %412 = load i16, i16* %411, align 2
  %413 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 0, i32 0, i32 2
  store i16 %412, i16* %413, align 8
  %414 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 9
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 0, i32 0, i32 3
  store i32 %415, i32* %416, align 4
  %417 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 10
  %418 = load i32, i32* %417, align 8
  %419 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 0, i32 0, i32 4
  store i32 %418, i32* %419, align 8
  %420 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 13
  %421 = load i16, i16* %420, align 8
  %422 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 9
  store i16 %421, i16* %422, align 2
  %423 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 5
  store %struct.sctp_nets* null, %struct.sctp_nets** %423, align 8
  %424 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 56
  %425 = load i32, i32* %424, align 8
  %426 = add i32 %425, 1
  store i32 %426, i32* %424, align 8
  %427 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 0, i32 0, i32 0
  store i32 %425, i32* %427, align 8
  %428 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 2
  %429 = load i32, i32* %428, align 8
  %430 = add i32 %429, 1
  store i32 %430, i32* %428, align 8
  %431 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %431, align 8
  %432 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 20, i32 1
  %433 = bitcast %struct.sctp_tmit_chunk*** %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %386, i64 0, i32 6, i32 1
  %436 = bitcast %struct.sctp_tmit_chunk*** %435 to i64*
  store i64 %434, i64* %436, align 8
  %437 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %432, align 8
  store %struct.sctp_tmit_chunk* %386, %struct.sctp_tmit_chunk** %437, align 8
  store %struct.sctp_tmit_chunk** %431, %struct.sctp_tmit_chunk*** %432, align 8
  %438 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 86
  %439 = load i32, i32* %438, align 4
  %440 = add i32 %439, 1
  store i32 %440, i32* %438, align 4
  %441 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 82
  %442 = load i32, i32* %441, align 4
  %443 = add i32 %442, 1
  store i32 %443, i32* %441, align 4
  br label %444

444:                                              ; preds = %408, %347
  %445 = phi %struct.sctp_tmit_chunk* [ %386, %408 ], [ %337, %347 ]
  %446 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %445, i64 0, i32 0, i32 0, i32 10
  %447 = load i8, i8* %446, align 1
  %448 = or i8 %447, 1
  store i8 %448, i8* %446, align 1
  %449 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 11
  %450 = load i16, i16* %449, align 4
  %451 = and i16 %450, 1024
  %452 = icmp eq i16 %451, 0
  br i1 %452, label %456, label %453

453:                                              ; preds = %444
  %454 = or i8 %447, 5
  store i8 %454, i8* %446, align 1
  %455 = load i16, i16* %449, align 4
  br label %456

456:                                              ; preds = %444, %453
  %457 = phi i16 [ %450, %444 ], [ %455, %453 ]
  %458 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %459 = load i8, i8* %458, align 2
  %460 = icmp eq i8 %459, 0
  %461 = and i16 %457, 1024
  %462 = icmp eq i16 %461, 0
  br i1 %460, label %463, label %468

463:                                              ; preds = %456
  br i1 %462, label %464, label %477

464:                                              ; preds = %463
  %465 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 5
  %466 = load i32, i32* %465, align 4
  %467 = add i32 %466, 1
  store i32 %467, i32* %465, align 4
  br label %477

468:                                              ; preds = %456
  br i1 %462, label %473, label %469

469:                                              ; preds = %468
  %470 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 6
  %471 = load i32, i32* %470, align 8
  %472 = add i32 %471, 1
  store i32 %472, i32* %470, align 8
  br label %477

473:                                              ; preds = %468
  %474 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %342, i64 %343, i32 5
  %475 = load i32, i32* %474, align 4
  %476 = add i32 %475, 1
  store i32 %476, i32* %474, align 4
  br label %477

477:                                              ; preds = %354, %464, %463, %473, %469
  %478 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 0
  %479 = load %struct.mbuf*, %struct.mbuf** %478, align 8
  %480 = icmp eq %struct.mbuf* %479, null
  br i1 %480, label %512, label %481

481:                                              ; preds = %477
  %482 = load i32, i32* %53, align 4
  %483 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 7
  %484 = load i32, i32* %483, align 4
  %485 = icmp ult i32 %482, %484
  br i1 %485, label %488, label %486

486:                                              ; preds = %481
  %487 = atomicrmw sub i32* %53, i32 %484 seq_cst
  br label %489

488:                                              ; preds = %481
  store i32 0, i32* %53, align 4
  br label %489

489:                                              ; preds = %488, %486
  %490 = load %struct.socket*, %struct.socket** %54, align 8
  %491 = icmp eq %struct.socket* %490, null
  br i1 %491, label %506, label %492

492:                                              ; preds = %489
  %493 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %494 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %493, i64 0, i32 9
  %495 = load i32, i32* %494, align 8
  %496 = and i32 %495, 4194306
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %506, label %498

498:                                              ; preds = %492
  %499 = getelementptr inbounds %struct.socket, %struct.socket* %490, i64 0, i32 22, i32 8
  %500 = load i32, i32* %499, align 4
  %501 = load i32, i32* %483, align 4
  %502 = icmp ult i32 %500, %501
  br i1 %502, label %505, label %503

503:                                              ; preds = %498
  %504 = atomicrmw sub i32* %499, i32 %501 seq_cst
  br label %506

505:                                              ; preds = %498
  store i32 0, i32* %499, align 4
  br label %506

506:                                              ; preds = %492, %489, %505, %503
  %507 = load i32, i32* %483, align 4
  %508 = add i32 %507, %336
  %509 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %345, i64 0, i32 17
  store i8 1, i8* %509, align 2
  %510 = load %struct.mbuf*, %struct.mbuf** %478, align 8
  tail call void @m_freem(%struct.mbuf* %510) #12
  store i32 0, i32* %483, align 4
  %511 = bitcast %struct.sctp_stream_queue_pending* %345 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %511, i8 0, i64 16, i1 false)
  br label %512

512:                                              ; preds = %477, %334, %506
  %513 = phi i32 [ %508, %506 ], [ %336, %477 ], [ %336, %334 ]
  %514 = phi i32 [ 1, %506 ], [ %335, %477 ], [ %335, %334 ]
  %515 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %338) #12
  br label %516

516:                                              ; preds = %179, %512, %328
  %517 = phi i32 [ %513, %512 ], [ %331, %328 ], [ %67, %179 ]
  %518 = phi i32 [ %514, %512 ], [ %332, %328 ], [ %180, %179 ]
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %542, label %520

520:                                              ; preds = %516
  %521 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %55, align 8
  %522 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %521, i64 0, i32 9
  %523 = load i32, i32* %522, align 8
  %524 = and i32 %523, 8388608
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %528, label %526

526:                                              ; preds = %520
  %527 = or i32 %523, 16777216
  store i32 %527, i32* %522, align 8
  br label %542

528:                                              ; preds = %520
  %529 = load %struct.socket*, %struct.socket** %54, align 8
  %530 = getelementptr inbounds %struct.socket, %struct.socket* %529, i64 0, i32 22, i32 1
  %531 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %530) #12
  %532 = load %struct.socket*, %struct.socket** %54, align 8
  %533 = getelementptr inbounds %struct.socket, %struct.socket* %532, i64 0, i32 22, i32 15
  %534 = load i16, i16* %533, align 8
  %535 = and i16 %534, 444
  %536 = icmp eq i16 %535, 0
  br i1 %536, label %539, label %537

537:                                              ; preds = %528
  %538 = getelementptr inbounds %struct.socket, %struct.socket* %532, i64 0, i32 22
  tail call void @sowakeup(%struct.socket* %532, %struct.sockbuf* %538) #12
  br label %542

539:                                              ; preds = %528
  %540 = getelementptr inbounds %struct.socket, %struct.socket* %532, i64 0, i32 22, i32 1
  %541 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %540) #12
  br label %542

542:                                              ; preds = %516, %526, %539, %537
  ret i32 %517
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_ifa* @sctp_find_ifa_in_ep(%struct.sctp_inpcb*, %struct.sockaddr* nocapture readonly, i32) local_unnamed_addr #3 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 34
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #12
  br label %8

8:                                                ; preds = %5, %3
  %9 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 6
  %11 = bitcast i8* %10 to i8**
  %12 = load %struct.sctp_laddr*, %struct.sctp_laddr** %9, align 8
  %13 = icmp eq %struct.sctp_laddr* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  br label %16

16:                                               ; preds = %33, %14
  %17 = phi %struct.sctp_laddr* [ %12, %14 ], [ %35, %33 ]
  %18 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %17, i64 0, i32 1
  %19 = load %struct.sctp_ifa*, %struct.sctp_ifa** %18, align 8
  %20 = icmp eq %struct.sctp_ifa* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %16
  %22 = load i16, i16* %15, align 2
  %23 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %19, i64 0, i32 4, i32 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = icmp eq i16 %22, %24
  %26 = icmp eq i16 %22, 123
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %33

28:                                               ; preds = %21
  %29 = load i8*, i8** %11, align 8
  %30 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %19, i64 0, i32 4, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %29, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %21, %28, %16
  %34 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %17, i64 0, i32 0, i32 0
  %35 = load %struct.sctp_laddr*, %struct.sctp_laddr** %34, align 8
  %36 = icmp eq %struct.sctp_laddr* %35, null
  br i1 %36, label %37, label %16

37:                                               ; preds = %28, %33, %8
  %38 = phi %struct.sctp_laddr* [ null, %8 ], [ %17, %28 ], [ null, %33 ]
  %39 = phi i1 [ false, %8 ], [ true, %28 ], [ false, %33 ]
  br i1 %4, label %40, label %43

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 34
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %41) #12
  br label %43

43:                                               ; preds = %40, %37
  br i1 %39, label %44, label %47

44:                                               ; preds = %43
  %45 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %38, i64 0, i32 1
  %46 = load %struct.sctp_ifa*, %struct.sctp_ifa** %45, align 8
  br label %47

47:                                               ; preds = %43, %44
  %48 = phi %struct.sctp_ifa* [ %46, %44 ], [ null, %43 ]
  ret %struct.sctp_ifa* %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_get_ifa_hash_val(%struct.sockaddr* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = icmp eq i16 %3, 123
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 16
  %10 = xor i64 %9, %8
  %11 = trunc i64 %10 to i32
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i32 [ %11, %5 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_ifa* @sctp_find_ifa_by_addr(%struct.sockaddr* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  br label %7

7:                                                ; preds = %3, %5
  %8 = tail call %struct.sctp_vrf* @sctp_find_vrf(i32 %1) #12
  %9 = icmp eq %struct.sctp_vrf* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  br i1 %4, label %11, label %86

11:                                               ; preds = %10
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  br label %86

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 0
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 123
  br i1 %16, label %17, label %24

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 16
  %22 = xor i64 %21, %20
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %13, %17
  %25 = phi i32 [ %23, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %8, i64 0, i32 1
  %27 = load %struct.sctp_ifalist*, %struct.sctp_ifalist** %26, align 8
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %8, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, %28
  %32 = getelementptr inbounds %struct.sctp_ifalist, %struct.sctp_ifalist* %27, i64 %31
  %33 = icmp eq %struct.sctp_ifalist* %32, null
  br i1 %33, label %34, label %61

34:                                               ; preds = %24
  %35 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %36 = icmp eq void (i8*, ...)* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = trunc i64 %30 to i32
  %39 = trunc i64 %31 to i32
  tail call void (i8*, ...) %35(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i32 %25, i32 %38, i32 %39) #12
  %40 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %41 = load i16, i16* %14, align 2
  br label %42

42:                                               ; preds = %34, %37
  %43 = phi i16 [ %15, %34 ], [ %41, %37 ]
  %44 = phi void (i8*, ...)* [ null, %34 ], [ %40, %37 ]
  %45 = icmp eq i16 %43, 123
  %46 = icmp eq void (i8*, ...)* %44, null
  br i1 %45, label %47, label %52

47:                                               ; preds = %42
  br i1 %46, label %54, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %50 = bitcast i8* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void (i8*, ...) %44(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %51) #12
  br label %54

52:                                               ; preds = %42
  br i1 %46, label %54, label %53

53:                                               ; preds = %52
  tail call void (i8*, ...) %44(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %54

54:                                               ; preds = %47, %48, %52, %53
  %55 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %56 = icmp eq void (i8*, ...)* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  tail call void (i8*, ...) %55(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)) #12
  br label %58

58:                                               ; preds = %54, %57
  br i1 %4, label %59, label %86

59:                                               ; preds = %58
  %60 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  br label %86

61:                                               ; preds = %24
  %62 = getelementptr inbounds %struct.sctp_ifalist, %struct.sctp_ifalist* %32, i64 0, i32 0
  %63 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %64 = bitcast i8* %63 to i8**
  %65 = load %struct.sctp_ifa*, %struct.sctp_ifa** %62, align 8
  %66 = icmp eq %struct.sctp_ifa* %65, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %61, %78
  %68 = phi %struct.sctp_ifa* [ %80, %78 ], [ %65, %61 ]
  %69 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %68, i64 0, i32 4, i32 0, i32 0
  %70 = load i16, i16* %69, align 8
  %71 = icmp eq i16 %15, %70
  %72 = and i1 %16, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %67
  %74 = load i8*, i8** %64, align 8
  %75 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %68, i64 0, i32 4, i32 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %74, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %67, %73
  %79 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %68, i64 0, i32 1, i32 0
  %80 = load %struct.sctp_ifa*, %struct.sctp_ifa** %79, align 8
  %81 = icmp eq %struct.sctp_ifa* %80, null
  br i1 %81, label %82, label %67

82:                                               ; preds = %73, %78, %61
  %83 = phi %struct.sctp_ifa* [ null, %61 ], [ null, %78 ], [ %68, %73 ]
  br i1 %4, label %84, label %86

84:                                               ; preds = %82
  %85 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  br label %86

86:                                               ; preds = %82, %84, %58, %59, %10, %11
  %87 = phi %struct.sctp_ifa* [ null, %11 ], [ null, %10 ], [ null, %59 ], [ null, %58 ], [ %83, %84 ], [ %83, %82 ]
  ret %struct.sctp_ifa* %87
}

declare %struct.sctp_vrf* @sctp_find_vrf(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_sorecvmsg(%struct.socket*, %struct.uio*, %struct.mbuf**, %struct.sockaddr*, i32, i32*, %struct.sctp_sndrcvinfo*, i32) local_unnamed_addr #3 {
  %9 = alloca i32, align 4
  %10 = alloca %union.sctp_sockstore, align 8
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  store i32 0, i32* %9, align 4
  %12 = icmp eq %struct.uio* %1, null
  br i1 %12, label %1234, label %13

13:                                               ; preds = %8
  %14 = icmp ne i32* %5, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 3
  br label %34

17:                                               ; preds = %13
  %18 = load i32, i32* %5, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 116), i32 1 seq_cst
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 3
  %25 = and i32 %18, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %1234

27:                                               ; preds = %23
  %28 = icmp ne i32 %19, 0
  %29 = icmp ne %struct.mbuf** %2, null
  %30 = and i1 %29, %28
  br i1 %30, label %1234, label %31

31:                                               ; preds = %27
  %32 = and i32 %18, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %15, %31
  %35 = phi i64* [ %16, %15 ], [ %24, %31 ]
  %36 = phi i32 [ 0, %15 ], [ %19, %31 ]
  %37 = phi i1 [ false, %15 ], [ %28, %31 ]
  %38 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 4
  %39 = load i16, i16* %38, align 2
  %40 = and i16 %39, 256
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %34, %31
  %43 = phi i64* [ %35, %34 ], [ %24, %31 ]
  %44 = phi i32 [ %36, %34 ], [ %19, %31 ]
  %45 = phi i1 [ %37, %34 ], [ %28, %31 ]
  br label %46

46:                                               ; preds = %34, %42
  %47 = phi i64* [ %43, %42 ], [ %35, %34 ]
  %48 = phi i32 [ %44, %42 ], [ %36, %34 ]
  %49 = phi i1 [ %45, %42 ], [ %37, %34 ]
  %50 = phi i32 [ 0, %42 ], [ 1, %34 ]
  %51 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 6
  %52 = bitcast i8** %51 to %struct.sctp_inpcb**
  %53 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %52, align 8
  %54 = icmp eq %struct.sctp_inpcb* %53, null
  br i1 %54, label %1234, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21
  %57 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 9
  %58 = load i32, i32* %57, align 8
  %59 = lshr i32 %58, 3
  %60 = icmp ugt i32 %59, 1500
  %61 = select i1 %60, i32 %59, i32 1500
  %62 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %53, i64 0, i32 8
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 4194304
  %65 = icmp eq i64 %64, 0
  %66 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 1
  %67 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %66) #12
  %68 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %53, i64 0, i32 9
  %69 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 4
  %70 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 8
  %71 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 17
  %72 = icmp eq i32 %50, 0
  %73 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %53, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %53, i64 0, i32 36
  %75 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %53, i64 0, i32 1, i32 1
  %76 = bitcast %struct.sctp_queued_to_read*** %75 to i64*
  %77 = icmp ne i32 %7, 0
  br label %78

78:                                               ; preds = %153, %55
  %79 = phi i32 [ 1, %55 ], [ %140, %153 ]
  %80 = phi i32 [ 0, %55 ], [ %154, %153 ]
  %81 = icmp eq i32 %79, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %66) #12
  br label %84

84:                                               ; preds = %82, %78
  %85 = phi i32 [ 1, %82 ], [ %79, %78 ]
  br label %86

86:                                               ; preds = %132, %84
  %87 = phi i32 [ %80, %84 ], [ 0, %132 ]
  %88 = load i32, i32* %68, align 8
  %89 = and i32 %88, 805306368
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %1183

91:                                               ; preds = %86
  %92 = load i16, i16* %69, align 2
  %93 = and i16 %92, 32
  %94 = icmp ne i16 %93, 0
  %95 = load i32, i32* %70, align 4
  %96 = icmp eq i32 %95, 0
  %97 = and i1 %94, %96
  br i1 %97, label %98, label %105

98:                                               ; preds = %91
  %99 = load i16, i16* %71, align 8
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %1183, label %101

101:                                              ; preds = %98
  %102 = zext i16 %99 to i32
  %103 = icmp eq i32 %48, 0
  br i1 %103, label %104, label %1183

104:                                              ; preds = %101
  store i16 0, i16* %71, align 8
  br label %1183

105:                                              ; preds = %91
  %106 = icmp ugt i32 %95, %87
  br i1 %106, label %135, label %107

107:                                              ; preds = %105
  %108 = load i16, i16* %71, align 8
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = zext i16 %108 to i32
  %112 = icmp eq i32 %48, 0
  br i1 %112, label %113, label %1183

113:                                              ; preds = %110
  store i16 0, i16* %71, align 8
  br label %1183

114:                                              ; preds = %107
  %115 = icmp eq i32 %95, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %114
  %117 = and i32 %88, 4194306
  %118 = icmp ne i32 %117, 0
  %119 = and i32 %88, 2097152
  %120 = icmp eq i32 %119, 0
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %131

122:                                              ; preds = %116
  %123 = and i32 %88, 1048576
  %124 = icmp eq i32 %123, 0
  %125 = and i16 %92, -1039
  store i16 %125, i16* %69, align 2
  br i1 %124, label %126, label %1183

126:                                              ; preds = %122
  %127 = load i32, i32* %68, align 8
  %128 = and i32 %127, 524288
  %129 = icmp eq i32 %128, 0
  %130 = select i1 %129, i32 107, i32 0
  br label %1183

131:                                              ; preds = %116, %114
  br i1 %72, label %1183, label %132

132:                                              ; preds = %131
  %133 = tail call i32 @sbwait(%struct.sockbuf* %56) #12
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %86, label %1183

135:                                              ; preds = %105
  %136 = icmp eq i32 %85, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i32 [ 0, %137 ], [ %85, %135 ]
  %141 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %73, align 8
  %142 = icmp eq %struct.sctp_queued_to_read* %141, null
  br i1 %142, label %143, label %155

143:                                              ; preds = %139
  %144 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %145 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %73, align 8
  %146 = icmp eq %struct.sctp_queued_to_read* %145, null
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = load i32, i32* %70, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %151, label %150

150:                                              ; preds = %147
  store i32 0, i32* %70, align 4
  br label %151

151:                                              ; preds = %147, %150, %143
  %152 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %153

153:                                              ; preds = %151, %252, %338, %418
  %154 = phi i32 [ %87, %151 ], [ %87, %252 ], [ %87, %338 ], [ %419, %418 ]
  br label %78

155:                                              ; preds = %139
  %156 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 9
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %421

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 23
  %161 = load i8, i8* %160, align 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %254, label %163

163:                                              ; preds = %159
  %164 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %165 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 10
  store i32 0, i32* %165, align 4
  %166 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 14
  %167 = load %struct.mbuf*, %struct.mbuf** %166, align 8
  %168 = icmp eq %struct.mbuf* %167, null
  br i1 %168, label %187, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 15
  %171 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 24
  br label %172

172:                                              ; preds = %169, %183
  %173 = phi i32 [ 0, %169 ], [ %177, %183 ]
  %174 = phi %struct.mbuf* [ %167, %169 ], [ %184, %183 ]
  %175 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %174, i64 0, i32 0, i32 3
  %176 = load i32, i32* %175, align 8
  %177 = add nsw i32 %176, %173
  %178 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %174, i64 0, i32 0, i32 0
  %179 = load %struct.mbuf*, %struct.mbuf** %178, align 8
  %180 = icmp eq %struct.mbuf* %179, null
  br i1 %180, label %181, label %183

181:                                              ; preds = %172
  store %struct.mbuf* %174, %struct.mbuf** %170, align 8
  store i8 1, i8* %171, align 1
  %182 = load %struct.mbuf*, %struct.mbuf** %178, align 8
  br label %183

183:                                              ; preds = %181, %172
  %184 = phi %struct.mbuf* [ %182, %181 ], [ %179, %172 ]
  %185 = icmp eq %struct.mbuf* %184, null
  br i1 %185, label %186, label %172

186:                                              ; preds = %183
  store i32 %177, i32* %156, align 8
  br label %252

187:                                              ; preds = %163
  %188 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 18, i32 0
  %189 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %188, align 8
  %190 = icmp eq %struct.sctp_queued_to_read* %189, null
  %191 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 18, i32 1
  %192 = bitcast %struct.sctp_queued_to_read*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %189, i64 0, i32 18, i32 1
  %195 = bitcast %struct.sctp_queued_to_read*** %194 to i64*
  %196 = select i1 %190, i64* %76, i64* %195
  store i64 %193, i64* %196, align 8
  %197 = bitcast %struct.sctp_queued_to_read** %188 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %struct.sctp_queued_to_read*** %191 to i64**
  %200 = load i64*, i64** %199, align 8
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 13
  %202 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %203 = icmp eq %struct.sctp_nets* %202, null
  br i1 %203, label %249, label %204

204:                                              ; preds = %187
  %205 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %202, i64 0, i32 17
  %206 = atomicrmw add i32* %205, i32 -1 seq_cst
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %249

208:                                              ; preds = %204
  %209 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %210 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %209, i64 0, i32 3, i32 0
  %211 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %210, align 8
  %212 = icmp eq %struct.sctp_rtentry* %211, null
  br i1 %212, label %228, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %211, i64 0, i32 3
  %215 = load i64, i64* %214, align 8
  %216 = icmp sgt i64 %215, 1
  %217 = add nsw i64 %215, -1
  store i64 %217, i64* %214, align 8
  %218 = icmp sgt i64 %217, 0
  %219 = or i1 %216, %218
  br i1 %219, label %222, label %220

220:                                              ; preds = %213
  %221 = bitcast %struct.sctp_rtentry* %211 to i8*
  tail call void @free(i8* %221) #12
  br label %222

222:                                              ; preds = %213, %220
  %223 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %224 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %223, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %224, align 8
  %225 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %226 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %225, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %226, align 8
  %227 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  br label %228

228:                                              ; preds = %208, %222
  %229 = phi %struct.sctp_nets* [ %209, %208 ], [ %227, %222 ]
  %230 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %229, i64 0, i32 47
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %239, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %229, i64 0, i32 3, i32 2
  %235 = load %struct.sctp_ifa*, %struct.sctp_ifa** %234, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %235) #12
  %236 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %237 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %236, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %237, align 8
  %238 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  br label %239

239:                                              ; preds = %228, %233
  %240 = phi %struct.sctp_nets* [ %229, %228 ], [ %238, %233 ]
  %241 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %240, i64 0, i32 47
  store i8 0, i8* %241, align 1
  %242 = load %struct.sctp_nets*, %struct.sctp_nets** %201, align 8
  %243 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %242, i64 0, i32 37
  %244 = load i16, i16* %243, align 4
  %245 = and i16 %244, -2
  store i16 %245, i16* %243, align 4
  %246 = bitcast %struct.sctp_nets** %201 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @free(i8* %247) #12
  %248 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %249

249:                                              ; preds = %187, %204, %239
  %250 = bitcast %struct.sctp_queued_to_read* %141 to i8*
  tail call void @free(i8* %250) #12
  %251 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  br label %252

252:                                              ; preds = %186, %249
  %253 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %153

254:                                              ; preds = %159
  %255 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 24
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 1
  br i1 %257, label %258, label %342

258:                                              ; preds = %254
  %259 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %260 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 18, i32 0
  %261 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %260, align 8
  %262 = icmp eq %struct.sctp_queued_to_read* %261, null
  %263 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 18, i32 1
  %264 = bitcast %struct.sctp_queued_to_read*** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %261, i64 0, i32 18, i32 1
  %267 = bitcast %struct.sctp_queued_to_read*** %266 to i64*
  %268 = select i1 %262, i64* %76, i64* %267
  store i64 %265, i64* %268, align 8
  %269 = bitcast %struct.sctp_queued_to_read** %260 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %struct.sctp_queued_to_read*** %263 to i64**
  %272 = load i64*, i64** %271, align 8
  store i64 %270, i64* %272, align 8
  %273 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 14
  %274 = load %struct.mbuf*, %struct.mbuf** %273, align 8
  %275 = icmp eq %struct.mbuf* %274, null
  br i1 %275, label %283, label %276

276:                                              ; preds = %258
  %277 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %278 = icmp eq void (i8*, ...)* %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  tail call void (i8*, ...) %277(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.11, i64 0, i64 0)) #12
  %280 = load %struct.mbuf*, %struct.mbuf** %273, align 8
  br label %281

281:                                              ; preds = %276, %279
  %282 = phi %struct.mbuf* [ %274, %276 ], [ %280, %279 ]
  tail call void @m_freem(%struct.mbuf* %282) #12
  store %struct.mbuf* null, %struct.mbuf** %273, align 8
  br label %283

283:                                              ; preds = %258, %281
  %284 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 16
  %285 = load %struct.mbuf*, %struct.mbuf** %284, align 8
  %286 = icmp eq %struct.mbuf* %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %285) #12
  store %struct.mbuf* null, %struct.mbuf** %284, align 8
  br label %289

289:                                              ; preds = %283, %287
  %290 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 13
  %291 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %292 = icmp eq %struct.sctp_nets* %291, null
  br i1 %292, label %338, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %291, i64 0, i32 17
  %295 = atomicrmw add i32* %294, i32 -1 seq_cst
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %338

297:                                              ; preds = %293
  %298 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %299 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %298, i64 0, i32 3, i32 0
  %300 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %299, align 8
  %301 = icmp eq %struct.sctp_rtentry* %300, null
  br i1 %301, label %317, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %300, i64 0, i32 3
  %304 = load i64, i64* %303, align 8
  %305 = icmp sgt i64 %304, 1
  %306 = add nsw i64 %304, -1
  store i64 %306, i64* %303, align 8
  %307 = icmp sgt i64 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %311, label %309

309:                                              ; preds = %302
  %310 = bitcast %struct.sctp_rtentry* %300 to i8*
  tail call void @free(i8* %310) #12
  br label %311

311:                                              ; preds = %302, %309
  %312 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %313 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %312, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %313, align 8
  %314 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %315 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %314, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %315, align 8
  %316 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  br label %317

317:                                              ; preds = %297, %311
  %318 = phi %struct.sctp_nets* [ %298, %297 ], [ %316, %311 ]
  %319 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %318, i64 0, i32 47
  %320 = load i8, i8* %319, align 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %328, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %318, i64 0, i32 3, i32 2
  %324 = load %struct.sctp_ifa*, %struct.sctp_ifa** %323, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %324) #12
  %325 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %326 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %325, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %326, align 8
  %327 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  br label %328

328:                                              ; preds = %317, %322
  %329 = phi %struct.sctp_nets* [ %318, %317 ], [ %327, %322 ]
  %330 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %329, i64 0, i32 47
  store i8 0, i8* %330, align 1
  %331 = load %struct.sctp_nets*, %struct.sctp_nets** %290, align 8
  %332 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %331, i64 0, i32 37
  %333 = load i16, i16* %332, align 4
  %334 = and i16 %333, -2
  store i16 %334, i16* %332, align 4
  %335 = bitcast %struct.sctp_nets** %290 to i8**
  %336 = load i8*, i8** %335, align 8
  tail call void @free(i8* %336) #12
  %337 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %338

338:                                              ; preds = %289, %293, %328
  %339 = bitcast %struct.sctp_queued_to_read* %141 to i8*
  tail call void @free(i8* %339) #12
  %340 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  %341 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %153

342:                                              ; preds = %254
  %343 = load i64, i64* %62, align 8
  %344 = and i64 %343, 8
  %345 = icmp ne i64 %344, 0
  %346 = and i1 %77, %345
  br i1 %346, label %347, label %418

347:                                              ; preds = %342
  %348 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 18, i32 0
  %349 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %348, align 8
  %350 = icmp eq %struct.sctp_queued_to_read* %349, null
  br i1 %350, label %418, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 17
  %353 = load %struct.sctp_tcb*, %struct.sctp_tcb** %352, align 8
  %354 = and i64 %343, 16
  %355 = icmp eq i64 %354, 0
  br label %356

356:                                              ; preds = %351, %414
  %357 = phi %struct.sctp_queued_to_read* [ %349, %351 ], [ %416, %414 ]
  %358 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 17
  %359 = load %struct.sctp_tcb*, %struct.sctp_tcb** %358, align 8
  %360 = icmp eq %struct.sctp_tcb* %359, %353
  br i1 %360, label %387, label %361

361:                                              ; preds = %356
  %362 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 9
  %363 = load i32, i32* %362, align 8
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %387, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 27
  %367 = load i8, i8* %366, align 8
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %369, label %423

369:                                              ; preds = %365
  %370 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 22
  %371 = load i16, i16* %370, align 2
  %372 = and i16 %371, 256
  %373 = icmp eq i16 %372, 0
  br i1 %373, label %374, label %423

374:                                              ; preds = %369
  %375 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 23
  %376 = load i8, i8* %375, align 4
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %387

378:                                              ; preds = %374
  %379 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %359, i64 0, i32 7, i32 27
  %380 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %379, align 8
  %381 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 0
  %382 = load i16, i16* %381, align 8
  %383 = zext i16 %382 to i64
  %384 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %380, i64 %383, i32 4
  %385 = load i8, i8* %384, align 2
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %423, label %387

387:                                              ; preds = %361, %356, %378, %374
  br i1 %355, label %414, label %388

388:                                              ; preds = %387
  %389 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 9
  %390 = load i32, i32* %389, align 8
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %414, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 27
  %394 = load i8, i8* %393, align 8
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %396, label %423

396:                                              ; preds = %392
  %397 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 23
  %398 = load i8, i8* %397, align 4
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %400, label %414

400:                                              ; preds = %396
  %401 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 22
  %402 = load i16, i16* %401, align 2
  %403 = and i16 %402, 256
  %404 = icmp eq i16 %403, 0
  br i1 %404, label %405, label %414

405:                                              ; preds = %400
  %406 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %359, i64 0, i32 7, i32 27
  %407 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %406, align 8
  %408 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 0
  %409 = load i16, i16* %408, align 8
  %410 = zext i16 %409 to i64
  %411 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %407, i64 %410, i32 4
  %412 = load i8, i8* %411, align 2
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %423, label %414

414:                                              ; preds = %388, %387, %396, %400, %405
  %415 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %357, i64 0, i32 18, i32 0
  %416 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %415, align 8
  %417 = icmp eq %struct.sctp_queued_to_read* %416, null
  br i1 %417, label %418, label %356

418:                                              ; preds = %414, %347, %342
  %419 = load i32, i32* %70, align 4
  %420 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 10
  store i32 %419, i32* %420, align 4
  br label %153

421:                                              ; preds = %155
  %422 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %141, i64 0, i32 10
  store i32 0, i32* %422, align 4
  br label %423

423:                                              ; preds = %369, %365, %378, %392, %405, %421
  %424 = phi %struct.sctp_queued_to_read* [ %141, %421 ], [ %357, %405 ], [ %357, %392 ], [ %357, %378 ], [ %357, %365 ], [ %357, %369 ]
  %425 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %426 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 27
  %427 = load i8, i8* %426, align 8
  %428 = add i8 %427, 1
  store i8 %428, i8* %426, align 8
  %429 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 17
  %430 = load %struct.sctp_tcb*, %struct.sctp_tcb** %429, align 8
  %431 = icmp eq %struct.sctp_tcb* %430, null
  br i1 %431, label %462, label %432

432:                                              ; preds = %423
  %433 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 23
  %434 = load i8, i8* %433, align 4
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %436, label %446

436:                                              ; preds = %432
  %437 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %430, i64 0, i32 7, i32 0
  %438 = load i32, i32* %437, align 8
  %439 = and i32 %438, 512
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %462

441:                                              ; preds = %436
  %442 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %430, i64 0, i32 7, i32 120
  %443 = atomicrmw add i32* %442, i32 1 seq_cst
  %444 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %430, i64 0, i32 8
  %445 = load i32, i32* %444, align 8
  store i32 %445, i32* %9, align 4
  store i32 0, i32* %444, align 8
  br label %446

446:                                              ; preds = %441, %432
  %447 = phi i32 [ 0, %432 ], [ 1, %441 ]
  %448 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 22
  %449 = load i16, i16* %448, align 2
  %450 = and i16 %449, 256
  %451 = icmp eq i16 %450, 0
  br i1 %451, label %452, label %462

452:                                              ; preds = %446
  %453 = load i8, i8* %433, align 4
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %455, label %462

455:                                              ; preds = %452
  %456 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %430, i64 0, i32 7, i32 27
  %457 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %456, align 8
  %458 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 0
  %459 = load i16, i16* %458, align 8
  %460 = zext i16 %459 to i64
  %461 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %457, i64 %460, i32 4
  store i8 1, i8* %461, align 2
  br label %462

462:                                              ; preds = %423, %436, %455, %452, %446
  %463 = phi i1 [ true, %455 ], [ true, %452 ], [ true, %446 ], [ false, %436 ], [ false, %423 ]
  %464 = phi i32 [ %447, %455 ], [ %447, %452 ], [ %447, %446 ], [ 0, %436 ], [ 0, %423 ]
  %465 = phi %struct.sctp_tcb* [ %430, %455 ], [ %430, %452 ], [ %430, %446 ], [ null, %436 ], [ null, %423 ]
  %466 = icmp ne %struct.sctp_sndrcvinfo* %6, null
  %467 = and i1 %466, %77
  br i1 %467, label %468, label %564

468:                                              ; preds = %462
  %469 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 0
  %470 = load i16, i16* %469, align 8
  %471 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 0
  store i16 %470, i16* %471, align 4
  %472 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 8
  %473 = load i32, i32* %472, align 4
  %474 = trunc i32 %473 to i16
  %475 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 1
  store i16 %474, i16* %475, align 2
  %476 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 1
  %477 = load i16, i16* %476, align 2
  %478 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 2
  store i16 %477, i16* %478, align 4
  %479 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 2
  %480 = load i32, i32* %479, align 4
  %481 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 3
  store i32 %480, i32* %481, align 4
  %482 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 3
  %483 = load i32, i32* %482, align 8
  %484 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 4
  store i32 %483, i32* %484, align 4
  %485 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 4
  %486 = load i32, i32* %485, align 4
  %487 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 5
  store i32 %486, i32* %487, align 4
  %488 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 5
  %489 = load i32, i32* %488, align 8
  %490 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 6
  store i32 %489, i32* %490, align 4
  %491 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 6
  %492 = load i32, i32* %491, align 4
  %493 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 7
  store i32 %492, i32* %493, align 4
  %494 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 7
  %495 = load i32, i32* %494, align 8
  %496 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 8
  store i32 %495, i32* %496, align 4
  %497 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 18, i32 0
  %498 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %497, align 8
  %499 = load i64, i64* %62, align 8
  %500 = and i64 %499, 268435458
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %549, label %502

502:                                              ; preds = %468
  %503 = icmp eq %struct.sctp_queued_to_read* %498, null
  br i1 %503, label %546, label %504

504:                                              ; preds = %502
  %505 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 9
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %546, label %508

508:                                              ; preds = %504
  %509 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 9
  store i16 1, i16* %509, align 4
  %510 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 1
  %511 = load i16, i16* %510, align 2
  %512 = and i16 %511, 1024
  %513 = icmp eq i16 %512, 0
  %514 = select i1 %513, i16 1, i16 5
  store i16 %514, i16* %509, align 4
  %515 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 22
  %516 = load i16, i16* %515, align 2
  %517 = and i16 %516, 256
  %518 = icmp eq i16 %517, 0
  br i1 %518, label %521, label %519

519:                                              ; preds = %508
  %520 = or i16 %514, 8
  store i16 %520, i16* %509, align 4
  br label %521

521:                                              ; preds = %508, %519
  %522 = phi i16 [ %514, %508 ], [ %520, %519 ]
  %523 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 7
  %524 = load i32, i32* %523, align 8
  %525 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 11
  %526 = bitcast [92 x i8]* %525 to i32*
  store i32 %524, i32* %526, align 4
  %527 = load i32, i32* %505, align 8
  %528 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 11, i64 4
  %529 = bitcast i8* %528 to i32*
  store i32 %527, i32* %529, align 4
  %530 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 2
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 11, i64 8
  %533 = bitcast i8* %532 to i32*
  store i32 %531, i32* %533, align 4
  %534 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 0
  %535 = load i16, i16* %534, align 8
  %536 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 10
  store i16 %535, i16* %536, align 2
  %537 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 15
  %538 = load %struct.mbuf*, %struct.mbuf** %537, align 8
  %539 = icmp eq %struct.mbuf* %538, null
  br i1 %539, label %549, label %540

540:                                              ; preds = %521
  %541 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %498, i64 0, i32 24
  %542 = load i8, i8* %541, align 1
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %549, label %544

544:                                              ; preds = %540
  %545 = or i16 %522, 2
  store i16 %545, i16* %509, align 4
  br label %549

546:                                              ; preds = %504, %502
  %547 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 9
  %548 = bitcast i16* %547 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %548, i8 0, i64 16, i1 false)
  br label %549

549:                                              ; preds = %546, %544, %521, %540, %468
  %550 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 23
  %551 = load i8, i8* %550, align 4
  %552 = icmp eq i8 %551, 0
  %553 = and i1 %463, %552
  br i1 %553, label %554, label %557

554:                                              ; preds = %549
  %555 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 59
  %556 = load i32, i32* %555, align 4
  store i32 %556, i32* %493, align 4
  br label %557

557:                                              ; preds = %554, %549
  %558 = and i16 %477, 255
  store i16 %558, i16* %478, align 4
  %559 = load i16, i16* %476, align 2
  %560 = and i16 %559, 1024
  %561 = icmp eq i16 %560, 0
  br i1 %561, label %564, label %562

562:                                              ; preds = %557
  %563 = or i16 %558, 1024
  store i16 %563, i16* %478, align 4
  br label %564

564:                                              ; preds = %557, %562, %462
  %565 = icmp sgt i32 %4, 0
  %566 = icmp ne %struct.sockaddr* %3, null
  %567 = and i1 %566, %565
  br i1 %567, label %568, label %587

568:                                              ; preds = %564
  %569 = bitcast %union.sctp_sockstore* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %569)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %569, i8 -86, i64 32, i1 false)
  %570 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 13
  %571 = load %struct.sctp_nets*, %struct.sctp_nets** %570, align 8
  %572 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %571, i64 0, i32 3, i32 1
  %573 = getelementptr inbounds %union.sctp_sockstore, %union.sctp_sockstore* %572, i64 0, i32 0, i32 0
  %574 = load i16, i16* %573, align 8
  %575 = icmp eq i16 %574, 123
  br i1 %575, label %576, label %581

576:                                              ; preds = %568
  %577 = bitcast %union.sctp_sockstore* %572 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %569, i8* align 8 %577, i64 16, i1 false)
  %578 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 21
  %579 = load i16, i16* %578, align 8
  %580 = getelementptr inbounds %union.sctp_sockstore, %union.sctp_sockstore* %10, i64 0, i32 0, i32 1
  store i16 %579, i16* %580, align 2
  br label %581

581:                                              ; preds = %568, %576
  %582 = phi i64 [ 16, %576 ], [ 0, %568 ]
  %583 = bitcast %struct.sockaddr* %3 to i8*
  %584 = sext i32 %4 to i64
  %585 = icmp ult i64 %582, %584
  %586 = select i1 %585, i64 %582, i64 %584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %583, i8* nonnull align 8 %569, i64 %586, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %569)
  br label %587

587:                                              ; preds = %564, %581
  %588 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  %589 = icmp eq i32 %140, 0
  br i1 %589, label %592, label %590

590:                                              ; preds = %587
  %591 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  br label %592

592:                                              ; preds = %587, %590
  %593 = icmp eq %struct.mbuf** %2, null
  br i1 %593, label %594, label %1049

594:                                              ; preds = %1047, %1033, %592
  %595 = phi i32 [ 0, %592 ], [ %904, %1033 ], [ %904, %1047 ]
  %596 = phi i32 [ 0, %592 ], [ %905, %1033 ], [ %905, %1047 ]
  %597 = phi i64 [ 0, %592 ], [ %906, %1033 ], [ %906, %1047 ]
  %598 = phi i32 [ 0, %592 ], [ %907, %1033 ], [ %907, %1047 ]
  %599 = phi i32 [ 0, %592 ], [ %960, %1033 ], [ %960, %1047 ]
  %600 = phi i32 [ %87, %592 ], [ %950, %1033 ], [ %950, %1047 ]
  %601 = phi %struct.sctp_queued_to_read* [ %424, %592 ], [ %910, %1033 ], [ %910, %1047 ]
  %602 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 14
  %603 = load %struct.mbuf*, %struct.mbuf** %602, align 8
  %604 = icmp eq %struct.mbuf* %603, null
  br i1 %604, label %778, label %605

605:                                              ; preds = %594
  %606 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 23
  %607 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 0
  %608 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 22
  %609 = icmp eq i32 %48, 0
  %610 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 79
  %611 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 9
  %612 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 24
  %613 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 17
  %614 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 0
  %615 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 10
  %616 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 81
  %617 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 15
  %618 = and i1 %609, %463
  br label %619

619:                                              ; preds = %605, %776
  %620 = phi %struct.mbuf* [ %603, %605 ], [ %762, %776 ]
  %621 = phi i32 [ %599, %605 ], [ 1, %776 ]
  %622 = phi i32 [ %598, %605 ], [ %656, %776 ]
  %623 = phi i64 [ %597, %605 ], [ %761, %776 ]
  %624 = phi i32 [ %596, %605 ], [ %760, %776 ]
  %625 = load i64, i64* %47, align 8
  %626 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %620, i64 0, i32 0, i32 3
  %627 = load i32, i32* %626, align 8
  %628 = sext i32 %627 to i64
  %629 = icmp sgt i64 %625, %628
  %630 = select i1 %629, i64 %628, i64 %625
  %631 = icmp eq i32 %621, 0
  br i1 %631, label %634, label %632

632:                                              ; preds = %619
  %633 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %634

634:                                              ; preds = %619, %632
  %635 = icmp sgt i64 %630, 0
  br i1 %635, label %636, label %641

636:                                              ; preds = %634
  %637 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %620, i64 0, i32 0, i32 2
  %638 = load i8*, i8** %637, align 8
  %639 = trunc i64 %630 to i32
  %640 = tail call i32 @uiomove(i8* %638, i32 %639, %struct.uio* nonnull %1) #12
  br label %641

641:                                              ; preds = %636, %634
  %642 = phi i32 [ %640, %636 ], [ 0, %634 ]
  %643 = load i32, i32* %68, align 8
  %644 = and i32 %643, 268435456
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %1152

646:                                              ; preds = %641
  %647 = load i8, i8* %606, align 4
  %648 = icmp eq i8 %647, 0
  %649 = and i1 %463, %648
  br i1 %649, label %650, label %655

650:                                              ; preds = %646
  %651 = load i32, i32* %607, align 8
  %652 = and i32 %651, 512
  %653 = icmp eq i32 %652, 0
  %654 = select i1 %653, i32 %622, i32 1
  br label %655

655:                                              ; preds = %650, %646
  %656 = phi i32 [ %622, %646 ], [ %654, %650 ]
  %657 = icmp eq i32 %642, 0
  br i1 %657, label %658, label %1152

658:                                              ; preds = %655
  %659 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %660 = load i32, i32* %626, align 8
  %661 = sext i32 %660 to i64
  %662 = icmp eq i64 %630, %661
  br i1 %662, label %663, label %733

663:                                              ; preds = %658
  %664 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %620, i64 0, i32 0, i32 0
  %665 = load %struct.mbuf*, %struct.mbuf** %664, align 8
  %666 = icmp eq %struct.mbuf* %665, null
  br i1 %666, label %667, label %687

667:                                              ; preds = %663
  %668 = load i8, i8* %612, align 1
  %669 = icmp eq i8 %668, 0
  br i1 %669, label %687, label %670

670:                                              ; preds = %667
  %671 = or i32 %624, 128
  %672 = load i8, i8* %606, align 4
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %674, label %687

674:                                              ; preds = %670
  %675 = load %struct.sctp_tcb*, %struct.sctp_tcb** %613, align 8
  %676 = icmp eq %struct.sctp_tcb* %675, null
  br i1 %676, label %687, label %677

677:                                              ; preds = %674
  %678 = load i16, i16* %608, align 2
  %679 = and i16 %678, 256
  %680 = icmp eq i16 %679, 0
  br i1 %680, label %681, label %687

681:                                              ; preds = %677
  %682 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %675, i64 0, i32 7, i32 27
  %683 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %682, align 8
  %684 = load i16, i16* %614, align 8
  %685 = zext i16 %684 to i64
  %686 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %683, i64 %685, i32 4
  store i8 0, i8* %686, align 2
  br label %687

687:                                              ; preds = %674, %667, %670, %677, %681, %663
  %688 = phi i32 [ %671, %681 ], [ %671, %677 ], [ %671, %674 ], [ %671, %670 ], [ %624, %667 ], [ %624, %663 ]
  %689 = load i16, i16* %608, align 2
  %690 = shl i16 %689, 5
  %691 = and i16 %690, 8192
  %692 = zext i16 %691 to i32
  %693 = or i32 %688, %692
  br i1 %49, label %694, label %697

694:                                              ; preds = %687
  %695 = load %struct.mbuf*, %struct.mbuf** %664, align 8
  %696 = add nsw i64 %630, %623
  br label %759

697:                                              ; preds = %687
  %698 = load i32, i32* %626, align 8
  %699 = sub nsw i32 0, %698
  %700 = atomicrmw add i32* %70, i32 %699 seq_cst
  %701 = load i32, i32* %626, align 8
  %702 = icmp slt i32 %700, %701
  br i1 %702, label %703, label %704

703:                                              ; preds = %697
  store i32 0, i32* %70, align 4
  br label %704

704:                                              ; preds = %703, %697
  %705 = atomicrmw add i32* %615, i32 -256 seq_cst
  %706 = icmp slt i32 %705, 256
  br i1 %706, label %707, label %708

707:                                              ; preds = %704
  store i32 0, i32* %615, align 4
  br label %708

708:                                              ; preds = %707, %704
  %709 = load i8, i8* %606, align 4
  %710 = icmp eq i8 %709, 0
  %711 = and i1 %463, %710
  br i1 %711, label %712, label %723

712:                                              ; preds = %708
  %713 = load i32, i32* %626, align 8
  %714 = sub nsw i32 0, %713
  %715 = atomicrmw add i32* %610, i32 %714 seq_cst
  %716 = load i32, i32* %626, align 8
  %717 = icmp slt i32 %715, %716
  br i1 %717, label %718, label %719

718:                                              ; preds = %712
  store i32 0, i32* %610, align 8
  br label %719

719:                                              ; preds = %718, %712
  %720 = atomicrmw add i32* %616, i32 -256 seq_cst
  %721 = icmp slt i32 %720, 256
  br i1 %721, label %722, label %723

722:                                              ; preds = %719
  store i32 0, i32* %616, align 8
  br label %723

723:                                              ; preds = %708, %722, %719
  %724 = add nsw i64 %630, %623
  %725 = trunc i64 %630 to i32
  %726 = load i32, i32* %9, align 4
  %727 = add i32 %725, 256
  %728 = add i32 %727, %726
  store i32 %728, i32* %9, align 4
  %729 = atomicrmw sub i32* %611, i32 %725 seq_cst
  %730 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %620) #12
  store %struct.mbuf* %730, %struct.mbuf** %602, align 8
  %731 = icmp eq %struct.mbuf* %730, null
  br i1 %731, label %732, label %759

732:                                              ; preds = %723
  store %struct.mbuf* null, %struct.mbuf** %617, align 8
  br label %759

733:                                              ; preds = %658
  %734 = load i16, i16* %608, align 2
  %735 = shl i16 %734, 5
  %736 = and i16 %735, 8192
  %737 = zext i16 %736 to i32
  %738 = or i32 %624, %737
  br i1 %609, label %739, label %757

739:                                              ; preds = %733
  %740 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %620, i64 0, i32 0, i32 2
  %741 = load i8*, i8** %740, align 8
  %742 = getelementptr inbounds i8, i8* %741, i64 %630
  store i8* %742, i8** %740, align 8
  %743 = trunc i64 %630 to i32
  %744 = sub nsw i32 %660, %743
  store i32 %744, i32* %626, align 8
  %745 = atomicrmw sub i32* %70, i32 %743 seq_cst
  %746 = load i8, i8* %606, align 4
  %747 = icmp eq i8 %746, 0
  %748 = and i1 %463, %747
  br i1 %748, label %749, label %751

749:                                              ; preds = %739
  %750 = atomicrmw sub i32* %610, i32 %743 seq_cst
  br label %751

751:                                              ; preds = %749, %739
  %752 = add nsw i64 %630, %623
  %753 = load i32, i32* %9, align 4
  %754 = add i32 %743, 256
  %755 = add i32 %754, %753
  store i32 %755, i32* %9, align 4
  %756 = atomicrmw sub i32* %611, i32 %743 seq_cst
  br label %759

757:                                              ; preds = %733
  %758 = add nsw i64 %630, %623
  br label %759

759:                                              ; preds = %751, %757, %694, %732, %723
  %760 = phi i32 [ %693, %694 ], [ %693, %732 ], [ %693, %723 ], [ %738, %751 ], [ %738, %757 ]
  %761 = phi i64 [ %696, %694 ], [ %724, %732 ], [ %724, %723 ], [ %752, %751 ], [ %758, %757 ]
  %762 = phi %struct.mbuf* [ %695, %694 ], [ null, %732 ], [ %730, %723 ], [ %620, %751 ], [ %620, %757 ]
  %763 = trunc i32 %760 to i8
  %764 = icmp slt i8 %763, 0
  br i1 %764, label %778, label %765

765:                                              ; preds = %759
  %766 = load i64, i64* %47, align 8
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %903, label %768

768:                                              ; preds = %765
  br i1 %618, label %769, label %776

769:                                              ; preds = %768
  %770 = load i8, i8* %606, align 4
  %771 = icmp ne i8 %770, 0
  %772 = load i32, i32* %9, align 4
  %773 = icmp ult i32 %772, %61
  %774 = or i1 %771, %773
  br i1 %774, label %776, label %775

775:                                              ; preds = %769
  call fastcc void @sctp_user_rcvd(%struct.sctp_tcb* nonnull %465, i32* nonnull %9, i32 1, i32 %61)
  br label %776

776:                                              ; preds = %769, %775, %768
  %777 = icmp eq %struct.mbuf* %762, null
  br i1 %777, label %903, label %619

778:                                              ; preds = %759, %594
  %779 = phi i32 [ %596, %594 ], [ %760, %759 ]
  %780 = phi i64 [ %597, %594 ], [ %761, %759 ]
  %781 = phi i32 [ %598, %594 ], [ %656, %759 ]
  %782 = phi i32 [ %599, %594 ], [ 1, %759 ]
  %783 = trunc i32 %779 to i8
  %784 = icmp slt i8 %783, 0
  %785 = icmp eq i32 %48, 0
  %786 = and i1 %785, %784
  br i1 %786, label %787, label %903

787:                                              ; preds = %778
  %788 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 9
  %789 = load i32, i32* %788, align 8
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %898

791:                                              ; preds = %787
  %792 = load %struct.mbuf*, %struct.mbuf** %602, align 8
  %793 = icmp eq %struct.mbuf* %792, null
  br i1 %793, label %801, label %794

794:                                              ; preds = %791
  %795 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %796 = icmp eq void (i8*, ...)* %795, null
  br i1 %796, label %799, label %797

797:                                              ; preds = %794
  tail call void (i8*, ...) %795(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.13, i64 0, i64 0)) #12
  %798 = load %struct.mbuf*, %struct.mbuf** %602, align 8
  br label %799

799:                                              ; preds = %794, %797
  %800 = phi %struct.mbuf* [ %792, %794 ], [ %798, %797 ]
  tail call void @m_freem(%struct.mbuf* %800) #12
  store %struct.mbuf* null, %struct.mbuf** %602, align 8
  br label %801

801:                                              ; preds = %1007, %1015, %1010, %1009, %799, %791, %1140, %1044
  %802 = phi i32 [ %904, %1044 ], [ 0, %1140 ], [ %595, %791 ], [ %595, %799 ], [ %904, %1009 ], [ %904, %1010 ], [ %904, %1015 ], [ %904, %1007 ]
  %803 = phi i32 [ %1045, %1044 ], [ %1089, %1140 ], [ %779, %791 ], [ %779, %799 ], [ %985, %1009 ], [ %985, %1010 ], [ %985, %1015 ], [ %1008, %1007 ]
  %804 = phi i64 [ %906, %1044 ], [ 0, %1140 ], [ %780, %791 ], [ %780, %799 ], [ %906, %1009 ], [ %906, %1010 ], [ %906, %1015 ], [ %906, %1007 ]
  %805 = phi i32 [ %960, %1044 ], [ %1082, %1140 ], [ %782, %791 ], [ %782, %799 ], [ %960, %1009 ], [ %960, %1010 ], [ %960, %1015 ], [ %960, %1007 ]
  %806 = phi i32 [ %950, %1044 ], [ %87, %1140 ], [ %600, %791 ], [ %600, %799 ], [ %950, %1009 ], [ %950, %1010 ], [ %950, %1015 ], [ %950, %1007 ]
  %807 = phi %struct.sctp_queued_to_read* [ %910, %1044 ], [ %424, %1140 ], [ %601, %791 ], [ %601, %799 ], [ %910, %1009 ], [ %910, %1010 ], [ %910, %1015 ], [ %910, %1007 ]
  %808 = icmp eq i32 %805, 0
  br i1 %808, label %809, label %811

809:                                              ; preds = %801
  %810 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  br label %811

811:                                              ; preds = %801, %809
  %812 = phi i32 [ 1, %809 ], [ %805, %801 ]
  %813 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 18, i32 0
  %814 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %813, align 8
  %815 = icmp eq %struct.sctp_queued_to_read* %814, null
  %816 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 18, i32 1
  %817 = bitcast %struct.sctp_queued_to_read*** %816 to i64*
  %818 = load i64, i64* %817, align 8
  %819 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %814, i64 0, i32 18, i32 1
  %820 = bitcast %struct.sctp_queued_to_read*** %819 to i64*
  %821 = select i1 %815, i64* %76, i64* %820
  store i64 %818, i64* %821, align 8
  %822 = bitcast %struct.sctp_queued_to_read** %813 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = bitcast %struct.sctp_queued_to_read*** %816 to i64**
  %825 = load i64*, i64** %824, align 8
  store i64 %823, i64* %825, align 8
  %826 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 10
  %827 = load i32, i32* %826, align 4
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %830, label %829

829:                                              ; preds = %811
  store i32 0, i32* %826, align 4
  br label %830

830:                                              ; preds = %811, %829
  %831 = phi i32 [ 1, %829 ], [ %802, %811 ]
  %832 = phi i32 [ 0, %829 ], [ %806, %811 ]
  %833 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 16
  %834 = load %struct.mbuf*, %struct.mbuf** %833, align 8
  %835 = icmp eq %struct.mbuf* %834, null
  br i1 %835, label %838, label %836

836:                                              ; preds = %830
  %837 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %834) #12
  store %struct.mbuf* null, %struct.mbuf** %833, align 8
  br label %838

838:                                              ; preds = %830, %836
  %839 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 23
  %840 = load i8, i8* %839, align 4
  %841 = zext i8 %840 to i32
  %842 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %807, i64 0, i32 13
  %843 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %844 = icmp eq %struct.sctp_nets* %843, null
  br i1 %844, label %890, label %845

845:                                              ; preds = %838
  %846 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %843, i64 0, i32 17
  %847 = atomicrmw add i32* %846, i32 -1 seq_cst
  %848 = icmp eq i32 %847, 1
  br i1 %848, label %849, label %890

849:                                              ; preds = %845
  %850 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %851 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %850, i64 0, i32 3, i32 0
  %852 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %851, align 8
  %853 = icmp eq %struct.sctp_rtentry* %852, null
  br i1 %853, label %869, label %854

854:                                              ; preds = %849
  %855 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %852, i64 0, i32 3
  %856 = load i64, i64* %855, align 8
  %857 = icmp sgt i64 %856, 1
  %858 = add nsw i64 %856, -1
  store i64 %858, i64* %855, align 8
  %859 = icmp sgt i64 %858, 0
  %860 = or i1 %857, %859
  br i1 %860, label %863, label %861

861:                                              ; preds = %854
  %862 = bitcast %struct.sctp_rtentry* %852 to i8*
  tail call void @free(i8* %862) #12
  br label %863

863:                                              ; preds = %854, %861
  %864 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %865 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %864, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %865, align 8
  %866 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %867 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %866, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %867, align 8
  %868 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  br label %869

869:                                              ; preds = %849, %863
  %870 = phi %struct.sctp_nets* [ %850, %849 ], [ %868, %863 ]
  %871 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %870, i64 0, i32 47
  %872 = load i8, i8* %871, align 1
  %873 = icmp eq i8 %872, 0
  br i1 %873, label %880, label %874

874:                                              ; preds = %869
  %875 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %870, i64 0, i32 3, i32 2
  %876 = load %struct.sctp_ifa*, %struct.sctp_ifa** %875, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %876) #12
  %877 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %878 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %877, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %878, align 8
  %879 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  br label %880

880:                                              ; preds = %869, %874
  %881 = phi %struct.sctp_nets* [ %870, %869 ], [ %879, %874 ]
  %882 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %881, i64 0, i32 47
  store i8 0, i8* %882, align 1
  %883 = load %struct.sctp_nets*, %struct.sctp_nets** %842, align 8
  %884 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %883, i64 0, i32 37
  %885 = load i16, i16* %884, align 4
  %886 = and i16 %885, -2
  store i16 %886, i16* %884, align 4
  %887 = bitcast %struct.sctp_nets** %842 to i8**
  %888 = load i8*, i8** %887, align 8
  tail call void @free(i8* %888) #12
  %889 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %890

890:                                              ; preds = %838, %845, %880
  %891 = bitcast %struct.sctp_queued_to_read* %807 to i8*
  tail call void @free(i8* %891) #12
  %892 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 32), i32 1 seq_cst
  %893 = load i32, i32* %9, align 4
  %894 = icmp uge i32 %893, %61
  %895 = icmp eq i8 %840, 0
  %896 = and i1 %895, %894
  br i1 %896, label %897, label %903

897:                                              ; preds = %890
  call fastcc void @sctp_user_rcvd(%struct.sctp_tcb* %465, i32* nonnull %9, i32 %812, i32 %61)
  br label %903

898:                                              ; preds = %787
  %899 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %601, i64 0, i32 23
  %900 = load i8, i8* %899, align 4
  %901 = zext i8 %900 to i32
  %902 = and i32 %779, -129
  br label %903

903:                                              ; preds = %765, %776, %898, %897, %890, %778
  %904 = phi i32 [ %831, %897 ], [ %831, %890 ], [ %595, %898 ], [ %595, %778 ], [ %595, %776 ], [ %595, %765 ]
  %905 = phi i32 [ %803, %897 ], [ %803, %890 ], [ %902, %898 ], [ %779, %778 ], [ %760, %776 ], [ %760, %765 ]
  %906 = phi i64 [ %804, %897 ], [ %804, %890 ], [ %780, %898 ], [ %780, %778 ], [ %761, %776 ], [ %761, %765 ]
  %907 = phi i32 [ 0, %897 ], [ %841, %890 ], [ %901, %898 ], [ %781, %778 ], [ %656, %776 ], [ %656, %765 ]
  %908 = phi i32 [ %812, %897 ], [ %812, %890 ], [ %782, %898 ], [ %782, %778 ], [ 1, %776 ], [ 1, %765 ]
  %909 = phi i32 [ %832, %897 ], [ %832, %890 ], [ %600, %898 ], [ %600, %778 ], [ %600, %776 ], [ %600, %765 ]
  %910 = phi %struct.sctp_queued_to_read* [ null, %897 ], [ null, %890 ], [ %601, %898 ], [ %601, %778 ], [ %601, %776 ], [ %601, %765 ]
  %911 = trunc i32 %905 to i8
  %912 = icmp slt i8 %911, 0
  br i1 %912, label %1143, label %913

913:                                              ; preds = %903
  %914 = load i64, i64* %47, align 8
  %915 = icmp eq i64 %914, 0
  br i1 %915, label %1143, label %916

916:                                              ; preds = %913
  br i1 %65, label %925, label %917

917:                                              ; preds = %916
  %918 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 13
  %919 = load i32, i32* %918, align 8
  %920 = icmp sgt i32 %919, 1
  %921 = select i1 %920, i32 %919, i32 1
  %922 = zext i32 %921 to i64
  %923 = icmp sge i64 %906, %922
  %924 = or i1 %72, %923
  br i1 %924, label %1143, label %926

925:                                              ; preds = %916
  br i1 %72, label %1143, label %926

926:                                              ; preds = %917, %925
  %927 = icmp eq i32 %48, 0
  %928 = and i1 %927, %463
  %929 = xor i1 %928, true
  %930 = load i32, i32* %9, align 4
  %931 = icmp ult i32 %930, %61
  %932 = or i1 %931, %929
  br i1 %932, label %940, label %933

933:                                              ; preds = %926
  %934 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 23
  %935 = load i8, i8* %934, align 4
  %936 = icmp eq i8 %935, 0
  %937 = icmp eq i32 %907, 0
  %938 = and i1 %937, %936
  br i1 %938, label %939, label %940

939:                                              ; preds = %933
  call fastcc void @sctp_user_rcvd(%struct.sctp_tcb* nonnull %465, i32* nonnull %9, i32 %908, i32 %61)
  br label %940

940:                                              ; preds = %926, %939, %933
  %941 = load i16, i16* %69, align 2
  %942 = and i16 %941, 32
  %943 = icmp eq i16 %942, 0
  br i1 %943, label %944, label %1143

944:                                              ; preds = %940
  %945 = icmp eq i64 %906, 0
  %946 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 9
  %947 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 10
  %948 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 24
  br label %949

949:                                              ; preds = %944, %1028
  %950 = phi i32 [ %909, %944 ], [ %1029, %1028 ]
  %951 = phi i32 [ %908, %944 ], [ %960, %1028 ]
  %952 = load i32, i32* %68, align 8
  %953 = and i32 %952, 268435456
  %954 = icmp eq i32 %953, 0
  br i1 %954, label %955, label %1143

955:                                              ; preds = %949
  %956 = icmp eq i32 %951, 1
  br i1 %956, label %957, label %959

957:                                              ; preds = %955
  %958 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %959

959:                                              ; preds = %955, %957
  %960 = phi i32 [ 0, %957 ], [ %951, %955 ]
  %961 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %66) #12
  br i1 %945, label %969, label %962

962:                                              ; preds = %959
  %963 = load i32, i32* %946, align 8
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %965, label %969

965:                                              ; preds = %962
  %966 = load i64, i64* %62, align 8
  %967 = and i64 %966, 8
  %968 = icmp eq i64 %967, 0
  br i1 %968, label %969, label %1160

969:                                              ; preds = %965, %959, %962
  %970 = load i32, i32* %70, align 4
  %971 = load i32, i32* %947, align 4
  %972 = icmp ugt i32 %970, %971
  br i1 %972, label %977, label %973

973:                                              ; preds = %969
  %974 = tail call i32 @sbwait(%struct.sockbuf* %56) #12
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %1160

976:                                              ; preds = %973
  store i32 0, i32* %947, align 4
  br label %977

977:                                              ; preds = %976, %969
  %978 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  %979 = load i32, i32* %946, align 8
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %981, label %1033

981:                                              ; preds = %977
  %982 = load i8, i8* %948, align 1
  %983 = icmp eq i8 %982, 1
  br i1 %983, label %984, label %1024

984:                                              ; preds = %981
  %985 = or i32 %905, 128
  %986 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 25
  %987 = load i8, i8* %986, align 2
  %988 = icmp eq i8 %987, 0
  %989 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 23
  %990 = load i8, i8* %989, align 4
  %991 = icmp eq i8 %990, 0
  br i1 %988, label %1009, label %992

992:                                              ; preds = %984
  br i1 %991, label %993, label %1007

993:                                              ; preds = %992
  %994 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 22
  %995 = load i16, i16* %994, align 2
  %996 = and i16 %995, 256
  %997 = icmp eq i16 %996, 0
  br i1 %997, label %998, label %1007

998:                                              ; preds = %993
  %999 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 17
  %1000 = load %struct.sctp_tcb*, %struct.sctp_tcb** %999, align 8
  %1001 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1000, i64 0, i32 7, i32 27
  %1002 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %1001, align 8
  %1003 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 0
  %1004 = load i16, i16* %1003, align 8
  %1005 = zext i16 %1004 to i64
  %1006 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %1002, i64 %1005, i32 4
  store i8 0, i8* %1006, align 2
  br label %1007

1007:                                             ; preds = %998, %993, %992
  %1008 = or i32 %905, 160
  br label %801

1009:                                             ; preds = %984
  br i1 %991, label %1010, label %801

1010:                                             ; preds = %1009
  %1011 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 22
  %1012 = load i16, i16* %1011, align 2
  %1013 = and i16 %1012, 256
  %1014 = icmp eq i16 %1013, 0
  br i1 %1014, label %1015, label %801

1015:                                             ; preds = %1010
  %1016 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 17
  %1017 = load %struct.sctp_tcb*, %struct.sctp_tcb** %1016, align 8
  %1018 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1017, i64 0, i32 7, i32 27
  %1019 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %1018, align 8
  %1020 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 0
  %1021 = load i16, i16* %1020, align 8
  %1022 = zext i16 %1021 to i64
  %1023 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %1019, i64 %1022, i32 4
  store i8 0, i8* %1023, align 2
  br label %801

1024:                                             ; preds = %981
  %1025 = load i32, i32* %70, align 4
  %1026 = icmp ugt i32 %1025, %950
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1024
  store i32 %1025, i32* %947, align 4
  br label %1028

1028:                                             ; preds = %1027, %1024
  %1029 = phi i32 [ 0, %1027 ], [ %950, %1024 ]
  %1030 = load i16, i16* %69, align 2
  %1031 = and i16 %1030, 32
  %1032 = icmp eq i16 %1031, 0
  br i1 %1032, label %949, label %1152

1033:                                             ; preds = %977
  %1034 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %910, i64 0, i32 14
  %1035 = load %struct.mbuf*, %struct.mbuf** %1034, align 8
  %1036 = icmp eq %struct.mbuf* %1035, null
  br i1 %1036, label %1037, label %594

1037:                                             ; preds = %1033
  %1038 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %1039 = load i32, i32* %946, align 8
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1047, label %1041

1041:                                             ; preds = %1037
  %1042 = load %struct.mbuf*, %struct.mbuf** %1034, align 8
  %1043 = icmp eq %struct.mbuf* %1042, null
  br i1 %1043, label %1044, label %1047

1044:                                             ; preds = %1041
  %1045 = or i32 %905, 160
  store i32 0, i32* %946, align 8
  %1046 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %801

1047:                                             ; preds = %1037, %1041
  %1048 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %594

1049:                                             ; preds = %592
  %1050 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 24
  %1051 = load i8, i8* %1050, align 1
  %1052 = icmp eq i8 %1051, 0
  br i1 %1052, label %1057, label %1053

1053:                                             ; preds = %1049
  %1054 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 18, i32 0
  %1055 = load %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** %1054, align 8
  %1056 = icmp eq %struct.sctp_queued_to_read* %1055, null
  br i1 %1056, label %1057, label %1061

1057:                                             ; preds = %1053, %1049
  %1058 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #12
  %1059 = load i8, i8* %1050, align 1
  %1060 = icmp eq i8 %1059, 0
  br i1 %1060, label %1081, label %1061

1061:                                             ; preds = %1053, %1057
  %1062 = phi i32 [ 1, %1057 ], [ 0, %1053 ]
  %1063 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 23
  %1064 = load i8, i8* %1063, align 4
  %1065 = icmp eq i8 %1064, 0
  br i1 %1065, label %1066, label %1081

1066:                                             ; preds = %1061
  %1067 = load %struct.sctp_tcb*, %struct.sctp_tcb** %429, align 8
  %1068 = icmp eq %struct.sctp_tcb* %1067, null
  br i1 %1068, label %1081, label %1069

1069:                                             ; preds = %1066
  %1070 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 22
  %1071 = load i16, i16* %1070, align 2
  %1072 = and i16 %1071, 256
  %1073 = icmp eq i16 %1072, 0
  br i1 %1073, label %1074, label %1081

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1067, i64 0, i32 7, i32 27
  %1076 = load %struct.sctp_stream_in*, %struct.sctp_stream_in** %1075, align 8
  %1077 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 0
  %1078 = load i16, i16* %1077, align 8
  %1079 = zext i16 %1078 to i64
  %1080 = getelementptr inbounds %struct.sctp_stream_in, %struct.sctp_stream_in* %1076, i64 %1079, i32 4
  store i8 0, i8* %1080, align 2
  br label %1081

1081:                                             ; preds = %1066, %1057, %1061, %1069, %1074
  %1082 = phi i32 [ %1062, %1074 ], [ %1062, %1069 ], [ %1062, %1066 ], [ %1062, %1061 ], [ 1, %1057 ]
  %1083 = phi i32 [ 128, %1074 ], [ 128, %1069 ], [ 128, %1066 ], [ 128, %1061 ], [ 0, %1057 ]
  %1084 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 22
  %1085 = load i16, i16* %1084, align 2
  %1086 = shl i16 %1085, 5
  %1087 = and i16 %1086, 8192
  %1088 = zext i16 %1087 to i32
  %1089 = or i32 %1083, %1088
  %1090 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 9
  %1091 = load i32, i32* %1090, align 8
  %1092 = zext i32 %1091 to i64
  store i64 %1092, i64* %47, align 8
  %1093 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 14
  %1094 = bitcast %struct.mbuf** %1093 to i64*
  %1095 = load i64, i64* %1094, align 8
  %1096 = bitcast %struct.mbuf** %2 to i64*
  store i64 %1095, i64* %1096, align 8
  %1097 = load %struct.mbuf*, %struct.mbuf** %1093, align 8
  %1098 = icmp eq %struct.mbuf* %1097, null
  br i1 %1098, label %1140, label %1099

1099:                                             ; preds = %1081
  %1100 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 10
  %1101 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %424, i64 0, i32 23
  %1102 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 79
  %1103 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %465, i64 0, i32 7, i32 81
  br label %1104

1104:                                             ; preds = %1099, %1132
  %1105 = phi %struct.mbuf* [ %1097, %1099 ], [ %1138, %1132 ]
  %1106 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1105, i64 0, i32 0, i32 3
  %1107 = load i32, i32* %1106, align 8
  %1108 = sub nsw i32 0, %1107
  %1109 = atomicrmw add i32* %70, i32 %1108 seq_cst
  %1110 = load i32, i32* %1106, align 8
  %1111 = icmp slt i32 %1109, %1110
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1104
  store i32 0, i32* %70, align 4
  br label %1113

1113:                                             ; preds = %1112, %1104
  %1114 = atomicrmw add i32* %1100, i32 -256 seq_cst
  %1115 = icmp slt i32 %1114, 256
  br i1 %1115, label %1116, label %1117

1116:                                             ; preds = %1113
  store i32 0, i32* %1100, align 4
  br label %1117

1117:                                             ; preds = %1116, %1113
  %1118 = load i8, i8* %1101, align 4
  %1119 = icmp eq i8 %1118, 0
  %1120 = and i1 %463, %1119
  br i1 %1120, label %1121, label %1132

1121:                                             ; preds = %1117
  %1122 = load i32, i32* %1106, align 8
  %1123 = sub nsw i32 0, %1122
  %1124 = atomicrmw add i32* %1102, i32 %1123 seq_cst
  %1125 = load i32, i32* %1106, align 8
  %1126 = icmp slt i32 %1124, %1125
  br i1 %1126, label %1127, label %1128

1127:                                             ; preds = %1121
  store i32 0, i32* %1102, align 8
  br label %1128

1128:                                             ; preds = %1127, %1121
  %1129 = atomicrmw add i32* %1103, i32 -256 seq_cst
  %1130 = icmp slt i32 %1129, 256
  br i1 %1130, label %1131, label %1132

1131:                                             ; preds = %1128
  store i32 0, i32* %1103, align 8
  br label %1132

1132:                                             ; preds = %1128, %1131, %1117
  %1133 = load i32, i32* %1106, align 8
  %1134 = load i32, i32* %9, align 4
  %1135 = add i32 %1133, 256
  %1136 = add i32 %1135, %1134
  store i32 %1136, i32* %9, align 4
  %1137 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1105, i64 0, i32 0, i32 0
  %1138 = load %struct.mbuf*, %struct.mbuf** %1137, align 8
  %1139 = icmp eq %struct.mbuf* %1138, null
  br i1 %1139, label %1140, label %1104

1140:                                             ; preds = %1132, %1081
  store i32 0, i32* %1090, align 8
  %1141 = icmp eq i32 %1083, 0
  %1142 = bitcast %struct.mbuf** %1093 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1142, i8 0, i64 16, i1 false)
  br i1 %1141, label %1143, label %801

1143:                                             ; preds = %949, %940, %1140, %917, %925, %913, %903
  %1144 = phi i32 [ %904, %903 ], [ %904, %913 ], [ %904, %917 ], [ %904, %925 ], [ 0, %1140 ], [ %904, %940 ], [ %904, %949 ]
  %1145 = phi i32 [ %905, %903 ], [ %905, %913 ], [ %905, %917 ], [ %905, %925 ], [ %1089, %1140 ], [ %905, %940 ], [ %905, %949 ]
  %1146 = phi i32 [ %907, %903 ], [ %907, %913 ], [ %907, %917 ], [ %907, %925 ], [ 0, %1140 ], [ %907, %940 ], [ %907, %949 ]
  %1147 = phi i32 [ %908, %903 ], [ %908, %913 ], [ %908, %917 ], [ %908, %925 ], [ %1082, %1140 ], [ %908, %940 ], [ %951, %949 ]
  %1148 = phi %struct.sctp_queued_to_read* [ %910, %903 ], [ %910, %913 ], [ %910, %917 ], [ %910, %925 ], [ %424, %1140 ], [ %910, %940 ], [ %910, %949 ]
  %1149 = icmp eq i32 %1147, 1
  br i1 %1149, label %1150, label %1152

1150:                                             ; preds = %1143
  %1151 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #12
  br label %1152

1152:                                             ; preds = %641, %655, %1028, %1143, %1150
  %1153 = phi i32 [ %1147, %1143 ], [ 0, %1150 ], [ %960, %1028 ], [ 0, %655 ], [ 0, %641 ]
  %1154 = phi i32 [ %1144, %1143 ], [ %1144, %1150 ], [ %904, %1028 ], [ %595, %655 ], [ %595, %641 ]
  %1155 = phi i32 [ %1145, %1143 ], [ %1145, %1150 ], [ %905, %1028 ], [ %624, %655 ], [ %624, %641 ]
  %1156 = phi i32 [ %1146, %1143 ], [ %1146, %1150 ], [ %907, %1028 ], [ %622, %641 ], [ %656, %655 ]
  %1157 = phi %struct.sctp_queued_to_read* [ %1148, %1143 ], [ %1148, %1150 ], [ %910, %1028 ], [ %601, %655 ], [ %601, %641 ]
  %1158 = phi i32 [ 0, %1143 ], [ 0, %1150 ], [ 0, %1028 ], [ %642, %655 ], [ %642, %641 ]
  %1159 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %66) #12
  br label %1160

1160:                                             ; preds = %965, %973, %1152
  %1161 = phi i32 [ %1154, %1152 ], [ %904, %973 ], [ %904, %965 ]
  %1162 = phi i32 [ %1155, %1152 ], [ %905, %973 ], [ %905, %965 ]
  %1163 = phi i32 [ %1156, %1152 ], [ %907, %973 ], [ %907, %965 ]
  %1164 = phi i32 [ %1153, %1152 ], [ %960, %973 ], [ %960, %965 ]
  %1165 = phi %struct.sctp_queued_to_read* [ %1157, %1152 ], [ %910, %973 ], [ %910, %965 ]
  %1166 = phi i32 [ %1158, %1152 ], [ 0, %965 ], [ %974, %973 ]
  %1167 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  %1168 = icmp eq %struct.sctp_tcb* %465, null
  br i1 %1168, label %1183, label %1169

1169:                                             ; preds = %1160
  %1170 = icmp eq i32 %48, 0
  br i1 %1170, label %1171, label %1183

1171:                                             ; preds = %1169
  %1172 = load i32, i32* %9, align 4
  %1173 = icmp uge i32 %1172, %61
  %1174 = icmp ne %struct.sctp_queued_to_read* %1165, null
  %1175 = and i1 %1174, %1173
  br i1 %1175, label %1176, label %1183

1176:                                             ; preds = %1171
  %1177 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %1165, i64 0, i32 23
  %1178 = load i8, i8* %1177, align 4
  %1179 = icmp eq i8 %1178, 0
  %1180 = icmp eq i32 %1163, 0
  %1181 = and i1 %1180, %1179
  br i1 %1181, label %1182, label %1183

1182:                                             ; preds = %1176
  call fastcc void @sctp_user_rcvd(%struct.sctp_tcb* nonnull %465, i32* nonnull %9, i32 %1164, i32 %61)
  br label %1183

1183:                                             ; preds = %131, %132, %86, %126, %98, %1160, %1169, %1182, %1176, %1171, %122, %110, %113, %101, %104
  %1184 = phi %struct.sctp_tcb* [ %465, %1182 ], [ %465, %1176 ], [ %465, %1171 ], [ %465, %1169 ], [ null, %1160 ], [ null, %104 ], [ null, %101 ], [ null, %113 ], [ null, %110 ], [ null, %122 ], [ null, %98 ], [ null, %126 ], [ null, %86 ], [ null, %132 ], [ null, %131 ]
  %1185 = phi i32 [ %1161, %1182 ], [ %1161, %1176 ], [ %1161, %1171 ], [ %1161, %1169 ], [ %1161, %1160 ], [ 0, %104 ], [ 0, %101 ], [ 0, %113 ], [ 0, %110 ], [ 0, %122 ], [ 0, %98 ], [ 0, %126 ], [ 0, %86 ], [ 0, %132 ], [ 0, %131 ]
  %1186 = phi i32 [ %464, %1182 ], [ %464, %1176 ], [ %464, %1171 ], [ %464, %1169 ], [ %464, %1160 ], [ 0, %104 ], [ 0, %101 ], [ 0, %113 ], [ 0, %110 ], [ 0, %122 ], [ 0, %98 ], [ 0, %126 ], [ 0, %86 ], [ 0, %132 ], [ 0, %131 ]
  %1187 = phi i32 [ %1162, %1182 ], [ %1162, %1176 ], [ %1162, %1171 ], [ %1162, %1169 ], [ %1162, %1160 ], [ 0, %104 ], [ 0, %101 ], [ 0, %113 ], [ 0, %110 ], [ 0, %122 ], [ 0, %98 ], [ 0, %126 ], [ 0, %86 ], [ 0, %132 ], [ 0, %131 ]
  %1188 = phi i32 [ 0, %1182 ], [ 0, %1176 ], [ 0, %1171 ], [ 0, %1169 ], [ 0, %1160 ], [ %85, %104 ], [ %85, %101 ], [ %85, %113 ], [ %85, %110 ], [ %85, %122 ], [ %85, %98 ], [ %85, %126 ], [ %85, %86 ], [ %85, %132 ], [ %85, %131 ]
  %1189 = phi i32 [ %1166, %1182 ], [ %1166, %1176 ], [ %1166, %1171 ], [ %1166, %1169 ], [ %1166, %1160 ], [ %102, %104 ], [ %102, %101 ], [ %111, %113 ], [ %111, %110 ], [ 104, %122 ], [ 0, %98 ], [ %130, %126 ], [ 11, %131 ], [ %133, %132 ], [ 0, %86 ]
  br i1 %14, label %1190, label %1191

1190:                                             ; preds = %1183
  store i32 %1187, i32* %5, align 4
  br label %1191

1191:                                             ; preds = %1190, %1183
  %1192 = trunc i32 %1187 to i8
  %1193 = icmp sgt i8 %1192, -1
  br i1 %1193, label %1194, label %1204

1194:                                             ; preds = %1191
  %1195 = icmp eq i32 %48, 0
  %1196 = icmp ne %struct.sctp_sndrcvinfo* %6, null
  %1197 = and i1 %1196, %1195
  br i1 %1197, label %1198, label %1204

1198:                                             ; preds = %1194
  %1199 = load i64, i64* %62, align 8
  %1200 = and i64 %1199, 268435458
  %1201 = icmp eq i64 %1200, 0
  br i1 %1201, label %1204, label %1202

1202:                                             ; preds = %1198
  %1203 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 9
  store i16 0, i16* %1203, align 4
  br label %1204

1204:                                             ; preds = %1191, %1194, %1202, %1198
  %1205 = icmp eq i32 %1188, 0
  br i1 %1205, label %1208, label %1206

1206:                                             ; preds = %1204
  %1207 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  br label %1208

1208:                                             ; preds = %1204, %1206
  %1209 = icmp eq i32 %1186, 0
  %1210 = icmp eq %struct.sctp_tcb* %1184, null
  %1211 = or i1 %1210, %1209
  br i1 %1211, label %1217, label %1212

1212:                                             ; preds = %1208
  %1213 = load i32, i32* %9, align 4
  %1214 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1184, i64 0, i32 8
  store i32 %1213, i32* %1214, align 8
  %1215 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1184, i64 0, i32 7, i32 120
  %1216 = atomicrmw add i32* %1215, i32 -1 seq_cst
  br label %1217

1217:                                             ; preds = %1212, %1208
  %1218 = icmp eq i32 %1185, 0
  br i1 %1218, label %1234, label %1219

1219:                                             ; preds = %1217
  %1220 = load i32, i32* %68, align 8
  %1221 = and i32 %1220, 8388608
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1225, label %1223

1223:                                             ; preds = %1219
  %1224 = or i32 %1220, 33554432
  store i32 %1224, i32* %68, align 8
  br label %1234

1225:                                             ; preds = %1219
  %1226 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %66) #12
  %1227 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 21, i32 15
  %1228 = load i16, i16* %1227, align 8
  %1229 = and i16 %1228, 444
  %1230 = icmp eq i16 %1229, 0
  br i1 %1230, label %1232, label %1231

1231:                                             ; preds = %1225
  tail call void @sowakeup(%struct.socket* %0, %struct.sockbuf* %56) #12
  br label %1234

1232:                                             ; preds = %1225
  %1233 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #12
  br label %1234

1234:                                             ; preds = %1231, %1232, %1223, %1217, %46, %27, %23, %8
  %1235 = phi i32 [ 22, %8 ], [ 95, %23 ], [ 22, %27 ], [ 14, %46 ], [ %1189, %1217 ], [ %1189, %1223 ], [ %1189, %1232 ], [ %1189, %1231 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  ret i32 %1235
}

declare i32 @sbwait(%struct.sockbuf*) local_unnamed_addr #4

declare i32 @uiomove(i8*, i32, %struct.uio*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_user_rcvd(%struct.sctp_tcb*, i32* nocapture, i32, i32) unnamed_addr #3 {
  %5 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %5, label %78, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 120
  %9 = atomicrmw add i32* %8, i32 1 seq_cst
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 127
  %13 = icmp ne i32 %12, 64
  %14 = and i32 %11, 544
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %76

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %19 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %20 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %19, i64 0, i32 37
  %21 = atomicrmw add i32* %20, i32 1 seq_cst
  %22 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %23 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %22, i64 0, i32 9
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 805306368
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %72

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %29 = load %struct.socket*, %struct.socket** %28, align 8
  %30 = icmp eq %struct.socket* %29, null
  br i1 %30, label %72, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 8
  %33 = load i32, i32* %1, align 4
  %34 = atomicrmw add i32* %32, i32 %33 seq_cst
  store i32 0, i32* %1, align 4
  %35 = tail call i32 @sctp_calc_rwnd(%struct.sctp_tcb* nonnull %0, %struct.sctp_association* %7) #12
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 76
  %37 = load i32, i32* %36, align 4
  %38 = tail call i32 @llvm.usub.sat.i32(i32 %35, i32 %37)
  %39 = icmp ult i32 %38, %3
  br i1 %39, label %61, label %40

40:                                               ; preds = %31
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %44 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %43, i64 0, i32 36
  %45 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %44) #12
  br label %46

46:                                               ; preds = %40, %42
  %47 = phi i32 [ 1, %42 ], [ 0, %40 ]
  %48 = load i32, i32* %10, align 8
  %49 = and i32 %48, 512
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 14
  %53 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %52) #12
  %54 = load i32, i32* %10, align 8
  %55 = and i32 %54, 512
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 109), i32 1 seq_cst
  tail call void @sctp_send_sack(%struct.sctp_tcb* nonnull %0, i32 1) #12
  %59 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %59, %struct.sctp_tcb* nonnull %0, i32 13, i32 1) #12
  %60 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  tail call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %60, %struct.sctp_tcb* nonnull %0, %struct.sctp_nets* null, i32 1610612742)
  br label %62

61:                                               ; preds = %31
  store i32 %38, i32* %32, align 8
  br label %72

62:                                               ; preds = %51, %57
  %63 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %52) #12
  br label %64

64:                                               ; preds = %62, %46
  %65 = icmp ne i32 %47, 0
  %66 = icmp ne i32 %2, 0
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %70 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %69, i64 0, i32 36
  %71 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %70) #12
  br label %72

72:                                               ; preds = %61, %27, %17, %68, %64
  %73 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %74 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %73, i64 0, i32 37
  %75 = atomicrmw add i32* %74, i32 -1 seq_cst
  br label %76

76:                                               ; preds = %6, %72
  %77 = atomicrmw add i32* %8, i32 -1 seq_cst
  br label %78

78:                                               ; preds = %4, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_dynamic_set_primary(%struct.sockaddr* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = tail call %struct.sctp_ifa* @sctp_find_ifa_by_addr(%struct.sockaddr* %0, i32 %1, i32 0)
  %4 = icmp eq %struct.sctp_ifa* %3, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %2
  %6 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 15), align 8
  %7 = tail call noalias i8* @malloc(i64 %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 29), i32 1 seq_cst
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false)
  %11 = getelementptr inbounds i8, i8* %7, i64 32
  %12 = bitcast i8* %11 to %struct.timeval*
  %13 = tail call i32 @gettimeofday(%struct.timeval* %12, i8* null) #12
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to %struct.sctp_ifa**
  store %struct.sctp_ifa* %3, %struct.sctp_ifa** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  %17 = bitcast i8* %16 to i32*
  store i32 49156, i32* %17, align 8
  %18 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %3, i64 0, i32 5
  %19 = atomicrmw add i32* %18, i32 1 seq_cst
  %20 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 26)) #12
  %21 = load %struct.sctp_laddr*, %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), align 8
  %22 = bitcast i8* %7 to %struct.sctp_laddr**
  store %struct.sctp_laddr* %21, %struct.sctp_laddr** %22, align 8
  %23 = icmp eq %struct.sctp_laddr* %21, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %21, i64 0, i32 0, i32 1
  %26 = bitcast %struct.sctp_laddr*** %25 to i8**
  store i8* %7, i8** %26, align 8
  br label %27

27:                                               ; preds = %9, %24
  store i8* %7, i8** bitcast (%struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0) to i8**), align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 8
  %29 = bitcast i8* %28 to %struct.sctp_laddr***
  store %struct.sctp_laddr** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 12, i32 0), %struct.sctp_laddr*** %29, align 8
  %30 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 0, i32 4), align 8
  %31 = and i32 %30, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  store i32 0, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 7), align 4
  store i32 16, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 2) to i8*), i8 0, i64 24, i1 false)
  store %struct.sctp_timer* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40), %struct.sctp_timer** bitcast (i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 5) to %struct.sctp_timer**), align 8
  %34 = tail call i32 @sctp_get_tick_count() #12
  store i32 %34, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 6), align 8
  %35 = tail call i32 @sctp_os_timer_start(%struct.sctp_callout* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 0), i32 2, void (i8*)* nonnull @sctp_timeout_handler, i8* bitcast (%struct.sctp_timer* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40) to i8*)) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %52

37:                                               ; preds = %33
  %38 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 2), align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = atomicrmw add i32* inttoptr (i64 960 to i32*), i32 1 seq_cst
  br label %42

42:                                               ; preds = %40, %37
  %43 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 3), align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = atomicrmw add i32* inttoptr (i64 1776 to i32*), i32 1 seq_cst
  br label %47

47:                                               ; preds = %45, %42
  %48 = load i8*, i8** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 40, i32 4), align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = atomicrmw add i32* inttoptr (i64 504 to i32*), i32 1 seq_cst
  br label %52

52:                                               ; preds = %27, %33, %47, %50
  %53 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 26)) #12
  br label %54

54:                                               ; preds = %5, %2, %52
  %55 = phi i32 [ 0, %52 ], [ 99, %2 ], [ 12, %5 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @sctp_hashinit_flags(i32, %struct.malloc_type* nocapture readnone, i64* nocapture, i32) local_unnamed_addr #3 {
  %5 = icmp slt i32 %0, 1
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %8 = icmp eq void (i8*, ...)* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void (i8*, ...) %7(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #12
  br label %10

10:                                               ; preds = %9, %6, %4
  %11 = phi i32 [ %0, %4 ], [ 1, %6 ], [ 1, %9 ]
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi i64 [ 1, %10 ], [ %16, %13 ]
  %15 = icmp sgt i64 %14, %12
  %16 = shl i64 %14, 1
  br i1 %15, label %17, label %13

17:                                               ; preds = %13
  %18 = ashr i64 %14, 1
  %19 = and i32 %3, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = shl i64 %18, 3
  %23 = tail call noalias i8* @malloc(i64 %22) #12
  %24 = icmp eq i8* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = icmp sgt i64 %14, 1
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = icmp sgt i64 %18, 1
  %29 = select i1 %28, i64 %18, i64 1
  %30 = shl nuw i64 %29, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %27, %25
  %32 = add nsw i64 %18, -1
  store i64 %32, i64* %2, align 8
  br label %33

33:                                               ; preds = %17, %21, %31
  %34 = phi i8* [ %23, %31 ], [ null, %21 ], [ null, %17 ]
  ret i8* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_hashdestroy(i8*, %struct.malloc_type* nocapture readnone, i64) local_unnamed_addr #3 {
  %4 = bitcast i8* %0 to %struct.generic.51*
  %5 = getelementptr inbounds %struct.generic.51, %struct.generic.51* %4, i64 %2
  %6 = icmp ult %struct.generic.51* %5, %4
  br i1 %6, label %19, label %9

7:                                                ; preds = %9
  %8 = icmp ugt %struct.generic.51* %14, %5
  br i1 %8, label %19, label %9

9:                                                ; preds = %3, %7
  %10 = phi %struct.generic.51* [ %14, %7 ], [ %4, %3 ]
  %11 = getelementptr inbounds %struct.generic.51, %struct.generic.51* %10, i64 0, i32 0
  %12 = load %struct.generic.51*, %struct.generic.51** %11, align 8
  %13 = icmp eq %struct.generic.51* %12, null
  %14 = getelementptr inbounds %struct.generic.51, %struct.generic.51* %10, i64 1
  br i1 %13, label %7, label %15

15:                                               ; preds = %9
  %16 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %17 = icmp eq void (i8*, ...)* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  tail call void (i8*, ...) %16(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0)) #12
  br label %20

19:                                               ; preds = %7, %3
  tail call void @free(i8* %0) #12
  br label %20

20:                                               ; preds = %18, %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_hashfreedestroy(i8* nocapture, %struct.malloc_type* nocapture readnone, i64) local_unnamed_addr #3 {
  tail call void @free(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_connectx_helper_add(%struct.sctp_tcb*, %struct.sockaddr*, i32, i32* nocapture) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %6 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %5, align 8
  store i32 0, i32* %3, align 4
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 196
  br label %10

10:                                               ; preds = %26, %8
  %11 = phi i64 [ 0, %8 ], [ %28, %26 ]
  %12 = phi %struct.sockaddr* [ %1, %8 ], [ %31, %26 ]
  %13 = phi i32 [ 0, %8 ], [ %32, %26 ]
  %14 = phi i32 [ 0, %8 ], [ %27, %26 ]
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %12, i64 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 123
  br i1 %17, label %18, label %26

18:                                               ; preds = %10
  %19 = load i16, i16* %9, align 4
  %20 = tail call i32 @sctp_add_remote_addr(%struct.sctp_tcb* %0, %struct.sockaddr* %12, %struct.sctp_nets** null, i16 zeroext %19, i32 0, i32 8) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call i32 @sctp_free_assoc(%struct.sctp_inpcb* %6, %struct.sctp_tcb* %0, i32 0, i32 1610612747) #12
  store i32 105, i32* %3, align 4
  br label %34

24:                                               ; preds = %18
  %25 = add nsw i32 %14, 1
  br label %26

26:                                               ; preds = %10, %24
  %27 = phi i32 [ %25, %24 ], [ %14, %10 ]
  %28 = phi i64 [ 16, %24 ], [ %11, %10 ]
  %29 = bitcast %struct.sockaddr* %12 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = bitcast i8* %30 to %struct.sockaddr*
  %32 = add nuw nsw i32 %13, 1
  %33 = icmp eq i32 %32, %2
  br i1 %33, label %34, label %10

34:                                               ; preds = %26, %4, %22
  %35 = phi i32 [ %14, %22 ], [ 0, %4 ], [ %27, %26 ]
  ret i32 %35
}

declare i32 @sctp_add_remote_addr(%struct.sctp_tcb*, %struct.sockaddr*, %struct.sctp_nets**, i16 zeroext, i32, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @sctp_connectx_helper_find(%struct.sctp_inpcb* nocapture readnone, %struct.sockaddr* nocapture readnone, i32, i32* nocapture, i32* nocapture, i32) local_unnamed_addr #9 {
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  ret i32 22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @sctp_bindx_add_address(%struct.socket* nocapture readnone, %struct.sctp_inpcb* nocapture readnone, %struct.sockaddr* nocapture readnone, i32, i32* nocapture, i8* nocapture readnone) local_unnamed_addr #9 {
  store i32 22, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @sctp_bindx_delete_address(%struct.sctp_inpcb* nocapture readnone, %struct.sockaddr* nocapture readnone, i32, i32* nocapture) local_unnamed_addr #9 {
  store i32 22, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_local_addr_count(%struct.sctp_tcb*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 172, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 172, i32 2
  %5 = load i8, i8* %4, align 2
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 41
  %8 = load i32, i32* %7, align 4
  %9 = tail call %struct.sctp_vrf* @sctp_find_vrf(i32 %8) #12
  %10 = icmp eq %struct.sctp_vrf* %9, null
  br i1 %10, label %74, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %13 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %12, align 8
  %14 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %13, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %58, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %9, i64 0, i32 2, i32 0
  %20 = load %struct.sctp_ifn*, %struct.sctp_ifn** %19, align 8
  %21 = icmp eq %struct.sctp_ifn* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %18
  %23 = icmp eq i8 %3, 0
  %24 = icmp ne i8 %5, 0
  br label %25

25:                                               ; preds = %22, %53
  %26 = phi %struct.sctp_ifn* [ %20, %22 ], [ %56, %53 ]
  %27 = phi i32 [ 0, %22 ], [ %54, %53 ]
  br i1 %23, label %28, label %32

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %26, i64 0, i32 13, i64 0
  %30 = tail call i32 @strncmp(i8* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %53, label %32

32:                                               ; preds = %28, %25
  %33 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %26, i64 0, i32 0, i32 0
  %34 = load %struct.sctp_ifa*, %struct.sctp_ifa** %33, align 8
  %35 = icmp eq %struct.sctp_ifa* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %32, %48
  %37 = phi %struct.sctp_ifa* [ %51, %48 ], [ %34, %32 ]
  %38 = phi i32 [ %49, %48 ], [ %27, %32 ]
  %39 = tail call i32 @sctp_is_addr_restricted(%struct.sctp_tcb* %0, %struct.sctp_ifa* nonnull %37) #12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %37, i64 0, i32 4, i32 0, i32 0
  %43 = load i16, i16* %42, align 8
  %44 = icmp eq i16 %43, 123
  %45 = and i1 %24, %44
  %46 = zext i1 %45 to i32
  %47 = add nsw i32 %38, %46
  br label %48

48:                                               ; preds = %41, %36
  %49 = phi i32 [ %38, %36 ], [ %47, %41 ]
  %50 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %37, i64 0, i32 0, i32 0
  %51 = load %struct.sctp_ifa*, %struct.sctp_ifa** %50, align 8
  %52 = icmp eq %struct.sctp_ifa* %51, null
  br i1 %52, label %53, label %36

53:                                               ; preds = %48, %32, %28
  %54 = phi i32 [ %27, %28 ], [ %27, %32 ], [ %49, %48 ]
  %55 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %26, i64 0, i32 2, i32 0
  %56 = load %struct.sctp_ifn*, %struct.sctp_ifn** %55, align 8
  %57 = icmp eq %struct.sctp_ifn* %56, null
  br i1 %57, label %74, label %25

58:                                               ; preds = %11
  %59 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %13, i64 0, i32 5, i32 0
  %60 = load %struct.sctp_laddr*, %struct.sctp_laddr** %59, align 8
  %61 = icmp eq %struct.sctp_laddr* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58, %62
  %63 = phi %struct.sctp_laddr* [ %72, %62 ], [ %60, %58 ]
  %64 = phi i32 [ %70, %62 ], [ 0, %58 ]
  %65 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %63, i64 0, i32 1
  %66 = load %struct.sctp_ifa*, %struct.sctp_ifa** %65, align 8
  %67 = tail call i32 @sctp_is_addr_restricted(%struct.sctp_tcb* %0, %struct.sctp_ifa* %66) #12
  %68 = icmp eq i32 %67, 0
  %69 = zext i1 %68 to i32
  %70 = add nuw nsw i32 %64, %69
  %71 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %63, i64 0, i32 0, i32 0
  %72 = load %struct.sctp_laddr*, %struct.sctp_laddr** %71, align 8
  %73 = icmp eq %struct.sctp_laddr* %72, null
  br i1 %73, label %74, label %62

74:                                               ; preds = %53, %62, %58, %18, %1
  %75 = phi i32 [ 0, %1 ], [ 0, %58 ], [ 0, %18 ], [ %70, %62 ], [ %54, %53 ]
  %76 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #12
  ret i32 %75
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

declare i32 @sctp_is_addr_restricted(%struct.sctp_tcb*, %struct.sctp_ifa*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_min_mtu(i32, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq i32 %0, 0
  %5 = icmp ne i32 %1, 0
  br i1 %4, label %21, label %6

6:                                                ; preds = %3
  %7 = icmp ne i32 %2, 0
  br i1 %5, label %8, label %17

8:                                                ; preds = %6
  br i1 %7, label %9, label %14

9:                                                ; preds = %8
  %10 = icmp ugt i32 %1, %2
  %11 = select i1 %10, i32 %2, i32 %1
  %12 = icmp ult i32 %11, %0
  %13 = select i1 %12, i32 %11, i32 %0
  br label %27

14:                                               ; preds = %8
  %15 = icmp ugt i32 %0, %1
  %16 = select i1 %15, i32 %1, i32 %0
  br label %27

17:                                               ; preds = %6
  br i1 %7, label %18, label %27

18:                                               ; preds = %17
  %19 = icmp ugt i32 %0, %2
  %20 = select i1 %19, i32 %2, i32 %0
  br label %27

21:                                               ; preds = %3
  br i1 %5, label %22, label %27

22:                                               ; preds = %21
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = icmp ugt i32 %1, %2
  %26 = select i1 %25, i32 %2, i32 %1
  br label %27

27:                                               ; preds = %21, %22, %17, %24, %18, %14, %9
  %28 = phi i32 [ %13, %9 ], [ %16, %14 ], [ %20, %18 ], [ %26, %24 ], [ %0, %17 ], [ %1, %22 ], [ %2, %21 ]
  ret i32 %28
}

declare i32 @sctp_initiate_iterator(i32 (%struct.sctp_inpcb*, i8*, i32)*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32, i32, i32, i8*, i32, void (i8*, i32)*, %struct.sctp_inpcb*, i8 zeroext) local_unnamed_addr #4

declare i32 @sctp_asconf_iterator_ep(%struct.sctp_inpcb*, i8*, i32) #4

declare void @sctp_asconf_iterator_stcb(%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32) #4

declare void @sctp_asconf_iterator_end(i8*, i32) #4

declare void @socantrcvmore(%struct.socket*) local_unnamed_addr #4

declare void @m_adj(%struct.mbuf*, i32) local_unnamed_addr #4

declare void @socantsendmore(%struct.socket*) local_unnamed_addr #4

declare i32 @sctp_calc_rwnd(%struct.sctp_tcb*, %struct.sctp_association*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.uadd.sat.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare <8 x i16> @llvm.bswap.v8i16(<8 x i16>) #11

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
