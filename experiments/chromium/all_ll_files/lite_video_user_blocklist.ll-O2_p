; ModuleID = '../../chrome/browser/lite_video/lite_video_user_blocklist.cc'
source_filename = "../../chrome/browser/lite_video/lite_video_user_blocklist.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.lite_video::LiteVideoUserBlocklist" = type { %"class.blocklist::OptOutBlocklist" }
%"class.blocklist::OptOutBlocklist" = type { i32 (...)**, %"class.std::__1::unique_ptr", i8, %"class.std::__1::unique_ptr.46", %"class.std::__1::queue", %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blocklist::BlocklistData"* }
%"class.blocklist::BlocklistData" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.0", i64, %"class.std::__1::map", %"class.std::__1::unique_ptr.0", %"class.std::__1::map.23", %"class.std::__1::map.34" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blocklist::OptOutBlocklistItem"* }
%"class.blocklist::OptOutBlocklistItem" = type <{ i64, i32, [4 x i8], %"class.base::TimeDelta", %"class.std::__1::priority_queue", %"class.absl::optional", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::priority_queue" = type <{ %"class.std::__1::vector", %"struct.std::__1::less", [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.blocklist::OptOutBlocklistItem::OptOutRecord"*, %"class.std::__1::__compressed_pair.7" }
%"class.blocklist::OptOutBlocklistItem::OptOutRecord" = type <{ %"class.base::Time", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blocklist::OptOutBlocklistItem::OptOutRecord"* }
%"struct.std::__1::less" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.blocklist::BlocklistData::Policy"* }
%"struct.blocklist::BlocklistData::Policy" = type <{ %"class.base::TimeDelta", i64, i32, [4 x i8] }>
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blocklist::OptOutStore"* }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.blocklist::OptOutStore" = type { i32 (...)** }
%"class.base::Clock" = type opaque
%"class.blocklist::OptOutBlocklistDelegate" = type opaque
%"class.content::NavigationHandle" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.60", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.60" = type { %"class.std::__1::__tree.61" }
%"class.std::__1::__tree.61" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::allocator.75" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.77" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.73 }
%union.anon.73 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GURL* }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { i32*, i32*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i32* }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %class.GURL }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"struct.std::__1::pair" = type { i32, i32 }
%"struct.std::__1::less.32" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }

$_ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEC2ESt16initializer_listIS6_ERKS2_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN10lite_video22LiteVideoUserBlocklistE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.lite_video::LiteVideoUserBlocklist"*)* @_ZN10lite_video22LiteVideoUserBlocklistD2Ev to i8*), i8* bitcast (void (%"class.lite_video::LiteVideoUserBlocklist"*)* @_ZN10lite_video22LiteVideoUserBlocklistD0Ev to i8*), i8* bitcast (i1 (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)* @_ZNK10lite_video22LiteVideoUserBlocklist22ShouldUseSessionPolicyEPN4base9TimeDeltaEPmPi to i8*), i8* bitcast (i1 (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)* @_ZNK10lite_video22LiteVideoUserBlocklist25ShouldUsePersistentPolicyEPN4base9TimeDeltaEPmPi to i8*), i8* bitcast (i1 (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*, i64*)* @_ZNK10lite_video22LiteVideoUserBlocklist19ShouldUseHostPolicyEPN4base9TimeDeltaEPmPiS4_ to i8*), i8* bitcast (i1 (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.base::TimeDelta"*, i64*, i32*)* @_ZNK10lite_video22LiteVideoUserBlocklist19ShouldUseTypePolicyEPN4base9TimeDeltaEPmPi to i8*), i8* bitcast (void (%"class.std::__1::map.34"*, %"class.lite_video::LiteVideoUserBlocklist"*)* @_ZNK10lite_video22LiteVideoUserBlocklist15GetAllowedTypesEv to i8*), i8* bitcast (i32 (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.content::NavigationHandle"*)* @_ZNK10lite_video22LiteVideoUserBlocklist30IsLiteVideoAllowedOnNavigationEPN7content16NavigationHandleE to i8*)] }, align 8
@_ZN12_GLOBAL__N_131kLiteVideoBlocklistKeySeparatorE = internal constant [2 x i8] c"_\00", align 1

@_ZN10lite_video22LiteVideoUserBlocklistC1ENSt3__110unique_ptrIN9blocklist11OptOutStoreENS1_14default_deleteIS4_EEEEPN4base5ClockEPNS3_23OptOutBlocklistDelegateE = hidden unnamed_addr alias void (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.blocklist::OptOutStore"*, %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*), void (%"class.lite_video::LiteVideoUserBlocklist"*, %"class.blocklist::OptOutStore"*, %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*)* @_ZN10lite_video22LiteVideoUserBlocklistC2ENSt3__110unique_ptrIN9blocklist11OptOutStoreENS1_14default_deleteIS4_EEEEPN4base5ClockEPNS3_23OptOutBlocklistDelegateE
@_ZN10lite_video22LiteVideoUserBlocklistD1Ev = hidden unnamed_addr alias void (%"class.lite_video::LiteVideoUserBlocklist"*), void (%"class.lite_video::LiteVideoUserBlocklist"*)* @_ZN10lite_video22LiteVideoUserBlocklistD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video22LiteVideoUserBlocklistC2ENSt3__110unique_ptrIN9blocklist11OptOutStoreENS1_14default_deleteIS4_EEEEPN4base5ClockEPNS3_23OptOutBlocklistDelegateE(%"class.lite_video::LiteVideoUserBlocklist"*, %"class.blocklist::OptOutStore"*, %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  tail call void @_ZN9blocklist15OptOutBlocklistC2ENSt3__110unique_ptrINS_11OptOutStoreENS1_14default_deleteIS3_EEEEPN4base5ClockEPNS_23OptOutBlocklistDelegateE(%"class.blocklist::OptOutBlocklist"* %5, %"class.blocklist::OptOutStore"* %1, %"class.base::Clock"* %2, %"class.blocklist::OptOutBlocklistDelegate"* %3) #8
  %6 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10lite_video22LiteVideoUserBlocklistE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  tail call void @_ZN9blocklist15OptOutBlocklist4InitEv(%"class.blocklist::OptOutBlocklist"* %5) #8
  ret void
}

declare void @_ZN9blocklist15OptOutBlocklistC2ENSt3__110unique_ptrINS_11OptOutStoreENS1_14default_deleteIS3_EEEEPN4base5ClockEPNS_23OptOutBlocklistDelegateE(%"class.blocklist::OptOutBlocklist"*, %"class.blocklist::OptOutStore"*, %"class.base::Clock"*, %"class.blocklist::OptOutBlocklistDelegate"*) unnamed_addr #1

declare void @_ZN9blocklist15OptOutBlocklist4InitEv(%"class.blocklist::OptOutBlocklist"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9blocklist15OptOutBlocklistD2Ev(%"class.blocklist::OptOutBlocklist"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video22LiteVideoUserBlocklistD2Ev(%"class.lite_video::LiteVideoUserBlocklist"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  tail call void @_ZN9blocklist15OptOutBlocklistD2Ev(%"class.blocklist::OptOutBlocklist"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video22LiteVideoUserBlocklistD0Ev(%"class.lite_video::LiteVideoUserBlocklist"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  tail call void @_ZN9blocklist15OptOutBlocklistD2Ev(%"class.blocklist::OptOutBlocklist"* %2) #8
  %3 = bitcast %"class.lite_video::LiteVideoUserBlocklist"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10lite_video22LiteVideoUserBlocklist30IsLiteVideoAllowedOnNavigationEPN7content16NavigationHandleE(%"class.lite_video::LiteVideoUserBlocklist"*, %"class.content::NavigationHandle"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator.75", align 1
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.std::__1::vector.83", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.absl::optional.90", align 8
  %8 = alloca %"class.absl::optional.95", align 8
  %9 = alloca %"class.absl::optional.95", align 8
  %10 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 120, i1 false)
  %11 = bitcast %"class.content::NavigationHandle"* %1 to %class.GURL* (%"class.content::NavigationHandle"*)***
  %12 = load %class.GURL* (%"class.content::NavigationHandle"*)**, %class.GURL* (%"class.content::NavigationHandle"*)*** %11, align 8
  %13 = getelementptr inbounds %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %12, i64 4
  %14 = load %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %13, align 8
  %15 = tail call dereferenceable(120) %class.GURL* %14(%"class.content::NavigationHandle"* %1) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %4, %class.GURL* dereferenceable(120) %15) #8
  %16 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %4) #8
  %17 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 2, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %105

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector.83"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %5, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #8
  %25 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 0
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 2, i32 3, i32 0
  %29 = load i32, i32* %28, align 8, !noalias !2
  %30 = sext i32 %29 to i64
  %31 = sext i32 %18 to i64
  %32 = getelementptr inbounds %"class.std::__1::allocator.75", %"class.std::__1::allocator.75"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27, i64 %30, i64 %31, %"class.std::__1::allocator.75"* nonnull dereferenceable(1) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #8, !noalias !2
  %33 = call i32 @_ZNK9blocklist15OptOutBlocklist18IsLoadedAndAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibPNS1_6vectorINS_15BlocklistReasonENS5_ISB_EEEE(%"class.blocklist::OptOutBlocklist"* %25, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 2, i1 zeroext false, %"class.std::__1::vector.83"* nonnull %5) #8
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %21, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %42 = icmp eq i32 %33, 5
  br i1 %42, label %43, label %96

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 32, i1 false)
  %45 = bitcast %"class.content::NavigationHandle"* %1 to i1 (%"class.content::NavigationHandle"*)***
  %46 = load i1 (%"class.content::NavigationHandle"*)**, i1 (%"class.content::NavigationHandle"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %46, i64 7
  %48 = load i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.content::NavigationHandle"* %1) #8
  br i1 %49, label %66, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.content::NavigationHandle"* %1 to %"class.content::WebContents"* (%"class.content::NavigationHandle"*)***
  %52 = load %"class.content::WebContents"* (%"class.content::NavigationHandle"*)**, %"class.content::WebContents"* (%"class.content::NavigationHandle"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.content::WebContents"* (%"class.content::NavigationHandle"*)*, %"class.content::WebContents"* (%"class.content::NavigationHandle"*)** %52, i64 14
  %54 = load %"class.content::WebContents"* (%"class.content::NavigationHandle"*)*, %"class.content::WebContents"* (%"class.content::NavigationHandle"*)** %53, align 8
  %55 = call %"class.content::WebContents"* %54(%"class.content::NavigationHandle"* %1) #8
  %56 = bitcast %"class.content::WebContents"* %55 to %class.GURL* (%"class.content::WebContents"*)***
  %57 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %56, align 8
  %58 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %57, i64 9
  %59 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %58, align 8
  %60 = call dereferenceable(120) %class.GURL* %59(%"class.content::WebContents"* %55) #8
  %61 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %62, %class.GURL* nonnull dereferenceable(120) %4) #8
  call fastcc void @_ZN12_GLOBAL__N_123GetRebufferBlocklistKeyERK4GURLN4absl8optionalIS0_EE(%"class.absl::optional.90"* nonnull sret %7, %class.GURL* dereferenceable(120) %60, %"class.absl::optional.95"* nonnull %9)
  %63 = load i8, i8* %61, align 8, !range !7
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %50
  call void @_ZN4GURLD1Ev(%class.GURL* %62) #8
  store i8 0, i8* %61, align 8
  br label %74

66:                                               ; preds = %43
  %67 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast %union.anon.99* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 120, i1 false) #8
  call fastcc void @_ZN12_GLOBAL__N_123GetRebufferBlocklistKeyERK4GURLN4absl8optionalIS0_EE(%"class.absl::optional.90"* nonnull sret %7, %class.GURL* nonnull dereferenceable(120) %4, %"class.absl::optional.95"* nonnull %8)
  %70 = load i8, i8* %67, align 8, !range !7
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %73) #8
  store i8 0, i8* %67, align 8
  br label %74

74:                                               ; preds = %65, %50, %72, %66
  %75 = load i8, i8* %44, align 8, !range !7
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %94, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = call i32 @_ZNK9blocklist15OptOutBlocklist18IsLoadedAndAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibPNS1_6vectorINS_15BlocklistReasonENS5_ISB_EEEE(%"class.blocklist::OptOutBlocklist"* %25, %"class.std::__1::basic_string"* dereferenceable(24) %78, i32 1, i1 zeroext false, %"class.std::__1::vector.83"* nonnull %5) #8
  %80 = icmp eq i32 %79, 5
  %81 = select i1 %80, i32 1, i32 3
  %82 = load i8, i8* %44, align 8, !range !7
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %90, %84
  store i8 0, i8* %44, align 8
  br label %94

94:                                               ; preds = %74, %77, %93
  %95 = phi i32 [ %81, %77 ], [ %81, %93 ], [ 2, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  br label %96

96:                                               ; preds = %41, %94
  %97 = phi i32 [ %95, %94 ], [ 4, %41 ]
  %98 = load i32*, i32** %23, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = bitcast i32** %24 to i64*
  store i64 %101, i64* %102, align 8
  %103 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %103) #9
  br label %104

104:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br label %105

105:                                              ; preds = %2, %104
  %106 = phi i32 [ %97, %104 ], [ 2, %2 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #8
  ret i32 %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare i32 @_ZNK9blocklist15OptOutBlocklist18IsLoadedAndAllowedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEibPNS1_6vectorINS_15BlocklistReasonENS5_ISB_EEEE(%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i1 zeroext, %"class.std::__1::vector.83"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_123GetRebufferBlocklistKeyERK4GURLN4absl8optionalIS0_EE(%"class.absl::optional.90"* noalias nocapture sret, %class.GURL* dereferenceable(120), %"class.absl::optional.95"*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::allocator.75", align 1
  %5 = alloca %"class.std::__1::allocator.75", align 1
  %6 = alloca %"class.std::__1::allocator.75", align 1
  %7 = alloca [15 x i8], align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca [15 x i8], align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %1) #8
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  %17 = and i1 %13, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %union.anon.94* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  br label %154

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !7
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %57

26:                                               ; preds = %22
  %27 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %27)
  %28 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %31 = load i32, i32* %30, align 4, !noalias !8
  %32 = sext i32 %31 to i64
  %33 = sext i32 %15 to i64
  %34 = getelementptr inbounds %"class.std::__1::allocator.75", %"class.std::__1::allocator.75"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %29, i64 %32, i64 %33, %"class.std::__1::allocator.75"* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #8, !noalias !8
  %35 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_131kLiteVideoBlocklistKeySeparatorE, i64 0, i64 0)) #8, !noalias !13
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast i64* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %40, i64 15, i1 false)
  %41 = getelementptr inbounds i8, i8* %36, i64 23
  %42 = load i8, i8* %41, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #8, !noalias !13
  %43 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %43, align 8
  %44 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast i8** %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast i64* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %27, i64 15, i1 false)
  %48 = getelementptr inbounds i8, i8* %43, i64 31
  store i8 %42, i8* %48, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 15, i1 false)
  %49 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %26
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %26, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %27)
  br label %154

57:                                               ; preds = %22
  %58 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %58) #8
  %60 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 3, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  %63 = and i1 %59, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %union.anon.94* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #8
  br label %154

68:                                               ; preds = %57
  %69 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %69)
  %70 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #8
  %71 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #8
  %72 = load i32, i32* %14, align 4, !noalias !16
  %73 = icmp slt i32 %72, 1
  br i1 %73, label %74, label %75

74:                                               ; preds = %68
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #8, !alias.scope !16
  br label %82

75:                                               ; preds = %68
  %76 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %77 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !16
  %79 = sext i32 %78 to i64
  %80 = sext i32 %72 to i64
  %81 = getelementptr inbounds %"class.std::__1::allocator.75", %"class.std::__1::allocator.75"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %76, i64 %79, i64 %80, %"class.std::__1::allocator.75"* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #8, !noalias !16
  br label %82

82:                                               ; preds = %74, %75
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_131kLiteVideoBlocklistKeySeparatorE, i64 0, i64 0)) #8, !noalias !21
  %84 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %84, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #8, !noalias !21
  %85 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #8
  %86 = load i8, i8* %23, align 8, !range !7
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %89, !prof !24

88:                                               ; preds = %82
  call void @llvm.trap() #8
  unreachable

89:                                               ; preds = %82
  %90 = load i32, i32* %60, align 4, !noalias !25
  %91 = icmp slt i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #8, !alias.scope !25
  %93 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %108

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.GURL, %class.GURL* %58, i64 0, i32 0
  %96 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 3, i32 0
  %97 = load i32, i32* %96, align 4, !noalias !25
  %98 = sext i32 %97 to i64
  %99 = sext i32 %90 to i64
  %100 = getelementptr inbounds %"class.std::__1::allocator.75", %"class.std::__1::allocator.75"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %100) #8, !noalias !25
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %95, i64 %98, i64 %99, %"class.std::__1::allocator.75"* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %100) #8, !noalias !25
  %101 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1, !noalias !30
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8, !noalias !30
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8, !noalias !30
  br label %108

108:                                              ; preds = %94, %92
  %109 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %94 ], [ %93, %92 ]
  %110 = phi i64 [ %107, %94 ], [ 0, %92 ]
  %111 = phi i8* [ %105, %94 ], [ null, %92 ]
  %112 = phi i8 [ %103, %94 ], [ 0, %92 ]
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %114 = icmp slt i8 %112, 0
  %115 = zext i8 %112 to i64
  %116 = select i1 %114, i8* %111, i8* %85
  %117 = select i1 %114, i64 %110, i64 %115
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %116, i64 %117) #8, !noalias !30
  %119 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast i64* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %123, i64 15, i1 false)
  %124 = getelementptr inbounds i8, i8* %119, i64 23
  %125 = load i8, i8* %124, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #8, !noalias !30
  %126 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = bitcast i8** %127 to i64*
  store i64 %121, i64* %128, align 8
  %129 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast i64* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* nonnull align 8 %69, i64 15, i1 false)
  %131 = getelementptr inbounds i8, i8* %126, i64 31
  store i8 %125, i8* %131, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 15, i1 false)
  %132 = load i8, i8* %113, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %108
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #9
  br label %137

137:                                              ; preds = %108, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #8
  %138 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #9
  br label %145

145:                                              ; preds = %137, %142
  %146 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #9
  br label %153

153:                                              ; preds = %145, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %69)
  br label %154

154:                                              ; preds = %153, %64, %56, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10lite_video22LiteVideoUserBlocklist22ShouldUseSessionPolicyEPN4base9TimeDeltaEPmPi(%"class.lite_video::LiteVideoUserBlocklist"* nocapture readnone, %"class.base::TimeDelta"* nocapture readnone, i64* nocapture readnone, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10lite_video22LiteVideoUserBlocklist25ShouldUsePersistentPolicyEPN4base9TimeDeltaEPmPi(%"class.lite_video::LiteVideoUserBlocklist"* nocapture readnone, %"class.base::TimeDelta"* nocapture readnone, i64* nocapture readnone, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10lite_video22LiteVideoUserBlocklist19ShouldUseHostPolicyEPN4base9TimeDeltaEPmPiS4_(%"class.lite_video::LiteVideoUserBlocklist"* nocapture readnone, %"class.base::TimeDelta"* nocapture, i64* nocapture, i32* nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  %6 = tail call i64 @_ZN10lite_video8features21MaxUserBlocklistHostsEv() #8
  store i64 %6, i64* %4, align 8
  %7 = tail call i64 @_ZN10lite_video8features25UserBlocklistHostDurationEv() #8
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = tail call i32 @_ZN10lite_video8features35UserBlocklistOptOutHistoryThresholdEv() #8
  store i32 %9, i32* %3, align 4
  %10 = tail call i32 @_ZN10lite_video8features35UserBlocklistOptOutHistoryThresholdEv() #8
  %11 = sext i32 %10 to i64
  store i64 %11, i64* %2, align 8
  ret i1 true
}

declare i64 @_ZN10lite_video8features21MaxUserBlocklistHostsEv() local_unnamed_addr #1

declare i64 @_ZN10lite_video8features25UserBlocklistHostDurationEv() local_unnamed_addr #1

declare i32 @_ZN10lite_video8features35UserBlocklistOptOutHistoryThresholdEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10lite_video22LiteVideoUserBlocklist19ShouldUseTypePolicyEPN4base9TimeDeltaEPmPi(%"class.lite_video::LiteVideoUserBlocklist"* nocapture readnone, %"class.base::TimeDelta"* nocapture readnone, i64* nocapture readnone, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10lite_video22LiteVideoUserBlocklist15GetAllowedTypesEv(%"class.std::__1::map.34"* noalias sret, %"class.lite_video::LiteVideoUserBlocklist"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"struct.std::__1::pair"], align 4
  %4 = alloca %"struct.std::__1::less.32", align 1
  %5 = bitcast [2 x %"struct.std::__1::pair"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds [2 x %"struct.std::__1::pair"], [2 x %"struct.std::__1::pair"]* %3, i64 0, i64 0
  %7 = tail call i32 @_ZN10lite_video8features25LiteVideoBlocklistVersionEv() #8
  %8 = getelementptr inbounds [2 x %"struct.std::__1::pair"], [2 x %"struct.std::__1::pair"]* %3, i64 0, i64 0, i32 0
  store i32 2, i32* %8, align 4
  %9 = getelementptr inbounds [2 x %"struct.std::__1::pair"], [2 x %"struct.std::__1::pair"]* %3, i64 0, i64 0, i32 1
  store i32 %7, i32* %9, align 4
  %10 = tail call i32 @_ZN10lite_video8features25LiteVideoBlocklistVersionEv() #8
  %11 = getelementptr inbounds [2 x %"struct.std::__1::pair"], [2 x %"struct.std::__1::pair"]* %3, i64 0, i64 1, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds [2 x %"struct.std::__1::pair"], [2 x %"struct.std::__1::pair"]* %3, i64 0, i64 1, i32 1
  store i32 %10, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.std::__1::less.32", %"struct.std::__1::less.32"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  call void @_ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEC2ESt16initializer_listIS6_ERKS2_(%"class.std::__1::map.34"* %0, %"struct.std::__1::pair"* nonnull %6, i64 2, %"struct.std::__1::less.32"* nonnull dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

declare i32 @_ZN10lite_video8features25LiteVideoBlocklistVersionEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEC2ESt16initializer_listIS6_ERKS2_(%"class.std::__1::map.34"*, %"struct.std::__1::pair"*, i64, %"struct.std::__1::less.32"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %2
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %118, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::map.34"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.34", %"class.std::__1::map.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = ptrtoint %"class.std::__1::__tree_end_node"* %6 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %16

16:                                               ; preds = %114, %11
  %17 = phi %"class.std::__1::__tree_node"* [ null, %11 ], [ %117, %114 ]
  %18 = phi %"class.std::__1::__tree_node_base"* [ null, %11 ], [ %116, %114 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %6, %11 ], [ %115, %114 ]
  %20 = phi %"struct.std::__1::pair"* [ %1, %11 ], [ %112, %114 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %19, %6
  br i1 %22, label %49, label %23

23:                                               ; preds = %16
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.std::__1::__tree_node_base"* [ %28, %25 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %41, label %25

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %35, %30 ], [ %6, %23 ]
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %30, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  br label %41

41:                                               ; preds = %25, %39
  %42 = phi %"class.std::__1::__tree_node_base"* [ %40, %39 ], [ %26, %25 ]
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 4, i64 3
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %21, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %41, %16
  %50 = phi i64 [ %43, %41 ], [ %14, %16 ]
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %51, label %83, label %52

52:                                               ; preds = %49
  %53 = inttoptr i64 %50 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 1
  br label %83

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %56, label %83, label %57

57:                                               ; preds = %55, %79
  %58 = phi %"class.std::__1::__tree_node"* [ %82, %79 ], [ %17, %55 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %5, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %47, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

69:                                               ; preds = %57
  %70 = icmp slt i32 %61, %47
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

77:                                               ; preds = %69
  %78 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

79:                                               ; preds = %71, %63
  %80 = phi %"class.std::__1::__tree_node_base"* [ %65, %63 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node"*
  br label %57

83:                                               ; preds = %55, %49, %52, %67, %75, %77
  %84 = phi i64 [ %50, %52 ], [ %68, %67 ], [ %76, %75 ], [ %78, %77 ], [ %14, %49 ], [ %14, %55 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %64, %67 ], [ %72, %75 ], [ %59, %77 ], [ %15, %49 ], [ %15, %55 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node"**
  %87 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node"* %87, null
  br i1 %88, label %89, label %111

89:                                               ; preds = %83
  %90 = tail call i8* @_Znwm(i64 40) #9, !noalias !33
  %91 = getelementptr inbounds i8, i8* %90, i64 28
  %92 = bitcast %"struct.std::__1::pair"* %20 to i64*
  %93 = bitcast i8* %91 to i64*
  %94 = load i64, i64* %92, align 4, !noalias !33
  store i64 %94, i64* %93, align 4, !noalias !33
  %95 = bitcast i8* %90 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds i8, i8* %90, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #8
  %97 = bitcast i8* %96 to i64*
  store i64 %84, i64* %97, align 8
  %98 = bitcast %"class.std::__1::__tree_node_base"** %85 to i8**
  store i8* %90, i8** %98, align 8
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %89
  %104 = ptrtoint %"class.std::__1::__tree_node_base"* %101 to i64
  store i64 %104, i64* %12, align 8
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  br label %106

106:                                              ; preds = %103, %89
  %107 = phi %"class.std::__1::__tree_node_base"* [ %95, %89 ], [ %105, %103 ]
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %108, %"class.std::__1::__tree_node_base"* %107) #8
  %109 = load i64, i64* %13, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %13, align 8
  br label %111

111:                                              ; preds = %106, %83
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %113 = icmp eq %"struct.std::__1::pair"* %112, %9
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %117 = bitcast %"class.std::__1::__tree_node_base"* %116 to %"class.std::__1::__tree_node"*
  br label %16

118:                                              ; preds = %111, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video22LiteVideoUserBlocklist24AddNavigationToBlocklistEPN7content16NavigationHandleEb(%"class.lite_video::LiteVideoUserBlocklist"*, %"class.content::NavigationHandle"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator.75", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.content::NavigationHandle"* %1 to %class.GURL* (%"class.content::NavigationHandle"*)***
  %7 = load %class.GURL* (%"class.content::NavigationHandle"*)**, %class.GURL* (%"class.content::NavigationHandle"*)*** %6, align 8
  %8 = getelementptr inbounds %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %7, i64 4
  %9 = load %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %8, align 8
  %10 = tail call dereferenceable(120) %class.GURL* %9(%"class.content::NavigationHandle"* %1) #8
  %11 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %10) #8
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 2, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %16, label %44

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = load %class.GURL* (%"class.content::NavigationHandle"*)**, %class.GURL* (%"class.content::NavigationHandle"*)*** %6, align 8
  %20 = getelementptr inbounds %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %19, i64 4
  %21 = load %class.GURL* (%"class.content::NavigationHandle"*)*, %class.GURL* (%"class.content::NavigationHandle"*)** %20, align 8
  %22 = tail call dereferenceable(120) %class.GURL* %21(%"class.content::NavigationHandle"* %1) #8
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 1
  %24 = load i32, i32* %23, align 4, !noalias !36
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %27

26:                                               ; preds = %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #8, !alias.scope !36
  br label %34

27:                                               ; preds = %16
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 0
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %22, i64 0, i32 2, i32 3, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !36
  %31 = sext i32 %30 to i64
  %32 = sext i32 %24 to i64
  %33 = getelementptr inbounds %"class.std::__1::allocator.75", %"class.std::__1::allocator.75"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #8, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %28, i64 %31, i64 %32, %"class.std::__1::allocator.75"* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #8, !noalias !36
  br label %34

34:                                               ; preds = %26, %27
  %35 = call i64 @_ZN9blocklist15OptOutBlocklist8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbi(%"class.blocklist::OptOutBlocklist"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i1 zeroext %2, i32 2) #8
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  br label %44

44:                                               ; preds = %3, %43
  ret void
}

declare i64 @_ZN9blocklist15OptOutBlocklist8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbi(%"class.blocklist::OptOutBlocklist"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video22LiteVideoUserBlocklist22AddRebufferToBlocklistERK4GURLN4absl8optionalIS1_EEb(%"class.lite_video::LiteVideoUserBlocklist"*, %class.GURL* dereferenceable(120), %"class.absl::optional.95"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.90", align 8
  %6 = alloca %"class.absl::optional.95", align 8
  %7 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 128, i1 false) #8
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %14, %class.GURL* dereferenceable(120) %13) #8
  store i8 1, i8* %8, align 8
  br label %15

15:                                               ; preds = %4, %12
  call fastcc void @_ZN12_GLOBAL__N_123GetRebufferBlocklistKeyERK4GURLN4absl8optionalIS0_EE(%"class.absl::optional.90"* nonnull sret %5, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.95"* nonnull %6)
  %16 = load i8, i8* %8, align 8, !range !7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.absl::optional.95", %"class.absl::optional.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %19) #8
  store i8 0, i8* %8, align 8
  br label %20

20:                                               ; preds = %15, %18
  %21 = load i8, i8* %7, align 8, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.lite_video::LiteVideoUserBlocklist", %"class.lite_video::LiteVideoUserBlocklist"* %0, i64 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = call i64 @_ZN9blocklist15OptOutBlocklist8AddEntryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbi(%"class.blocklist::OptOutBlocklist"* %24, %"class.std::__1::basic_string"* dereferenceable(24) %25, i1 zeroext %3, i32 1) #8
  %27 = load i8, i8* %7, align 8, !range !7
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.absl::optional.90", %"class.absl::optional.90"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %35, %29
  store i8 0, i8* %7, align 8
  br label %39

39:                                               ; preds = %20, %23, %38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret void
}

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.75"* dereferenceable(1)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !7
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !7
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !7
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL4hostEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL4hostEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!10 = distinct !{!10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!11 = distinct !{!11, !12, !"_ZNK4GURL4hostEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL4hostEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!18 = distinct !{!18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!19 = distinct !{!19, !20, !"_ZNK4GURL4hostEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4GURL4hostEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!24 = !{!"branch_weights", i32 1, i32 2000}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!27 = distinct !{!27, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!28 = distinct !{!28, !29, !"_ZNK4GURL4hostEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4GURL4hostEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_4pairIKiiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISJ_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_4pairIKiiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISJ_EEEEEEDpOT_"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!38 = distinct !{!38, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!39 = distinct !{!39, !40, !"_ZNK4GURL4hostEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4GURL4hostEv"}
