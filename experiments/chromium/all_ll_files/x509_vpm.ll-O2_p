; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_vpm.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_vpm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_X509_VERIFY_PARAM = type opaque
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type { %struct.stack_st_OPENSSL_STRING*, i32, i8*, i8*, i64, i8*, i64, i8 }
%struct.stack_st_OPENSSL_STRING = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }

@param_table = internal unnamed_addr global %struct.stack_st_X509_VERIFY_PARAM* null, align 8
@default_table = internal constant [5 x %struct.X509_VERIFY_PARAM_st] [%struct.X509_VERIFY_PARAM_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64 0, i64 0, i64 0, i32 0, i32 0, i32 100, %struct.stack_st_ASN1_OBJECT* null, %struct.X509_VERIFY_PARAM_ID_st* @_empty_id }, %struct.X509_VERIFY_PARAM_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i64 0, i64 0, i64 0, i32 4, i32 4, i32 -1, %struct.stack_st_ASN1_OBJECT* null, %struct.X509_VERIFY_PARAM_ID_st* @_empty_id }, %struct.X509_VERIFY_PARAM_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i64 0, i64 0, i64 0, i32 4, i32 4, i32 -1, %struct.stack_st_ASN1_OBJECT* null, %struct.X509_VERIFY_PARAM_ID_st* @_empty_id }, %struct.X509_VERIFY_PARAM_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i64 0, i64 0, i64 0, i32 1, i32 2, i32 -1, %struct.stack_st_ASN1_OBJECT* null, %struct.X509_VERIFY_PARAM_ID_st* @_empty_id }, %struct.X509_VERIFY_PARAM_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i64 0, i64 0, i64 0, i32 2, i32 3, i32 -1, %struct.stack_st_ASN1_OBJECT* null, %struct.X509_VERIFY_PARAM_ID_st* @_empty_id }], align 16
@.str = private unnamed_addr constant [8 x i8] c"default\00", align 1
@_empty_id = internal constant %struct.X509_VERIFY_PARAM_ID_st zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"pkcs7\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"smime_sign\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"ssl_client\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"ssl_server\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 64) #9
  %2 = bitcast i8* %1 to %struct.X509_VERIFY_PARAM_st*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %0
  %5 = tail call i8* @OPENSSL_malloc(i64 64) #9
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @OPENSSL_free(i8* nonnull %1) #9
  br label %11

8:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1, i8 0, i64 56, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 64, i1 false) #9
  %9 = getelementptr inbounds i8, i8* %1, i64 56
  %10 = bitcast i8* %9 to i8**
  store i8* %5, i8** %10, align 8
  tail call fastcc void @x509_verify_param_zero(%struct.X509_VERIFY_PARAM_st* nonnull %2)
  br label %11

11:                                               ; preds = %0, %8, %7
  %12 = phi %struct.X509_VERIFY_PARAM_st* [ %2, %8 ], [ null, %7 ], [ null, %0 ]
  ret %struct.X509_VERIFY_PARAM_st* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @x509_verify_param_zero(%struct.X509_VERIFY_PARAM_st*) unnamed_addr #0 {
  %2 = icmp eq %struct.X509_VERIFY_PARAM_st* %0, null
  br i1 %2, label %40, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  store i32 -1, i32* %6, align 8
  %8 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 7
  %9 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %8, align 8
  %10 = icmp eq %struct.stack_st_ASN1_OBJECT* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast %struct.stack_st_ASN1_OBJECT* %9 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %12, void (void (i8*)*, i8*)* nonnull @sk_ASN1_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.asn1_object_st*)* @ASN1_OBJECT_free to void (i8*)*)) #9
  store %struct.stack_st_ASN1_OBJECT* null, %struct.stack_st_ASN1_OBJECT** %8, align 8
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %15 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %14, align 8
  %16 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %15, i64 0, i32 0
  %17 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %16, align 8
  %18 = icmp eq %struct.stack_st_OPENSSL_STRING* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %struct.stack_st_OPENSSL_STRING* %17 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %20, void (void (i8*)*, i8*)* nonnull @sk_OPENSSL_STRING_call_free_func, void (i8*)* nonnull @str_free) #9
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %16, align 8
  br label %21

21:                                               ; preds = %13, %19
  %22 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %15, i64 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @OPENSSL_free(i8* nonnull %23) #9
  store i8* null, i8** %22, align 8
  br label %26

26:                                               ; preds = %21, %25
  %27 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %15, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  tail call void @OPENSSL_free(i8* nonnull %28) #9
  %31 = bitcast i8** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %15, i64 0, i32 5
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void @OPENSSL_free(i8* nonnull %34) #9
  %37 = bitcast i8** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %15, i64 0, i32 7
  store i8 0, i8* %39, align 8
  br label %40

40:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st*) #0 {
  %2 = icmp eq %struct.X509_VERIFY_PARAM_st* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  tail call fastcc void @x509_verify_param_zero(%struct.X509_VERIFY_PARAM_st* nonnull %0)
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %5 = bitcast %struct.X509_VERIFY_PARAM_ID_st** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @OPENSSL_free(i8* %6) #9
  %7 = bitcast %struct.X509_VERIFY_PARAM_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %7) #9
  br label %8

8:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_inherit(%struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_VERIFY_PARAM_st* %1, null
  br i1 %3, label %229, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 8
  %6 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  %7 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, %8
  %12 = and i64 %11, 16
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i64 0, i64* %7, align 8
  br label %15

15:                                               ; preds = %4, %14
  %16 = and i64 %11, 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %229

18:                                               ; preds = %15
  %19 = and i64 %11, 1
  %20 = icmp eq i64 %19, 0
  %21 = and i64 %11, 2
  %22 = icmp ne i64 %21, 0
  %23 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  br i1 %22, label %56, label %25

25:                                               ; preds = %18
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  br i1 %20, label %28, label %32

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28, %27
  %33 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 4
  store i32 %24, i32* %33, align 8
  br label %34

34:                                               ; preds = %28, %25, %32
  %35 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  br i1 %20, label %39, label %43

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39, %38
  %44 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 5
  store i32 %36, i32* %44, align 4
  br label %45

45:                                               ; preds = %39, %34, %43
  %46 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  br i1 %20, label %50, label %54

50:                                               ; preds = %49
  %51 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %66

54:                                               ; preds = %50, %49
  %55 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  store i32 %47, i32* %55, align 8
  br label %66

56:                                               ; preds = %18
  %57 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 4
  store i32 %24, i32* %57, align 8
  %58 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 5
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  br label %71

66:                                               ; preds = %50, %45, %54
  %67 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %56, %66
  %72 = phi i64 [ %65, %56 ], [ %68, %66 ]
  %73 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 1
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %77 = and i64 %72, -3
  store i64 %77, i64* %76, align 8
  br label %78

78:                                               ; preds = %66, %71
  %79 = phi i64 [ %68, %66 ], [ %77, %71 ]
  %80 = and i64 %11, 4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  store i64 0, i64* %83, align 8
  br label %84

84:                                               ; preds = %78, %82
  %85 = phi i64 [ %79, %78 ], [ 0, %82 ]
  %86 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 3
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %89 = or i64 %85, %87
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %1, i64 0, i32 7
  %91 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %90, align 8
  br i1 %22, label %99, label %92

92:                                               ; preds = %84
  %93 = icmp eq %struct.stack_st_ASN1_OBJECT* %91, null
  br i1 %93, label %103, label %94

94:                                               ; preds = %92
  br i1 %20, label %95, label %99

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 7
  %97 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %96, align 8
  %98 = icmp eq %struct.stack_st_ASN1_OBJECT* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %84, %94, %95
  %100 = tail call i32 @X509_VERIFY_PARAM_set1_policies(%struct.X509_VERIFY_PARAM_st* %0, %struct.stack_st_ASN1_OBJECT* %91)
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %229, label %102

102:                                              ; preds = %99
  br i1 %22, label %115, label %103

103:                                              ; preds = %95, %92, %102
  %104 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  %105 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %104, i64 0, i32 0
  %106 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %105, align 8
  %107 = icmp eq %struct.stack_st_OPENSSL_STRING* %106, null
  br i1 %107, label %145, label %108

108:                                              ; preds = %103
  br i1 %20, label %109, label %115

109:                                              ; preds = %108
  %110 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %111 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %110, align 8
  %112 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %111, i64 0, i32 0
  %113 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %112, align 8
  %114 = icmp eq %struct.stack_st_OPENSSL_STRING* %113, null
  br i1 %114, label %115, label %145

115:                                              ; preds = %108, %109, %102
  %116 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %117 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %116, align 8
  %118 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %117, i64 0, i32 0
  %119 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %118, align 8
  %120 = icmp eq %struct.stack_st_OPENSSL_STRING* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %115
  %122 = bitcast %struct.stack_st_OPENSSL_STRING* %119 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %122, void (void (i8*)*, i8*)* nonnull @sk_OPENSSL_STRING_call_free_func, void (i8*)* nonnull @str_free) #9
  %123 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %116, align 8
  %124 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %123, i64 0, i32 0
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %124, align 8
  br label %125

125:                                              ; preds = %115, %121
  %126 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 0
  %127 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %126, align 8
  %128 = icmp eq %struct.stack_st_OPENSSL_STRING* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = bitcast %struct.stack_st_OPENSSL_STRING* %127 to %struct.stack_st*
  %131 = tail call %struct.stack_st* @sk_deep_copy(%struct.stack_st* nonnull %130, i8* (i8* (i8*)*, i8*)* nonnull @sk_OPENSSL_STRING_call_copy_func, i8* (i8*)* nonnull @str_copy, void (void (i8*)*, i8*)* nonnull @sk_OPENSSL_STRING_call_free_func, void (i8*)* nonnull @str_free) #9
  %132 = bitcast %struct.X509_VERIFY_PARAM_ID_st** %116 to %struct.stack_st***
  %133 = load %struct.stack_st**, %struct.stack_st*** %132, align 8
  store %struct.stack_st* %131, %struct.stack_st** %133, align 8
  %134 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %116, align 8
  %135 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %134, i64 0, i32 0
  %136 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %135, align 8
  %137 = icmp eq %struct.stack_st_OPENSSL_STRING* %136, null
  br i1 %137, label %229, label %138

138:                                              ; preds = %129
  %139 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %134, i64 0, i32 1
  store i32 %140, i32* %141, align 8
  br label %142

142:                                              ; preds = %125, %138
  br i1 %22, label %157, label %143

143:                                              ; preds = %142
  %144 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  br label %145

145:                                              ; preds = %143, %109, %103
  %146 = phi %struct.X509_VERIFY_PARAM_ID_st* [ %144, %143 ], [ %104, %109 ], [ %104, %103 ]
  %147 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %146, i64 0, i32 3
  %148 = load i8*, i8** %147, align 8
  %149 = icmp eq i8* %148, null
  br i1 %149, label %186, label %150

150:                                              ; preds = %145
  br i1 %20, label %151, label %157

151:                                              ; preds = %150
  %152 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %153 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %152, align 8
  %154 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %153, i64 0, i32 3
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %186

157:                                              ; preds = %150, %151, %142
  %158 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 3
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 4
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %179, label %163

163:                                              ; preds = %157
  %164 = tail call i8* @memchr(i8* %159, i32 0, i64 %161) #10
  %165 = icmp eq i8* %164, null
  br i1 %165, label %166, label %179

166:                                              ; preds = %163
  %167 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %168 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %167, align 8
  %169 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %168, i64 0, i32 3
  %170 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %168, i64 0, i32 4
  %171 = icmp eq i8* %159, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %166
  %173 = tail call i8* @OPENSSL_memdup(i8* nonnull %159, i64 %161) #9
  %174 = icmp eq i8* %173, null
  br i1 %174, label %179, label %175

175:                                              ; preds = %172
  %176 = load i8*, i8** %169, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %175
  tail call void @OPENSSL_free(i8* nonnull %176) #9
  br label %183

179:                                              ; preds = %157, %163, %166, %172
  %180 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %181 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %180, align 8
  %182 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %181, i64 0, i32 7
  store i8 1, i8* %182, align 8
  br label %229

183:                                              ; preds = %178, %175
  store i8* %173, i8** %169, align 8
  store i64 %161, i64* %170, align 8
  br i1 %22, label %198, label %184

184:                                              ; preds = %183
  %185 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  br label %186

186:                                              ; preds = %184, %151, %145
  %187 = phi %struct.X509_VERIFY_PARAM_ID_st* [ %185, %184 ], [ %146, %151 ], [ %146, %145 ]
  %188 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %187, i64 0, i32 5
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %222, label %191

191:                                              ; preds = %186
  br i1 %20, label %192, label %198

192:                                              ; preds = %191
  %193 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %194 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %193, align 8
  %195 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %194, i64 0, i32 5
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %198, label %222

198:                                              ; preds = %191, %192, %183
  %199 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 5
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 6
  %202 = load i64, i64* %201, align 8
  switch i64 %202, label %216 [
    i64 16, label %203
    i64 4, label %203
  ]

203:                                              ; preds = %198, %198
  %204 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %205 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %204, align 8
  %206 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %205, i64 0, i32 5
  %207 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %205, i64 0, i32 6
  %208 = icmp eq i8* %200, null
  br i1 %208, label %216, label %209

209:                                              ; preds = %203
  %210 = tail call i8* @OPENSSL_memdup(i8* nonnull %200, i64 %202) #9
  %211 = icmp eq i8* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %209
  %213 = load i8*, i8** %206, align 8
  %214 = icmp eq i8* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %212
  tail call void @OPENSSL_free(i8* nonnull %213) #9
  br label %220

216:                                              ; preds = %198, %203, %209
  %217 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %218 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %217, align 8
  %219 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %218, i64 0, i32 7
  store i8 1, i8* %219, align 8
  br label %229

220:                                              ; preds = %212, %215
  store i8* %210, i8** %206, align 8
  store i64 %202, i64* %207, align 8
  %221 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  br label %222

222:                                              ; preds = %220, %186, %192
  %223 = phi %struct.X509_VERIFY_PARAM_ID_st* [ %221, %220 ], [ %187, %186 ], [ %187, %192 ]
  %224 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %223, i64 0, i32 7
  %225 = load i8, i8* %224, align 8
  %226 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %227 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %226, align 8
  %228 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %227, i64 0, i32 7
  store i8 %225, i8* %228, align 8
  br label %229

229:                                              ; preds = %216, %179, %129, %99, %15, %2, %222
  %230 = phi i32 [ 1, %222 ], [ 1, %2 ], [ 1, %15 ], [ 0, %99 ], [ 0, %129 ], [ 0, %179 ], [ 0, %216 ]
  ret i32 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_policies(%struct.X509_VERIFY_PARAM_st*, %struct.stack_st_ASN1_OBJECT*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_VERIFY_PARAM_st* %0, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 7
  %6 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %5, align 8
  %7 = icmp eq %struct.stack_st_ASN1_OBJECT* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = bitcast %struct.stack_st_ASN1_OBJECT* %6 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %9, void (void (i8*)*, i8*)* nonnull @sk_ASN1_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.asn1_object_st*)* @ASN1_OBJECT_free to void (i8*)*)) #9
  br label %10

10:                                               ; preds = %4, %8
  %11 = icmp eq %struct.stack_st_ASN1_OBJECT* %1, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store %struct.stack_st_ASN1_OBJECT* null, %struct.stack_st_ASN1_OBJECT** %5, align 8
  br label %41

13:                                               ; preds = %10
  %14 = tail call %struct.stack_st* @sk_new_null() #9
  %15 = bitcast %struct.stack_st_ASN1_OBJECT** %5 to %struct.stack_st**
  store %struct.stack_st* %14, %struct.stack_st** %15, align 8
  %16 = icmp eq %struct.stack_st* %14, null
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = bitcast %struct.stack_st_ASN1_OBJECT* %1 to %struct.stack_st*
  %19 = tail call i64 @sk_num(%struct.stack_st* nonnull %18) #9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %37, label %24

21:                                               ; preds = %30
  %22 = tail call i64 @sk_num(%struct.stack_st* nonnull %18) #9
  %23 = icmp ult i64 %35, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %17, %21
  %25 = phi i64 [ %35, %21 ], [ 0, %17 ]
  %26 = tail call i8* @sk_value(%struct.stack_st* nonnull %18, i64 %25) #9
  %27 = bitcast i8* %26 to %struct.asn1_object_st*
  %28 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* %27) #9
  %29 = icmp eq %struct.asn1_object_st* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %24
  %31 = load %struct.stack_st*, %struct.stack_st** %15, align 8
  %32 = bitcast %struct.asn1_object_st* %28 to i8*
  %33 = tail call i64 @sk_push(%struct.stack_st* %31, i8* nonnull %32) #9
  %34 = icmp eq i64 %33, 0
  %35 = add nuw i64 %25, 1
  br i1 %34, label %36, label %21

36:                                               ; preds = %30
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* nonnull %28) #9
  br label %41

37:                                               ; preds = %21, %17
  %38 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = or i64 %39, 128
  store i64 %40, i64* %38, align 8
  br label %41

41:                                               ; preds = %24, %13, %2, %37, %36, %12
  %42 = phi i32 [ 0, %36 ], [ 1, %37 ], [ 1, %12 ], [ 0, %2 ], [ 0, %13 ], [ 0, %24 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal void @str_free(i8*) #0 {
  tail call void @OPENSSL_free(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @str_copy(i8*) #0 {
  %2 = tail call i8* @OPENSSL_strdup(i8* %0) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_email(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = tail call i8* @memchr(i8* %1, i32 0, i64 %2) #10
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %10 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %9, align 8
  %11 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %10, i64 0, i32 3
  %12 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %10, i64 0, i32 4
  %13 = icmp eq i8* %1, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %8
  %15 = tail call i8* @OPENSSL_memdup(i8* nonnull %1, i64 %2) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = load i8*, i8** %11, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @OPENSSL_free(i8* nonnull %18) #9
  br label %21

21:                                               ; preds = %20, %17
  store i8* %15, i8** %11, align 8
  %22 = icmp eq i64* %12, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  store i64 %2, i64* %12, align 8
  br label %28

24:                                               ; preds = %3, %14, %8, %5
  %25 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %26 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %25, align 8
  %27 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %26, i64 0, i32 7
  store i8 1, i8* %27, align 8
  br label %28

28:                                               ; preds = %23, %21, %24
  %29 = phi i32 [ 0, %24 ], [ 1, %21 ], [ 1, %23 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_ip(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  switch i64 %2, label %20 [
    i64 16, label %4
    i64 4, label %4
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %6 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %5, align 8
  %7 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 5
  %8 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %6, i64 0, i32 6
  %9 = icmp eq i8* %1, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %4
  %11 = tail call i8* @OPENSSL_memdup(i8* nonnull %1, i64 %2) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = load i8*, i8** %7, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @OPENSSL_free(i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %16, %13
  store i8* %11, i8** %7, align 8
  %18 = icmp eq i64* %8, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  store i64 %2, i64* %8, align 8
  br label %24

20:                                               ; preds = %10, %4, %3
  %21 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %22 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %21, align 8
  %23 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %22, i64 0, i32 7
  store i8 1, i8* %23, align 8
  br label %24

24:                                               ; preds = %19, %17, %20
  %25 = phi i32 [ 0, %20 ], [ 1, %17 ], [ 1, %19 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1(%struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st* readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = or i64 %4, 1
  store i64 %5, i64* %3, align 8
  %6 = tail call i32 @X509_VERIFY_PARAM_inherit(%struct.X509_VERIFY_PARAM_st* %0, %struct.X509_VERIFY_PARAM_st* %1)
  store i64 %4, i64* %3, align 8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_name(%struct.X509_VERIFY_PARAM_st* nocapture, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @OPENSSL_free(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %2, %6
  %8 = tail call i8* @OPENSSL_strdup(i8* %1) #9
  store i8* %8, i8** %3, align 8
  %9 = icmp ne i8* %8, null
  %10 = zext i1 %9 to i32
  ret i32 %10
}

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set_flags(%struct.X509_VERIFY_PARAM_st* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = or i64 %4, %1
  %6 = and i64 %1, 1920
  %7 = icmp eq i64 %6, 0
  %8 = or i64 %5, 128
  %9 = select i1 %7, i64 %5, i64 %8
  store i64 %9, i64* %3, align 8
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_clear_flags(%struct.X509_VERIFY_PARAM_st* nocapture, i64) local_unnamed_addr #3 {
  %3 = xor i64 %1, -1
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, %3
  store i64 %6, i64* %4, align 8
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @X509_VERIFY_PARAM_get_flags(%struct.X509_VERIFY_PARAM_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set_purpose(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 4
  %4 = tail call i32 @X509_PURPOSE_set(i32* %3, i32 %1) #9
  ret i32 %4
}

declare i32 @X509_PURPOSE_set(i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set_trust(%struct.X509_VERIFY_PARAM_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 5
  %4 = tail call i32 @X509_TRUST_set(i32* %3, i32 %1) #9
  ret i32 %4
}

declare i32 @X509_TRUST_set(i32*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509_VERIFY_PARAM_set_depth(%struct.X509_VERIFY_PARAM_st* nocapture, i32) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @X509_VERIFY_PARAM_set_time(%struct.X509_VERIFY_PARAM_st* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 2
  store i64 %6, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_add0_policy(%struct.X509_VERIFY_PARAM_st* nocapture, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 7
  %4 = load %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT** %3, align 8
  %5 = icmp eq %struct.stack_st_ASN1_OBJECT* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.stack_st_ASN1_OBJECT* %4 to %struct.stack_st*
  br label %12

8:                                                ; preds = %2
  %9 = tail call %struct.stack_st* @sk_new_null() #9
  %10 = bitcast %struct.stack_st_ASN1_OBJECT** %3 to %struct.stack_st**
  store %struct.stack_st* %9, %struct.stack_st** %10, align 8
  %11 = icmp eq %struct.stack_st* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6, %8
  %13 = phi %struct.stack_st* [ %9, %8 ], [ %7, %6 ]
  %14 = bitcast %struct.asn1_object_st* %1 to i8*
  %15 = tail call i64 @sk_push(%struct.stack_st* %13, i8* %14) #9
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %12, %8
  %19 = phi i32 [ 0, %8 ], [ %17, %12 ]
  ret i32 %19
}

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) #2

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_host(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %5 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %4, align 8
  %6 = tail call fastcc i32 @int_x509_param_set_hosts(%struct.X509_VERIFY_PARAM_ID_st* %5, i32 0, i8* %1, i64 %2)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %4, align 8
  %10 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %9, i64 0, i32 7
  store i8 1, i8* %10, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ 0, %8 ], [ 1, %3 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @int_x509_param_set_hosts(%struct.X509_VERIFY_PARAM_ID_st* nocapture, i32, i8*, i64) unnamed_addr #0 {
  %5 = icmp eq i8* %2, null
  %6 = icmp eq i64 %3, 0
  %7 = or i1 %5, %6
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @memchr(i8* nonnull %2, i32 0, i64 %3) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %45

11:                                               ; preds = %8
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %0, i64 0, i32 0
  %15 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %14, align 8
  %16 = icmp eq %struct.stack_st_OPENSSL_STRING* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %struct.stack_st_OPENSSL_STRING* %15 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %18, void (void (i8*)*, i8*)* nonnull @sk_OPENSSL_STRING_call_free_func, void (i8*)* nonnull @str_free) #9
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %14, align 8
  br label %19

19:                                               ; preds = %13, %17, %11
  %20 = tail call i8* @OPENSSL_strndup(i8* nonnull %2, i64 %3) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %0, i64 0, i32 0
  %24 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %23, align 8
  %25 = icmp eq %struct.stack_st_OPENSSL_STRING* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %struct.stack_st_OPENSSL_STRING* %24 to %struct.stack_st*
  %28 = bitcast %struct.X509_VERIFY_PARAM_ID_st* %0 to %struct.stack_st**
  br label %34

29:                                               ; preds = %22
  %30 = tail call %struct.stack_st* @sk_new_null() #9
  %31 = bitcast %struct.X509_VERIFY_PARAM_ID_st* %0 to %struct.stack_st**
  store %struct.stack_st* %30, %struct.stack_st** %31, align 8
  %32 = icmp eq %struct.stack_st* %30, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @OPENSSL_free(i8* nonnull %20) #9
  br label %45

34:                                               ; preds = %26, %29
  %35 = phi %struct.stack_st** [ %28, %26 ], [ %31, %29 ]
  %36 = phi %struct.stack_st* [ %27, %26 ], [ %30, %29 ]
  %37 = tail call i64 @sk_push(%struct.stack_st* %36, i8* nonnull %20) #9
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  tail call void @OPENSSL_free(i8* nonnull %20) #9
  %40 = load %struct.stack_st*, %struct.stack_st** %35, align 8
  %41 = tail call i64 @sk_num(%struct.stack_st* %40) #9
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = load %struct.stack_st*, %struct.stack_st** %35, align 8
  tail call void @sk_free(%struct.stack_st* %44) #9
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %23, align 8
  br label %45

45:                                               ; preds = %34, %39, %43, %19, %8, %4, %33
  %46 = phi i32 [ 0, %33 ], [ 0, %4 ], [ 0, %8 ], [ 0, %19 ], [ 0, %43 ], [ 0, %39 ], [ 1, %34 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_add1_host(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %5 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %4, align 8
  %6 = tail call fastcc i32 @int_x509_param_set_hosts(%struct.X509_VERIFY_PARAM_ID_st* %5, i32 1, i8* %1, i64 %2)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %4, align 8
  %10 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %9, i64 0, i32 7
  store i8 1, i8* %10, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ 0, %8 ], [ 1, %3 ]
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @X509_VERIFY_PARAM_set_hostflags(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %4 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %3, align 8
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %4, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @X509_VERIFY_PARAM_get0_peername(%struct.X509_VERIFY_PARAM_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %3 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %2, align 8
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %3, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_set1_ip_asc(%struct.X509_VERIFY_PARAM_st* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 16, i1 false)
  %5 = call i32 @a2i_ipadd(i8* nonnull %4, i8* %1) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  switch i64 %8, label %21 [
    i64 16, label %9
    i64 4, label %9
  ]

9:                                                ; preds = %7, %7
  %10 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %11 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %10, align 8
  %12 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %11, i64 0, i32 5
  %13 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %11, i64 0, i32 6
  %14 = call i8* @OPENSSL_memdup(i8* nonnull %4, i64 %8) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %9
  %17 = load i8*, i8** %12, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  call void @OPENSSL_free(i8* nonnull %17) #9
  br label %20

20:                                               ; preds = %19, %16
  store i8* %14, i8** %12, align 8
  store i64 %8, i64* %13, align 8
  br label %25

21:                                               ; preds = %9, %7
  %22 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 8
  %23 = load %struct.X509_VERIFY_PARAM_ID_st*, %struct.X509_VERIFY_PARAM_ID_st** %22, align 8
  %24 = getelementptr inbounds %struct.X509_VERIFY_PARAM_ID_st, %struct.X509_VERIFY_PARAM_ID_st* %23, i64 0, i32 7
  store i8 1, i8* %24, align 8
  br label %25

25:                                               ; preds = %21, %20, %2
  %26 = phi i32 [ 0, %2 ], [ 0, %21 ], [ 1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret i32 %26
}

declare i32 @a2i_ipadd(i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_get_depth(%struct.X509_VERIFY_PARAM_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @X509_VERIFY_PARAM_get0_name(%struct.X509_VERIFY_PARAM_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_add0_table(%struct.X509_VERIFY_PARAM_st*) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = load %struct.stack_st_X509_VERIFY_PARAM*, %struct.stack_st_X509_VERIFY_PARAM** @param_table, align 8
  %4 = icmp eq %struct.stack_st_X509_VERIFY_PARAM* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = tail call %struct.stack_st* @sk_new(i32 (i8**, i8**)* bitcast (i32 (%struct.X509_VERIFY_PARAM_st**, %struct.X509_VERIFY_PARAM_st**)* @param_cmp to i32 (i8**, i8**)*)) #9
  store %struct.stack_st* %6, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %7 = icmp eq %struct.stack_st* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %5
  %9 = bitcast %struct.X509_VERIFY_PARAM_st* %0 to i8*
  br label %33

10:                                               ; preds = %1
  %11 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i64 -6148914691236517206, i64* %2, align 8
  %12 = bitcast %struct.stack_st_X509_VERIFY_PARAM* %3 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %12) #9
  %13 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %14 = bitcast %struct.X509_VERIFY_PARAM_st* %0 to i8*
  %15 = call i32 @sk_find(%struct.stack_st* %13, i64* nonnull %2, i8* %14, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_VERIFY_PARAM_call_cmp_func) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %10
  %18 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %19 = load i64, i64* %2, align 8
  %20 = call i8* @sk_value(%struct.stack_st* %18, i64 %19) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = bitcast i8* %20 to %struct.X509_VERIFY_PARAM_st*
  call fastcc void @x509_verify_param_zero(%struct.X509_VERIFY_PARAM_st* nonnull %23) #9
  %24 = getelementptr inbounds i8, i8* %20, i64 56
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  call void @OPENSSL_free(i8* %26) #9
  call void @OPENSSL_free(i8* nonnull %20) #9
  br label %27

27:                                               ; preds = %17, %22
  %28 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %29 = load i64, i64* %2, align 8
  %30 = call i8* @sk_delete(%struct.stack_st* %28, i64 %29) #9
  br label %31

31:                                               ; preds = %10, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %32 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  br label %33

33:                                               ; preds = %8, %31
  %34 = phi i8* [ %9, %8 ], [ %14, %31 ]
  %35 = phi %struct.stack_st* [ %6, %8 ], [ %32, %31 ]
  %36 = call i64 @sk_push(%struct.stack_st* %35, i8* %34) #9
  %37 = icmp ne i64 %36, 0
  %38 = zext i1 %37 to i32
  br label %39

39:                                               ; preds = %33, %5
  %40 = phi i32 [ 0, %5 ], [ %38, %33 ]
  ret i32 %40
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @param_cmp(%struct.X509_VERIFY_PARAM_st** nocapture readonly, %struct.X509_VERIFY_PARAM_st** nocapture readonly) #6 {
  %3 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %0, align 8
  %4 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %1, align 8
  %7 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @strcmp(i8* %5, i8* %8) #10
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_VERIFY_PARAM_get_count() local_unnamed_addr #0 {
  %1 = load %struct.stack_st_X509_VERIFY_PARAM*, %struct.stack_st_X509_VERIFY_PARAM** @param_table, align 8
  %2 = icmp eq %struct.stack_st_X509_VERIFY_PARAM* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %struct.stack_st_X509_VERIFY_PARAM* %1 to %struct.stack_st*
  %5 = tail call i64 @sk_num(%struct.stack_st* nonnull %4) #9
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 5
  br label %8

8:                                                ; preds = %0, %3
  %9 = phi i32 [ %7, %3 ], [ 5, %0 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_get0(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 5
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 %4
  br label %12

6:                                                ; preds = %1
  %7 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %8 = add nsw i32 %0, -5
  %9 = sext i32 %8 to i64
  %10 = tail call i8* @sk_value(%struct.stack_st* %7, i64 %9) #9
  %11 = bitcast i8* %10 to %struct.X509_VERIFY_PARAM_st*
  br label %12

12:                                               ; preds = %6, %3
  %13 = phi %struct.X509_VERIFY_PARAM_st* [ %5, %3 ], [ %11, %6 ]
  ret %struct.X509_VERIFY_PARAM_st* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_lookup(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.X509_VERIFY_PARAM_st, align 8
  %3 = alloca i64, align 8
  %4 = bitcast %struct.X509_VERIFY_PARAM_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %2, i64 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %struct.X509_VERIFY_PARAM_st, %struct.X509_VERIFY_PARAM_st* %2, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = load %struct.stack_st_X509_VERIFY_PARAM*, %struct.stack_st_X509_VERIFY_PARAM** @param_table, align 8
  %9 = icmp eq %struct.stack_st_X509_VERIFY_PARAM* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i64 -6148914691236517206, i64* %3, align 8
  %12 = bitcast %struct.stack_st_X509_VERIFY_PARAM* %8 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %12) #9
  %13 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %14 = call i32 @sk_find(%struct.stack_st* %13, i64* nonnull %3, i8* nonnull %4, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_VERIFY_PARAM_call_cmp_func) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %22

17:                                               ; preds = %10
  %18 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_VERIFY_PARAM** @param_table to %struct.stack_st**), align 8
  %19 = load i64, i64* %3, align 8
  %20 = call i8* @sk_value(%struct.stack_st* %18, i64 %19) #9
  %21 = bitcast i8* %20 to %struct.X509_VERIFY_PARAM_st*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %28

22:                                               ; preds = %16, %1
  %23 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %0) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %0) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %36, %22, %25, %30, %33, %17
  %29 = phi %struct.X509_VERIFY_PARAM_st* [ %21, %17 ], [ getelementptr inbounds ([5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 0), %22 ], [ getelementptr inbounds ([5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 1), %25 ], [ getelementptr inbounds ([5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 2), %30 ], [ getelementptr inbounds ([5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 3), %33 ], [ %39, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #9
  ret %struct.X509_VERIFY_PARAM_st* %29

30:                                               ; preds = %25
  %31 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %0) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %28, label %33

33:                                               ; preds = %30
  %34 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %0) #10
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %28, label %36

36:                                               ; preds = %33
  %37 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %0) #10
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, %struct.X509_VERIFY_PARAM_st* getelementptr inbounds ([5 x %struct.X509_VERIFY_PARAM_st], [5 x %struct.X509_VERIFY_PARAM_st]* @default_table, i64 0, i64 4), %struct.X509_VERIFY_PARAM_st* null
  br label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_VERIFY_PARAM_table_cleanup() local_unnamed_addr #0 {
  %1 = load %struct.stack_st_X509_VERIFY_PARAM*, %struct.stack_st_X509_VERIFY_PARAM** @param_table, align 8
  %2 = icmp eq %struct.stack_st_X509_VERIFY_PARAM* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = bitcast %struct.stack_st_X509_VERIFY_PARAM* %1 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %4, void (void (i8*)*, i8*)* nonnull @sk_X509_VERIFY_PARAM_call_free_func, void (i8*)* bitcast (void (%struct.X509_VERIFY_PARAM_st*)* @X509_VERIFY_PARAM_free to void (i8*)*)) #9
  br label %5

5:                                                ; preds = %0, %3
  store %struct.stack_st_X509_VERIFY_PARAM* null, %struct.stack_st_X509_VERIFY_PARAM** @param_table, align 8
  ret void
}

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_OPENSSL_STRING_call_free_func(void (i8*)* nocapture, i8*) #8 {
  tail call void %0(i8* %1) #9
  ret void
}

declare %struct.stack_st* @sk_deep_copy(%struct.stack_st*, i8* (i8* (i8*)*, i8*)*, i8* (i8*)*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @sk_OPENSSL_STRING_call_copy_func(i8* (i8*)* nocapture, i8*) #8 {
  %3 = tail call i8* %0(i8* %1) #9
  ret i8* %3
}

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_ASN1_OBJECT_call_free_func(void (i8*)* nocapture, i8*) #8 {
  %3 = bitcast void (i8*)* %0 to void (%struct.asn1_object_st*)*
  %4 = bitcast i8* %1 to %struct.asn1_object_st*
  tail call void %3(%struct.asn1_object_st* %4) #9
  ret void
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i8* @OPENSSL_strndup(i8*, i64) local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #2

declare %struct.stack_st* @sk_new(i32 (i8**, i8**)*) local_unnamed_addr #2

declare void @sk_sort(%struct.stack_st*) local_unnamed_addr #2

declare i32 @sk_find(%struct.stack_st*, i64*, i8*, i32 (i32 (i8**, i8**)*, i8**, i8**)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i32 @sk_X509_VERIFY_PARAM_call_cmp_func(i32 (i8**, i8**)* nocapture, i8** nocapture readonly, i8** nocapture readonly) #8 {
  %4 = alloca %struct.X509_VERIFY_PARAM_st*, align 8
  %5 = alloca %struct.X509_VERIFY_PARAM_st*, align 8
  %6 = bitcast %struct.X509_VERIFY_PARAM_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast i8** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.X509_VERIFY_PARAM_st** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %struct.X509_VERIFY_PARAM_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.X509_VERIFY_PARAM_st** %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i32 (i8**, i8**)* %0 to i32 (%struct.X509_VERIFY_PARAM_st**, %struct.X509_VERIFY_PARAM_st**)*
  %15 = call i32 %14(%struct.X509_VERIFY_PARAM_st** nonnull %4, %struct.X509_VERIFY_PARAM_st** nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i32 %15
}

declare i8* @sk_delete(%struct.stack_st*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_VERIFY_PARAM_call_free_func(void (i8*)* nocapture, i8*) #8 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_VERIFY_PARAM_st*)*
  %4 = bitcast i8* %1 to %struct.X509_VERIFY_PARAM_st*
  tail call void %3(%struct.X509_VERIFY_PARAM_st* %4) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
