; ModuleID = '../../components/security_interstitials/content/mitm_software_blocking_page.cc'
source_filename = "../../components/security_interstitials/content/mitm_software_blocking_page.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MITMSoftwareBlockingPage = type { %class.SSLBlockingPageBase, %"class.net::SSLInfo", %"class.std::__1::unique_ptr.99" }
%class.SSLBlockingPageBase = type { %"class.security_interstitials::SecurityInterstitialPage", %"class.std::__1::unique_ptr.50" }
%"class.security_interstitials::SecurityInterstitialPage" = type { i32 (...)**, %"class.content::WebContents"*, %class.GURL, i8, i8, i8, %"class.std::__1::unique_ptr.12" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.security_interstitials::SecurityInterstitialControllerClient"* }
%"class.security_interstitials::SecurityInterstitialControllerClient" = type { %"class.security_interstitials::ControllerClient", %"class.content::WebContents"*, %class.PrefService*, %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::unique_ptr.41" }
%"class.security_interstitials::ControllerClient" = type { i32 (...)**, %"class.std::__1::unique_ptr.15", %class.GURL }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.security_interstitials::MetricsHelper"* }
%"class.security_interstitials::MetricsHelper" = type { i32 (...)**, %class.GURL, %"struct.security_interstitials::MetricsHelper::ReportDetails", i32, %"class.base::CancelableTaskTracker" }
%"struct.security_interstitials::MetricsHelper::ReportDetails" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.18 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.18 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.32" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.base::internal::WeakReference::Flag"* }
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.security_interstitials::SettingsPageHelper"* }
%"class.security_interstitials::SettingsPageHelper" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CertReportHelper* }
%class.CertReportHelper = type <{ i32 (...)**, %"class.std::__1::unique_ptr.53", %"class.content::WebContents"*, %class.GURL, %"class.net::SSLInfo", i32, i8, [3 x i8], %"class.base::Time", i8, [7 x i8], %"class.security_interstitials::MetricsHelper"*, %"class.base::RepeatingCallback", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.SSLCertReporter* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.95", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.59, %class.scoped_refptr.59, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.77", %"class.std::__1::basic_string", %"class.std::__1::vector.85", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.59 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.60", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.66", %"class.std::__1::vector.70" }
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::unique_ptr.66"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.80" }
%"class.net::HashValue" = type { i32, %union.anon.79 }
%union.anon.79 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.89" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.87, i32, [4 x i8] }>
%class.scoped_refptr.87 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.88", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.security_interstitials::MITMSoftwareUI"* }
%"class.security_interstitials::MITMSoftwareUI" = type { %class.GURL, i32, [4 x i8], %"class.net::SSLInfo", %"class.std::__1::basic_string", i8, %"class.security_interstitials::ControllerClient"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.SSLCertReporter = type { i32 (...)** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.105" }
%"union.absl::variant_internal::DestructibleUnionImpl.105" = type { %"union.absl::variant_internal::DestructibleUnionImpl.106" }
%"union.absl::variant_internal::DestructibleUnionImpl.106" = type { %"union.absl::variant_internal::DestructibleUnionImpl.107" }
%"union.absl::variant_internal::DestructibleUnionImpl.107" = type { %"union.absl::variant_internal::DestructibleUnionImpl.108" }
%"union.absl::variant_internal::DestructibleUnionImpl.108" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN24MITMSoftwareBlockingPage15kTypeForTestingE = hidden constant i8* bitcast (i8** @_ZN24MITMSoftwareBlockingPage15kTypeForTestingE to i8*), align 8
@_ZTV24MITMSoftwareBlockingPage = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MITMSoftwareBlockingPage*)* @_ZN24MITMSoftwareBlockingPageD2Ev to i8*), i8* bitcast (void (%class.MITMSoftwareBlockingPage*)* @_ZN24MITMSoftwareBlockingPageD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.security_interstitials::SecurityInterstitialPage"*)* @_ZN22security_interstitials24SecurityInterstitialPage15GetHTMLContentsEv to i8*), i8* bitcast (void (%class.SSLBlockingPageBase*)* @_ZN19SSLBlockingPageBase21OnInterstitialClosingEv to i8*), i8* bitcast (i1 (%"class.security_interstitials::SecurityInterstitialPage"*)* @_ZNK22security_interstitials24SecurityInterstitialPage16ShouldDisplayURLEv to i8*), i8* bitcast (void (%class.MITMSoftwareBlockingPage*, %"class.std::__1::basic_string"*)* @_ZN24MITMSoftwareBlockingPage15CommandReceivedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*), i8* bitcast (i8* (%class.MITMSoftwareBlockingPage*)* @_ZN24MITMSoftwareBlockingPage17GetTypeForTestingEv to i8*), i8* bitcast (void (%class.MITMSoftwareBlockingPage*, %"class.base::DictionaryValue"*)* @_ZN24MITMSoftwareBlockingPage27PopulateInterstitialStringsEPN4base15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.security_interstitials::SecurityInterstitialPage"*)* @_ZN22security_interstitials24SecurityInterstitialPage17GetHTMLTemplateIdEv to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"\22pageLoadComplete\22\00", align 1

@_ZN24MITMSoftwareBlockingPageC1EPN7content11WebContentsEiRK4GURLNSt3__110unique_ptrI15SSLCertReporterNS6_14default_deleteIS8_EEEEbRKN3net7SSLInfoERKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEbNS7_IN22security_interstitials36SecurityInterstitialControllerClientENS9_ISP_EEEE = hidden unnamed_addr alias void (%class.MITMSoftwareBlockingPage*, %"class.content::WebContents"*, i32, %class.GURL*, %class.SSLCertReporter*, i1, %"class.net::SSLInfo"*, %"class.std::__1::basic_string"*, i1, i64), void (%class.MITMSoftwareBlockingPage*, %"class.content::WebContents"*, i32, %class.GURL*, %class.SSLCertReporter*, i1, %"class.net::SSLInfo"*, %"class.std::__1::basic_string"*, i1, i64)* @_ZN24MITMSoftwareBlockingPageC2EPN7content11WebContentsEiRK4GURLNSt3__110unique_ptrI15SSLCertReporterNS6_14default_deleteIS8_EEEEbRKN3net7SSLInfoERKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEbNS7_IN22security_interstitials36SecurityInterstitialControllerClientENS9_ISP_EEEE
@_ZN24MITMSoftwareBlockingPageD1Ev = hidden unnamed_addr alias void (%class.MITMSoftwareBlockingPage*), void (%class.MITMSoftwareBlockingPage*)* @_ZN24MITMSoftwareBlockingPageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MITMSoftwareBlockingPageC2EPN7content11WebContentsEiRK4GURLNSt3__110unique_ptrI15SSLCertReporterNS6_14default_deleteIS8_EEEEbRKN3net7SSLInfoERKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEbNS7_IN22security_interstitials36SecurityInterstitialControllerClientENS9_ISP_EEEE(%class.MITMSoftwareBlockingPage*, %"class.content::WebContents"*, i32, %class.GURL* dereferenceable(120), %class.SSLCertReporter*, i1 zeroext, %"class.net::SSLInfo"* dereferenceable(128), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %11 = alloca %"class.base::Time", align 8
  %12 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Time"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = tail call i64 @_ZN4base4Time3NowEv() #7
  %15 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  store i64 %14, i64* %15, align 8
  call void @_ZN19SSLBlockingPageBaseC2EPN7content11WebContentsEN22CertificateErrorReport18InterstitialReasonERKN3net7SSLInfoERK4GURLNSt3__110unique_ptrI15SSLCertReporterNSC_14default_deleteISE_EEEEbRKN4base4TimeEbNSD_IN22security_interstitials36SecurityInterstitialControllerClientENSF_ISN_EEEE(%class.SSLBlockingPageBase* %12, %"class.content::WebContents"* %1, i32 5, %"class.net::SSLInfo"* dereferenceable(128) %6, %class.GURL* dereferenceable(120) %3, %class.SSLCertReporter* %4, i1 zeroext false, %"class.base::Time"* nonnull dereferenceable(8) %11, i1 zeroext %5, i64 %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %16 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24MITMSoftwareBlockingPage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 1
  call void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"* %17, %"class.net::SSLInfo"* dereferenceable(128) %6) #7
  %18 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 2
  %19 = call i8* @_Znwm(i64 296) #8
  %20 = bitcast i8* %19 to %"class.security_interstitials::MITMSoftwareUI"*
  %21 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 0
  %22 = call %"class.security_interstitials::SecurityInterstitialControllerClient"* @_ZNK22security_interstitials24SecurityInterstitialPage10controllerEv(%"class.security_interstitials::SecurityInterstitialPage"* %21) #7
  %23 = getelementptr inbounds %"class.security_interstitials::SecurityInterstitialControllerClient", %"class.security_interstitials::SecurityInterstitialControllerClient"* %22, i64 0, i32 0
  call void @_ZN22security_interstitials14MITMSoftwareUIC1ERK4GURLiRKN3net7SSLInfoERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbPNS_16ControllerClientE(%"class.security_interstitials::MITMSoftwareUI"* nonnull %20, %class.GURL* dereferenceable(120) %3, i32 %2, %"class.net::SSLInfo"* dereferenceable(128) %6, %"class.std::__1::basic_string"* dereferenceable(24) %7, i1 zeroext %8, %"class.security_interstitials::ControllerClient"* %23) #7
  %24 = ptrtoint i8* %19 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.99"* %18 to i64*
  store i64 %24, i64* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare void @_ZN19SSLBlockingPageBaseC2EPN7content11WebContentsEN22CertificateErrorReport18InterstitialReasonERKN3net7SSLInfoERK4GURLNSt3__110unique_ptrI15SSLCertReporterNSC_14default_deleteISE_EEEEbRKN4base4TimeEbNSD_IN22security_interstitials36SecurityInterstitialControllerClientENSF_ISN_EEEE(%class.SSLBlockingPageBase*, %"class.content::WebContents"*, i32, %"class.net::SSLInfo"* dereferenceable(128), %class.GURL* dereferenceable(120), %class.SSLCertReporter*, i1 zeroext, %"class.base::Time"* dereferenceable(8), i1 zeroext, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"*, %"class.net::SSLInfo"* dereferenceable(128)) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare %"class.security_interstitials::SecurityInterstitialControllerClient"* @_ZNK22security_interstitials24SecurityInterstitialPage10controllerEv(%"class.security_interstitials::SecurityInterstitialPage"*) local_unnamed_addr #2

declare void @_ZN22security_interstitials14MITMSoftwareUIC1ERK4GURLiRKN3net7SSLInfoERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbPNS_16ControllerClientE(%"class.security_interstitials::MITMSoftwareUI"*, %class.GURL* dereferenceable(120), i32, %"class.net::SSLInfo"* dereferenceable(128), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.security_interstitials::ControllerClient"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MITMSoftwareBlockingPageD2Ev(%class.MITMSoftwareBlockingPage*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24MITMSoftwareBlockingPage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.security_interstitials::MITMSoftwareUI"*, %"class.security_interstitials::MITMSoftwareUI"** %3, align 8
  store %"class.security_interstitials::MITMSoftwareUI"* null, %"class.security_interstitials::MITMSoftwareUI"** %3, align 8
  %5 = icmp eq %"class.security_interstitials::MITMSoftwareUI"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN22security_interstitials14MITMSoftwareUID1Ev(%"class.security_interstitials::MITMSoftwareUI"* nonnull %4) #7
  %7 = bitcast %"class.security_interstitials::MITMSoftwareUI"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 1
  tail call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* %9) #7
  %10 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0
  tail call void @_ZN19SSLBlockingPageBaseD2Ev(%class.SSLBlockingPageBase* %10) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN19SSLBlockingPageBaseD2Ev(%class.SSLBlockingPageBase*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MITMSoftwareBlockingPageD0Ev(%class.MITMSoftwareBlockingPage*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV24MITMSoftwareBlockingPage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.security_interstitials::MITMSoftwareUI"*, %"class.security_interstitials::MITMSoftwareUI"** %3, align 8
  store %"class.security_interstitials::MITMSoftwareUI"* null, %"class.security_interstitials::MITMSoftwareUI"** %3, align 8
  %5 = icmp eq %"class.security_interstitials::MITMSoftwareUI"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN22security_interstitials14MITMSoftwareUID1Ev(%"class.security_interstitials::MITMSoftwareUI"* nonnull %4) #7
  %7 = bitcast %"class.security_interstitials::MITMSoftwareUI"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 1
  tail call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* %9) #7
  %10 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0
  tail call void @_ZN19SSLBlockingPageBaseD2Ev(%class.SSLBlockingPageBase* %10) #7
  %11 = bitcast %class.MITMSoftwareBlockingPage* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN24MITMSoftwareBlockingPage17GetTypeForTestingEv(%class.MITMSoftwareBlockingPage* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* bitcast (i8** @_ZN24MITMSoftwareBlockingPage15kTypeForTestingE to i8*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MITMSoftwareBlockingPage27PopulateInterstitialStringsEPN4base15DictionaryValueE(%class.MITMSoftwareBlockingPage* nocapture readonly, %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.security_interstitials::MITMSoftwareUI"*, %"class.security_interstitials::MITMSoftwareUI"** %3, align 8
  tail call void @_ZN22security_interstitials14MITMSoftwareUI22PopulateStringsForHTMLEPN4base15DictionaryValueE(%"class.security_interstitials::MITMSoftwareUI"* %4, %"class.base::DictionaryValue"* %1) #7
  %5 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %class.CertReportHelper*, %class.CertReportHelper** %5, align 8
  tail call void @_ZN16CertReportHelper31PopulateExtendedReportingOptionEPN4base15DictionaryValueE(%class.CertReportHelper* %6, %"class.base::DictionaryValue"* %1) #7
  %7 = load %class.CertReportHelper*, %class.CertReportHelper** %5, align 8
  tail call void @_ZN16CertReportHelper33PopulateEnhancedProtectionMessageEPN4base15DictionaryValueE(%class.CertReportHelper* %7, %"class.base::DictionaryValue"* %1) #7
  ret void
}

declare void @_ZN22security_interstitials14MITMSoftwareUI22PopulateStringsForHTMLEPN4base15DictionaryValueE(%"class.security_interstitials::MITMSoftwareUI"*, %"class.base::DictionaryValue"*) local_unnamed_addr #2

declare void @_ZN16CertReportHelper31PopulateExtendedReportingOptionEPN4base15DictionaryValueE(%class.CertReportHelper*, %"class.base::DictionaryValue"*) local_unnamed_addr #2

declare void @_ZN16CertReportHelper33PopulateEnhancedProtectionMessageEPN4base15DictionaryValueE(%class.CertReportHelper*, %"class.base::DictionaryValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MITMSoftwareBlockingPage15CommandReceivedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.MITMSoftwareBlockingPage*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 18
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i64 18) #7
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %45, label %16

16:                                               ; preds = %13
  %17 = load i8, i8* %5, align 1
  %18 = load i64, i64* %8, align 8
  %19 = zext i8 %17 to i64
  br label %20

20:                                               ; preds = %16, %2
  %21 = phi i64 [ %19, %16 ], [ %10, %2 ]
  %22 = phi i64 [ %18, %16 ], [ %9, %2 ]
  %23 = phi i8 [ %17, %16 ], [ %6, %2 ]
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7
  store i32 0, i32* %3, align 4
  %25 = icmp slt i8 %23, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = select i1 %25, i64 %22, i64 %21
  %31 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %29, i64 %30, i32* nonnull %3) #7
  %32 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %class.CertReportHelper*, %class.CertReportHelper** %32, align 8
  %34 = load i32, i32* %3, align 4
  %35 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 0, i32 0
  %36 = call %"class.security_interstitials::SecurityInterstitialControllerClient"* @_ZNK22security_interstitials24SecurityInterstitialPage10controllerEv(%"class.security_interstitials::SecurityInterstitialPage"* %35) #7
  %37 = bitcast %"class.security_interstitials::SecurityInterstitialControllerClient"* %36 to %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)***
  %38 = load %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)**, %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)*** %37, align 8
  %39 = getelementptr inbounds %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)*, %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)** %38, i64 13
  %40 = load %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)*, %class.PrefService* (%"class.security_interstitials::SecurityInterstitialControllerClient"*)** %39, align 8
  %41 = call %class.PrefService* %40(%"class.security_interstitials::SecurityInterstitialControllerClient"* %36) #7
  call void @_ZN16CertReportHelper23HandleReportingCommandsEN22security_interstitials27SecurityInterstitialCommandEP11PrefService(%class.CertReportHelper* %33, i32 %34, %class.PrefService* %41) #7
  %42 = getelementptr inbounds %class.MITMSoftwareBlockingPage, %class.MITMSoftwareBlockingPage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %"class.security_interstitials::MITMSoftwareUI"*, %"class.security_interstitials::MITMSoftwareUI"** %42, align 8
  %44 = load i32, i32* %3, align 4
  call void @_ZN22security_interstitials14MITMSoftwareUI13HandleCommandENS_27SecurityInterstitialCommandE(%"class.security_interstitials::MITMSoftwareUI"* %43, i32 %44) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7
  br label %45

45:                                               ; preds = %13, %20
  ret void
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare void @_ZN16CertReportHelper23HandleReportingCommandsEN22security_interstitials27SecurityInterstitialCommandEP11PrefService(%class.CertReportHelper*, i32, %class.PrefService*) local_unnamed_addr #2

declare void @_ZN22security_interstitials14MITMSoftwareUI13HandleCommandENS_27SecurityInterstitialCommandE(%"class.security_interstitials::MITMSoftwareUI"*, i32) local_unnamed_addr #2

declare void @_ZN22security_interstitials24SecurityInterstitialPage15GetHTMLContentsEv(%"class.std::__1::basic_string"* sret, %"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #2

declare void @_ZN19SSLBlockingPageBase21OnInterstitialClosingEv(%class.SSLBlockingPageBase*) unnamed_addr #2

declare zeroext i1 @_ZNK22security_interstitials24SecurityInterstitialPage16ShouldDisplayURLEv(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #2

declare i32 @_ZN22security_interstitials24SecurityInterstitialPage17GetHTMLTemplateIdEv(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22security_interstitials14MITMSoftwareUID1Ev(%"class.security_interstitials::MITMSoftwareUI"*) unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
