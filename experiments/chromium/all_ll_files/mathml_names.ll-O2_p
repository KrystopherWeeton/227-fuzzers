; ModuleID = 'gen/third_party/blink/renderer/core/mathml_names.cc'
source_filename = "gen/third_party/blink/renderer/core/mathml_names.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.NameEntry = type { i8*, i32, i8, i8, i8 }

@_ZN5blink12mathml_names20kNamespaceURIStorageE = hidden global [1 x i8*] zeroinitializer, align 8
@_ZN5blink12mathml_names13kNamespaceURIE = hidden local_unnamed_addr constant %"class.WTF::AtomicString"* bitcast ([1 x i8*]* @_ZN5blink12mathml_names20kNamespaceURIStorageE to %"class.WTF::AtomicString"*), align 8
@_ZN5blink12mathml_names11tag_storageE = hidden global [30 x i8*] zeroinitializer, align 16
@_ZN5blink12mathml_names14kAnnotationTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast ([30 x i8*]* @_ZN5blink12mathml_names11tag_storageE to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names17kAnnotationXmlTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 1) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names11kMactionTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 2) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names14kMalignmarkTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 3) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names8kMathTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 4) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names10kMerrorTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 5) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names9kMfracTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 6) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names10kMglyphTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 7) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names6kMiTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 8) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names17kMmultiscriptsTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 9) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names6kMnTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 10) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names6kMoTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 11) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names9kMoverTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 12) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names11kMpaddedTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 13) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names12kMphantomTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 14) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names15kMprescriptsTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 15) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names9kMrootTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 16) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names8kMrowTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 17) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names6kMsTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 18) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names10kMspaceTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 19) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names9kMsqrtTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 20) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names10kMstyleTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 21) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names8kMsubTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 22) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names11kMsubsupTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 23) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names8kMsupTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 24) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names9kMtextTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 25) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names10kMunderTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 26) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names14kMunderoverTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 27) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names8kNoneTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 28) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names13kSemanticsTagE = hidden local_unnamed_addr constant %"class.blink::MathMLQualifiedName"* bitcast (i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 29) to %"class.blink::MathMLQualifiedName"*), align 8
@_ZN5blink12mathml_names12attr_storageE = hidden global [25 x i8*] zeroinitializer, align 16
@_ZN5blink12mathml_names11kAccentAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast ([25 x i8*]* @_ZN5blink12mathml_names12attr_storageE to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names16kAccentunderAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 1) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names18kDefinitionURLAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 2) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names10kDepthAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 3) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names12kDisplayAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 4) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names17kDisplaystyleAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 5) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names13kEncodingAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 6) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names9kFormAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 7) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names11kHeightAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 8) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names12kLargeopAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 9) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names18kLinethicknessAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 10) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names11kLspaceAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 11) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names19kMathbackgroundAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 12) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names14kMathcolorAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 13) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names13kMathsizeAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 14) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names16kMathvariantAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 15) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names12kMaxsizeAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 16) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names12kMinsizeAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 17) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names18kMovablelimitsAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 18) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names11kRspaceAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 19) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names16kScriptlevelAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 20) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names13kStretchyAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 21) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names14kSymmetricAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 22) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names12kVoffsetAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 23) to %"class.blink::QualifiedName"*), align 8
@_ZN5blink12mathml_names10kWidthAttrE = hidden local_unnamed_addr constant %"class.blink::QualifiedName"* bitcast (i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 24) to %"class.blink::QualifiedName"*), align 8
@.str = private unnamed_addr constant [35 x i8] c"http://www.w3.org/1998/Math/MathML\00", align 1
@_ZZN5blink12mathml_names4InitEvE6kNames = internal unnamed_addr constant [55 x %struct.NameEntry] [%struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 12982903, i8 6, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 6827709, i8 11, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i32 10691270, i8 10, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 3437210, i8 14, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i32 5781331, i8 13, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i32 1069503, i8 5, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 16245385, i8 7, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0), i32 92854, i8 12, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i32 641915, i8 8, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 10060301, i8 4, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i32 6697833, i8 6, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i32 12078196, i8 7, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i32 7924943, i8 13, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 14574953, i8 6, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i32 6240554, i8 7, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i32 8634190, i8 10, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 8182406, i8 4, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i32 2374557, i8 14, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i32 7904383, i8 9, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i32 6623078, i8 8, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i32 9126505, i8 11, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i32 14756777, i8 7, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i32 7632997, i8 6, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i32 13987551, i8 5, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 3316076, i8 6, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i32 16514040, i8 2, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 12257779, i8 7, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0), i32 6674650, i8 13, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i32 0, i32 0), i32 3612898, i8 2, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i32 16096753, i8 2, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 3029911, i8 13, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), i32 14480316, i8 5, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 13014740, i8 7, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i32 6126615, i8 8, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), i32 13554220, i8 11, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i32 8188480, i8 5, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i32 8502371, i8 4, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i32 5264856, i8 2, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i32 10653811, i8 6, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i32 10123915, i8 5, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i32 6243427, i8 6, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i32 10093770, i8 4, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 5166195, i8 7, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i32 1894901, i8 4, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i32 16756693, i8 5, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 9958019, i8 6, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i32 5849942, i8 10, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 3454253, i8 4, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i32 9521175, i8 6, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i32 0, i32 0), i32 5324426, i8 11, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i32 942856, i8 9, i8 1, i8 0 }, %struct.NameEntry { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i32 9937605, i8 8, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i32 1620969, i8 9, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 14126607, i8 7, i8 0, i8 1 }, %struct.NameEntry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i32 12902275, i8 5, i8 0, i8 1 }], align 16
@.str.1 = private unnamed_addr constant [7 x i8] c"accent\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"accentunder\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"annotation\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"annotation-xml\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"definitionURL\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"display\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"displaystyle\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"form\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"largeop\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"linethickness\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"lspace\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"maction\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"malignmark\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"math\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"mathbackground\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"mathcolor\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"mathsize\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"mathvariant\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"maxsize\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"merror\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"mfrac\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"mglyph\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"minsize\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"mmultiscripts\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"mn\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"mo\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"movablelimits\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"mover\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"mpadded\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"mphantom\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"mprescripts\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"mroot\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"mrow\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"mspace\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"msqrt\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"mstyle\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"msub\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"msubsup\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"msup\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"mtext\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"munder\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"munderover\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"rspace\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"scriptlevel\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"semantics\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"stretchy\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"symmetric\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"voffset\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"width\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names7GetTagsEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znam(i64 240) #6
  %2 = bitcast i8* %1 to %"class.blink::MathMLQualifiedName"**
  %3 = bitcast i8* %1 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 0), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 1)>, <2 x i8**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 2), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 3)>, <2 x i8**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = bitcast i8* %6 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 4), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 5)>, <2 x i8**>* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 48
  %9 = bitcast i8* %8 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 6), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 7)>, <2 x i8**>* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 64
  %11 = bitcast i8* %10 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 8), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 9)>, <2 x i8**>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 80
  %13 = bitcast i8* %12 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 10), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 11)>, <2 x i8**>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 96
  %15 = bitcast i8* %14 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 12), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 13)>, <2 x i8**>* %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 112
  %17 = bitcast i8* %16 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 14), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 15)>, <2 x i8**>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 128
  %19 = bitcast i8* %18 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 16), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 17)>, <2 x i8**>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %1, i64 144
  %21 = bitcast i8* %20 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 18), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 19)>, <2 x i8**>* %21, align 8
  %22 = getelementptr inbounds i8, i8* %1, i64 160
  %23 = bitcast i8* %22 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 20), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 21)>, <2 x i8**>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 176
  %25 = bitcast i8* %24 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 22), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 23)>, <2 x i8**>* %25, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 192
  %27 = bitcast i8* %26 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 24), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 25)>, <2 x i8**>* %27, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 208
  %29 = bitcast i8* %28 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 26), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 27)>, <2 x i8**>* %29, align 8
  %30 = getelementptr inbounds i8, i8* %1, i64 224
  %31 = bitcast i8* %30 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 28), i8** getelementptr inbounds ([30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 29)>, <2 x i8**>* %31, align 8
  ret %"class.blink::MathMLQualifiedName"** %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::QualifiedName"** @_ZN5blink12mathml_names8GetAttrsEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znam(i64 200) #6
  %2 = bitcast i8* %1 to %"class.blink::QualifiedName"**
  %3 = bitcast i8* %1 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 0), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 1)>, <2 x i8**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 2), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 3)>, <2 x i8**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = bitcast i8* %6 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 4), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 5)>, <2 x i8**>* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 48
  %9 = bitcast i8* %8 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 6), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 7)>, <2 x i8**>* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 64
  %11 = bitcast i8* %10 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 8), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 9)>, <2 x i8**>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %1, i64 80
  %13 = bitcast i8* %12 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 10), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 11)>, <2 x i8**>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 96
  %15 = bitcast i8* %14 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 12), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 13)>, <2 x i8**>* %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 112
  %17 = bitcast i8* %16 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 14), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 15)>, <2 x i8**>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 128
  %19 = bitcast i8* %18 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 16), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 17)>, <2 x i8**>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %1, i64 144
  %21 = bitcast i8* %20 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 18), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 19)>, <2 x i8**>* %21, align 8
  %22 = getelementptr inbounds i8, i8* %1, i64 160
  %23 = bitcast i8* %22 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 20), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 21)>, <2 x i8**>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 176
  %25 = bitcast i8* %24 to <2 x i8**>*
  store <2 x i8**> <i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 22), i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 23)>, <2 x i8**>* %25, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 192
  %27 = bitcast i8* %26 to i8***
  store i8** getelementptr inbounds ([25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 24), i8*** %27, align 8
  ret %"class.blink::QualifiedName"** %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12mathml_names4InitEv() local_unnamed_addr #0 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %3, align 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 34) #7
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** bitcast ([1 x i8*]* @_ZN5blink12mathml_names20kNamespaceURIStorageE to %"class.WTF::StringImpl"**), align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #7
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  call void @llvm.trap() #7
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %0, %6, %21
  br label %41

24:                                               ; preds = %69
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #7
  br label %40

40:                                               ; preds = %24, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7
  ret void

41:                                               ; preds = %23, %69
  %42 = phi i64 [ %61, %69 ], [ 0, %23 ]
  %43 = phi i64 [ %70, %69 ], [ 0, %23 ]
  %44 = phi i64 [ %71, %69 ], [ 0, %23 ]
  %45 = getelementptr inbounds [55 x %struct.NameEntry], [55 x %struct.NameEntry]* @_ZZN5blink12mathml_names4InitEvE6kNames, i64 0, i64 %44, i32 0
  %46 = load i8*, i8** %45, align 16
  %47 = getelementptr inbounds [55 x %struct.NameEntry], [55 x %struct.NameEntry]* @_ZZN5blink12mathml_names4InitEvE6kNames, i64 0, i64 %44, i32 2
  %48 = load i8, i8* %47, align 4
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds [55 x %struct.NameEntry], [55 x %struct.NameEntry]* @_ZZN5blink12mathml_names4InitEvE6kNames, i64 0, i64 %44, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl12CreateStaticEPKcjj(i8* %46, i32 %49, i32 %51) #7
  %53 = lshr i64 1407373738622988, %44
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %41
  %57 = getelementptr inbounds [30 x i8*], [30 x i8*]* @_ZN5blink12mathml_names11tag_storageE, i64 0, i64 %42
  %58 = bitcast i8** %57 to i8*
  call void @_ZN5blink13QualifiedName12CreateStaticEPvPN3WTF10StringImplERKNS2_12AtomicStringE(i8* %58, %"class.WTF::StringImpl"* %52, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %1) #7
  %59 = add i64 %42, 1
  br label %60

60:                                               ; preds = %41, %56
  %61 = phi i64 [ %59, %56 ], [ %42, %41 ]
  %62 = lshr i64 34621423280340979, %44
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds [25 x i8*], [25 x i8*]* @_ZN5blink12mathml_names12attr_storageE, i64 0, i64 %43
  %67 = bitcast i8** %66 to i8*
  call void @_ZN5blink13QualifiedName12CreateStaticEPvPN3WTF10StringImplE(i8* %67, %"class.WTF::StringImpl"* %52) #7
  %68 = add i64 %43, 1
  br label %69

69:                                               ; preds = %60, %65
  %70 = phi i64 [ %68, %65 ], [ %43, %60 ]
  %71 = add nuw nsw i64 %44, 1
  %72 = icmp eq i64 %71, 55
  br i1 %72, label %24, label %41
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl12CreateStaticEPKcjj(i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink13QualifiedName12CreateStaticEPvPN3WTF10StringImplERKNS2_12AtomicStringE(i8*, %"class.WTF::StringImpl"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink13QualifiedName12CreateStaticEPvPN3WTF10StringImplE(i8*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
