; ModuleID = '../../third_party/blink/renderer/core/layout/layout_multi_column_flow_thread.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_multi_column_flow_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.1928", %"class.WTF::PODIntervalTree.1941", i8 }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2023 }
%class.scoped_refptr.2023 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2024", %"class.WTF::Vector.630", %"class.WTF::Vector.2026", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2024" = type { %"class.base::RefCounted.2025" }
%"class.base::RefCounted.2025" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2026" = type { %"class.WTF::VectorBuffer.2027" }
%"class.WTF::VectorBuffer.2027" = type { %"class.WTF::VectorBufferBase.2028" }
%"class.WTF::VectorBufferBase.2028" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2029 }
%union.anon.2029 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2009" }
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2011" }
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2037 }
%class.scoped_refptr.2037 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2047" }
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2038", %"class.WTF::Vector.2038" }
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040" }
%"class.WTF::VectorBufferBase.2040" = type { %class.scoped_refptr.2037*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1952", %"class.std::__1::unique_ptr.1958", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1964", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1981", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1991", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1983", %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.blink::Member.1989", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1991" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1992", { i64, i64 } }
%"class.blink::WeakMember.1992" = type { %"class.blink::MemberBase.1758" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.1928", %"class.WTF::PODIntervalTree.1941", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type { %"class.blink::FragmentationContext", %"class.blink::LayoutView"* }
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1958" = type { %"class.std::__1::__compressed_pair.1959" }
%"class.std::__1::__compressed_pair.1959" = type { %"struct.std::__1::__compressed_pair_elem.1960" }
%"struct.std::__1::__compressed_pair_elem.1960" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1964" = type { %"class.blink::PersistentBase.1965" }
%"class.blink::PersistentBase.1965" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1968", i64 }
%"class.blink::HeapVector.1968" = type { %"class.WTF::Vector.1971" }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973", [368 x i8] }
%"class.WTF::VectorBufferBase.1973" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1974", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::HeapLinkedHashSet.1976"* }
%"class.blink::HeapLinkedHashSet.1976" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2013" }
%"class.WTF::Vector.2013" = type { %"class.WTF::VectorBuffer.2014" }
%"class.WTF::VectorBuffer.2014" = type { %"class.WTF::VectorBufferBase.2015" }
%"class.WTF::VectorBufferBase.2015" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2018", %"class.absl::optional.2018", %"class.absl::optional.2018" }
%"class.absl::optional.2018" = type { %"class.absl::optional_internal::optional_data.2019" }
%"class.absl::optional_internal::optional_data.2019" = type { %"class.absl::optional_internal::optional_data_base.2020" }
%"class.absl::optional_internal::optional_data_base.2020" = type { %"class.absl::optional_internal::optional_data_dtor_base.2021" }
%"class.absl::optional_internal::optional_data_dtor_base.2021" = type { i8, %union.anon.2022 }
%union.anon.2022 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2033" }
%"class.WTF::VectorBuffer.2033" = type { %"class.WTF::VectorBufferBase.2034", [32 x i8] }
%"class.WTF::VectorBufferBase.2034" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type { %"class.blink::LayoutBox", %"class.blink::LayoutBox"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1993", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1993" = type { %"class.base::RefCountedThreadSafe.1994" }
%"class.base::RefCountedThreadSafe.1994" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.WTF::LinkedHashSet.1928" = type { %"class.WTF::HashMap.1929", %"class.WTF::VectorBackedLinkedList.1934" }
%"class.WTF::HashMap.1929" = type { %"class.WTF::HashTable.1930" }
%"class.WTF::HashTable.1930" = type <{ %"struct.WTF::KeyValuePair.1933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1933" = type <{ %"class.blink::LayoutMultiColumnSet"*, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.1934" = type { %"class.WTF::Vector.1935", i32, i32 }
%"class.WTF::Vector.1935" = type { %"class.WTF::VectorBuffer.1936" }
%"class.WTF::VectorBuffer.1936" = type { %"class.WTF::VectorBufferBase.1937" }
%"class.WTF::VectorBufferBase.1937" = type { %"class.WTF::VectorBackedLinkedListNode.1938"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1938" = type { i32, i32, %"class.blink::LayoutMultiColumnSet"* }
%"class.WTF::PODIntervalTree.1941" = type { %"class.WTF::PODRedBlackTree.base.1945", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.1945" = type <{ i32 (...)**, %class.scoped_refptr.1943, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.1943 = type { %"class.WTF::PODFreeListArena.1944"* }
%"class.WTF::PODFreeListArena.1944" = type { %"class.WTF::RefCounted.2049", %class.scoped_refptr.2051, %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node>::FixedSizeMemoryChunk"* }
%"class.WTF::RefCounted.2049" = type { %"class.base::RefCounted.2050" }
%"class.base::RefCounted.2050" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2051 = type { %"class.WTF::PODArena"* }
%"class.WTF::PODArena" = type { %"class.WTF::RefCounted.2052", %class.scoped_refptr.2054, %"class.WTF::PODArena::Chunk"*, i64, %"class.WTF::Vector.2057" }
%"class.WTF::RefCounted.2052" = type { %"class.base::RefCounted.2053" }
%"class.base::RefCounted.2053" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2054 = type { %"class.WTF::PODArena::Allocator"* }
%"class.WTF::PODArena::Allocator" = type <{ i32 (...)**, %"class.WTF::RefCounted.2055", [4 x i8] }>
%"class.WTF::RefCounted.2055" = type { %"class.base::RefCounted.2056" }
%"class.base::RefCounted.2056" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::PODArena::Chunk" = type { %"class.WTF::PODArena::Allocator"*, i8*, i64, i64 }
%"class.WTF::Vector.2057" = type { %"class.WTF::VectorBuffer.2058" }
%"class.WTF::VectorBuffer.2058" = type { %"class.WTF::VectorBufferBase.2059" }
%"class.WTF::VectorBufferBase.2059" = type { %"class.std::__1::unique_ptr.2060"*, i32, i32 }
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"class.WTF::PODArena::Chunk"* }
%"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node>::FixedSizeMemoryChunk" = type { %"struct.WTF::PODFreeListArena<WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node>::FixedSizeMemoryChunk"* }
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type { i32 (...)**, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i32, %"class.WTF::PODInterval" }
%"class.WTF::PODInterval" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.blink::LayoutMultiColumnSet" = type { %"class.blink::LayoutBlockFlow", %"class.blink::MultiColumnFragmentainerGroupList", %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32 }
%"class.blink::MultiColumnFragmentainerGroupList" = type { %"class.blink::LayoutMultiColumnSet"*, %"class.WTF::Vector.1995" }
%"class.WTF::Vector.1995" = type { %"class.WTF::VectorBuffer.1996" }
%"class.WTF::VectorBuffer.1996" = type { %"class.WTF::VectorBufferBase.1997", [32 x i8] }
%"class.WTF::VectorBufferBase.1997" = type { %"class.blink::MultiColumnFragmentainerGroup"*, i32, i32 }
%"class.blink::MultiColumnFragmentainerGroup" = type <{ %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::PODRedBlackTree.1942" = type <{ i32 (...)**, %class.scoped_refptr.1943, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8, [7 x i8] }>
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnSet"* }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2095", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2096", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2095" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2096" = type { %"class.absl::optional_internal::optional_data.2097" }
%"class.absl::optional_internal::optional_data.2097" = type { %"class.absl::optional_internal::optional_data_base.2098" }
%"class.absl::optional_internal::optional_data_base.2098" = type { %"class.absl::optional_internal::optional_data_dtor_base.2099" }
%"class.absl::optional_internal::optional_data_dtor_base.2099" = type { i8, %union.anon.2100 }
%union.anon.2100 = type { %"class.blink::FloatSize" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2106", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2119" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2104", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1981", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2109", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.2109" = type { %"class.WTF::HashTable.2110" }
%"class.WTF::HashTable.2110" = type <{ %"struct.WTF::KeyValuePair.2113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2113" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2117" }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2117" }
%"class.absl::optional.2119" = type { %"class.absl::optional_internal::optional_data.2120" }
%"class.absl::optional_internal::optional_data.2120" = type { %"class.absl::optional_internal::optional_data_base.2121" }
%"class.absl::optional_internal::optional_data_base.2121" = type { %"class.absl::optional_internal::optional_data_dtor_base.2122" }
%"class.absl::optional_internal::optional_data_dtor_base.2122" = type { i8, %union.anon.2123 }
%union.anon.2123 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* }
%"class.blink::MultiColumnLayoutState" = type { %"class.blink::LayoutMultiColumnSet"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2001" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2002", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"class.blink::TransformationMatrix"* }
%"class.WTF::Vector.2008" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"struct.blink::NGInlineNodeData" = type opaque
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2081" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2068", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2068" = type { %"class.std::__1::__vector_base.2069" }
%"class.std::__1::__vector_base.2069" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2070", i64, i64 }
%"class.std::__1::unique_ptr.2070" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIRS3_EENS7_9AddResultEOT_ = comdat any

$_ZNK5blink27LayoutMultiColumnFlowThread7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink16LayoutFlowThread18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink16LayoutFlowThread27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink16LayoutFlowThread33NeedsPreferredWidthsRecalculationEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv = comdat any

$_ZNK5blink27LayoutMultiColumnFlowThread29IsLayoutMultiColumnFlowThreadEv = comdat any

$_ZN5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv = comdat any

$_ZThn368_N5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED0Ev = comdat any

$_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE15CheckInvariantsEv = comdat any

$_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE10UpdateNodeEPNS7_4NodeE = comdat any

$_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE23CheckInvariantsFromNodeEPNS7_4NodeEPi = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj = comdat any

$_ZN3WTF15PODIntervalTreeIN5blink10LayoutUnitEPNS1_20LayoutMultiColumnSetEE21SearchForOverlapsFromINS1_16LayoutFlowThread27MultiColumnSetSearchAdapterEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIS2_S4_EEE4NodeERT_ = comdat any

$_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj = comdat any

$_ZN3WTF22VectorBackedLinkedListIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEE6insertIRS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_ = comdat any

$_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetES0_EEEEmm = comdat any

$_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEEE = comdat any

@_ZN5blink27LayoutMultiColumnFlowThread23could_contain_spanners_E = hidden local_unnamed_addr global i8 0, align 1
@_ZN5blink27LayoutMultiColumnFlowThread26toggle_spanners_if_needed_E = hidden local_unnamed_addr global i8 0, align 1
@_ZTVN5blink27LayoutMultiColumnFlowThreadE = hidden unnamed_addr constant { [243 x i8*], [7 x i8*], [8 x i8*] } { [243 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThreadD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThreadD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlowThread"*)* @_ZNK5blink16LayoutFlowThread18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink16LayoutFlowThread11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*, i32)* @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink16LayoutFlowThread38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink27LayoutMultiColumnFlowThread12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutFlowThread"*, %"class.WTF::Vector.2008"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink16LayoutFlowThread15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i8)* @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutFlowThread"*)* @_ZNK5blink16LayoutFlowThread17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*, i32)* @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*)* @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink27LayoutMultiColumnFlowThread20ComputeLogicalHeightENS_10LayoutUnitES1_RNS_9LayoutBox27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZNK5blink27LayoutMultiColumnFlowThread19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlowThread"*)* @_ZNK5blink16LayoutFlowThread27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlowThread"*)* @_ZNK5blink16LayoutFlowThread33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, i1)* @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE to i8*), i8* bitcast (%"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i1)* @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread29IsLayoutMultiColumnFlowThreadEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"*)* @_ZN5blink27LayoutMultiColumnFlowThread31FlowThreadDescendantWasInsertedEPNS_12LayoutObjectE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"*)* @_ZN5blink27LayoutMultiColumnFlowThread33FlowThreadDescendantWillBeRemovedEPNS_12LayoutObjectE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink27LayoutMultiColumnFlowThread35FlowThreadDescendantStyleWillChangeEPNS_9LayoutBoxENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink27LayoutMultiColumnFlowThread34FlowThreadDescendantStyleDidChangeEPNS_9LayoutBoxENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink27LayoutMultiColumnFlowThread20AddColumnSetToThreadEPNS_20LayoutMultiColumnSetE to i8*), i8* bitcast (void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*)* @_ZN5blink16LayoutFlowThread25RemoveColumnSetFromThreadEPNS_20LayoutMultiColumnSetE to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZN5blink27LayoutMultiColumnFlowThread17ContentWasLaidOutENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*)* @_ZNK5blink27LayoutMultiColumnFlowThread13CanSkipLayoutERKNS_9LayoutBoxE to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread25GetMultiColumnLayoutStateEv to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::MultiColumnLayoutState"*)* @_ZN5blink27LayoutMultiColumnFlowThread29RestoreMultiColumnLayoutStateERKNS_22MultiColumnLayoutStateE to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread24IsPageLogicalHeightKnownEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZNK5blink27LayoutMultiColumnFlowThread34MayHaveNonUniformPageLogicalHeightEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink27LayoutMultiColumnFlowThread28FlowThreadPointToVisualPointERKNS_11LayoutPointE to i8*), i8* bitcast (i64 (%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink27LayoutMultiColumnFlowThread28VisualPointToFlowThreadPointERKNS_11LayoutPointE to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32)* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread33IsFragmentainerLogicalHeightKnownEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZN5blink27LayoutMultiColumnFlowThread28FragmentainerLogicalHeightAtENS_10LayoutUnitE to i8*), i8* bitcast (i32 (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZN5blink27LayoutMultiColumnFlowThread24RemainingLogicalHeightAtENS_10LayoutUnitE to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn8_N5blink27LayoutMultiColumnFlowThreadD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn8_N5blink27LayoutMultiColumnFlowThreadD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -368 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn368_N5blink27LayoutMultiColumnFlowThreadD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn368_N5blink27LayoutMultiColumnFlowThreadD0Ev to i8*), i8* bitcast (i1 (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn368_N5blink27LayoutMultiColumnFlowThread33IsFragmentainerLogicalHeightKnownEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZThn368_N5blink27LayoutMultiColumnFlowThread28FragmentainerLogicalHeightAtENS_10LayoutUnitE to i8*), i8* bitcast (i32 (%"class.blink::LayoutMultiColumnFlowThread"*, i32)* @_ZThn368_N5blink27LayoutMultiColumnFlowThread24RemainingLogicalHeightAtENS_10LayoutUnitE to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZThn368_N5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason15kColumnsChangedE = external constant [0 x i8], align 1
@_ZTVN5blink16LayoutFlowThreadE = external unnamed_addr constant { [239 x i8*], [7 x i8*] }, align 8
@_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::PODRedBlackTree.1942"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev to i8*), i8* bitcast (void (%"class.WTF::PODRedBlackTree.1942"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED0Ev to i8*), i8* bitcast (i1 (%"class.WTF::PODRedBlackTree.1942"*)* @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE15CheckInvariantsEv to i8*), i8* bitcast (i1 (%"class.WTF::PODRedBlackTree.1942"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*)* @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE10UpdateNodeEPNS7_4NodeE to i8*)] }, comdat, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"LayoutMultiColumnFlowThread\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink20LayoutMultiColumnSetEjEEEEPKcv = private unnamed_addr constant [110 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::LayoutMultiColumnSet *, unsigned int>]\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [135 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<blink::LayoutMultiColumnSet *, WTF::PartitionAllocator>]\00", align 1

@_ZN5blink27LayoutMultiColumnFlowThreadC1Eb = hidden unnamed_addr alias void (%"class.blink::LayoutMultiColumnFlowThread"*, i1), void (%"class.blink::LayoutMultiColumnFlowThread"*, i1)* @_ZN5blink27LayoutMultiColumnFlowThreadC2Eb
@_ZN5blink27LayoutMultiColumnFlowThreadD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutMultiColumnFlowThread"*), void (%"class.blink::LayoutMultiColumnFlowThread"*)* @_ZN5blink27LayoutMultiColumnFlowThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThreadC2Eb(%"class.blink::LayoutMultiColumnFlowThread"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  tail call void @_ZN5blink16LayoutFlowThreadC2Eb(%"class.blink::LayoutFlowThread"* %3, i1 zeroext %1) #13
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 2, i32 0
  %5 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 4
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 2>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 8
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 10
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = or i96 %14, 1099511627776
  store i96 %15, i96* %13, align 4
  ret void
}

declare void @_ZN5blink16LayoutFlowThreadC2Eb(%"class.blink::LayoutFlowThread"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThreadD2Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.WTF::PODIntervalTree.1941"* %3 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %4) #13
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %5, align 8
  %7 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %6, null
  %8 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !2

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %5, align 8
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.1933"* %17, null
  br i1 %18, label %21, label %19, !prof !2

19:                                               ; preds = %15
  %20 = bitcast %"struct.WTF::KeyValuePair.1933"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %16, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %22) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink27LayoutMultiColumnFlowThreadD1Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 328
  %5 = bitcast i8* %4 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %5) #13
  %6 = getelementptr inbounds i8, i8* %2, i64 304
  %7 = bitcast i8* %6 to %"class.WTF::VectorBackedLinkedListNode.1938"**
  %8 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %8, null
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %8 to i8*
  br i1 %9, label %18, label %11, !prof !2

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, i8* %2, i64 316
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %11
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds i8, i8* %2, i64 280
  %20 = bitcast i8* %19 to %"struct.WTF::KeyValuePair.1933"**
  %21 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.1933"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %18
  %24 = bitcast %"struct.WTF::KeyValuePair.1933"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  br label %25

25:                                               ; preds = %18, %23
  %26 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %26) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn368_N5blink27LayoutMultiColumnFlowThreadD1Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.blink::UntracedMember"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 41
  %5 = bitcast %"class.blink::UntracedMember"* %4 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %5) #13
  %6 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 38
  %7 = bitcast %"class.blink::UntracedMember"* %6 to %"class.WTF::VectorBackedLinkedListNode.1938"**
  %8 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %8, null
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %8 to i8*
  br i1 %9, label %18, label %11, !prof !2

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutMultiColumnFlowThread"*
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %12, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %11
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 35
  %20 = bitcast %"class.blink::UntracedMember"* %19 to %"struct.WTF::KeyValuePair.1933"**
  %21 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.1933"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %18
  %24 = bitcast %"struct.WTF::KeyValuePair.1933"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  br label %25

25:                                               ; preds = %18, %23
  %26 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %26) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThreadD0Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.WTF::PODIntervalTree.1941"* %3 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %4) #13
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %5, align 8
  %7 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %6, null
  %8 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !2

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %5, align 8
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.1933"* %17, null
  br i1 %18, label %21, label %19, !prof !2

19:                                               ; preds = %15
  %20 = bitcast %"struct.WTF::KeyValuePair.1933"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %16, align 8
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %22) #13
  %23 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %23) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink27LayoutMultiColumnFlowThreadD0Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 328
  %5 = bitcast i8* %4 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %5) #13
  %6 = getelementptr inbounds i8, i8* %2, i64 304
  %7 = bitcast i8* %6 to %"class.WTF::VectorBackedLinkedListNode.1938"**
  %8 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %8, null
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %8 to i8*
  br i1 %9, label %18, label %11, !prof !2

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, i8* %2, i64 316
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %11
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds i8, i8* %2, i64 280
  %20 = bitcast i8* %19 to %"struct.WTF::KeyValuePair.1933"**
  %21 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.1933"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %18
  %24 = bitcast %"struct.WTF::KeyValuePair.1933"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  br label %25

25:                                               ; preds = %18, %23
  %26 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %26) #13
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn368_N5blink27LayoutMultiColumnFlowThreadD0Ev(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.blink::UntracedMember"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [239 x i8*], [7 x i8*] }, { [239 x i8*], [7 x i8*] }* @_ZTVN5blink16LayoutFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 41
  %5 = bitcast %"class.blink::UntracedMember"* %4 to %"class.WTF::PODRedBlackTree.1942"*
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %5) #13
  %6 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 38
  %7 = bitcast %"class.blink::UntracedMember"* %6 to %"class.WTF::VectorBackedLinkedListNode.1938"**
  %8 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %8, null
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %8 to i8*
  br i1 %9, label %18, label %11, !prof !2

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutMultiColumnFlowThread"*
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %12, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %11
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #13
  store %"class.WTF::VectorBackedLinkedListNode.1938"* null, %"class.WTF::VectorBackedLinkedListNode.1938"** %7, align 8
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds %"class.blink::UntracedMember", %"class.blink::UntracedMember"* %2, i64 35
  %20 = bitcast %"class.blink::UntracedMember"* %19 to %"struct.WTF::KeyValuePair.1933"**
  %21 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.1933"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %18
  %24 = bitcast %"struct.WTF::KeyValuePair.1933"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store %"struct.WTF::KeyValuePair.1933"* null, %"struct.WTF::KeyValuePair.1933"** %20, align 8
  br label %25

25:                                               ; preds = %18, %23
  %26 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %26) #13
  %27 = bitcast %"class.blink::UntracedMember"* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %27) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnFlowThread"* @_ZN5blink27LayoutMultiColumnFlowThread15CreateAnonymousERNS_8DocumentERKNS_13ComputedStyleEb(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 408) #13
  %5 = bitcast i8* %4 to %"class.blink::LayoutMultiColumnFlowThread"*
  %6 = bitcast i8* %4 to %"class.blink::LayoutFlowThread"*
  tail call void @_ZN5blink16LayoutFlowThreadC2Eb(%"class.blink::LayoutFlowThread"* %6, i1 zeroext %2) #13
  %7 = getelementptr inbounds i8, i8* %4, i64 368
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [243 x i8*], [7 x i8*], [8 x i8*] }, { [243 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink27LayoutMultiColumnFlowThreadE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 376
  %11 = bitcast i8* %10 to %"class.blink::LayoutMultiColumnSet"**
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 384
  %13 = bitcast i8* %12 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 2>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 400
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 401
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 402
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds i8, i8* %4, i64 20
  %18 = bitcast i8* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = or i96 %19, 1099511627776
  store i96 %20, i96* %18, align 4
  %21 = bitcast i8* %4 to %"class.blink::LayoutObject"*
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %4, i64 40
  %24 = bitcast i8* %23 to %"class.blink::Node"**
  store %"class.blink::Node"* %22, %"class.blink::Node"** %24, align 8
  %25 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %0) #13
  %26 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"* %25, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 1) #13
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %21, %"class.blink::ComputedStyle"* %26, i32 1) #13
  ret %"class.blink::LayoutMultiColumnFlowThread"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread19FirstMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #13
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %18, label %5

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  br label %18

18:                                               ; preds = %12, %1, %16
  %19 = phi %"class.blink::LayoutMultiColumnSet"* [ %17, %16 ], [ null, %1 ], [ null, %12 ]
  ret %"class.blink::LayoutMultiColumnSet"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread18LastMultiColumnSetEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutBlock"**
  %4 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %4, i64 0, i32 1, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1, %15
  %9 = phi %"class.blink::LayoutObject"* [ %17, %15 ], [ %6, %1 ]
  %10 = bitcast %"class.blink::LayoutObject"* %9 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* nonnull %9, i32 20) #13
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 8
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %21, label %8

19:                                               ; preds = %8
  %20 = bitcast %"class.blink::LayoutObject"* %9 to %"class.blink::LayoutMultiColumnSet"*
  br label %21

21:                                               ; preds = %15, %1, %19
  %22 = phi %"class.blink::LayoutMultiColumnSet"* [ %20, %19 ], [ null, %1 ], [ null, %15 ]
  ret %"class.blink::LayoutMultiColumnSet"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread45CanContainSpannerInParentFragmentationContextERKNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %4 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %4, i64 24
  %6 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutObject"* %1) #13
  %8 = icmp eq %"class.blink::LayoutObject"* %1, null
  %9 = xor i1 %7, true
  %10 = or i1 %8, %9
  br i1 %10, label %58, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBlockFlow"*
  %13 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %14 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %14, i64 182
  %16 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutBlockFlow"* nonnull %12) #13
  br i1 %17, label %58, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 68719476736
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %26 = bitcast %"class.blink::LayoutObject"** %25 to %"class.blink::LayoutBlockFlow"**
  %27 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::LayoutBlockFlow"* %27 to i1 (%"class.blink::LayoutObject"*)***
  %30 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, i64 28
  %32 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %28) #13
  br i1 %33, label %34, label %58

34:                                               ; preds = %18, %24
  %35 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.blink::LayoutObject"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %39 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %39, i64 176
  %41 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %40, align 8
  %42 = tail call i32 %41(%"class.blink::LayoutBox"* %35, i32 %37) #13
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %58, label %44

44:                                               ; preds = %34
  %45 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %3, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %45, i64 24
  %47 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* nonnull %1) #13
  br i1 %48, label %49, label %58

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 2, i32 10, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.747"* %50 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %52 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %51, align 8
  %53 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %52, i64 0, i32 3
  %56 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %56, null
  br label %58

58:                                               ; preds = %44, %54, %49, %11, %24, %34, %2
  %59 = phi i1 [ false, %2 ], [ false, %34 ], [ false, %24 ], [ false, %11 ], [ true, %44 ], [ %57, %54 ], [ true, %49 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread24MapDescendantToColumnSetEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %106, label %7

7:                                                ; preds = %2, %14
  %8 = phi %"class.blink::LayoutObject"* [ %16, %14 ], [ %5, %2 ]
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* nonnull %8, i32 20) #13
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 9
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %106, label %7

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutMultiColumnSet"*
  %20 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %19) #13
  %21 = icmp eq %"class.blink::LayoutMultiColumnSet"* %20, null
  br i1 %21, label %106, label %22

22:                                               ; preds = %18, %103
  %23 = phi %"class.blink::LayoutMultiColumnSet"* [ %104, %103 ], [ %19, %18 ]
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %25 = bitcast %"class.blink::LayoutObject"** %24 to %"class.blink::LayoutBox"**
  %26 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutBox"* %26 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 25
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27) #13
  %33 = icmp eq %"class.blink::LayoutBox"* %26, null
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %41

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %23, i64 0, i32 2
  %37 = bitcast %"class.blink::LayoutFlowThread"** %36 to %"class.blink::LayoutBlock"**
  %38 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %38, i64 0, i32 1, i32 0
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  br label %77

41:                                               ; preds = %22
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %26, i64 1
  %43 = bitcast %"class.blink::LayoutBox"* %42 to %"class.blink::LayoutBox"**
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %23, i64 0, i32 2
  %46 = bitcast %"class.blink::LayoutFlowThread"** %45 to %"class.blink::LayoutMultiColumnFlowThread"**
  %47 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %44, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* %48, %"class.blink::LayoutObject"* %49) #13
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %77, label %52

52:                                               ; preds = %41
  %53 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %47 to %"class.blink::LayoutFlowThread"*
  br label %54

54:                                               ; preds = %74, %52
  %55 = phi %"class.blink::LayoutObject"* [ %50, %52 ], [ %75, %74 ]
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 113336795588871485128704
  %60 = icmp eq i96 %59, 75557863725914323419136
  br i1 %60, label %61, label %77

61:                                               ; preds = %54
  %62 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %55, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %63 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %62, i64 0, i32 0, i32 0, i32 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 1099511627776
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %62, i64 0, i32 0, i32 0, i32 0
  %70 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %69) #13
  br label %71

71:                                               ; preds = %68, %61
  %72 = phi %"class.blink::LayoutFlowThread"* [ %70, %68 ], [ null, %61 ]
  %73 = icmp eq %"class.blink::LayoutFlowThread"* %72, %53
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %55, %"class.blink::LayoutObject"* %49) #13
  %76 = icmp eq %"class.blink::LayoutObject"* %75, null
  br i1 %76, label %77, label %54

77:                                               ; preds = %54, %71, %74, %35, %41
  %78 = phi %"class.blink::LayoutObject"* [ %40, %35 ], [ null, %41 ], [ null, %74 ], [ %55, %71 ], [ %55, %54 ]
  %79 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %80 = bitcast %"class.blink::LayoutObject"** %79 to %"class.blink::LayoutBox"**
  %81 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %80, align 8
  %82 = icmp eq %"class.blink::LayoutBox"* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %81, i64 1
  %85 = bitcast %"class.blink::LayoutBox"* %84 to %"class.blink::LayoutBox"**
  %86 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %23, i64 0, i32 2
  %88 = bitcast %"class.blink::LayoutFlowThread"** %87 to %"class.blink::LayoutMultiColumnFlowThread"**
  %89 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %86, i64 0, i32 0, i32 0
  %91 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL35PreviousInPreOrderSkippingOutOfFlowEPNS_27LayoutMultiColumnFlowThreadEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %89, %"class.blink::LayoutObject"* %90) #13
  br label %92

92:                                               ; preds = %77, %83
  %93 = phi %"class.blink::LayoutObject"* [ %91, %83 ], [ null, %77 ]
  %94 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %94, label %103, label %95

95:                                               ; preds = %92, %100
  %96 = phi %"class.blink::LayoutObject"* [ %101, %100 ], [ %78, %92 ]
  %97 = icmp eq %"class.blink::LayoutObject"* %96, %1
  br i1 %97, label %106, label %98

98:                                               ; preds = %95
  %99 = icmp eq %"class.blink::LayoutObject"* %96, %93
  br i1 %99, label %103, label %100

100:                                              ; preds = %98
  %101 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %96, %"class.blink::LayoutObject"* %3) #13
  %102 = icmp eq %"class.blink::LayoutObject"* %101, null
  br i1 %102, label %103, label %95

103:                                              ; preds = %98, %100, %92
  %104 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %23) #13
  %105 = icmp eq %"class.blink::LayoutMultiColumnSet"* %104, null
  br i1 %105, label %106, label %22

106:                                              ; preds = %14, %103, %95, %2, %18
  %107 = phi %"class.blink::LayoutMultiColumnSet"* [ %19, %18 ], [ null, %2 ], [ %23, %95 ], [ null, %103 ], [ null, %14 ]
  ret %"class.blink::LayoutMultiColumnSet"* %107
}

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink27LayoutMultiColumnFlowThread34ContainingColumnSpannerPlaceholderEPKNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutBox"**
  %6 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutBox"* %6, null
  br i1 %7, label %54, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %10 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutBlockFlow"**
  %11 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::LayoutBlockFlow"* %11 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %14 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %14, i64 13
  %16 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %15, align 8
  %17 = tail call %"class.blink::LayoutObjectChildList"* %16(%"class.blink::LayoutObject"* %12) #13
  %18 = icmp eq %"class.blink::LayoutObjectChildList"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %17, i64 0, i32 1
  %21 = bitcast %"class.blink::LayoutObject"** %20 to %"class.blink::LayoutBox"**
  %22 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %21, align 8
  br label %23

23:                                               ; preds = %19, %8
  %24 = phi %"class.blink::LayoutBox"* [ %22, %19 ], [ null, %8 ]
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = icmp eq %"class.blink::LayoutBox"* %24, %25
  %27 = select i1 %26, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %24
  %28 = icmp eq %"class.blink::LayoutBox"* %6, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %6, i64 0, i32 0, i32 0
  %31 = bitcast %"class.blink::LayoutBox"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %30, i32 21) #13
  br i1 %35, label %36, label %54

36:                                               ; preds = %29, %23
  %37 = icmp ne %"class.blink::LayoutObject"* %1, null
  %38 = icmp ne %"class.blink::LayoutObject"* %3, %1
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %54

40:                                               ; preds = %36, %48
  %41 = phi %"class.blink::LayoutObject"* [ %50, %48 ], [ %1, %36 ]
  %42 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %43 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %43, i64 44
  %45 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %44, align 8
  %46 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %45(%"class.blink::LayoutObject"* nonnull %41) #13
  %47 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %46, null
  br i1 %47, label %48, label %54

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 7
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp ne %"class.blink::LayoutObject"* %50, null
  %52 = icmp ne %"class.blink::LayoutObject"* %50, %3
  %53 = and i1 %52, %51
  br i1 %53, label %40, label %54

54:                                               ; preds = %40, %48, %36, %29, %2
  %55 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ null, %2 ], [ null, %29 ], [ null, %36 ], [ %46, %40 ], [ null, %48 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread8PopulateEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  tail call void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"* %5) #13
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = bitcast %"class.blink::LayoutBlockFlow"* %5 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %11 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %11, i64 144
  %13 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %12, align 8
  tail call void %13(%"class.blink::LayoutBoxModelObject"* %6, %"class.blink::LayoutBoxModelObject"* %7, %"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"* null, i1 zeroext true) #13
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread18EvacuateAndDestroyEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 10
  store i8 1, i8* %6, align 2
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutBox"**
  %9 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutBox"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1, %11
  %12 = phi %"class.blink::LayoutBox"* [ %14, %11 ], [ %9, %1 ]
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %13) #13
  %14 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %8, align 8
  %15 = icmp eq %"class.blink::LayoutBox"* %14, null
  br i1 %15, label %16, label %11

16:                                               ; preds = %11, %1
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 2, i32 0, i32 0
  %18 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %17, align 8
  %19 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %18, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnFlowThread"* null, %"class.blink::LayoutMultiColumnFlowThread"** %21, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::LayoutBlockFlow"* %5 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink15LayoutBlockFlow32MoveAllChildrenIncludingFloatsToEPNS_11LayoutBlockEb(%"class.blink::LayoutBlockFlow"* %23, %"class.blink::LayoutBlock"* %24, i1 zeroext true) #13
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %2) #13
  ret void
}

declare void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow32MoveAllChildrenIncludingFloatsToEPNS_11LayoutBlockEb(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlock"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink27LayoutMultiColumnFlowThread22MaxColumnLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 5, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutBlockFlow"**
  %8 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 5
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 12
  br i1 %23, label %28, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %8, i64 0, i32 0, i32 0
  %26 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %25, i32 2, %"class.blink::Length"* dereferenceable(8) %20, i32 -64) #13
  %27 = icmp eq i32 %26, -64
  br i1 %27, label %28, label %29

28:                                               ; preds = %24, %5
  br label %29

29:                                               ; preds = %24, %1, %28
  %30 = phi i32 [ 2147483647, %28 ], [ %26, %24 ], [ %3, %1 ]
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink27LayoutMultiColumnFlowThread31TallestUnbreakableLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %1, i32 1)
  %4 = icmp eq %"class.blink::LayoutMultiColumnSet"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %6 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutMultiColumnSet"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3, %12
  %9 = phi %"class.blink::LayoutMultiColumnSet"* [ %13, %12 ], [ %6, %3 ]
  %10 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %9) #13
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %51

12:                                               ; preds = %8
  %13 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* %9) #13
  %14 = icmp eq %"class.blink::LayoutMultiColumnSet"* %13, null
  br i1 %14, label %51, label %8

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %15
  %20 = icmp slt i32 %1, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %23 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %22, i32 0) #13
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %22, i32 %25) #13
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %26, i64 0, i32 2
  %28 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %27, align 8
  br label %51

29:                                               ; preds = %19
  %30 = bitcast %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  %31 = bitcast %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %4 to i64*
  store i64 -6148914691236517206, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter", %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %4, i64 0, i32 0, i32 0
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter", %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %4, i64 0, i32 1
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %35 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %34, align 8
  call void @_ZN3WTF15PODIntervalTreeIN5blink10LayoutUnitEPNS1_20LayoutMultiColumnSetEE21SearchForOverlapsFromINS1_16LayoutFlowThread27MultiColumnSetSearchAdapterEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIS2_S4_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %35, %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* nonnull dereferenceable(16) %4) #13
  %36 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %33, align 8
  %37 = icmp eq %"class.blink::LayoutMultiColumnSet"* %36, null
  br i1 %37, label %38, label %49

38:                                               ; preds = %29
  %39 = load i32, i32* %16, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %43 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %42, i32 0) #13
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %42, i32 %45) #13
  %47 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %46, i64 0, i32 2
  %48 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %47, align 8
  br label %49

49:                                               ; preds = %38, %29, %41
  %50 = phi %"class.blink::LayoutMultiColumnSet"* [ %48, %41 ], [ %36, %29 ], [ null, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  br label %51

51:                                               ; preds = %12, %8, %21, %49
  %52 = phi %"class.blink::LayoutMultiColumnSet"* [ %28, %21 ], [ %50, %49 ], [ %9, %8 ], [ %9, %12 ]
  %53 = icmp eq i32 %2, 0
  %54 = icmp ne %"class.blink::LayoutMultiColumnSet"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = call i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %52) #13
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  %60 = call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %52) #13
  %61 = icmp eq %"class.blink::LayoutMultiColumnSet"* %60, null
  %62 = select i1 %61, %"class.blink::LayoutMultiColumnSet"* %52, %"class.blink::LayoutMultiColumnSet"* %60
  br label %65

63:                                               ; preds = %51
  %64 = icmp eq %"class.blink::LayoutMultiColumnSet"* %52, null
  br i1 %64, label %85, label %65

65:                                               ; preds = %59, %56, %63
  %66 = phi %"class.blink::LayoutMultiColumnSet"* [ %52, %63 ], [ %52, %56 ], [ %62, %59 ]
  br label %67

67:                                               ; preds = %65, %82
  %68 = phi %"class.blink::LayoutMultiColumnSet"* [ %83, %82 ], [ %66, %65 ]
  %69 = call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnSet"* nonnull %68) #13
  br i1 %69, label %70, label %82

70:                                               ; preds = %67
  %71 = call i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %68) #13
  br i1 %53, label %72, label %77

72:                                               ; preds = %70
  %73 = icmp slt i32 %71, %1
  br i1 %73, label %74, label %82

74:                                               ; preds = %72
  %75 = call i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %68) #13
  %76 = icmp slt i32 %75, %1
  br i1 %76, label %82, label %85

77:                                               ; preds = %70
  %78 = icmp sgt i32 %71, %1
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  %80 = call i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %68) #13
  %81 = icmp sgt i32 %80, %1
  br i1 %81, label %85, label %82

82:                                               ; preds = %74, %77, %72, %79, %67
  %83 = call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %68) #13
  %84 = icmp eq %"class.blink::LayoutMultiColumnSet"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %82, %79, %74, %63, %15
  %86 = phi %"class.blink::LayoutMultiColumnSet"* [ null, %15 ], [ null, %63 ], [ %66, %82 ], [ %68, %79 ], [ %68, %74 ]
  ret %"class.blink::LayoutMultiColumnSet"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %21, !prof !3

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %4, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %4) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  br label %21

21:                                               ; preds = %12, %2
  %22 = phi i32 [ %20, %12 ], [ %4, %2 ]
  %23 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = trunc i96 %27 to i32
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 %24, i32 %22
  %31 = icmp ne i160 %10, 5070602400912917605986812821504
  %32 = zext i1 %31 to i32
  %33 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %48

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %30, i32 %32) #13
  %43 = icmp eq %"class.blink::LayoutMultiColumnSet"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = tail call i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"* nonnull %42, i32 %30, i32 %32, i32 0) #13
  %46 = and i64 %45, -4294967296
  %47 = and i64 %45, 4294967295
  br label %48

48:                                               ; preds = %21, %37, %41, %44
  %49 = phi i64 [ %46, %44 ], [ 0, %37 ], [ 0, %41 ], [ 0, %21 ]
  %50 = phi i64 [ %47, %44 ], [ 0, %37 ], [ 0, %41 ], [ 0, %21 ]
  %51 = or i64 %50, %49
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread28FlowThreadTranslationAtPointERKNS_11LayoutPointENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 5070602400912917605986812821504
  br i1 %12, label %13, label %22, !prof !3

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %5, -1
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %5) #13
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !3
  br label %22

22:                                               ; preds = %3, %13
  %23 = phi i32 [ %21, %13 ], [ %5, %3 ]
  %24 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = trunc i96 %28 to i32
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 %25, i32 %23
  %32 = icmp ne i160 %11, 5070602400912917605986812821504
  %33 = zext i1 %32 to i32
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %31, i32 %33) #13
  %44 = icmp eq %"class.blink::LayoutMultiColumnSet"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = tail call i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"* nonnull %43, i32 %31, i32 %33, i32 %2) #13
  %47 = and i64 %46, -4294967296
  %48 = and i64 %46, 4294967295
  br label %49

49:                                               ; preds = %22, %38, %42, %45
  %50 = phi i64 [ %47, %45 ], [ 0, %38 ], [ 0, %42 ], [ 0, %22 ]
  %51 = phi i64 [ %48, %45 ], [ 0, %38 ], [ 0, %42 ], [ 0, %22 ]
  %52 = or i64 %51, %50
  ret i64 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread13NeedsNewWidthEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutUnit", align 4
  %3 = alloca i32, align 4
  %4 = bitcast %"class.blink::LayoutUnit"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13
  store i32 -1431655766, i32* %3, align 4
  call void @_ZNK5blink27LayoutMultiColumnFlowThread28CalculateColumnCountAndWidthERNS_10LayoutUnitERj(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3)
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %5, align 4
  %19 = icmp ne i32 %18, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27LayoutMultiColumnFlowThread28CalculateColumnCountAndWidthERNS_10LayoutUnitERj(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutBlockFlow"**
  %6 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %6, i64 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %9)
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %22 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %21, i32 %10) #13
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %26, align 8
  br label %43

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %32, i64 0, i32 1, i32 0, i32 5
  %34 = load float, float* %33, align 4
  %35 = fmul float %34, 6.400000e+01
  %36 = fcmp ult float %35, 0xC1E0000000000000
  %37 = fcmp ugt float %35, 0x41DFFFFFE0000000
  %38 = fcmp ogt float %35, 0xC1E0000000000000
  %39 = select i1 %38, float %35, float 0xC1E0000000000000
  %40 = fptosi float %39 to i32
  %41 = select i1 %36, i32 0, i32 2147483647
  %42 = select i1 %37, i32 %41, i32 %40
  br label %43

43:                                               ; preds = %20, %28
  %44 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %27, %20 ], [ %16, %28 ]
  %45 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %23, %20 ], [ %12, %28 ]
  %46 = phi i32 [ %22, %20 ], [ %42, %28 ]
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 31
  %48 = load float, float* %47, align 8
  %49 = fmul float %48, 6.400000e+01
  %50 = fcmp ult float %49, 0xC1E0000000000000
  %51 = fcmp ugt float %49, 0x41DFFFFFE0000000
  %52 = fcmp ogt float %49, 0xC1E0000000000000
  %53 = select i1 %52, float %49, float 0xC1E0000000000000
  %54 = fptosi float %53 to i32
  %55 = select i1 %50, i32 0, i32 2147483647
  %56 = select i1 %51, i32 %55, i32 %54
  %57 = icmp sgt i32 %56, 64
  %58 = select i1 %57, i32 %56, i32 64
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 41
  %60 = load i16, i16* %59, align 8
  %61 = zext i16 %60 to i32
  %62 = icmp ugt i32 %61, 1
  %63 = select i1 %62, i32 %61, i32 1
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %45, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %67, i64 0, i32 2
  %69 = load i8, i8* %68, align 4
  %70 = and i8 %69, 2
  %71 = icmp eq i8 %70, 0
  %72 = and i8 %69, 1
  %73 = icmp ne i8 %72, 0
  br i1 %71, label %125, label %74

74:                                               ; preds = %43
  br i1 %73, label %190, label %75

75:                                               ; preds = %74
  store i32 %63, i32* %2, align 4
  %76 = add nsw i32 %63, -1
  %77 = icmp ugt i32 %76, 33554430
  %78 = shl nsw i32 %76, 6
  %79 = select i1 %77, i32 2147483647, i32 %78
  %80 = sext i32 %79 to i64
  %81 = sext i32 %46 to i64
  %82 = mul nsw i64 %80, %81
  %83 = sdiv i64 %82, 64
  %84 = ashr i64 %83, 32
  %85 = trunc i64 %84 to i32
  %86 = trunc i64 %83 to i32
  %87 = ashr i32 %86, 31
  %88 = icmp eq i32 %87, %85
  br i1 %88, label %93, label %89

89:                                               ; preds = %75
  %90 = xor i32 %79, %46
  %91 = lshr i32 %90, 31
  %92 = add nuw i32 %91, 2147483647
  br label %93

93:                                               ; preds = %75, %89
  %94 = phi i32 [ %86, %75 ], [ %92, %89 ]
  %95 = icmp sgt i32 %94, -1
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %94) #13
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !3
  %101 = shl nuw nsw i32 %63, 6
  %102 = sext i32 %100 to i64
  %103 = shl nsw i64 %102, 6
  %104 = zext i32 %101 to i64
  %105 = sdiv i64 %103, %104
  %106 = tail call i1 @llvm.is.constant.i64(i64 %105) #13
  br i1 %106, label %114, label %107

107:                                              ; preds = %93
  %108 = icmp slt i64 %105, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = add nsw i64 %105, 2147483648
  %111 = icmp ult i64 %110, 4294967296
  %112 = trunc i64 %105 to i32
  %113 = select i1 %111, i32 %112, i32 %109, !prof !2
  br label %120

114:                                              ; preds = %93
  %115 = icmp sgt i64 %105, 2147483647
  br i1 %115, label %123, label %116

116:                                              ; preds = %114
  %117 = icmp sgt i64 %105, -2147483648
  %118 = select i1 %117, i64 %105, i64 -2147483648
  %119 = trunc i64 %118 to i32
  br label %120

120:                                              ; preds = %107, %116
  %121 = phi i32 [ %113, %107 ], [ %119, %116 ]
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %254

123:                                              ; preds = %114, %120
  %124 = phi i32 [ %121, %120 ], [ 2147483647, %114 ]
  br label %254

125:                                              ; preds = %43
  br i1 %73, label %126, label %190

126:                                              ; preds = %125
  %127 = icmp slt i32 %46, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %46) #13
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !3
  %133 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %46) #13
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %128, i32 %135, !prof !3
  %137 = sext i32 %132 to i64
  %138 = shl nsw i64 %137, 6
  %139 = sext i32 %136 to i64
  %140 = sdiv i64 %138, %139
  %141 = tail call i1 @llvm.is.constant.i64(i64 %140) #13
  br i1 %141, label %149, label %142

142:                                              ; preds = %126
  %143 = icmp slt i64 %140, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = add i64 %140, 2147483648
  %146 = icmp ult i64 %145, 4294967296
  %147 = trunc i64 %140 to i32
  %148 = select i1 %146, i32 %147, i32 %144, !prof !2
  br label %155

149:                                              ; preds = %126
  %150 = icmp sgt i64 %140, 2147483647
  br i1 %150, label %158, label %151

151:                                              ; preds = %149
  %152 = icmp sgt i64 %140, -2147483648
  %153 = select i1 %152, i64 %140, i64 -2147483648
  %154 = trunc i64 %153 to i32
  br label %155

155:                                              ; preds = %142, %151
  %156 = phi i32 [ %148, %142 ], [ %154, %151 ]
  %157 = icmp sgt i32 %156, 64
  br i1 %157, label %158, label %160

158:                                              ; preds = %149, %155
  %159 = phi i32 [ %156, %155 ], [ 2147483647, %149 ]
  br label %160

160:                                              ; preds = %155, %158
  %161 = phi i32 [ %159, %158 ], [ 64, %155 ]
  %162 = lshr i32 %161, 6
  store i32 %162, i32* %2, align 4
  %163 = icmp ugt i32 %161, 2147483583
  %164 = and i32 %161, -64
  %165 = select i1 %163, i32 2147483647, i32 %164
  %166 = sext i32 %165 to i64
  %167 = sdiv i64 %138, %166
  %168 = tail call i1 @llvm.is.constant.i64(i64 %167) #13
  br i1 %168, label %176, label %169

169:                                              ; preds = %160
  %170 = icmp slt i64 %167, 0
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = add nsw i64 %167, 2147483648
  %173 = icmp ult i64 %172, 4294967296
  %174 = trunc i64 %167 to i32
  %175 = select i1 %173, i32 %174, i32 %171, !prof !2
  br label %182

176:                                              ; preds = %160
  %177 = icmp sgt i64 %167, 2147483647
  br i1 %177, label %182, label %178

178:                                              ; preds = %176
  %179 = icmp sgt i64 %167, -2147483648
  %180 = select i1 %179, i64 %167, i64 -2147483648
  %181 = trunc i64 %180 to i32
  br label %182

182:                                              ; preds = %169, %176, %178
  %183 = phi i32 [ %175, %169 ], [ %181, %178 ], [ 2147483647, %176 ]
  %184 = icmp sgt i32 %46, -1
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %183, i32 %46) #13
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  br label %254

190:                                              ; preds = %74, %125
  %191 = shl nuw nsw i32 %63, 6
  %192 = icmp slt i32 %46, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %46) #13
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !3
  %198 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %46) #13
  %199 = extractvalue { i32, i1 } %198, 1
  %200 = extractvalue { i32, i1 } %198, 0
  %201 = select i1 %199, i32 %193, i32 %200, !prof !3
  %202 = sext i32 %197 to i64
  %203 = shl nsw i64 %202, 6
  %204 = sext i32 %201 to i64
  %205 = sdiv i64 %203, %204
  %206 = tail call i1 @llvm.is.constant.i64(i64 %205) #13
  br i1 %206, label %214, label %207

207:                                              ; preds = %190
  %208 = icmp slt i64 %205, 0
  %209 = select i1 %208, i32 -2147483648, i32 2147483647
  %210 = add i64 %205, 2147483648
  %211 = icmp ult i64 %210, 4294967296
  %212 = trunc i64 %205 to i32
  %213 = select i1 %211, i32 %212, i32 %209, !prof !2
  br label %220

214:                                              ; preds = %190
  %215 = icmp sgt i64 %205, 2147483647
  br i1 %215, label %220, label %216

216:                                              ; preds = %214
  %217 = icmp sgt i64 %205, -2147483648
  %218 = select i1 %217, i64 %205, i64 -2147483648
  %219 = trunc i64 %218 to i32
  br label %220

220:                                              ; preds = %207, %214, %216
  %221 = phi i32 [ %213, %207 ], [ %219, %216 ], [ 2147483647, %214 ]
  %222 = icmp slt i32 %221, %191
  %223 = select i1 %222, i32 %221, i32 %191
  %224 = icmp sgt i32 %223, 64
  %225 = select i1 %224, i32 %223, i32 64
  %226 = lshr i32 %225, 6
  store i32 %226, i32* %2, align 4
  %227 = icmp ugt i32 %225, 2147483583
  %228 = and i32 %225, 2147483584
  %229 = select i1 %227, i32 2147483647, i32 %228
  %230 = zext i32 %229 to i64
  %231 = sdiv i64 %203, %230
  %232 = tail call i1 @llvm.is.constant.i64(i64 %231) #13
  br i1 %232, label %240, label %233

233:                                              ; preds = %220
  %234 = icmp slt i64 %231, 0
  %235 = select i1 %234, i32 -2147483648, i32 2147483647
  %236 = add i64 %231, 2147483648
  %237 = icmp ult i64 %236, 4294967296
  %238 = trunc i64 %231 to i32
  %239 = select i1 %237, i32 %238, i32 %235, !prof !2
  br label %246

240:                                              ; preds = %220
  %241 = icmp sgt i64 %231, 2147483647
  br i1 %241, label %246, label %242

242:                                              ; preds = %240
  %243 = icmp sgt i64 %231, -2147483648
  %244 = select i1 %243, i64 %231, i64 -2147483648
  %245 = trunc i64 %244 to i32
  br label %246

246:                                              ; preds = %233, %240, %242
  %247 = phi i32 [ %239, %233 ], [ %245, %242 ], [ 2147483647, %240 ]
  %248 = icmp sgt i32 %46, -1
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %247, i32 %46) #13
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !3
  br label %254

254:                                              ; preds = %123, %120, %182, %246
  %255 = phi i32 [ %189, %182 ], [ %253, %246 ], [ %124, %123 ], [ 0, %120 ]
  %256 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  store i32 %255, i32* %256, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread34MayHaveNonUniformPageLogicalHeightEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #13
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %72, label %5

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  %18 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %17) #13
  %19 = icmp eq %"class.blink::LayoutMultiColumnSet"* %18, null
  br i1 %19, label %20, label %72

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %23 = bitcast %"class.blink::LayoutObject"** %22 to %"class.blink::LayoutBlockFlow"**
  %24 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %24, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.blink::LayoutBlockFlow"* %24 to i32 (%"class.blink::LayoutBox"*, i32)***
  %29 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %29, i64 176
  %31 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %30, align 8
  %32 = tail call i32 %31(%"class.blink::LayoutBox"* %25, i32 %27) #13
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %69, label %34

34:                                               ; preds = %20
  %35 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %23, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 1099511627776
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = tail call %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88) %42, i32 1) #13
  %44 = icmp eq %"class.blink::LayoutFlowThread"* %43, null
  %45 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %43, i64 1
  %46 = bitcast %"class.blink::LayoutFlowThread"* %45 to %"class.blink::FragmentationContext"*
  br i1 %44, label %47, label %69

47:                                               ; preds = %41, %34
  %48 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %51, label %58

51:                                               ; preds = %47, %51
  %52 = phi %"class.blink::LayoutObject"* [ %54, %51 ], [ %21, %47 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 7
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 6, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %51, label %58

58:                                               ; preds = %51, %47
  %59 = phi %"class.blink::Node"* [ %49, %47 ], [ %56, %51 ]
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %63, i64 0, i32 113
  %65 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ViewFragmentationContext", %"class.blink::ViewFragmentationContext"* %67, i64 0, i32 0
  br label %69

69:                                               ; preds = %20, %41, %58
  %70 = phi %"class.blink::FragmentationContext"* [ %68, %58 ], [ %46, %41 ], [ null, %20 ]
  %71 = icmp ne %"class.blink::FragmentationContext"* %70, null
  br label %72

72:                                               ; preds = %12, %1, %16, %69
  %73 = phi i1 [ %71, %69 ], [ true, %16 ], [ false, %1 ], [ false, %12 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FragmentationContext"* @_ZNK5blink27LayoutMultiColumnFlowThread29EnclosingFragmentationContextENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutBlockFlow"**
  %8 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %8 to i32 (%"class.blink::LayoutBox"*, i32)***
  %13 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %13, i64 176
  %15 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBox"* %9, i32 %11) #13
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %55, label %18

18:                                               ; preds = %2, %5
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %20 = bitcast %"class.blink::LayoutObject"** %19 to %"class.blink::LayoutBlockFlow"**
  %21 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 1099511627776
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = tail call %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88) %28, i32 %1) #13
  %30 = icmp eq %"class.blink::LayoutFlowThread"* %29, null
  %31 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %29, i64 1
  %32 = bitcast %"class.blink::LayoutFlowThread"* %31 to %"class.blink::FragmentationContext"*
  br i1 %30, label %33, label %55

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %33, %37
  %38 = phi %"class.blink::LayoutObject"* [ %40, %37 ], [ %3, %33 ]
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %37, label %44

44:                                               ; preds = %37, %33
  %45 = phi %"class.blink::Node"* [ %35, %33 ], [ %42, %37 ]
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 113
  %51 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ViewFragmentationContext", %"class.blink::ViewFragmentationContext"* %53, i64 0, i32 0
  br label %55

55:                                               ; preds = %5, %27, %44
  %56 = phi %"class.blink::FragmentationContext"* [ %54, %44 ], [ %32, %27 ], [ null, %5 ]
  ret %"class.blink::FragmentationContext"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %1, i32 %2)
  %15 = icmp eq %"class.blink::LayoutMultiColumnSet"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = tail call i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"* nonnull %14, i32 %1, i32 %2, i32 %3) #13
  %18 = and i64 %17, -4294967296
  %19 = and i64 %17, 4294967295
  br label %20

20:                                               ; preds = %9, %4, %13, %16
  %21 = phi i64 [ %18, %16 ], [ 0, %9 ], [ 0, %13 ], [ 0, %4 ]
  %22 = phi i64 [ %19, %16 ], [ 0, %9 ], [ 0, %13 ], [ 0, %4 ]
  %23 = or i64 %22, %21
  ret i64 %23
}

declare i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread28FlowThreadPointToVisualPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %21, !prof !3

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %4, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %4) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  br label %21

21:                                               ; preds = %12, %2
  %22 = phi i32 [ %20, %12 ], [ %4, %2 ]
  %23 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = trunc i96 %27 to i32
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 %24, i32 %22
  %31 = icmp ne i160 %10, 5070602400912917605986812821504
  %32 = zext i1 %31 to i32
  %33 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %51

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %30, i32 %32) #13
  %43 = icmp eq %"class.blink::LayoutMultiColumnSet"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = tail call i64 @_ZNK5blink20LayoutMultiColumnSet29FlowThreadTranslationAtOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleENS_25CoordinateSpaceConversionE(%"class.blink::LayoutMultiColumnSet"* nonnull %42, i32 %30, i32 %32, i32 1) #13
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %46, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  br label %51

51:                                               ; preds = %21, %41, %37, %44
  %52 = phi i32 [ %46, %44 ], [ 0, %37 ], [ 0, %41 ], [ 0, %21 ]
  %53 = phi i32 [ %48, %44 ], [ 0, %37 ], [ 0, %41 ], [ 0, %21 ]
  %54 = phi i32 [ %50, %44 ], [ 2147483647, %37 ], [ 2147483647, %41 ], [ 2147483647, %21 ]
  %55 = load i32, i32* %3, align 4
  %56 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %52) #13
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %54, i32 %58, !prof !3
  %60 = load i32, i32* %23, align 4
  %61 = icmp slt i32 %53, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %53) #13
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !3
  %67 = zext i32 %66 to i64
  %68 = shl nuw i64 %67, 32
  %69 = zext i32 %59 to i64
  %70 = or i64 %68, %69
  ret i64 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread28VisualPointToFlowThreadPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::LayoutPoint"*
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = select i1 %9, i32 %13, i32 %11
  %15 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %109, label %18

18:                                               ; preds = %2, %25
  %19 = phi %"class.blink::LayoutObject"* [ %27, %25 ], [ %16, %2 ]
  %20 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*, i32)***
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* nonnull %19, i32 20) #13
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 9
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %109, label %18

29:                                               ; preds = %18
  %30 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %30, label %109, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::LayoutObject"* %19 to %"class.blink::LayoutMultiColumnSet"*
  br label %33

33:                                               ; preds = %31, %59
  %34 = phi %"class.blink::LayoutMultiColumnSet"* [ %60, %59 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = and i160 %39, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %44 = select i1 %41, i32* %42, i32* %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %47 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %48 = select i1 %41, i32* %46, i32* %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %49) #13
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !3
  %56 = icmp sgt i32 %55, %14
  br i1 %56, label %57, label %59

57:                                               ; preds = %33
  %58 = bitcast i64* %3 to i8*
  br label %64

59:                                               ; preds = %33
  %60 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %34) #13
  %61 = icmp eq %"class.blink::LayoutMultiColumnSet"* %60, null
  br i1 %61, label %62, label %33

62:                                               ; preds = %59
  %63 = bitcast i64* %3 to i8*
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i8* [ %63, %62 ], [ %58, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"class.blink::LayoutRect"* %66 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = load i32, i32* %10, align 4
  %73 = icmp slt i32 %69, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %69) #13
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !3
  %79 = load i32, i32* %12, align 4
  %80 = icmp slt i32 %71, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %71) #13
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !3
  %86 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %34, i64 0, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"class.blink::LayoutRect"* %86 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = trunc i64 %88 to i32
  %90 = lshr i64 %88, 32
  %91 = trunc i64 %90 to i32
  %92 = icmp sgt i32 %89, -1
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %78, i32 %89) #13
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !3
  %98 = icmp sgt i32 %91, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %85, i32 %91) #13
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = zext i32 %103 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %97 to i64
  %107 = or i64 %105, %106
  store i64 %107, i64* %3, align 8
  %108 = call i64 @_ZNK5blink20LayoutMultiColumnSet28VisualPointToFlowThreadPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnSet"* nonnull %34, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %4) #13
  br label %113

109:                                              ; preds = %25, %2, %29
  %110 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  %111 = bitcast %"class.blink::LayoutPoint"* %1 to i64*
  %112 = load i64, i64* %111, align 4
  br label %113

113:                                              ; preds = %109, %64
  %114 = phi i8* [ %65, %64 ], [ %110, %109 ]
  %115 = phi i64 [ %108, %64 ], [ %112, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #13
  ret i64 %115
}

declare i64 @_ZNK5blink20LayoutMultiColumnSet28VisualPointToFlowThreadPointERKNS_11LayoutPointE(%"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink27LayoutMultiColumnFlowThread19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0
  %4 = tail call i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"* %3, i32 %1) #13
  %5 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %4, i32 1)
  %6 = icmp eq %"class.blink::LayoutMultiColumnSet"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet23PageLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %5, i32 %4) #13
  %9 = icmp sgt i32 %8, -1
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %8) #13
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !3
  %15 = icmp sgt i32 %14, 2147483583
  br i1 %15, label %23, label %16, !prof !3

16:                                               ; preds = %7
  %17 = icmp sgt i32 %14, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = add nuw nsw i32 %14, 63
  %20 = sdiv i32 %19, 64
  br label %23

21:                                               ; preds = %16
  %22 = sdiv i32 %14, 64
  br label %23

23:                                               ; preds = %21, %18, %7
  %24 = phi i32 [ %20, %18 ], [ %22, %21 ], [ 33554431, %7 ]
  %25 = shl nsw i32 %24, 6
  br label %26

26:                                               ; preds = %2, %23
  %27 = phi i32 [ %25, %23 ], [ %4, %2 ]
  ret i32 %27
}

declare i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink20LayoutMultiColumnSet23PageLogicalTopForOffsetENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutMultiColumnSet22LogicalTopInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet29PreviousSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutMultiColumnSet24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutMultiColumnSet25LogicalBottomInFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread13LayoutColumnsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %1, %"class.blink::LayoutObject"* %3) #13
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread30CalculateColumnHeightAvailableEv(%"class.blink::LayoutMultiColumnFlowThread"* %0)
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutBlockFlow"**
  %6 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.blink::LayoutBlockFlow"* %6 to i32 (%"class.blink::LayoutBox"*, i32)***
  %11 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %11, i64 176
  %13 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBox"* %7, i32 %9) #13
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %171, label %16

16:                                               ; preds = %2
  %17 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 1099511627776
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = tail call %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88) %24, i32 1) #13
  %26 = icmp eq %"class.blink::LayoutFlowThread"* %25, null
  %27 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %25, i64 1
  %28 = bitcast %"class.blink::LayoutFlowThread"* %27 to %"class.blink::FragmentationContext"*
  br i1 %26, label %29, label %51

29:                                               ; preds = %23, %16
  %30 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %29, %33
  %34 = phi %"class.blink::LayoutObject"* [ %36, %33 ], [ %3, %29 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %33, label %40

40:                                               ; preds = %33, %29
  %41 = phi %"class.blink::Node"* [ %31, %29 ], [ %38, %33 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 113
  %47 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ViewFragmentationContext", %"class.blink::ViewFragmentationContext"* %49, i64 0, i32 0
  br label %51

51:                                               ; preds = %23, %40
  %52 = phi %"class.blink::FragmentationContext"* [ %50, %40 ], [ %28, %23 ]
  %53 = icmp eq %"class.blink::FragmentationContext"* %52, null
  br i1 %53, label %171, label %54

54:                                               ; preds = %51
  %55 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %55, i64 0, i32 0, i32 0
  %57 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %56) #13
  %58 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 6, i32 0
  store i32 %57, i32* %58, align 8
  %59 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8, !noalias !5
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8, !noalias !5
  %66 = lshr i160 %65, 102
  %67 = trunc i160 %66 to i8
  %68 = and i8 %67, 3
  %69 = bitcast %"class.blink::LayoutBlockFlow"* %59 to i8*
  switch i8 %68, label %70 [
    i8 0, label %79
    i8 1, label %71
  ]

70:                                               ; preds = %54
  br label %71

71:                                               ; preds = %70, %54
  %72 = phi { i64, i64 } [ { i64 993, i64 0 }, %70 ], [ { i64 1001, i64 0 }, %54 ]
  %73 = extractvalue { i64, i64 } %72, 0
  %74 = extractvalue { i64, i64 } %72, 1
  %75 = getelementptr inbounds i8, i8* %69, i64 %74
  %76 = bitcast i8* %75 to %"class.blink::LayoutBoxModelObject"*
  %77 = and i64 %73, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %71, %54
  %80 = phi %"class.blink::LayoutBoxModelObject"* [ %76, %71 ], [ %60, %54 ]
  %81 = phi i8* [ %75, %71 ], [ %69, %54 ]
  %82 = phi i64 [ %73, %71 ], [ 977, %54 ]
  %83 = bitcast i8* %81 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = add i64 %82, -1
  %86 = getelementptr i8, i8* %84, i64 %85
  %87 = bitcast i8* %86 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %88 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %87, align 8
  br label %91

89:                                               ; preds = %71
  %90 = inttoptr i64 %73 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %91

91:                                               ; preds = %89, %79
  %92 = phi %"class.blink::LayoutBoxModelObject"* [ %80, %79 ], [ %76, %89 ]
  %93 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %88, %79 ], [ %90, %89 ]
  %94 = tail call i32 %93(%"class.blink::LayoutBoxModelObject"* %92) #13
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8, !noalias !8
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %95, i64 0, i32 0, i32 9
  %97 = bitcast [20 x i8]* %96 to i160*
  %98 = load i160, i160* %97, align 8, !noalias !8
  %99 = lshr i160 %98, 102
  %100 = trunc i160 %99 to i8
  %101 = and i8 %100, 3
  switch i8 %101, label %102 [
    i8 0, label %111
    i8 1, label %103
  ]

102:                                              ; preds = %91
  br label %103

103:                                              ; preds = %102, %91
  %104 = phi { i64, i64 } [ { i64 961, i64 0 }, %102 ], [ { i64 969, i64 0 }, %91 ]
  %105 = extractvalue { i64, i64 } %104, 0
  %106 = extractvalue { i64, i64 } %104, 1
  %107 = getelementptr inbounds i8, i8* %69, i64 %106
  %108 = bitcast i8* %107 to %"class.blink::LayoutBoxModelObject"*
  %109 = and i64 %105, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %103, %91
  %112 = phi %"class.blink::LayoutBoxModelObject"* [ %108, %103 ], [ %60, %91 ]
  %113 = phi i8* [ %107, %103 ], [ %69, %91 ]
  %114 = phi i64 [ %105, %103 ], [ 945, %91 ]
  %115 = bitcast i8* %113 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %114, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %120 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %119, align 8
  br label %123

121:                                              ; preds = %103
  %122 = inttoptr i64 %105 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %123

123:                                              ; preds = %111, %121
  %124 = phi %"class.blink::LayoutBoxModelObject"* [ %112, %111 ], [ %108, %121 ]
  %125 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %120, %111 ], [ %122, %121 ]
  %126 = tail call i32 %125(%"class.blink::LayoutBoxModelObject"* %124) #13
  %127 = icmp slt i32 %126, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %126) #13
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !3
  %133 = load i32, i32* %58, align 4
  %134 = icmp slt i32 %132, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %132) #13
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !3
  store i32 %139, i32* %58, align 4
  %140 = bitcast %"class.blink::FragmentationContext"* %52 to %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)***
  %141 = load %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)**, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)** %141, i64 5
  %143 = load %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)** %142, align 8
  %144 = tail call %"class.blink::LayoutMultiColumnFlowThread"* %143(%"class.blink::FragmentationContext"* nonnull %52) #13
  %145 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %123
  %147 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %171, label %150

150:                                              ; preds = %146, %157
  %151 = phi %"class.blink::LayoutObject"* [ %159, %157 ], [ %148, %146 ]
  %152 = bitcast %"class.blink::LayoutObject"* %151 to i1 (%"class.blink::LayoutObject"*, i32)***
  %153 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %152, align 8
  %154 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %153, i64 92
  %155 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %154, align 8
  %156 = tail call zeroext i1 %155(%"class.blink::LayoutObject"* nonnull %151, i32 20) #13
  br i1 %156, label %161, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %151, i64 0, i32 9
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %158, align 8
  %160 = icmp eq %"class.blink::LayoutObject"* %159, null
  br i1 %160, label %171, label %150

161:                                              ; preds = %150
  %162 = bitcast %"class.blink::LayoutObject"* %151 to %"class.blink::LayoutMultiColumnSet"*
  %163 = tail call i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"* nonnull %162) #13
  %164 = load i32, i32* %58, align 4
  %165 = icmp slt i32 %163, 0
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %164, i32 %163) #13
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !3
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread35AppendNewFragmentainerGroupIfNeededENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %144, i32 %170, i32 1)
  br label %171

171:                                              ; preds = %157, %146, %2, %123, %161, %51
  %172 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  store i8 1, i8* %172, align 1
  %173 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %174 = bitcast %"class.blink::LayoutObject"** %173 to %"class.blink::LayoutBox"**
  %175 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %174, align 8
  %176 = icmp eq %"class.blink::LayoutBox"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 8
  br label %185

179:                                              ; preds = %217, %171
  %180 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 8
  store i8 0, i8* %180, align 8
  %181 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %182 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %183 = load i8, i8* %182, align 8
  %184 = or i8 %183, 1
  store i8 %184, i8* %182, align 8
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread12UpdateLayoutEv(%"class.blink::LayoutMultiColumnFlowThread"* %0)
  tail call void @_ZN5blink16LayoutFlowThread18ValidateColumnSetsEv(%"class.blink::LayoutFlowThread"* %181) #13
  ret void

185:                                              ; preds = %177, %217
  %186 = phi %"class.blink::LayoutBox"* [ %175, %177 ], [ %220, %217 ]
  %187 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 0, i32 0
  %188 = bitcast %"class.blink::LayoutBox"* %186 to i1 (%"class.blink::LayoutObject"*, i32)***
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %189, i64 92
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %190, align 8
  %192 = tail call zeroext i1 %191(%"class.blink::LayoutObject"* %187, i32 20) #13
  br i1 %192, label %193, label %217

193:                                              ; preds = %185
  %194 = bitcast %"class.blink::LayoutBox"* %186 to %"class.blink::LayoutMultiColumnSet"*
  tail call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %1, %"class.blink::LayoutObject"* %187) #13
  %195 = load i8, i8* %178, align 8, !range !4
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %193
  tail call void @_ZN5blink20LayoutMultiColumnSet17ResetColumnHeightEv(%"class.blink::LayoutMultiColumnSet"* nonnull %194) #13
  br label %198

198:                                              ; preds = %193, %197
  %199 = load i8, i8* %172, align 1, !range !4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnSet"* nonnull %194) #13
  br i1 %202, label %204, label %203

203:                                              ; preds = %201
  store i8 0, i8* %172, align 1
  br label %204

204:                                              ; preds = %198, %203, %201
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 0, i32 0, i32 5, i32 0
  %206 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %206, i64 0, i32 0, i32 9
  %208 = bitcast [20 x i8]* %207 to i160*
  %209 = load i160, i160* %208, align 8
  %210 = and i160 %209, 15211807202738752817960438464512
  %211 = icmp eq i160 %210, 0
  %212 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 2, i32 0, i32 1, i32 0
  %213 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 2, i32 0, i32 0, i32 0
  %214 = select i1 %211, i32* %212, i32* %213
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 1, i32 5, i32 0, i32 0
  store i32 %215, i32* %216, align 4
  br label %217

217:                                              ; preds = %185, %204
  %218 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 0, i32 0, i32 9
  %219 = bitcast %"class.blink::LayoutObject"** %218 to %"class.blink::LayoutBox"**
  %220 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %219, align 8
  %221 = icmp eq %"class.blink::LayoutBox"* %220, null
  br i1 %221, label %179, label %185
}

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread30CalculateColumnHeightAvailableEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = bitcast %"class.blink::LayoutBlockFlow"* %5 to %"class.blink::LayoutBlock"*
  %7 = tail call zeroext i1 @_ZNK5blink11LayoutBlock24HasDefiniteLogicalHeightEv(%"class.blink::LayoutBlock"* %6) #13
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = icmp eq %"class.blink::LayoutBlockFlow"* %5, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11, i32 55) #13
  br i1 %16, label %17, label %64

17:                                               ; preds = %1, %10
  %18 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %30 = select i1 %27, i32* %28, i32* %29
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %5 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %33 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %33, i64 164
  %35 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %34, align 8
  call void %35(%"class.blink::LayoutBox"* %20, i32 0, i32 %31, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2) #13
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0
  %37 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %36)
  %38 = load i32, i32* %19, align 4
  %39 = icmp sgt i32 %37, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %37) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !3
  %45 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %20)
  %46 = extractvalue { i64, i64 } %45, 1
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %49) #13
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !3
  %56 = icmp sgt i32 %55, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %44, i32 %55) #13
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %62 = icmp sgt i32 %61, 0
  %63 = select i1 %62, i32 %61, i32 0
  br label %64

64:                                               ; preds = %17, %10, %8
  %65 = phi i32 [ 0, %8 ], [ 0, %10 ], [ %63, %17 ]
  %66 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 5, i32 0
  store i32 %65, i32* %66, align 4
  ret void
}

declare i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutMultiColumnSet33LogicalTopFromMulticolContentEdgeEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread35AppendNewFragmentainerGroupIfNeededENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread22ColumnSetAtBlockOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %1, i32 %2)
  %5 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet29NewFragmentainerGroupsAllowedEv(%"class.blink::LayoutMultiColumnSet"* %4) #13
  br i1 %5, label %6, label %84

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet28NeedsNewFragmentainerGroupAtENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %4, i32 %1, i32 %2) #13
  br i1 %7, label %8, label %84

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %11 = bitcast %"class.blink::LayoutObject"** %10 to %"class.blink::LayoutBlockFlow"**
  %12 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.blink::LayoutBlockFlow"* %12 to i32 (%"class.blink::LayoutBox"*, i32)***
  %17 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %17, i64 176
  %19 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::LayoutBox"* %13, i32 %15) #13
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %57, label %22

22:                                               ; preds = %8
  %23 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 1099511627776
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = tail call %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88) %30, i32 1) #13
  %32 = icmp eq %"class.blink::LayoutFlowThread"* %31, null
  %33 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %31, i64 1
  %34 = bitcast %"class.blink::LayoutFlowThread"* %33 to %"class.blink::FragmentationContext"*
  br i1 %32, label %35, label %57

35:                                               ; preds = %29, %22
  %36 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %39
  %40 = phi %"class.blink::LayoutObject"* [ %42, %39 ], [ %9, %35 ]
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %39, label %46

46:                                               ; preds = %39, %35
  %47 = phi %"class.blink::Node"* [ %37, %35 ], [ %44, %39 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 113
  %53 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ViewFragmentationContext", %"class.blink::ViewFragmentationContext"* %55, i64 0, i32 0
  br label %57

57:                                               ; preds = %8, %29, %46
  %58 = phi %"class.blink::FragmentationContext"* [ %56, %46 ], [ %34, %29 ], [ null, %8 ]
  %59 = bitcast %"class.blink::FragmentationContext"* %58 to %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)***
  %60 = load %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)**, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)** %60, i64 5
  %62 = load %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)*, %"class.blink::LayoutMultiColumnFlowThread"* (%"class.blink::FragmentationContext"*)** %61, align 8
  %63 = tail call %"class.blink::LayoutMultiColumnFlowThread"* %62(%"class.blink::FragmentationContext"* %58) #13
  %64 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %63, null
  %65 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 1, i32 1
  %66 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  br label %67

67:                                               ; preds = %81, %57
  br i1 %64, label %81, label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %66, align 4
  %70 = add i32 %69, -1
  %71 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1995"* %65, i32 %70) #13
  %72 = tail call i32 @_ZNK5blink29MultiColumnFragmentainerGroup42BlockOffsetInEnclosingFragmentationContextEv(%"class.blink::MultiColumnFragmentainerGroup"* %71) #13
  %73 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %71, i64 0, i32 4, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %74) #13
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !3
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread35AppendNewFragmentainerGroupIfNeededENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %63, i32 %80, i32 1)
  br label %81

81:                                               ; preds = %67, %68
  %82 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN5blink20LayoutMultiColumnSet27AppendNewFragmentainerGroupEv(%"class.blink::LayoutMultiColumnSet"* %4) #13
  %83 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet28NeedsNewFragmentainerGroupAtENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"* %4, i32 %1, i32 %2) #13
  br i1 %83, label %67, label %84

84:                                               ; preds = %81, %6, %3
  ret void
}

declare void @_ZN5blink20LayoutMultiColumnSet17ResetColumnHeightEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread12UpdateLayoutEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #13
  br i1 %11, label %18, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %16, label %5

16:                                               ; preds = %12, %1
  %17 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %17, align 8
  br label %22

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %20 = bitcast %"class.blink::LayoutMultiColumnSet"** %19 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject"** %20, align 8
  %21 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  tail call void @_ZN5blink20LayoutMultiColumnSet9BeginFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %21, i32 0) #13
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi %"class.blink::LayoutMultiColumnSet"** [ %17, %16 ], [ %19, %18 ]
  %24 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  tail call void @_ZN5blink16LayoutFlowThread12UpdateLayoutEv(%"class.blink::LayoutFlowThread"* %24) #13
  %25 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %26 = bitcast %"class.blink::LayoutObject"** %25 to %"class.blink::LayoutBlock"**
  %27 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %27, i64 0, i32 1, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %94, label %31

31:                                               ; preds = %22, %38
  %32 = phi %"class.blink::LayoutObject"* [ %40, %38 ], [ %29, %22 ]
  %33 = bitcast %"class.blink::LayoutObject"* %32 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* nonnull %32, i32 20) #13
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 8
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %94, label %31

42:                                               ; preds = %31
  %43 = bitcast %"class.blink::LayoutObject"* %32 to %"class.blink::LayoutMultiColumnSet"*
  %44 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %43) #13
  %45 = icmp eq %"class.blink::LayoutMultiColumnSet"* %44, null
  br i1 %45, label %46, label %94

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %49 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %48, align 8
  %50 = icmp eq %"struct.blink::BoxOverflowModel"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 4, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.blink::LayoutRect"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"class.blink::LayoutSize"* %59 to i64*
  %61 = load i64, i64* %60, align 4
  br label %66

62:                                               ; preds = %51, %46
  %63 = tail call { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"* %47) #13
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  br label %66

66:                                               ; preds = %55, %62
  %67 = phi i64 [ %58, %55 ], [ %64, %62 ]
  %68 = phi i64 [ %61, %55 ], [ %65, %62 ]
  %69 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  %71 = load i96, i96* %70, align 4
  %72 = trunc i96 %71 to i32
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %66
  %75 = lshr i64 %67, 32
  %76 = trunc i64 %75 to i32
  %77 = lshr i64 %68, 32
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %78) #13
  br label %88

82:                                               ; preds = %66
  %83 = trunc i64 %67 to i32
  %84 = trunc i64 %68 to i32
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %83, i32 %84) #13
  br label %88

88:                                               ; preds = %82, %74
  %89 = phi { i32, i1 } [ %87, %82 ], [ %81, %74 ]
  %90 = phi i32 [ %86, %82 ], [ %80, %74 ]
  %91 = extractvalue { i32, i1 } %89, 1
  %92 = extractvalue { i32, i1 } %89, 0
  %93 = select i1 %91, i32 %90, i32 %92
  tail call void @_ZN5blink20LayoutMultiColumnSet7EndFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %43, i32 %93) #13
  br label %94

94:                                               ; preds = %38, %22, %42, %88
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %23, align 8
  ret void
}

declare void @_ZN5blink16LayoutFlowThread18ValidateColumnSetsEv(%"class.blink::LayoutFlowThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread24ColumnRuleStyleDidChangeEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #13
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %20, label %5

16:                                               ; preds = %5
  %17 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  br label %21

20:                                               ; preds = %12, %21, %1, %16
  ret void

21:                                               ; preds = %18, %21
  %22 = phi %"class.blink::LayoutMultiColumnSet"* [ %24, %21 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %23, i8 zeroext 5) #13
  %24 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %22) #13
  %25 = icmp eq %"class.blink::LayoutMultiColumnSet"* %24, null
  br i1 %25, label %20, label %21
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27LayoutMultiColumnFlowThread39RemoveSpannerPlaceholderIfNoLongerValidEPNS_9LayoutBoxE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread30DescendantIsValidColumnSpannerEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %3)
  br i1 %4, label %52, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %7 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %6, align 8
  %8 = icmp eq %"struct.blink::LayoutBoxRareData"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %7, i64 0, i32 0
  %11 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %11, %9 ], [ null, %5 ]
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %13, i64 0, i32 0, i32 0, i32 0, i32 9
  %15 = bitcast %"class.blink::LayoutObject"** %14 to %"class.blink::LayoutBox"**
  %16 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutBox"* %16, null
  br i1 %17, label %48, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %13, i64 0, i32 0, i32 0, i32 0, i32 8
  %20 = bitcast %"class.blink::LayoutObject"** %19 to %"class.blink::LayoutBox"**
  %21 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::LayoutBox"* %21 to i1 (%"class.blink::LayoutObject"*)***
  %24 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, i64 25
  %26 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %22) #13
  %28 = select i1 %27, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %21
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %16, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBox"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %29, i32 20) #13
  %35 = icmp ne %"class.blink::LayoutBox"* %28, null
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %48

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::LayoutBox"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %38, i32 20) #13
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %29) #13
  %45 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %46 = load i8, i8* %45, align 8
  %47 = or i8 %46, 1
  store i8 %47, i8* %45, align 8
  br label %48

48:                                               ; preds = %12, %18, %37, %44
  %49 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %49) #13
  %50 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %51, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason15kColumnsChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %51, i32 1) #13
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread31FlowThreadDescendantWasInsertedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %3)
  br label %52

52:                                               ; preds = %2, %48
  %53 = phi i1 [ true, %48 ], [ false, %2 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread30DescendantIsValidColumnSpannerEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 45
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 536870912
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %105, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 201326592
  %21 = icmp eq i96 %20, 67108864
  br i1 %21, label %22, label %105

22:                                               ; preds = %16
  %23 = and i96 %19, 8388608
  %24 = icmp ne i96 %23, 0
  %25 = and i96 %19, 113336795588871485128704
  %26 = icmp eq i96 %25, 75557863725914323419136
  %27 = or i1 %26, %24
  br i1 %27, label %105, label %28

28:                                               ; preds = %22
  %29 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %30 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::LayoutBlock"* %29 to i1 (%"class.blink::LayoutObject"*)***
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 24
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %30) #13
  br i1 %35, label %36, label %105

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutBox"**
  %39 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutBox"* %39, null
  br i1 %40, label %105, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutBlockFlow"**
  %44 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  br label %45

45:                                               ; preds = %41, %101
  %46 = phi %"class.blink::LayoutBox"* [ %39, %41 ], [ %103, %101 ]
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %46 to i1 (%"class.blink::LayoutObject"*)***
  %49 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %49, i64 25
  %51 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %47) #13
  br i1 %52, label %105, label %53

53:                                               ; preds = %45
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %48, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 24
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %47) #13
  br i1 %57, label %58, label %105

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::LayoutBox"* %46 to %"class.blink::LayoutBlockFlow"*
  %60 = bitcast %"class.blink::LayoutBox"* %46 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %61 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %61, i64 182
  %63 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutBlockFlow"* nonnull %59) #13
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0, i32 4
  %67 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %66 to i96*
  %68 = load i96, i96* %67, align 4
  %69 = and i96 %68, 68719476736
  %70 = icmp eq i96 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %65
  %72 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %43, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.blink::LayoutBlockFlow"* %72 to i1 (%"class.blink::LayoutObject"*)***
  %75 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, i64 28
  %77 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %73) #13
  br i1 %78, label %79, label %105

79:                                               ; preds = %71, %65
  %80 = load i32, i32* %44, align 4
  %81 = bitcast %"class.blink::LayoutBox"* %46 to i32 (%"class.blink::LayoutBox"*, i32)***
  %82 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %81, align 8
  %83 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %82, i64 176
  %84 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %83, align 8
  %85 = tail call i32 %84(%"class.blink::LayoutBox"* nonnull %46, i32 %80) #13
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %105, label %87

87:                                               ; preds = %79
  %88 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %48, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, i64 24
  %90 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %47) #13
  br i1 %91, label %92, label %101

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 2, i32 10, i32 1
  %94 = bitcast %"class.std::__1::unique_ptr.747"* %93 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %95 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %94, align 8
  %96 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %95, i64 0, i32 3
  %99 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %99, null
  br i1 %100, label %101, label %105

101:                                              ; preds = %92, %87, %97
  %102 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %47, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %103 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %102, i64 0, i32 0
  %104 = icmp eq %"class.blink::LayoutBlock"* %102, null
  br i1 %104, label %105, label %45

105:                                              ; preds = %101, %45, %97, %79, %71, %58, %53, %36, %16, %2, %22, %28
  %106 = phi i1 [ false, %16 ], [ false, %28 ], [ false, %22 ], [ false, %2 ], [ false, %36 ], [ false, %101 ], [ true, %45 ], [ false, %97 ], [ false, %79 ], [ false, %71 ], [ false, %58 ], [ false, %53 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread25DestroySpannerPlaceholderEPNS_35LayoutMultiColumnSpannerPlaceholderE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture, %"class.blink::LayoutMultiColumnSpannerPlaceholder"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 0, i32 0, i32 9
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBox"**
  %5 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBox"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 0, i32 0, i32 8
  %9 = bitcast %"class.blink::LayoutObject"** %8 to %"class.blink::LayoutBox"**
  %10 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %10 to i1 (%"class.blink::LayoutObject"*)***
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 25
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11) #13
  %17 = select i1 %16, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %10
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutBox"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %18, i32 20) #13
  %24 = icmp ne %"class.blink::LayoutBox"* %17, null
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %37

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutBox"* %17 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27, i32 20) #13
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %18) #13
  %34 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %35 = load i8, i8* %34, align 8
  %36 = or i8 %35, 1
  store i8 %36, i8* %34, align 8
  br label %37

37:                                               ; preds = %7, %26, %33, %2
  %38 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %38) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread31FlowThreadDescendantWasInsertedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %4 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %4, i64 92
  %6 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutObject"* %1, i32 58) #13
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %1, i32 67) #13
  br i1 %12, label %13, label %264

13:                                               ; preds = %8, %2
  %14 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %15 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %15, i64 25
  %17 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* %1) #13
  br i1 %18, label %264, label %19

19:                                               ; preds = %13
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %1, i32 20) #13
  br i1 %23, label %264, label %24

24:                                               ; preds = %19
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, i64 92
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* %1, i32 21) #13
  br i1 %28, label %264, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 113336795588871485128704
  %34 = icmp eq i96 %33, 75557863725914323419136
  br i1 %34, label %35, label %49

35:                                               ; preds = %29
  %36 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %37 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %36, i64 0, i32 0, i32 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = and i96 %39, 1099511627776
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %36, i64 0, i32 0, i32 0, i32 0
  %44 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %43) #13
  br label %45

45:                                               ; preds = %35, %42
  %46 = phi %"class.blink::LayoutFlowThread"* [ %44, %42 ], [ null, %35 ]
  %47 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %48 = icmp eq %"class.blink::LayoutFlowThread"* %46, %47
  br i1 %48, label %49, label %264

49:                                               ; preds = %45, %29
  %50 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %50) #13
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %78, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  br label %55

55:                                               ; preds = %75, %53
  %56 = phi %"class.blink::LayoutObject"* [ %51, %53 ], [ %76, %75 ]
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 4
  %58 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %57 to i96*
  %59 = load i96, i96* %58, align 4
  %60 = and i96 %59, 113336795588871485128704
  %61 = icmp eq i96 %60, 75557863725914323419136
  br i1 %61, label %62, label %78

62:                                               ; preds = %55
  %63 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %56, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %64 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %63, i64 0, i32 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 1099511627776
  %68 = icmp eq i96 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %63, i64 0, i32 0, i32 0, i32 0
  %71 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %70) #13
  br label %72

72:                                               ; preds = %69, %62
  %73 = phi %"class.blink::LayoutFlowThread"* [ %71, %69 ], [ null, %62 ]
  %74 = icmp eq %"class.blink::LayoutFlowThread"* %73, %54
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %56, %"class.blink::LayoutObject"* %50) #13
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %78, label %55

78:                                               ; preds = %55, %72, %75, %49
  %79 = phi %"class.blink::LayoutObject"* [ null, %49 ], [ %56, %55 ], [ %56, %72 ], [ null, %75 ]
  %80 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %80, label %264, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %83 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %84 = bitcast %"class.blink::LayoutObject"** %83 to %"class.blink::LayoutBox"**
  %85 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %86 = bitcast %"class.blink::LayoutObject"** %85 to %"class.blink::LayoutBlockFlow"**
  %87 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = icmp eq %"class.blink::LayoutObject"* %79, null
  %89 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %90 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  br label %91

91:                                               ; preds = %81, %261
  %92 = phi %"class.blink::LayoutObject"* [ %1, %81 ], [ %262, %261 ]
  %93 = icmp eq %"class.blink::LayoutObject"* %92, %1
  br i1 %93, label %142, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.blink::LayoutObject"* %92 to i1 (%"class.blink::LayoutObject"*, i32)***
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* nonnull %92, i32 58) #13
  br i1 %99, label %100, label %105

100:                                              ; preds = %94
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* nonnull %92, i32 67) #13
  br i1 %104, label %105, label %140

105:                                              ; preds = %100, %94
  %106 = bitcast %"class.blink::LayoutObject"* %92 to i1 (%"class.blink::LayoutObject"*)***
  %107 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %107, i64 25
  %109 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.blink::LayoutObject"* nonnull %92) #13
  br i1 %110, label %140, label %111

111:                                              ; preds = %105
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* nonnull %92, i32 20) #13
  br i1 %115, label %140, label %116

116:                                              ; preds = %111
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* nonnull %92, i32 21) #13
  br i1 %120, label %140, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 4
  %123 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %122 to i96*
  %124 = load i96, i96* %123, align 4
  %125 = and i96 %124, 113336795588871485128704
  %126 = icmp eq i96 %125, 75557863725914323419136
  br i1 %126, label %127, label %142

127:                                              ; preds = %121
  %128 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %92, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %129 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %128, i64 0, i32 0, i32 0, i32 0, i32 4
  %130 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %129 to i96*
  %131 = load i96, i96* %130, align 4
  %132 = and i96 %131, 1099511627776
  %133 = icmp eq i96 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %128, i64 0, i32 0, i32 0, i32 0
  %136 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %135) #13
  br label %137

137:                                              ; preds = %127, %134
  %138 = phi %"class.blink::LayoutFlowThread"* [ %136, %134 ], [ null, %127 ]
  %139 = icmp eq %"class.blink::LayoutFlowThread"* %138, %82
  br i1 %139, label %142, label %140

140:                                              ; preds = %100, %105, %116, %111, %137
  %141 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %92, %"class.blink::LayoutObject"* nonnull %1) #13
  br label %261

142:                                              ; preds = %137, %121, %91
  %143 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %92, %"class.blink::LayoutObject"* nonnull %1) #13
  %144 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %84, align 8
  %145 = icmp eq %"class.blink::LayoutBox"* %144, null
  br i1 %145, label %190, label %146

146:                                              ; preds = %142
  %147 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %86, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %147, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.blink::LayoutBlockFlow"* %147 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %150 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %150, i64 13
  %152 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %151, align 8
  %153 = tail call %"class.blink::LayoutObjectChildList"* %152(%"class.blink::LayoutObject"* %148) #13
  %154 = icmp eq %"class.blink::LayoutObjectChildList"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %153, i64 0, i32 1
  %157 = bitcast %"class.blink::LayoutObject"** %156 to %"class.blink::LayoutBox"**
  %158 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %157, align 8
  br label %159

159:                                              ; preds = %155, %146
  %160 = phi %"class.blink::LayoutBox"* [ %158, %155 ], [ null, %146 ]
  %161 = icmp eq %"class.blink::LayoutBox"* %160, %87
  %162 = select i1 %161, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %160
  %163 = icmp eq %"class.blink::LayoutBox"* %144, %162
  br i1 %163, label %164, label %173

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %144, i64 0, i32 0, i32 0
  %166 = bitcast %"class.blink::LayoutBox"* %144 to i1 (%"class.blink::LayoutObject"*, i32)***
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %166, align 8
  %168 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, i64 92
  %169 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %168, align 8
  %170 = tail call zeroext i1 %169(%"class.blink::LayoutObject"* %165, i32 21) #13
  %171 = icmp ne %"class.blink::LayoutObject"* %50, %92
  %172 = and i1 %171, %170
  br i1 %172, label %175, label %190

173:                                              ; preds = %159
  %174 = icmp eq %"class.blink::LayoutObject"* %50, %92
  br i1 %174, label %190, label %175

175:                                              ; preds = %164, %173
  br label %176

176:                                              ; preds = %175, %184
  %177 = phi %"class.blink::LayoutObject"* [ %186, %184 ], [ %92, %175 ]
  %178 = bitcast %"class.blink::LayoutObject"* %177 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %179 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %179, i64 44
  %181 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %180, align 8
  %182 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %181(%"class.blink::LayoutObject"* nonnull %177) #13
  %183 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %182, null
  br i1 %183, label %184, label %261

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %177, i64 0, i32 7
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %185, align 8
  %187 = icmp ne %"class.blink::LayoutObject"* %186, null
  %188 = icmp ne %"class.blink::LayoutObject"* %186, %50
  %189 = and i1 %188, %187
  br i1 %189, label %176, label %190

190:                                              ; preds = %184, %173, %142, %164
  %191 = tail call zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread30DescendantIsValidColumnSpannerEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* nonnull %92)
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = bitcast %"class.blink::LayoutObject"* %92 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread33CreateAndInsertSpannerPlaceholderEPNS_9LayoutBoxEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutBox"* nonnull %193, %"class.blink::LayoutObject"* %79)
  br label %261

194:                                              ; preds = %190
  br i1 %88, label %229, label %195

195:                                              ; preds = %194
  %196 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %89, align 8
  %197 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %196, i64 44
  %198 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %197, align 8
  %199 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %198(%"class.blink::LayoutObject"* nonnull %79) #13
  %200 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %199, null
  br i1 %200, label %261, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %199, i64 0, i32 0, i32 0, i32 0, i32 8
  %203 = bitcast %"class.blink::LayoutObject"** %202 to %"class.blink::LayoutBox"**
  %204 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %204, i64 0, i32 0, i32 0
  %206 = bitcast %"class.blink::LayoutBox"* %204 to i1 (%"class.blink::LayoutObject"*)***
  %207 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %206, align 8
  %208 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %207, i64 25
  %209 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %208, align 8
  %210 = tail call zeroext i1 %209(%"class.blink::LayoutObject"* %205) #13
  %211 = icmp eq %"class.blink::LayoutBox"* %204, null
  %212 = or i1 %211, %210
  br i1 %212, label %219, label %213

213:                                              ; preds = %201
  %214 = bitcast %"class.blink::LayoutBox"* %204 to i1 (%"class.blink::LayoutObject"*, i32)***
  %215 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %214, align 8
  %216 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %215, i64 92
  %217 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %216, align 8
  %218 = tail call zeroext i1 %217(%"class.blink::LayoutObject"* %205, i32 20) #13
  br i1 %218, label %261, label %219

219:                                              ; preds = %201, %213
  %220 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %86, align 8
  %221 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %222 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %221, align 8
  %223 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368) %82, %"class.blink::ComputedStyle"* dereferenceable(104) %222) #13
  %224 = bitcast %"class.blink::LayoutBlockFlow"* %220 to %"class.blink::LayoutBlock"*
  %225 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %199, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %224, %"class.blink::LayoutObject"* %225, %"class.blink::LayoutObject"* %226) #13
  %227 = load i8, i8* %90, align 8
  %228 = or i8 %227, 1
  store i8 %228, i8* %90, align 8
  br label %261

229:                                              ; preds = %194
  %230 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %86, align 8
  %231 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %230, i64 0, i32 0, i32 0, i32 0, i32 0
  %232 = bitcast %"class.blink::LayoutBlockFlow"* %230 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %233 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %232, align 8
  %234 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %233, i64 13
  %235 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %234, align 8
  %236 = tail call %"class.blink::LayoutObjectChildList"* %235(%"class.blink::LayoutObject"* %231) #13
  %237 = icmp eq %"class.blink::LayoutObjectChildList"* %236, null
  br i1 %237, label %252, label %238

238:                                              ; preds = %229
  %239 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %236, i64 0, i32 1
  %240 = bitcast %"class.blink::LayoutObject"** %239 to %"class.blink::LayoutBox"**
  %241 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %240, align 8
  %242 = icmp eq %"class.blink::LayoutBox"* %241, %87
  %243 = icmp eq %"class.blink::LayoutBox"* %241, null
  %244 = or i1 %242, %243
  br i1 %244, label %252, label %245

245:                                              ; preds = %238
  %246 = bitcast %"class.blink::LayoutBox"* %241 to i1 (%"class.blink::LayoutObject"*, i32)***
  %247 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %241, i64 0, i32 0, i32 0
  %248 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %246, align 8
  %249 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %248, i64 92
  %250 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %249, align 8
  %251 = tail call zeroext i1 %250(%"class.blink::LayoutObject"* %247, i32 20) #13
  br i1 %251, label %261, label %252

252:                                              ; preds = %229, %238, %245
  %253 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %86, align 8
  %254 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %255 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %254, align 8
  %256 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368) %82, %"class.blink::ComputedStyle"* dereferenceable(104) %255) #13
  %257 = bitcast %"class.blink::LayoutBlockFlow"* %253 to %"class.blink::LayoutBlock"*
  %258 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %257, %"class.blink::LayoutObject"* %258, %"class.blink::LayoutObject"* null) #13
  %259 = load i8, i8* %90, align 8
  %260 = or i8 %259, 1
  store i8 %260, i8* %90, align 8
  br label %261

261:                                              ; preds = %176, %245, %252, %195, %219, %213, %192, %140
  %262 = phi %"class.blink::LayoutObject"* [ %141, %140 ], [ %143, %192 ], [ %143, %213 ], [ %143, %219 ], [ %143, %195 ], [ %143, %252 ], [ %143, %245 ], [ %143, %176 ]
  %263 = icmp eq %"class.blink::LayoutObject"* %262, null
  br i1 %263, label %264, label %91

264:                                              ; preds = %261, %78, %45, %19, %24, %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnFlowThread"* @_ZNK5blink27LayoutMultiColumnFlowThread19EnclosingFlowThreadENS_16LayoutFlowThread24AncestorSearchConstraintE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 1099511627776
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88) %12, i32 %1) #13
  %14 = bitcast %"class.blink::LayoutFlowThread"* %13 to %"class.blink::LayoutMultiColumnFlowThread"*
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %14, %11 ], [ null, %2 ]
  ret %"class.blink::LayoutMultiColumnFlowThread"* %16
}

declare %"class.blink::LayoutFlowThread"* @_ZN5blink16LayoutFlowThread33LocateFlowThreadContainingBlockOfERKNS_12LayoutObjectENS0_24AncestorSearchConstraintE(%"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutMultiColumnSet29NewFragmentainerGroupsAllowedEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutMultiColumnSet28NeedsNewFragmentainerGroupAtENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnSet"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink29MultiColumnFragmentainerGroup42BlockOffsetInEnclosingFragmentationContextEv(%"class.blink::MultiColumnFragmentainerGroup"*) local_unnamed_addr #1

declare dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN5blink20LayoutMultiColumnSet27AppendNewFragmentainerGroupEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread17StartLayoutFromNGEj(%"class.blink::LayoutMultiColumnFlowThread"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutBox"**
  %6 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutBox"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %6, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::LayoutBox"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %9, i32 20) #13
  %15 = bitcast %"class.blink::LayoutBox"* %6 to %"class.blink::LayoutMultiColumnSet"*
  %16 = select i1 %14, %"class.blink::LayoutMultiColumnSet"* %15, %"class.blink::LayoutMultiColumnSet"* null
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::LayoutMultiColumnSet"* [ %16, %8 ], [ null, %2 ]
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnSet"* %18, %"class.blink::LayoutMultiColumnSet"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread21PendingColumnSetForNGEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutMultiColumnSet"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %3, i64 0, i32 1, i32 1
  %7 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1995"* %6, i32 0) #13
  %8 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %7, i64 0, i32 6
  %9 = load i8, i8* %8, align 4, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  br label %13

13:                                               ; preds = %5, %1, %11
  %14 = phi %"class.blink::LayoutMultiColumnSet"* [ %12, %11 ], [ null, %1 ], [ null, %5 ]
  ret %"class.blink::LayoutMultiColumnSet"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread33AppendNewFragmentainerGroupFromNGEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  %4 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN5blink20LayoutMultiColumnSet27AppendNewFragmentainerGroupEv(%"class.blink::LayoutMultiColumnSet"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread31SetCurrentColumnBlockSizeFromNGENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %4 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutMultiColumnSet"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -1
  %11 = tail call dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1995"* %7, i32 %10) #13
  tail call void @_ZN5blink29MultiColumnFragmentainerGroup24SetColumnBlockSizeFromNGENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"* %11, i32 %1) #13
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

declare void @_ZN5blink29MultiColumnFragmentainerGroup24SetColumnBlockSizeFromNGENS_10LayoutUnitE(%"class.blink::MultiColumnFragmentainerGroup"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread18FinishLayoutFromNGENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutBox"**
  %7 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutBox"* %7, null
  br i1 %8, label %9, label %38

9:                                                ; preds = %38, %2
  %10 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %11 = bitcast %"class.blink::LayoutObject"** %10 to %"class.blink::LayoutBlockFlow"**
  %12 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %12 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %15 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %15, i64 13
  %17 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %16, align 8
  %18 = tail call %"class.blink::LayoutObjectChildList"* %17(%"class.blink::LayoutObject"* %13) #13
  %19 = icmp eq %"class.blink::LayoutObjectChildList"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %50

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %18, i64 0, i32 1
  %24 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::LayoutBox"**
  %25 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::LayoutBox"* %25, %26
  %28 = icmp eq %"class.blink::LayoutBox"* %25, null
  %29 = or i1 %27, %28
  br i1 %29, label %50, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.blink::LayoutBox"* %25 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %25, i64 0, i32 0, i32 0
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %32, i32 20) #13
  %37 = bitcast %"class.blink::LayoutBox"* %25 to %"class.blink::LayoutMultiColumnSet"*
  br i1 %36, label %49, label %50

38:                                               ; preds = %2, %38
  %39 = phi %"class.blink::LayoutBox"* [ %47, %38 ], [ %7, %2 ]
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %40)
  %41 = bitcast %"class.blink::LayoutBox"* %39 to void (%"class.blink::LayoutBox"*)***
  %42 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %42, i64 151
  %44 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %43, align 8
  tail call void %44(%"class.blink::LayoutBox"* nonnull %39) #13
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 0, i32 0, i32 9
  %46 = bitcast %"class.blink::LayoutObject"** %45 to %"class.blink::LayoutBox"**
  %47 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutBox"* %47, null
  br i1 %48, label %9, label %38

49:                                               ; preds = %30
  tail call void @_ZN5blink20LayoutMultiColumnSet7EndFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %37, i32 %1) #13
  tail call void @_ZN5blink20LayoutMultiColumnSet18FinishLayoutFromNGEv(%"class.blink::LayoutMultiColumnSet"* nonnull %37) #13
  br label %50

50:                                               ; preds = %20, %30, %22, %49
  %51 = phi %"class.blink::LayoutBox"* [ %21, %20 ], [ %26, %30 ], [ %26, %22 ], [ %26, %49 ]
  %52 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  tail call void @_ZN5blink16LayoutFlowThread18ValidateColumnSetsEv(%"class.blink::LayoutFlowThread"* %52) #13
  %53 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = and i160 %57, 15211807202738752817960438464512
  %59 = icmp eq i160 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %1
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  store i32 %1, i32* %61, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %51) #13
  br label %70

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %1
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  store i32 %1, i32* %66, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %51) #13
  br label %70

70:                                               ; preds = %60, %64, %65, %69
  %71 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"* %71) #13
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %3)
  %72 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %72, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !11

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #13
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #13
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !11

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #13
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #13
  ret void
}

declare void @_ZN5blink20LayoutMultiColumnSet7EndFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #1

declare void @_ZN5blink20LayoutMultiColumnSet18FinishLayoutFromNGEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink27LayoutMultiColumnFlowThread33IsFragmentainerLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn368_N5blink27LayoutMultiColumnFlowThread33IsFragmentainerLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutMultiColumnFlowThread"*
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %3, i64 0, i32 9
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27LayoutMultiColumnFlowThread28FragmentainerLogicalHeightAtENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %4 = tail call i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"* %3, i32 %1) #13
  ret i32 %4
}

declare i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn368_N5blink27LayoutMultiColumnFlowThread28FragmentainerLogicalHeightAtENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %4 = bitcast %"class.blink::UntracedMember"* %3 to %"class.blink::LayoutFlowThread"*
  %5 = tail call i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"* %4, i32 %1) #13
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27LayoutMultiColumnFlowThread24RemainingLogicalHeightAtENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %4 = tail call i32 @_ZNK5blink16LayoutFlowThread35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutFlowThread"* %3, i32 %1, i32 1) #13
  ret i32 %4
}

declare i32 @_ZNK5blink16LayoutFlowThread35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutFlowThread"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn368_N5blink27LayoutMultiColumnFlowThread24RemainingLogicalHeightAtENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %4 = bitcast %"class.blink::UntracedMember"* %3 to %"class.blink::LayoutFlowThread"*
  %5 = tail call i32 @_ZNK5blink16LayoutFlowThread35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutFlowThread"* %4, i32 %1, i32 1) #13
  ret i32 %5
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24HasDefiniteLogicalHeightEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !12
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #13
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !15
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !15
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #13
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !3
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !18
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !18
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #13
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !21
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !21
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #13
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #13
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #13
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !3
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #13
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27LayoutMultiColumnFlowThread9ColumnGapERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %14 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %13, i32 %1) #13
  br label %30

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %19, i64 0, i32 1, i32 0, i32 5
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, 6.400000e+01
  %23 = fcmp ult float %22, 0xC1E0000000000000
  %24 = fcmp ugt float %22, 0x41DFFFFFE0000000
  %25 = fcmp ogt float %22, 0xC1E0000000000000
  %26 = select i1 %25, float %22, float 0xC1E0000000000000
  %27 = fptosi float %26 to i32
  %28 = select i1 %23, i32 0, i32 2147483647
  %29 = select i1 %24, i32 %28, i32 %27
  br label %30

30:                                               ; preds = %12, %15
  %31 = phi i32 [ %14, %12 ], [ %29, %15 ]
  ret i32 %31
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread29CreateAndInsertMultiColumnSetEPNS_9LayoutBoxE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368) %6, %"class.blink::ComputedStyle"* dereferenceable(104) %8) #13
  %10 = bitcast %"class.blink::LayoutBlockFlow"* %5 to %"class.blink::LayoutBlock"*
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %10, %"class.blink::LayoutObject"* %11, %"class.blink::LayoutObject"* %12) #13
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 8
  %15 = or i8 %14, 1
  store i8 %15, i8* %13, align 8
  ret void
}

declare %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread33CreateAndInsertSpannerPlaceholderEPNS_9LayoutBoxEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::LayoutObject"* %2, null
  br i1 %5, label %78, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %8 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %8, i64 44
  %10 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %10(%"class.blink::LayoutObject"* nonnull %2) #13
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %11, i64 0, i32 0
  %13 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %11, null
  br i1 %13, label %14, label %78

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %16 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL35PreviousInPreOrderSkippingOutOfFlowEPNS_27LayoutMultiColumnFlowThreadEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %15)
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  %18 = icmp eq %"class.blink::LayoutObject"* %16, %4
  %19 = or i1 %17, %18
  %20 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %21 = bitcast %"class.blink::LayoutObject"** %20 to %"class.blink::LayoutBox"**
  %22 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %21, align 8
  br i1 %19, label %78, label %23

23:                                               ; preds = %14
  %24 = icmp eq %"class.blink::LayoutBox"* %22, null
  br i1 %24, label %72, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %27 = bitcast %"class.blink::LayoutObject"** %26 to %"class.blink::LayoutBlockFlow"**
  %28 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBlockFlow"* %28 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %31 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %31, i64 13
  %33 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call %"class.blink::LayoutObjectChildList"* %33(%"class.blink::LayoutObject"* %29) #13
  %35 = icmp eq %"class.blink::LayoutObjectChildList"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %34, i64 0, i32 1
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutBox"**
  %39 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %38, align 8
  br label %40

40:                                               ; preds = %36, %25
  %41 = phi %"class.blink::LayoutBox"* [ %39, %36 ], [ null, %25 ]
  %42 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = icmp eq %"class.blink::LayoutBox"* %41, %42
  %44 = select i1 %43, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %41
  %45 = icmp eq %"class.blink::LayoutBox"* %22, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %22, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %22 to i1 (%"class.blink::LayoutObject"*, i32)***
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %47, i32 21) #13
  br i1 %52, label %53, label %72

53:                                               ; preds = %40, %46
  br label %54

54:                                               ; preds = %53, %62
  %55 = phi %"class.blink::LayoutObject"* [ %64, %62 ], [ %16, %53 ]
  %56 = bitcast %"class.blink::LayoutObject"* %55 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %57 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %57, i64 44
  %59 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %59(%"class.blink::LayoutObject"* nonnull %55) #13
  %61 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %60, null
  br i1 %61, label %62, label %68

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 7
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp ne %"class.blink::LayoutObject"* %64, null
  %66 = icmp ne %"class.blink::LayoutObject"* %64, %4
  %67 = and i1 %66, %65
  br i1 %67, label %54, label %72

68:                                               ; preds = %54
  %69 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %60, i64 0, i32 0, i32 0, i32 0, i32 9
  %70 = bitcast %"class.blink::LayoutObject"** %69 to %"class.blink::LayoutBox"**
  %71 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %70, align 8
  br label %78

72:                                               ; preds = %62, %46, %23
  %73 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread24MapDescendantToColumnSetEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* nonnull %16)
  %74 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %75 = bitcast %"class.blink::LayoutObject"** %74 to %"class.blink::LayoutBox"**
  %76 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutMultiColumnSet"* %73, null
  br label %78

78:                                               ; preds = %14, %72, %68, %6, %3
  %79 = phi i1 [ true, %6 ], [ true, %3 ], [ true, %68 ], [ %77, %72 ], [ true, %14 ]
  %80 = phi %"class.blink::LayoutBox"* [ %12, %6 ], [ null, %3 ], [ %71, %68 ], [ %76, %72 ], [ %22, %14 ]
  %81 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %82 = bitcast %"class.blink::LayoutObject"** %81 to %"class.blink::LayoutBlockFlow"**
  %83 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZN5blink35LayoutMultiColumnSpannerPlaceholder15CreateAnonymousERKNS_13ComputedStyleERNS_9LayoutBoxE(%"class.blink::ComputedStyle"* dereferenceable(104) %85, %"class.blink::LayoutBox"* dereferenceable(216) %1) #13
  %87 = bitcast %"class.blink::LayoutBlockFlow"* %83 to %"class.blink::LayoutBlock"*
  %88 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %87, %"class.blink::LayoutObject"* %88, %"class.blink::LayoutObject"* %89) #13
  tail call void @_ZN5blink9LayoutBox21SetSpannerPlaceholderERNS_35LayoutMultiColumnSpannerPlaceholderE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* dereferenceable(224) %86) #13
  br i1 %79, label %101, label %90

90:                                               ; preds = %78
  %91 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %82, align 8
  %92 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %93 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %95 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZN5blink20LayoutMultiColumnSet15CreateAnonymousERNS_16LayoutFlowThreadERKNS_13ComputedStyleE(%"class.blink::LayoutFlowThread"* dereferenceable(368) %92, %"class.blink::ComputedStyle"* dereferenceable(104) %94) #13
  %96 = bitcast %"class.blink::LayoutBlockFlow"* %91 to %"class.blink::LayoutBlock"*
  %97 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %96, %"class.blink::LayoutObject"* %97, %"class.blink::LayoutObject"* %89) #13
  %98 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %99 = load i8, i8* %98, align 8
  %100 = or i8 %99, 1
  store i8 %100, i8* %98, align 8
  br label %101

101:                                              ; preds = %78, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutObject"* @_ZN5blinkL35PreviousInPreOrderSkippingOutOfFlowEPNS_27LayoutMultiColumnFlowThreadEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %3) #13
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  %6 = icmp eq %"class.blink::LayoutObject"* %4, %3
  %7 = or i1 %5, %6
  br i1 %7, label %102, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  br label %10

10:                                               ; preds = %8, %97
  %11 = phi %"class.blink::LayoutObject"* [ %4, %8 ], [ %98, %97 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %13 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  %14 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %20, i64 0, i32 45
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 536870912
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %27 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %27, i64 44
  %29 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %29(%"class.blink::LayoutObject"* nonnull %11) #13
  %31 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %30, null
  br i1 %31, label %57, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 2, i32 4, i32 0, i64 4
  %34 = bitcast i8* %33 to %"struct.blink::LayoutBoxRareData"**
  %35 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %34, align 8
  %36 = icmp eq %"struct.blink::LayoutBoxRareData"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %35, i64 0, i32 0
  %39 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %38, align 8
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %39, %37 ], [ null, %32 ]
  %42 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %41, i64 0, i32 0, i32 0, i32 0, i32 7
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutBlockFlow"**
  %44 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %45, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, i64 0, i32 3
  %50 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %49, align 8
  br label %51

51:                                               ; preds = %40, %48
  %52 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %50, %48 ], [ null, %40 ]
  %53 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %52, %0
  br i1 %53, label %102, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  br label %97

57:                                               ; preds = %25, %10
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 1099511627776
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* nonnull %11) #13
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi %"class.blink::LayoutFlowThread"* [ %64, %63 ], [ null, %57 ]
  %67 = icmp eq %"class.blink::LayoutFlowThread"* %66, %9
  br i1 %67, label %68, label %95

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %70, %3
  br i1 %71, label %108, label %72

72:                                               ; preds = %68, %91
  %73 = phi %"class.blink::LayoutObject"* [ %93, %91 ], [ %70, %68 ]
  %74 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*)***
  %75 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, i64 24
  %77 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %73) #13
  %79 = icmp eq %"class.blink::LayoutObject"* %73, null
  %80 = xor i1 %78, true
  %81 = or i1 %79, %80
  br i1 %81, label %91, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 2, i32 10, i32 1
  %84 = bitcast %"class.std::__1::unique_ptr.747"* %83 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %85 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %84, align 8
  %86 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %85, i64 0, i32 3
  %89 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %87, %82, %72
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 7
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = icmp eq %"class.blink::LayoutObject"* %93, %3
  br i1 %94, label %108, label %72

95:                                               ; preds = %65
  %96 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %11, %"class.blink::LayoutObject"* %3) #13
  br label %97

97:                                               ; preds = %87, %95, %54
  %98 = phi %"class.blink::LayoutObject"* [ %56, %54 ], [ %96, %95 ], [ %73, %87 ]
  %99 = icmp eq %"class.blink::LayoutObject"* %98, null
  %100 = icmp eq %"class.blink::LayoutObject"* %98, %3
  %101 = or i1 %99, %100
  br i1 %101, label %102, label %10

102:                                              ; preds = %97, %51, %2
  %103 = phi %"class.blink::LayoutObject"* [ %4, %2 ], [ %11, %51 ], [ %98, %97 ]
  %104 = icmp eq %"class.blink::LayoutObject"* %103, null
  %105 = icmp eq %"class.blink::LayoutObject"* %103, %3
  %106 = or i1 %104, %105
  %107 = select i1 %106, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %103
  ret %"class.blink::LayoutObject"* %107

108:                                              ; preds = %68, %91
  ret %"class.blink::LayoutObject"* %11
}

declare %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZN5blink35LayoutMultiColumnSpannerPlaceholder15CreateAnonymousERKNS_13ComputedStyleERNS_9LayoutBoxE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox21SetSpannerPlaceholderERNS_35LayoutMultiColumnSpannerPlaceholderE(%"class.blink::LayoutBox"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* dereferenceable(224)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread20AddColumnSetToThreadEPNS_20LayoutMultiColumnSetE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnSet"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutMultiColumnSet"*, align 8
  %4 = alloca %"class.blink::LayoutMultiColumnSet"*, align 8
  %5 = alloca %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", align 8
  store %"class.blink::LayoutMultiColumnSet"* %1, %"class.blink::LayoutMultiColumnSet"** %3, align 8
  %6 = bitcast %"class.blink::LayoutMultiColumnSet"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* %1) #13
  store %"class.blink::LayoutMultiColumnSet"* %7, %"class.blink::LayoutMultiColumnSet"** %4, align 8
  %8 = icmp eq %"class.blink::LayoutMultiColumnSet"* %7, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* nonnull sret %5, %"class.WTF::LinkedHashSet.1928"* %13, %"class.blink::LayoutMultiColumnSet"** nonnull dereferenceable(8) %4)
  %15 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %11, align 8
  %16 = load %"class.WTF::VectorBackedLinkedList.1934"*, %"class.WTF::VectorBackedLinkedList.1934"** %12, align 8
  %17 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %13, i64 0, i32 0, i32 0
  %18 = call { %"struct.WTF::KeyValuePair.1933"*, i8 } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.1930"* %17, %"class.blink::LayoutMultiColumnSet"** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #13
  %19 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %18, 0
  %20 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %18, 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1, i32 1
  br i1 %22, label %36, label %24

24:                                               ; preds = %9
  %25 = call { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } @_ZN3WTF22VectorBackedLinkedListIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEE6insertIRS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_(%"class.WTF::VectorBackedLinkedList.1934"* %23, %"class.WTF::VectorBackedLinkedListNode.1938"* %15, %"class.WTF::VectorBackedLinkedList.1934"* %16, %"class.blink::LayoutMultiColumnSet"** nonnull dereferenceable(8) %3) #13
  %26 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %25, 0
  %27 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %25, 1
  %28 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %26 to i64
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %27, i64 0, i32 0
  %30 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %29, i32 0) #13
  %31 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %30 to i64
  %32 = sub i64 %28, %31
  %33 = lshr exact i64 %32, 4
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %19, i64 0, i32 1
  store i32 %34, i32* %35, align 8
  br label %41

36:                                               ; preds = %9
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %19, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %23, i64 0, i32 0
  %40 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %39, i32 %38) #13
  br label %41

41:                                               ; preds = %24, %36
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  br label %45

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 1
  %44 = call { %"class.blink::LayoutMultiColumnSet"**, i8 } @_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIRS3_EENS7_9AddResultEOT_(%"class.WTF::LinkedHashSet.1928"* %43, %"class.blink::LayoutMultiColumnSet"** nonnull dereferenceable(8) %3)
  br label %45

45:                                               ; preds = %42, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet.1928"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.1930"* %4, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8) %2) #13
  %6 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.1933"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 1
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %16, i32 0) #13, !noalias !24
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode.1938"* %17, %"class.WTF::VectorBackedLinkedListNode.1938"** %18, align 8, !alias.scope !24
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList.1934"* %14, %"class.WTF::VectorBackedLinkedList.1934"** %19, align 8, !alias.scope !24
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !27
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %7, align 8, !noalias !27
  %24 = load i32, i32* %9, align 8, !noalias !27
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %23, i64 %25
  br i1 %22, label %59, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair.1933"* [ %34, %33 ], [ %23, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.1933"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !27
  switch i64 %32, label %59 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.1933"* %34, %26
  br i1 %35, label %59, label %29

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %14, i64 0, i32 0
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %39, i32 %38) #13
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode.1938"* %40, %"class.WTF::VectorBackedLinkedListNode.1938"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList.1934"* %14, %"class.WTF::VectorBackedLinkedList.1934"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %1, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !30
  %45 = icmp eq i32 %44, 0
  %46 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %7, align 8, !noalias !30
  %47 = load i32, i32* %9, align 8, !noalias !30
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %46, i64 %48
  br i1 %45, label %59, label %50

50:                                               ; preds = %36
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair.1933"* [ %57, %56 ], [ %46, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1933"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !30
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair.1933"* %57, %49
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %52, %33, %29, %50, %36, %27, %15
  %60 = phi %"struct.WTF::KeyValuePair.1933"* [ %26, %15 ], [ %23, %27 ], [ %49, %36 ], [ %46, %50 ], [ %26, %33 ], [ %30, %29 ], [ %53, %52 ], [ %49, %56 ]
  %61 = phi %"struct.WTF::KeyValuePair.1933"* [ %26, %15 ], [ %26, %27 ], [ %49, %36 ], [ %49, %50 ], [ %26, %29 ], [ %26, %33 ], [ %49, %52 ], [ %49, %56 ]
  %62 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.1933"* %60, %"struct.WTF::KeyValuePair.1933"** %62, align 8, !alias.scope !33
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::LayoutMultiColumnSet *, WTF::HashTraits<blink::LayoutMultiColumnSet *>, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.1933"* %61, %"struct.WTF::KeyValuePair.1933"** %63, align 8, !alias.scope !33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutMultiColumnSet"**, i8 } @_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIRS3_EENS7_9AddResultEOT_(%"class.WTF::LinkedHashSet.1928"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %4, i32 0) #13, !noalias !34
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet.1928", %"class.WTF::LinkedHashSet.1928"* %0, i64 0, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.1933"*, i8 } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.1930"* %6, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8) %1, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = tail call { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } @_ZN3WTF22VectorBackedLinkedListIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEE6insertIRS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_(%"class.WTF::VectorBackedLinkedList.1934"* %3, %"class.WTF::VectorBackedLinkedListNode.1938"* %5, %"class.WTF::VectorBackedLinkedList.1934"* %3, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8) %1) #13
  %14 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %13, 0
  %15 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %13, 1
  %16 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %14 to i64
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %15, i64 0, i32 0
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %17, i32 0) #13
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %18 to i64
  %20 = sub i64 %16, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %8, i64 0, i32 1
  store i32 %22, i32* %23, align 8
  br label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %8, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %4, i32 %26) #13
  br label %28

28:                                               ; preds = %12, %24
  %29 = phi %"class.WTF::VectorBackedLinkedListNode.1938"* [ %14, %12 ], [ %27, %24 ]
  %30 = phi i8 [ 1, %12 ], [ 0, %24 ]
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %29, i64 0, i32 2
  %32 = insertvalue { %"class.blink::LayoutMultiColumnSet"**, i8 } undef, %"class.blink::LayoutMultiColumnSet"** %31, 0
  %33 = insertvalue { %"class.blink::LayoutMultiColumnSet"**, i8 } %32, i8 %30, 1
  ret { %"class.blink::LayoutMultiColumnSet"**, i8 } %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread16InsertedIntoTreeEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"* %2) #13
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutBlockFlow"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 28
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6) #13
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %13 = zext i1 %11 to i32
  store i32 %13, i32* %12, align 4
  ret void
}

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread21WillBeRemovedFromTreeEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %12
  %6 = phi %"class.blink::LayoutObject"* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 20) #13
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %20, label %5

16:                                               ; preds = %5
  %17 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutMultiColumnSet"*
  br label %31

20:                                               ; preds = %12, %31, %1, %16
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %22 = bitcast %"class.blink::LayoutObject"** %21 to %"class.blink::LayoutBlockFlow"**
  %23 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %24, align 8
  %26 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %25, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnFlowThread"* null, %"class.blink::LayoutMultiColumnFlowThread"** %28, align 8
  br label %29

29:                                               ; preds = %20, %27
  %30 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"* %30) #13
  ret void

31:                                               ; preds = %18, %31
  %32 = phi %"class.blink::LayoutMultiColumnSet"* [ %33, %31 ], [ %19, %18 ]
  tail call void @_ZN5blink20LayoutMultiColumnSet20DetachFromFlowThreadEv(%"class.blink::LayoutMultiColumnSet"* nonnull %32) #13
  %33 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %32) #13
  %34 = icmp eq %"class.blink::LayoutMultiColumnSet"* %33, null
  br i1 %34, label %20, label %31
}

declare void @_ZN5blink20LayoutMultiColumnSet20DetachFromFlowThreadEv(%"class.blink::LayoutMultiColumnSet"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread17SkipColumnSpannerEPKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture, %"class.blink::LayoutBox"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutBlockFlow"**
  %6 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %9 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, i64 28
  %11 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %7) #13
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %14, align 8
  br label %15

15:                                               ; preds = %13, %3
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %17 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  %18 = icmp eq %"struct.blink::LayoutBoxRareData"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %17, i64 0, i32 0
  %21 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %20, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %21, %19 ], [ null, %15 ]
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %23, i64 0, i32 0, i32 0, i32 0, i32 8
  %25 = bitcast %"class.blink::LayoutObject"** %24 to %"class.blink::LayoutBox"**
  %26 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutBox"* %26 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 25
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27) #13
  %33 = icmp eq %"class.blink::LayoutBox"* %26, null
  %34 = or i1 %33, %32
  br i1 %34, label %43, label %35

35:                                               ; preds = %22
  %36 = bitcast %"class.blink::LayoutBox"* %26 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %27, i32 20) #13
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::LayoutBox"* %26 to %"class.blink::LayoutMultiColumnSet"*
  tail call void @_ZN5blink20LayoutMultiColumnSet7EndFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %42, i32 %2) #13
  br label %43

43:                                               ; preds = %35, %22, %41
  %44 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %23, i64 0, i32 0, i32 0, i32 0, i32 9
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutBox"**
  %46 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutBox"* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0
  %50 = bitcast %"class.blink::LayoutBox"* %46 to i1 (%"class.blink::LayoutObject"*, i32)***
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %49, i32 20) #13
  br i1 %54, label %55, label %59

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::LayoutBox"* %46 to %"class.blink::LayoutMultiColumnSet"*
  %57 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %58 = bitcast %"class.blink::LayoutMultiColumnSet"** %57 to %"class.blink::LayoutBox"**
  store %"class.blink::LayoutBox"* %46, %"class.blink::LayoutBox"** %58, align 8
  tail call void @_ZN5blink20LayoutMultiColumnSet9BeginFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"* nonnull %56, i32 %2) #13
  br label %59

59:                                               ; preds = %48, %43, %55
  br i1 %12, label %85, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %62 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %63 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %63, i64 13
  %65 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %64, align 8
  %66 = tail call %"class.blink::LayoutObjectChildList"* %65(%"class.blink::LayoutObject"* %61) #13
  %67 = icmp eq %"class.blink::LayoutObjectChildList"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %66, i64 0, i32 0
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %68, %82
  %73 = phi %"class.blink::LayoutObject"* [ %83, %82 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = and i96 %76, 113336795588871552237568
  %78 = icmp eq i96 %77, 75557863725914390528000
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %73, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %81 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %80, %"class.blink::LayoutBox"* nonnull %81) #13
  br label %82

82:                                               ; preds = %72, %79
  %83 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEv(%"class.blink::LayoutObject"* nonnull %73) #13
  %84 = icmp eq %"class.blink::LayoutObject"* %83, null
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %60, %68, %59
  ret void
}

declare void @_ZN5blink20LayoutMultiColumnSet9BeginFlowENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnSet"*, i32) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27LayoutMultiColumnFlowThread12FinishLayoutEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 9
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1, %13
  %7 = phi %"class.blink::LayoutObject"* [ %15, %13 ], [ %4, %1 ]
  %8 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %7, i32 20) #13
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 9
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %28, label %6

17:                                               ; preds = %6
  %18 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutMultiColumnSet"*
  br label %21

21:                                               ; preds = %19, %25
  %22 = phi %"class.blink::LayoutMultiColumnSet"* [ %26, %25 ], [ %20, %19 ]
  %23 = tail call zeroext i1 @_ZNK5blink20LayoutMultiColumnSet24IsPageLogicalHeightKnownEv(%"class.blink::LayoutMultiColumnSet"* nonnull %22) #13
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  store i8 0, i8* %2, align 1
  br label %28

25:                                               ; preds = %21
  %26 = tail call %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink20LayoutMultiColumnSet25NextSiblingMultiColumnSetEv(%"class.blink::LayoutMultiColumnSet"* nonnull %22) #13
  %27 = icmp eq %"class.blink::LayoutMultiColumnSet"* %26, null
  br i1 %27, label %28, label %21

28:                                               ; preds = %13, %25, %1, %17, %24
  %29 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 8
  %30 = load i8, i8* %29, align 8, !range !4
  %31 = icmp eq i8 %30, 0
  ret i1 %31
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread33FlowThreadDescendantWillBeRemovedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 2, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %385

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %1, i32 58) #13
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %1, i32 67) #13
  br i1 %17, label %18, label %385

18:                                               ; preds = %13, %7
  %19 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %20 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %20, i64 25
  %22 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %1) #13
  br i1 %23, label %385, label %24

24:                                               ; preds = %18
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, i64 92
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* %1, i32 20) #13
  br i1 %28, label %385, label %29

29:                                               ; preds = %24
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %1, i32 21) #13
  br i1 %33, label %385, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 113336795588871485128704
  %39 = icmp eq i96 %38, 75557863725914323419136
  br i1 %39, label %40, label %54

40:                                               ; preds = %34
  %41 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %42 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %41, i64 0, i32 0, i32 0, i32 0, i32 4
  %43 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %42 to i96*
  %44 = load i96, i96* %43, align 4
  %45 = and i96 %44, 1099511627776
  %46 = icmp eq i96 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %48) #13
  br label %50

50:                                               ; preds = %40, %47
  %51 = phi %"class.blink::LayoutFlowThread"* [ %49, %47 ], [ null, %40 ]
  %52 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %53 = icmp eq %"class.blink::LayoutFlowThread"* %51, %52
  br i1 %53, label %54, label %385

54:                                               ; preds = %50, %34
  %55 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %56 = bitcast %"class.blink::LayoutObject"** %55 to %"class.blink::LayoutBox"**
  %57 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutBox"* %57, null
  br i1 %58, label %105, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %61 = bitcast %"class.blink::LayoutObject"** %60 to %"class.blink::LayoutBlockFlow"**
  %62 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.blink::LayoutBlockFlow"* %62 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %65 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %65, i64 13
  %67 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %66, align 8
  %68 = tail call %"class.blink::LayoutObjectChildList"* %67(%"class.blink::LayoutObject"* %63) #13
  %69 = icmp eq %"class.blink::LayoutObjectChildList"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %68, i64 0, i32 1
  %72 = bitcast %"class.blink::LayoutObject"** %71 to %"class.blink::LayoutBox"**
  %73 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %72, align 8
  br label %74

74:                                               ; preds = %70, %59
  %75 = phi %"class.blink::LayoutBox"* [ %73, %70 ], [ null, %59 ]
  %76 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = icmp eq %"class.blink::LayoutBox"* %75, %76
  %78 = select i1 %77, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %75
  %79 = icmp eq %"class.blink::LayoutBox"* %57, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0
  %82 = bitcast %"class.blink::LayoutBox"* %57 to i1 (%"class.blink::LayoutObject"*, i32)***
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, i64 92
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %81, i32 21) #13
  br i1 %86, label %87, label %105

87:                                               ; preds = %80, %74
  %88 = icmp ne %"class.blink::LayoutObject"* %1, null
  %89 = icmp ne %"class.blink::LayoutObject"* %3, %1
  %90 = and i1 %89, %88
  br i1 %90, label %91, label %105

91:                                               ; preds = %87, %99
  %92 = phi %"class.blink::LayoutObject"* [ %101, %99 ], [ %1, %87 ]
  %93 = bitcast %"class.blink::LayoutObject"* %92 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %94 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %94, i64 44
  %96 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %95, align 8
  %97 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %96(%"class.blink::LayoutObject"* nonnull %92) #13
  %98 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 7
  %101 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %102 = icmp ne %"class.blink::LayoutObject"* %101, null
  %103 = icmp ne %"class.blink::LayoutObject"* %101, %3
  %104 = and i1 %103, %102
  br i1 %104, label %91, label %105

105:                                              ; preds = %91, %99, %54, %80, %87
  %106 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ null, %54 ], [ null, %80 ], [ null, %87 ], [ null, %99 ], [ %97, %91 ]
  %107 = icmp ne %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %106, null
  %108 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %108, label %385, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %111 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  br label %116

112:                                              ; preds = %214
  %113 = and i8 %215, 1
  %114 = icmp eq i8 %113, 0
  %115 = or i1 %107, %114
  br i1 %115, label %385, label %218

116:                                              ; preds = %109, %214
  %117 = phi %"class.blink::LayoutObject"* [ %1, %109 ], [ %216, %214 ]
  %118 = phi i8 [ 0, %109 ], [ %215, %214 ]
  %119 = icmp eq %"class.blink::LayoutObject"* %117, %1
  br i1 %119, label %168, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.blink::LayoutObject"* %117 to i1 (%"class.blink::LayoutObject"*, i32)***
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, i64 92
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.blink::LayoutObject"* nonnull %117, i32 58) #13
  br i1 %125, label %126, label %131

126:                                              ; preds = %120
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %121, align 8
  %128 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, i64 92
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, align 8
  %130 = tail call zeroext i1 %129(%"class.blink::LayoutObject"* nonnull %117, i32 67) #13
  br i1 %130, label %131, label %166

131:                                              ; preds = %126, %120
  %132 = bitcast %"class.blink::LayoutObject"* %117 to i1 (%"class.blink::LayoutObject"*)***
  %133 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %132, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %133, i64 25
  %135 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* nonnull %117) #13
  br i1 %136, label %166, label %137

137:                                              ; preds = %131
  %138 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %121, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, i64 92
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.blink::LayoutObject"* nonnull %117, i32 20) #13
  br i1 %141, label %166, label %142

142:                                              ; preds = %137
  %143 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %121, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %143, i64 92
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, align 8
  %146 = tail call zeroext i1 %145(%"class.blink::LayoutObject"* nonnull %117, i32 21) #13
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 0, i32 4
  %149 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %148 to i96*
  %150 = load i96, i96* %149, align 4
  %151 = and i96 %150, 113336795588871485128704
  %152 = icmp eq i96 %151, 75557863725914323419136
  br i1 %152, label %153, label %168

153:                                              ; preds = %147
  %154 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %117, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %155 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %154, i64 0, i32 0, i32 0, i32 0, i32 4
  %156 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %155 to i96*
  %157 = load i96, i96* %156, align 4
  %158 = and i96 %157, 1099511627776
  %159 = icmp eq i96 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %154, i64 0, i32 0, i32 0, i32 0
  %162 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %161) #13
  br label %163

163:                                              ; preds = %153, %160
  %164 = phi %"class.blink::LayoutFlowThread"* [ %162, %160 ], [ null, %153 ]
  %165 = icmp eq %"class.blink::LayoutFlowThread"* %164, %110
  br i1 %165, label %168, label %166

166:                                              ; preds = %126, %131, %142, %137, %163
  %167 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %117, %"class.blink::LayoutObject"* nonnull %1) #13
  br label %214

168:                                              ; preds = %163, %147, %116
  %169 = bitcast %"class.blink::LayoutObject"* %117 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %170 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %169, align 8
  %171 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %170, i64 44
  %172 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %171, align 8
  %173 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %172(%"class.blink::LayoutObject"* nonnull %117) #13
  %174 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %173, null
  br i1 %174, label %175, label %177

175:                                              ; preds = %168
  %176 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %117, %"class.blink::LayoutObject"* nonnull %1) #13
  br label %214

177:                                              ; preds = %168
  %178 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %117, %"class.blink::LayoutObject"* nonnull %1) #13
  %179 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %173, i64 0, i32 0, i32 0, i32 0, i32 9
  %180 = bitcast %"class.blink::LayoutObject"** %179 to %"class.blink::LayoutBox"**
  %181 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %180, align 8
  %182 = icmp eq %"class.blink::LayoutBox"* %181, null
  br i1 %182, label %212, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %173, i64 0, i32 0, i32 0, i32 0, i32 8
  %185 = bitcast %"class.blink::LayoutObject"** %184 to %"class.blink::LayoutBox"**
  %186 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %186, i64 0, i32 0, i32 0
  %188 = bitcast %"class.blink::LayoutBox"* %186 to i1 (%"class.blink::LayoutObject"*)***
  %189 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %189, i64 25
  %191 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %190, align 8
  %192 = tail call zeroext i1 %191(%"class.blink::LayoutObject"* %187) #13
  %193 = select i1 %192, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %186
  %194 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0
  %195 = bitcast %"class.blink::LayoutBox"* %181 to i1 (%"class.blink::LayoutObject"*, i32)***
  %196 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %195, align 8
  %197 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %196, i64 92
  %198 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %197, align 8
  %199 = tail call zeroext i1 %198(%"class.blink::LayoutObject"* %194, i32 20) #13
  %200 = icmp ne %"class.blink::LayoutBox"* %193, null
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %212

202:                                              ; preds = %183
  %203 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %193, i64 0, i32 0, i32 0
  %204 = bitcast %"class.blink::LayoutBox"* %193 to i1 (%"class.blink::LayoutObject"*, i32)***
  %205 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %204, align 8
  %206 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %205, i64 92
  %207 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %206, align 8
  %208 = tail call zeroext i1 %207(%"class.blink::LayoutObject"* %203, i32 20) #13
  br i1 %208, label %209, label %212

209:                                              ; preds = %202
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %194) #13
  %210 = load i8, i8* %111, align 8
  %211 = or i8 %210, 1
  store i8 %211, i8* %111, align 8
  br label %212

212:                                              ; preds = %177, %183, %202, %209
  %213 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %173, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %213) #13
  br label %214

214:                                              ; preds = %175, %212, %166
  %215 = phi i8 [ %118, %166 ], [ 1, %212 ], [ 1, %175 ]
  %216 = phi %"class.blink::LayoutObject"* [ %167, %166 ], [ %178, %212 ], [ %176, %175 ]
  %217 = icmp eq %"class.blink::LayoutObject"* %216, null
  br i1 %217, label %112, label %116

218:                                              ; preds = %112
  %219 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL35PreviousInPreOrderSkippingOutOfFlowEPNS_27LayoutMultiColumnFlowThreadEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* nonnull %1)
  %220 = icmp eq %"class.blink::LayoutObject"* %219, null
  %221 = icmp eq %"class.blink::LayoutObject"* %219, %3
  %222 = or i1 %220, %221
  br i1 %222, label %269, label %223

223:                                              ; preds = %218
  %224 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  %225 = icmp eq %"class.blink::LayoutBox"* %224, null
  br i1 %225, label %385, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %228 = bitcast %"class.blink::LayoutObject"** %227 to %"class.blink::LayoutBlockFlow"**
  %229 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %229, i64 0, i32 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.blink::LayoutBlockFlow"* %229 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %232 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %231, align 8
  %233 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %232, i64 13
  %234 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %233, align 8
  %235 = tail call %"class.blink::LayoutObjectChildList"* %234(%"class.blink::LayoutObject"* %230) #13
  %236 = icmp eq %"class.blink::LayoutObjectChildList"* %235, null
  br i1 %236, label %241, label %237

237:                                              ; preds = %226
  %238 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %235, i64 0, i32 1
  %239 = bitcast %"class.blink::LayoutObject"** %238 to %"class.blink::LayoutBox"**
  %240 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %239, align 8
  br label %241

241:                                              ; preds = %237, %226
  %242 = phi %"class.blink::LayoutBox"* [ %240, %237 ], [ null, %226 ]
  %243 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %244 = icmp eq %"class.blink::LayoutBox"* %242, %243
  %245 = select i1 %244, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %242
  %246 = icmp eq %"class.blink::LayoutBox"* %224, %245
  br i1 %246, label %247, label %254

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %224, i64 0, i32 0, i32 0
  %249 = bitcast %"class.blink::LayoutBox"* %224 to i1 (%"class.blink::LayoutObject"*, i32)***
  %250 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %249, align 8
  %251 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %250, i64 92
  %252 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %251, align 8
  %253 = tail call zeroext i1 %252(%"class.blink::LayoutObject"* %248, i32 21) #13
  br i1 %253, label %254, label %385

254:                                              ; preds = %241, %247
  br label %255

255:                                              ; preds = %254, %263
  %256 = phi %"class.blink::LayoutObject"* [ %265, %263 ], [ %219, %254 ]
  %257 = bitcast %"class.blink::LayoutObject"* %256 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %258 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %257, align 8
  %259 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %258, i64 44
  %260 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %259, align 8
  %261 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %260(%"class.blink::LayoutObject"* nonnull %256) #13
  %262 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %261, null
  br i1 %262, label %263, label %269

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %256, i64 0, i32 7
  %265 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %264, align 8
  %266 = icmp ne %"class.blink::LayoutObject"* %265, null
  %267 = icmp ne %"class.blink::LayoutObject"* %265, %3
  %268 = and i1 %267, %266
  br i1 %268, label %255, label %385

269:                                              ; preds = %255, %218
  %270 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ null, %218 ], [ %261, %255 ]
  %271 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %1, %"class.blink::LayoutObject"* %3) #13
  %272 = icmp eq %"class.blink::LayoutObject"* %271, null
  br i1 %272, label %360, label %273

273:                                              ; preds = %269
  %274 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  br label %275

275:                                              ; preds = %295, %273
  %276 = phi %"class.blink::LayoutObject"* [ %271, %273 ], [ %296, %295 ]
  %277 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %276, i64 0, i32 4
  %278 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %277 to i96*
  %279 = load i96, i96* %278, align 4
  %280 = and i96 %279, 113336795588871485128704
  %281 = icmp eq i96 %280, 75557863725914323419136
  br i1 %281, label %282, label %298

282:                                              ; preds = %275
  %283 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %276, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %284 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %283, i64 0, i32 0, i32 0, i32 0, i32 4
  %285 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %284 to i96*
  %286 = load i96, i96* %285, align 4
  %287 = and i96 %286, 1099511627776
  %288 = icmp eq i96 %287, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %282
  %290 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %283, i64 0, i32 0, i32 0, i32 0
  %291 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %290) #13
  br label %292

292:                                              ; preds = %289, %282
  %293 = phi %"class.blink::LayoutFlowThread"* [ %291, %289 ], [ null, %282 ]
  %294 = icmp eq %"class.blink::LayoutFlowThread"* %293, %274
  br i1 %294, label %298, label %295

295:                                              ; preds = %292
  %296 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %276, %"class.blink::LayoutObject"* %3) #13
  %297 = icmp eq %"class.blink::LayoutObject"* %296, null
  br i1 %297, label %360, label %275

298:                                              ; preds = %292, %275
  %299 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  %300 = icmp eq %"class.blink::LayoutBox"* %299, null
  br i1 %300, label %385, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %303 = bitcast %"class.blink::LayoutObject"** %302 to %"class.blink::LayoutBlockFlow"**
  %304 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %304, i64 0, i32 0, i32 0, i32 0, i32 0
  %306 = bitcast %"class.blink::LayoutBlockFlow"* %304 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %307 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %306, align 8
  %308 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %307, i64 13
  %309 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %308, align 8
  %310 = tail call %"class.blink::LayoutObjectChildList"* %309(%"class.blink::LayoutObject"* %305) #13
  %311 = icmp eq %"class.blink::LayoutObjectChildList"* %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %301
  %313 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %310, i64 0, i32 1
  %314 = bitcast %"class.blink::LayoutObject"** %313 to %"class.blink::LayoutBox"**
  %315 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %314, align 8
  br label %316

316:                                              ; preds = %312, %301
  %317 = phi %"class.blink::LayoutBox"* [ %315, %312 ], [ null, %301 ]
  %318 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = icmp eq %"class.blink::LayoutBox"* %317, %318
  %320 = select i1 %319, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %317
  %321 = icmp eq %"class.blink::LayoutBox"* %299, %320
  br i1 %321, label %322, label %331

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %299, i64 0, i32 0, i32 0
  %324 = bitcast %"class.blink::LayoutBox"* %299 to i1 (%"class.blink::LayoutObject"*, i32)***
  %325 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %324, align 8
  %326 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %325, i64 92
  %327 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %326, align 8
  %328 = tail call zeroext i1 %327(%"class.blink::LayoutObject"* %323, i32 21) #13
  %329 = icmp ne %"class.blink::LayoutObject"* %3, %276
  %330 = and i1 %329, %328
  br i1 %330, label %333, label %385

331:                                              ; preds = %316
  %332 = icmp eq %"class.blink::LayoutObject"* %3, %276
  br i1 %332, label %385, label %333

333:                                              ; preds = %322, %331
  br label %334

334:                                              ; preds = %333, %342
  %335 = phi %"class.blink::LayoutObject"* [ %344, %342 ], [ %276, %333 ]
  %336 = bitcast %"class.blink::LayoutObject"* %335 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %337 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %336, align 8
  %338 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %337, i64 44
  %339 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %338, align 8
  %340 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %339(%"class.blink::LayoutObject"* nonnull %335) #13
  %341 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %340, null
  br i1 %341, label %342, label %348

342:                                              ; preds = %334
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %335, i64 0, i32 7
  %344 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %343, align 8
  %345 = icmp ne %"class.blink::LayoutObject"* %344, null
  %346 = icmp ne %"class.blink::LayoutObject"* %344, %3
  %347 = and i1 %346, %345
  br i1 %347, label %334, label %385

348:                                              ; preds = %334
  %349 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %340, i64 0, i32 0, i32 0, i32 0, i32 8
  %350 = bitcast %"class.blink::LayoutObject"** %349 to %"class.blink::LayoutBox"**
  %351 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %351, i64 0, i32 0, i32 0
  %353 = bitcast %"class.blink::LayoutBox"* %351 to i1 (%"class.blink::LayoutObject"*)***
  %354 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %353, align 8
  %355 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %354, i64 25
  %356 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %355, align 8
  %357 = tail call zeroext i1 %356(%"class.blink::LayoutObject"* %352) #13
  %358 = bitcast %"class.blink::LayoutBox"* %351 to %"class.blink::LayoutMultiColumnSet"*
  %359 = select i1 %357, %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"* %358
  br label %382

360:                                              ; preds = %295, %269
  %361 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %270, null
  br i1 %361, label %366, label %362

362:                                              ; preds = %360
  %363 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %270, i64 0, i32 0, i32 0, i32 0, i32 9
  %364 = bitcast %"class.blink::LayoutObject"** %363 to %"class.blink::LayoutMultiColumnSet"**
  %365 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %364, align 8
  br label %382

366:                                              ; preds = %360
  %367 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %368 = icmp eq %"class.blink::LayoutObject"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366, %376
  %370 = phi %"class.blink::LayoutObject"* [ %378, %376 ], [ %367, %366 ]
  %371 = bitcast %"class.blink::LayoutObject"* %370 to i1 (%"class.blink::LayoutObject"*, i32)***
  %372 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %371, align 8
  %373 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %372, i64 92
  %374 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %373, align 8
  %375 = tail call zeroext i1 %374(%"class.blink::LayoutObject"* nonnull %370, i32 20) #13
  br i1 %375, label %380, label %376

376:                                              ; preds = %369
  %377 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %370, i64 0, i32 9
  %378 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %377, align 8
  %379 = icmp eq %"class.blink::LayoutObject"* %378, null
  br i1 %379, label %382, label %369

380:                                              ; preds = %369
  %381 = bitcast %"class.blink::LayoutObject"* %370 to %"class.blink::LayoutMultiColumnSet"*
  br label %382

382:                                              ; preds = %376, %380, %366, %362, %348
  %383 = phi %"class.blink::LayoutMultiColumnSet"* [ %359, %348 ], [ %365, %362 ], [ %381, %380 ], [ null, %366 ], [ null, %376 ]
  %384 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet", %"class.blink::LayoutMultiColumnSet"* %383, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %384) #13
  br label %385

385:                                              ; preds = %263, %342, %105, %247, %331, %322, %298, %223, %50, %24, %29, %18, %13, %112, %382, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread35FlowThreadDescendantStyleWillChangeEPNS_9LayoutBoxENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  store i8 0, i8* @_ZN5blink27LayoutMultiColumnFlowThread26toggle_spanners_if_needed_E, align 1
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 7253554917687775048237056
  %12 = icmp eq i160 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 7253554917687775048237056
  %18 = icmp eq i160 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %13, %4
  %20 = tail call zeroext i1 @_ZNK5blink12LayoutObject23ComputeIsFixedContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"* %5, %"class.blink::ComputedStyle"* %7) #13
  %21 = tail call zeroext i1 @_ZNK5blink12LayoutObject23ComputeIsFixedContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"* %5, %"class.blink::ComputedStyle"* %3) #13
  %22 = xor i1 %20, %21
  br i1 %22, label %45, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = lshr i160 %26, 80
  %28 = trunc i160 %27 to i32
  %29 = and i32 %28, 7
  %30 = icmp eq i32 %29, 4
  %31 = and i160 %26, 128849018880
  %32 = icmp eq i160 %31, 42949672960
  %33 = and i1 %32, %30
  %34 = select i1 %33, i32 3, i32 %29
  %35 = load i160, i160* %9, align 8
  %36 = lshr i160 %35, 80
  %37 = trunc i160 %36 to i32
  %38 = and i32 %37, 7
  %39 = icmp eq i32 %38, 4
  %40 = and i160 %35, 128849018880
  %41 = icmp eq i160 %40, 42949672960
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 3, i32 %38
  %44 = icmp eq i32 %34, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %23, %19, %13
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread33FlowThreadDescendantWillBeRemovedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %5)
  br label %104

46:                                               ; preds = %23
  store i8 1, i8* @_ZN5blink27LayoutMultiColumnFlowThread26toggle_spanners_if_needed_E, align 1
  %47 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %48 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %48, i64 24
  %50 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %5) #13
  %52 = icmp eq %"class.blink::LayoutBox"* %1, null
  %53 = xor i1 %51, true
  %54 = or i1 %52, %53
  br i1 %54, label %102, label %55

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %57 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %58 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %58, i64 182
  %60 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutBlockFlow"* nonnull %56) #13
  br i1 %61, label %102, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 68719476736
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %70 = bitcast %"class.blink::LayoutObject"** %69 to %"class.blink::LayoutBlockFlow"**
  %71 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.blink::LayoutBlockFlow"* %71 to i1 (%"class.blink::LayoutObject"*)***
  %74 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %74, i64 28
  %76 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* %72) #13
  br i1 %77, label %78, label %102

78:                                               ; preds = %68, %62
  %79 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %82 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %81, align 8
  %83 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %82, i64 176
  %84 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %83, align 8
  %85 = tail call i32 %84(%"class.blink::LayoutBox"* nonnull %1, i32 %80) #13
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %102, label %87

87:                                               ; preds = %78
  %88 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %47, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, i64 24
  %90 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %5) #13
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 2, i32 10, i32 1
  %94 = bitcast %"class.std::__1::unique_ptr.747"* %93 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %95 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %94, align 8
  %96 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %95, i64 0, i32 3
  %99 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %99, null
  %101 = zext i1 %100 to i8
  br label %102

102:                                              ; preds = %46, %55, %68, %78, %87, %92, %97
  %103 = phi i8 [ 0, %46 ], [ 0, %78 ], [ 0, %68 ], [ 0, %55 ], [ 1, %87 ], [ %101, %97 ], [ 1, %92 ]
  store i8 %103, i8* @_ZN5blink27LayoutMultiColumnFlowThread23could_contain_spanners_E, align 1
  br label %104

104:                                              ; preds = %102, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread34FlowThreadDescendantStyleDidChangeEPNS_9LayoutBoxENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %5 = load i8, i8* @_ZN5blink27LayoutMultiColumnFlowThread26toggle_spanners_if_needed_E, align 1, !range !4
  %6 = icmp eq i8 %5, 0
  store i8 0, i8* @_ZN5blink27LayoutMultiColumnFlowThread26toggle_spanners_if_needed_E, align 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 7253554917687775048237056
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 7253554917687775048237056
  %19 = icmp eq i160 %18, 0
  %20 = xor i1 %14, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %4
  br i1 %14, label %22, label %61

22:                                               ; preds = %21
  %23 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 1099511627776
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0
  %31 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %30) #13
  br label %32

32:                                               ; preds = %29, %22
  %33 = phi %"class.blink::LayoutFlowThread"* [ %31, %29 ], [ null, %22 ]
  %34 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  %35 = icmp eq %"class.blink::LayoutFlowThread"* %33, %34
  br i1 %35, label %61, label %36

36:                                               ; preds = %32, %4
  %37 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = tail call zeroext i1 @_ZNK5blink12LayoutObject23ComputeIsFixedContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"* %37, %"class.blink::ComputedStyle"* %3) #13
  %39 = tail call zeroext i1 @_ZNK5blink12LayoutObject23ComputeIsFixedContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"* %37, %"class.blink::ComputedStyle"* %9) #13
  %40 = xor i1 %38, %39
  br i1 %40, label %61, label %41

41:                                               ; preds = %36
  %42 = load i160, i160* %16, align 8
  %43 = lshr i160 %42, 80
  %44 = trunc i160 %43 to i32
  %45 = and i32 %44, 7
  %46 = icmp eq i32 %45, 4
  %47 = and i160 %42, 128849018880
  %48 = icmp eq i160 %47, 42949672960
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 3, i32 %45
  %51 = load i160, i160* %11, align 8
  %52 = lshr i160 %51, 80
  %53 = trunc i160 %52 to i32
  %54 = and i32 %53, 7
  %55 = icmp eq i32 %54, 4
  %56 = and i160 %51, 128849018880
  %57 = icmp eq i160 %56, 42949672960
  %58 = and i1 %57, %55
  %59 = select i1 %58, i32 3, i32 %54
  %60 = icmp eq i32 %50, %59
  br i1 %60, label %62, label %61

61:                                               ; preds = %41, %36, %21, %32
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread31FlowThreadDescendantWasInsertedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %7)
  br label %157

62:                                               ; preds = %41
  %63 = tail call zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread30DescendantIsValidColumnSpannerEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %7)
  br i1 %63, label %64, label %94

64:                                               ; preds = %62
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread33FlowThreadDescendantWillBeRemovedEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* %7)
  %65 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject"* %37) #13
  %66 = icmp eq %"class.blink::LayoutObject"* %65, null
  br i1 %66, label %92, label %67

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  br label %69

69:                                               ; preds = %89, %67
  %70 = phi %"class.blink::LayoutObject"* [ %65, %67 ], [ %90, %89 ]
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = and i96 %73, 113336795588871485128704
  %75 = icmp eq i96 %74, 75557863725914323419136
  br i1 %75, label %76, label %92

76:                                               ; preds = %69
  %77 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %70, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %78 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %77, i64 0, i32 0, i32 0, i32 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = and i96 %80, 1099511627776
  %82 = icmp eq i96 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %77, i64 0, i32 0, i32 0, i32 0
  %85 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %84) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = phi %"class.blink::LayoutFlowThread"* [ %85, %83 ], [ null, %76 ]
  %88 = icmp eq %"class.blink::LayoutFlowThread"* %87, %68
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %70, %"class.blink::LayoutObject"* %37) #13
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %92, label %69

92:                                               ; preds = %69, %86, %89, %64
  %93 = phi %"class.blink::LayoutObject"* [ null, %64 ], [ %70, %69 ], [ %70, %86 ], [ null, %89 ]
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread33CreateAndInsertSpannerPlaceholderEPNS_9LayoutBoxEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutBox"* %1, %"class.blink::LayoutObject"* %93)
  br label %157

94:                                               ; preds = %62
  br i1 %6, label %157, label %95

95:                                               ; preds = %94
  %96 = load i8, i8* @_ZN5blink27LayoutMultiColumnFlowThread23could_contain_spanners_E, align 1, !range !4
  %97 = zext i8 %96 to i32
  %98 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 24
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %7) #13
  %103 = icmp eq %"class.blink::LayoutBox"* %1, null
  %104 = xor i1 %102, true
  %105 = or i1 %103, %104
  br i1 %105, label %153, label %106

106:                                              ; preds = %95
  %107 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %108 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %109 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %109, i64 182
  %111 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutBlockFlow"* nonnull %107) #13
  br i1 %112, label %153, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %115 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %114 to i96*
  %116 = load i96, i96* %115, align 4
  %117 = and i96 %116, 68719476736
  %118 = icmp eq i96 %117, 0
  br i1 %118, label %129, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %121 = bitcast %"class.blink::LayoutObject"** %120 to %"class.blink::LayoutBlockFlow"**
  %122 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.blink::LayoutBlockFlow"* %122 to i1 (%"class.blink::LayoutObject"*)***
  %125 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %125, i64 28
  %127 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %123) #13
  br i1 %128, label %129, label %153

129:                                              ; preds = %119, %113
  %130 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %131 = load i32, i32* %130, align 4
  %132 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %133 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %132, align 8
  %134 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %133, i64 176
  %135 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %134, align 8
  %136 = tail call i32 %135(%"class.blink::LayoutBox"* nonnull %1, i32 %131) #13
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %153, label %138

138:                                              ; preds = %129
  %139 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %98, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, i64 24
  %141 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %140, align 8
  %142 = tail call zeroext i1 %141(%"class.blink::LayoutObject"* nonnull %7) #13
  br i1 %142, label %143, label %153

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 2, i32 10, i32 1
  %145 = bitcast %"class.std::__1::unique_ptr.747"* %144 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %146 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %145, align 8
  %147 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %146, i64 0, i32 3
  %150 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %149, align 8
  %151 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %150, null
  %152 = zext i1 %151 to i32
  br label %153

153:                                              ; preds = %95, %106, %119, %129, %138, %143, %148
  %154 = phi i32 [ 0, %95 ], [ 0, %129 ], [ 0, %119 ], [ 0, %106 ], [ 1, %138 ], [ %152, %148 ], [ 1, %143 ]
  %155 = icmp eq i32 %154, %97
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread23ToggleSpannersInSubtreeEPNS_9LayoutBoxE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutBox"* %1)
  br label %157

157:                                              ; preds = %156, %153, %94, %92, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread23ToggleSpannersInSubtreeEPNS_9LayoutBoxE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN5blink27LayoutMultiColumnFlowThread23could_contain_spanners_E, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %7 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutBox"**
  %8 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutBox"* %8, null
  br i1 %9, label %231, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to %"class.blink::LayoutBlockFlow"**
  %13 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::LayoutBlockFlow"* %13 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %16 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %16, i64 13
  %18 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutObjectChildList"* %18(%"class.blink::LayoutObject"* %14) #13
  %20 = icmp eq %"class.blink::LayoutObjectChildList"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %19, i64 0, i32 1
  %23 = bitcast %"class.blink::LayoutObject"** %22 to %"class.blink::LayoutBox"**
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  br label %25

25:                                               ; preds = %21, %10
  %26 = phi %"class.blink::LayoutBox"* [ %24, %21 ], [ null, %10 ]
  %27 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = icmp eq %"class.blink::LayoutBox"* %26, %27
  %29 = select i1 %28, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %26
  %30 = icmp eq %"class.blink::LayoutBox"* %8, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %32, i32 21) #13
  br i1 %37, label %38, label %231

38:                                               ; preds = %25, %2, %31
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %40 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* %39, %"class.blink::LayoutObject"* %39) #13
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %231, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 3
  %44 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutBlockFlow"**
  %46 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutFlowThread"*
  br label %49

49:                                               ; preds = %42, %228
  %50 = phi %"class.blink::LayoutObject"* [ %40, %42 ], [ %229, %228 ]
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %52 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %51 to i96*
  %53 = load i96, i96* %52, align 4
  %54 = and i96 %53, 67108864
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %226, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutBox"*
  %58 = load i8, i8* @_ZN5blink27LayoutMultiColumnFlowThread23could_contain_spanners_E, align 1, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %126, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 5, i32 0
  %62 = bitcast %"class.blink::ComputedStyle"** %61 to %"class.blink::ComputedStyleBase"**
  %63 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %63, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 45
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 536870912
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %177, label %74

74:                                               ; preds = %60
  %75 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %76 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %76, i64 44
  %78 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %77, align 8
  %79 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %78(%"class.blink::LayoutObject"* nonnull %50) #13
  %80 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %79, null
  br i1 %80, label %177, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 2, i32 4, i32 0, i64 4
  %83 = bitcast i8* %82 to %"struct.blink::LayoutBoxRareData"**
  %84 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %83, align 8
  %85 = icmp eq %"struct.blink::LayoutBoxRareData"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %84, i64 0, i32 0
  %88 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %87, align 8
  br label %89

89:                                               ; preds = %81, %86
  %90 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %88, %86 ], [ null, %81 ]
  %91 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %90, i64 0, i32 0, i32 0, i32 0, i32 9
  %92 = bitcast %"class.blink::LayoutObject"** %91 to %"class.blink::LayoutBox"**
  %93 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %92, align 8
  %94 = icmp eq %"class.blink::LayoutBox"* %93, null
  br i1 %94, label %124, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %90, i64 0, i32 0, i32 0, i32 0, i32 8
  %97 = bitcast %"class.blink::LayoutObject"** %96 to %"class.blink::LayoutBox"**
  %98 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.blink::LayoutBox"* %98 to i1 (%"class.blink::LayoutObject"*)***
  %101 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %100, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %101, i64 25
  %103 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* %99) #13
  %105 = select i1 %104, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %98
  %106 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %93, i64 0, i32 0, i32 0
  %107 = bitcast %"class.blink::LayoutBox"* %93 to i1 (%"class.blink::LayoutObject"*, i32)***
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, i64 92
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::LayoutObject"* %106, i32 20) #13
  %112 = icmp ne %"class.blink::LayoutBox"* %105, null
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %124

114:                                              ; preds = %95
  %115 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %105, i64 0, i32 0, i32 0
  %116 = bitcast %"class.blink::LayoutBox"* %105 to i1 (%"class.blink::LayoutObject"*, i32)***
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* %115, i32 20) #13
  br i1 %120, label %121, label %124

121:                                              ; preds = %114
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %106) #13
  %122 = load i8, i8* %43, align 8
  %123 = or i8 %122, 1
  store i8 %123, i8* %43, align 8
  br label %124

124:                                              ; preds = %89, %95, %114, %121
  %125 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %90, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %125) #13
  br label %226

126:                                              ; preds = %56
  %127 = tail call zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread30DescendantIsValidColumnSpannerEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutObject"* nonnull %50)
  br i1 %127, label %128, label %177

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 5, i32 0
  %130 = bitcast %"class.blink::ComputedStyle"** %129 to %"class.blink::ComputedStyleBase"**
  %131 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %131, i64 0, i32 3, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %137, i64 0, i32 45
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 536870912
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %149, label %142

142:                                              ; preds = %128
  %143 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %144 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %144, i64 44
  %146 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %145, align 8
  %147 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %146(%"class.blink::LayoutObject"* nonnull %50) #13
  %148 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %147, null
  br i1 %148, label %149, label %226

149:                                              ; preds = %142, %128
  %150 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %50, %"class.blink::LayoutObject"* %47) #13
  %151 = icmp eq %"class.blink::LayoutObject"* %150, null
  br i1 %151, label %175, label %152

152:                                              ; preds = %149, %172
  %153 = phi %"class.blink::LayoutObject"* [ %173, %172 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %153, i64 0, i32 4
  %155 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %154 to i96*
  %156 = load i96, i96* %155, align 4
  %157 = and i96 %156, 113336795588871485128704
  %158 = icmp eq i96 %157, 75557863725914323419136
  br i1 %158, label %159, label %175

159:                                              ; preds = %152
  %160 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %153, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %161 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %160, i64 0, i32 0, i32 0, i32 0, i32 4
  %162 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %161 to i96*
  %163 = load i96, i96* %162, align 4
  %164 = and i96 %163, 1099511627776
  %165 = icmp eq i96 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %160, i64 0, i32 0, i32 0, i32 0
  %168 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %167) #13
  br label %169

169:                                              ; preds = %166, %159
  %170 = phi %"class.blink::LayoutFlowThread"* [ %168, %166 ], [ null, %159 ]
  %171 = icmp eq %"class.blink::LayoutFlowThread"* %170, %48
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %153, %"class.blink::LayoutObject"* %47) #13
  %174 = icmp eq %"class.blink::LayoutObject"* %173, null
  br i1 %174, label %175, label %152

175:                                              ; preds = %152, %169, %172, %149
  %176 = phi %"class.blink::LayoutObject"* [ null, %149 ], [ %153, %152 ], [ %153, %169 ], [ null, %172 ]
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread33CreateAndInsertSpannerPlaceholderEPNS_9LayoutBoxEPNS_12LayoutObjectE(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutBox"* %57, %"class.blink::LayoutObject"* %176)
  br label %226

177:                                              ; preds = %74, %60, %126
  %178 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*)***
  %179 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %178, align 8
  %180 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %179, i64 24
  %181 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %180, align 8
  %182 = tail call zeroext i1 %181(%"class.blink::LayoutObject"* nonnull %50) #13
  br i1 %182, label %183, label %226

183:                                              ; preds = %177
  %184 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutBlockFlow"*
  %185 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %186 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %185, align 8
  %187 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %186, i64 182
  %188 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %187, align 8
  %189 = tail call zeroext i1 %188(%"class.blink::LayoutBlockFlow"* nonnull %184) #13
  br i1 %189, label %226, label %190

190:                                              ; preds = %183
  %191 = load i96, i96* %52, align 4
  %192 = and i96 %191, 68719476736
  %193 = icmp eq i96 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %190
  %195 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %45, align 8
  %196 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %195, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = bitcast %"class.blink::LayoutBlockFlow"* %195 to i1 (%"class.blink::LayoutObject"*)***
  %198 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %197, align 8
  %199 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %198, i64 28
  %200 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %199, align 8
  %201 = tail call zeroext i1 %200(%"class.blink::LayoutObject"* %196) #13
  br i1 %201, label %202, label %226

202:                                              ; preds = %194, %190
  %203 = load i32, i32* %46, align 4
  %204 = bitcast %"class.blink::LayoutObject"* %50 to i32 (%"class.blink::LayoutBox"*, i32)***
  %205 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %204, align 8
  %206 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %205, i64 176
  %207 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %206, align 8
  %208 = tail call i32 %207(%"class.blink::LayoutBox"* nonnull %57, i32 %203) #13
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %226, label %210

210:                                              ; preds = %202
  %211 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %178, align 8
  %212 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %211, i64 24
  %213 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %212, align 8
  %214 = tail call zeroext i1 %213(%"class.blink::LayoutObject"* nonnull %50) #13
  br i1 %214, label %215, label %224

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 2, i32 10, i32 1
  %217 = bitcast %"class.std::__1::unique_ptr.747"* %216 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %218 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %217, align 8
  %219 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %218, null
  br i1 %219, label %224, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %218, i64 0, i32 3
  %222 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %221, align 8
  %223 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %222, null
  br i1 %223, label %224, label %226

224:                                              ; preds = %215, %210, %220
  %225 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %50, %"class.blink::LayoutObject"* %39) #13
  br label %228

226:                                              ; preds = %142, %177, %49, %183, %194, %202, %175, %124, %220
  %227 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %50, %"class.blink::LayoutObject"* %39) #13
  br label %228

228:                                              ; preds = %226, %224
  %229 = phi %"class.blink::LayoutObject"* [ %225, %224 ], [ %227, %226 ]
  %230 = icmp eq %"class.blink::LayoutObject"* %229, null
  br i1 %230, label %231, label %49

231:                                              ; preds = %228, %38, %5, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27LayoutMultiColumnFlowThread22PreferredLogicalWidthsEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutBlockFlow"**
  %4 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %13, i64 0, i32 2
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %20, align 8
  br i1 %17, label %22, label %27

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 41
  %24 = load i16, i16* %23, align 8
  %25 = zext i16 %24 to i32
  %26 = shl nuw nsw i32 %25, 6
  br label %27

27:                                               ; preds = %1, %22
  %28 = phi i32 [ %26, %22 ], [ 64, %1 ]
  %29 = add nsw i32 %28, -64
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 4, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %35 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %34, i32 0) #13
  br label %51

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %40, i64 0, i32 1, i32 0, i32 5
  %42 = load float, float* %41, align 4
  %43 = fmul float %42, 6.400000e+01
  %44 = fcmp ult float %43, 0xC1E0000000000000
  %45 = fcmp ugt float %43, 0x41DFFFFFE0000000
  %46 = fcmp ogt float %43, 0xC1E0000000000000
  %47 = select i1 %46, float %43, float 0xC1E0000000000000
  %48 = fptosi float %47 to i32
  %49 = select i1 %44, i32 0, i32 2147483647
  %50 = select i1 %45, i32 %49, i32 %48
  br label %51

51:                                               ; preds = %33, %36
  %52 = phi i32 [ %35, %33 ], [ %50, %36 ]
  %53 = sext i32 %29 to i64
  %54 = sext i32 %52 to i64
  %55 = mul nsw i64 %54, %53
  %56 = sdiv i64 %55, 64
  %57 = ashr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = trunc i64 %56 to i32
  %60 = ashr i32 %59, 31
  %61 = icmp eq i32 %60, %58
  br i1 %61, label %66, label %62

62:                                               ; preds = %51
  %63 = xor i32 %52, %29
  %64 = lshr i32 %63, 31
  %65 = add nuw i32 %64, 2147483647
  br label %66

66:                                               ; preds = %51, %62
  %67 = phi i32 [ %59, %51 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = and i160 %72, 15211807202738752817960438464512
  %74 = icmp eq i160 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %66
  %76 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %68) #13
  br i1 %76, label %79, label %90

77:                                               ; preds = %66
  %78 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %68) #13
  br i1 %78, label %79, label %90

79:                                               ; preds = %75, %77
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %68) #13
  br label %155

88:                                               ; preds = %79
  %89 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %68) #13
  br label %155

90:                                               ; preds = %75, %77
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 3, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %93, i64 0, i32 2, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %97, i64 0, i32 45
  %99 = load i32, i32* %98, align 4
  %100 = and i32 %99, 24
  %101 = icmp eq i32 %100, 24
  br i1 %101, label %102, label %149

102:                                              ; preds = %90
  %103 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %104 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %103 to i96*
  %105 = load i96, i96* %104, align 4
  %106 = and i96 %105, 1207959552
  %107 = icmp eq i96 %106, 134217728
  br i1 %107, label %149, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.blink::LayoutBlockFlow"* %4 to i1 (%"class.blink::LayoutObject"*, i32)***
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, i64 92
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::LayoutObject"* %5, i32 43) #13
  br i1 %113, label %149, label %114

114:                                              ; preds = %108
  %115 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, i64 92
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutObject"* %5, i32 46) #13
  br i1 %118, label %139, label %119

119:                                              ; preds = %114
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, i64 92
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::LayoutObject"* %5, i32 48) #13
  br i1 %123, label %139, label %124

124:                                              ; preds = %119
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, i64 92
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %5, i32 45) #13
  br i1 %128, label %139, label %129

129:                                              ; preds = %124
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, i64 92
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::LayoutObject"* %5, i32 49) #13
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, i64 92
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.blink::LayoutObject"* %5, i32 50) #13
  br i1 %138, label %139, label %144

139:                                              ; preds = %134, %129, %124, %119, %114
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, i64 92
  %142 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %141, align 8
  %143 = tail call zeroext i1 %142(%"class.blink::LayoutObject"* %5, i32 45) #13
  br i1 %143, label %144, label %149

144:                                              ; preds = %134, %139
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %146 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, i64 92
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %146, align 8
  %148 = tail call zeroext i1 %147(%"class.blink::LayoutObject"* %5, i32 44) #13
  br i1 %148, label %149, label %155

149:                                              ; preds = %144, %102, %108, %139, %90
  %150 = bitcast %"class.blink::LayoutMultiColumnFlowThread"* %0 to %"class.blink::LayoutBlock"*
  %151 = tail call i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"* %150) #13
  %152 = trunc i64 %151 to i32
  %153 = lshr i64 %151, 32
  %154 = trunc i64 %153 to i32
  br label %155

155:                                              ; preds = %144, %88, %86, %149
  %156 = phi i32 [ %154, %149 ], [ %87, %86 ], [ %89, %88 ], [ 0, %144 ]
  %157 = phi i32 [ %152, %149 ], [ %87, %86 ], [ %89, %88 ], [ 0, %144 ]
  %158 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %158, i64 0, i32 3, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %160, i64 0, i32 1, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %162, i64 0, i32 2
  %164 = load i8, i8* %163, align 4
  %165 = and i8 %164, 2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %186, label %167

167:                                              ; preds = %155
  %168 = sext i32 %157 to i64
  %169 = zext i32 %28 to i64
  %170 = mul nsw i64 %168, %169
  %171 = sdiv i64 %170, 64
  %172 = ashr i64 %171, 32
  %173 = trunc i64 %172 to i32
  %174 = trunc i64 %171 to i32
  %175 = ashr i32 %174, 31
  %176 = icmp eq i32 %175, %173
  %177 = lshr i32 %157, 31
  %178 = add nuw i32 %177, 2147483647
  %179 = select i1 %176, i32 %174, i32 %178
  %180 = icmp slt i32 %67, 0
  %181 = select i1 %180, i32 -2147483648, i32 2147483647
  %182 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %179, i32 %67) #13
  %183 = extractvalue { i32, i1 } %182, 1
  %184 = extractvalue { i32, i1 } %182, 0
  %185 = select i1 %183, i32 %181, i32 %184, !prof !3
  br label %204

186:                                              ; preds = %155
  %187 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %158, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %188, i64 0, i32 2, i32 0, i32 0
  %190 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %190, i64 0, i32 31
  %192 = load float, float* %191, align 8
  %193 = fmul float %192, 6.400000e+01
  %194 = fcmp ult float %193, 0xC1E0000000000000
  %195 = fcmp ugt float %193, 0x41DFFFFFE0000000
  %196 = fcmp ogt float %193, 0xC1E0000000000000
  %197 = select i1 %196, float %193, float 0xC1E0000000000000
  %198 = fptosi float %197 to i32
  %199 = select i1 %194, i32 0, i32 2147483647
  %200 = select i1 %195, i32 %199, i32 %198
  %201 = icmp slt i32 %200, %157
  %202 = select i1 %201, i32 %200, i32 %157
  %203 = zext i32 %28 to i64
  br label %204

204:                                              ; preds = %186, %167
  %205 = phi i64 [ %203, %186 ], [ %169, %167 ]
  %206 = phi i32 [ %200, %186 ], [ 0, %167 ]
  %207 = phi i32 [ %202, %186 ], [ %185, %167 ]
  %208 = icmp slt i32 %156, %206
  %209 = select i1 %208, i32 %206, i32 %156
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %205, %210
  %212 = sdiv i64 %211, 64
  %213 = ashr i64 %212, 32
  %214 = trunc i64 %213 to i32
  %215 = trunc i64 %212 to i32
  %216 = ashr i32 %215, 31
  %217 = icmp eq i32 %216, %214
  %218 = lshr i32 %209, 31
  %219 = add nuw i32 %218, 2147483647
  %220 = select i1 %217, i32 %215, i32 %219
  %221 = icmp slt i32 %67, 0
  %222 = select i1 %221, i32 -2147483648, i32 2147483647
  %223 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %220, i32 %67) #13
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 %222, i32 %225, !prof !3
  %227 = zext i32 %226 to i64
  %228 = shl nuw i64 %227, 32
  %229 = zext i32 %207 to i64
  %230 = or i64 %228, %229
  ret i64 %230
}

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK5blink27LayoutMultiColumnFlowThread20ComputeLogicalHeightENS_10LayoutUnitES1_RNS_9LayoutBox27LogicalExtentComputedValuesE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readnone, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 1, i32 0
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread18UpdateLogicalWidthEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutUnit", align 4
  %3 = bitcast %"class.blink::LayoutUnit"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 4
  call void @_ZNK5blink27LayoutMultiColumnFlowThread28CalculateColumnCountAndWidthERNS_10LayoutUnitERj(%"class.blink::LayoutMultiColumnFlowThread"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %2, i32* dereferenceable(4) %5)
  %6 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %7
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  store i32 %7, i32* %16, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %6) #13
  br label %25

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, %7
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i32 %7, i32* %21, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %6) #13
  br label %25

25:                                               ; preds = %15, %19, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #13
  ret void
}

declare void @_ZN5blink16LayoutFlowThread12UpdateLayoutEv(%"class.blink::LayoutFlowThread"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread17ContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 1099511627776
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %15, %17
  %18 = phi %"class.blink::LayoutObject"* [ %20, %17 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %11
  %25 = phi %"class.blink::Node"* [ %13, %11 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 113
  %31 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %32, align 8
  %34 = icmp eq %"class.blink::ViewFragmentationContext"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %24, %2
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread35AppendNewFragmentainerGroupIfNeededENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutMultiColumnFlowThread"* %0, i32 %1, i32 0)
  br label %36

36:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread13CanSkipLayoutERKNS_9LayoutBoxE(%"class.blink::LayoutMultiColumnFlowThread"* readonly, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutBox"**
  %5 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBox"* %5, null
  br i1 %6, label %119, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %9 = bitcast %"class.blink::LayoutObject"** %8 to %"class.blink::LayoutBlockFlow"**
  %10 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %10 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %13 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %13, i64 13
  %15 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call %"class.blink::LayoutObjectChildList"* %15(%"class.blink::LayoutObject"* %11) #13
  %17 = icmp eq %"class.blink::LayoutObjectChildList"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %16, i64 0, i32 1
  %20 = bitcast %"class.blink::LayoutObject"** %19 to %"class.blink::LayoutBox"**
  %21 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, align 8
  br label %22

22:                                               ; preds = %18, %7
  %23 = phi %"class.blink::LayoutBox"* [ %21, %18 ], [ null, %7 ]
  %24 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = icmp eq %"class.blink::LayoutBox"* %23, %24
  %26 = select i1 %25, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %23
  %27 = icmp eq %"class.blink::LayoutBox"* %5, %26
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBox"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %29, i32 21) #13
  br i1 %34, label %35, label %119

35:                                               ; preds = %22, %28
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %37 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %37, label %119, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 7
  br label %40

40:                                               ; preds = %38, %116
  %41 = phi %"class.blink::LayoutObject"* [ %36, %38 ], [ %117, %116 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 5, i32 0
  %43 = bitcast %"class.blink::ComputedStyle"** %42 to %"class.blink::ComputedStyleBase"**
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %50, i64 0, i32 45
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 536870912
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %40
  %56 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %57 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %57, i64 44
  %59 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %59(%"class.blink::LayoutObject"* nonnull %41) #13
  %61 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %60, null
  br i1 %61, label %62, label %119

62:                                               ; preds = %55, %40
  %63 = bitcast %"class.blink::LayoutObject"* %41 to i1 (%"class.blink::LayoutObject"*)***
  %64 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %64, i64 24
  %66 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* nonnull %41) #13
  br i1 %67, label %68, label %114

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutBlockFlow"*
  %70 = bitcast %"class.blink::LayoutObject"* %41 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %71 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %71, i64 182
  %73 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutBlockFlow"* nonnull %69) #13
  br i1 %74, label %114, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 4
  %77 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %76 to i96*
  %78 = load i96, i96* %77, align 4
  %79 = and i96 %78, 68719476736
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %75
  %82 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %9, align 8
  %83 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.blink::LayoutBlockFlow"* %82 to i1 (%"class.blink::LayoutObject"*)***
  %85 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %85, i64 28
  %87 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutObject"* %83) #13
  br i1 %88, label %89, label %114

89:                                               ; preds = %81, %75
  %90 = bitcast %"class.blink::LayoutObject"* %41 to %"class.blink::LayoutBox"*
  %91 = load i32, i32* %39, align 4
  %92 = bitcast %"class.blink::LayoutObject"* %41 to i32 (%"class.blink::LayoutBox"*, i32)***
  %93 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %93, i64 176
  %95 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %94, align 8
  %96 = tail call i32 %95(%"class.blink::LayoutBox"* nonnull %90, i32 %91) #13
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %114, label %98

98:                                               ; preds = %89
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %63, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 24
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* nonnull %41) #13
  br i1 %102, label %103, label %112

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 2, i32 10, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.747"* %104 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %106 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %105, align 8
  %107 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, i64 0, i32 3
  %110 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %109, align 8
  %111 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %110, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %103, %98, %108
  %113 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %41, %"class.blink::LayoutObject"* %36) #13
  br label %116

114:                                              ; preds = %62, %68, %81, %89, %108
  %115 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %41, %"class.blink::LayoutObject"* %36) #13
  br label %116

116:                                              ; preds = %112, %114
  %117 = phi %"class.blink::LayoutObject"* [ %113, %112 ], [ %115, %114 ]
  %118 = icmp eq %"class.blink::LayoutObject"* %117, null
  br i1 %118, label %119, label %40

119:                                              ; preds = %116, %55, %35, %2, %28
  %120 = phi i1 [ true, %28 ], [ true, %2 ], [ true, %35 ], [ true, %116 ], [ false, %55 ]
  ret i1 %120
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutMultiColumnSet"* @_ZNK5blink27LayoutMultiColumnFlowThread25GetMultiColumnLayoutStateEv(%"class.blink::LayoutMultiColumnFlowThread"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %3 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %2, align 8
  ret %"class.blink::LayoutMultiColumnSet"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink27LayoutMultiColumnFlowThread29RestoreMultiColumnLayoutStateERKNS_22MultiColumnLayoutStateE(%"class.blink::LayoutMultiColumnFlowThread"* nocapture, %"class.blink::MultiColumnLayoutState"* nocapture readonly dereferenceable(8)) unnamed_addr #7 align 2 {
  %3 = bitcast %"class.blink::MultiColumnLayoutState"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::LayoutMultiColumnSet"** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink27LayoutMultiColumnFlowThread7GetNameEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #13
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16LayoutFlowThread18IsLayoutFlowThreadEv(%"class.blink::LayoutFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  ret %"class.blink::LayoutBoxModelObject"* %3
}

declare %"class.blink::LayoutObject"* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1650* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink16LayoutFlowThread11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutFlowThread"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = icmp eq i32 %2, 1
  tail call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %5, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %6) #13
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16LayoutFlowThread38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink16LayoutFlowThread15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutFlowThread"*, %"class.WTF::Vector.2008"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutBlockFlow"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !3

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #13
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !3
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink16LayoutFlowThread17LayerTypeRequiredEv(%"class.blink::LayoutFlowThread"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !37

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !3
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !37

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #13
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #13
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #13
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #13
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #13
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #13
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2001"*) unnamed_addr #1

declare i64 @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !38
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #13
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !41
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1033, i64 0 }, %61 ], [ { i64 1041, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1017, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #13
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #13
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #13
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #13
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !3
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !44
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #13
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !47
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1041, i64 0 }, %61 ], [ { i64 1033, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1025, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #13
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #13
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #13
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #13
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !3
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow10BreakAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #13
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #13
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #13
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #13
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #13
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16LayoutFlowThread27CreatesNewFormattingContextEv(%"class.blink::LayoutFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16LayoutFlowThread33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread29IsLayoutMultiColumnFlowThreadEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink16LayoutFlowThread25RemoveColumnSetFromThreadEPNS_20LayoutMultiColumnSetE(%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutMultiColumnSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnFlowThread"* @_ZN5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnFlowThread"* %0
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnFlowThread"* @_ZThn368_N5blink27LayoutMultiColumnFlowThread20AssociatedFlowThreadEv(%"class.blink::LayoutMultiColumnFlowThread"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.blink::UntracedMember"* %2 to %"class.blink::LayoutMultiColumnFlowThread"*
  ret %"class.blink::LayoutMultiColumnFlowThread"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::PODRedBlackTree.1942", %"class.WTF::PODRedBlackTree.1942"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.WTF::PODRedBlackTree.1942", %"class.WTF::PODRedBlackTree.1942"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.WTF::PODFreeListArena.1944"*, %"class.WTF::PODFreeListArena.1944"** %3, align 8
  %5 = icmp eq %"class.WTF::PODFreeListArena.1944"* %4, null
  br i1 %5, label %79, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::PODFreeListArena.1944", %"class.WTF::PODFreeListArena.1944"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.WTF::PODFreeListArena.1944", %"class.WTF::PODFreeListArena.1944"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::PODFreeListArena.1944", %"class.WTF::PODFreeListArena.1944"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCounted.2050", %"class.base::RefCounted.2050"* %12, i64 2
  %14 = bitcast %"class.base::RefCounted.2050"* %13 to %"class.WTF::PODArena"**
  %15 = load %"class.WTF::PODArena"*, %"class.WTF::PODArena"** %14, align 8
  %16 = icmp eq %"class.WTF::PODArena"* %15, null
  br i1 %16, label %77, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #13
  %19 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %77

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 4
  %24 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.2060"*, %"class.std::__1::unique_ptr.2060"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.2060"* %25, null
  br i1 %26, label %58, label %27, !prof !2

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::unique_ptr.2060"* %25 to i8*
  %29 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %56, label %32, !prof !3

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.2060", %"class.std::__1::unique_ptr.2060"* %25, i64 %33
  br label %35

35:                                               ; preds = %50, %32
  %36 = phi %"class.std::__1::unique_ptr.2060"* [ %51, %50 ], [ %25, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2060", %"class.std::__1::unique_ptr.2060"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::PODArena::Chunk"*, %"class.WTF::PODArena::Chunk"** %37, align 8
  store %"class.WTF::PODArena::Chunk"* null, %"class.WTF::PODArena::Chunk"** %37, align 8
  %39 = icmp eq %"class.WTF::PODArena::Chunk"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %38, i64 0, i32 0
  %42 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::PODArena::Chunk", %"class.WTF::PODArena::Chunk"* %38, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.WTF::PODArena::Allocator"* %42 to void (%"class.WTF::PODArena::Allocator"*, i8*)***
  %46 = load void (%"class.WTF::PODArena::Allocator"*, i8*)**, void (%"class.WTF::PODArena::Allocator"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %46, i64 1
  %48 = load void (%"class.WTF::PODArena::Allocator"*, i8*)*, void (%"class.WTF::PODArena::Allocator"*, i8*)** %47, align 8
  tail call void %48(%"class.WTF::PODArena::Allocator"* %42, i8* %44) #13
  %49 = bitcast %"class.WTF::PODArena::Chunk"* %38 to i8*
  tail call void @free(i8* %49) #13
  br label %50

50:                                               ; preds = %40, %35
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.2060", %"class.std::__1::unique_ptr.2060"* %36, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.2060"* %51, %34
  br i1 %52, label %53, label %35

53:                                               ; preds = %50
  store i32 0, i32* %29, align 4
  %54 = bitcast %"class.WTF::Vector.2057"* %23 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %27
  %57 = phi i8* [ %55, %53 ], [ %28, %27 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #13
  store %"class.std::__1::unique_ptr.2060"* null, %"class.std::__1::unique_ptr.2060"** %24, align 8
  br label %58

58:                                               ; preds = %56, %22
  %59 = getelementptr inbounds %"class.WTF::PODArena", %"class.WTF::PODArena"* %15, i64 0, i32 1, i32 0
  %60 = load %"class.WTF::PODArena::Allocator"*, %"class.WTF::PODArena::Allocator"** %59, align 8
  %61 = icmp eq %"class.WTF::PODArena::Allocator"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::PODArena::Allocator", %"class.WTF::PODArena::Allocator"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCounted.2056", %"class.base::RefCounted.2056"* %63, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #13
  %65 = getelementptr inbounds %"class.base::RefCounted.2056", %"class.base::RefCounted.2056"* %63, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCounted.2056", %"class.base::RefCounted.2056"* %63, i64 -2
  %70 = bitcast %"class.base::RefCounted.2056"* %69 to %"class.WTF::PODArena::Allocator"*
  %71 = bitcast %"class.base::RefCounted.2056"* %69 to void (%"class.WTF::PODArena::Allocator"*)***
  %72 = load void (%"class.WTF::PODArena::Allocator"*)**, void (%"class.WTF::PODArena::Allocator"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.WTF::PODArena::Allocator"*)*, void (%"class.WTF::PODArena::Allocator"*)** %72, i64 3
  %74 = load void (%"class.WTF::PODArena::Allocator"*)*, void (%"class.WTF::PODArena::Allocator"*)** %73, align 8
  tail call void %74(%"class.WTF::PODArena::Allocator"* nonnull %70) #13
  br label %75

75:                                               ; preds = %58, %62, %68
  %76 = bitcast %"class.WTF::PODArena"* %15 to i8*
  tail call void @free(i8* %76) #13
  br label %77

77:                                               ; preds = %75, %17, %11
  %78 = bitcast %"class.WTF::PODFreeListArena.1944"* %4 to i8*
  tail call void @free(i8* %78) #13
  br label %79

79:                                               ; preds = %1, %6, %77
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED0Ev(%"class.WTF::PODRedBlackTree.1942"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEED2Ev(%"class.WTF::PODRedBlackTree.1942"* %0) #13
  %2 = bitcast %"class.WTF::PODRedBlackTree.1942"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE15CheckInvariantsEv(%"class.WTF::PODRedBlackTree.1942"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #13
  store i32 -1431655766, i32* %2, align 4
  %4 = getelementptr inbounds %"class.WTF::PODRedBlackTree.1942", %"class.WTF::PODRedBlackTree.1942"* %0, i64 0, i32 2
  %5 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %4, align 8
  %6 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE23CheckInvariantsFromNodeEPNS7_4NodeEPi(%"class.WTF::PODRedBlackTree.1942"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %5, i32* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #13
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE10UpdateNodeEPNS7_4NodeE(%"class.WTF::PODRedBlackTree.1942"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE23CheckInvariantsFromNodeEPNS7_4NodeEPi(%"class.WTF::PODRedBlackTree.1942"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i32 1, i32* %2, align 4
  br label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %49 [
    i32 1, label %14
    i32 2, label %11
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, i64 0, i32 1
  %13 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %12, align 8
  br label %30

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, i64 0, i32 1
  %16 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %15, align 8
  %17 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %16, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %49

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, i64 0, i32 2
  %24 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %23, align 8
  %25 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %24, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %30, label %49

30:                                               ; preds = %11, %22, %26
  %31 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* [ %13, %11 ], [ %16, %22 ], [ %16, %26 ]
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  store i32 0, i32* %4, align 4
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #13
  store i32 0, i32* %5, align 4
  %34 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE23CheckInvariantsFromNodeEPNS7_4NodeEPi(%"class.WTF::PODRedBlackTree.1942"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %31, i32* nonnull %4)
  %35 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %1, i64 0, i32 2
  %36 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %35, align 8
  %37 = call zeroext i1 @_ZNK3WTF15PODRedBlackTreeINS_11PODIntervalIN5blink10LayoutUnitEPNS2_20LayoutMultiColumnSetEEEE23CheckInvariantsFromNodeEPNS7_4NodeEPi(%"class.WTF::PODRedBlackTree.1942"* %0, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %36, i32* nonnull %5)
  %38 = and i1 %34, %37
  br i1 %38, label %39, label %47

39:                                               ; preds = %30
  %40 = load i32, i32* %4, align 4
  %41 = load i32, i32* %9, align 8
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %40, %43
  store i32 %44, i32* %2, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp eq i32 %40, %45
  br label %47

47:                                               ; preds = %30, %39
  %48 = phi i1 [ %46, %39 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  br label %49

49:                                               ; preds = %8, %26, %18, %47, %7
  %50 = phi i1 [ %48, %47 ], [ true, %7 ], [ false, %18 ], [ false, %26 ], [ false, %8 ]
  ret i1 %50
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !50

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !52

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !53

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !54
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !54
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZN3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1995"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1995", %"class.WTF::Vector.1995"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1995", %"class.WTF::Vector.1995"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::MultiColumnFragmentainerGroup"* @_ZNK3WTF6VectorIN5blink29MultiColumnFragmentainerGroupELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1995"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1995", %"class.WTF::Vector.1995"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1995", %"class.WTF::Vector.1995"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MultiColumnFragmentainerGroup"*, %"class.blink::MultiColumnFragmentainerGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MultiColumnFragmentainerGroup", %"class.blink::MultiColumnFragmentainerGroup"* %24, i64 %25
  ret %"class.blink::MultiColumnFragmentainerGroup"* %26
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject23ComputeIsFixedContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.1938"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF15PODIntervalTreeIN5blink10LayoutUnitEPNS1_20LayoutMultiColumnSetEE21SearchForOverlapsFromINS1_16LayoutFlowThread27MultiColumnSetSearchAdapterEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIS2_S4_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter", %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %1, i64 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %4, %17
  %7 = phi %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* [ %0, %4 ], [ %21, %17 ]
  %8 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %7, i64 0, i32 5
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %7, i64 0, i32 5, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %7, i64 0, i32 5, i32 4, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %9
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %7, i64 0, i32 1
  %19 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %18, align 8
  tail call void @_ZN3WTF15PODIntervalTreeIN5blink10LayoutUnitEPNS1_20LayoutMultiColumnSetEE21SearchForOverlapsFromINS1_16LayoutFlowThread27MultiColumnSetSearchAdapterEEEvPKNS_15PODRedBlackTreeINS_11PODIntervalIS2_S4_EEE4NodeERT_(%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %19, %"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* dereferenceable(16) %1)
  tail call void @_ZN5blink16LayoutFlowThread27MultiColumnSetSearchAdapter15CollectIfNeededERKN3WTF11PODIntervalINS_10LayoutUnitEPNS_20LayoutMultiColumnSetEEE(%"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"* %1, %"class.WTF::PODInterval"* dereferenceable(24) %8) #13
  %20 = getelementptr inbounds %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node", %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %7, i64 0, i32 2
  %21 = load %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"** %20, align 8
  %22 = icmp eq %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"* %21, null
  br i1 %22, label %23, label %6

23:                                               ; preds = %13, %6, %17, %2
  ret void
}

declare void @_ZN5blink16LayoutFlowThread27MultiColumnSetSearchAdapter15CollectIfNeededERKN3WTF11PODIntervalINS_10LayoutUnitEPNS_20LayoutMultiColumnSetEEE(%"class.blink::LayoutFlowThread::MultiColumnSetSearchAdapter"*, %"class.WTF::PODInterval"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.1930"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1933"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutMultiColumnSet"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutMultiColumnSet"*
  %38 = icmp eq %"class.blink::LayoutMultiColumnSet"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutMultiColumnSet"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutMultiColumnSet"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutMultiColumnSet"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1933"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1933"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.1933"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.1933"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } undef, %"struct.WTF::KeyValuePair.1933"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } %79, %"struct.WTF::KeyValuePair.1933"* %78, 1
  ret { %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.1938"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } @_ZN3WTF22VectorBackedLinkedListIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEE6insertIRS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_(%"class.WTF::VectorBackedLinkedList.1934"*, %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.1938", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %7, i32 0) #13
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %13, i32 %12) #13
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %5, i64 0, i32 0
  store i32 %16, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %5, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %5, i64 0, i32 2
  %27 = bitcast %"class.blink::LayoutMultiColumnSet"** %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::LayoutMultiColumnSet"** %26 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %41, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %23, i64 16, i1 false) #13
  %39 = load i32, i32* %21, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %21, align 4
  br label %42

41:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.1935"* %13, %"class.WTF::VectorBackedLinkedListNode.1938"* nonnull dereferenceable(16) %5) #13
  br label %42

42:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  br label %52

43:                                               ; preds = %4
  %44 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %13, i32 %18) #13
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %17, align 8
  %47 = bitcast %"class.blink::LayoutMultiColumnSet"** %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %44, i64 0, i32 0
  store i32 %16, i32* %49, align 8
  store i32 %12, i32* %45, align 4
  %50 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %44, i64 0, i32 2
  %51 = bitcast %"class.blink::LayoutMultiColumnSet"** %50 to i64*
  store i64 %48, i64* %51, align 8
  br label %52

52:                                               ; preds = %43, %42
  %53 = phi i32 [ %22, %42 ], [ %18, %43 ]
  %54 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %13, i32 %16) #13
  %55 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %54, i64 0, i32 1
  store i32 %53, i32* %55, align 4
  %56 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %13, i32 %12) #13
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %56, i64 0, i32 0
  store i32 %53, i32* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1934", %"class.WTF::VectorBackedLinkedList.1934"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 4
  %61 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1938"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.1935"* %13, i32 %53) #13
  %62 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } undef, %"class.WTF::VectorBackedLinkedListNode.1938"* %61, 0
  %63 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %62, %"class.WTF::VectorBackedLinkedList.1934"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedList.1934"* } %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1933"*, i8 } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.1930"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1933"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1933"* @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1930"* %0, %"struct.WTF::KeyValuePair.1933"* null)
  %9 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1933"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutMultiColumnSet"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutMultiColumnSet"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutMultiColumnSet"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutMultiColumnSet"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1933"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1933"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutMultiColumnSet"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutMultiColumnSet"* %59, inttoptr (i64 -1 to %"class.blink::LayoutMultiColumnSet"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1933"* %60, %"struct.WTF::KeyValuePair.1933"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutMultiColumnSet"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1933"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1933"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1933"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.1933"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.1933"* @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1930"* %0, %"struct.WTF::KeyValuePair.1933"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.1933"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } undef, %"struct.WTF::KeyValuePair.1933"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.1933"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1933"* @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1930"*, %"struct.WTF::KeyValuePair.1933"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink20LayoutMultiColumnSetEjEEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1933"*
  %37 = call %"struct.WTF::KeyValuePair.1933"* @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.1930"* %0, %"struct.WTF::KeyValuePair.1933"* %36, i32 %32, %"struct.WTF::KeyValuePair.1933"* %1) #13
  ret %"struct.WTF::KeyValuePair.1933"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1933"* @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.1930"*, %"struct.WTF::KeyValuePair.1933"*, i32, %"struct.WTF::KeyValuePair.1933"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1930", align 8
  %6 = bitcast %"class.WTF::HashTable.1930"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1930"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1933"* %1, %"struct.WTF::KeyValuePair.1933"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1930"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1930"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.1930"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1930"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1933"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1933"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1933"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1933"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1933"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.1933"*, i8 } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1930"* nonnull %5, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8) %53) #13
  %55 = extractvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.1933"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.1933"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #13
  %58 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.1933"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.1933"* %55, %"struct.WTF::KeyValuePair.1933"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.1933"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.1933"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1933"*, i8 } @_ZN3WTF9HashTableIPN5blink20LayoutMultiColumnSetENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1930"*, %"class.blink::LayoutMultiColumnSet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1933"*, %"struct.WTF::KeyValuePair.1933"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1930", %"class.WTF::HashTable.1930"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutMultiColumnSet"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutMultiColumnSet"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutMultiColumnSet"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1933"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1933"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1933"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutMultiColumnSet"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutMultiColumnSet"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutMultiColumnSet"* %63, inttoptr (i64 -1 to %"class.blink::LayoutMultiColumnSet"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1933"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1933", %"struct.WTF::KeyValuePair.1933"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutMultiColumnSet"*, %"class.blink::LayoutMultiColumnSet"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutMultiColumnSet"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1933"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } undef, %"struct.WTF::KeyValuePair.1933"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1933"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1933"*, i8 } %85
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.1935"*, %"class.WTF::VectorBackedLinkedListNode.1938"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.1938"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.1938"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetES0_EEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode.1938"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::VectorBackedLinkedListNode.1938"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.1935"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode.1938"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %1 to i64
  %56 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1938"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1938"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetES0_EEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::VectorBackedLinkedListNode.1938"*, %"class.WTF::VectorBackedLinkedListNode.1938"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::VectorBackedLinkedListNode.1938"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.1935"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::VectorBackedLinkedListNode.1938"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::VectorBackedLinkedListNode.1938"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::VectorBackedLinkedListNode.1938"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::VectorBackedLinkedListNode.1938"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1938", %"class.WTF::VectorBackedLinkedListNode.1938"* %100, i64 %103
  %105 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %104 to i8*
  %106 = bitcast %"class.WTF::VectorBackedLinkedListNode.1938"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink20LayoutMultiColumnSetES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind readnone }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!11 = !{!"branch_weights", i32 1, i32 4001}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_ZNK3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS3_S6_EEEE: argument 0"}
!29 = distinct !{!29, !"_ZNK3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS3_S6_EEEE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS3_S6_EEEE: argument 0"}
!32 = distinct !{!32, !"_ZNK3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS3_S6_EEEE"}
!33 = !{!28, !25, !31}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF13LinkedHashSetIPN5blink20LayoutMultiColumnSetENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv"}
!37 = !{!"branch_weights", i32 4001, i32 4000000}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!46 = distinct !{!46, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!50 = distinct !{!50, !51}
!51 = !{!"llvm.loop.unroll.disable"}
!52 = distinct !{!52, !51}
!53 = distinct !{!53, !51}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
