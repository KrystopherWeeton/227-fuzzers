; ModuleID = '../../base/cpu_affinity_posix.cc'
source_filename = "../../base/cpu_affinity_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.cpu_set_t = type { [16 x i64] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::DirReaderLinux" = type { i32, [4 x i8], [512 x i8], i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZZN4base14HasBigCpuCoresEvE12kHasBigCores = internal global i8 0, align 1
@_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores = internal global i64 0, align 8
@_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores = internal global %struct.cpu_set_t zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores = internal global i64 0, align 8
@_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores = internal global %struct.cpu_set_t zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores = internal global i64 0, align 8
@.str = private unnamed_addr constant [5 x i8] c"task\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Failed to close directory handle\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14HasBigCpuCoresEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %28, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %25, label %13

13:                                               ; preds = %6, %17
  %14 = phi i32* [ %18, %17 ], [ %9, %6 ]
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, 8
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds i32, i32* %14, i64 1
  %19 = icmp eq i32* %18, %11
  br i1 %19, label %25, label %13

20:                                               ; preds = %13
  %21 = zext i32 %15 to i64
  %22 = shl nuw nsw i64 %21, 3
  %23 = lshr i64 72340172838010880, %22
  %24 = trunc i64 %23 to i8
  br label %25

25:                                               ; preds = %17, %20, %6
  %26 = phi i8 [ 0, %6 ], [ %24, %20 ], [ 0, %17 ]
  store i8 %26, i8* @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores, align 1
  %27 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores) #10
  br label %28

28:                                               ; preds = %3, %25, %0
  %29 = load i8, i8* @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores, align 1, !range !3
  %30 = icmp ne i8 %29, 0
  ret i1 %30
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24SetThreadCpuAffinityModeEiNS_15CpuAffinityModeE(i32, i32) local_unnamed_addr #0 {
  switch i32 %1, label %50 [
    i32 0, label %3
    i32 1, label %45
  ]

3:                                                ; preds = %2
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %46, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %46, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 0, i64 128, i1 false) #10
  %10 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %9
  %17 = ptrtoint i32* %12 to i64
  %18 = ptrtoint i32* %14 to i64
  %19 = bitcast i32** %13 to i64*
  %20 = bitcast %"class.std::__1::vector"* %10 to i64*
  br label %22

21:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 -1, i64 128, i1 false) #10
  br label %43

22:                                               ; preds = %36, %16
  %23 = phi i64 [ %37, %36 ], [ %17, %16 ]
  %24 = phi i64 [ %38, %36 ], [ %18, %16 ]
  %25 = phi i64 [ %39, %36 ], [ 0, %16 ]
  %26 = icmp ult i64 %25, 1024
  br i1 %26, label %27, label %36

27:                                               ; preds = %22
  %28 = and i64 %25, 63
  %29 = shl i64 1, %28
  %30 = lshr i64 %25, 6
  %31 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, i64 0, i32 0, i64 %30
  %32 = load i64, i64* %31, align 8
  %33 = or i64 %32, %29
  store i64 %33, i64* %31, align 8
  %34 = load i64, i64* %19, align 8
  %35 = load i64, i64* %20, align 8
  br label %36

36:                                               ; preds = %27, %22
  %37 = phi i64 [ %23, %22 ], [ %35, %27 ]
  %38 = phi i64 [ %24, %22 ], [ %34, %27 ]
  %39 = add nuw i64 %25, 1
  %40 = sub i64 %38, %37
  %41 = ashr exact i64 %40, 2
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %22, label %43

43:                                               ; preds = %36, %21
  %44 = tail call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  br label %46

45:                                               ; preds = %2
  tail call fastcc void @_ZN4base12_GLOBAL__N_111LittleCoresEv()
  br label %46

46:                                               ; preds = %43, %6, %3, %45
  %47 = phi %struct.cpu_set_t* [ @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores, %45 ], [ @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, %3 ], [ @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, %6 ], [ @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, %43 ]
  %48 = tail call i32 @sched_setaffinity(i32 %0, i64 128, %struct.cpu_set_t* nonnull %47) #10
  %49 = icmp eq i32 %48, 0
  br label %50

50:                                               ; preds = %46, %2
  %51 = phi i1 [ true, %2 ], [ %49, %46 ]
  ret i1 %51
}

; Function Attrs: nounwind
declare i32 @sched_setaffinity(i32, i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_111LittleCoresEv() unnamed_addr #0 {
  %1 = alloca %struct.cpu_set_t, align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %126, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %126, label %7

7:                                                ; preds = %4
  %8 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %14, label %57

14:                                               ; preds = %7
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %56, !prof !2

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 0, i64 128, i1 false) #10
  %21 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %23, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = ptrtoint i32* %23 to i64
  %29 = ptrtoint i32* %25 to i64
  %30 = bitcast i32** %24 to i64*
  %31 = bitcast %"class.std::__1::vector"* %21 to i64*
  br label %33

32:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 -1, i64 128, i1 false) #10
  br label %54

33:                                               ; preds = %47, %27
  %34 = phi i64 [ %48, %47 ], [ %28, %27 ]
  %35 = phi i64 [ %49, %47 ], [ %29, %27 ]
  %36 = phi i64 [ %50, %47 ], [ 0, %27 ]
  %37 = icmp ult i64 %36, 1024
  br i1 %37, label %38, label %47

38:                                               ; preds = %33
  %39 = and i64 %36, 63
  %40 = shl i64 1, %39
  %41 = lshr i64 %36, 6
  %42 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, i64 0, i32 0, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = or i64 %43, %40
  store i64 %44, i64* %42, align 8
  %45 = load i64, i64* %30, align 8
  %46 = load i64, i64* %31, align 8
  br label %47

47:                                               ; preds = %38, %33
  %48 = phi i64 [ %34, %33 ], [ %46, %38 ]
  %49 = phi i64 [ %35, %33 ], [ %45, %38 ]
  %50 = add nuw i64 %36, 1
  %51 = sub i64 %49, %48
  %52 = ashr exact i64 %51, 2
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %33, label %54

54:                                               ; preds = %47, %32
  %55 = tail call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  br label %56

56:                                               ; preds = %54, %17, %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*), i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i64 128, i1 false) #10
  br label %124

57:                                               ; preds = %7
  %58 = ptrtoint i32* %10 to i64
  %59 = ptrtoint i32* %12 to i64
  %60 = bitcast %struct.cpu_set_t* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %60) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 128, i1 false) #10
  %61 = sub i64 %59, %58
  %62 = ashr exact i64 %61, 2
  br label %63

63:                                               ; preds = %119, %57
  %64 = phi i64 [ 0, %57 ], [ %120, %119 ]
  %65 = getelementptr inbounds i32, i32* %10, i64 %64
  %66 = load i32, i32* %65, align 4
  switch i32 %66, label %119 [
    i32 0, label %67
    i32 1, label %67
    i32 2, label %67
    i32 3, label %110
    i32 5, label %110
  ]

67:                                               ; preds = %63, %63, %63
  %68 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*) acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %109, !prof !2

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %109, label %73

73:                                               ; preds = %70
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 0, i64 128, i1 false) #10
  %74 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 1
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %76, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = ptrtoint i32* %76 to i64
  %82 = ptrtoint i32* %78 to i64
  %83 = bitcast i32** %77 to i64*
  %84 = bitcast %"class.std::__1::vector"* %74 to i64*
  br label %86

85:                                               ; preds = %73
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 -1, i64 128, i1 false) #10
  br label %107

86:                                               ; preds = %100, %80
  %87 = phi i64 [ %101, %100 ], [ %81, %80 ]
  %88 = phi i64 [ %102, %100 ], [ %82, %80 ]
  %89 = phi i64 [ %103, %100 ], [ 0, %80 ]
  %90 = icmp ult i64 %89, 1024
  br i1 %90, label %91, label %100

91:                                               ; preds = %86
  %92 = and i64 %89, 63
  %93 = shl i64 1, %92
  %94 = lshr i64 %89, 6
  %95 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, i64 0, i32 0, i64 %94
  %96 = load i64, i64* %95, align 8
  %97 = or i64 %96, %93
  store i64 %97, i64* %95, align 8
  %98 = load i64, i64* %83, align 8
  %99 = load i64, i64* %84, align 8
  br label %100

100:                                              ; preds = %91, %86
  %101 = phi i64 [ %87, %86 ], [ %99, %91 ]
  %102 = phi i64 [ %88, %86 ], [ %98, %91 ]
  %103 = add nuw i64 %89, 1
  %104 = sub i64 %102, %101
  %105 = ashr exact i64 %104, 2
  %106 = icmp ult i64 %103, %105
  br i1 %106, label %86, label %107

107:                                              ; preds = %100, %85
  %108 = tail call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*)) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  br label %109

109:                                              ; preds = %107, %70, %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*), i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i64 128, i1 false) #10
  br label %123

110:                                              ; preds = %63, %63
  %111 = icmp ult i64 %64, 1024
  br i1 %111, label %112, label %119

112:                                              ; preds = %110
  %113 = and i64 %64, 63
  %114 = shl i64 1, %113
  %115 = lshr i64 %64, 6
  %116 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* %1, i64 0, i32 0, i64 %115
  %117 = load i64, i64* %116, align 8
  %118 = or i64 %117, %114
  store i64 %118, i64* %116, align 8
  br label %119

119:                                              ; preds = %112, %110, %63
  %120 = add nuw i64 %64, 1
  %121 = icmp ult i64 %120, %62
  br i1 %121, label %63, label %122

122:                                              ; preds = %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*), i8* nonnull align 8 %60, i64 128, i1 false) #10
  br label %123

123:                                              ; preds = %122, %109
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %60) #10
  br label %124

124:                                              ; preds = %56, %123
  %125 = tail call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores) #10
  br label %126

126:                                              ; preds = %4, %124, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base25SetProcessCpuAffinityModeEiNS_15CpuAffinityModeE(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.base::DirReaderLinux", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::FilePath", align 8
  %10 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN4base8internal13GetProcPidDirEi(%"class.base::FilePath"* nonnull sret %6, i32 %0) #10
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.base::DirReaderLinux"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 536, i1 false) #10
  %14 = bitcast %"class.base::FilePath"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %11, align 8
  %19 = select i1 %17, i8* %18, i8* %10
  %20 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 0
  %21 = call i32 (i8*, i32, ...) @open64(i8* %19, i32 65536) #10
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 528, i1 false) #10
  %23 = icmp sgt i32 %21, -1
  br i1 %23, label %24, label %104

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 4
  %26 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 3
  %27 = bitcast i32* %8 to i8*
  %28 = bitcast %"class.logging::CheckError"* %4 to i8*
  %29 = bitcast %"class.base::FilePath"* %9 to i8*
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %31

31:                                               ; preds = %89, %24
  %32 = phi i8 [ %90, %89 ], [ 0, %24 ]
  %33 = phi i8 [ %91, %89 ], [ 1, %24 ]
  %34 = phi i64 [ %93, %89 ], [ 0, %24 ]
  %35 = phi i64 [ %92, %89 ], [ 0, %24 ]
  br label %36

36:                                               ; preds = %69, %31
  %37 = phi i64 [ %34, %31 ], [ %58, %69 ]
  %38 = phi i64 [ %35, %31 ], [ %59, %69 ]
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 2, i64 %37
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 8
  %45 = zext i16 %44 to i64
  %46 = add i64 %37, %45
  store i64 %46, i64* %26, align 8
  br label %47

47:                                               ; preds = %40, %36
  %48 = phi i64 [ %46, %40 ], [ %37, %36 ]
  %49 = icmp eq i64 %48, %38
  br i1 %49, label %50, label %57

50:                                               ; preds = %47
  %51 = load i32, i32* %20, align 8
  %52 = call i64 (i64, ...) @syscall(i64 217, i32 %51, i8* %22, i64 512) #10
  %53 = trunc i64 %52 to i32
  switch i32 %53, label %54 [
    i32 0, label %94
    i32 -1, label %94
  ]

54:                                               ; preds = %50
  %55 = shl i64 %52, 32
  %56 = ashr exact i64 %55, 32
  store i64 %56, i64* %25, align 8
  store i64 0, i64* %26, align 8
  br label %57

57:                                               ; preds = %54, %47
  %58 = phi i64 [ 0, %54 ], [ %48, %47 ]
  %59 = phi i64 [ %56, %54 ], [ %38, %47 ]
  %60 = icmp eq i64 %59, 0
  %61 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %7, i64 0, i32 2, i64 %58
  %62 = getelementptr inbounds i8, i8* %61, i64 19
  %63 = select i1 %60, i8* null, i8* %62
  %64 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %57
  %67 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #11
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66, %57
  br label %36

70:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #10
  store i32 -1431655766, i32* %8, align 4
  br i1 %60, label %73, label %71

71:                                               ; preds = %70
  %72 = call i64 @strlen(i8* nonnull %63) #10
  br label %75

73:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %75

75:                                               ; preds = %73, %71
  %76 = phi i64 [ 0, %73 ], [ %72, %71 ]
  %77 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %63, i64 %76, i32* nonnull %8) #10
  br i1 %77, label %78, label %89

78:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #10
  br i1 %60, label %81, label %79

79:                                               ; preds = %78
  %80 = call i64 @strlen(i8* nonnull %63) #10
  br label %83

81:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #10
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ 0, %81 ], [ %80, %79 ]
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %9, %"class.base::FilePath"* nonnull %5, i8* %63, i64 %84) #10
  %85 = load i32, i32* %8, align 4
  %86 = call zeroext i1 @_ZN4base24SetThreadCpuAffinityModeEiNS_15CpuAffinityModeE(i32 %85, i32 %1) #10
  %87 = zext i1 %86 to i8
  %88 = and i8 %33, %87
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %89

89:                                               ; preds = %83, %75
  %90 = phi i8 [ 1, %83 ], [ %32, %75 ]
  %91 = phi i8 [ %88, %83 ], [ %33, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #10
  %92 = load i64, i64* %25, align 8
  %93 = load i64, i64* %26, align 8
  br label %31

94:                                               ; preds = %50, %50
  %95 = load i32, i32* %20, align 8
  %96 = icmp sgt i32 %95, -1
  br i1 %96, label %97, label %104

97:                                               ; preds = %94
  %98 = call i32 @close(i32 %95) #10
  switch i32 %98, label %103 [
    i32 -1, label %99
    i32 0, label %104
  ]

99:                                               ; preds = %97
  %100 = tail call i32* @__errno_location() #12
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 4
  br i1 %102, label %104, label %103

103:                                              ; preds = %99, %97
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %104

104:                                              ; preds = %2, %94, %97, %99, %103
  %105 = phi i8 [ %32, %103 ], [ %32, %97 ], [ %32, %99 ], [ %32, %94 ], [ 0, %2 ]
  %106 = phi i8 [ %33, %103 ], [ %33, %97 ], [ %33, %99 ], [ %33, %94 ], [ 1, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %13) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %107 = icmp ne i8 %105, 0
  %108 = and i8 %106, 1
  %109 = icmp ne i8 %108, 0
  %110 = and i1 %107, %109
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base28CurrentThreadCpuAffinityModeEv() local_unnamed_addr #0 {
  %1 = alloca %struct.cpu_set_t, align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %29, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %7, %18
  %15 = phi i32* [ %19, %18 ], [ %10, %7 ]
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %16, 8
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds i32, i32* %15, i64 1
  %20 = icmp eq i32* %19, %12
  br i1 %20, label %26, label %14

21:                                               ; preds = %14
  %22 = zext i32 %16 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = lshr i64 72340172838010880, %23
  %25 = trunc i64 %24 to i8
  br label %26

26:                                               ; preds = %18, %21, %7
  %27 = phi i8 [ 0, %7 ], [ %25, %21 ], [ 0, %18 ]
  store i8 %27, i8* @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores, align 1
  %28 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14HasBigCpuCoresEvE12kHasBigCores) #10
  br label %29

29:                                               ; preds = %0, %4, %26
  %30 = load i8, i8* @_ZZN4base14HasBigCpuCoresEvE12kHasBigCores, align 1, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %86, label %32

32:                                               ; preds = %29
  %33 = bitcast %struct.cpu_set_t* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %33) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 128, i1 false)
  %34 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %35 = call i32 @sched_getaffinity(i32 %34, i64 128, %struct.cpu_set_t* nonnull %1) #10
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*) acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %77, !prof !2

38:                                               ; preds = %32
  %39 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %77, label %41

41:                                               ; preds = %38
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 0, i64 128, i1 false) #10
  %42 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() #10
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 1
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %44, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = ptrtoint i32* %44 to i64
  %50 = ptrtoint i32* %46 to i64
  %51 = bitcast i32** %45 to i64*
  %52 = bitcast %"class.std::__1::vector"* %42 to i64*
  br label %54

53:                                               ; preds = %41
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i8 -1, i64 128, i1 false) #10
  br label %75

54:                                               ; preds = %68, %48
  %55 = phi i64 [ %69, %68 ], [ %49, %48 ]
  %56 = phi i64 [ %70, %68 ], [ %50, %48 ]
  %57 = phi i64 [ %71, %68 ], [ 0, %48 ]
  %58 = icmp ult i64 %57, 1024
  br i1 %58, label %59, label %68

59:                                               ; preds = %54
  %60 = and i64 %57, 63
  %61 = shl i64 1, %60
  %62 = lshr i64 %57, 6
  %63 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores, i64 0, i32 0, i64 %62
  %64 = load i64, i64* %63, align 8
  %65 = or i64 %64, %61
  store i64 %65, i64* %63, align 8
  %66 = load i64, i64* %51, align 8
  %67 = load i64, i64* %52, align 8
  br label %68

68:                                               ; preds = %59, %54
  %69 = phi i64 [ %55, %54 ], [ %67, %59 ]
  %70 = phi i64 [ %56, %54 ], [ %66, %59 ]
  %71 = add nuw i64 %57, 1
  %72 = sub i64 %70, %69
  %73 = ashr exact i64 %72, 2
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %54, label %75

75:                                               ; preds = %68, %53
  %76 = call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*)) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores) #10
  br label %77

77:                                               ; preds = %32, %38, %75
  %78 = call i32 @bcmp(i8* nonnull %33, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_18AllCoresEvE9kAllCores to i8*), i64 128)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #10
  br label %86

81:                                               ; preds = %77
  call fastcc void @_ZN4base12_GLOBAL__N_111LittleCoresEv()
  %82 = call i32 @bcmp(i8* nonnull %33, i8* bitcast (%struct.cpu_set_t* @_ZZN4base12_GLOBAL__N_111LittleCoresEvE12kLittleCores to i8*), i64 128)
  %83 = icmp eq i32 %82, 0
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #10
  %84 = zext i1 %83 to i64
  %85 = shl nuw nsw i64 %84, 32
  br label %86

86:                                               ; preds = %29, %81, %80
  %87 = phi i64 [ 1, %80 ], [ 0, %29 ], [ %84, %81 ]
  %88 = phi i64 [ 0, %80 ], [ 0, %29 ], [ %85, %81 ]
  %89 = or i64 %88, %87
  ret i64 %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i32 @sched_getaffinity(i32, i64, %struct.cpu_set_t*) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8internal13GetProcPidDirEi(%"class.base::FilePath"* sret, i32) local_unnamed_addr #4

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #7

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #3

declare i32 @close(i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #8

declare void @_ZN7logging6RawLogEiPKc(i32, i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
