; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/v8_wasm_response_extensions.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/v8_wasm_response_extensions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.9" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.9" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.9" = type { %"class.v8::TracedReference.10" }
%"class.v8::TracedReference.10" = type { %"class.v8::BasicTracedReference.11" }
%"class.v8::BasicTracedReference.11" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.12", i32, [4 x i8], %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.185", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.128", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.48" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.131", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.192" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.284" }
%"struct.std::__1::atomic.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__cxx_atomic_impl.287" }
%"struct.std::__1::__cxx_atomic_impl.287" = type { %"struct.std::__1::__cxx_atomic_base_impl.288" }
%"struct.std::__1::__cxx_atomic_base_impl.288" = type { i32 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.343 }
%union.anon.343 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.v8::WasmStreaming" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::WasmStreaming::WasmStreamingImpl"* }
%"class.v8::WasmStreaming::WasmStreamingImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.190" }
%"class.blink::Persistent.190" = type { %"class.blink::PersistentBase.191" }
%"class.blink::PersistentBase.191" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.617", %"class.WTF::HashMap.617", %"class.WTF::HashMap.622", %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.669", %"class.blink::Persistent.190", i8, i8, i8, %"class.WTF::Vector.280", %"class.std::__1::unique_ptr.675", %"class.blink::Persistent.681", %"class.blink::Persistent.685", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.599", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.605", %"class.std::__1::unique_ptr.611", i32, i32 }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type opaque
%"class.WTF::HashMap.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"struct.WTF::KeyValuePair.626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.626" = type opaque
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.635", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.630", i8* }
%"class.WTF::HashMap.630" = type { %"class.WTF::HashTable.631" }
%"class.WTF::HashTable.631" = type <{ %"struct.WTF::KeyValuePair.634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.634" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.635" = type { %"class.v8::PersistentValueMapBase.636" }
%"class.v8::PersistentValueMapBase.636" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.637", i8* }
%"class.WTF::HashMap.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.642", %"class.WTF::String", %"class.std::__1::unique_ptr.644" }
%"class.WTF::RefCounted.642" = type { %"class.base::RefCounted.643" }
%"class.base::RefCounted.643" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.653", %"class.WTF::Vector.659", i8, i32 }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.WTF::Vector.306"* }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.308", [32 x i8] }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.284" }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.681" = type { %"class.blink::PersistentBase.682" }
%"class.blink::PersistentBase.682" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.685" = type { %"class.blink::PersistentBase.686" }
%"class.blink::PersistentBase.686" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.689", i64 }
%"class.blink::HeapVector.689" = type { %"class.WTF::Vector.692" }
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { %"struct.std::__1::pair.695"*, i32, i32 }
%"struct.std::__1::pair.695" = type { %"class.blink::UntracedMember", %"class.blink::Member.697" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Response" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::Body", %"class.blink::Member.199", %"class.blink::Member.201" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Body" = type { %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.197" }
%"class.blink::WeakMember.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.417", i32, i8, [3 x i8], %"class.blink::HeapVector.419", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.438", %"class.blink::Member.573", %"class.blink::Member.575", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.359" }
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.366" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.239" }
%"class.WTF::HashTable.239" = type <{ %"class.blink::WeakMember.241"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.241" = type opaque
%"class.blink::Supplementable.366" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.367" }
%"class.blink::HeapHashMap.367" = type { %"class.WTF::HashMap.370" }
%"class.WTF::HashMap.370" = type { %"class.WTF::HashTable.371" }
%"class.WTF::HashTable.371" = type <{ %"struct.WTF::KeyValuePair.373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.373" = type { i8*, %"class.blink::Member.374" }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.376" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.378, %"class.std::__1::unique_ptr.382", %"class.std::__1::unique_ptr.382", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.407", %"class.blink::Member.298", i32, [4 x i8], %"class.WTF::HashSet.413", i32, i32 }
%class.scoped_refptr.378 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.379", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.347", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.381 }
%"class.WTF::RefCounted.379" = type { %"class.base::RefCounted.380" }
%"class.base::RefCounted.380" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.347" = type { %"class.absl::optional_internal::optional_data.348" }
%"class.absl::optional_internal::optional_data.348" = type { %"class.absl::optional_internal::optional_data_base.349" }
%"class.absl::optional_internal::optional_data_base.349" = type { %"class.absl::optional_internal::optional_data_dtor_base.350" }
%"class.absl::optional_internal::optional_data_dtor_base.350" = type { i8, %union.anon.351 }
%union.anon.351 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.381 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.394", %"class.std::__1::map.403"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.347" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.385" }
%"class.std::__1::__tree.385" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::map.394" = type { %"class.std::__1::__tree.395" }
%"class.std::__1::__tree.395" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::map.403" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.198" }
%"class.WTF::HashSet.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.419" = type { %"class.WTF::Vector.422" }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"class.blink::Member.425"*, i32, i32 }
%"class.blink::Member.425" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.431", i32, i32 }
%"class.blink::HeapHashMap.431" = type { %"class.WTF::HashMap.434" }
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.437" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.441" }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.444" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"class.mojo::StructPtr.447"*, i32, i32 }
%"class.mojo::StructPtr.447" = type { %"class.std::__1::unique_ptr.448" }
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.451", %"class.WTF::HashMap.458", %"class.WTF::HashMap.463", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.468", i32, %"class.mojo::StructPtr.473", %"class.WTF::Vector.468" }
%"class.mojo::StructPtr.451" = type { %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.WTF::HashMap.463" = type { %"class.WTF::HashTable.464" }
%"class.WTF::HashTable.464" = type <{ %"struct.WTF::KeyValuePair.467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.467" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.473" = type { %"class.std::__1::unique_ptr.474" }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.468", i8, i8, [6 x i8] }>
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.564" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.488", i32 }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.491", %"class.absl::optional.492", %"class.absl::optional.497", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.517", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.539", %"class.std::__1::map.550", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.559", i8, %class.scoped_refptr.502, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.560" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.491" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, %union.anon.496 }
%union.anon.496 = type { %"class.base::TimeDelta" }
%"class.absl::optional.497" = type { %"class.absl::optional_internal::optional_data.498" }
%"class.absl::optional_internal::optional_data.498" = type { %"class.absl::optional_internal::optional_data_base.499" }
%"class.absl::optional_internal::optional_data_base.499" = type { %"class.absl::optional_internal::optional_data_dtor_base.500" }
%"class.absl::optional_internal::optional_data_dtor_base.500" = type { i8, %union.anon.501 }
%union.anon.501 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.502, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.504 }
%class.scoped_refptr.504 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.505", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.505" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.506" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__atomic_base.508" }
%"struct.std::__1::__atomic_base.508" = type { %"struct.std::__1::__cxx_atomic_impl.509" }
%"struct.std::__1::__cxx_atomic_impl.509" = type { %"struct.std::__1::__cxx_atomic_base_impl.510" }
%"struct.std::__1::__cxx_atomic_base_impl.510" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.515 }
%class.scoped_refptr.515 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.577", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.502, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.577" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.520", %class.scoped_refptr.521 }
%"class.base::RepeatingCallback.520" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.521 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.522", [4 x i8] }>
%"class.base::RefCountedThreadSafe.522" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.526", %"class.std::__1::unique_ptr.532", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.538" }
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.538" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.539" = type { %"class.std::__1::__tree.540" }
%"class.std::__1::__tree.540" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.541", %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::map.550" = type { %"class.std::__1::__tree.551" }
%"class.std::__1::__tree.551" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.552", %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.base::OnceCallback.559" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.502 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.503" }>
%"class.base::RefCountedThreadSafe.503" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.560" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::FetchResponseData"* }
%"class.blink::FetchResponseData" = type { i32, i64, i32, %"class.std::__1::unique_ptr.216", %"class.WTF::Vector.222", i16, %"class.WTF::AtomicString", %"class.blink::Member.203", %"class.blink::Member.199", %"class.blink::Member.233", %"class.WTF::String", %"class.WTF::AtomicString", %"class.base::Time", %"class.WTF::String", %"class.std::__1::set", i32, %"class.WTF::AtomicString", i8, i8, %"class.std::__1::unique_ptr.338" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i32* }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.225" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::KURL"* }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::FetchHeaderList"* }
%"class.blink::FetchHeaderList" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::BodyStreamBuffer"* }
%"class.blink::BodyStreamBuffer" = type <{ %"class.blink::UnderlyingSourceBase", %"class.blink::BytesConsumer::Client", %"class.blink::Member.244", %"class.blink::Member.246", %"class.blink::Member.248", %"class.blink::Member.250", %"class.blink::Member.254", %"class.blink::Member.258", %"class.blink::Member.299", %class.scoped_refptr.327, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::UnderlyingSourceBase" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.242" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.235" }
%"class.blink::WeakMember.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::ReadableStreamDefaultControllerWithScriptScope"* }
%"class.blink::ReadableStreamDefaultControllerWithScriptScope" = type opaque
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::ScriptState"* }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::BytesUploader"* }
%"class.blink::BytesUploader" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::FetchDataLoader"* }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.280", %"class.blink::HeapVector.291", %"class.blink::Member.298" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.273" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266", [32 x i8] }
%"class.WTF::VectorBufferBase.266" = type { %"struct.std::__1::pair.267"*, i32, i32 }
%"struct.std::__1::pair.267" = type { %"class.WTF::AtomicString", %"class.blink::Member.268" }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::HeapVector.270"* }
%"class.blink::HeapVector.270" = type opaque
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.WTF::Vector.276"* }
%"class.WTF::Vector.276" = type opaque
%"class.blink::HeapVector.291" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::Member.258"*, i32, i32 }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type { %"class.blink::SingleCachedMetadataHandler.base", %class.scoped_refptr.303, i8, %"class.std::__1::unique_ptr.321", %"class.WTF::TextEncoding" }
%"class.blink::SingleCachedMetadataHandler.base" = type <{ %"class.blink::CachedMetadataHandler", i8 }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%class.scoped_refptr.303 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.304", %"class.WTF::Vector.306", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.311", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.317" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { i8* }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%class.scoped_refptr.327 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.328" }
%"class.base::RefCountedThreadSafe.328" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.329", i32 }
%"class.mojo::ScopedHandleBase.329" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.330" }
%"class.base::time_internal::TimeBase.330" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.331" }
%"class.std::__1::__tree.331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.net::AuthChallengeInfo"* }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::Headers"* }
%"class.blink::Headers" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.blink::Member.203", i32, [4 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::WasmStreaming::Client" = type { i32 (...)** }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::FetchDataLoader::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.v8::internal::Isolate" = type opaque
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.586", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.311", i64, i64 }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.593" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<blink::(anonymous namespace)::WasmStreamingClient, std::__1::allocator<blink::(anonymous namespace)::WasmStreamingClient> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<blink::(anonymous namespace)::WasmStreamingClient, std::__1::allocator<blink::(anonymous namespace)::WasmStreamingClient> >::_Storage" = type { [32 x i8] }
%"class.blink::(anonymous namespace)::WasmStreamingClient" = type { %"class.v8::WasmStreaming::Client", %"class.WTF::String", %"class.base::Time", %class.scoped_refptr.303 }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.709", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.709" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"struct.v8::OwnedBuffer" = type { %"class.std::__1::unique_ptr.710", i64 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { i8* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Platform" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::Member.250", %"class.blink::Member.580", %"class.std::__1::shared_ptr", %"class.blink::Member.244" }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::FetchDataLoader::Client"* }
%"class.std::__1::shared_ptr" = type { %"class.v8::WasmStreaming"*, %"class.std::__1::__shared_weak_count"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.716", %"class.blink::FreeList", %"class.WTF::Vector.721" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.721" = type { %"class.WTF::VectorBuffer.722" }
%"class.WTF::VectorBuffer.722" = type { %"class.WTF::VectorBufferBase.723" }
%"class.WTF::VectorBufferBase.723" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.597" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::Local.597" = type { %"class.v8::Context"* }
%"class.blink::(anonymous namespace)::WasmDataLoaderClient" = type { %"class.blink::FetchDataLoader::Client", %"class.blink::Member.584" }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr.747" }
%"class.std::__1::shared_ptr.747" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.blink::FormData" = type opaque
%"class.mojo::ScopedHandleBase.748" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE = comdat any

$_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE = comdat any

$_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE = comdat any

$_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE = comdat any

$_ZN5blink15FetchDataLoader6Client27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE = comdat any

$_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedDataPipeEv = comdat any

$_ZN5blink15FetchDataLoader6ClientD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [35 x i8] c"v8.wasm.streamFromResponseCallback\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"WebAssembly\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"compile\00", align 1
@.str.3 = private unnamed_addr constant [83 x i8] c"An argument must be provided, which must be a Response or Promise<Response> object\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"HTTP status code is not ok\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"application/wasm\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"Incorrect response MIME type. Expected 'application/wasm'.\00", align 1
@.str.7 = private unnamed_addr constant [64 x i8] c"Cannot compile WebAssembly.Module from an already read Response\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Empty WebAssembly module\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"v8.wasm.moduleCacheHit\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"consumedCacheSize\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"v8.wasm.moduleCacheInvalid\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.13 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink10V8Response18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_119WasmStreamingClientE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)* @_ZN5blink12_GLOBAL__N_119WasmStreamingClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)* @_ZN5blink12_GLOBAL__N_119WasmStreamingClientD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*, %"class.v8::CompiledWasmModule"*)* @_ZN5blink12_GLOBAL__N_119WasmStreamingClient16OnModuleCompiledEN2v818CompiledWasmModuleE to i8*)] }, align 8
@.str.17 = private unnamed_addr constant [23 x i8] c"v8.wasm.compiledModule\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"v8.wasm.cachedModule\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"producedCacheSize\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchDataLoaderEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchDataLoader]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE = internal unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming9DebugNameEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*)* @_ZThn8_NK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming9DebugNameEv to i8*)] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.23 = private unnamed_addr constant [31 x i8] c"Could not download wasm module\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"FetchDataLoaderForWasmModule\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@_ZTVN5blink12_GLOBAL__N_120WasmDataLoaderClientE = internal unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmDataLoaderClient"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_120WasmDataLoaderClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*)* @_ZN5blink15FetchDataLoader6ClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmDataLoaderClient"*)* @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClientD0Ev to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)* @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)* @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)* @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.748"*)* @_ZN5blink15FetchDataLoader6Client27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*)* @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmDataLoaderClient"*)* @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient30DidFetchDataLoadedCustomFormatEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmDataLoaderClient"*)* @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient22DidFetchDataLoadFailedEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WasmDataLoaderClient"*)* @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient5AbortEv to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22WasmResponseExtensions10InitializeEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v87Isolate24SetWasmStreamingCallbackEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEE(%"class.v8::Isolate"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_126StreamFromResponseCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE) #12
  ret void
}

declare void @_ZN2v87Isolate24SetWasmStreamingCallbackEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEE(%"class.v8::Isolate"*, void (%"class.v8::FunctionCallbackInfo"*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126StreamFromResponseCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i32, align 4
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %1
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %17 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %21

21:                                               ; preds = %1, %15
  %22 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1
  %24 = bitcast %"class.blink::ExceptionContext"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 64, i1 false)
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load i64, i64* %27, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  %37 = bitcast %"class.v8::Isolate"** %36 to i64*
  store i64 %29, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %40 = bitcast %"class.WTF::StringImpl"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #12
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %42 = getelementptr inbounds i64, i64* %26, i64 4
  %43 = bitcast i64* %42 to %"class.v8::Value"*
  %44 = call { %"class.v8::WasmStreaming"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v813WasmStreaming6UnpackEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %41, %"class.v8::Value"* %43) #12
  %45 = extractvalue { %"class.v8::WasmStreaming"*, %"class.std::__1::__shared_weak_count"* } %44, 0
  %46 = ptrtoint %"class.v8::WasmStreaming"* %45 to i64
  %47 = extractvalue { %"class.v8::WasmStreaming"*, %"class.std::__1::__shared_weak_count"* } %44, 1
  %48 = icmp eq %"class.std::__1::__shared_weak_count"* %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %21
  %50 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %51 = atomicrmw add i64* %50, i64 1 monotonic
  %52 = atomicrmw add i64* %50, i64 1 monotonic
  %53 = atomicrmw add i64* %50, i64 -1 acq_rel
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0
  %57 = bitcast %"class.std::__1::__shared_weak_count"* %47 to void (%"class.std::__1::__shared_count"*)***
  %58 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %58, i64 2
  %60 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %59, align 8
  call void %60(%"class.std::__1::__shared_count"* %56) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %47) #12
  br label %61

61:                                               ; preds = %21, %49, %55
  %62 = load i64*, i64** %25, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 1
  %64 = bitcast i64* %63 to %"class.v8::Isolate"**
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %66 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %65) #12
  %67 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %66) #12
  %68 = ptrtoint %"class.blink::ScriptState"* %67 to i64
  %69 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %67, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.v8::Context"*, %"class.v8::Context"** %69, align 8
  %71 = icmp eq %"class.v8::Context"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %67, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %73, align 8
  %75 = icmp eq %"class.blink::V8PerContextData"* %74, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %72, %61
  call void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"* %45, %"class.v8::Value"* null) #12
  br label %503

77:                                               ; preds = %72
  %78 = load i64*, i64** %25, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %77
  %85 = add i64 %80, 160
  %86 = inttoptr i64 %85 to %"class.v8::Value"*
  br label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %89 = bitcast i64** %88 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %84, %87
  %92 = phi %"class.v8::Value"* [ %86, %84 ], [ %90, %87 ]
  %93 = add i64 %80, 8
  %94 = inttoptr i64 %93 to %"class.blink::V8PerIsolateData"**
  %95 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %94, align 8
  %96 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %95, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8Response18wrapper_type_info_E, %"class.v8::Value"* %92) #12
  br i1 %96, label %97, label %120

97:                                               ; preds = %91
  %98 = bitcast %"class.v8::Value"* %92 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = and i64 %99, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load i16, i16* %107, align 2
  switch i16 %108, label %113 [
    i16 1057, label %109
    i16 1056, label %109
    i16 1040, label %109
  ]

109:                                              ; preds = %97, %97, %97
  %110 = add i64 %99, 19
  %111 = inttoptr i64 %110 to i8**
  %112 = load i8*, i8** %111, align 1
  br label %116

113:                                              ; preds = %97
  %114 = bitcast %"class.v8::Value"* %92 to %"class.v8::Object"*
  %115 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %114, i32 1) #12
  br label %116

116:                                              ; preds = %109, %113
  %117 = phi i8* [ %112, %109 ], [ %115, %113 ]
  %118 = bitcast i8* %117 to %"class.blink::Response"*
  %119 = icmp eq i8* %117, null
  br i1 %119, label %120, label %121

120:                                              ; preds = %91, %116
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %503

121:                                              ; preds = %116
  %122 = call zeroext i1 @_ZNK5blink8Response2okEv(%"class.blink::Response"* nonnull %118) #12
  br i1 %122, label %124, label %123

123:                                              ; preds = %121
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %503

124:                                              ; preds = %121
  %125 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  %126 = call %"class.WTF::StringImpl"* @_ZNK5blink8Response11ContentTypeEv(%"class.blink::Response"* nonnull %118) #12
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %127, align 8
  %128 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %7) #12
  %129 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #12
  %130 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %130, label %131, label %135

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %132, align 8
  %133 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %134 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %133, i64* %134, align 8
  br label %143

135:                                              ; preds = %124
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 1
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %141 = bitcast i8** %140 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %141, align 8
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %143

143:                                              ; preds = %135, %131
  %144 = phi i64 [ %142, %135 ], [ %133, %131 ]
  %145 = phi i32 [ %138, %135 ], [ 0, %131 ]
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %145, i32* %146, align 8
  %147 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #12
  %148 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %144, i64* %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 16, i32* %150, align 8
  %151 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #12
  br i1 %130, label %165, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #12
  br label %165

165:                                              ; preds = %143, %161, %164
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #12
  br label %181

181:                                              ; preds = %165, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  br i1 %151, label %183, label %182

182:                                              ; preds = %181
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %503

183:                                              ; preds = %181
  %184 = getelementptr inbounds i8, i8* %117, i64 24
  %185 = bitcast i8* %184 to %"class.blink::Body"*
  %186 = call zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"* %185) #12
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = call zeroext i1 @_ZNK5blink8Response10IsBodyUsedEv(%"class.blink::Response"* nonnull %118) #12
  br i1 %188, label %189, label %190

189:                                              ; preds = %187, %183
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %503

190:                                              ; preds = %187
  %191 = getelementptr inbounds i8, i8* %117, i64 40
  %192 = bitcast i8* %191 to %"class.blink::FetchResponseData"**
  %193 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %193, i64 0, i32 9, i32 0, i32 0
  %195 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %194, align 8
  %196 = icmp eq %"class.blink::BodyStreamBuffer"* %195, null
  br i1 %196, label %197, label %198

197:                                              ; preds = %190
  call void @_ZN5blink14ExceptionState21ThrowWasmCompileErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %503

198:                                              ; preds = %190
  %199 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #12
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %200, align 8
  %201 = call %"class.WTF::StringImpl"* @_ZNK5blink8Response3urlEv(%"class.blink::Response"* nonnull %118) #12
  store %"class.WTF::StringImpl"* %201, %"class.WTF::StringImpl"** %200, align 8
  %202 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* nonnull %8, i32 0) #12
  %203 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = zext i8 %205 to i64
  %212 = select i1 %206, i8* %208, i8* %202
  %213 = select i1 %206, i64 %210, i64 %211
  call void @_ZN2v813WasmStreaming6SetUrlEPKcm(%"class.v8::WasmStreaming"* %45, i8* %212, i64 %213) #12
  %214 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %192, align 8
  %215 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %214, i64 0, i32 9, i32 0, i32 0
  %216 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::BodyStreamBuffer", %"class.blink::BodyStreamBuffer"* %216, i64 0, i32 8, i32 0, i32 0
  %218 = load %"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::ScriptCachedMetadataHandler"** %217, align 8
  %219 = icmp eq %"class.blink::ScriptCachedMetadataHandler"* %218, null
  br i1 %219, label %390, label %220

220:                                              ; preds = %198
  %221 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %214, i64 0, i32 8, i32 0, i32 0
  %222 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %222, i64 0, i32 12, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = call i8* @_Znwm(i64 56) #13
  %226 = bitcast i8* %225 to i32 (...)***
  %227 = getelementptr inbounds i8, i8* %225, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %228 = getelementptr inbounds i8, i8* %225, i64 24
  %229 = bitcast i8* %228 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119WasmStreamingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nonnull %8) #12
  %231 = getelementptr inbounds i8, i8* %225, i64 32
  %232 = bitcast i8* %231 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %232, align 8
  %233 = getelementptr inbounds i8, i8* %225, i64 40
  %234 = bitcast i8* %233 to i64*
  store i64 %224, i64* %234, align 8
  %235 = getelementptr inbounds i8, i8* %225, i64 48
  %236 = bitcast i8* %235 to %"class.blink::CachedMetadata"**
  store %"class.blink::CachedMetadata"* null, %"class.blink::CachedMetadata"** %236, align 8
  %237 = bitcast i8* %225 to %"class.std::__1::__shared_weak_count"*
  %238 = bitcast i8* %227 to i64*
  %239 = atomicrmw add i64* %238, i64 1 monotonic
  %240 = bitcast i8* %228 to %"class.v8::WasmStreaming::Client"*
  call void @_ZN2v813WasmStreaming9SetClientENSt3__110shared_ptrINS0_6ClientEEE(%"class.v8::WasmStreaming"* %45, %"class.v8::WasmStreaming::Client"* %240, %"class.std::__1::__shared_weak_count"* nonnull %237) #12
  %241 = call %"class.blink::CachedMetadata"* @_ZNK5blink27ScriptCachedMetadataHandler17GetCachedMetadataEj(%"class.blink::ScriptCachedMetadataHandler"* nonnull %218, i32 1) #12
  %242 = icmp eq %"class.blink::CachedMetadata"* %241, null
  br i1 %242, label %381, label %243

243:                                              ; preds = %220
  %244 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %245 = and i8 %244, 25
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %274, label %247, !prof !2

247:                                              ; preds = %243
  %248 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %8, i32 0) #12
  %249 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #12
  %250 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 2
  %251 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %250) #12
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %259, label %253

253:                                              ; preds = %247
  %254 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %250) #12
  %255 = icmp ult i64 %254, 4294967296
  br i1 %255, label %257, label %256, !prof !2

256:                                              ; preds = %253
  call void @llvm.trap() #12
  unreachable

257:                                              ; preds = %253
  %258 = trunc i64 %254 to i32
  br label %262

259:                                              ; preds = %247
  %260 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 1, i32 0, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  br label %262

262:                                              ; preds = %257, %259
  %263 = phi i32 [ %258, %257 ], [ %261, %259 ]
  %264 = add i32 %263, -8
  store i32 %264, i32* %11, align 4
  %265 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i32* nonnull dereferenceable(4) %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #12
  %266 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %273

270:                                              ; preds = %262
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  call void @_ZdlPv(i8* %272) #13
  br label %273

273:                                              ; preds = %262, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #12
  br label %274

274:                                              ; preds = %243, %273
  %275 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 2
  %276 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %275) #12
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %275) #12
  br label %283

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 1, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  br label %283

283:                                              ; preds = %278, %280
  %284 = phi i8* [ %279, %278 ], [ %282, %280 ]
  %285 = getelementptr inbounds i8, i8* %284, i64 8
  %286 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %275) #12
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %294, label %288

288:                                              ; preds = %283
  %289 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %275) #12
  %290 = icmp ult i64 %289, 4294967296
  br i1 %290, label %292, label %291, !prof !2

291:                                              ; preds = %288
  call void @llvm.trap() #12
  unreachable

292:                                              ; preds = %288
  %293 = trunc i64 %289 to i32
  br label %297

294:                                              ; preds = %283
  %295 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 1, i32 0, i32 0, i32 2
  %296 = load i32, i32* %295, align 4
  br label %297

297:                                              ; preds = %292, %294
  %298 = phi i32 [ %293, %292 ], [ %296, %294 ]
  %299 = add i32 %298, -8
  %300 = zext i32 %299 to i64
  %301 = call zeroext i1 @_ZN2v813WasmStreaming22SetCompiledModuleBytesEPKhm(%"class.v8::WasmStreaming"* %45, i8* %285, i64 %300) #12
  br i1 %301, label %302, label %349

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %303) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %303) #12
  %304 = ptrtoint %"class.blink::CachedMetadata"* %241 to i64
  %305 = bitcast i8* %235 to i64*
  %306 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %236, align 8
  store i64 %304, i64* %305, align 8
  %307 = icmp eq %"class.blink::CachedMetadata"* %306, null
  br i1 %307, label %329, label %308

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %306, i64 0, i32 0, i32 0
  %310 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %306, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %310) #12
  %311 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %306, i64 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %329

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %309, i64 6
  %316 = bitcast %"class.base::RefCounted.305"* %315 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %316) #12
  %317 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %309, i64 2
  %318 = bitcast %"class.base::RefCounted.305"* %317 to i8**
  %319 = load i8*, i8** %318, align 8
  %320 = icmp eq i8* %319, null
  br i1 %320, label %327, label %321, !prof !2

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %309, i64 5, i32 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %326, label %325, !prof !3

325:                                              ; preds = %321
  store i32 0, i32* %322, align 4
  br label %326

326:                                              ; preds = %325, %321
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #12
  br label %327

327:                                              ; preds = %326, %314
  %328 = bitcast %"class.blink::CachedMetadata"* %306 to i8*
  call void @free(i8* %328) #12
  br label %329

329:                                              ; preds = %302, %308, %327
  %330 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %303) #12
  %331 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %360

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %330, i64 6
  %336 = bitcast %"class.base::RefCounted.305"* %335 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %336) #12
  %337 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %330, i64 2
  %338 = bitcast %"class.base::RefCounted.305"* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %347, label %341, !prof !2

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %330, i64 5, i32 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %346, label %345, !prof !3

345:                                              ; preds = %341
  store i32 0, i32* %342, align 4
  br label %346

346:                                              ; preds = %345, %341
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %339) #12
  br label %347

347:                                              ; preds = %346, %334
  %348 = bitcast %"class.blink::CachedMetadata"* %241 to i8*
  call void @free(i8* %348) #12
  br label %360

349:                                              ; preds = %297
  %350 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %351 = and i8 %350, 25
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %359, label %353, !prof !2

353:                                              ; preds = %349
  %354 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %355 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #12
  %356 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %357 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %357, i64* %356, align 8
  %358 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %354, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #12
  br label %359

359:                                              ; preds = %349, %353
  call void @_ZN5blink27ScriptCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE(%"class.blink::ScriptCachedMetadataHandler"* nonnull %218, i32 2) #12
  br label %360

360:                                              ; preds = %347, %329, %359
  %361 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0
  %362 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %362) #12
  %363 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %241, i64 0, i32 0, i32 0, i32 0, i32 0
  %364 = load i32, i32* %363, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %381

366:                                              ; preds = %360
  %367 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %361, i64 6
  %368 = bitcast %"class.base::RefCounted.305"* %367 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %368) #12
  %369 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %361, i64 2
  %370 = bitcast %"class.base::RefCounted.305"* %369 to i8**
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %379, label %373, !prof !2

373:                                              ; preds = %366
  %374 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %361, i64 5, i32 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %378, label %377, !prof !3

377:                                              ; preds = %373
  store i32 0, i32* %374, align 4
  br label %378

378:                                              ; preds = %377, %373
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %371) #12
  br label %379

379:                                              ; preds = %378, %366
  %380 = bitcast %"class.blink::CachedMetadata"* %241 to i8*
  call void @free(i8* %380) #12
  br label %381

381:                                              ; preds = %220, %379, %360
  %382 = atomicrmw add i64* %238, i64 -1 acq_rel
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %390

384:                                              ; preds = %381
  %385 = bitcast i8* %225 to %"class.std::__1::__shared_count"*
  %386 = bitcast i8* %225 to void (%"class.std::__1::__shared_count"*)***
  %387 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %387, i64 2
  %389 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %388, align 8
  call void %389(%"class.std::__1::__shared_count"* nonnull %385) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %237) #12
  br label %390

390:                                              ; preds = %384, %381, %198
  %391 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 56) #12
  br i1 %48, label %395, label %392

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %394 = atomicrmw add i64* %393, i64 1 monotonic
  br label %395

395:                                              ; preds = %390, %392
  %396 = ptrtoint %"class.std::__1::__shared_weak_count"* %47 to i64
  %397 = bitcast i8* %391 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %397, align 8
  %398 = getelementptr inbounds i8, i8* %391, i64 16
  %399 = getelementptr inbounds i8, i8* %391, i64 32
  %400 = bitcast i8* %399 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %398, i8 0, i64 16, i1 false) #12
  store i64 %46, i64* %400, align 8
  %401 = getelementptr inbounds i8, i8* %391, i64 40
  %402 = bitcast i8* %401 to i64*
  store i64 %396, i64* %402, align 8
  %403 = getelementptr inbounds i8, i8* %391, i64 48
  %404 = bitcast i8* %403 to i64*
  store i64 %68, i64* %404, align 8
  %405 = getelementptr inbounds i8, i8* %391, i64 -4
  %406 = bitcast i8* %405 to i16*
  %407 = load atomic i16, i16* %406 monotonic, align 2
  %408 = or i16 %407, 1
  store atomic i16 %408, i16* %406 release, align 2
  %409 = ptrtoint i8* %391 to i64
  %410 = load %"class.blink::FetchResponseData"*, %"class.blink::FetchResponseData"** %192, align 8
  %411 = getelementptr inbounds %"class.blink::FetchResponseData", %"class.blink::FetchResponseData"* %410, i64 0, i32 9, i32 0, i32 0
  %412 = load %"class.blink::BodyStreamBuffer"*, %"class.blink::BodyStreamBuffer"** %411, align 8
  %413 = bitcast i8* %391 to %"class.blink::FetchDataLoader"*
  %414 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %415 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %414, i64 0, i32 1
  %416 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %415) #12
  %417 = icmp eq i8* %416, null
  br i1 %417, label %418, label %420, !prof !3

418:                                              ; preds = %395
  %419 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %415, i8* %419) #12
  br label %420

420:                                              ; preds = %418, %395
  %421 = phi i8* [ %419, %418 ], [ %416, %395 ]
  %422 = bitcast i8* %421 to %"class.blink::ThreadState"**
  %423 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %422, align 8
  %424 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %423, i64 0, i32 0, i32 0, i32 0, i32 0
  %425 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %424, align 8
  %426 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %431

428:                                              ; preds = %420
  %429 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %430 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %429, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %431

431:                                              ; preds = %428, %420
  %432 = phi i32 [ %426, %420 ], [ %430, %428 ]
  %433 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %425, i64 0, i32 19, i64 0
  %434 = bitcast %"class.blink::BaseArena"** %433 to %"class.blink::NormalPageArena"**
  %435 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %435, i64 0, i32 4
  %437 = load i64, i64* %436, align 8
  %438 = icmp ult i64 %437, 24
  br i1 %438, label %469, label %439, !prof !3

439:                                              ; preds = %431
  %440 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %435, i64 0, i32 3
  %441 = load i8*, i8** %440, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 24
  store i8* %442, i8** %440, align 8
  %443 = add i64 %437, -24
  store i64 %443, i64* %436, align 8
  %444 = bitcast i8* %441 to i32*
  store i32 0, i32* %444, align 4
  %445 = getelementptr inbounds i8, i8* %441, i64 4
  %446 = bitcast i8* %445 to i16*
  %447 = trunc i32 %432 to i16
  %448 = shl i16 %447, 2
  store atomic i16 %448, i16* %446 monotonic, align 2
  %449 = getelementptr inbounds i8, i8* %441, i64 6
  %450 = bitcast i8* %449 to i16*
  store i16 12, i16* %450, align 2
  %451 = ptrtoint i8* %441 to i64
  %452 = and i64 %451, -131072
  %453 = inttoptr i64 %452 to i8*
  %454 = getelementptr inbounds i8, i8* %453, i64 4400
  %455 = bitcast i8* %454 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %456 = bitcast i8* %454 to i64*
  %457 = load i64, i64* %456, align 16
  %458 = sub i64 %451, %457
  %459 = lshr i64 %458, 3
  %460 = lshr i64 %458, 6
  %461 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %455, i64 0, i32 0, i32 1, i64 %460
  %462 = load i8, i8* %461, align 1
  %463 = trunc i64 %459 to i32
  %464 = and i32 %463, 7
  %465 = shl i32 1, %464
  %466 = trunc i32 %465 to i8
  %467 = or i8 %462, %466
  store atomic i8 %467, i8* %461 release, align 1
  %468 = getelementptr inbounds i8, i8* %441, i64 8
  br label %472

469:                                              ; preds = %431
  %470 = zext i32 %432 to i64
  %471 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %435, i64 24, i64 %470) #12
  br label %472

472:                                              ; preds = %439, %469
  %473 = phi i8* [ %468, %439 ], [ %471, %469 ]
  %474 = bitcast i8* %473 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120WasmDataLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %474, align 8
  %475 = getelementptr inbounds i8, i8* %473, i64 8
  %476 = bitcast i8* %475 to i64*
  store i64 %409, i64* %476, align 8
  %477 = getelementptr inbounds i8, i8* %473, i64 -4
  %478 = bitcast i8* %477 to i16*
  %479 = load atomic i16, i16* %478 monotonic, align 2
  %480 = or i16 %479, 1
  store atomic i16 %480, i16* %478 release, align 2
  %481 = bitcast i8* %473 to %"class.blink::FetchDataLoader::Client"*
  call void @_ZN5blink16BodyStreamBuffer12StartLoadingEPNS_15FetchDataLoaderEPNS1_6ClientERNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"* %412, %"class.blink::FetchDataLoader"* %413, %"class.blink::FetchDataLoader::Client"* %481, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #12
  %482 = load i8, i8* %204, align 1
  %483 = icmp slt i8 %482, 0
  br i1 %483, label %484, label %486

484:                                              ; preds = %472
  %485 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %485) #13
  br label %486

486:                                              ; preds = %472, %484
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #12
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %486
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #12
  br label %502

502:                                              ; preds = %486, %498, %501
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #12
  br label %503

503:                                              ; preds = %120, %123, %182, %189, %197, %502, %76
  %504 = load i32, i32* %38, align 8
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %524, label %506

506:                                              ; preds = %503
  %507 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6
  %508 = bitcast %"class.blink::TraceWrapperV8Reference"* %507 to %"class.v8::Value"**
  %509 = load %"class.v8::Value"*, %"class.v8::Value"** %508, align 8
  %510 = icmp eq %"class.v8::Value"* %509, null
  br i1 %510, label %518, label %511

511:                                              ; preds = %506
  %512 = bitcast %"class.v8::Isolate"** %36 to %"class.v8::internal::Isolate"**
  %513 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %512, align 8
  %514 = bitcast %"class.v8::Value"* %509 to i64*
  %515 = load i64, i64* %514, align 8
  %516 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %513, i64 %515) #12
  %517 = bitcast i64* %516 to %"class.v8::Value"*
  br label %518

518:                                              ; preds = %511, %506
  %519 = phi %"class.v8::Value"* [ %517, %511 ], [ null, %506 ]
  call void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"* %45, %"class.v8::Value"* %519) #12
  %520 = bitcast %"class.blink::ExceptionState"* %6 to void (%"class.blink::ExceptionState"*)***
  %521 = load void (%"class.blink::ExceptionState"*)**, void (%"class.blink::ExceptionState"*)*** %520, align 8
  %522 = getelementptr inbounds void (%"class.blink::ExceptionState"*)*, void (%"class.blink::ExceptionState"*)** %521, i64 6
  %523 = load void (%"class.blink::ExceptionState"*)*, void (%"class.blink::ExceptionState"*)** %522, align 8
  call void %523(%"class.blink::ExceptionState"* nonnull %6) #12
  br label %524

524:                                              ; preds = %518, %503
  br i1 %48, label %544, label %525

525:                                              ; preds = %524
  %526 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %527 = atomicrmw add i64* %526, i64 -1 acq_rel
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %529, label %535

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0
  %531 = bitcast %"class.std::__1::__shared_weak_count"* %47 to void (%"class.std::__1::__shared_count"*)***
  %532 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %531, align 8
  %533 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %532, i64 2
  %534 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %533, align 8
  call void %534(%"class.std::__1::__shared_count"* %530) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %47) #12
  br label %535

535:                                              ; preds = %525, %529
  %536 = atomicrmw add i64* %526, i64 -1 acq_rel
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %544

538:                                              ; preds = %535
  %539 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0
  %540 = bitcast %"class.std::__1::__shared_weak_count"* %47 to void (%"class.std::__1::__shared_count"*)***
  %541 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %540, align 8
  %542 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %541, i64 2
  %543 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %542, align 8
  call void %543(%"class.std::__1::__shared_count"* %539) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %47) #12
  br label %544

544:                                              ; preds = %524, %535, %538
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %545 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %546 = load i64*, i64** %545, align 8
  %547 = icmp eq i64* %546, null
  br i1 %547, label %557, label %548

548:                                              ; preds = %544
  %549 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %550 = bitcast %"class.v8::Isolate"* %549 to %"class.v8::internal::Isolate"*
  %551 = load i64, i64* %546, align 8
  %552 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %550, i64 %551) #12
  %553 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %549) #12
  br i1 %553, label %557, label %554

554:                                              ; preds = %548
  %555 = bitcast i64* %552 to %"class.v8::Value"*
  %556 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %549, %"class.v8::Value"* %555) #12
  br label %557

557:                                              ; preds = %554, %548, %544
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %559, label %573, label %560

560:                                              ; preds = %557
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  br i1 %564, label %567, label %569

567:                                              ; preds = %560
  %568 = add i32 %566, -1
  store i32 %568, i32* %565, align 4
  br label %569

569:                                              ; preds = %567, %560
  %570 = phi i32 [ %568, %567 ], [ %566, %560 ]
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %573

572:                                              ; preds = %569
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %558) #12
  br label %573

573:                                              ; preds = %557, %569, %572
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare { %"class.v8::WasmStreaming"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v813WasmStreaming6UnpackEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8Response2okEv(%"class.blink::Response"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8Response11ContentTypeEv(%"class.blink::Response"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Body12IsBodyLockedEv(%"class.blink::Body"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8Response10IsBodyUsedEv(%"class.blink::Response"*) unnamed_addr #1

declare void @_ZN5blink14ExceptionState21ThrowWasmCompileErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8Response3urlEv(%"class.blink::Response"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZN2v813WasmStreaming6SetUrlEPKcm(%"class.v8::WasmStreaming"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN2v813WasmStreaming9SetClientENSt3__110shared_ptrINS0_6ClientEEE(%"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming::Client"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare %"class.blink::CachedMetadata"* @_ZNK5blink27ScriptCachedMetadataHandler17GetCachedMetadataEj(%"class.blink::ScriptCachedMetadataHandler"*, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #12
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247569150, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %30, i8** %31, align 8
  %32 = load i32, i32* %10, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #12
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #12
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #12
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #12
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #12
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  ret i64 %35
}

declare zeroext i1 @_ZN2v813WasmStreaming22SetCompiledModuleBytesEPKhm(%"class.v8::WasmStreaming"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink27ScriptCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE(%"class.blink::ScriptCachedMetadataHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink16BodyStreamBuffer12StartLoadingEPNS_15FetchDataLoaderEPNS1_6ClientERNS_14ExceptionStateE(%"class.blink::BodyStreamBuffer"*, %"class.blink::FetchDataLoader"*, %"class.blink::FetchDataLoader::Client"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.13, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #12
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.13, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<blink::(anonymous namespace)::WasmStreamingClient, std::__1::allocator<blink::(anonymous namespace)::WasmStreamingClient> >::_Storage"* %2 to %"class.blink::(anonymous namespace)::WasmStreamingClient"*
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace<blink::(anonymous namespace)::WasmStreamingClient, std::__1::allocator<blink::(anonymous namespace)::WasmStreamingClient> >::_Storage"* %2 to void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)***
  %5 = load void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)**, void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)*** %4, align 8
  %6 = load void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)*, void (%"class.blink::(anonymous namespace)::WasmStreamingClient"*)** %5, align 8
  tail call void %6(%"class.blink::(anonymous namespace)::WasmStreamingClient"* %3) #12
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_emplaceIN5blink12_GLOBAL__N_119WasmStreamingClientENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119WasmStreamingClientD2Ev(%"class.blink::(anonymous namespace)::WasmStreamingClient"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119WasmStreamingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadata"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #12
  %9 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 6
  %14 = bitcast %"class.base::RefCounted.305"* %13 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 2
  %16 = bitcast %"class.base::RefCounted.305"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %25, label %19, !prof !2

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 5, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !3

23:                                               ; preds = %19
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %19
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #12
  br label %25

25:                                               ; preds = %24, %12
  %26 = bitcast %"class.blink::CachedMetadata"* %4 to i8*
  tail call void @free(i8* %26) #12
  br label %27

27:                                               ; preds = %1, %6, %25
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %27, %40, %43
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119WasmStreamingClientD0Ev(%"class.blink::(anonymous namespace)::WasmStreamingClient"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119WasmStreamingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadata"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #12
  %9 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 6
  %14 = bitcast %"class.base::RefCounted.305"* %13 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 2
  %16 = bitcast %"class.base::RefCounted.305"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %25, label %19, !prof !2

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.base::RefCounted.305", %"class.base::RefCounted.305"* %7, i64 5, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !3

23:                                               ; preds = %19
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %19
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #12
  br label %25

25:                                               ; preds = %24, %12
  %26 = bitcast %"class.blink::CachedMetadata"* %4 to i8*
  tail call void @free(i8* %26) #12
  br label %27

27:                                               ; preds = %25, %6, %1
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %27, %40, %43
  %45 = bitcast %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119WasmStreamingClient16OnModuleCompiledEN2v818CompiledWasmModuleE(%"class.blink::(anonymous namespace)::WasmStreamingClient"*, %"class.v8::CompiledWasmModule"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.v8::OwnedBuffer", align 8
  %5 = alloca %"class.blink::WebURL", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10, !prof !2

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %12, i32 0) #12
  %13 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %10, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %22

22:                                               ; preds = %2, %21
  %23 = call { i8*, i64 } @_ZN2v818CompiledWasmModule15GetWireBytesRefEv(%"class.v8::CompiledWasmModule"* %1) #12
  %24 = extractvalue { i8*, i64 } %23, 1
  %25 = icmp ult i64 %24, 1024
  br i1 %25, label %120, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.v8::OwnedBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"struct.v8::OwnedBuffer", %"struct.v8::OwnedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.v8::OwnedBuffer", %"struct.v8::OwnedBuffer"* %4, i64 0, i32 1
  %30 = call { i8*, i64 } @_ZN2v818CompiledWasmModule9SerializeEv(%"class.v8::CompiledWasmModule"* %1) #12
  %31 = extractvalue { i8*, i64 } %30, 0
  store i8* %31, i8** %28, align 8
  %32 = extractvalue { i8*, i64 } %30, 1
  store i64 %32, i64* %29, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %115, label %34

34:                                               ; preds = %26
  %35 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), align 16
  %36 = and i8 %35, 25
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38, !prof !2

38:                                               ; preds = %34
  %39 = call i64 @_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 168, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i64* dereferenceable(8) %29)
  %40 = load i8*, i8** %28, align 8
  %41 = load i64, i64* %29, align 8
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi i64 [ %32, %34 ], [ %41, %38 ]
  %44 = phi i8* [ %31, %34 ], [ %40, %38 ]
  %45 = call noalias i8* @malloc(i64 80) #12
  %46 = icmp ult i64 %43, 4294967296
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %42
  call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %42
  %49 = bitcast i8* %45 to %"class.blink::CachedMetadata"*
  %50 = trunc i64 %43 to i32
  call void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"* %49, i32 1, i8* %44, i32 %50) #12
  %51 = getelementptr inbounds i8, i8* %45, i64 24
  %52 = bitcast i8* %51 to %"class.mojo_base::BigBuffer"*
  %53 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %52) #12
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %48
  %56 = call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %52) #12
  br label %61

57:                                               ; preds = %48
  %58 = getelementptr inbounds i8, i8* %45, i64 8
  %59 = bitcast i8* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %57, %55
  %62 = phi i8* [ %56, %55 ], [ %60, %57 ]
  %63 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %52) #12
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %52) #12
  %67 = icmp ult i64 %66, 4294967296
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %65
  call void @llvm.trap() #12
  unreachable

69:                                               ; preds = %65
  %70 = trunc i64 %66 to i32
  br label %75

71:                                               ; preds = %61
  %72 = getelementptr inbounds i8, i8* %45, i64 20
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  br label %75

75:                                               ; preds = %69, %71
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ]
  %77 = zext i32 %76 to i64
  %78 = load i64, i64* %29, align 8
  %79 = icmp ugt i64 %78, %77
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %82 = bitcast %"class.blink::WebURL"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %84) #12
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %5, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #12
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmStreamingClient", %"class.blink::(anonymous namespace)::WasmStreamingClient"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::Platform"* %81 to void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)***
  %88 = load void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)**, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)** %88, i64 24
  %90 = load void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)*, void (%"class.blink::Platform"*, i32, %"class.blink::WebURL"*, i64, i8*, i64)** %89, align 8
  call void %90(%"class.blink::Platform"* %81, i32 1, %"class.blink::WebURL"* nonnull dereferenceable(96) %5, i64 %86, i8* %62, i64 %77) #12
  %91 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %5, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %91) #12
  %92 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %5, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %92) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %82) #12
  br label %93

93:                                               ; preds = %75, %80
  %94 = icmp eq i8* %45, null
  br i1 %94, label %113, label %95

95:                                               ; preds = %93
  %96 = bitcast i8* %45 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %96) #12
  %97 = bitcast i8* %45 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %95
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %52) #12
  %101 = getelementptr inbounds i8, i8* %45, i64 8
  %102 = bitcast i8* %101 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %112, label %105, !prof !2

105:                                              ; preds = %100
  %106 = getelementptr inbounds i8, i8* %45, i64 20
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %105
  store i32 0, i32* %107, align 4
  br label %111

111:                                              ; preds = %110, %105
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #12
  br label %112

112:                                              ; preds = %111, %100
  call void @free(i8* nonnull %45) #12
  br label %113

113:                                              ; preds = %93, %95, %112
  %114 = load i8*, i8** %28, align 8
  br label %115

115:                                              ; preds = %113, %26
  %116 = phi i8* [ %114, %113 ], [ %31, %26 ]
  store i8* null, i8** %28, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  call void @_ZdaPv(i8* nonnull %116) #13
  br label %119

119:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  br label %120

120:                                              ; preds = %22, %119
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #12
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #12
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #12
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #12
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %29
}

declare { i8*, i64 } @_ZN2v818CompiledWasmModule15GetWireBytesRefEv(%"class.v8::CompiledWasmModule"*) local_unnamed_addr #1

declare { i8*, i64 } @_ZN2v818CompiledWasmModule9SerializeEv(%"class.v8::CompiledWasmModule"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #12
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #12
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #12
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %21
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"*, i32, i8*, i32) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

declare i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchDataLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchDataLoader"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)** %5, i64 4
  %7 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchDataLoader"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchDataLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchDataLoader"*)***
  %4 = load void (%"class.blink::FetchDataLoader"*)**, void (%"class.blink::FetchDataLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchDataLoader"*)*, void (%"class.blink::FetchDataLoader"*)** %4, align 8
  tail call void %5(%"class.blink::FetchDataLoader"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 3
  %5 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %6 = bitcast %"class.blink::Member.580"* %4 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #12
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %15 = bitcast %"class.blink::Member.250"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #12
  %21 = getelementptr inbounds %"class.blink::Member.250", %"class.blink::Member.250"* %13, i64 0, i32 0, i32 0
  %22 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %21, align 8
  br label %23

23:                                               ; preds = %12, %18
  %24 = phi %"class.blink::BytesConsumer"* [ %1, %12 ], [ %22, %18 ]
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::BytesConsumer"* %24 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %27 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %27, i64 7
  %29 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %28, align 8
  tail call void %29(%"class.blink::BytesConsumer"* %24, %"class.blink::BytesConsumer::Client"* %25) #12
  tail call void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #12
  tail call fastcc void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming16AbortCompilationEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.250"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv to {}*)) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.580"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #12, !range !4
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = bitcast %"struct.blink::GCInfo"** %76 to {}***
  %78 = load {}**, {}*** %77, align 8
  %79 = load {}*, {}** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, {}* %79) #12
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 5
  %86 = bitcast %"class.blink::Member.244"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %90, i8* nonnull %90, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv to {}*)) #12
  br label %95

95:                                               ; preds = %84, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = bitcast i8** %2 to i8*
  %6 = bitcast i64* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 4, i32 0
  br label %9

9:                                                ; preds = %63, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store i8* null, i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i64 0, i64* %3, align 8
  %10 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %7, align 8
  %11 = bitcast %"class.blink::BytesConsumer"* %10 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %12 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %12, i64 2
  %14 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %13, align 8
  %15 = call i32 %14(%"class.blink::BytesConsumer"* %10, i8** nonnull %2, i64* nonnull %3) #12
  switch i32 %15, label %31 [
    i32 1, label %64
    i32 0, label %16
  ]

16:                                               ; preds = %9
  %17 = load i64, i64* %3, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = load %"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming"** %8, align 8
  %21 = load i8*, i8** %2, align 8
  call void @_ZN2v813WasmStreaming15OnBytesReceivedEPKhm(%"class.v8::WasmStreaming"* %20, i8* %21, i64 %17) #12
  %22 = load i64, i64* %3, align 8
  br label %23

23:                                               ; preds = %16, %19
  %24 = phi i64 [ 0, %16 ], [ %22, %19 ]
  %25 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %7, align 8
  %26 = bitcast %"class.blink::BytesConsumer"* %25 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %27 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %27, i64 3
  %29 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %28, align 8
  %30 = call i32 %29(%"class.blink::BytesConsumer"* %25, i64 %24) #12
  br label %31

31:                                               ; preds = %9, %23
  %32 = phi i32 [ %30, %23 ], [ %15, %9 ]
  switch i32 %32, label %63 [
    i32 1, label %64
    i32 3, label %62
    i32 2, label %33
  ]

33:                                               ; preds = %31
  %34 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 5, i32 0, i32 0
  %37 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %36, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %38, i64 0, i32 0
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %40, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %39, %"class.v8::Isolate"* %41) #12
  %42 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.v8::Context"*, %"class.v8::Context"** %42, align 8
  %44 = icmp eq %"class.v8::Context"* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %33
  %46 = bitcast %"class.blink::ScriptState"* %38 to %"class.v8::internal::Isolate"**
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %46, align 8
  %48 = bitcast %"class.v8::Context"* %43 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %47, i64 %49) #12
  %51 = bitcast i64* %50 to %"class.v8::Context"*
  br label %52

52:                                               ; preds = %33, %45
  %53 = phi %"class.v8::Context"* [ %51, %45 ], [ null, %33 ]
  store %"class.v8::Context"* %53, %"class.v8::Context"** %35, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %53) #12
  %54 = load %"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming"** %8, align 8
  call void @_ZN2v813WasmStreaming6FinishEv(%"class.v8::WasmStreaming"* %54) #12
  %55 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %55) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #12
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %56, align 8
  %58 = bitcast %"class.blink::FetchDataLoader::Client"* %57 to void (%"class.blink::FetchDataLoader::Client"*)***
  %59 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %59, i64 9
  %61 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %60, align 8
  call void %61(%"class.blink::FetchDataLoader::Client"* %57) #12
  br label %64

62:                                               ; preds = %31
  call fastcc void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming16AbortCompilationEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0)
  br label %64

63:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  br label %9

64:                                               ; preds = %31, %9, %62, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i64 28) #12
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 -1, i32 5
  %4 = bitcast %"class.blink::Member.244"* %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*
  tail call void @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 -1, i32 5
  %3 = bitcast %"class.blink::Member.244"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.244", %"class.blink::Member.244"* %2, i64 5
  %5 = bitcast %"class.blink::Member.244"* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #12
  br label %18

18:                                               ; preds = %1, %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 -1, i32 5
  %3 = bitcast %"class.blink::Member.244"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreamingE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.244", %"class.blink::Member.244"* %2, i64 5
  %5 = bitcast %"class.blink::Member.244"* %4 to %"class.std::__1::__shared_weak_count"**
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %10 = atomicrmw add i64* %9, i64 -1 acq_rel
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %15 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %15, i64 2
  %17 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, align 8
  tail call void %17(%"class.std::__1::__shared_count"* %13) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #12
  br label %18

18:                                               ; preds = %1, %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 -1, i32 5
  %3 = bitcast %"class.blink::Member.244"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*
  tail call void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i64 28) #12
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming16AbortCompilationEv(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ScriptState::Scope", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %10, align 8
  %12 = icmp eq %"class.blink::V8PerContextData"* %11, null
  br i1 %12, label %56, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptState::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %2, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 0
  %18 = bitcast %"class.blink::ScriptState::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %16, %"class.v8::Isolate"* %19) #12
  %20 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %21 = icmp eq %"class.v8::Context"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.blink::ScriptState"* %5 to %"class.v8::internal::Isolate"**
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %25 = bitcast %"class.v8::Context"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %24, i64 %26) #12
  %28 = bitcast i64* %27 to %"class.v8::Context"*
  br label %29

29:                                               ; preds = %13, %22
  %30 = phi %"class.v8::Context"* [ %28, %22 ], [ null, %13 ]
  store %"class.v8::Context"* %30, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %30) #12
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 4, i32 0
  %32 = load %"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming"** %31, align 8
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i64 30) #12
  %37 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %35, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  call void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"* %32, %"class.v8::Value"* %37) #12
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %54

54:                                               ; preds = %29, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  %55 = load %"class.v8::Context"*, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %55) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  br label %59

56:                                               ; preds = %9, %1
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %0, i64 0, i32 4, i32 0
  %58 = load %"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming"** %57, align 8
  tail call void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"* %58, %"class.v8::Value"* null) #12
  br label %59

59:                                               ; preds = %56, %54
  ret void
}

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN2v813WasmStreaming15OnBytesReceivedEPKhm(%"class.v8::WasmStreaming"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN2v813WasmStreaming6FinishEv(%"class.v8::WasmStreaming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_131FetchDataLoaderForWasmStreamingEE5TraceEPNS_7VisitorEPKv to {}*)) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE8FinalizeEPv(i8* nocapture) #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_120WasmDataLoaderClientEE7GetNameEPKv(i8* nocapture readnone) #10 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_120WasmDataLoaderClient5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::WasmDataLoaderClient"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmDataLoaderClient", %"class.blink::(anonymous namespace)::WasmDataLoaderClient"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.584"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_131FetchDataLoaderForWasmStreamingEE5TraceEPNS_7VisitorEPKv to {}*)) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_131FetchDataLoaderForWasmStreamingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*
  tail call void @_ZNK5blink12_GLOBAL__N_131FetchDataLoaderForWasmStreaming5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClientD0Ev(%"class.blink::(anonymous namespace)::WasmDataLoaderClient"* nocapture) unnamed_addr #11 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #12
  %9 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %9) #12
  br label %10

10:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE(%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE(%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.748"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedDataPipeEv(%"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient30DidFetchDataLoadedCustomFormatEv(%"class.blink::(anonymous namespace)::WasmDataLoaderClient"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient22DidFetchDataLoadFailedEv(%"class.blink::(anonymous namespace)::WasmDataLoaderClient"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120WasmDataLoaderClient5AbortEv(%"class.blink::(anonymous namespace)::WasmDataLoaderClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.blink::ScriptState::Scope", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::WasmDataLoaderClient", %"class.blink::(anonymous namespace)::WasmDataLoaderClient"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"*, %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"** %4, align 8
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #12
  store i32 20, i32* %2, align 4
  %7 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #12
  %8 = bitcast %"class.blink::ScriptState::Scope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %3, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %5, i64 0, i32 5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false) #12
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 0
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %12, %"class.v8::Isolate"* %14) #12
  %15 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.v8::Context"*, %"class.v8::Context"** %15, align 8
  %17 = icmp eq %"class.v8::Context"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.blink::ScriptState"* %11 to %"class.v8::internal::Isolate"**
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %21 = bitcast %"class.v8::Context"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %22) #12
  %24 = bitcast i64* %23 to %"class.v8::Context"*
  br label %25

25:                                               ; preds = %18, %1
  %26 = phi %"class.v8::Context"* [ %24, %18 ], [ null, %1 ]
  store %"class.v8::Context"* %26, %"class.v8::Context"** %9, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #12
  %27 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #12
  %28 = load i32, i32* %27, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %7, i64 0, i32 0
  %30 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  %33 = icmp eq %"class.v8::Context"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %25
  %35 = bitcast %"class.blink::ScriptState"* %30 to %"class.v8::internal::Isolate"**
  %36 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %35, align 8
  %37 = bitcast %"class.v8::Context"* %32 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %36, i64 %38) #12
  %40 = bitcast i64* %39 to %"class.v8::Context"*
  br label %41

41:                                               ; preds = %34, %25
  %42 = phi %"class.v8::Context"* [ %40, %34 ], [ null, %25 ]
  %43 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %42) #12
  %44 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %45 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %44, i64 0, i32 0
  %46 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %45, align 8
  %47 = icmp eq %"class.blink::DOMException"* %7, null
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %41
  %49 = ptrtoint %"class.v8::Isolate"* %46 to i64
  %50 = add i64 %49, 176
  br label %67

51:                                               ; preds = %41
  %52 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %29, %"class.v8::Isolate"* %46) #12
  %53 = ptrtoint %"class.v8::Object"* %52 to i64
  %54 = icmp eq %"class.v8::Object"* %52, null
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %43) #12
  %57 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %56) #12
  %58 = bitcast %"class.blink::DOMException"* %7 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %59 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, i64 7
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %60, align 8
  %62 = call %"class.v8::Value"* %61(%"class.blink::ScriptWrappable"* nonnull %29, %"class.blink::ScriptState"* %57) #12
  %63 = icmp eq %"class.v8::Value"* %62, null
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %65

65:                                               ; preds = %64, %55
  %66 = ptrtoint %"class.v8::Value"* %62 to i64
  br label %67

67:                                               ; preds = %48, %51, %65
  %68 = phi i64 [ %50, %48 ], [ %66, %65 ], [ %53, %51 ]
  %69 = inttoptr i64 %68 to %"class.v8::Value"*
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming", %"class.blink::(anonymous namespace)::FetchDataLoaderForWasmStreaming"* %5, i64 0, i32 4, i32 0
  %71 = load %"class.v8::WasmStreaming"*, %"class.v8::WasmStreaming"** %70, align 8
  call void @_ZN2v813WasmStreaming5AbortENS_10MaybeLocalINS_5ValueEEE(%"class.v8::WasmStreaming"* %71, %"class.v8::Value"* %69) #12
  store i32 %28, i32* %27, align 4
  %72 = load %"class.v8::Context"*, %"class.v8::Context"** %9, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %72) #12
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6ClientD2Ev(%"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %5 = bitcast i8* %4 to %"class.blink::DOMException"*
  %6 = load i32, i32* %0, align 4
  %7 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %5, i32 %6, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #12
  br label %26

26:                                               ; preds = %1, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %26, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %43 = getelementptr inbounds i8, i8* %4, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  ret %"class.blink::DOMException"* %5
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference.9"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #12
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #12
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #12
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference.9"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #12
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #12
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference.9"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #12
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i32 24, i32 33}
!5 = !{i8 0, i8 2}
