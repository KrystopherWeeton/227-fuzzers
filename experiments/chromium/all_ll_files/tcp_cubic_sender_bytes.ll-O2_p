; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/tcp_cubic_sender_bytes.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/tcp_cubic_sender_bytes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::TcpCubicSenderBytes" = type { %"class.quic::SendAlgorithmInterface", %"class.quic::HybridSlowStart", %"class.quic::PrrSender", %"class.quic::RttStats"*, %"struct.quic::QuicConnectionStats"*, i8, i32, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::CubicBytes", i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::HybridSlowStart" = type { i8, i32, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", i32, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::PrrSender" = type { i64, i64, i64, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.quic::CubicBytes" = type { %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime", i64, i64, i64, i64, i32, i64 }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.1", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.8", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.15", %"class.absl::optional.15", %"class.absl::optional.15", %"class.absl::optional.15", %"class.absl::optional.15", %"class.absl::optional.15", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.6, i32 }
%union.anon.6 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.7 }
%union.anon.7 = type { [4 x i32] }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array" }
%"class.quic::QuicConnectionId" = type { %union.anon.13 }
%union.anon.13 = type { %struct.anon.14 }
%struct.anon.14 = type { i8, i8* }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array", %"struct.std::__1::array", i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"struct.quic::SendAlgorithmInterface::NetworkParams" = type <{ %"class.quic::QuicBandwidth", %"class.quic::QuicTime::Delta", i32, i8, [3 x i8] }>
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.28" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.35" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.quic::LostPacket"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.43 }
%union.anon.43 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.44 }
%struct.anon.44 = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4quic19TcpCubicSenderBytes22ApplyConnectionOptionsERKNSt3__16vectorIjNS1_9allocatorIjEEEE = comdat any

$_ZN4quic19TcpCubicSenderBytes16OnPacketNeuteredENS_16QuicPacketNumberE = comdat any

$_ZNK4quic19TcpCubicSenderBytes23PopulateConnectionStatsEPNS_19QuicConnectionStatsE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN4quic19TcpCubicSenderBytesE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*)* @_ZN4quic19TcpCubicSenderBytesD2Ev to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*)* @_ZN4quic19TcpCubicSenderBytesD0Ev to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicConfig"*, i8)* @_ZN4quic19TcpCubicSenderBytes13SetFromConfigERKNS_10QuicConfigENS_11PerspectiveE to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, %"class.std::__1::vector"*)* @_ZN4quic19TcpCubicSenderBytes22ApplyConnectionOptionsERKNSt3__16vectorIjNS1_9allocatorIjEEEE to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i64)* @_ZN4quic19TcpCubicSenderBytes35SetInitialCongestionWindowInPacketsEm to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i1, i64, i64, %"class.std::__1::vector.26"*, %"class.std::__1::vector.33"*)* @_ZN4quic19TcpCubicSenderBytes17OnCongestionEventEbmNS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEE to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i64, i64, i64, i64, i8)* @_ZN4quic19TcpCubicSenderBytes12OnPacketSentENS_8QuicTimeEmNS_16QuicPacketNumberEmNS_22HasRetransmittableDataE to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i64)* @_ZN4quic19TcpCubicSenderBytes16OnPacketNeuteredENS_16QuicPacketNumberE to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i1)* @_ZN4quic19TcpCubicSenderBytes23OnRetransmissionTimeoutEb to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*)* @_ZN4quic19TcpCubicSenderBytes21OnConnectionMigrationEv to i8*), i8* bitcast (i1 (%"class.quic::TcpCubicSenderBytes"*, i64)* @_ZN4quic19TcpCubicSenderBytes7CanSendEm to i8*), i8* bitcast (i64 (%"class.quic::TcpCubicSenderBytes"*, i64)* @_ZNK4quic19TcpCubicSenderBytes10PacingRateEm to i8*), i8* bitcast (i64 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes17BandwidthEstimateEv to i8*), i8* bitcast (i64 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes19GetCongestionWindowEv to i8*), i8* bitcast (i1 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes11InSlowStartEv to i8*), i8* bitcast (i1 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes10InRecoveryEv to i8*), i8* bitcast (i1 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes23ShouldSendProbingPacketEv to i8*), i8* bitcast (i64 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes21GetSlowStartThresholdEv to i8*), i8* bitcast (i32 (%"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes24GetCongestionControlTypeEv to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, %"struct.quic::SendAlgorithmInterface::NetworkParams"*)* @_ZN4quic19TcpCubicSenderBytes23AdjustNetworkParametersERKNS_22SendAlgorithmInterface13NetworkParamsE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.quic::TcpCubicSenderBytes"*)* @_ZNK4quic19TcpCubicSenderBytes13GetDebugStateEv to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, i64)* @_ZN4quic19TcpCubicSenderBytes20OnApplicationLimitedEm to i8*), i8* bitcast (void (%"class.quic::TcpCubicSenderBytes"*, %"struct.quic::QuicConnectionStats"*)* @_ZNK4quic19TcpCubicSenderBytes23PopulateConnectionStatsEPNS_19QuicConnectionStatsE to i8*)] }, align 8
@FLAGS_quic_reloadable_flag_quic_unified_iw_options = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [88 x i8] c"../../net/third_party/quiche/src/quic/core/congestion_control/tcp_cubic_sender_bytes.cc\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Never increase the CWND during recovery.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic19TcpCubicSenderBytesC1EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE = hidden unnamed_addr alias void (%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicClock"*, %"class.quic::RttStats"*, i1, i64, i64, %"struct.quic::QuicConnectionStats"*), void (%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicClock"*, %"class.quic::RttStats"*, i1, i64, i64, %"struct.quic::QuicConnectionStats"*)* @_ZN4quic19TcpCubicSenderBytesC2EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE
@_ZN4quic19TcpCubicSenderBytesD1Ev = hidden unnamed_addr alias void (%"class.quic::TcpCubicSenderBytes"*), void (%"class.quic::TcpCubicSenderBytes"*)* @_ZN4quic19TcpCubicSenderBytesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytesC2EPKNS_9QuicClockEPKNS_8RttStatsEbmmPNS_19QuicConnectionStatsE(%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicClock"*, %"class.quic::RttStats"*, i1 zeroext, i64, i64, %"struct.quic::QuicConnectionStats"*) unnamed_addr #0 align 2 {
  %8 = zext i1 %3 to i8
  %9 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN4quic19TcpCubicSenderBytesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  tail call void @_ZN4quic15HybridSlowStartC1Ev(%"class.quic::HybridSlowStart"* %10) #10
  %11 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  tail call void @_ZN4quic9PrrSenderC1Ev(%"class.quic::PrrSender"* %11) #10
  %12 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 3
  store %"class.quic::RttStats"* %2, %"class.quic::RttStats"** %12, align 8
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 4
  store %"struct.quic::QuicConnectionStats"* %6, %"struct.quic::QuicConnectionStats"** %13, align 8
  %14 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 5
  store i8 %8, i8* %14, align 8
  %15 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 6
  store i32 2, i32* %15, align 4
  %16 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 7, i32 0
  %17 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 10
  %18 = bitcast i64* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -1, i64 24, i1 false)
  %19 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  %20 = bitcast i8* %17 to i32*
  store i32 0, i32* %20, align 8
  tail call void @_ZN4quic10CubicBytesC1EPKNS_9QuicClockE(%"class.quic::CubicBytes"* %19, %"class.quic::QuicClock"* %1) #10
  %21 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 15
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %23 = mul i64 %4, 1460
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  store i64 2920, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 18
  %26 = mul i64 %5, 1460
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 20
  store i64 %23, i64* %28, align 8
  %29 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 21
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 22
  store i64 2920, i64* %30, align 8
  ret void
}

declare void @_ZN4quic15HybridSlowStartC1Ev(%"class.quic::HybridSlowStart"*) unnamed_addr #1

declare void @_ZN4quic9PrrSenderC1Ev(%"class.quic::PrrSender"*) unnamed_addr #1

declare void @_ZN4quic10CubicBytesC1EPKNS_9QuicClockE(%"class.quic::CubicBytes"*, %"class.quic::QuicClock"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytesD2Ev(%"class.quic::TcpCubicSenderBytes"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytesD0Ev(%"class.quic::TcpCubicSenderBytes"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes13SetFromConfigERKNS_10QuicConfigENS_11PerspectiveE(%"class.quic::TcpCubicSenderBytes"*, %"class.quic::QuicConfig"* dereferenceable(1112), i8 zeroext) unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %2, 0
  br i1 %4, label %5, label %77

5:                                                ; preds = %3
  %6 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_unified_iw_options, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %55

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %9, label %10, label %18

10:                                               ; preds = %8
  %11 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %12 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %11, i32 858806089) #10
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to void (%"class.quic::TcpCubicSenderBytes"*, i64)***
  %15 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)**, void (%"class.quic::TcpCubicSenderBytes"*, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %15, i64 4
  %17 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %16, align 8
  tail call void %17(%"class.quic::TcpCubicSenderBytes"* %0, i64 3) #10
  br label %18

18:                                               ; preds = %13, %10, %8
  %19 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %19, label %20, label %28

20:                                               ; preds = %18
  %21 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %22 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %21, i32 808539977) #10
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to void (%"class.quic::TcpCubicSenderBytes"*, i64)***
  %25 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)**, void (%"class.quic::TcpCubicSenderBytes"*, i64)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %25, i64 4
  %27 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %26, align 8
  tail call void %27(%"class.quic::TcpCubicSenderBytes"* %0, i64 10) #10
  br label %28

28:                                               ; preds = %23, %20, %18
  %29 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %29, label %30, label %38

30:                                               ; preds = %28
  %31 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %32 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %31, i32 808605513) #10
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to void (%"class.quic::TcpCubicSenderBytes"*, i64)***
  %35 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)**, void (%"class.quic::TcpCubicSenderBytes"*, i64)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %35, i64 4
  %37 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %36, align 8
  tail call void %37(%"class.quic::TcpCubicSenderBytes"* %0, i64 20) #10
  br label %38

38:                                               ; preds = %33, %30, %28
  %39 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %39, label %40, label %48

40:                                               ; preds = %38
  %41 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %42 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %41, i32 808802121) #10
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  %44 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to void (%"class.quic::TcpCubicSenderBytes"*, i64)***
  %45 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)**, void (%"class.quic::TcpCubicSenderBytes"*, i64)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %45, i64 4
  %47 = load void (%"class.quic::TcpCubicSenderBytes"*, i64)*, void (%"class.quic::TcpCubicSenderBytes"*, i64)** %46, align 8
  tail call void %47(%"class.quic::TcpCubicSenderBytes"* %0, i64 50) #10
  br label %48

48:                                               ; preds = %43, %40, %38
  %49 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %52 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %51, i32 827214157) #10
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  store i64 1460, i64* %54, align 8
  br label %55

55:                                               ; preds = %5, %48, %50, %53
  %56 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %56, label %57, label %63

57:                                               ; preds = %55
  %58 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %59 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %58, i32 877545805) #10
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 10
  store i8 1, i8* %61, align 8
  %62 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  store i64 1460, i64* %62, align 8
  br label %63

63:                                               ; preds = %60, %57, %55
  %64 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %64, label %65, label %70

65:                                               ; preds = %63
  %66 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %67 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %66, i32 1380733779) #10
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 12
  store i8 1, i8* %69, align 2
  br label %70

70:                                               ; preds = %68, %65, %63
  %71 = tail call zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  br i1 %71, label %72, label %77

72:                                               ; preds = %70
  %73 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"* %1) #10
  %74 = tail call zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24) %73, i32 1381126222) #10
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  store i8 1, i8* %76, align 1
  br label %77

77:                                               ; preds = %70, %72, %75, %3
  ret void
}

declare zeroext i1 @_ZNK4quic10QuicConfig28HasReceivedConnectionOptionsEv(%"class.quic::QuicConfig"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic15ContainsQuicTagERKNSt3__16vectorIjNS0_9allocatorIjEEEEj(%"class.std::__1::vector"* dereferenceable(24), i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK4quic10QuicConfig25ReceivedConnectionOptionsEv(%"class.quic::QuicConfig"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic19TcpCubicSenderBytes31SetMinCongestionWindowInPacketsEm(%"class.quic::TcpCubicSenderBytes"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = mul i64 %1, 1460
  %4 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes23AdjustNetworkParametersERKNS_22SendAlgorithmInterface13NetworkParamsE(%"class.quic::TcpCubicSenderBytes"* nocapture, %"struct.quic::SendAlgorithmInterface::NetworkParams"* nocapture readonly dereferenceable(24)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.quic::SendAlgorithmInterface::NetworkParams", %"struct.quic::SendAlgorithmInterface::NetworkParams"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.quic::SendAlgorithmInterface::NetworkParams", %"struct.quic::SendAlgorithmInterface::NetworkParams"* %1, i64 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = mul nsw i64 %8, %4
  %12 = sdiv i64 %11, 8
  %13 = udiv i64 %12, 1000000
  %14 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  %15 = icmp ugt i64 %12, 292000999999
  %16 = load i64, i64* %14, align 8
  %17 = select i1 %15, i64 292000, i64 %13
  %18 = icmp ult i64 %16, %17
  %19 = select i1 %18, i64 %17, i64 %16
  %20 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %2, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes38SetCongestionWindowFromBandwidthAndRttENS_13QuicBandwidthENS_8QuicTime5DeltaE(%"class.quic::TcpCubicSenderBytes"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = mul nsw i64 %2, %1
  %5 = sdiv i64 %4, 8
  %6 = udiv i64 %5, 1000000
  %7 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  %8 = icmp ugt i64 %5, 292000999999
  %9 = load i64, i64* %7, align 8
  %10 = select i1 %8, i64 292000, i64 %6
  %11 = icmp ult i64 %9, %10
  %12 = select i1 %11, i64 %10, i64 %9
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  store i64 %12, i64* %13, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK4quic19TcpCubicSenderBytes8RenoBetaEv(%"class.quic::TcpCubicSenderBytes"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = uitofp i32 %4 to float
  %6 = fadd float %5, 0x3FE6666660000000
  %7 = uitofp i32 %3 to float
  %8 = fdiv float %6, %7
  ret float %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes17OnCongestionEventEbmNS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEE(%"class.quic::TcpCubicSenderBytes"*, i1 zeroext, i64, i64, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.33"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  br i1 %1, label %7, label %32

7:                                                ; preds = %6
  %8 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %9 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %9, i64 14
  %11 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %12, label %13, label %32

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 3
  %16 = load %"class.quic::RttStats"*, %"class.quic::RttStats"** %15, align 8
  %17 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %16, i64 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %16, i64 0, i32 1, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %22 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %22, i64 13
  %24 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %23, align 8
  %25 = tail call i64 %24(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %26 = udiv i64 %25, 1460
  %27 = tail call zeroext i1 @_ZN4quic15HybridSlowStart19ShouldExitSlowStartENS_8QuicTime5DeltaES2_m(%"class.quic::HybridSlowStart"* %14, i64 %18, i64 %20, i64 %26) #10
  br i1 %27, label %28, label %32

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %30, i64* %31, align 8
  br label %32

32:                                               ; preds = %6, %7, %28, %13
  %33 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %5, i64 0, i32 0, i32 0
  %34 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %5, i64 0, i32 0, i32 1
  %36 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %35, align 8
  %37 = icmp eq %"struct.quic::LostPacket"* %34, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %50, %32
  %39 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 0
  %40 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %42 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %41, align 8
  %43 = icmp eq %"struct.quic::AckedPacket"* %40, %42
  br i1 %43, label %59, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 8
  %46 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %47 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  %49 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  br label %60

50:                                               ; preds = %32, %50
  %51 = phi %"struct.quic::LostPacket"* [ %57, %50 ], [ %34, %32 ]
  %52 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %51, i64 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %51, i64 0, i32 1
  %55 = load i16, i16* %54, align 8
  %56 = zext i16 %55 to i64
  tail call void @_ZN4quic19TcpCubicSenderBytes12OnPacketLostENS_16QuicPacketNumberEmm(%"class.quic::TcpCubicSenderBytes"* %0, i64 %53, i64 %56, i64 %2)
  %57 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %51, i64 1
  %58 = icmp eq %"struct.quic::LostPacket"* %57, %36
  br i1 %58, label %38, label %50

59:                                               ; preds = %81, %38
  ret void

60:                                               ; preds = %44, %81
  %61 = phi %"struct.quic::AckedPacket"* [ %40, %44 ], [ %82, %81 ]
  %62 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %61, i64 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %61, i64 0, i32 1
  %65 = load i16, i16* %64, align 8
  %66 = zext i16 %65 to i64
  tail call void @_ZN4quic16QuicPacketNumber9UpdateMaxES0_(%"class.quic::QuicPacketNumber"* %45, i64 %63) #10
  %67 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %46, align 8
  %68 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %67, i64 15
  %69 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %70, label %71, label %75

71:                                               ; preds = %60
  %72 = load i8, i8* %48, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %71
  tail call void @_ZN4quic9PrrSender13OnPacketAckedEm(%"class.quic::PrrSender"* %49, i64 %66) #10
  br label %81

75:                                               ; preds = %60
  tail call void @_ZN4quic19TcpCubicSenderBytes17MaybeIncreaseCwndENS_16QuicPacketNumberEmmNS_8QuicTimeE(%"class.quic::TcpCubicSenderBytes"* %0, i64 undef, i64 %66, i64 %2, i64 %3) #10
  %76 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %46, align 8
  %77 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %76, i64 14
  %78 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %79, label %80, label %81

80:                                               ; preds = %75
  tail call void @_ZN4quic15HybridSlowStart13OnPacketAckedENS_16QuicPacketNumberE(%"class.quic::HybridSlowStart"* %47, i64 %63) #10
  br label %81

81:                                               ; preds = %71, %74, %75, %80
  %82 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %61, i64 1
  %83 = icmp eq %"struct.quic::AckedPacket"* %82, %42
  br i1 %83, label %59, label %60
}

declare zeroext i1 @_ZN4quic15HybridSlowStart19ShouldExitSlowStartENS_8QuicTime5DeltaES2_m(%"class.quic::HybridSlowStart"*, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes13ExitSlowstartEv(%"class.quic::TcpCubicSenderBytes"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes12OnPacketLostENS_16QuicPacketNumberEmm(%"class.quic::TcpCubicSenderBytes"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9
  %6 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %5) #10
  br i1 %6, label %7, label %37

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %37, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 11
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %122, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 4
  %17 = load %"struct.quic::QuicConnectionStats"*, %"struct.quic::QuicConnectionStats"** %16, align 8
  %18 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %17, i64 0, i32 19
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = load %"struct.quic::QuicConnectionStats"*, %"struct.quic::QuicConnectionStats"** %16, align 8
  %22 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %21, i64 0, i32 20
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %2
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 12
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %122, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %2
  %32 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 22
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  %35 = select i1 %34, i64 %33, i64 %31
  store i64 %35, i64* %29, align 8
  %36 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %35, i64* %36, align 8
  br label %122

37:                                               ; preds = %7, %4
  %38 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 4
  %39 = load %"struct.quic::QuicConnectionStats"*, %"struct.quic::QuicConnectionStats"** %38, align 8
  %40 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %39, i64 0, i32 44
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, 1
  store i32 %42, i32* %40, align 8
  %43 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %44 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %44, i64 14
  %46 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %48 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 11
  %49 = zext i1 %47 to i8
  store i8 %49, i8* %48, align 1
  %50 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %43, align 8
  %51 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %50, i64 14
  %52 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %53, label %54, label %59

54:                                               ; preds = %37
  %55 = load %"struct.quic::QuicConnectionStats"*, %"struct.quic::QuicConnectionStats"** %38, align 8
  %56 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %55, i64 0, i32 19
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %56, align 8
  br label %59

59:                                               ; preds = %54, %37
  %60 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  tail call void @_ZN4quic9PrrSender12OnPacketLostEm(%"class.quic::PrrSender"* %64, i64 %3) #10
  br label %65

65:                                               ; preds = %59, %63
  %66 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 12
  %67 = load i8, i8* %66, align 2, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %86, label %69

69:                                               ; preds = %65
  %70 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %43, align 8
  %71 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %70, i64 14
  %72 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 20
  %78 = load i64, i64* %77, align 8
  %79 = shl i64 %78, 1
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %84, label %81

81:                                               ; preds = %74
  %82 = lshr i64 %76, 1
  %83 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 22
  store i64 %82, i64* %83, align 8
  br label %84

84:                                               ; preds = %74, %81
  %85 = add i64 %76, -1460
  store i64 %85, i64* %75, align 8
  br label %108

86:                                               ; preds = %65, %69
  %87 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 5
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %92 = load i64, i64* %91, align 8
  %93 = uitofp i64 %92 to float
  %94 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  %97 = uitofp i32 %96 to float
  %98 = fadd float %97, 0x3FE6666660000000
  %99 = uitofp i32 %95 to float
  %100 = fdiv float %98, %99
  %101 = fmul float %100, %93
  %102 = fptoui float %101 to i64
  store i64 %102, i64* %91, align 8
  br label %108

103:                                              ; preds = %86
  %104 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  %105 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %106 = load i64, i64* %105, align 8
  %107 = tail call i64 @_ZN4quic10CubicBytes31CongestionWindowAfterPacketLossEm(%"class.quic::CubicBytes"* %104, i64 %106) #10
  store i64 %107, i64* %105, align 8
  br label %108

108:                                              ; preds = %90, %103, %84
  %109 = phi i64 [ %102, %90 ], [ %107, %103 ], [ %85, %84 ]
  %110 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult i64 %109, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  store i64 %111, i64* %114, align 8
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i64 [ %111, %113 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 7, i32 0
  %119 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %5, i64 0, i32 0
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 15
  store i64 0, i64* %121, align 8
  br label %122

122:                                              ; preds = %15, %11, %28, %115
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes13OnPacketAckedENS_16QuicPacketNumberEmmNS_8QuicTimeE(%"class.quic::TcpCubicSenderBytes"*, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 8
  tail call void @_ZN4quic16QuicPacketNumber9UpdateMaxES0_(%"class.quic::QuicPacketNumber"* %6, i64 %1) #10
  %7 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %8 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %8, i64 15
  %10 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  tail call void @_ZN4quic9PrrSender13OnPacketAckedEm(%"class.quic::PrrSender"* %17, i64 %2) #10
  br label %25

18:                                               ; preds = %5
  tail call void @_ZN4quic19TcpCubicSenderBytes17MaybeIncreaseCwndENS_16QuicPacketNumberEmmNS_8QuicTimeE(%"class.quic::TcpCubicSenderBytes"* %0, i64 undef, i64 %2, i64 %3, i64 %4)
  %19 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %7, align 8
  %20 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %19, i64 14
  %21 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  tail call void @_ZN4quic15HybridSlowStart13OnPacketAckedENS_16QuicPacketNumberE(%"class.quic::HybridSlowStart"* %24, i64 %1) #10
  br label %25

25:                                               ; preds = %12, %16, %23, %18
  ret void
}

declare void @_ZN4quic16QuicPacketNumber9UpdateMaxES0_(%"class.quic::QuicPacketNumber"*, i64) local_unnamed_addr #1

declare void @_ZN4quic9PrrSender13OnPacketAckedEm(%"class.quic::PrrSender"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes17MaybeIncreaseCwndENS_16QuicPacketNumberEmmNS_8QuicTimeE(%"class.quic::TcpCubicSenderBytes"*, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %10 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %10, i64 15
  %12 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %15) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i32 364, i32 2) #10
  %16 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i64 40) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %15) #10
  br label %19

19:                                               ; preds = %8, %5, %14
  %20 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %21 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %21, i64 13
  %23 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %22, align 8
  %24 = call i64 %23(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %25 = icmp ugt i64 %24, %3
  br i1 %25, label %26, label %40

26:                                               ; preds = %19
  %27 = sub i64 %24, %3
  %28 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %29 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %29, i64 14
  %31 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %30, align 8
  %32 = call zeroext i1 %31(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %33 = lshr i64 %24, 1
  %34 = icmp ult i64 %33, %3
  %35 = and i1 %34, %32
  %36 = icmp ult i64 %27, 4381
  %37 = or i1 %36, %35
  br i1 %37, label %40, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  call void @_ZN4quic10CubicBytes20OnApplicationLimitedEv(%"class.quic::CubicBytes"* %39) #10
  br label %83

40:                                               ; preds = %19, %26
  %41 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 18
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %83

46:                                               ; preds = %40
  %47 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %48 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %48, i64 14
  %50 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %49, align 8
  %51 = call zeroext i1 %50(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = load i64, i64* %41, align 8
  %54 = add i64 %53, 1460
  store i64 %54, i64* %41, align 8
  br label %83

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 5
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 15
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 6
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = mul i64 %62, %65
  %67 = load i64, i64* %41, align 8
  %68 = udiv i64 %67, 1460
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %83, label %70

70:                                               ; preds = %59
  %71 = add i64 %67, 1460
  store i64 %71, i64* %41, align 8
  store i64 0, i64* %60, align 8
  br label %83

72:                                               ; preds = %55
  %73 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  %74 = load i64, i64* %41, align 8
  %75 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 3
  %76 = load %"class.quic::RttStats"*, %"class.quic::RttStats"** %75, align 8
  %77 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %76, i64 0, i32 1, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = call i64 @_ZN4quic10CubicBytes24CongestionWindowAfterAckEmmNS_8QuicTime5DeltaES1_(%"class.quic::CubicBytes"* %73, i64 %2, i64 %74, i64 %78, i64 %4) #10
  %80 = load i64, i64* %43, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  store i64 %82, i64* %41, align 8
  br label %83

83:                                               ; preds = %59, %40, %70, %38, %52, %72
  ret void
}

declare void @_ZN4quic15HybridSlowStart13OnPacketAckedENS_16QuicPacketNumberE(%"class.quic::HybridSlowStart"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes12OnPacketSentENS_8QuicTimeEmNS_16QuicPacketNumberEmNS_22HasRetransmittableDataE(%"class.quic::TcpCubicSenderBytes"*, i64, i64, i64, i64, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %8 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %8, i64 14
  %10 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 4
  %14 = load %"struct.quic::QuicConnectionStats"*, %"struct.quic::QuicConnectionStats"** %13, align 8
  %15 = getelementptr inbounds %"struct.quic::QuicConnectionStats", %"struct.quic::QuicConnectionStats"* %14, i64 0, i32 17
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %12, %6
  %19 = icmp eq i8 %5, 1
  br i1 %19, label %20, label %30

20:                                               ; preds = %18
  %21 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %7, align 8
  %22 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %21, i64 15
  %23 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  tail call void @_ZN4quic9PrrSender12OnPacketSentEm(%"class.quic::PrrSender"* %26, i64 %4) #10
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 7, i32 0
  store i64 %3, i64* %28, align 8
  %29 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  tail call void @_ZN4quic15HybridSlowStart12OnPacketSentENS_16QuicPacketNumberE(%"class.quic::HybridSlowStart"* %29, i64 %3) #10
  br label %30

30:                                               ; preds = %18, %27
  ret void
}

declare void @_ZN4quic9PrrSender12OnPacketSentEm(%"class.quic::PrrSender"*, i64) local_unnamed_addr #1

declare void @_ZN4quic15HybridSlowStart12OnPacketSentENS_16QuicPacketNumberE(%"class.quic::HybridSlowStart"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic19TcpCubicSenderBytes7CanSendEm(%"class.quic::TcpCubicSenderBytes"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %8 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %8, i64 15
  %10 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %11, label %12, label %24

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  %14 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %15 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %15, i64 13
  %17 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %16, align 8
  %18 = tail call i64 %17(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %19 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %14, align 8
  %20 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %19, i64 17
  %21 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %20, align 8
  %22 = tail call i64 %21(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %23 = tail call zeroext i1 @_ZNK4quic9PrrSender7CanSendEmmm(%"class.quic::PrrSender"* %13, i64 %18, i64 %1, i64 %22) #10
  br label %37

24:                                               ; preds = %2, %6
  %25 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %26 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %26, i64 13
  %28 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %27, align 8
  %29 = tail call i64 %28(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %30 = icmp ugt i64 %29, %1
  br i1 %30, label %37, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 10
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp ult i64 %1, 5840
  %36 = and i1 %35, %34
  br label %37

37:                                               ; preds = %31, %24, %12
  %38 = phi i1 [ %23, %12 ], [ true, %24 ], [ %36, %31 ]
  ret i1 %38
}

declare zeroext i1 @_ZNK4quic9PrrSender7CanSendEmmm(%"class.quic::PrrSender"*, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic19TcpCubicSenderBytes10PacingRateEm(%"class.quic::TcpCubicSenderBytes"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 3
  %4 = load %"class.quic::RttStats"*, %"class.quic::RttStats"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %4, i64 0, i32 8
  %10 = select i1 %8, %"class.quic::QuicTime::Delta"* %9, %"class.quic::QuicTime::Delta"* %5
  %11 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %14 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %14, i64 13
  %16 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %15, align 8
  %17 = tail call i64 %16(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %2
  %20 = mul i64 %17, 8000000
  %21 = icmp slt i64 %20, %12
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = sdiv i64 %20, %12
  %24 = icmp sgt i64 %23, 0
  %25 = select i1 %24, i64 %23, i64 0
  %26 = sitofp i64 %25 to float
  br label %27

27:                                               ; preds = %2, %19, %22
  %28 = phi float [ %26, %22 ], [ 0.000000e+00, %2 ], [ 1.000000e+00, %19 ]
  %29 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %30 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %30, i64 14
  %32 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.quic::TcpCubicSenderBytes"* %0) #10
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 13
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %29, align 8
  %40 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %39, i64 15
  %41 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %43 = select i1 %42, float 1.000000e+00, float 1.250000e+00
  br label %44

44:                                               ; preds = %38, %34, %27
  %45 = phi float [ 2.000000e+00, %27 ], [ 1.250000e+00, %34 ], [ %43, %38 ]
  %46 = fmul float %28, %45
  %47 = tail call i64 @llroundf(float %46) #10
  %48 = icmp sgt i64 %47, 0
  %49 = select i1 %48, i64 %47, i64 0
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic19TcpCubicSenderBytes17BandwidthEstimateEv(%"class.quic::TcpCubicSenderBytes"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 3
  %3 = load %"class.quic::RttStats"*, %"class.quic::RttStats"** %2, align 8
  %4 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %3, i64 0, i32 2, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %9 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %9, i64 13
  %11 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %10, align 8
  %12 = tail call i64 %11(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %7
  %15 = mul i64 %12, 8000000
  %16 = icmp slt i64 %15, %5
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = sdiv i64 %15, %5
  %19 = icmp sgt i64 %18, 0
  %20 = select i1 %19, i64 %18, i64 0
  br label %21

21:                                               ; preds = %17, %14, %7, %1
  %22 = phi i64 [ 0, %1 ], [ %20, %17 ], [ 0, %7 ], [ 1, %14 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic19TcpCubicSenderBytes11InSlowStartEv(%"class.quic::TcpCubicSenderBytes"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %3 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %3, i64 13
  %5 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %4, align 8
  %6 = tail call i64 %5(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %7 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %2, align 8
  %8 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %7, i64 17
  %9 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %8, align 8
  %10 = tail call i64 %9(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %11 = icmp ult i64 %6, %10
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic19TcpCubicSenderBytes13IsCwndLimitedEm(%"class.quic::TcpCubicSenderBytes"*, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i64 (%"class.quic::TcpCubicSenderBytes"*)***
  %4 = load i64 (%"class.quic::TcpCubicSenderBytes"*)**, i64 (%"class.quic::TcpCubicSenderBytes"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %4, i64 13
  %6 = load i64 (%"class.quic::TcpCubicSenderBytes"*)*, i64 (%"class.quic::TcpCubicSenderBytes"*)** %5, align 8
  %7 = tail call i64 %6(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %8 = icmp ugt i64 %7, %1
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = sub i64 %7, %1
  %11 = bitcast %"class.quic::TcpCubicSenderBytes"* %0 to i1 (%"class.quic::TcpCubicSenderBytes"*)***
  %12 = load i1 (%"class.quic::TcpCubicSenderBytes"*)**, i1 (%"class.quic::TcpCubicSenderBytes"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %12, i64 14
  %14 = load i1 (%"class.quic::TcpCubicSenderBytes"*)*, i1 (%"class.quic::TcpCubicSenderBytes"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.quic::TcpCubicSenderBytes"* %0) #10
  %16 = lshr i64 %7, 1
  %17 = icmp ult i64 %16, %1
  %18 = and i1 %17, %15
  %19 = icmp ult i64 %10, 4381
  %20 = or i1 %19, %18
  br label %21

21:                                               ; preds = %2, %9
  %22 = phi i1 [ %20, %9 ], [ true, %2 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic19TcpCubicSenderBytes10InRecoveryEv(%"class.quic::TcpCubicSenderBytes"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 8
  %3 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %2) #10
  br i1 %3, label %4, label %13

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9
  %6 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %5) #10
  br i1 %6, label %7, label %13

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 8, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ule i64 %9, %11
  br label %13

13:                                               ; preds = %7, %4, %1
  %14 = phi i1 [ false, %4 ], [ false, %1 ], [ %12, %7 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4quic19TcpCubicSenderBytes23ShouldSendProbingPacketEv(%"class.quic::TcpCubicSenderBytes"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes23OnRetransmissionTimeoutEb(%"class.quic::TcpCubicSenderBytes"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9
  tail call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %3) #10
  br i1 %1, label %4, label %13

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  tail call void @_ZN4quic15HybridSlowStart7RestartEv(%"class.quic::HybridSlowStart"* %5) #10
  %6 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  tail call void @_ZN4quic10CubicBytes15ResetCubicStateEv(%"class.quic::CubicBytes"* %6) #10
  %7 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %7, align 8
  br label %13

13:                                               ; preds = %2, %4
  ret void
}

declare void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

declare void @_ZN4quic15HybridSlowStart7RestartEv(%"class.quic::HybridSlowStart"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes27HandleRetransmissionTimeoutEv(%"class.quic::TcpCubicSenderBytes"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  tail call void @_ZN4quic10CubicBytes15ResetCubicStateEv(%"class.quic::CubicBytes"* %2) #10
  %3 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 17
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic19TcpCubicSenderBytes13GetDebugStateEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::TcpCubicSenderBytes"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 0, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes20OnApplicationLimitedEm(%"class.quic::TcpCubicSenderBytes"* nocapture, i64) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic19TcpCubicSenderBytes35SetInitialCongestionWindowInPacketsEm(%"class.quic::TcpCubicSenderBytes"* nocapture, i64) unnamed_addr #4 align 2 {
  %3 = mul i64 %1, 1460
  %4 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes25SetNumEmulatedConnectionsEi(%"class.quic::TcpCubicSenderBytes"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 1
  %4 = select i1 %3, i32 %1, i32 1
  %5 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 6
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  tail call void @_ZN4quic10CubicBytes17SetNumConnectionsEi(%"class.quic::CubicBytes"* %6, i32 %4) #10
  ret void
}

declare void @_ZN4quic10CubicBytes17SetNumConnectionsEi(%"class.quic::CubicBytes"*, i32) local_unnamed_addr #1

declare void @_ZN4quic9PrrSender12OnPacketLostEm(%"class.quic::PrrSender"*, i64) local_unnamed_addr #1

declare i64 @_ZN4quic10CubicBytes31CongestionWindowAfterPacketLossEm(%"class.quic::CubicBytes"*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic19TcpCubicSenderBytes19GetCongestionWindowEv(%"class.quic::TcpCubicSenderBytes"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic19TcpCubicSenderBytes21GetSlowStartThresholdEv(%"class.quic::TcpCubicSenderBytes"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #8

declare void @_ZN4quic10CubicBytes20OnApplicationLimitedEv(%"class.quic::CubicBytes"*) local_unnamed_addr #1

declare i64 @_ZN4quic10CubicBytes24CongestionWindowAfterAckEmmNS_8QuicTime5DeltaES1_(%"class.quic::CubicBytes"*, i64, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN4quic10CubicBytes15ResetCubicStateEv(%"class.quic::CubicBytes"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19TcpCubicSenderBytes21OnConnectionMigrationEv(%"class.quic::TcpCubicSenderBytes"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.quic::PrrSender", align 8
  %3 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 1
  tail call void @_ZN4quic15HybridSlowStart7RestartEv(%"class.quic::HybridSlowStart"* %3) #10
  %4 = bitcast %"class.quic::PrrSender"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @_ZN4quic9PrrSenderC1Ev(%"class.quic::PrrSender"* nonnull %2) #10
  %5 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 2
  %6 = bitcast %"class.quic::PrrSender"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %4, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  %7 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 7
  call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %7) #10
  %8 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 8
  call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %8) #10
  %9 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 9
  call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %9) #10
  %10 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 14
  call void @_ZN4quic10CubicBytes15ResetCubicStateEv(%"class.quic::CubicBytes"* %11) #10
  %12 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 15
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 20
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 16
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 21
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 18
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 19
  store i64 %17, i64* %19, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4quic19TcpCubicSenderBytes24GetCongestionControlTypeEv(%"class.quic::TcpCubicSenderBytes"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::TcpCubicSenderBytes", %"class.quic::TcpCubicSenderBytes"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic19TcpCubicSenderBytes22ApplyConnectionOptionsERKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.quic::TcpCubicSenderBytes"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic19TcpCubicSenderBytes16OnPacketNeuteredENS_16QuicPacketNumberE(%"class.quic::TcpCubicSenderBytes"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4quic19TcpCubicSenderBytes23PopulateConnectionStatsEPNS_19QuicConnectionStatsE(%"class.quic::TcpCubicSenderBytes"*, %"struct.quic::QuicConnectionStats"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare i64 @llroundf(float) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
