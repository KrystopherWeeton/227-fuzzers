; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceTargetLoweringX86.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceTargetLoweringX86.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@.str = private unnamed_addr constant [6 x i8] c"float\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIfE8TypeNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), align 8
@.str.1 = private unnamed_addr constant [6 x i8] c".long\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIfE6AsmTagE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIfE12PrintfStringE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIdE8TypeNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), align 8
@.str.4 = private unnamed_addr constant [6 x i8] c".quad\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIdE6AsmTagE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"0x%llx\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIdE12PrintfStringE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), align 8
@.str.6 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIjE8TypeNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), align 8
@_ZN3Ice3X8617PoolTypeConverterIjE6AsmTagE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), align 8
@_ZN3Ice3X8617PoolTypeConverterIjE12PrintfStringE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), align 8
@.str.7 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@_ZN3Ice3X8617PoolTypeConverterItE8TypeNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), align 8
@.str.8 = private unnamed_addr constant [7 x i8] c".short\00", align 1
@_ZN3Ice3X8617PoolTypeConverterItE6AsmTagE = hidden local_unnamed_addr global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), align 8
@_ZN3Ice3X8617PoolTypeConverterItE12PrintfStringE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), align 8
@.str.9 = private unnamed_addr constant [3 x i8] c"i8\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIhE8TypeNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), align 8
@.str.10 = private unnamed_addr constant [6 x i8] c".byte\00", align 1
@_ZN3Ice3X8617PoolTypeConverterIhE6AsmTagE = hidden local_unnamed_addr global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), align 8
@_ZN3Ice3X8617PoolTypeConverterIhE12PrintfStringE = hidden local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), align 8

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
