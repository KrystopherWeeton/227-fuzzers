; ModuleID = '../../ui/gl/gl_image_egl_pixmap.cc'
source_filename = "../../ui/gl/gl_image_egl_pixmap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::EGLApi" = type { i32 (...)** }
%"class.gl::GLImageEGLPixmap" = type { %"class.gl::GLImage", i8*, %"class.gfx::Size", i32, i8* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.x11::XlibDisplayWrapper" = type <{ %struct._XDisplay*, i32, [4 x i8] }>
%struct._XDisplay = type opaque
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.183", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.200", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.241", %"class.base::circular_deque", %"class.base::ObserverList.247", %"class.x11::Event"*, %"class.base::circular_deque.251", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.263" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.193" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.186", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.188" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.193" = type <{ %"class.std::__1::vector.186", %"class.base::LinkedList.194", i64, i32, [4 x i8] }>
%"class.base::LinkedList.194" = type { %"class.base::LinkNode.195" }
%"class.base::LinkNode.195" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.206", %"class.std::__1::vector.213" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.208" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.215" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.217" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.234" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.236" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.247" = type <{ %"class.std::__1::vector.186", %"class.base::LinkedList.248", i64, i32, [4 x i8] }>
%"class.base::LinkedList.248" = type { %"class.base::LinkNode.249" }
%"class.base::LinkNode.249" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.251" = type { %"class.base::internal::VectorBuffer.252", i64, i64 }
%"class.base::internal::VectorBuffer.252" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.254, %"class.std::__1::unique_ptr.256" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.254 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.255", [4 x i8] }>
%"class.base::RefCountedThreadSafe.255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.262 }
%union.anon.262 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.263" = type { %"class.base::internal::CallbackBase" }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }

$_ZN2gl16GLImageEGLPixmap5FlushEv = comdat any

@_ZTVN2gl16GLImageEGLPixmapE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmap7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmap17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmap11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmap16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageEGLPixmap"*, i32)* @_ZN2gl16GLImageEGLPixmap12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageEGLPixmap"*, i32)* @_ZN2gl16GLImageEGLPixmap15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32)* @_ZN2gl7GLImage12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl7GLImage15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (void ()* @_ZN2gl7GLImage20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmap5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImageEGLPixmap"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl16GLImageEGLPixmap12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (void ()* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmapD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmapD0Ev to i8*)] }, align 8
@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@__const._ZN2gl16GLImageEGLPixmap10InitializeEN3x116PixmapE.attribs = private unnamed_addr constant [15 x i32] [i32 12320, i32 32, i32 12321, i32 8, i32 12322, i32 8, i32 12323, i32 8, i32 12324, i32 8, i32 12339, i32 2, i32 12346, i32 1, i32 12344], align 16
@.ref.tmp = private unnamed_addr constant [5 x i32] [i32 12416, i32 12382, i32 12417, i32 12383, i32 12344], align 4

@_ZN2gl16GLImageEGLPixmapC1ERKN3gfx4SizeENS1_12BufferFormatE = hidden unnamed_addr alias void (%"class.gl::GLImageEGLPixmap"*, %"class.gfx::Size"*, i32), void (%"class.gl::GLImageEGLPixmap"*, %"class.gfx::Size"*, i32)* @_ZN2gl16GLImageEGLPixmapC2ERKN3gfx4SizeENS1_12BufferFormatE
@_ZN2gl16GLImageEGLPixmapD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageEGLPixmap"*), void (%"class.gl::GLImageEGLPixmap"*)* @_ZN2gl16GLImageEGLPixmapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLImageEGLPixmapC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageEGLPixmap"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %5 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 68, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl16GLImageEGLPixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 2
  %10 = bitcast %"class.gfx::Size"* %1 to i64*
  %11 = bitcast %"class.gfx::Size"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 3
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %15 = bitcast %"class.x11::XlibDisplayWrapper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #8
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %4, %"class.x11::Connection"* %16, i32 0) #8
  %17 = bitcast %"class.x11::XlibDisplayWrapper"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  %19 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %20 = bitcast %"class.gl::EGLApi"* %19 to i8* (%"class.gl::EGLApi"*, i64)***
  %21 = load i8* (%"class.gl::EGLApi"*, i64)**, i8* (%"class.gl::EGLApi"*, i64)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i64)*, i8* (%"class.gl::EGLApi"*, i64)** %21, i64 33
  %23 = load i8* (%"class.gl::EGLApi"*, i64)*, i8* (%"class.gl::EGLApi"*, i64)** %22, align 8
  %24 = call i8* %23(%"class.gl::EGLApi"* %19, i64 %18) #8
  store i8* %24, i8** %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLImageEGLPixmapD2Ev(%"class.gl::GLImageEGLPixmap"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl16GLImageEGLPixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 21
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %9, i8* nonnull %4) #8
  br label %15

15:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLImageEGLPixmapD0Ev(%"class.gl::GLImageEGLPixmap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl16GLImageEGLPixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 21
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %9, i8* nonnull %4) #8
  br label %15

15:                                               ; preds = %1, %6
  %16 = bitcast %"class.gl::GLImageEGLPixmap"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl16GLImageEGLPixmap10InitializeEN3x116PixmapE(%"class.gl::GLImageEGLPixmap"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [15 x i32], align 16
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %7 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.gl::EGLApi"* %6 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)***
  %10 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)** %10, i64 46
  %12 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)** %11, align 8
  %13 = tail call i32 %12(%"class.gl::EGLApi"* %6, i8* %8, i32* null, i32* null) #8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %47

15:                                               ; preds = %2
  %16 = bitcast [15 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %16) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 16 bitcast ([15 x i32]* @__const._ZN2gl16GLImageEGLPixmap10InitializeEN3x116PixmapE.attribs to i8*), i64 60, i1 false)
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #8
  store i32 -1431655766, i32* %4, align 4
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  store i8* null, i8** %5, align 8
  %19 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = getelementptr inbounds [15 x i32], [15 x i32]* %3, i64 0, i64 0
  %22 = bitcast %"class.gl::EGLApi"* %19 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)***
  %23 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %23, i64 5
  %25 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %24, align 8
  %26 = call i32 %25(%"class.gl::EGLApi"* %19, i8* %20, i32* nonnull %21, i8** nonnull %5, i32 1, i32* nonnull %4) #8
  %27 = icmp eq i32 %26, 1
  %28 = load i32, i32* %4, align 4
  %29 = icmp ne i32 %28, 0
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %15
  %32 = call i8* @_Znwm(i64 20) #9
  %33 = bitcast i8* %32 to i32*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 bitcast ([5 x i32]* @.ref.tmp to i8*), i64 20, i1 false) #8
  %34 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = load i8*, i8** %5, align 8
  %37 = zext i32 %1 to i64
  %38 = bitcast %"class.gl::EGLApi"* %34 to i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)***
  %39 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)**, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*** %38, align 8
  %40 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)** %39, i64 12
  %41 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)** %40, align 8
  %42 = call i8* %41(%"class.gl::EGLApi"* %34, i8* %35, i8* %36, i64 %37, i32* nonnull %33) #8
  %43 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  store i8* %42, i8** %43, align 8
  %44 = icmp ne i8* %42, null
  call void @_ZdlPv(i8* nonnull %32) #9
  br label %45

45:                                               ; preds = %15, %31
  %46 = phi i1 [ %44, %31 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %16) #8
  br label %47

47:                                               ; preds = %2, %45
  %48 = phi i1 [ %46, %45 ], [ false, %2 ]
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl16GLImageEGLPixmap7GetSizeEv(%"class.gl::GLImageEGLPixmap"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl16GLImageEGLPixmap17GetInternalFormatEv(%"class.gl::GLImageEGLPixmap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %3) #8
  ret i32 %4
}

declare i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl16GLImageEGLPixmap11GetDataTypeEv(%"class.gl::GLImageEGLPixmap"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 5121
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl16GLImageEGLPixmap16ShouldBindOrCopyEv(%"class.gl::GLImageEGLPixmap"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl16GLImageEGLPixmap12BindTexImageEj(%"class.gl::GLImageEGLPixmap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp ne i8* %4, null
  %6 = icmp eq i32 %1, 3553
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %10 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.gl::EGLApi"* %9 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)***
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %13, i64 4
  %15 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.gl::EGLApi"* %9, i8* %11, i8* nonnull %4, i32 12420) #8
  %17 = icmp eq i32 %16, 1
  br label %18

18:                                               ; preds = %2, %8
  %19 = phi i1 [ false, %2 ], [ %17, %8 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLImageEGLPixmap15ReleaseTexImageEj(%"class.gl::GLImageEGLPixmap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %4 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.gl::GLImageEGLPixmap", %"class.gl::GLImageEGLPixmap"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.gl::EGLApi"* %3 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)***
  %9 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %9, i64 64
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %10, align 8
  %12 = tail call i32 %11(%"class.gl::EGLApi"* %3, i8* %5, i8* %7, i32 12420) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl16GLImageEGLPixmap12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImageEGLPixmap"* nocapture, %"class.base::trace_event::ProcessMemoryDump"* nocapture, i64, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #5 align 2 {
  ret void
}

declare i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #4

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #4

declare zeroext i1 @_ZN2gl7GLImage12CopyTexImageEj(%"class.gl::GLImage"*, i32) unnamed_addr #4

declare zeroext i1 @_ZN2gl7GLImage15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImage"*, i32, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN2gl7GLImage20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE() unnamed_addr

declare void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl16GLImageEGLPixmap5FlushEv(%"class.gl::GLImageEGLPixmap"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #4

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #4

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #4

declare i32 @_ZNK2gl7GLImage7GetTypeEv(%"class.gl::GLImage"*) unnamed_addr #4

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #4

declare void @_ZN2gl7GLImage15GetNativePixmapEv() unnamed_addr

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #4

declare void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* sret, %"class.x11::Connection"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
