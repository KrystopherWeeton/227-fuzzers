; ModuleID = '../../cc/metrics/events_metrics_manager.cc'
source_filename = "../../cc/metrics/events_metrics_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::EventsMetricsManager::ScopedMonitor" = type { i32 (...)** }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector", %"class.std::__1::vector.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type <{ %"class.cc::EventsMetricsManager::ScopedMonitor", %"class.cc::EventsMetricsManager"*, %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2cc20EventsMetricsManager17ScopedMonitorImplD2Ev = comdat any

$_ZN2cc20EventsMetricsManager17ScopedMonitorImplD0Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2cc12EventMetricsENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN2cc20EventsMetricsManager17ScopedMonitorImplE = comdat any

@_ZTVN2cc20EventsMetricsManager17ScopedMonitorImplE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::EventsMetricsManager::ScopedMonitorImpl"*)* @_ZN2cc20EventsMetricsManager17ScopedMonitorImplD2Ev to i8*), i8* bitcast (void (%"class.cc::EventsMetricsManager::ScopedMonitorImpl"*)* @_ZN2cc20EventsMetricsManager17ScopedMonitorImplD0Ev to i8*)] }, comdat, align 8

@_ZN2cc20EventsMetricsManager13ScopedMonitorD1Ev = hidden unnamed_addr alias void (%"class.cc::EventsMetricsManager::ScopedMonitor"*), void (%"class.cc::EventsMetricsManager::ScopedMonitor"*)* @_ZN2cc20EventsMetricsManager13ScopedMonitorD2Ev
@_ZN2cc20EventsMetricsManagerC1Ev = hidden unnamed_addr alias void (%"class.cc::EventsMetricsManager"*), void (%"class.cc::EventsMetricsManager"*)* @_ZN2cc20EventsMetricsManagerC2Ev
@_ZN2cc20EventsMetricsManagerD1Ev = hidden unnamed_addr alias void (%"class.cc::EventsMetricsManager"*), void (%"class.cc::EventsMetricsManager"*)* @_ZN2cc20EventsMetricsManagerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManager13ScopedMonitorD2Ev(%"class.cc::EventsMetricsManager::ScopedMonitor"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManager13ScopedMonitorD0Ev(%"class.cc::EventsMetricsManager::ScopedMonitor"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManagerC2Ev(%"class.cc::EventsMetricsManager"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::EventsMetricsManager"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManagerD2Ev(%"class.cc::EventsMetricsManager"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %14, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %14, align 8
  %16 = icmp eq %"class.cc::EventMetrics"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN2cc12EventMetricsD1Ev(%"class.cc::EventMetrics"* nonnull %15) #13
  %18 = bitcast %"class.cc::EventMetrics"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.2"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %27, align 8
  %29 = icmp eq %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %28 to i64
  %32 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %28 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventsMetricsManager::ScopedMonitor"* @_ZN2cc20EventsMetricsManager16GetScopedMonitorEN4base12OnceCallbackIFNSt3__110unique_ptrINS_12EventMetricsENS3_14default_deleteIS5_EEEEbEEE(%"class.cc::EventsMetricsManager"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %"class.cc::EventsMetricsManager"* %0 to i64
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = tail call i8* @_Znwm(i64 32) #14
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %10 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc20EventsMetricsManager17ScopedMonitorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast i8* %13 to i64*
  store i64 %9, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  %18 = ptrtoint i8* %6 to i64
  %19 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %19, align 8
  %21 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %21, align 8
  %23 = icmp ult %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %20, %22
  %24 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %22 to i64
  br i1 %23, label %25, label %30

25:                                               ; preds = %2
  %26 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %20 to i64*
  store i64 %18, i64* %26, align 8
  %27 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %20, i64 1
  %28 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %27 to i64
  %29 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %19 to i64*
  store i64 %28, i64* %29, align 8
  br label %87

30:                                               ; preds = %2
  %31 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %20 to i64
  %32 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %19 to i64*
  %33 = bitcast %"class.cc::EventsMetricsManager"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.cc::EventsMetricsManager"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #12
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %21 to i64*
  %43 = sub i64 %24, %34
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 2
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  call void @abort() #12
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %41 ]
  %56 = shl i64 %55, 3
  %57 = call i8* @_Znwm(i64 %56) #14
  %58 = bitcast i8* %57 to %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %61, i64 %36
  %63 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %61, i64 %60
  %64 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %63 to i64
  %65 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %62 to i64*
  store i64 %18, i64* %65, align 8
  %66 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %62, i64 1
  %67 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %66 to i64
  %68 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %68, align 8
  %70 = load i64, i64* %32, align 8
  %71 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %62, i64 %74
  %76 = ptrtoint %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %59
  %79 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %75 to i8*
  %80 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #13
  %81 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %68, align 8
  br label %82

82:                                               ; preds = %78, %59
  %83 = phi %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** [ %69, %59 ], [ %81, %78 ]
  store i64 %76, i64* %33, align 8
  store i64 %67, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %84 = icmp eq %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %83 to i8*
  call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %85, %82, %25
  %88 = bitcast i8* %6 to %"class.cc::EventsMetricsManager::ScopedMonitor"*
  ret %"class.cc::EventsMetricsManager::ScopedMonitor"* %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManager22SaveActiveEventMetricsEv(%"class.cc::EventsMetricsManager"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.cc::EventsMetricsManager"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = inttoptr i64 %4 to %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**
  %10 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %9, i64 -1
  %11 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl", %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %11, i64 0, i32 3
  store i8 1, i8* %12, align 8
  br label %13

13:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManager22TakeSavedEventsMetricsEv(%"class.std::__1::vector.2"* noalias nocapture sret, %"class.cc::EventsMetricsManager"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.2"* %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = bitcast %"class.std::__1::vector.2"* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8
  %8 = bitcast %"class.std::__1::vector.2"* %4 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %11 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  store i64 0, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20EventsMetricsManager20OnScopedMonitorEndedENSt3__110unique_ptrINS_12EventMetricsENS1_14default_deleteIS3_EEEE(%"class.cc::EventsMetricsManager"*, %"class.cc::EventMetrics"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::EventMetrics"* %1, %"class.cc::EventMetrics"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %6, i64 -1
  store %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %7, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %5, align 8
  %8 = icmp eq %"class.cc::EventMetrics"* %1, null
  %9 = ptrtoint %"class.cc::EventMetrics"* %1 to i64
  br i1 %8, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp ult %"class.std::__1::unique_ptr"* %12, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %4, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 1
  %19 = ptrtoint %"class.std::__1::unique_ptr"* %18 to i64
  %20 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  store i64 %19, i64* %20, align 8
  br label %23

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc12EventMetricsENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"* %22, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #13
  br label %23

23:                                               ; preds = %2, %21, %16
  %24 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %4, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %4, align 8
  %25 = icmp eq %"class.cc::EventMetrics"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  call void @_ZN2cc12EventMetricsD1Ev(%"class.cc::EventMetrics"* nonnull %24) #13
  %27 = bitcast %"class.cc::EventMetrics"* %24 to i8*
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %23, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc12EventMetricsD1Ev(%"class.cc::EventMetrics"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc20EventsMetricsManager17ScopedMonitorImplD2Ev(%"class.cc::EventsMetricsManager::ScopedMonitorImpl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl", %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc20EventsMetricsManager17ScopedMonitorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl", %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %8 to i64
  %12 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl", %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %11, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %19 = bitcast void ()** %18 to %"class.cc::EventMetrics"* (%"class.base::internal::BindStateBase"*, i1)**
  %20 = load %"class.cc::EventMetrics"* (%"class.base::internal::BindStateBase"*, i1)*, %"class.cc::EventMetrics"* (%"class.base::internal::BindStateBase"*, i1)** %19, align 8
  %21 = tail call %"class.cc::EventMetrics"* %20(%"class.base::internal::BindStateBase"* nonnull %8, i1 zeroext %14) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %22 = ptrtoint %"class.cc::EventMetrics"* %21 to i64
  br label %23

23:                                               ; preds = %10, %1
  %24 = phi i64 [ 0, %1 ], [ %22, %10 ]
  %25 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl", %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0, i64 0, i32 1
  %26 = load %"class.cc::EventsMetricsManager"*, %"class.cc::EventsMetricsManager"** %25, align 8
  %27 = inttoptr i64 %24 to %"class.cc::EventMetrics"*
  %28 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.cc::EventMetrics"* %27, %"class.cc::EventMetrics"** %29, align 8
  %30 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %26, i64 0, i32 0, i32 0, i32 1
  %31 = load %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %30, align 8
  %32 = getelementptr inbounds %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %31, i64 -1
  store %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** %32, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"*** %30, align 8
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %26, i64 0, i32 1, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr"* %36, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %29, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %24, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr"* %42 to i64
  %44 = bitcast %"class.std::__1::unique_ptr"** %35 to i64*
  store i64 %43, i64* %44, align 8
  br label %47

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.cc::EventsMetricsManager", %"class.cc::EventsMetricsManager"* %26, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2cc12EventMetricsENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"* %46, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #13
  br label %47

47:                                               ; preds = %45, %40, %23
  %48 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %29, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %29, align 8
  %49 = icmp eq %"class.cc::EventMetrics"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @_ZN2cc12EventMetricsD1Ev(%"class.cc::EventMetrics"* nonnull %48) #13
  %51 = bitcast %"class.cc::EventMetrics"* %48 to i8*
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc20EventsMetricsManager17ScopedMonitorImplD0Ev(%"class.cc::EventsMetricsManager::ScopedMonitorImpl"*) unnamed_addr #3 comdat align 2 {
  tail call void @_ZN2cc20EventsMetricsManager17ScopedMonitorImplD2Ev(%"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0) #13
  %2 = bitcast %"class.cc::EventsMetricsManager::ScopedMonitorImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2cc12EventMetricsENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.cc::EventMetrics"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.cc::EventMetrics"*, %"class.cc::EventMetrics"** %142, align 8
  store %"class.cc::EventMetrics"* null, %"class.cc::EventMetrics"** %142, align 8
  %144 = icmp eq %"class.cc::EventMetrics"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN2cc12EventMetricsD1Ev(%"class.cc::EventMetrics"* nonnull %143) #13
  %146 = bitcast %"class.cc::EventMetrics"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
