; ModuleID = '../../third_party/blink/renderer/core/css/rule_set.cc'
source_filename = "../../third_party/blink/renderer/core/css/rule_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.247", i32, [4 x i8], %"class.std::__1::unique_ptr.383", %"class.std::__1::unique_ptr.383", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.399", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.417", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.424", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.363", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__cxx_atomic_impl.286" }
%"struct.std::__1::__cxx_atomic_impl.286" = type { %"struct.std::__1::__cxx_atomic_base_impl.287" }
%"struct.std::__1::__cxx_atomic_base_impl.287" = type { i64 }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::Worklist.294"* }
%"class.blink::Worklist.294" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::Worklist.301"* }
%"class.blink::Worklist.301" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::Worklist.308"* }
%"class.blink::Worklist.308" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::Worklist.315"* }
%"class.blink::Worklist.315" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::Worklist.322"* }
%"class.blink::Worklist.322" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::Worklist.329"* }
%"class.blink::Worklist.329" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::Worklist.336"* }
%"class.blink::Worklist.336" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.283" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.343", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.355", %"class.std::__1::__compressed_pair.357", [4 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { i64 }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { float }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.366", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.375" }
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.405" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.294"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.301"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.308"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.315"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.322"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.861" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.423 }
%class.scoped_refptr.423 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.424" = type { %"struct.std::__1::__atomic_base.425" }
%"struct.std::__1::__atomic_base.425" = type { %"struct.std::__1::__cxx_atomic_impl.426" }
%"struct.std::__1::__cxx_atomic_impl.426" = type { %"struct.std::__1::__cxx_atomic_base_impl.427" }
%"struct.std::__1::__cxx_atomic_base_impl.427" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.510" }
%"struct.std::__1::atomic.510" = type { %"struct.std::__1::__atomic_base.511" }
%"struct.std::__1::__atomic_base.511" = type { %"struct.std::__1::__atomic_base.512" }
%"struct.std::__1::__atomic_base.512" = type { %"struct.std::__1::__cxx_atomic_impl.513" }
%"struct.std::__1::__cxx_atomic_impl.513" = type { %"struct.std::__1::__cxx_atomic_base_impl.514" }
%"struct.std::__1::__cxx_atomic_base_impl.514" = type { i32 }
%"class.blink::RuleData" = type { %"class.blink::Member", i64, [4 x i32] }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.14", %"class.blink::Member.18" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::ExtendedRuleData" = type { %"class.blink::RuleData", %"class.blink::Member.43" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::ContainerQuery"* }
%"class.blink::ContainerQuery" = type <{ %class.scoped_refptr.24, %"class.base::StrongAlias", [7 x i8] }>
%class.scoped_refptr.24 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.25", %"class.WTF::Vector.27" }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.std::__1::unique_ptr.30"*, i32, i32 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.33", %"class.WTF::String" }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35" }
%"class.WTF::VectorBufferBase.35" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.base::StrongAlias" = type { i8 }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.5", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.8" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.86", %"class.blink::HeapVector.94", %"class.blink::HeapVector.102", %"class.blink::HeapVector.119", %"class.blink::HeapVector.127", %"class.blink::HeapVector.135", %"class.blink::HeapVector.143", %"class.WTF::Vector.150", i32, %"class.blink::Member.156" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapVector"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.54" }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.blink::Member.57"*, i32, i32 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::RuleData"* }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.60", %"class.WTF::HashMap.60", %"class.WTF::HashMap.60", %"class.WTF::HashMap.65", %class.scoped_refptr.70, %class.scoped_refptr.80, %class.scoped_refptr.79, %"class.WTF::Vector.81", %"class.WTF::Vector.81", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair.64"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.64" = type { %"class.WTF::AtomicString", %class.scoped_refptr.876 }
%class.scoped_refptr.876 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.71", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.76", %"union.blink::InvalidationSet::Backing.77", %"union.blink::InvalidationSet::Backing.78", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.76" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.77" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.78" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.69"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.69" = type opaque
%class.scoped_refptr.70 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.79, %class.scoped_refptr.79 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.71", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.76", %"union.blink::InvalidationSet::Backing.77", %"union.blink::InvalidationSet::Backing.78", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.80 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.79 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::HeapVector.86" = type { %"class.WTF::Vector.89" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::Member.92"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.94" = type { %"class.WTF::Vector.97" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.blink::Member.100"*, i32, i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14" }
%"class.blink::HeapVector.102" = type { %"class.WTF::Vector.105" }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { %"class.blink::Member.108"*, i32, i32 }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.110", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.110" = type { %"class.WTF::Vector.113" }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.blink::Member.116"*, i32, i32 }
%"class.blink::Member.116" = type opaque
%"class.blink::HeapVector.119" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::Member.125"*, i32, i32 }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.14" }
%"class.blink::HeapVector.127" = type { %"class.WTF::Vector.130" }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.blink::Member.133"*, i32, i32 }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", i32, [4 x i8] }>
%"class.blink::Member.173" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.135" = type { %"class.WTF::Vector.138" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"class.blink::Member.141"*, i32, i32 }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173", %"class.blink::Member.173" }
%"class.blink::HeapVector.143" = type { %"class.WTF::Vector.146" }
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member", i32, i32 }
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.153, i8, [7 x i8] }>
%class.scoped_refptr.153 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160" }
%"class.blink::HeapHashMap.160" = type { %"class.WTF::HashMap.163" }
%"class.WTF::HashMap.163" = type { %"class.WTF::HashTable.164" }
%"class.WTF::HashTable.164" = type <{ %"struct.WTF::KeyValuePair.166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.166" = type { %"class.WTF::AtomicString", %"class.blink::Member.167" }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::HeapLinkedStack"* }
%"class.blink::HeapLinkedStack" = type { %"class.blink::Member.171", i64 }
%"class.blink::Member.171" = type { %"class.blink::MemberBase.172" }
%"class.blink::MemberBase.172" = type { %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* }
%"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node" = type { %"class.blink::Member.57", %"class.blink::Member.171" }
%"class.blink::HeapVector.177" = type { %"class.WTF::Vector.180" }
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"class.blink::Member.183"*, i32, i32 }
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::StyleRuleBase"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.188", i8, [7 x i8] }>
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.194", %"class.WTF::String", %"class.blink::HeapVector.200", %"class.blink::HeapVector.207", %"class.blink::HeapVector.177", %"class.WTF::HashMap.215", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.221", %"class.blink::HeapHashSet.765", %"class.blink::HeapHashSet.765", %"class.blink::Member.772", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type { %"class.blink::StyleRuleBase", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.196", %"class.blink::Member.198", %"class.WTF::String", %class.scoped_refptr.24, %"class.blink::Member.196", i8, i32 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::StyleRuleImport::ImportedStyleSheetClient"* }
%"class.blink::StyleRuleImport::ImportedStyleSheetClient" = type { %"class.blink::ResourceClient.base", %"class.blink::Member.194" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.868", [7 x i8], %"class.blink::Member.869", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.868" = type { i8 }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::HeapVector.200" = type { %"class.WTF::Vector.203" }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"class.blink::Member.194"*, i32, i32 }
%"class.blink::HeapVector.207" = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::Member.213"*, i32, i32 }
%"class.blink::Member.213" = type opaque
%"class.WTF::HashMap.215" = type { %"class.WTF::HashTable.216" }
%"class.WTF::HashTable.216" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.231, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.428", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.225" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::KURL"* }
%class.scoped_refptr.231 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.232", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.232" = type { %"class.base::RefCounted.233" }
%"class.base::RefCounted.233" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.236" }
%"class.blink::HeapHashMap.236" = type { %"class.WTF::HashMap.239" }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type { %"class.blink::WeakMember.243", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.506", %"class.WTF::Vector.506", i8, i32, %"class.blink::Member.517", %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::Member.527", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.529", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.535", %"class.blink::Member.537", %"class.blink::Member.496", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.540", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.472", %"class.blink::Member.457", %"class.blink::Member.555", %"class.blink::Member.457", %"class.blink::Member.457", %"class.blink::Member.457", %"class.blink::UserActionElementSet", %"class.blink::Member.564", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.572", i16, i8, %"class.blink::Member.579", %"class.blink::Member.581", %"class.blink::Member.583", %"class.blink::Member.585", %"class.blink::TextLinkColors", %"class.blink::Member.587", i8, [7 x i8], %"class.blink::HeapHashMap.589", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.457", %"class.WTF::Vector.596", %"class.blink::Member.601", %"class.blink::Member.603", i8, %"class.blink::Member.457", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.605", %"class.blink::HeapVector.607", %"class.std::__1::unique_ptr.615", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.621", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.634", %"class.WTF::Vector.636", i8, i8, %"class.std::__1::unique_ptr.641", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.472", %"class.blink::HeapVector.647", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.655", i8, i32, %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.661", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.663", %"class.WTF::HashMap.665", %"class.blink::Member.670", %"class.blink::Member.672", %"class.blink::Member.674", %"class.blink::Member.676", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.678", i8, i32, %"class.blink::Member.685", %"class.blink::Member.687", i32, %"class.blink::Member.689", %"class.blink::Member.691", %"class.blink::Member.693", %"class.std::__1::unique_ptr.695", i64, %"class.std::__1::unique_ptr.701", i32, i32, %"class.blink::Member.712", %"class.blink::Member.714", %"class.blink::Member.716", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.718", %"class.WTF::Vector.720", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.725", %"class.blink::Member.732", %"class.std::__1::unique_ptr.734", %"class.blink::Member.740", i8, i8, %"class.WTF::String", %"class.blink::Member.742", i8, [7 x i8], %"class.blink::HeapHashMap.744", %"class.blink::HeapObserverSet", %"class.blink::Member.758", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.760", i32, i8, i8, %"class.blink::WeakMember.762", %"class.blink::Member.763" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.430", %"class.blink::Member.430" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.434" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.432", %"class.blink::Member.442", %"class.blink::Member.442", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.488", %"class.blink::HeapVector.490" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.446" }
%"class.blink::HeapHashMap.446" = type { %"class.WTF::HashMap.449" }
%"class.WTF::HashMap.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type { %"class.WTF::AtomicString", %"class.blink::Member.453" }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.457", i32, %"class.blink::HeapVector.472" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.485" }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::HeapHashMap.487"* }
%"class.blink::HeapHashMap.487" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.490" = type { %"class.WTF::Vector.493" }
%"class.WTF::Vector.493" = type { %"class.WTF::VectorBuffer.494" }
%"class.WTF::VectorBuffer.494" = type { %"class.WTF::VectorBufferBase.495" }
%"class.WTF::VectorBufferBase.495" = type { %"class.blink::Member.496"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.499" }
%"class.blink::HeapHashMap.499" = type { %"class.WTF::HashMap.502" }
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.509 }
%class.scoped_refptr.509 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.510" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.785", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.830", i32, i8, [3 x i8], %"class.blink::HeapVector.832", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.840", %"class.blink::Member.842", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.851", %"class.blink::Member.857", %"class.blink::Member.859", i8, [7 x i8] }>
%"class.blink::Supplementable.785" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.786" }
%"class.blink::HeapHashMap.786" = type { %"class.WTF::HashMap.789" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.792" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.801" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.793" }
%"class.blink::HeapObserverSet.793" = type { i32, [4 x i8], %"class.blink::HeapHashSet.794" }
%"class.blink::HeapHashSet.794" = type { %"class.WTF::HashSet.797" }
%"class.WTF::HashSet.797" = type { %"class.WTF::HashTable.798" }
%"class.WTF::HashTable.798" = type <{ %"class.blink::WeakMember.800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.800" = type opaque
%"class.blink::Supplementable.801" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.802" }
%"class.blink::HeapHashMap.802" = type { %"class.WTF::HashMap.805" }
%"class.WTF::HashMap.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"struct.WTF::KeyValuePair.808"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.808" = type { i8*, %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.809, %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.820", %"class.std::__1::unique_ptr.820", %"class.blink::Member.519", i32, [4 x i8], %"class.WTF::HashSet.826", i32, i32 }
%class.scoped_refptr.809 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.810", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.813 }
%"class.WTF::RefCounted.810" = type { %"class.base::RefCounted.811" }
%"class.base::RefCounted.811" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.812 }
%union.anon.812 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.813 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.826" = type { %"class.WTF::HashTable.827" }
%"class.WTF::HashTable.827" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.832" = type { %"class.WTF::Vector.835" }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.blink::Member.838"*, i32, i32 }
%"class.blink::Member.838" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.844", i32, i32 }
%"class.blink::HeapHashMap.844" = type { %"class.WTF::HashMap.847" }
%"class.WTF::HashMap.847" = type { %"class.WTF::HashTable.848" }
%"class.WTF::HashTable.848" = type <{ %"struct.WTF::KeyValuePair.850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.850" = type opaque
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.539 }
%class.scoped_refptr.539 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.231 }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.568" }
%"class.WTF::HashSet.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"class.blink::WeakMember.571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.571" = type opaque
%"class.blink::HeapHashSet.572" = type { %"class.WTF::HashSet.575" }
%"class.WTF::HashSet.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"class.blink::WeakMember.578"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.578" = type opaque
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.589" = type { %"class.WTF::HashMap.592" }
%"class.WTF::HashMap.592" = type { %"class.WTF::HashTable.593" }
%"class.WTF::HashTable.593" = type <{ %"struct.WTF::KeyValuePair.595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.595" = type opaque
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.459" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.463", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.463" = type { %"class.WTF::SingleThreadedBitField.464" }
%"class.WTF::SingleThreadedBitField.464" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.465 }
%class.scoped_refptr.465 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.466", %"class.WTF::AtomicString", %"class.WTF::Vector.468" }
%"class.WTF::RefCounted.466" = type { %"class.base::RefCounted.467" }
%"class.base::RefCounted.467" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.607" = type { %"class.WTF::Vector.610" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.blink::Member.613"*, i32, i32 }
%"class.blink::Member.613" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.621" = type { %"class.WTF::HashSet.624" }
%"class.WTF::HashSet.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"class.blink::WeakMember.627"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.627" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.628", i32, [4 x i8] }>
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"struct.std::__1::pair.631"*, i32, i32 }
%"struct.std::__1::pair.631" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.472" = type { %"class.WTF::Vector.475" }
%"class.WTF::Vector.475" = type { %"class.WTF::VectorBuffer.476" }
%"class.WTF::VectorBuffer.476" = type { %"class.WTF::VectorBufferBase.477" }
%"class.WTF::VectorBufferBase.477" = type { %"class.blink::Member.457"*, i32, i32 }
%"class.blink::HeapVector.647" = type { %"class.WTF::Vector.650" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::Member.653"*, i32, i32 }
%"class.blink::Member.653" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.440" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"struct.WTF::KeyValuePair.669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.669" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.554", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.545, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.545 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.546" }>
%"class.base::RefCountedThreadSafe.546" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.547 }
%class.scoped_refptr.547 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.548", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.548" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.549" }
%"struct.std::__1::atomic.549" = type { %"struct.std::__1::__atomic_base.550" }
%"struct.std::__1::__atomic_base.550" = type { %"struct.std::__1::__atomic_base.551" }
%"struct.std::__1::__atomic_base.551" = type { %"struct.std::__1::__cxx_atomic_impl.552" }
%"struct.std::__1::__cxx_atomic_impl.552" = type { %"struct.std::__1::__cxx_atomic_base_impl.553" }
%"struct.std::__1::__cxx_atomic_base_impl.553" = type { i8 }
%"class.blink::WeakMember.554" = type { %"class.blink::MemberBase.441" }
%"class.blink::HeapHashSet.678" = type { %"class.WTF::HashSet.681" }
%"class.WTF::HashSet.681" = type { %"class.WTF::HashTable.682" }
%"class.WTF::HashTable.682" = type <{ %"class.blink::Member.684"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.684" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, [4 x i8], %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", %"class.WTF::HashMap.704", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.704" = type { %"class.WTF::HashTable.705" }
%"class.WTF::HashTable.705" = type <{ %"struct.WTF::KeyValuePair.708"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.708" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.725" = type { %"class.WTF::HashMap.728" }
%"class.WTF::HashMap.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"struct.WTF::KeyValuePair.731"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.731" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.744" = type { %"class.WTF::HashMap.747" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.750" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.751" }
%"class.blink::HeapHashSet.751" = type { %"class.WTF::HashSet.754" }
%"class.WTF::HashSet.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"class.blink::WeakMember.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.757" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.440", %"class.blink::HeapHashSet.776", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.783", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.776" = type { %"class.WTF::HashSet.779" }
%"class.WTF::HashSet.779" = type { %"class.WTF::HashTable.780" }
%"class.WTF::HashTable.780" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.782" = type opaque
%"class.blink::HeapTaskRunnerTimer.783" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.784", { i64, i64 } }
%"class.blink::WeakMember.784" = type { %"class.blink::MemberBase.761" }
%"class.blink::WeakMember.762" = type { %"class.blink::MemberBase.431" }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapHashSet.765" = type { %"class.WTF::HashSet.768" }
%"class.WTF::HashSet.768" = type { %"class.WTF::HashTable.769" }
%"class.WTF::HashTable.769" = type <{ %"class.blink::WeakMember.771"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.771" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::RuleSet"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::HeapVectorBacking.1057" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.903 }
%union.anon.903 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.974" = type { i8 }
%"class.blink::HeapVectorBacking.986" = type { i8 }
%"class.blink::HeapVectorBacking.998" = type { i8 }
%"class.blink::HeapVectorBacking.1010" = type { i8 }
%"class.blink::HeapVectorBacking.1022" = type { i8 }
%"class.blink::HeapVectorBacking.1033" = type { i8 }
%"class.blink::HeapHashTableBacking.1043" = type { i8 }

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_7RuleSet15PendingRuleMapsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_7RuleSet15PendingRuleMapsEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8RuleDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_8RuleDataEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_15HeapLinkedStackINS5_IKNS_8RuleDataEEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_15HeapLinkedStackINS7_IKNS_8RuleDataEEEEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_15HeapLinkedStackINS6_IKNS5_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEEEPhm = comdat any

$_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13StyleRulePageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17StyleRulePropertyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_23StyleRuleScrollTimelineEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF15ConstructTraitsIN5blink15MinimalRuleDataENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19MediaQuerySetResultEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_IKNS_8RuleDataEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_IKNS_8RuleDataEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_IKNS5_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue = comdat any

$_ZGVZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink20shadow_element_names23kPseudoFileUploadButtonE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"RuleSet::addRulesFromSheet\00", align 1
@_ZZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue = linkonce_odr hidden global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue = linkonce_odr hidden global i64 0, comdat, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"cue\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSet15PendingRuleMapsEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RuleSet::PendingRuleMaps]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_7RuleSet15PendingRuleMapsEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_7RuleSet15PendingRuleMapsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8RuleDataEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RuleData]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8RuleDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8RuleDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_15HeapLinkedStackINS7_IKNS_8RuleDataEEEEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_15HeapLinkedStackINS6_IKNS1_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [500 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::AtomicString, WTF::KeyValuePair<WTF::AtomicString, blink::Member<blink::HeapLinkedStack<blink::Member<const blink::RuleData> > > >, WTF::KeyValuePairKeyExtractor, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::Member<blink::HeapLinkedStack<blink::Member<const blink::RuleData> > > > >, WTF::HashTraits<WTF::AtomicString>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HeapLinkedStackINS1_6MemberIKNS1_8RuleDataEEEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapLinkedStack<blink::Member<const blink::RuleData> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HeapLinkedStackINS1_6MemberIKNS1_8RuleDataEEEE4NodeEEEPKcv = private unnamed_addr constant [115 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.13 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRulePageEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRulePage>, WTF::VectorTraits<blink::Member<blink::StyleRulePage> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleFontFace>, WTF::VectorTraits<blink::Member<blink::StyleRuleFontFace> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleKeyframesEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleKeyframes>, WTF::VectorTraits<blink::Member<blink::StyleRuleKeyframes> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRulePropertyEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleProperty>, WTF::VectorTraits<blink::Member<blink::StyleRuleProperty> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21StyleRuleCounterStyleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleCounterStyle>, WTF::VectorTraits<blink::Member<blink::StyleRuleCounterStyle> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23StyleRuleScrollTimelineEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleScrollTimeline>, WTF::VectorTraits<blink::Member<blink::StyleRuleScrollTimeline> > >]\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_15MinimalRuleDataENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [140 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::MinimalRuleData, WTF::VectorTraits<blink::MinimalRuleData> >]\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQuerySetResultEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaQuerySetResult]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_IKNS_8RuleDataEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_IKNS1_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [494 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::AtomicString, WTF::KeyValuePair<WTF::AtomicString, blink::Member<blink::HeapVector<blink::Member<const blink::RuleData>, 0> > >, WTF::KeyValuePairKeyExtractor, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::Member<blink::HeapVector<blink::Member<const blink::RuleData>, 0> > > >, WTF::HashTraits<WTF::AtomicString>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberIKNS1_8RuleDataEEELj0EEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<const blink::RuleData>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8RuleDataEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::RuleData>, WTF::VectorTraits<blink::Member<const blink::RuleData> > >]\00", align 1

@_ZN5blink8RuleDataC1EPNS_9StyleRuleEjjj = hidden unnamed_addr alias void (%"class.blink::RuleData"*, %"class.blink::StyleRule"*, i32, i32, i32), void (%"class.blink::RuleData"*, %"class.blink::StyleRule"*, i32, i32, i32)* @_ZN5blink8RuleDataC2EPNS_9StyleRuleEjjj
@_ZN5blink8RuleDataC1ENS0_4TypeEPNS_9StyleRuleEjjj = hidden unnamed_addr alias void (%"class.blink::RuleData"*, i32, %"class.blink::StyleRule"*, i32, i32, i32), void (%"class.blink::RuleData"*, i32, %"class.blink::StyleRule"*, i32, i32, i32)* @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj
@_ZN5blink16ExtendedRuleDataC1EN4base7PassKeyINS_8RuleDataEEEPNS_9StyleRuleEjjjPKNS_14ContainerQueryE = hidden unnamed_addr alias void (%"class.blink::ExtendedRuleData"*, %"class.blink::StyleRule"*, i32, i32, i32, %"class.blink::ContainerQuery"*), void (%"class.blink::ExtendedRuleData"*, %"class.blink::StyleRule"*, i32, i32, i32, %"class.blink::ContainerQuery"*)* @_ZN5blink16ExtendedRuleDataC2EN4base7PassKeyINS_8RuleDataEEEPNS_9StyleRuleEjjjPKNS_14ContainerQueryE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RuleData"* @_ZN5blink8RuleData11MaybeCreateEPNS_9StyleRuleEjjjPKNS_14ContainerQueryE(%"class.blink::StyleRule"*, i32, i32, i32, %"class.blink::ContainerQuery"*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.blink::ContainerQuery"* %4 to i64
  %7 = icmp ugt i32 %1, 8191
  %8 = icmp ugt i32 %2, 262143
  %9 = or i1 %7, %8
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = icmp eq %"class.blink::ContainerQuery"* %4, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 40) #10
  %14 = bitcast i8* %13 to %"class.blink::RuleData"*
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %14, i32 1, %"class.blink::StyleRule"* %0, i32 %1, i32 %2, i32 %3) #10
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8
  br label %20

17:                                               ; preds = %10
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 32) #10
  %19 = bitcast i8* %18 to %"class.blink::RuleData"*
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %19, i32 0, %"class.blink::StyleRule"* %0, i32 %1, i32 %2, i32 %3) #10
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i8* [ %13, %12 ], [ %18, %17 ]
  %22 = phi %"class.blink::RuleData"* [ %14, %12 ], [ %19, %17 ]
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  br label %27

27:                                               ; preds = %20, %5
  %28 = phi %"class.blink::RuleData"* [ null, %5 ], [ %22, %20 ]
  ret %"class.blink::RuleData"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8RuleDataC2EPNS_9StyleRuleEjjj(%"class.blink::RuleData"*, %"class.blink::StyleRule"*, i32, i32, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %0, i32 0, %"class.blink::StyleRule"* %1, i32 %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"*, i32, %"class.blink::StyleRule"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::StyleRule"* %2, %"class.blink::StyleRule"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = and i32 %3, 8191
  %11 = zext i32 %10 to i64
  %12 = and i64 %9, -2147483648
  %13 = shl i32 %4, 13
  %14 = and i32 %13, 2147475456
  %15 = or i32 %14, %10
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  store i64 %17, i64* %8, align 8
  %18 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %2, i64 0, i32 2, i32 0
  %19 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %19, i64 %11
  %21 = tail call i32 @_ZNK5blink11CSSSelector11SpecificityEv(%"class.blink::CSSSelector"* %20) #10
  %22 = load i64, i64* %8, align 8
  %23 = and i32 %21, 16777215
  %24 = zext i32 %23 to i64
  %25 = shl nuw nsw i64 %24, 32
  %26 = and i64 %22, -72057589742960641
  %27 = or i64 %25, %26
  store i64 %27, i64* %8, align 8
  %28 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %29 = and i64 %22, 8191
  %30 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %28, i64 0, i32 2, i32 0
  %31 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %31, i64 %29
  %33 = tail call zeroext i1 @_ZNK5blink11CSSSelector16HasLinkOrVisitedEv(%"class.blink::CSSSelector"* %32) #10
  br i1 %33, label %34, label %38

34:                                               ; preds = %6
  %35 = and i32 %5, 2
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i64 72057594037927936, i64 144115188075855872
  br label %38

38:                                               ; preds = %6, %34
  %39 = phi i64 [ %37, %34 ], [ 216172782113783808, %6 ]
  %40 = load i64, i64* %8, align 8
  %41 = and i64 %40, -504403158265495553
  %42 = and i32 %5, 1
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 58
  %45 = or i64 %39, %44
  %46 = or i64 %45, %41
  store i64 %46, i64* %8, align 8
  %47 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %48 = and i64 %40, 8191
  %49 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %47, i64 0, i32 2, i32 0
  %50 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %50, i64 %48
  %52 = icmp eq %"class.blink::CSSSelector"* %51, null
  br i1 %52, label %97, label %53

53:                                               ; preds = %38, %88
  %54 = phi %"class.blink::CSSSelector"* [ %91, %88 ], [ %51, %38 ]
  %55 = bitcast %"class.blink::CSSSelector"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 240
  %58 = icmp eq i32 %57, 80
  br i1 %58, label %59, label %84

59:                                               ; preds = %53
  %60 = and i32 %56, 262144
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %54, i64 0, i32 1
  br i1 %61, label %67, label %63

63:                                               ; preds = %59
  %64 = bitcast %"union.blink::CSSSelector::DataUnion"* %62 to %"struct.blink::CSSSelector::RareData"**
  %65 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %65, i64 0, i32 1
  br label %69

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %62, i64 0, i32 0
  br label %69

69:                                               ; preds = %67, %63
  %70 = phi %"class.WTF::AtomicString"* [ %66, %63 ], [ %68, %67 ]
  %71 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue to i8*) acquire, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %77, !prof !2

73:                                               ; preds = %69
  %74 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue) #10
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue) #10
  br label %77

77:                                               ; preds = %76, %73, %69
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12TextTrackCue17CueShadowPseudoIdEvE5s_cue to %"class.WTF::StringImpl"**), align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %79, %80
  br i1 %81, label %93, label %82

82:                                               ; preds = %77
  %83 = load i32, i32* %55, align 8
  br label %84

84:                                               ; preds = %82, %53
  %85 = phi i32 [ %83, %82 ], [ %56, %53 ]
  %86 = lshr i32 %85, 8
  %87 = trunc i32 %86 to i8
  switch i8 %87, label %88 [
    i8 90, label %93
    i8 9, label %95
    i8 8, label %96
    i8 48, label %97
    i8 75, label %92
    i8 107, label %92
  ]

88:                                               ; preds = %84
  %89 = and i32 %85, 131072
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %54, i64 1
  br i1 %90, label %53, label %93

92:                                               ; preds = %84, %84
  br label %97

93:                                               ; preds = %88, %84, %77
  %94 = phi i64 [ 576460752303423488, %84 ], [ 576460752303423488, %77 ], [ 0, %88 ]
  br label %97

95:                                               ; preds = %84
  br label %97

96:                                               ; preds = %84
  br label %97

97:                                               ; preds = %84, %96, %95, %93, %38, %92
  %98 = phi i64 [ 2882303761517117440, %92 ], [ 0, %38 ], [ %94, %93 ], [ 1152921504606846976, %95 ], [ 1729382256910270464, %96 ], [ 2305843009213693952, %84 ]
  %99 = load i64, i64* %8, align 8
  %100 = and i64 %98, 4035225266123964416
  %101 = and i64 %99, -8646911284551352321
  %102 = and i32 %1, 1
  %103 = zext i32 %102 to i64
  %104 = shl nuw nsw i64 %103, 62
  %105 = or i64 %100, %104
  %106 = or i64 %105, %101
  store i64 %106, i64* %8, align 8
  %107 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 0, i32 2
  %108 = bitcast [4 x i32]* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false)
  %109 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %110 = and i64 %99, 8191
  %111 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %109, i64 0, i32 2, i32 0
  %112 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %112, i64 %110
  %114 = getelementptr inbounds [4 x i32], [4 x i32]* %107, i64 0, i64 0
  tail call void @_ZN5blink14SelectorFilter23CollectIdentifierHashesERKNS_11CSSSelectorEPjj(%"class.blink::CSSSelector"* dereferenceable(16) %113, i32* %114, i32 4) #10
  ret void
}

declare i32 @_ZNK5blink11CSSSelector11SpecificityEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14SelectorFilter23CollectIdentifierHashesERKNS_11CSSSelectorEPjj(%"class.blink::CSSSelector"* dereferenceable(16), i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* nocapture readnone, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HeapHashMap.160"* dereferenceable(24), %"class.blink::RuleData"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store i8* null, i8** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160"* %2, i64 0, i32 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair.166"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.164"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %1, i8** nonnull dereferenceable(8) %5) #10
  %9 = extractvalue { %"struct.WTF::KeyValuePair.166"*, i8 } %8, 0
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %9, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %11 = getelementptr inbounds %"class.blink::Member.167", %"class.blink::Member.167"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::HeapLinkedStack"*, %"class.blink::HeapLinkedStack"** %11, align 8
  %13 = icmp eq %"class.blink::HeapLinkedStack"* %12, null
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEEEPhm(i64 16) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  %16 = getelementptr inbounds i8, i8* %15, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = ptrtoint i8* %15 to i64
  %21 = bitcast %"class.blink::Member.167"* %10 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to %"class.blink::HeapLinkedStack"*
  br i1 %23, label %28, label %25

25:                                               ; preds = %14
  %26 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #10
  %27 = load %"class.blink::HeapLinkedStack"*, %"class.blink::HeapLinkedStack"** %11, align 8
  br label %28

28:                                               ; preds = %4, %25, %14
  %29 = phi %"class.blink::HeapLinkedStack"* [ %12, %4 ], [ %27, %25 ], [ %24, %14 ]
  %30 = ptrtoint %"class.blink::RuleData"* %3 to i64
  %31 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEEEPhm(i64 16) #10
  %32 = bitcast %"class.blink::HeapLinkedStack"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %31 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = ptrtoint i8* %31 to i64
  store atomic i64 %41, i64* %32 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %28
  %45 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #10
  br label %46

46:                                               ; preds = %28, %44
  %47 = getelementptr inbounds %"class.blink::HeapLinkedStack", %"class.blink::HeapLinkedStack"* %29, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink7RuleSet21FindBestRuleSetAndAddERKNS_11CSSSelectorEPNS_8RuleDataE(%"class.blink::RuleSet"*, %"class.blink::CSSSelector"* dereferenceable(16), %"class.blink::RuleData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RuleData"*, align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca i32, align 4
  store %"class.blink::RuleData"* %2, %"class.blink::RuleData"** %4, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #10
  store i32 0, i32* %10, align 4
  %22 = icmp eq %"class.blink::CSSSelector"* %1, null
  br i1 %22, label %67, label %23

23:                                               ; preds = %3, %29
  %24 = phi %"class.blink::CSSSelector"* [ %33, %29 ], [ %1, %3 ]
  %25 = bitcast %"class.blink::CSSSelector"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %27, 0
  call fastcc void @_ZN5blinkL21ExtractSelectorValuesEPKNS_11CSSSelectorERN3WTF12AtomicStringES5_S5_S5_S5_RNS0_10PseudoTypeE(%"class.blink::CSSSelector"* nonnull %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10)
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = load i32, i32* %25, align 8
  %31 = and i32 %30, 131072
  %32 = icmp ne i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %24, i64 1
  %34 = icmp eq %"class.blink::CSSSelector"* %33, null
  %35 = or i1 %34, %32
  br i1 %35, label %36, label %23

36:                                               ; preds = %23, %29
  %37 = phi %"class.blink::CSSSelector"* [ %24, %23 ], [ null, %29 ]
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %46 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %46, align 8
  %48 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %47, null
  br i1 %48, label %49, label %63

49:                                               ; preds = %44
  %50 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %51 = getelementptr inbounds i8, i8* %50, i64 -4
  %52 = bitcast i8* %51 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 96, i1 false) #10
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = ptrtoint i8* %50 to i64
  %56 = bitcast %"class.blink::Member.156"* %45 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  %59 = bitcast i8* %50 to %"class.blink::RuleSet::PendingRuleMaps"*
  br i1 %58, label %63, label %60

60:                                               ; preds = %49
  %61 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #10
  %62 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %46, align 8
  br label %63

63:                                               ; preds = %44, %49, %60
  %64 = phi %"class.blink::RuleSet::PendingRuleMaps"* [ %47, %44 ], [ %62, %60 ], [ %59, %49 ]
  %65 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %64, i64 0, i32 0
  %66 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %4, align 8
  call void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* undef, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::HeapHashMap.160"* dereferenceable(24) %65, %"class.blink::RuleData"* %66)
  br label %388

67:                                               ; preds = %3, %36, %40
  %68 = phi %"class.blink::CSSSelector"* [ %37, %36 ], [ %37, %40 ], [ null, %3 ]
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %98, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %98, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %77 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %77, align 8
  %79 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %78, null
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %82 = getelementptr inbounds i8, i8* %81, i64 -4
  %83 = bitcast i8* %82 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 96, i1 false) #10
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = or i16 %84, 1
  store atomic i16 %85, i16* %83 release, align 2
  %86 = ptrtoint i8* %81 to i64
  %87 = bitcast %"class.blink::Member.156"* %76 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  %90 = bitcast i8* %81 to %"class.blink::RuleSet::PendingRuleMaps"*
  br i1 %89, label %94, label %91

91:                                               ; preds = %80
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #10
  %93 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %77, align 8
  br label %94

94:                                               ; preds = %75, %80, %91
  %95 = phi %"class.blink::RuleSet::PendingRuleMaps"* [ %78, %75 ], [ %93, %91 ], [ %90, %80 ]
  %96 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %95, i64 0, i32 1
  %97 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %4, align 8
  call void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* undef, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.blink::HeapHashMap.160"* dereferenceable(24) %96, %"class.blink::RuleData"* %97)
  br label %388

98:                                               ; preds = %67, %71
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %128, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %128, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %107 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %107, align 8
  %109 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %108, null
  br i1 %109, label %110, label %124

110:                                              ; preds = %105
  %111 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %112 = getelementptr inbounds i8, i8* %111, i64 -4
  %113 = bitcast i8* %112 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 96, i1 false) #10
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  %116 = ptrtoint i8* %111 to i64
  %117 = bitcast %"class.blink::Member.156"* %106 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  %120 = bitcast i8* %111 to %"class.blink::RuleSet::PendingRuleMaps"*
  br i1 %119, label %124, label %121

121:                                              ; preds = %110
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #10
  %123 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %107, align 8
  br label %124

124:                                              ; preds = %105, %110, %121
  %125 = phi %"class.blink::RuleSet::PendingRuleMaps"* [ %108, %105 ], [ %123, %121 ], [ %120, %110 ]
  %126 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %125, i64 0, i32 3
  %127 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %4, align 8
  call void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* undef, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::HeapHashMap.160"* dereferenceable(24) %126, %"class.blink::RuleData"* %127)
  br label %388

128:                                              ; preds = %98, %101
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %159, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %159, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0
  %137 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %138, %140
  br i1 %141, label %158, label %142, !prof !3

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %136, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %143, align 8
  %145 = zext i32 %138 to i64
  %146 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %144, i64 %145
  %147 = bitcast %"class.blink::RuleData"** %4 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.blink::Member.57"* %146 to i64*
  store atomic i64 %148, i64* %149 monotonic, align 8
  %150 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %142
  %153 = inttoptr i64 %148 to i8*
  %154 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #10
  br label %155

155:                                              ; preds = %152, %142
  %156 = load i32, i32* %137, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %137, align 4
  br label %388

158:                                              ; preds = %135
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %136, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

159:                                              ; preds = %128, %131
  %160 = load i32, i32* %10, align 4
  switch i32 %160, label %358 [
    i32 90, label %161
    i32 16, label %185
    i32 17, label %185
    i32 21, label %185
    i32 22, label %185
    i32 98, label %209
    i32 28, label %233
    i32 29, label %257
    i32 53, label %281
    i32 54, label %281
    i32 95, label %334
    i32 96, label %334
  ]

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5, i32 0
  %163 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %164, %166
  br i1 %167, label %184, label %168, !prof !3

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %162, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %169, align 8
  %171 = zext i32 %164 to i64
  %172 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %170, i64 %171
  %173 = bitcast %"class.blink::RuleData"** %4 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.blink::Member.57"* %172 to i64*
  store atomic i64 %174, i64* %175 monotonic, align 8
  %176 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %168
  %179 = inttoptr i64 %174 to i8*
  %180 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %179) #10
  br label %181

181:                                              ; preds = %178, %168
  %182 = load i32, i32* %163, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %163, align 4
  br label %388

184:                                              ; preds = %161
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %162, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

185:                                              ; preds = %159, %159, %159, %159
  %186 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4, i32 0
  %187 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %208, label %192, !prof !3

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %186, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %193, align 8
  %195 = zext i32 %188 to i64
  %196 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %194, i64 %195
  %197 = bitcast %"class.blink::RuleData"** %4 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.blink::Member.57"* %196 to i64*
  store atomic i64 %198, i64* %199 monotonic, align 8
  %200 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %192
  %203 = inttoptr i64 %198 to i8*
  %204 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %203) #10
  br label %205

205:                                              ; preds = %202, %192
  %206 = load i32, i32* %187, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %187, align 4
  br label %388

208:                                              ; preds = %185
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %186, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

209:                                              ; preds = %159
  %210 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8, i32 0
  %211 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %232, label %216, !prof !3

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %210, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %217, align 8
  %219 = zext i32 %212 to i64
  %220 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %218, i64 %219
  %221 = bitcast %"class.blink::RuleData"** %4 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member.57"* %220 to i64*
  store atomic i64 %222, i64* %223 monotonic, align 8
  %224 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %216
  %227 = inttoptr i64 %222 to i8*
  %228 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %227) #10
  br label %229

229:                                              ; preds = %226, %216
  %230 = load i32, i32* %211, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %211, align 4
  br label %388

232:                                              ; preds = %209
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %210, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

233:                                              ; preds = %159
  %234 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6, i32 0
  %235 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %236, %238
  br i1 %239, label %256, label %240, !prof !3

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %234, i64 0, i32 0, i32 0, i32 0
  %242 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %241, align 8
  %243 = zext i32 %236 to i64
  %244 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %242, i64 %243
  %245 = bitcast %"class.blink::RuleData"** %4 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::Member.57"* %244 to i64*
  store atomic i64 %246, i64* %247 monotonic, align 8
  %248 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %240
  %251 = inttoptr i64 %246 to i8*
  %252 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %251) #10
  br label %253

253:                                              ; preds = %250, %240
  %254 = load i32, i32* %235, align 4
  %255 = add i32 %254, 1
  store i32 %255, i32* %235, align 4
  br label %388

256:                                              ; preds = %233
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %234, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

257:                                              ; preds = %159
  %258 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7, i32 0
  %259 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %260, %262
  br i1 %263, label %280, label %264, !prof !3

264:                                              ; preds = %257
  %265 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %258, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %265, align 8
  %267 = zext i32 %260 to i64
  %268 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %266, i64 %267
  %269 = bitcast %"class.blink::RuleData"** %4 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.blink::Member.57"* %268 to i64*
  store atomic i64 %270, i64* %271 monotonic, align 8
  %272 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %264
  %275 = inttoptr i64 %270 to i8*
  %276 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %275) #10
  br label %277

277:                                              ; preds = %274, %264
  %278 = load i32, i32* %259, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %259, align 4
  br label %388

280:                                              ; preds = %257
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %258, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

281:                                              ; preds = %159, %159
  %282 = tail call zeroext i1 @_ZNK5blink11CSSSelector11FollowsPartEv(%"class.blink::CSSSelector"* %68) #10
  br i1 %282, label %283, label %307

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0
  %285 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %288 = load i32, i32* %287, align 8
  %289 = icmp eq i32 %286, %288
  br i1 %289, label %306, label %290, !prof !3

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %284, i64 0, i32 0, i32 0, i32 0
  %292 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %291, align 8
  %293 = zext i32 %286 to i64
  %294 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %292, i64 %293
  %295 = bitcast %"class.blink::RuleData"** %4 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.blink::Member.57"* %294 to i64*
  store atomic i64 %296, i64* %297 monotonic, align 8
  %298 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %303, label %300

300:                                              ; preds = %290
  %301 = inttoptr i64 %296 to i8*
  %302 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %301) #10
  br label %303

303:                                              ; preds = %300, %290
  %304 = load i32, i32* %285, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %285, align 4
  br label %388

306:                                              ; preds = %283
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %284, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

307:                                              ; preds = %281
  %308 = icmp eq i32 %160, 54
  %309 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoFileUploadButtonE, align 8
  %310 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, align 8
  %311 = select i1 %308, %"class.WTF::AtomicString"* %309, %"class.WTF::AtomicString"* %310
  %312 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %313 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %312, i64 0, i32 0, i32 0
  %314 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %313, align 8
  %315 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %314, null
  br i1 %315, label %316, label %330

316:                                              ; preds = %307
  %317 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %318 = getelementptr inbounds i8, i8* %317, i64 -4
  %319 = bitcast i8* %318 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 96, i1 false) #10
  %320 = load atomic i16, i16* %319 monotonic, align 2
  %321 = or i16 %320, 1
  store atomic i16 %321, i16* %319 release, align 2
  %322 = ptrtoint i8* %317 to i64
  %323 = bitcast %"class.blink::Member.156"* %312 to i64*
  store atomic i64 %322, i64* %323 monotonic, align 8
  %324 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %325 = icmp eq i32 %324, 0
  %326 = bitcast i8* %317 to %"class.blink::RuleSet::PendingRuleMaps"*
  br i1 %325, label %330, label %327

327:                                              ; preds = %316
  %328 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %317) #10
  %329 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %313, align 8
  br label %330

330:                                              ; preds = %307, %316, %327
  %331 = phi %"class.blink::RuleSet::PendingRuleMaps"* [ %314, %307 ], [ %329, %327 ], [ %326, %316 ]
  %332 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %331, i64 0, i32 3
  %333 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %4, align 8
  tail call void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* undef, %"class.WTF::AtomicString"* dereferenceable(8) %311, %"class.blink::HeapHashMap.160"* dereferenceable(24) %332, %"class.blink::RuleData"* %333)
  br label %388

334:                                              ; preds = %159, %159
  %335 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10, i32 0
  %336 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %339 = load i32, i32* %338, align 8
  %340 = icmp eq i32 %337, %339
  br i1 %340, label %357, label %341, !prof !3

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %335, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %342, align 8
  %344 = zext i32 %337 to i64
  %345 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %343, i64 %344
  %346 = bitcast %"class.blink::RuleData"** %4 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.blink::Member.57"* %345 to i64*
  store atomic i64 %347, i64* %348 monotonic, align 8
  %349 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %354, label %351

351:                                              ; preds = %341
  %352 = inttoptr i64 %347 to i8*
  %353 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %352) #10
  br label %354

354:                                              ; preds = %351, %341
  %355 = load i32, i32* %336, align 4
  %356 = add i32 %355, 1
  store i32 %356, i32* %336, align 4
  br label %388

357:                                              ; preds = %334
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %335, %"class.blink::RuleData"** nonnull dereferenceable(8) %4) #10
  br label %388

358:                                              ; preds = %159
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %388, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %388, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %367 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %366, i64 0, i32 0, i32 0
  %368 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %367, align 8
  %369 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %368, null
  br i1 %369, label %370, label %384

370:                                              ; preds = %365
  %371 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %372 = getelementptr inbounds i8, i8* %371, i64 -4
  %373 = bitcast i8* %372 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %371, i8 0, i64 96, i1 false) #10
  %374 = load atomic i16, i16* %373 monotonic, align 2
  %375 = or i16 %374, 1
  store atomic i16 %375, i16* %373 release, align 2
  %376 = ptrtoint i8* %371 to i64
  %377 = bitcast %"class.blink::Member.156"* %366 to i64*
  store atomic i64 %376, i64* %377 monotonic, align 8
  %378 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %379 = icmp eq i32 %378, 0
  %380 = bitcast i8* %371 to %"class.blink::RuleSet::PendingRuleMaps"*
  br i1 %379, label %384, label %381

381:                                              ; preds = %370
  %382 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %371) #10
  %383 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %367, align 8
  br label %384

384:                                              ; preds = %365, %370, %381
  %385 = phi %"class.blink::RuleSet::PendingRuleMaps"* [ %368, %365 ], [ %383, %381 ], [ %380, %370 ]
  %386 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %385, i64 0, i32 2
  %387 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %4, align 8
  call void @_ZN5blink7RuleSet12AddToRuleSetERKN3WTF12AtomicStringERNS_11HeapHashMapIS2_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEENS1_16AtomicStringHashENS1_10HashTraitsIS2_EENSE_ISC_EEEEPS9_(%"class.blink::RuleSet"* undef, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.blink::HeapHashMap.160"* dereferenceable(24) %386, %"class.blink::RuleData"* %387)
  br label %388

388:                                              ; preds = %358, %357, %354, %306, %303, %280, %277, %256, %253, %232, %229, %208, %205, %184, %181, %158, %155, %361, %330, %384, %124, %94, %63
  %389 = phi i1 [ true, %384 ], [ true, %124 ], [ true, %94 ], [ true, %63 ], [ true, %330 ], [ false, %361 ], [ true, %155 ], [ true, %158 ], [ true, %181 ], [ true, %184 ], [ true, %205 ], [ true, %208 ], [ true, %229 ], [ true, %232 ], [ true, %253 ], [ true, %256 ], [ true, %277 ], [ true, %280 ], [ true, %303 ], [ true, %306 ], [ true, %354 ], [ true, %357 ], [ false, %358 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #10
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %391 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %391, label %405, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  br i1 %396, label %399, label %401

399:                                              ; preds = %392
  %400 = add i32 %398, -1
  store i32 %400, i32* %397, align 4
  br label %401

401:                                              ; preds = %399, %392
  %402 = phi i32 [ %400, %399 ], [ %398, %392 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #10
  br label %405

405:                                              ; preds = %388, %401, %404
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #10
  br label %421

421:                                              ; preds = %405, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #10
  br label %437

437:                                              ; preds = %421, %433, %436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #10
  br label %453

453:                                              ; preds = %437, %449, %452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %469, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  br i1 %460, label %463, label %465

463:                                              ; preds = %456
  %464 = add i32 %462, -1
  store i32 %464, i32* %461, align 4
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i32 [ %464, %463 ], [ %462, %456 ]
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #10
  br label %469

469:                                              ; preds = %453, %465, %468
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret i1 %389
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL21ExtractSelectorValuesEPKNS_11CSSSelectorERN3WTF12AtomicStringES5_S5_S5_S5_RNS0_10PseudoTypeE(%"class.blink::CSSSelector"* nocapture readonly, %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8), i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %8 = bitcast %"class.blink::CSSSelector"* %0 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 4
  %11 = and i32 %10, 15
  switch i32 %11, label %269 [
    i32 2, label %12
    i32 3, label %63
    i32 1, label %114
    i32 4, label %162
    i32 5, label %162
    i32 6, label %162
  ]

12:                                               ; preds = %7
  %13 = and i32 %9, 262144
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  br i1 %14, label %20, label %16

16:                                               ; preds = %12
  %17 = bitcast %"union.blink::CSSSelector::DataUnion"* %15 to %"struct.blink::CSSSelector::RareData"**
  %18 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %18, i64 0, i32 1
  br label %22

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %15, i64 0, i32 0
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.WTF::AtomicString"* [ %19, %16 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %27, %22
  %45 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %46 = bitcast %"class.WTF::AtomicString"* %1 to i64*
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %269, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %269

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %269

63:                                               ; preds = %7
  %64 = and i32 %9, 262144
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  br i1 %65, label %71, label %67

67:                                               ; preds = %63
  %68 = bitcast %"union.blink::CSSSelector::DataUnion"* %66 to %"struct.blink::CSSSelector::RareData"**
  %69 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %69, i64 0, i32 1
  br label %73

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %66, i64 0, i32 0
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi %"class.WTF::AtomicString"* [ %70, %67 ], [ %72, %71 ]
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #10
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #10
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %73
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  store i64 %96, i64* %97, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %269, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %269

113:                                              ; preds = %110
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #10
  br label %269

114:                                              ; preds = %7
  %115 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %116 = bitcast %"union.blink::CSSSelector::DataUnion"* %115 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %118, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %120, %122
  br i1 %123, label %269, label %124

124:                                              ; preds = %114
  %125 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #10
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %131
  tail call void @llvm.trap() #10
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %141, %126, %124
  %144 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  %145 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %146 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  store i64 %144, i64* %145, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %269, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %269

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #10
  br label %269

162:                                              ; preds = %7, %7, %7
  %163 = lshr i32 %9, 8
  %164 = trunc i32 %163 to i8
  switch i8 %164, label %269 [
    i8 90, label %165
    i8 16, label %165
    i8 17, label %165
    i8 22, label %165
    i8 21, label %165
    i8 28, label %165
    i8 29, label %165
    i8 53, label %165
    i8 54, label %165
    i8 95, label %165
    i8 96, label %165
    i8 98, label %165
    i8 88, label %167
    i8 89, label %167
    i8 14, label %218
  ]

165:                                              ; preds = %162, %162, %162, %162, %162, %162, %162, %162, %162, %162, %162, %162
  %166 = and i32 %163, 255
  store i32 %166, i32* %6, align 4
  br label %269

167:                                              ; preds = %162, %162
  %168 = and i32 %9, 262144
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  br i1 %169, label %175, label %171

171:                                              ; preds = %167
  %172 = bitcast %"union.blink::CSSSelector::DataUnion"* %170 to %"struct.blink::CSSSelector::RareData"**
  %173 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %172, align 8
  %174 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %173, i64 0, i32 1
  br label %177

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %170, i64 0, i32 0
  br label %177

177:                                              ; preds = %171, %175
  %178 = phi %"class.WTF::AtomicString"* [ %174, %171 ], [ %176, %175 ]
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %199, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #10
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %187
  tail call void @llvm.trap() #10
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %182, %177
  %200 = ptrtoint %"class.WTF::StringImpl"* %180 to i64
  %201 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %202 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  store i64 %200, i64* %201, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %269, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %269

217:                                              ; preds = %214
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #10
  br label %269

218:                                              ; preds = %162
  %219 = and i32 %9, 262144
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  br i1 %220, label %226, label %222

222:                                              ; preds = %218
  %223 = bitcast %"union.blink::CSSSelector::DataUnion"* %221 to %"struct.blink::CSSSelector::RareData"**
  %224 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %223, align 8
  %225 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %224, i64 0, i32 1
  br label %228

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %221, i64 0, i32 0
  br label %228

228:                                              ; preds = %222, %226
  %229 = phi %"class.WTF::AtomicString"* [ %225, %222 ], [ %227, %226 ]
  %230 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %250, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %250

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = zext i32 %240 to i33
  %242 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %241, i33 1) #10
  %243 = extractvalue { i33, i1 } %242, 1
  %244 = extractvalue { i33, i1 } %242, 0
  %245 = icmp slt i33 %244, 0
  %246 = or i1 %243, %245
  br i1 %246, label %247, label %248, !prof !3

247:                                              ; preds = %238
  tail call void @llvm.trap() #10
  unreachable

248:                                              ; preds = %238
  %249 = trunc i33 %244 to i32
  store i32 %249, i32* %239, align 4
  br label %250

250:                                              ; preds = %248, %233, %228
  %251 = ptrtoint %"class.WTF::StringImpl"* %231 to i64
  %252 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %253 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  store i64 %251, i64* %252, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #10
  br label %269

269:                                              ; preds = %114, %268, %265, %250, %217, %214, %199, %161, %158, %143, %113, %110, %95, %62, %59, %44, %7, %165, %162
  ret void
}

declare zeroext i1 @_ZNK5blink11CSSSelector11FollowsPartEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet7AddRuleEPNS_9StyleRuleEjjPKNS_14ContainerQueryE(%"class.blink::RuleSet"*, %"class.blink::StyleRule"*, i32, i32, %"class.blink::ContainerQuery"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::RuleData"*, align 8
  %7 = alloca %"class.blink::RuleData"*, align 8
  %8 = bitcast %"class.blink::RuleData"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store %"class.blink::RuleData"* inttoptr (i64 -6148914691236517206 to %"class.blink::RuleData"*), %"class.blink::RuleData"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 22
  %10 = load i32, i32* %9, align 8
  %11 = ptrtoint %"class.blink::ContainerQuery"* %4 to i64
  %12 = icmp ugt i32 %2, 8191
  %13 = icmp ugt i32 %10, 262143
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %5
  store %"class.blink::RuleData"* null, %"class.blink::RuleData"** %6, align 8
  br label %125

16:                                               ; preds = %5
  %17 = icmp eq %"class.blink::ContainerQuery"* %4, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 40) #10
  %20 = bitcast i8* %19 to %"class.blink::RuleData"*
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %20, i32 1, %"class.blink::StyleRule"* %1, i32 %2, i32 %10, i32 %3) #10
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i64*
  store i64 %11, i64* %22, align 8
  br label %26

23:                                               ; preds = %16
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 32) #10
  %25 = bitcast i8* %24 to %"class.blink::RuleData"*
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %25, i32 0, %"class.blink::StyleRule"* %1, i32 %2, i32 %10, i32 %3) #10
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi i8* [ %19, %18 ], [ %24, %23 ]
  %28 = phi %"class.blink::RuleData"* [ %20, %18 ], [ %25, %23 ]
  %29 = getelementptr inbounds i8, i8* %27, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast %"class.blink::RuleData"** %6 to i8**
  store i8* %27, i8** %33, align 8
  %34 = icmp eq %"class.blink::RuleData"* %28, null
  %35 = ptrtoint %"class.blink::RuleData"* %28 to i64
  br i1 %34, label %125, label %36

36:                                               ; preds = %26
  %37 = load i32, i32* %9, align 8
  %38 = add i32 %37, 1
  store i32 %38, i32* %9, align 8
  %39 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 13
  %40 = tail call i32 @_ZN5blink14RuleFeatureSet27CollectFeaturesFromRuleDataEPKNS_8RuleDataE(%"class.blink::RuleFeatureSet"* %39, %"class.blink::RuleData"* nonnull %28) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %125, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %28, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %28, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 8191
  %48 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %44, i64 0, i32 2, i32 0
  %49 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %49, i64 %47
  %51 = tail call zeroext i1 @_ZN5blink7RuleSet21FindBestRuleSetAndAddERKNS_11CSSSelectorEPNS_8RuleDataE(%"class.blink::RuleSet"* %0, %"class.blink::CSSSelector"* dereferenceable(16) %50, %"class.blink::RuleData"* nonnull %28)
  br i1 %51, label %73, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9, i32 0
  %54 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %72, label %59, !prof !3

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %53, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %61, i64 %62
  %64 = bitcast %"class.blink::Member.57"* %63 to i64*
  store atomic i64 %35, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %59
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #10
  br label %69

69:                                               ; preds = %67, %59
  %70 = load i32, i32* %54, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %54, align 4
  br label %73

72:                                               ; preds = %52
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %53, %"class.blink::RuleData"** nonnull dereferenceable(8) %6) #10
  br label %73

73:                                               ; preds = %72, %69, %42
  %74 = load %"class.blink::RuleData"*, %"class.blink::RuleData"** %6, align 8
  %75 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %74, i64 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 216172782113783808
  %78 = icmp eq i64 %77, 72057594037927936
  br i1 %78, label %79, label %125

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::RuleData"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  store %"class.blink::RuleData"* inttoptr (i64 -6148914691236517206 to %"class.blink::RuleData"*), %"class.blink::RuleData"** %7, align 8
  %81 = trunc i64 %76 to i32
  %82 = and i32 %81, 8191
  %83 = lshr i64 %76, 13
  %84 = trunc i64 %83 to i32
  %85 = and i32 %84, 262143
  %86 = or i32 %3, 2
  br i1 %17, label %92, label %87

87:                                               ; preds = %79
  %88 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 40) #10
  %89 = bitcast i8* %88 to %"class.blink::RuleData"*
  call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %89, i32 1, %"class.blink::StyleRule"* %1, i32 %82, i32 %85, i32 %86) #10
  %90 = getelementptr inbounds i8, i8* %88, i64 32
  %91 = bitcast i8* %90 to i64*
  store i64 %11, i64* %91, align 8
  br label %95

92:                                               ; preds = %79
  %93 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64 32) #10
  %94 = bitcast i8* %93 to %"class.blink::RuleData"*
  call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %94, i32 0, %"class.blink::StyleRule"* %1, i32 %82, i32 %85, i32 %86) #10
  br label %95

95:                                               ; preds = %87, %92
  %96 = phi i8* [ %88, %87 ], [ %93, %92 ]
  %97 = phi %"class.blink::RuleData"* [ %89, %87 ], [ %94, %92 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  %102 = bitcast %"class.blink::RuleData"** %7 to i8**
  store i8* %96, i8** %102, align 8
  %103 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12, i32 0
  %104 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %123, label %109, !prof !3

109:                                              ; preds = %95
  %110 = ptrtoint %"class.blink::RuleData"* %97 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %103, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %111, align 8
  %113 = zext i32 %105 to i64
  %114 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %112, i64 %113
  %115 = bitcast %"class.blink::Member.57"* %114 to i64*
  store atomic i64 %110, i64* %115 monotonic, align 8
  %116 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  %119 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #10
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %104, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %104, align 4
  br label %124

123:                                              ; preds = %95
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"* %103, %"class.blink::RuleData"** nonnull dereferenceable(8) %7) #10
  br label %124

124:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  br label %125

125:                                              ; preds = %15, %73, %124, %36, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

declare i32 @_ZN5blink14RuleFeatureSet27CollectFeaturesFromRuleDataEPKNS_8RuleDataE(%"class.blink::RuleFeatureSet"*, %"class.blink::RuleData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet11AddPageRuleEPNS_13StyleRulePageE(%"class.blink::RuleSet"*, %"class.blink::StyleRulePage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRulePage"*, align 8
  store %"class.blink::StyleRulePage"* %1, %"class.blink::StyleRulePage"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRulePage"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.92"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.89"* %21, %"class.blink::StyleRulePage"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet15AddFontFaceRuleEPNS_17StyleRuleFontFaceE(%"class.blink::RuleSet"*, %"class.blink::StyleRuleFontFace"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleFontFace"*, align 8
  store %"class.blink::StyleRuleFontFace"* %1, %"class.blink::StyleRuleFontFace"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.100", %"class.blink::Member.100"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRuleFontFace"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.100"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.97"* %21, %"class.blink::StyleRuleFontFace"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet16AddKeyframesRuleEPNS_18StyleRuleKeyframesE(%"class.blink::RuleSet"*, %"class.blink::StyleRuleKeyframes"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleKeyframes"*, align 8
  store %"class.blink::StyleRuleKeyframes"* %1, %"class.blink::StyleRuleKeyframes"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.108", %"class.blink::Member.108"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRuleKeyframes"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.108"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.105"* %21, %"class.blink::StyleRuleKeyframes"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet15AddPropertyRuleEPNS_17StyleRulePropertyE(%"class.blink::RuleSet"*, %"class.blink::StyleRuleProperty"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleProperty"*, align 8
  store %"class.blink::StyleRuleProperty"* %1, %"class.blink::StyleRuleProperty"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.125", %"class.blink::Member.125"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRuleProperty"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.125"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.122"* %21, %"class.blink::StyleRuleProperty"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet19AddCounterStyleRuleEPNS_21StyleRuleCounterStyleE(%"class.blink::RuleSet"*, %"class.blink::StyleRuleCounterStyle"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleCounterStyle"*, align 8
  store %"class.blink::StyleRuleCounterStyle"* %1, %"class.blink::StyleRuleCounterStyle"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.133", %"class.blink::Member.133"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRuleCounterStyle"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.133"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.130"* %21, %"class.blink::StyleRuleCounterStyle"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet21AddScrollTimelineRuleEPNS_23StyleRuleScrollTimelineE(%"class.blink::RuleSet"*, %"class.blink::StyleRuleScrollTimeline"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleScrollTimeline"*, align 8
  store %"class.blink::StyleRuleScrollTimeline"* %1, %"class.blink::StyleRuleScrollTimeline"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"class.blink::Member.156", %"class.blink::Member.156"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64 96) #10
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #10
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = ptrtoint i8* %9 to i64
  %15 = bitcast %"class.blink::Member.156"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %20

20:                                               ; preds = %2, %8, %18
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19, i32 0
  %22 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %43, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.141", %"class.blink::Member.141"* %29, i64 %30
  %32 = bitcast %"class.blink::StyleRuleScrollTimeline"** %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::Member.141"* %31 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %33 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #10
  br label %40

40:                                               ; preds = %37, %27
  %41 = load i32, i32* %22, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %22, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.138"* %21, %"class.blink::StyleRuleScrollTimeline"** nonnull dereferenceable(8) %3) #10
  br label %44

44:                                               ; preds = %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet13AddChildRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERKNS_19MediaQueryEvaluatorEjPKNS_14ContainerQueryE(%"class.blink::RuleSet"*, %"class.blink::HeapVector.177"* dereferenceable(16), %"class.blink::MediaQueryEvaluator"* dereferenceable(24), i32, %"class.blink::ContainerQuery"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::MinimalRuleData", align 8
  %7 = getelementptr inbounds %"class.blink::HeapVector.177", %"class.blink::HeapVector.177"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HeapVector.177", %"class.blink::HeapVector.177"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20, i32 0
  %13 = bitcast %"class.blink::MinimalRuleData"* %6 to i8*
  %14 = bitcast %"class.blink::MinimalRuleData"* %6 to %"class.blink::StyleRuleBase"**
  %15 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %6, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %12, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast i32* %15 to i64*
  br label %22

21:                                               ; preds = %151, %5
  ret void

22:                                               ; preds = %10, %151
  %23 = phi i32 [ 0, %10 ], [ %152, %151 ]
  %24 = call dereferenceable(8) %"class.blink::Member.183"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.180"* %11, i32 %23) #10
  %25 = getelementptr inbounds %"class.blink::Member.183", %"class.blink::Member.183"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %25, align 8
  %27 = icmp eq %"class.blink::StyleRuleBase"* %26, null
  br i1 %27, label %151, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 0, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRule"*
  switch i8 %30, label %151 [
    i8 1, label %32
    i8 5, label %118
    i8 3, label %120
    i8 4, label %128
    i8 7, label %130
    i8 6, label %132
    i8 11, label %134
    i8 12, label %136
    i8 13, label %138
    i8 10, label %145
  ]

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 8
  %34 = bitcast %"class.blink::StyleRuleBase"* %33 to %"class.blink::CSSSelector"**
  %35 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %34, align 8
  %36 = icmp eq %"class.blink::CSSSelector"* %35, null
  br i1 %36, label %151, label %37

37:                                               ; preds = %32
  %38 = ptrtoint %"class.blink::CSSSelector"* %35 to i64
  %39 = bitcast %"class.blink::StyleRuleBase"* %33 to i64*
  %40 = ptrtoint %"class.blink::StyleRuleBase"* %26 to i64
  br label %41

41:                                               ; preds = %116, %37
  %42 = phi i64 [ %38, %37 ], [ %117, %116 ]
  %43 = phi %"class.blink::CSSSelector"* [ %35, %37 ], [ %110, %116 ]
  %44 = ptrtoint %"class.blink::CSSSelector"* %43 to i64
  %45 = sub i64 %44, %42
  %46 = lshr exact i64 %45, 4
  %47 = trunc i64 %46 to i32
  %48 = call zeroext i1 @_ZNK5blink11CSSSelector16HasSlottedPseudoEv(%"class.blink::CSSSelector"* nonnull %43) #10
  br i1 %48, label %49, label %102

49:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  store %"class.blink::StyleRuleBase"* %26, %"class.blink::StyleRuleBase"** %14, align 8
  store i32 %47, i32* %15, align 8
  store i32 %3, i32* %16, align 4
  %50 = load i32, i32* %17, align 4
  %51 = load i32, i32* %18, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %100, label %53, !prof !3

53:                                               ; preds = %49
  %54 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %19, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %54, i64 %55
  %57 = bitcast %"class.blink::MinimalRuleData"* %56 to i64*
  store i64 %40, i64* %57, align 8
  %58 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %54, i64 %55, i32 1
  %59 = bitcast i32* %58 to i64*
  %60 = load i64, i64* %20, align 8
  store i64 %60, i64* %59, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %97, label %63

63:                                               ; preds = %53
  %64 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %65 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %64, i64 0, i32 1
  %66 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %65) #10
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %70, !prof !3

68:                                               ; preds = %63
  %69 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %65, i8* %69) #10
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i8* [ %69, %68 ], [ %66, %63 ]
  %72 = bitcast i8* %71 to %"class.blink::ThreadState"**
  %73 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 9
  %75 = load i8, i8* %74, align 1, !range !4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %97, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 13
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %81, align 8
  %83 = load atomic i64, i64* %57 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %82, i64 0, i32 0, i32 0
  %87 = inttoptr i64 %83 to %"class.blink::StyleRule"*
  %88 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %87, i64 0, i32 0, i32 0
  %89 = bitcast %"class.blink::MarkingVisitor"* %82 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %90 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, i64 5
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, align 8
  call void %92(%"class.blink::Visitor"* %86, i8* %88, i8* %88, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  %93 = load i64, i64* %78, align 8
  br label %94

94:                                               ; preds = %85, %77
  %95 = phi i64 [ %80, %77 ], [ %93, %85 ]
  %96 = add i64 %95, -1
  store i64 %96, i64* %78, align 8
  br label %97

97:                                               ; preds = %53, %70, %94
  %98 = load i32, i32* %17, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %17, align 4
  br label %101

100:                                              ; preds = %49
  call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.146"* %12, %"class.blink::MinimalRuleData"* nonnull dereferenceable(16) %6) #10
  br label %101

101:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  br label %103

102:                                              ; preds = %41
  call void @_ZN5blink7RuleSet7AddRuleEPNS_9StyleRuleEjjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRule"* nonnull %31, i32 %47, i32 %3, %"class.blink::ContainerQuery"* %4)
  br label %103

103:                                              ; preds = %102, %101
  br label %104

104:                                              ; preds = %103, %104
  %105 = phi %"class.blink::CSSSelector"* [ %110, %104 ], [ %43, %103 ]
  %106 = bitcast %"class.blink::CSSSelector"* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 131072
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %105, i64 1
  br i1 %109, label %104, label %111

111:                                              ; preds = %104
  %112 = and i32 %107, 2097152
  %113 = icmp ne i32 %112, 0
  %114 = icmp eq %"class.blink::CSSSelector"* %110, null
  %115 = or i1 %114, %113
  br i1 %115, label %151, label %116

116:                                              ; preds = %111
  %117 = load i64, i64* %39, align 8
  br label %41

118:                                              ; preds = %28
  %119 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRulePage"*
  call void @_ZN5blink7RuleSet11AddPageRuleEPNS_13StyleRulePageE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRulePage"* nonnull %119)
  br label %151

120:                                              ; preds = %28
  %121 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 32
  %122 = bitcast %"class.blink::StyleRuleBase"* %121 to %"class.blink::MediaQuerySet"**
  %123 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %122, align 8
  %124 = call zeroext i1 @_ZN5blink7RuleSet21MatchMediaForAddRulesERKNS_19MediaQueryEvaluatorEPKNS_13MediaQuerySetE(%"class.blink::RuleSet"* %0, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, %"class.blink::MediaQuerySet"* %123)
  br i1 %124, label %125, label %151

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 8
  %127 = bitcast %"class.blink::StyleRuleBase"* %126 to %"class.blink::HeapVector.177"*
  call void @_ZN5blink7RuleSet13AddChildRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERKNS_19MediaQueryEvaluatorEjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::HeapVector.177"* dereferenceable(16) %127, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, i32 %3, %"class.blink::ContainerQuery"* %4)
  br label %151

128:                                              ; preds = %28
  %129 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRuleFontFace"*
  call void @_ZN5blink7RuleSet15AddFontFaceRuleEPNS_17StyleRuleFontFaceE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRuleFontFace"* nonnull %129)
  br label %151

130:                                              ; preds = %28
  %131 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRuleKeyframes"*
  call void @_ZN5blink7RuleSet16AddKeyframesRuleEPNS_18StyleRuleKeyframesE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRuleKeyframes"* nonnull %131)
  br label %151

132:                                              ; preds = %28
  %133 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRuleProperty"*
  call void @_ZN5blink7RuleSet15AddPropertyRuleEPNS_17StyleRulePropertyE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRuleProperty"* nonnull %133)
  br label %151

134:                                              ; preds = %28
  %135 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRuleCounterStyle"*
  call void @_ZN5blink7RuleSet19AddCounterStyleRuleEPNS_21StyleRuleCounterStyleE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRuleCounterStyle"* nonnull %135)
  br label %151

136:                                              ; preds = %28
  %137 = bitcast %"class.blink::StyleRuleBase"* %26 to %"class.blink::StyleRuleScrollTimeline"*
  call void @_ZN5blink7RuleSet21AddScrollTimelineRuleEPNS_23StyleRuleScrollTimelineE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRuleScrollTimeline"* nonnull %137)
  br label %151

138:                                              ; preds = %28
  %139 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 40, i32 0
  %140 = load i8, i8* %139, align 8, !range !4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %151, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 8
  %144 = bitcast %"class.blink::StyleRuleBase"* %143 to %"class.blink::HeapVector.177"*
  call void @_ZN5blink7RuleSet13AddChildRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERKNS_19MediaQueryEvaluatorEjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::HeapVector.177"* dereferenceable(16) %144, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, i32 %3, %"class.blink::ContainerQuery"* %4)
  br label %151

145:                                              ; preds = %28
  %146 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 8
  %147 = bitcast %"class.blink::StyleRuleBase"* %146 to %"class.blink::HeapVector.177"*
  %148 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %26, i64 32
  %149 = bitcast %"class.blink::StyleRuleBase"* %148 to %"class.blink::ContainerQuery"**
  %150 = load %"class.blink::ContainerQuery"*, %"class.blink::ContainerQuery"** %149, align 8
  call void @_ZN5blink7RuleSet13AddChildRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERKNS_19MediaQueryEvaluatorEjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::HeapVector.177"* dereferenceable(16) %147, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, i32 %3, %"class.blink::ContainerQuery"* %150)
  br label %151

151:                                              ; preds = %111, %28, %32, %138, %22, %118, %128, %132, %136, %145, %142, %134, %130, %120, %125
  %152 = add nuw i32 %23, 1
  %153 = load i32, i32* %7, align 4
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %22, label %21
}

declare zeroext i1 @_ZNK5blink11CSSSelector16HasSlottedPseudoEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink7RuleSet21MatchMediaForAddRulesERKNS_19MediaQueryEvaluatorEPKNS_13MediaQuerySetE(%"class.blink::RuleSet"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24), %"class.blink::MediaQuerySet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MediaQuerySetResult", align 8
  %5 = icmp eq %"class.blink::MediaQuerySet"* %2, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 13, i32 9
  %8 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 13, i32 10
  %9 = tail call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* %1, %"class.blink::MediaQuerySet"* nonnull dereferenceable(24) %2, %"class.WTF::Vector.81"* %7, %"class.WTF::Vector.81"* %8) #10
  %10 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 21
  %11 = bitcast %"class.blink::MediaQuerySetResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = zext i1 %9 to i8
  %13 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %4, i64 0, i32 0, i32 0
  store %"class.blink::MediaQuerySet"* %2, %"class.blink::MediaQuerySet"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #10
  %15 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %4, i64 0, i32 1
  store i8 %12, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 21, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 21, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %32, label %21, !prof !3

21:                                               ; preds = %6
  %22 = ptrtoint %"class.blink::MediaQuerySet"* %2 to i64
  %23 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %10, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %23, align 8
  %25 = zext i32 %17 to i64
  %26 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %24, i64 %25
  %27 = bitcast %"class.blink::MediaQuerySetResult"* %26 to i64*
  store i64 %22, i64* %27, align 8
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %13, align 8
  %28 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %24, i64 %25, i32 1
  %29 = load i8, i8* %15, align 8, !range !4
  store i8 %29, i8* %28, align 8
  %30 = load i32, i32* %16, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %16, align 4
  br label %33

32:                                               ; preds = %6
  call void @_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.150"* %10, %"class.blink::MediaQuerySetResult"* nonnull dereferenceable(16) %4) #10
  br label %33

33:                                               ; preds = %21, %32
  %34 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %13, align 8
  %35 = icmp eq %"class.blink::MediaQuerySet"* %34, null
  br i1 %35, label %71, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %34, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #10
  %38 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %71

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %34, i64 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::unique_ptr.30"*, %"class.std::__1::unique_ptr.30"** %43, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr.30"* %44, null
  br i1 %45, label %69, label %46, !prof !5

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::unique_ptr.30"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %34, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %67, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %44, i64 %52
  br label %54

54:                                               ; preds = %61, %51
  %55 = phi %"class.std::__1::unique_ptr.30"* [ %62, %61 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %56, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %56, align 8
  %58 = icmp eq %"class.blink::MediaQuery"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %57) #10
  %60 = bitcast %"class.blink::MediaQuery"* %57 to i8*
  call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %55, i64 1
  %63 = icmp eq %"class.std::__1::unique_ptr.30"* %62, %53
  br i1 %63, label %64, label %54

64:                                               ; preds = %61
  store i32 0, i32* %48, align 4
  %65 = bitcast %"class.WTF::Vector.27"* %42 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %46
  %68 = phi i8* [ %66, %64 ], [ %47, %46 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %68) #10
  br label %69

69:                                               ; preds = %67, %41
  %70 = bitcast %"class.blink::MediaQuerySet"* %34 to i8*
  call void @free(i8* %70) #10
  br label %71

71:                                               ; preds = %33, %36, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  br label %72

72:                                               ; preds = %3, %71
  %73 = phi i1 [ %9, %71 ], [ true, %3 ]
  ret i1 %73
}

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_13MediaQuerySetEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuerySet"* dereferenceable(24), %"class.WTF::Vector.81"*, %"class.WTF::Vector.81"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet17AddRulesFromSheetEPNS_18StyleSheetContentsERKNS_19MediaQueryEvaluatorEj(%"class.blink::RuleSet"*, %"class.blink::StyleSheetContents"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !5

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %4, %9
  %16 = phi i64 [ -6148914691236517206, %4 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 2, i32 0
  br label %32

24:                                               ; preds = %46, %15
  %25 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 4
  call void @_ZN5blink7RuleSet13AddChildRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERKNS_19MediaQueryEvaluatorEjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::HeapVector.177"* dereferenceable(16) %25, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, i32 %3, %"class.blink::ContainerQuery"* null)
  %26 = icmp eq i8* %18, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = load i8, i8* %18, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #10
  br label %31

31:                                               ; preds = %24, %27, %30
  ret void

32:                                               ; preds = %22, %46
  %33 = phi i32 [ 0, %22 ], [ %47, %46 ]
  %34 = call dereferenceable(8) %"class.blink::Member.194"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.203"* %23, i32 %33) #10
  %35 = getelementptr inbounds %"class.blink::Member.194", %"class.blink::Member.194"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %37, align 8
  %39 = icmp eq %"class.blink::StyleSheetContents"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %36, i64 0, i32 5, i32 0
  %42 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %41, align 8
  %43 = call zeroext i1 @_ZN5blink7RuleSet21MatchMediaForAddRulesERKNS_19MediaQueryEvaluatorEPKNS_13MediaQuerySetE(%"class.blink::RuleSet"* %0, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, %"class.blink::MediaQuerySet"* %42)
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %37, align 8
  call void @_ZN5blink7RuleSet17AddRulesFromSheetEPNS_18StyleSheetContentsERKNS_19MediaQueryEvaluatorEj(%"class.blink::RuleSet"* %0, %"class.blink::StyleSheetContents"* %45, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %2, i32 %3)
  br label %46

46:                                               ; preds = %32, %44, %40
  %47 = add nuw i32 %33, 1
  %48 = load i32, i32* %19, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %32, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet12AddStyleRuleEPNS_9StyleRuleEj(%"class.blink::RuleSet"*, %"class.blink::StyleRule"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %1, i64 0, i32 2, i32 0
  br label %6

5:                                                ; preds = %18
  ret void

6:                                                ; preds = %3, %18
  %7 = phi i32 [ 0, %3 ], [ %25, %18 ]
  tail call void @_ZN5blink7RuleSet7AddRuleEPNS_9StyleRuleEjjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %0, %"class.blink::StyleRule"* %1, i32 %7, i32 %2, %"class.blink::ContainerQuery"* null)
  %8 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %4, align 8
  %9 = zext i32 %7 to i64
  %10 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 %9
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi %"class.blink::CSSSelector"* [ %10, %6 ], [ %17, %11 ]
  %13 = bitcast %"class.blink::CSSSelector"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 131072
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %12, i64 1
  br i1 %16, label %11, label %18

18:                                               ; preds = %11
  %19 = ptrtoint %"class.blink::CSSSelector"* %8 to i64
  %20 = and i32 %14, 2097152
  %21 = icmp ne i32 %20, 0
  %22 = ptrtoint %"class.blink::CSSSelector"* %17 to i64
  %23 = sub i64 %22, %19
  %24 = lshr exact i64 %23, 4
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %25, -1
  %27 = or i1 %26, %21
  br i1 %27, label %5, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet19CompactPendingRulesERNS_11HeapHashMapIN3WTF12AtomicStringENS_6MemberINS_15HeapLinkedStackINS4_IKNS_8RuleDataEEEEEEENS2_16AtomicStringHashENS2_10HashTraitsIS3_EENSC_ISA_EEEERNS1_IS3_NS4_INS_10HeapVectorIS8_Lj0EEEEESB_SD_NSC_ISJ_EEEE(%"class.blink::HeapHashMap.160"* nocapture readonly dereferenceable(24), %"class.blink::HeapHashMap"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapHashMap.160", %"class.blink::HeapHashMap.160"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %8, i64 %11
  br i1 %6, label %28, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair.166"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair.166"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair.166"* %20, %12
  br i1 %21, label %28, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair.166"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair.166"* %23, %12
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = bitcast i8** %3 to i8*
  %27 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %1, i64 0, i32 0, i32 0
  br label %29

28:                                               ; preds = %19, %132, %142, %139, %2, %22
  ret void

29:                                               ; preds = %25, %142
  %30 = phi %"struct.WTF::KeyValuePair.166"* [ %23, %25 ], [ %136, %142 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::MemberBase.168", %"class.blink::MemberBase.168"* %31, i64 0, i32 0
  %33 = load %"class.blink::HeapLinkedStack"*, %"class.blink::HeapLinkedStack"** %32, align 8
  %34 = bitcast %"class.blink::MemberBase.168"* %31 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store i8* null, i8** %3, align 8
  %36 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable"* %27, %"class.WTF::AtomicString"* dereferenceable(8) %35, i8** nonnull dereferenceable(8) %3) #10
  %37 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %39 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %39, align 8
  %41 = icmp eq %"class.blink::HeapVector"* %40, null
  br i1 %41, label %42, label %76

42:                                               ; preds = %29
  %43 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEEEPhm(i64 16) #10
  %44 = getelementptr inbounds i8, i8* %43, i64 -4
  %45 = bitcast i8* %44 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #10
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = ptrtoint i8* %43 to i64
  %49 = bitcast %"class.blink::Member.50"* %38 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  %52 = bitcast i8* %43 to %"class.blink::HeapVector"*
  br i1 %51, label %56, label %53

53:                                               ; preds = %42
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #10
  %55 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %39, align 8
  br label %56

56:                                               ; preds = %42, %53
  %57 = phi %"class.blink::HeapVector"* [ %52, %42 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.blink::HeapLinkedStack", %"class.blink::HeapLinkedStack"* %33, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %56
  %63 = and i64 %59, 4294967295
  %64 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64 %63) #10
  %65 = lshr i64 %64, 3
  %66 = call %"class.blink::HeapVectorBacking.1057"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %65) #10
  %67 = ptrtoint %"class.blink::HeapVectorBacking.1057"* %66 to i64
  %68 = bitcast %"class.blink::HeapVector"* %57 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = trunc i64 %65 to i32
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %57, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %69, i32* %70, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.blink::HeapVectorBacking.1057", %"class.blink::HeapVectorBacking.1057"* %66, i64 0, i32 0
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #10
  br label %81

76:                                               ; preds = %29
  %77 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %40, i64 0, i32 0
  %78 = getelementptr inbounds %"class.blink::HeapLinkedStack", %"class.blink::HeapLinkedStack"* %33, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.54"* %77, i32 %80)
  br label %81

81:                                               ; preds = %73, %62, %56, %76
  %82 = getelementptr inbounds %"class.blink::HeapLinkedStack", %"class.blink::HeapLinkedStack"* %33, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"*, %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"** %82, align 8
  %84 = icmp eq %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* %83, null
  br i1 %84, label %132, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapLinkedStack"* %33 to i64*
  %87 = getelementptr inbounds %"class.blink::HeapLinkedStack", %"class.blink::HeapLinkedStack"* %33, i64 0, i32 1
  br label %88

88:                                               ; preds = %85, %127
  %89 = phi %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* [ %83, %85 ], [ %128, %127 ]
  %90 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %39, align 8
  %91 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %90, i64 0, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %90, i64 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %112, label %96, !prof !3

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %97, align 8
  %99 = zext i32 %92 to i64
  %100 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %98, i64 %99
  %101 = bitcast %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* %89 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.blink::Member.57"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %96
  %107 = inttoptr i64 %102 to i8*
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #10
  br label %109

109:                                              ; preds = %106, %96
  %110 = load i32, i32* %91, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %91, align 4
  br label %115

112:                                              ; preds = %88
  %113 = getelementptr inbounds %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node", %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* %89, i64 0, i32 0
  %114 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %90, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector.54"* %114, %"class.blink::Member.57"* dereferenceable(8) %113) #10
  br label %115

115:                                              ; preds = %109, %112
  %116 = load %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"*, %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"** %82, align 8
  %117 = getelementptr inbounds %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node", %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* %116, i64 0, i32 1
  %118 = bitcast %"class.blink::Member.171"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  store atomic i64 %119, i64* %86 monotonic, align 8
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  %122 = inttoptr i64 %119 to %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"*
  br i1 %121, label %127, label %123

123:                                              ; preds = %115
  %124 = inttoptr i64 %119 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %124) #10
  %126 = load %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"*, %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"** %82, align 8
  br label %127

127:                                              ; preds = %115, %123
  %128 = phi %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* [ %122, %115 ], [ %126, %123 ]
  %129 = load i64, i64* %87, align 8
  %130 = add i64 %129, -1
  store i64 %130, i64* %87, align 8
  %131 = icmp eq %"class.blink::HeapLinkedStack<blink::Member<const blink::RuleData> >::Node"* %128, null
  br i1 %131, label %132, label %88

132:                                              ; preds = %127, %81
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %30, i64 1
  %134 = icmp eq %"struct.WTF::KeyValuePair.166"* %133, %12
  br i1 %134, label %28, label %135

135:                                              ; preds = %132, %139
  %136 = phi %"struct.WTF::KeyValuePair.166"* [ %140, %139 ], [ %133, %132 ]
  %137 = bitcast %"struct.WTF::KeyValuePair.166"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  switch i64 %138, label %142 [
    i64 -1, label %139
    i64 0, label %139
  ]

139:                                              ; preds = %135, %135
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %136, i64 1
  %141 = icmp eq %"struct.WTF::KeyValuePair.166"* %140, %12
  br i1 %141, label %28, label %135

142:                                              ; preds = %135
  %143 = icmp eq %"struct.WTF::KeyValuePair.166"* %136, %12
  br i1 %143, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.54"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %8, align 8
  %10 = icmp eq %"class.blink::Member.57"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1057"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1057"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1057", %"class.blink::HeapVectorBacking.1057"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %8, align 8
  %26 = icmp eq %"class.blink::Member.57"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.57"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.54"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.157", %"class.blink::MemberBase.157"* %2, i64 0, i32 0
  %4 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %3, align 8
  %5 = bitcast %"class.blink::MemberBase.157"* %2 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 0
  tail call void @_ZN5blink7RuleSet19CompactPendingRulesERNS_11HeapHashMapIN3WTF12AtomicStringENS_6MemberINS_15HeapLinkedStackINS4_IKNS_8RuleDataEEEEEEENS2_16AtomicStringHashENS2_10HashTraitsIS3_EENSC_ISA_EEEERNS1_IS3_NS4_INS_10HeapVectorIS8_Lj0EEEEESB_SD_NSC_ISJ_EEEE(%"class.blink::HeapHashMap.160"* dereferenceable(24) %6, %"class.blink::HeapHashMap"* dereferenceable(24) %7)
  %8 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 1
  tail call void @_ZN5blink7RuleSet19CompactPendingRulesERNS_11HeapHashMapIN3WTF12AtomicStringENS_6MemberINS_15HeapLinkedStackINS4_IKNS_8RuleDataEEEEEEENS2_16AtomicStringHashENS2_10HashTraitsIS3_EENSC_ISA_EEEERNS1_IS3_NS4_INS_10HeapVectorIS8_Lj0EEEEESB_SD_NSC_ISJ_EEEE(%"class.blink::HeapHashMap.160"* dereferenceable(24) %8, %"class.blink::HeapHashMap"* dereferenceable(24) %9)
  %10 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 2
  tail call void @_ZN5blink7RuleSet19CompactPendingRulesERNS_11HeapHashMapIN3WTF12AtomicStringENS_6MemberINS_15HeapLinkedStackINS4_IKNS_8RuleDataEEEEEEENS2_16AtomicStringHashENS2_10HashTraitsIS3_EENSC_ISA_EEEERNS1_IS3_NS4_INS_10HeapVectorIS8_Lj0EEEEESB_SD_NSC_ISJ_EEEE(%"class.blink::HeapHashMap.160"* dereferenceable(24) %10, %"class.blink::HeapHashMap"* dereferenceable(24) %11)
  %12 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %4, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 3
  tail call void @_ZN5blink7RuleSet19CompactPendingRulesERNS_11HeapHashMapIN3WTF12AtomicStringENS_6MemberINS_15HeapLinkedStackINS4_IKNS_8RuleDataEEEEEEENS2_16AtomicStringHashENS2_10HashTraitsIS3_EENSC_ISA_EEEERNS1_IS3_NS4_INS_10HeapVectorIS8_Lj0EEEEESB_SD_NSC_ISJ_EEEE(%"class.blink::HeapHashMap.160"* dereferenceable(24) %12, %"class.blink::HeapHashMap"* dereferenceable(24) %13)
  %14 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4, i32 0
  %15 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %14, i32 %16) #10
  %17 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5, i32 0
  %18 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %17, i32 %19) #10
  %20 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6, i32 0
  %21 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %20, i32 %22) #10
  %23 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %23, i32 %25) #10
  %26 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8, i32 0
  %27 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %26, i32 %28) #10
  %29 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9, i32 0
  %30 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %29, i32 %31) #10
  %32 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10, i32 0
  %33 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %32, i32 %34) #10
  %35 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0
  %36 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %35, i32 %37) #10
  %38 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12, i32 0
  %39 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"* %38, i32 %40) #10
  %41 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14, i32 0
  %42 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.89"* %41, i32 %43) #10
  %44 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15, i32 0
  %45 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.97"* %44, i32 %46) #10
  %47 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16, i32 0
  %48 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.105"* %47, i32 %49) #10
  %50 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17, i32 0
  %51 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.122"* %50, i32 %52) #10
  %53 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18, i32 0
  %54 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.130"* %53, i32 %55) #10
  %56 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19, i32 0
  %57 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.138"* %56, i32 %58) #10
  %59 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20, i32 0
  %60 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  tail call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.146"* %59, i32 %61) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink7RuleSet26DidMediaQueryResultsChangeERKNS_19MediaQueryEvaluatorE(%"class.blink::RuleSet"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 21
  %4 = tail call zeroext i1 @_ZNK5blink19MediaQueryEvaluator16DidResultsChangeERKN3WTF6VectorINS_19MediaQuerySetResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaQueryEvaluator"* %1, %"class.WTF::Vector.150"* dereferenceable(16) %3) #10
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator16DidResultsChangeERKN3WTF6VectorINS_19MediaQuerySetResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaQueryEvaluator"*, %"class.WTF::Vector.150"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15MinimalRuleData5TraceEPNS_7VisitorE(%"class.blink::MinimalRuleData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::MinimalRuleData"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to %"class.blink::StyleRule"*
  %8 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* %8, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ContainerQuery"* @_ZNK5blink8RuleData17GetContainerQueryEv(%"class.blink::RuleData"* readonly) local_unnamed_addr #3 align 2 {
  %2 = icmp eq %"class.blink::RuleData"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4611686018427387904
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 1
  %10 = bitcast %"class.blink::RuleData"* %9 to %"class.blink::ContainerQuery"**
  %11 = load %"class.blink::ContainerQuery"*, %"class.blink::ContainerQuery"** %10, align 8
  br label %12

12:                                               ; preds = %3, %1, %8
  %13 = phi %"class.blink::ContainerQuery"* [ %11, %8 ], [ null, %1 ], [ null, %3 ]
  ret %"class.blink::ContainerQuery"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8RuleData5TraceEPNS_7VisitorE(%"class.blink::RuleData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4611686018427387904
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::RuleData"* %0 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %6, label %10, label %18

10:                                               ; preds = %2
  br i1 %9, label %37, label %11

11:                                               ; preds = %10
  %12 = inttoptr i64 %8 to %"class.blink::StyleRule"*
  %13 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* %13, i8* %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %37

18:                                               ; preds = %2
  br i1 %9, label %26, label %19

19:                                               ; preds = %18
  %20 = inttoptr i64 %8 to %"class.blink::StyleRule"*
  %21 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %26

26:                                               ; preds = %19, %18
  %27 = getelementptr inbounds %"class.blink::RuleData", %"class.blink::RuleData"* %0, i64 1
  %28 = bitcast %"class.blink::RuleData"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to i8*
  %33 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, i64 5
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, align 8
  tail call void %36(%"class.blink::Visitor"* %1, i8* nonnull %32, i8* nonnull %32, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv) #10
  br label %37

37:                                               ; preds = %31, %26, %11, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8RuleData18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::RuleData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::RuleData"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to %"class.blink::StyleRule"*
  %8 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* %8, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ExtendedRuleData18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::ExtendedRuleData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ExtendedRuleData"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to %"class.blink::StyleRule"*
  %8 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* %8, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %6
  %14 = getelementptr inbounds %"class.blink::ExtendedRuleData", %"class.blink::ExtendedRuleData"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::Member.43"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExtendedRuleDataC2EN4base7PassKeyINS_8RuleDataEEEPNS_9StyleRuleEjjjPKNS_14ContainerQueryE(%"class.blink::ExtendedRuleData"*, %"class.blink::StyleRule"*, i32, i32, i32, %"class.blink::ContainerQuery"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ExtendedRuleData", %"class.blink::ExtendedRuleData"* %0, i64 0, i32 0
  tail call void @_ZN5blink8RuleDataC2ENS0_4TypeEPNS_9StyleRuleEjjj(%"class.blink::RuleData"* %7, i32 1, %"class.blink::StyleRule"* %1, i32 %2, i32 %3, i32 %4)
  %8 = getelementptr inbounds %"class.blink::ExtendedRuleData", %"class.blink::ExtendedRuleData"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ContainerQuery"* %5, %"class.blink::ContainerQuery"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7RuleSet15PendingRuleMaps5TraceEPNS_7VisitorE(%"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::RuleSet::PendingRuleMaps"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast %"class.blink::RuleSet::PendingRuleMaps"* %0 to i8**
  %6 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %1, i8** %5) #10
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapHashMap.160"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = bitcast %"class.blink::HeapHashMap.160"* %18 to i8**
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %21) #10
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %32

32:                                               ; preds = %17, %26
  %33 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::HeapHashMap.160"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = bitcast %"class.blink::HeapHashMap.160"* %33 to i8**
  %37 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, i64 11
  %39 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8** %36) #10
  %40 = icmp eq i64 %35, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %32
  %42 = inttoptr i64 %35 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %47

47:                                               ; preds = %32, %41
  %48 = getelementptr inbounds %"class.blink::RuleSet::PendingRuleMaps", %"class.blink::RuleSet::PendingRuleMaps"* %0, i64 0, i32 3
  %49 = bitcast %"class.blink::HeapHashMap.160"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = bitcast %"class.blink::HeapHashMap.160"* %48 to i8**
  %52 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %52, i64 11
  %54 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8** %51) #10
  %55 = icmp eq i64 %50, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = inttoptr i64 %50 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %62

62:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7RuleSet5TraceEPNS_7VisitorE(%"class.blink::RuleSet"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::RuleSet"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast %"class.blink::RuleSet"* %0 to i8**
  %6 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %1, i8** %5) #10
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapHashMap"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = bitcast %"class.blink::HeapHashMap"* %18 to i8**
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %21) #10
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %32

32:                                               ; preds = %17, %26
  %33 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::HeapHashMap"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = bitcast %"class.blink::HeapHashMap"* %33 to i8**
  %37 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, i64 11
  %39 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8** %36) #10
  %40 = icmp eq i64 %35, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %32
  %42 = inttoptr i64 %35 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %47

47:                                               ; preds = %32, %41
  %48 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 3
  %49 = bitcast %"class.blink::HeapHashMap"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = bitcast %"class.blink::HeapHashMap"* %48 to i8**
  %52 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %52, i64 11
  %54 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8** %51) #10
  %55 = icmp eq i64 %50, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = inttoptr i64 %50 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %62

62:                                               ; preds = %47, %56
  %63 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 4
  %64 = bitcast %"class.blink::HeapVector"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %"class.blink::HeapVector"* %63 to i8**
  %68 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %69 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %68, i64 11
  %70 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %69, align 8
  tail call void %70(%"class.blink::Visitor"* %1, i8** %67) #10
  br i1 %66, label %77, label %71

71:                                               ; preds = %62
  %72 = inttoptr i64 %65 to i8*
  %73 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, i64 5
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %75, align 8
  tail call void %76(%"class.blink::Visitor"* %1, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %77

77:                                               ; preds = %62, %71
  %78 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 5
  %79 = bitcast %"class.blink::HeapVector"* %78 to i64*
  %80 = load atomic i64, i64* %79 monotonic, align 8
  %81 = icmp eq i64 %80, 0
  %82 = bitcast %"class.blink::HeapVector"* %78 to i8**
  %83 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %84 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %83, i64 11
  %85 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %84, align 8
  tail call void %85(%"class.blink::Visitor"* %1, i8** %82) #10
  br i1 %81, label %92, label %86

86:                                               ; preds = %77
  %87 = inttoptr i64 %80 to i8*
  %88 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %89, i64 5
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, align 8
  tail call void %91(%"class.blink::Visitor"* %1, i8* nonnull %87, i8* nonnull %87, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %92

92:                                               ; preds = %77, %86
  %93 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 6
  %94 = bitcast %"class.blink::HeapVector"* %93 to i64*
  %95 = load atomic i64, i64* %94 monotonic, align 8
  %96 = icmp eq i64 %95, 0
  %97 = bitcast %"class.blink::HeapVector"* %93 to i8**
  %98 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %99 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %98, i64 11
  %100 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %99, align 8
  tail call void %100(%"class.blink::Visitor"* %1, i8** %97) #10
  br i1 %96, label %107, label %101

101:                                              ; preds = %92
  %102 = inttoptr i64 %95 to i8*
  %103 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %104 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, i64 5
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %105, align 8
  tail call void %106(%"class.blink::Visitor"* %1, i8* nonnull %102, i8* nonnull %102, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %107

107:                                              ; preds = %92, %101
  %108 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 7
  %109 = bitcast %"class.blink::HeapVector"* %108 to i64*
  %110 = load atomic i64, i64* %109 monotonic, align 8
  %111 = icmp eq i64 %110, 0
  %112 = bitcast %"class.blink::HeapVector"* %108 to i8**
  %113 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %114 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %113, i64 11
  %115 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %114, align 8
  tail call void %115(%"class.blink::Visitor"* %1, i8** %112) #10
  br i1 %111, label %122, label %116

116:                                              ; preds = %107
  %117 = inttoptr i64 %110 to i8*
  %118 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %119 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %119, i64 5
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %120, align 8
  tail call void %121(%"class.blink::Visitor"* %1, i8* nonnull %117, i8* nonnull %117, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %122

122:                                              ; preds = %107, %116
  %123 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 8
  %124 = bitcast %"class.blink::HeapVector"* %123 to i64*
  %125 = load atomic i64, i64* %124 monotonic, align 8
  %126 = icmp eq i64 %125, 0
  %127 = bitcast %"class.blink::HeapVector"* %123 to i8**
  %128 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %128, i64 11
  %130 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %1, i8** %127) #10
  br i1 %126, label %137, label %131

131:                                              ; preds = %122
  %132 = inttoptr i64 %125 to i8*
  %133 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %134 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %134, i64 5
  %136 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %135, align 8
  tail call void %136(%"class.blink::Visitor"* %1, i8* nonnull %132, i8* nonnull %132, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %137

137:                                              ; preds = %122, %131
  %138 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 9
  %139 = bitcast %"class.blink::HeapVector"* %138 to i64*
  %140 = load atomic i64, i64* %139 monotonic, align 8
  %141 = icmp eq i64 %140, 0
  %142 = bitcast %"class.blink::HeapVector"* %138 to i8**
  %143 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %144 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %143, i64 11
  %145 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %144, align 8
  tail call void %145(%"class.blink::Visitor"* %1, i8** %142) #10
  br i1 %141, label %152, label %146

146:                                              ; preds = %137
  %147 = inttoptr i64 %140 to i8*
  %148 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  tail call void %151(%"class.blink::Visitor"* %1, i8* nonnull %147, i8* nonnull %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %152

152:                                              ; preds = %137, %146
  %153 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 10
  %154 = bitcast %"class.blink::HeapVector"* %153 to i64*
  %155 = load atomic i64, i64* %154 monotonic, align 8
  %156 = icmp eq i64 %155, 0
  %157 = bitcast %"class.blink::HeapVector"* %153 to i8**
  %158 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %159 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %158, i64 11
  %160 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %159, align 8
  tail call void %160(%"class.blink::Visitor"* %1, i8** %157) #10
  br i1 %156, label %167, label %161

161:                                              ; preds = %152
  %162 = inttoptr i64 %155 to i8*
  %163 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %164 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %164, i64 5
  %166 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %165, align 8
  tail call void %166(%"class.blink::Visitor"* %1, i8* nonnull %162, i8* nonnull %162, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %167

167:                                              ; preds = %152, %161
  %168 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 11
  %169 = bitcast %"class.blink::HeapVector"* %168 to i64*
  %170 = load atomic i64, i64* %169 monotonic, align 8
  %171 = icmp eq i64 %170, 0
  %172 = bitcast %"class.blink::HeapVector"* %168 to i8**
  %173 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %174 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %173, i64 11
  %175 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %174, align 8
  tail call void %175(%"class.blink::Visitor"* %1, i8** %172) #10
  br i1 %171, label %182, label %176

176:                                              ; preds = %167
  %177 = inttoptr i64 %170 to i8*
  %178 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %179 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, i64 5
  %181 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %180, align 8
  tail call void %181(%"class.blink::Visitor"* %1, i8* nonnull %177, i8* nonnull %177, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %182

182:                                              ; preds = %167, %176
  %183 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 12
  %184 = bitcast %"class.blink::HeapVector"* %183 to i64*
  %185 = load atomic i64, i64* %184 monotonic, align 8
  %186 = icmp eq i64 %185, 0
  %187 = bitcast %"class.blink::HeapVector"* %183 to i8**
  %188 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %189 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %188, i64 11
  %190 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %189, align 8
  tail call void %190(%"class.blink::Visitor"* %1, i8** %187) #10
  br i1 %186, label %197, label %191

191:                                              ; preds = %182
  %192 = inttoptr i64 %185 to i8*
  %193 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %194 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %194, i64 5
  %196 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %195, align 8
  tail call void %196(%"class.blink::Visitor"* %1, i8* nonnull %192, i8* nonnull %192, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %197

197:                                              ; preds = %182, %191
  %198 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 14
  %199 = bitcast %"class.blink::HeapVector.86"* %198 to i64*
  %200 = load atomic i64, i64* %199 monotonic, align 8
  %201 = icmp eq i64 %200, 0
  %202 = bitcast %"class.blink::HeapVector.86"* %198 to i8**
  %203 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %204 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %203, i64 11
  %205 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %204, align 8
  tail call void %205(%"class.blink::Visitor"* %1, i8** %202) #10
  br i1 %201, label %212, label %206

206:                                              ; preds = %197
  %207 = inttoptr i64 %200 to i8*
  %208 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %209 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %209, i64 5
  %211 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %210, align 8
  tail call void %211(%"class.blink::Visitor"* %1, i8* nonnull %207, i8* nonnull %207, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %212

212:                                              ; preds = %197, %206
  %213 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 15
  %214 = bitcast %"class.blink::HeapVector.94"* %213 to i64*
  %215 = load atomic i64, i64* %214 monotonic, align 8
  %216 = icmp eq i64 %215, 0
  %217 = bitcast %"class.blink::HeapVector.94"* %213 to i8**
  %218 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %219 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %218, i64 11
  %220 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %219, align 8
  tail call void %220(%"class.blink::Visitor"* %1, i8** %217) #10
  br i1 %216, label %227, label %221

221:                                              ; preds = %212
  %222 = inttoptr i64 %215 to i8*
  %223 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %224 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %224, i64 5
  %226 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %225, align 8
  tail call void %226(%"class.blink::Visitor"* %1, i8* nonnull %222, i8* nonnull %222, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %227

227:                                              ; preds = %212, %221
  %228 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 16
  %229 = bitcast %"class.blink::HeapVector.102"* %228 to i64*
  %230 = load atomic i64, i64* %229 monotonic, align 8
  %231 = icmp eq i64 %230, 0
  %232 = bitcast %"class.blink::HeapVector.102"* %228 to i8**
  %233 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %234 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %233, i64 11
  %235 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %234, align 8
  tail call void %235(%"class.blink::Visitor"* %1, i8** %232) #10
  br i1 %231, label %242, label %236

236:                                              ; preds = %227
  %237 = inttoptr i64 %230 to i8*
  %238 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %239 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %239, i64 5
  %241 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %240, align 8
  tail call void %241(%"class.blink::Visitor"* %1, i8* nonnull %237, i8* nonnull %237, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %242

242:                                              ; preds = %227, %236
  %243 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 17
  %244 = bitcast %"class.blink::HeapVector.119"* %243 to i64*
  %245 = load atomic i64, i64* %244 monotonic, align 8
  %246 = icmp eq i64 %245, 0
  %247 = bitcast %"class.blink::HeapVector.119"* %243 to i8**
  %248 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %249 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %248, i64 11
  %250 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %249, align 8
  tail call void %250(%"class.blink::Visitor"* %1, i8** %247) #10
  br i1 %246, label %257, label %251

251:                                              ; preds = %242
  %252 = inttoptr i64 %245 to i8*
  %253 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %254 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %254, i64 5
  %256 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %255, align 8
  tail call void %256(%"class.blink::Visitor"* %1, i8* nonnull %252, i8* nonnull %252, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %257

257:                                              ; preds = %242, %251
  %258 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 18
  %259 = bitcast %"class.blink::HeapVector.127"* %258 to i64*
  %260 = load atomic i64, i64* %259 monotonic, align 8
  %261 = icmp eq i64 %260, 0
  %262 = bitcast %"class.blink::HeapVector.127"* %258 to i8**
  %263 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %264 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %263, i64 11
  %265 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %264, align 8
  tail call void %265(%"class.blink::Visitor"* %1, i8** %262) #10
  br i1 %261, label %272, label %266

266:                                              ; preds = %257
  %267 = inttoptr i64 %260 to i8*
  %268 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %269 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %269, i64 5
  %271 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %270, align 8
  tail call void %271(%"class.blink::Visitor"* %1, i8* nonnull %267, i8* nonnull %267, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %272

272:                                              ; preds = %257, %266
  %273 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 19
  %274 = bitcast %"class.blink::HeapVector.135"* %273 to i64*
  %275 = load atomic i64, i64* %274 monotonic, align 8
  %276 = icmp eq i64 %275, 0
  %277 = bitcast %"class.blink::HeapVector.135"* %273 to i8**
  %278 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %279 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %278, i64 11
  %280 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %279, align 8
  tail call void %280(%"class.blink::Visitor"* %1, i8** %277) #10
  br i1 %276, label %287, label %281

281:                                              ; preds = %272
  %282 = inttoptr i64 %275 to i8*
  %283 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %284 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %284, i64 5
  %286 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %285, align 8
  tail call void %286(%"class.blink::Visitor"* %1, i8* nonnull %282, i8* nonnull %282, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %287

287:                                              ; preds = %272, %281
  %288 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 20
  %289 = bitcast %"class.blink::HeapVector.143"* %288 to i64*
  %290 = load atomic i64, i64* %289 monotonic, align 8
  %291 = icmp eq i64 %290, 0
  %292 = bitcast %"class.blink::HeapVector.143"* %288 to i8**
  %293 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %294 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %293, i64 11
  %295 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %294, align 8
  tail call void %295(%"class.blink::Visitor"* %1, i8** %292) #10
  br i1 %291, label %302, label %296

296:                                              ; preds = %287
  %297 = inttoptr i64 %290 to i8*
  %298 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %299 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %299, i64 5
  %301 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %300, align 8
  tail call void %301(%"class.blink::Visitor"* %1, i8* nonnull %297, i8* nonnull %297, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %302

302:                                              ; preds = %287, %296
  %303 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %0, i64 0, i32 23
  %304 = bitcast %"class.blink::Member.156"* %303 to i64*
  %305 = load atomic i64, i64* %304 monotonic, align 8
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %313, label %307

307:                                              ; preds = %302
  %308 = inttoptr i64 %305 to i8*
  %309 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %310 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %310, i64 5
  %312 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %311, align 8
  tail call void %312(%"class.blink::Visitor"* %1, i8* nonnull %308, i8* nonnull %308, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RuleSet15PendingRuleMapsEE5TraceEPNS_7VisitorEPKv) #10
  br label %313

313:                                              ; preds = %302, %307
  ret void
}

declare zeroext i1 @_ZNK5blink11CSSSelector16HasLinkOrVisitedEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSet15PendingRuleMapsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSet15PendingRuleMapsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSet15PendingRuleMapsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7RuleSet15PendingRuleMapsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RuleSet::PendingRuleMaps"*
  tail call void @_ZNK5blink7RuleSet15PendingRuleMaps5TraceEPNS_7VisitorE(%"class.blink::RuleSet::PendingRuleMaps"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_7RuleSet15PendingRuleMapsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8RuleDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8RuleDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8RuleDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8RuleDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4611686018427387904
  %7 = icmp eq i64 %6, 0
  %8 = bitcast i8* %1 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %7, label %11, label %19

11:                                               ; preds = %2
  br i1 %10, label %38, label %12

12:                                               ; preds = %11
  %13 = inttoptr i64 %9 to %"class.blink::StyleRule"*
  %14 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %13, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %0, i8* %14, i8* %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

19:                                               ; preds = %2
  br i1 %10, label %27, label %20

20:                                               ; preds = %19
  %21 = inttoptr i64 %9 to %"class.blink::StyleRule"*
  %22 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, i64 5
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %0, i8* %22, i8* %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %27

27:                                               ; preds = %20, %19
  %28 = getelementptr inbounds i8, i8* %1, i64 32
  %29 = bitcast i8* %28 to i64*
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = inttoptr i64 %30 to i8*
  %34 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %33, i8* nonnull %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %11, %12, %27, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8RuleDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.166"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.164"*, %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.166"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.164"* %0, %"struct.WTF::KeyValuePair.166"* null)
  %9 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.166"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.166"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.166"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.166"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %163, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.166"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.166"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.166"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #10
  %66 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.166"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.166"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %75, i64 0, i32 1
  %115 = bitcast %"class.blink::Member.167"* %114 to i64*
  store atomic i64 0, i64* %115 monotonic, align 8
  %116 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %151, label %118

118:                                              ; preds = %113
  %119 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %120 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %119, i64 0, i32 1
  %121 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %120) #10
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %125, !prof !3

123:                                              ; preds = %118
  %124 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %120, i8* %124) #10
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i8* [ %124, %123 ], [ %121, %118 ]
  %127 = bitcast i8* %126 to %"class.blink::ThreadState"**
  %128 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 9
  %130 = load i8, i8* %129, align 1, !range !4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %151, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 13
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  %136 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %136, align 8
  %138 = load atomic i64, i64* %115 monotonic, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %137, i64 0, i32 0, i32 0
  %142 = inttoptr i64 %138 to i8*
  %143 = bitcast %"class.blink::MarkingVisitor"* %137 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %144 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %144, i64 5
  %146 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %145, align 8
  tail call void %146(%"class.blink::Visitor"* %141, i8* nonnull %142, i8* %142, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv) #10
  %147 = load i64, i64* %133, align 8
  br label %148

148:                                              ; preds = %140, %132
  %149 = phi i64 [ %135, %132 ], [ %147, %140 ]
  %150 = add i64 %149, -1
  store i64 %150, i64* %133, align 8
  br label %151

151:                                              ; preds = %113, %125, %148
  %152 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  %155 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, %154
  %158 = shl i32 %157, 1
  %159 = load i32, i32* %12, align 8
  %160 = icmp ult i32 %158, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %151
  %162 = tail call %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.164"* %0, %"struct.WTF::KeyValuePair.166"* %75)
  br label %163

163:                                              ; preds = %49, %151, %161
  %164 = phi i8 [ 1, %151 ], [ 1, %161 ], [ 0, %49 ]
  %165 = phi %"struct.WTF::KeyValuePair.166"* [ %75, %151 ], [ %162, %161 ], [ %42, %49 ]
  %166 = insertvalue { %"struct.WTF::KeyValuePair.166"*, i8 } undef, %"struct.WTF::KeyValuePair.166"* %165, 0
  %167 = insertvalue { %"struct.WTF::KeyValuePair.166"*, i8 } %166, i8 %164, 1
  ret { %"struct.WTF::KeyValuePair.166"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.164"*, %"struct.WTF::KeyValuePair.166"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.164"* %0, i32 %35, %"struct.WTF::KeyValuePair.166"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.166"*
  %44 = call %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.164"* %0, %"struct.WTF::KeyValuePair.166"* %43, i32 %40, %"struct.WTF::KeyValuePair.166"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.166"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.166"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.164"*, i32, %"struct.WTF::KeyValuePair.166"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.166"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.166"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.166"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.166"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.164"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.166"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.164"* %0, %"struct.WTF::KeyValuePair.166"* %42, i32 %1, %"struct.WTF::KeyValuePair.166"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.166"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.166"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.166"* %64, %"struct.WTF::KeyValuePair.166"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.166"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.166"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.166"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.167"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.167"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %96, i64 %59, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.166"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.166"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.166"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_15HeapLinkedStackINS4_IKNS3_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.164"*, %"struct.WTF::KeyValuePair.166"*, i32, %"struct.WTF::KeyValuePair.166"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.166"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %10, align 8
  br label %70

14:                                               ; preds = %169, %4
  %15 = phi i32 [ 0, %4 ], [ %170, %169 ]
  %16 = phi %"struct.WTF::KeyValuePair.166"* [ null, %4 ], [ %172, %169 ]
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.WTF::KeyValuePair.166"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %20) #10
  %21 = load i32, i32* %6, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %15, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %24, align 8
  %26 = bitcast %"class.WTF::HashTable.164"* %0 to i64*
  store atomic i64 %5, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"struct.WTF::KeyValuePair.166"* %1 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %22, %29
  store i32 %2, i32* %6, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.166"* %25, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %23, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %34
  %37 = zext i32 %23 to i64
  br label %38

38:                                               ; preds = %61, %36
  %39 = phi i64 [ 0, %36 ], [ %62, %61 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %25, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  switch i64 %43, label %44 [
    i64 -1, label %61
    i64 0, label %61
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53
  %58 = bitcast %"struct.WTF::KeyValuePair.166"* %40 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %25, i64 %39, i32 1
  %60 = bitcast %"class.blink::Member.167"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %57, %38, %38
  %62 = add nuw nsw i64 %39, 1
  %63 = icmp eq i64 %62, %37
  br i1 %63, label %64, label %38

64:                                               ; preds = %61, %34
  %65 = bitcast %"struct.WTF::KeyValuePair.166"* %25 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #10
  br label %66

66:                                               ; preds = %32, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable.164", %"class.WTF::HashTable.164"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  ret %"struct.WTF::KeyValuePair.166"* %16

70:                                               ; preds = %9, %169
  %71 = phi i32 [ %7, %9 ], [ %170, %169 ]
  %72 = phi %"struct.WTF::KeyValuePair.166"* [ %13, %9 ], [ %171, %169 ]
  %73 = phi %"struct.WTF::KeyValuePair.166"* [ null, %9 ], [ %172, %169 ]
  %74 = phi i32 [ 0, %9 ], [ %173, %169 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %72, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.WTF::KeyValuePair.166"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  switch i64 %79, label %81 [
    i64 -1, label %169
    i64 0, label %169
  ]

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, %11
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.166"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %81
  %93 = xor i32 %84, -1
  %94 = lshr i32 %83, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %114

106:                                              ; preds = %126
  %107 = ptrtoint %"struct.WTF::KeyValuePair.166"* %132 to i64
  br label %108

108:                                              ; preds = %106, %81
  %109 = phi i64 [ %88, %81 ], [ %107, %106 ]
  %110 = phi %"struct.WTF::KeyValuePair.166"* [ null, %81 ], [ %127, %106 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair.166"* %110, null
  %112 = ptrtoint %"struct.WTF::KeyValuePair.166"* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %137

114:                                              ; preds = %126, %92
  %115 = phi %"struct.WTF::KeyValuePair.166"* [ null, %92 ], [ %127, %126 ]
  %116 = phi i64 [ %88, %92 ], [ %133, %126 ]
  %117 = phi %"struct.WTF::KeyValuePair.166"* [ %87, %92 ], [ %132, %126 ]
  %118 = phi i64 [ %86, %92 ], [ %131, %126 ]
  %119 = phi i64 [ 0, %92 ], [ %129, %126 ]
  %120 = bitcast %"struct.WTF::KeyValuePair.166"* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = bitcast i8* %121 to %"class.WTF::StringImpl"*
  %125 = icmp eq %"class.WTF::StringImpl"* %80, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %123, %114
  %127 = phi %"struct.WTF::KeyValuePair.166"* [ %115, %123 ], [ %117, %114 ]
  %128 = icmp eq i64 %119, 0
  %129 = select i1 %128, i64 %105, i64 %119
  %130 = add i64 %129, %118
  %131 = and i64 %130, %12
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %1, i64 %131
  %133 = ptrtoint %"struct.WTF::KeyValuePair.166"* %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %106, label %114

137:                                              ; preds = %123, %108
  %138 = phi i64 [ %113, %108 ], [ %116, %123 ]
  %139 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair.166"*
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #10
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = load i64, i64* %78, align 8
  %158 = inttoptr i64 %138 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %139, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %72, i64 %75, i32 1
  %161 = bitcast %"class.blink::Member.167"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member.167"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair.166"*, %"struct.WTF::KeyValuePair.166"** %10, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %164, i64 %75
  %166 = icmp eq %"struct.WTF::KeyValuePair.166"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair.166"* %139, %"struct.WTF::KeyValuePair.166"* %73
  %168 = load i32, i32* %6, align 8
  br label %169

169:                                              ; preds = %70, %70, %156
  %170 = phi i32 [ %71, %70 ], [ %168, %156 ], [ %71, %70 ]
  %171 = phi %"struct.WTF::KeyValuePair.166"* [ %72, %70 ], [ %164, %156 ], [ %72, %70 ]
  %172 = phi %"struct.WTF::KeyValuePair.166"* [ %73, %70 ], [ %167, %156 ], [ %73, %70 ]
  %173 = add i32 %74, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %14, label %70
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.9, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_15HeapLinkedStackINS5_IKNS_8RuleDataEEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_15HeapLinkedStackINS5_IKNS_8RuleDataEEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([500 x i8], [500 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_15HeapLinkedStackINS6_IKNS1_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_15HeapLinkedStackINS6_IKNS5_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_15HeapLinkedStackINS7_IKNS_8RuleDataEEEEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.166"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_15HeapLinkedStackINS6_IKNS_8RuleDataEEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_15HeapLinkedStackINS6_IKNS5_8RuleDataEEEEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.166"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.166"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.167"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.166", %"struct.WTF::KeyValuePair.166"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.167"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8RuleDataEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HeapLinkedStackINS1_6MemberIKNS1_8RuleDataEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HeapLinkedStackINS1_6MemberIKNS1_8RuleDataEEEE4NodeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15HeapLinkedStackINS_6MemberIKNS_8RuleDataEEEE4NodeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.54"*, %"class.blink::RuleData"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.54"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %16, i64 %18
  %20 = bitcast %"class.blink::RuleData"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.57"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.89"*, %"class.blink::StyleRulePage"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.89"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRulePage"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.92"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.89"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %8, align 8
  %10 = icmp eq %"class.blink::Member.92"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.89"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %8, align 8
  %26 = icmp eq %"class.blink::Member.92"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.92"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.89"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.89"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.89"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.89"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.92"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.92"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.89"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.89"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.89"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRulePageEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.92"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.92"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRulePage"*
  %35 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13StyleRulePageEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRulePageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13StyleRulePageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.97"*, %"class.blink::StyleRuleFontFace"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.97"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.100", %"class.blink::Member.100"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleFontFace"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.100"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.97"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %8, align 8
  %10 = icmp eq %"class.blink::Member.100"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.974"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.974"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.97"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.974", %"class.blink::HeapVectorBacking.974"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %8, align 8
  %26 = icmp eq %"class.blink::Member.100"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.100"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.97"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.97"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.97"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.97"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.974"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.974"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.974"* %17, null
  %23 = icmp ne %"class.blink::Member.100"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.100"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.97"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.974", %"class.blink::HeapVectorBacking.974"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.97"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.97"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.974", %"class.blink::HeapVectorBacking.974"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.974"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.974"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.974"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.100"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.100", %"class.blink::Member.100"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.100"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleFontFace"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.105"*, %"class.blink::StyleRuleKeyframes"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.105"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.108", %"class.blink::Member.108"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleKeyframes"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.108"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.105"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %8, align 8
  %10 = icmp eq %"class.blink::Member.108"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.986"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.986"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.105"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.986", %"class.blink::HeapVectorBacking.986"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %8, align 8
  %26 = icmp eq %"class.blink::Member.108"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.108"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.105"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.105"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.105"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.105"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.986"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.986"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.986"* %17, null
  %23 = icmp ne %"class.blink::Member.108"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.108"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.105"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.986", %"class.blink::HeapVectorBacking.986"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.105"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.105"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.986", %"class.blink::HeapVectorBacking.986"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.986"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.986"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.986"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleKeyframesEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.108"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.108", %"class.blink::Member.108"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.108"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleKeyframes"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.122"*, %"class.blink::StyleRuleProperty"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.122"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.125", %"class.blink::Member.125"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleProperty"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.125"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.122"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %8, align 8
  %10 = icmp eq %"class.blink::Member.125"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.998"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.998"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.998", %"class.blink::HeapVectorBacking.998"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %8, align 8
  %26 = icmp eq %"class.blink::Member.125"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.125"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.122"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.122"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.998"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.998"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.998"* %17, null
  %23 = icmp ne %"class.blink::Member.125"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.125"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.998", %"class.blink::HeapVectorBacking.998"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.998", %"class.blink::HeapVectorBacking.998"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.998"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.998"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.998"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRulePropertyEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.125"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.125", %"class.blink::Member.125"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.125"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleProperty"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRulePropertyEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRulePropertyEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17StyleRulePropertyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.130"*, %"class.blink::StyleRuleCounterStyle"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.130"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.133", %"class.blink::Member.133"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleCounterStyle"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.133"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.130"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %8, align 8
  %10 = icmp eq %"class.blink::Member.133"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1010"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1010"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.130"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1010", %"class.blink::HeapVectorBacking.1010"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %8, align 8
  %26 = icmp eq %"class.blink::Member.133"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.133"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.130"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.130"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.130"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.130"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1010"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1010"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1010"* %17, null
  %23 = icmp ne %"class.blink::Member.133"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.133"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.130"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1010", %"class.blink::HeapVectorBacking.1010"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.130"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.130"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1010", %"class.blink::HeapVectorBacking.1010"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1010"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1010"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1010"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21StyleRuleCounterStyleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.133"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.133", %"class.blink::Member.133"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.133"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleCounterStyle"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21StyleRuleCounterStyleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.138"*, %"class.blink::StyleRuleScrollTimeline"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.138"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.141", %"class.blink::Member.141"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleScrollTimeline"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.141"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.138"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %8, align 8
  %10 = icmp eq %"class.blink::Member.141"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1022"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1022"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1022", %"class.blink::HeapVectorBacking.1022"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %8, align 8
  %26 = icmp eq %"class.blink::Member.141"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.141"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.138"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.138"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.138"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1022"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1022"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1022"* %17, null
  %23 = icmp ne %"class.blink::Member.141"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.141"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.138"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1022", %"class.blink::HeapVectorBacking.1022"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.138"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1022", %"class.blink::HeapVectorBacking.1022"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1022"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1022"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1022"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23StyleRuleScrollTimelineEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.141"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.141", %"class.blink::Member.141"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.141"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleScrollTimeline"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23StyleRuleScrollTimelineEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23StyleRuleScrollTimelineEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23StyleRuleScrollTimelineEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.183"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.180"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.180", %"class.WTF::Vector.180"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.180", %"class.WTF::Vector.180"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.183"*, %"class.blink::Member.183"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.183", %"class.blink::Member.183"* %24, i64 %25
  ret %"class.blink::Member.183"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MinimalRuleData"* @_ZN3WTF15ConstructTraitsIN5blink15MinimalRuleDataENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::MinimalRuleData"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::MinimalRuleData"*
  %4 = bitcast %"class.blink::MinimalRuleData"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %1, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  %10 = bitcast i8* %7 to i64*
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %6 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to %"class.blink::StyleRule"*
  %39 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %38, i64 0, i32 0, i32 0
  %40 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %37, i8* %39, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  %44 = load i64, i64* %29, align 8
  br label %45

45:                                               ; preds = %36, %28
  %46 = phi i64 [ %31, %28 ], [ %44, %36 ]
  %47 = add i64 %46, -1
  store i64 %47, i64* %29, align 8
  br label %48

48:                                               ; preds = %2, %21, %45
  ret %"class.blink::MinimalRuleData"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.146"*, %"class.blink::MinimalRuleData"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %6, align 8
  %8 = icmp ugt %"class.blink::MinimalRuleData"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %7, i64 %10
  %12 = icmp ugt %"class.blink::MinimalRuleData"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.146"* %0, i32 %22) #10
  %23 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::MinimalRuleData"* %1 to i64
  %26 = ptrtoint %"class.blink::MinimalRuleData"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.146"* %0, i32 %37) #10
  %38 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::MinimalRuleData"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::MinimalRuleData"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %41, i64 %44
  %46 = bitcast %"class.blink::MinimalRuleData"* %45 to i8*
  %47 = tail call %"class.blink::MinimalRuleData"* @_ZN3WTF15ConstructTraitsIN5blink15MinimalRuleDataENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::MinimalRuleData"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.146"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %8, align 8
  %10 = icmp eq %"class.blink::MinimalRuleData"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.1033"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1033"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.146"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1033", %"class.blink::HeapVectorBacking.1033"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %8, align 8
  %26 = icmp eq %"class.blink::MinimalRuleData"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::MinimalRuleData"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.146"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.146"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.146"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.146"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.1033"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1033"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1033"* %17, null
  %23 = icmp ne %"class.blink::MinimalRuleData"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::MinimalRuleData"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.146"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1033", %"class.blink::HeapVectorBacking.1033"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.146"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.146"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1033", %"class.blink::HeapVectorBacking.1033"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1033"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1033"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1033"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_15MinimalRuleDataENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::MinimalRuleData"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %30, i64 %55
  %57 = bitcast %"class.blink::MinimalRuleData"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::StyleRule"*
  %62 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %61, i64 0, i32 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #10
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp eq i64 %67, %50
  br i1 %68, label %69, label %54

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15MinimalRuleDataEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.150"*, %"class.blink::MediaQuerySetResult"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %6, align 8
  %8 = icmp ugt %"class.blink::MediaQuerySetResult"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %7, i64 %10
  %12 = icmp ugt %"class.blink::MediaQuerySetResult"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::MediaQuerySetResult"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19MediaQuerySetResultEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQuerySetResultEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.150"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::MediaQuerySetResult"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.150"* %0, i32 %22) #10
  %36 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::MediaQuerySetResult"* %1 to i64
  %39 = ptrtoint %"class.blink::MediaQuerySetResult"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::MediaQuerySetResult"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19MediaQuerySetResultEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQuerySetResultEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.150"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::MediaQuerySetResult"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.150"* %0, i32 %50) #10
  %64 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::MediaQuerySetResult"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::MediaQuerySetResult"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::MediaQuerySetResult"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %69, i64 %72
  %74 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %70, i64 0, i32 0, i32 0
  %75 = bitcast %"class.blink::MediaQuerySetResult"* %70 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.blink::MediaQuerySetResult"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %74, align 8
  %78 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %69, i64 %72, i32 1
  %79 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %70, i64 0, i32 1
  %80 = load i8, i8* %79, align 8, !range !4
  store i8 %80, i8* %78, align 8
  %81 = load i32, i32* %3, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19MediaQuerySetResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.150"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.150"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %4, %61
  %15 = phi %"class.blink::MediaQuerySetResult"* [ %63, %61 ], [ %6, %4 ]
  %16 = phi %"class.blink::MediaQuerySetResult"* [ %62, %61 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %15, i64 0, i32 0, i32 0
  %18 = bitcast %"class.blink::MediaQuerySetResult"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::MediaQuerySetResult"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %15, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !4
  store i8 %23, i8* %21, align 8
  %24 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %17, align 8
  %25 = icmp eq %"class.blink::MediaQuerySet"* %24, null
  br i1 %25, label %61, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #10
  %28 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %61

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %24, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.30"*, %"class.std::__1::unique_ptr.30"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.30"* %34, null
  br i1 %35, label %59, label %36, !prof !5

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::unique_ptr.30"* %34 to i8*
  %38 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %24, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %57, label %41, !prof !3

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %34, i64 %42
  br label %44

44:                                               ; preds = %51, %41
  %45 = phi %"class.std::__1::unique_ptr.30"* [ %52, %51 ], [ %34, %41 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %46, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %46, align 8
  %48 = icmp eq %"class.blink::MediaQuery"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %47) #10
  %50 = bitcast %"class.blink::MediaQuery"* %47 to i8*
  tail call void @free(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %44
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %45, i64 1
  %53 = icmp eq %"class.std::__1::unique_ptr.30"* %52, %43
  br i1 %53, label %54, label %44

54:                                               ; preds = %51
  store i32 0, i32* %38, align 4
  %55 = bitcast %"class.WTF::Vector.27"* %32 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %36
  %58 = phi i8* [ %56, %54 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %58) #10
  br label %59

59:                                               ; preds = %57, %31
  %60 = bitcast %"class.blink::MediaQuerySet"* %24 to i8*
  tail call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %14, %26, %59
  %62 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 1
  %63 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %15, i64 1
  %64 = icmp eq %"class.blink::MediaQuerySetResult"* %63, %10
  br i1 %64, label %65, label %14

65:                                               ; preds = %61, %4
  %66 = bitcast %"class.blink::MediaQuerySetResult"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %66) #10
  br label %143

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19MediaQuerySetResultEEEmm(i64 %68) #10
  %70 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %69, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQuerySetResultEEEPKcv, i64 0, i64 0)) #10
  %71 = lshr i64 %69, 4
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  %81 = bitcast %"class.blink::MediaQuerySetResult"* %74 to i8*
  br label %138

82:                                               ; preds = %67
  %83 = bitcast i8* %70 to %"class.blink::MediaQuerySetResult"*
  br label %84

84:                                               ; preds = %82, %131
  %85 = phi %"class.blink::MediaQuerySetResult"* [ %133, %131 ], [ %74, %82 ]
  %86 = phi %"class.blink::MediaQuerySetResult"* [ %132, %131 ], [ %83, %82 ]
  %87 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %85, i64 0, i32 0, i32 0
  %88 = bitcast %"class.blink::MediaQuerySetResult"* %85 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::MediaQuerySetResult"* %86 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %87, align 8
  %91 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %86, i64 0, i32 1
  %92 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %85, i64 0, i32 1
  %93 = load i8, i8* %92, align 8, !range !4
  store i8 %93, i8* %91, align 8
  %94 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %87, align 8
  %95 = icmp eq %"class.blink::MediaQuerySet"* %94, null
  br i1 %95, label %131, label %96

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %94, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #10
  %98 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %131

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %94, i64 0, i32 1
  %103 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::unique_ptr.30"*, %"class.std::__1::unique_ptr.30"** %103, align 8
  %105 = icmp eq %"class.std::__1::unique_ptr.30"* %104, null
  br i1 %105, label %129, label %106, !prof !5

106:                                              ; preds = %101
  %107 = bitcast %"class.std::__1::unique_ptr.30"* %104 to i8*
  %108 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %94, i64 0, i32 1, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %127, label %111, !prof !3

111:                                              ; preds = %106
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %104, i64 %112
  br label %114

114:                                              ; preds = %121, %111
  %115 = phi %"class.std::__1::unique_ptr.30"* [ %122, %121 ], [ %104, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %116, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %116, align 8
  %118 = icmp eq %"class.blink::MediaQuery"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %114
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %117) #10
  %120 = bitcast %"class.blink::MediaQuery"* %117 to i8*
  tail call void @free(i8* %120) #10
  br label %121

121:                                              ; preds = %119, %114
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %115, i64 1
  %123 = icmp eq %"class.std::__1::unique_ptr.30"* %122, %113
  br i1 %123, label %124, label %114

124:                                              ; preds = %121
  store i32 0, i32* %108, align 4
  %125 = bitcast %"class.WTF::Vector.27"* %102 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %106
  %128 = phi i8* [ %126, %124 ], [ %107, %106 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %128) #10
  br label %129

129:                                              ; preds = %127, %101
  %130 = bitcast %"class.blink::MediaQuerySet"* %94 to i8*
  tail call void @free(i8* %130) #10
  br label %131

131:                                              ; preds = %84, %96, %129
  %132 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %86, i64 1
  %133 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %85, i64 1
  %134 = icmp eq %"class.blink::MediaQuerySetResult"* %133, %78
  br i1 %134, label %135, label %84

135:                                              ; preds = %131
  %136 = bitcast %"class.WTF::Vector.150"* %0 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %80, %135
  %139 = phi i8* [ %137, %135 ], [ %81, %80 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %139) #10
  %140 = bitcast %"class.WTF::Vector.150"* %0 to i64*
  store atomic i64 %72, i64* %140 monotonic, align 8
  %141 = trunc i64 %71 to i32
  %142 = getelementptr inbounds %"class.WTF::Vector.150", %"class.WTF::Vector.150"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %143

143:                                              ; preds = %138, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19MediaQuerySetResultEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.194"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.203"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.194"*, %"class.blink::Member.194"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.194", %"class.blink::Member.194"* %24, i64 %25
  ret %"class.blink::Member.194"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS1_DnEENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %163, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #10
  %66 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1
  %115 = bitcast %"class.blink::Member.50"* %114 to i64*
  store atomic i64 0, i64* %115 monotonic, align 8
  %116 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %151, label %118

118:                                              ; preds = %113
  %119 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %120 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %119, i64 0, i32 1
  %121 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %120) #10
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %125, !prof !3

123:                                              ; preds = %118
  %124 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %120, i8* %124) #10
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i8* [ %124, %123 ], [ %121, %118 ]
  %127 = bitcast i8* %126 to %"class.blink::ThreadState"**
  %128 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 9
  %130 = load i8, i8* %129, align 1, !range !4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %151, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 13
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  %136 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %136, align 8
  %138 = load atomic i64, i64* %115 monotonic, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %137, i64 0, i32 0, i32 0
  %142 = inttoptr i64 %138 to i8*
  %143 = bitcast %"class.blink::MarkingVisitor"* %137 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %144 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %144, i64 5
  %146 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %145, align 8
  tail call void %146(%"class.blink::Visitor"* %141, i8* nonnull %142, i8* %142, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  %147 = load i64, i64* %133, align 8
  br label %148

148:                                              ; preds = %140, %132
  %149 = phi i64 [ %135, %132 ], [ %147, %140 ]
  %150 = add i64 %149, -1
  store i64 %150, i64* %133, align 8
  br label %151

151:                                              ; preds = %113, %125, %148
  %152 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  %155 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, %154
  %158 = shl i32 %157, 1
  %159 = load i32, i32* %12, align 8
  %160 = icmp ult i32 %158, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %151
  %162 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %75)
  br label %163

163:                                              ; preds = %49, %151, %161
  %164 = phi i8 [ 1, %151 ], [ 1, %161 ], [ 0, %49 ]
  %165 = phi %"struct.WTF::KeyValuePair"* [ %75, %151 ], [ %162, %161 ], [ %42, %49 ]
  %166 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %165, 0
  %167 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %166, i8 %164, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1043"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking.1043"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1043"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking.1043"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking.1043"**
  store %"class.blink::HeapHashTableBacking.1043"* %44, %"class.blink::HeapHashTableBacking.1043"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1043", %"class.blink::HeapHashTableBacking.1043"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.50"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.50"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %59, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_IKNS3_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %70

14:                                               ; preds = %169, %4
  %15 = phi i32 [ 0, %4 ], [ %170, %169 ]
  %16 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %172, %169 ]
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %20) #10
  %21 = load i32, i32* %6, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %15, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %24, align 8
  %26 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %22, %29
  store i32 %2, i32* %6, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %25, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %23, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %34
  %37 = zext i32 %23 to i64
  br label %38

38:                                               ; preds = %61, %36
  %39 = phi i64 [ 0, %36 ], [ %62, %61 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  switch i64 %43, label %44 [
    i64 -1, label %61
    i64 0, label %61
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %56, %53
  %58 = bitcast %"struct.WTF::KeyValuePair"* %40 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %39, i32 1
  %60 = bitcast %"class.blink::Member.50"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %57, %38, %38
  %62 = add nuw nsw i64 %39, 1
  %63 = icmp eq i64 %62, %37
  br i1 %63, label %64, label %38

64:                                               ; preds = %61, %34
  %65 = bitcast %"struct.WTF::KeyValuePair"* %25 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #10
  br label %66

66:                                               ; preds = %32, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  ret %"struct.WTF::KeyValuePair"* %16

70:                                               ; preds = %9, %169
  %71 = phi i32 [ %7, %9 ], [ %170, %169 ]
  %72 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %171, %169 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %172, %169 ]
  %74 = phi i32 [ 0, %9 ], [ %173, %169 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.WTF::KeyValuePair"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  switch i64 %79, label %81 [
    i64 -1, label %169
    i64 0, label %169
  ]

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, %11
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %81
  %93 = xor i32 %84, -1
  %94 = lshr i32 %83, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %114

106:                                              ; preds = %126
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %132 to i64
  br label %108

108:                                              ; preds = %106, %81
  %109 = phi i64 [ %88, %81 ], [ %107, %106 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ null, %81 ], [ %127, %106 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair"* %110, null
  %112 = ptrtoint %"struct.WTF::KeyValuePair"* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %137

114:                                              ; preds = %126, %92
  %115 = phi %"struct.WTF::KeyValuePair"* [ null, %92 ], [ %127, %126 ]
  %116 = phi i64 [ %88, %92 ], [ %133, %126 ]
  %117 = phi %"struct.WTF::KeyValuePair"* [ %87, %92 ], [ %132, %126 ]
  %118 = phi i64 [ %86, %92 ], [ %131, %126 ]
  %119 = phi i64 [ 0, %92 ], [ %129, %126 ]
  %120 = bitcast %"struct.WTF::KeyValuePair"* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = bitcast i8* %121 to %"class.WTF::StringImpl"*
  %125 = icmp eq %"class.WTF::StringImpl"* %80, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %123, %114
  %127 = phi %"struct.WTF::KeyValuePair"* [ %115, %123 ], [ %117, %114 ]
  %128 = icmp eq i64 %119, 0
  %129 = select i1 %128, i64 %105, i64 %119
  %130 = add i64 %129, %118
  %131 = and i64 %130, %12
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %131
  %133 = ptrtoint %"struct.WTF::KeyValuePair"* %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %106, label %114

137:                                              ; preds = %123, %108
  %138 = phi i64 [ %113, %108 ], [ %116, %123 ]
  %139 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair"*
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #10
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = load i64, i64* %78, align 8
  %158 = inttoptr i64 %138 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %139, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %75, i32 1
  %161 = bitcast %"class.blink::Member.50"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member.50"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %164, i64 %75
  %166 = icmp eq %"struct.WTF::KeyValuePair"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair"* %139, %"struct.WTF::KeyValuePair"* %73
  %168 = load i32, i32* %6, align 8
  br label %169

169:                                              ; preds = %70, %70, %156
  %170 = phi i32 [ %71, %70 ], [ %168, %156 ], [ %71, %70 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %72, %70 ], [ %164, %156 ], [ %72, %70 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %73, %70 ], [ %167, %156 ], [ %73, %70 ]
  %173 = add i32 %74, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %14, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1043"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.9, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_IKNS_8RuleDataEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1043"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1043"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_IKNS_8RuleDataEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([494 x i8], [494 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_IKNS1_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_IKNS5_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_IKNS_8RuleDataEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSI_ISD_EEEESJ_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_IKNS_8RuleDataEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_IKNS5_8RuleDataEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSH_ISC_EEEESI_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.50"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.50"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #10
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.57"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.57"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8RuleDataEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberIKNS1_8RuleDataEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberIKNS_8RuleDataEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1057"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1057"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1057"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8RuleDataEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.54"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1057"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8RuleDataEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1057"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1057"* %17, null
  %23 = icmp ne %"class.blink::Member.57"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.57"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1057", %"class.blink::HeapVectorBacking.1057"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1057", %"class.blink::HeapVectorBacking.1057"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector.54"*, %"class.blink::Member.57"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.57"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.57"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.54"* %0, i32 %22) #10
  %23 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.57"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.57"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.54"* %0, i32 %37) #10
  %38 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.57"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.57"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.57"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.57"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #10
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.54"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.57"*, %"class.blink::Member.57"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.57", %"class.blink::Member.57"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.57"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.57"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.57"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8RuleDataEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8RuleDataEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.54"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.89"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.89", %"class.WTF::Vector.89"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.92"*, %"class.blink::Member.92"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.92"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.92"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.92"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.89"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRulePageEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRulePageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.89"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.89"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.89"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.97"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.97", %"class.WTF::Vector.97"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.100"*, %"class.blink::Member.100"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.100", %"class.blink::Member.100"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.100", %"class.blink::Member.100"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.100"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.100"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.100"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.97"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.97"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.97"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.97"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.105"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.105", %"class.WTF::Vector.105"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.108"*, %"class.blink::Member.108"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.108", %"class.blink::Member.108"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.108", %"class.blink::Member.108"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.108"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.108"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.108"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.105"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.105"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.105"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.105"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.122"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.125"*, %"class.blink::Member.125"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.125", %"class.blink::Member.125"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.125", %"class.blink::Member.125"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.125"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.125"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.125"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRulePropertyEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRulePropertyEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.122"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.122"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.122"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.130"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.130", %"class.WTF::Vector.130"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.133"*, %"class.blink::Member.133"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.133", %"class.blink::Member.133"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.133", %"class.blink::Member.133"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.133"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.133"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.133"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.130"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21StyleRuleCounterStyleEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21StyleRuleCounterStyleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.130"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.130"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.130"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.138"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.138", %"class.WTF::Vector.138"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.141"*, %"class.blink::Member.141"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::Member.141", %"class.blink::Member.141"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.141", %"class.blink::Member.141"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.141"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.141"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.141"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.138"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23StyleRuleScrollTimelineEEEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23StyleRuleScrollTimelineEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.138"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.138"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.138"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.146"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.146", %"class.WTF::Vector.146"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %12, i64 %14
  %17 = bitcast %"class.blink::MinimalRuleData"* %15 to i8*
  %18 = ptrtoint %"class.blink::MinimalRuleData"* %16 to i64
  %19 = ptrtoint %"class.blink::MinimalRuleData"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm(i64 %24) #10
  %26 = bitcast %"class.WTF::Vector.146"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15MinimalRuleDataEEEmm(i64 %29) #10
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #10
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 4
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #10
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #10
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink15MinimalRuleDataELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.146"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.146"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.146"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
