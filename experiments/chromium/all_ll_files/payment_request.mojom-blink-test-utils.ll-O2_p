; ModuleID = 'gen/third_party/blink/public/mojom/payments/payment_request.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/payments/payment_request.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter" = type { %"class.payments::mojom::blink::PaymentRequestClient"* }
%"class.payments::mojom::blink::PaymentRequestClient" = type { i32 (...)** }
%"class.payments::mojom::blink::PaymentRequestAsyncWaiter" = type { %"class.payments::mojom::blink::PaymentRequest"* }
%"class.payments::mojom::blink::PaymentRequest" = type { i32 (...)** }
%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting" = type { %"class.payments::mojom::blink::PaymentRequestClient" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.payments::mojom::blink::PaymentAddress"* }
%"class.payments::mojom::blink::PaymentAddress" = type { %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.payments::mojom::blink::PayerDetail", i32, [4 x i8] }>
%"class.payments::mojom::blink::PayerDetail" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.2" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.payments::mojom::blink::PaymentResponse"* }
%"class.payments::mojom::blink::PaymentResponse" = type { %"class.WTF::String", %"class.WTF::String", %"class.mojo::StructPtr", %"class.WTF::String", %"class.mojo::InlinedStructPtr" }
%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting" = type { %"class.payments::mojom::blink::PaymentRequest" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.mojo::StructPtr.12"*, i32, i32 }
%"class.mojo::StructPtr.12" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.payments::mojom::blink::PaymentMethodData"* }
%"class.payments::mojom::blink::PaymentMethodData" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, i32, %"class.WTF::Vector.16", %"class.mojo::StructPtr.21" }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { i32*, i32, i32 }
%"class.mojo::StructPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.payments::mojom::blink::SecurePaymentConfirmationRequest"* }
%"class.payments::mojom::blink::SecurePaymentConfirmationRequest" = type { %"class.WTF::Vector.25", %"class.WTF::Vector.28", %"class.absl::optional" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.WTF::Vector.28"*, i32, i32 }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { i8*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.payments::mojom::blink::PaymentDetails"* }
%"class.payments::mojom::blink::PaymentDetails" = type { %"class.mojo::StructPtr.47", %"class.absl::optional.56", %"class.absl::optional.66", %"class.absl::optional.83", %"class.WTF::String", %"class.mojo::StructPtr.100", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.47" = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.payments::mojom::blink::PaymentItem"* }
%"class.payments::mojom::blink::PaymentItem" = type <{ %"class.WTF::String", %"class.mojo::InlinedStructPtr.51", i8, [7 x i8] }>
%"class.mojo::InlinedStructPtr.51" = type <{ %"class.payments::mojom::blink::PaymentCurrencyAmount", i32, [4 x i8] }>
%"class.payments::mojom::blink::PaymentCurrencyAmount" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.WTF::Vector.61" }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.mojo::StructPtr.47"*, i32, i32 }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"class.WTF::Vector.71" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.mojo::StructPtr.74"*, i32, i32 }
%"class.mojo::StructPtr.74" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.payments::mojom::blink::PaymentShippingOption"* }
%"class.payments::mojom::blink::PaymentShippingOption" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.51", i8, [7 x i8] }>
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.mojo::StructPtr.91"*, i32, i32 }
%"class.mojo::StructPtr.91" = type { %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.payments::mojom::blink::PaymentDetailsModifier"* }
%"class.payments::mojom::blink::PaymentDetailsModifier" = type { %"class.mojo::StructPtr.47", %"class.WTF::Vector.61", %"class.mojo::StructPtr.12" }
%"class.mojo::StructPtr.100" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.payments::mojom::blink::AddressErrors"* }
%"class.payments::mojom::blink::AddressErrors" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.110" = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.payments::mojom::blink::PaymentOptions"* }
%"class.payments::mojom::blink::PaymentOptions" = type { i8, i8, i8, i8, i32 }
%"class.mojo::StructPtr.117" = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.payments::mojom::blink::PaymentValidationErrors"* }
%"class.payments::mojom::blink::PaymentValidationErrors" = type { %"class.WTF::String", %"class.mojo::InlinedStructPtr.121", %"class.mojo::StructPtr.100" }
%"class.mojo::InlinedStructPtr.121" = type <{ %"class.payments::mojom::blink::PayerErrors", i32, [4 x i8] }>
%"class.payments::mojom::blink::PayerErrors" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }

$_ZN8payments5mojom5blink20PaymentRequestClientD2Ev = comdat any

$_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTestingD0Ev = comdat any

$_ZN8payments5mojom5blink14PaymentRequestD2Ev = comdat any

$_ZN8payments5mojom5blink35PaymentRequestInterceptorForTestingD0Ev = comdat any

$_ZNSt3__14swapIN8payments5mojom5blink11PayerDetailEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN8payments5mojom5blink11PayerDetailaSERKS2_ = comdat any

@_ZTVN8payments5mojom5blink41PaymentRequestClientInterceptorForTestingE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClient"*)* @_ZN8payments5mojom5blink20PaymentRequestClientD2Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting21OnPaymentMethodChangeERKN3WTF6StringES6_ to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting23OnShippingAddressChangeEN4mojo9StructPtrINS1_14PaymentAddressEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting22OnShippingOptionChangeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting19OnPayerDetailChangeEN4mojo16InlinedStructPtrINS1_11PayerDetailEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::StructPtr.2"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting17OnPaymentResponseEN4mojo9StructPtrINS1_15PaymentResponseEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32, %"class.WTF::String"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting7OnErrorENS0_18PaymentErrorReasonERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting10OnCompleteEv to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i1)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting7OnAbortEb to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting16OnCanMakePaymentENS0_25CanMakePaymentQueryResultE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting23OnHasEnrolledInstrumentENS0_32HasEnrolledInstrumentQueryResultE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)* @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting13WarnNoFaviconEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN8payments5mojom5blink35PaymentRequestInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequest"*)* @_ZN8payments5mojom5blink14PaymentRequestD2Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting4InitEN4mojo13PendingRemoteINS1_20PaymentRequestClientEEEN3WTF6VectorINS3_9StructPtrINS1_17PaymentMethodDataEEELj0ENS7_18PartitionAllocatorEEENS9_INS1_14PaymentDetailsEEENS9_INS1_14PaymentOptionsEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, i1, i1)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting4ShowEbb to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::StructPtr.43"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting10UpdateWithEN4mojo9StructPtrINS1_14PaymentDetailsEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting26OnPaymentDetailsNotUpdatedEv to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting5AbortEv to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, i32)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting8CompleteENS0_15PaymentCompleteE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::StructPtr.117"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting5RetryEN4mojo9StructPtrINS1_23PaymentValidationErrorsEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting14CanMakePaymentEv to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting21HasEnrolledInstrumentEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterC1EPNS1_20PaymentRequestClientE = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"*, %"class.payments::mojom::blink::PaymentRequestClient"*), void (%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"*, %"class.payments::mojom::blink::PaymentRequestClient"*)* @_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterC2EPNS1_20PaymentRequestClientE
@_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"*), void (%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"*)* @_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterD2Ev
@_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterC1EPNS1_14PaymentRequestE = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"*, %"class.payments::mojom::blink::PaymentRequest"*), void (%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"*, %"class.payments::mojom::blink::PaymentRequest"*)* @_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterC2EPNS1_14PaymentRequestE
@_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"*), void (%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"*)* @_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting21OnPaymentMethodChangeERKN3WTF6StringES6_(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, i64 13
  %7 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %7(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %8 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)***
  %10 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)** %10, i64 2
  %12 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.payments::mojom::blink::PaymentRequestClient"* %8, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting23OnShippingAddressChangeEN4mojo9StructPtrINS1_14PaymentAddressEEE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, i64 13
  %7 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %7(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %8 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)** %14, i64 3
  %16 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentRequestClient"* %8, %"class.mojo::StructPtr"* nonnull %3) #10
  %17 = load %"class.payments::mojom::blink::PaymentAddress"*, %"class.payments::mojom::blink::PaymentAddress"** %10, align 8
  store %"class.payments::mojom::blink::PaymentAddress"* null, %"class.payments::mojom::blink::PaymentAddress"** %10, align 8
  %18 = icmp eq %"class.payments::mojom::blink::PaymentAddress"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN8payments5mojom5blink14PaymentAddressD1Ev(%"class.payments::mojom::blink::PaymentAddress"* nonnull %17) #10
  %20 = bitcast %"class.payments::mojom::blink::PaymentAddress"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting22OnShippingOptionChangeERKN3WTF6StringE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, i64 13
  %6 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %6(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %7 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)***
  %9 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)** %9, i64 4
  %11 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentRequestClient"* %7, %"class.WTF::String"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting19OnPayerDetailChangeEN4mojo16InlinedStructPtrINS1_11PayerDetailEEE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::InlinedStructPtr", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, i64 13
  %7 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %7(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 0
  call void @_ZN8payments5mojom5blink11PayerDetailC1Ev(%"class.payments::mojom::blink::PayerDetail"* nonnull %9) #10
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 1
  store i32 0, i32* %10, align 8
  call void @_ZN8payments5mojom5blink11PayerDetailD1Ev(%"class.payments::mojom::blink::PayerDetail"* nonnull %9) #10
  call void @_ZN8payments5mojom5blink11PayerDetailC1Ev(%"class.payments::mojom::blink::PayerDetail"* nonnull %9) #10
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0
  call void @_ZNSt3__14swapIN8payments5mojom5blink11PayerDetailEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.payments::mojom::blink::PayerDetail"* nonnull dereferenceable(24) %9, %"class.payments::mojom::blink::PayerDetail"* dereferenceable(24) %11) #10
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  %13 = load i32, i32* %10, align 8
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %10, align 8
  store i32 %13, i32* %12, align 4
  %15 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %8 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)***
  %16 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)** %16, i64 5
  %18 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::InlinedStructPtr"*)** %17, align 8
  call void %18(%"class.payments::mojom::blink::PaymentRequestClient"* %8, %"class.mojo::InlinedStructPtr"* nonnull %3) #10
  call void @_ZN8payments5mojom5blink11PayerDetailD1Ev(%"class.payments::mojom::blink::PayerDetail"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting17OnPaymentResponseEN4mojo9StructPtrINS1_15PaymentResponseEEE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, %"class.mojo::StructPtr.2"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.2", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, i64 13
  %7 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %7(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr.2"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.2", %"class.mojo::StructPtr.2"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.2"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %8 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)** %14, i64 6
  %16 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, %"class.mojo::StructPtr.2"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentRequestClient"* %8, %"class.mojo::StructPtr.2"* nonnull %3) #10
  %17 = load %"class.payments::mojom::blink::PaymentResponse"*, %"class.payments::mojom::blink::PaymentResponse"** %10, align 8
  store %"class.payments::mojom::blink::PaymentResponse"* null, %"class.payments::mojom::blink::PaymentResponse"** %10, align 8
  %18 = icmp eq %"class.payments::mojom::blink::PaymentResponse"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN8payments5mojom5blink15PaymentResponseD1Ev(%"class.payments::mojom::blink::PaymentResponse"* nonnull %17) #10
  %20 = bitcast %"class.payments::mojom::blink::PaymentResponse"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting7OnErrorENS0_18PaymentErrorReasonERKN3WTF6StringE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, i64 13
  %7 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %7(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %8 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)***
  %10 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)** %10, i64 7
  %12 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.payments::mojom::blink::PaymentRequestClient"* %8, i32 %1, %"class.WTF::String"* dereferenceable(8) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting10OnCompleteEv(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %3, i64 13
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %5(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %6 to void (%"class.payments::mojom::blink::PaymentRequestClient"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*)** %8, i64 8
  %10 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequestClient"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting7OnAbortEb(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, i64 13
  %6 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %6(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %7 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)***
  %9 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)** %9, i64 9
  %11 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i1)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentRequestClient"* %7, i1 zeroext %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting16OnCanMakePaymentENS0_25CanMakePaymentQueryResultE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, i64 13
  %6 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %6(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %7 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)***
  %9 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)** %9, i64 10
  %11 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentRequestClient"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting23OnHasEnrolledInstrumentENS0_32HasEnrolledInstrumentQueryResultE(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, i64 13
  %6 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %6(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %7 to void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)***
  %9 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)** %9, i64 11
  %11 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*, i32)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentRequestClient"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTesting13WarnNoFaviconEv(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %3, i64 13
  %5 = load %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequestClient"* (%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequestClient"* %5(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequestClient"* %6 to void (%"class.payments::mojom::blink::PaymentRequestClient"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*)**, void (%"class.payments::mojom::blink::PaymentRequestClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequestClient"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*)** %8, i64 12
  %10 = load void (%"class.payments::mojom::blink::PaymentRequestClient"*)*, void (%"class.payments::mojom::blink::PaymentRequestClient"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequestClient"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterC2EPNS1_20PaymentRequestClientE(%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"* nocapture, %"class.payments::mojom::blink::PaymentRequestClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter", %"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.payments::mojom::blink::PaymentRequestClient"* %1, %"class.payments::mojom::blink::PaymentRequestClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8payments5mojom5blink31PaymentRequestClientAsyncWaiterD2Ev(%"class.payments::mojom::blink::PaymentRequestClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting4InitEN4mojo13PendingRemoteINS1_20PaymentRequestClientEEEN3WTF6VectorINS3_9StructPtrINS1_17PaymentMethodDataEEELj0ENS7_18PartitionAllocatorEEENS9_INS1_14PaymentDetailsEEENS9_INS1_14PaymentOptionsEEE(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"* nocapture, %"class.mojo::StructPtr.43"* nocapture, %"class.mojo::StructPtr.110"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingRemote", align 4
  %7 = alloca %"class.WTF::Vector.9", align 8
  %8 = alloca %"class.mojo::StructPtr.43", align 8
  %9 = alloca %"class.mojo::StructPtr.110", align 8
  %10 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %11 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %11, i64 11
  %13 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.payments::mojom::blink::PaymentRequest"* %13(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %15 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %15, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %16) #10
  %17 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %7, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %7, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector.9"* %2 to i64*
  %20 = bitcast %"class.WTF::Vector.9"* %7 to i64*
  store i64 0, i64* %20, align 8
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector.9"* %7 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %17, align 8
  store i32 0, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %18, align 4
  store i32 0, i32* %25, align 4
  %27 = bitcast %"class.mojo::StructPtr.43"* %8 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.mojo::StructPtr.43"* %3 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 0, i64* %29, align 8
  %31 = bitcast %"class.mojo::StructPtr.110"* %9 to i64*
  %32 = getelementptr inbounds %"class.mojo::StructPtr.110", %"class.mojo::StructPtr.110"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.mojo::StructPtr.110"* %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %31, align 8
  store i64 0, i64* %33, align 8
  %35 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %14 to void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)***
  %36 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)** %36, i64 2
  %38 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.9"*, %"class.mojo::StructPtr.43"*, %"class.mojo::StructPtr.110"*)** %37, align 8
  call void %38(%"class.payments::mojom::blink::PaymentRequest"* %14, %"class.mojo::PendingRemote"* nonnull %6, %"class.WTF::Vector.9"* nonnull %7, %"class.mojo::StructPtr.43"* nonnull %8, %"class.mojo::StructPtr.110"* nonnull %9) #10
  %39 = load %"class.payments::mojom::blink::PaymentOptions"*, %"class.payments::mojom::blink::PaymentOptions"** %32, align 8
  store %"class.payments::mojom::blink::PaymentOptions"* null, %"class.payments::mojom::blink::PaymentOptions"** %32, align 8
  %40 = icmp eq %"class.payments::mojom::blink::PaymentOptions"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %5
  call void @_ZN8payments5mojom5blink14PaymentOptionsD1Ev(%"class.payments::mojom::blink::PaymentOptions"* nonnull %39) #10
  %42 = getelementptr inbounds %"class.payments::mojom::blink::PaymentOptions", %"class.payments::mojom::blink::PaymentOptions"* %39, i64 0, i32 0
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %5, %41
  %44 = load %"class.payments::mojom::blink::PaymentDetails"*, %"class.payments::mojom::blink::PaymentDetails"** %28, align 8
  store %"class.payments::mojom::blink::PaymentDetails"* null, %"class.payments::mojom::blink::PaymentDetails"** %28, align 8
  %45 = icmp eq %"class.payments::mojom::blink::PaymentDetails"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  call void @_ZN8payments5mojom5blink14PaymentDetailsD1Ev(%"class.payments::mojom::blink::PaymentDetails"* nonnull %44) #10
  %47 = bitcast %"class.payments::mojom::blink::PaymentDetails"* %44 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %43, %46
  %49 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %7, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.mojo::StructPtr.12"*, %"class.mojo::StructPtr.12"** %49, align 8
  %51 = icmp eq %"class.mojo::StructPtr.12"* %50, null
  br i1 %51, label %74, label %52, !prof !2

52:                                               ; preds = %48
  %53 = bitcast %"class.mojo::StructPtr.12"* %50 to i8*
  %54 = load i32, i32* %18, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.mojo::StructPtr.12", %"class.mojo::StructPtr.12"* %50, i64 %57
  br label %59

59:                                               ; preds = %66, %56
  %60 = phi %"class.mojo::StructPtr.12"* [ %67, %66 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.mojo::StructPtr.12", %"class.mojo::StructPtr.12"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.payments::mojom::blink::PaymentMethodData"*, %"class.payments::mojom::blink::PaymentMethodData"** %61, align 8
  store %"class.payments::mojom::blink::PaymentMethodData"* null, %"class.payments::mojom::blink::PaymentMethodData"** %61, align 8
  %63 = icmp eq %"class.payments::mojom::blink::PaymentMethodData"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  call void @_ZN8payments5mojom5blink17PaymentMethodDataD1Ev(%"class.payments::mojom::blink::PaymentMethodData"* nonnull %62) #10
  %65 = bitcast %"class.payments::mojom::blink::PaymentMethodData"* %62 to i8*
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.mojo::StructPtr.12", %"class.mojo::StructPtr.12"* %60, i64 1
  %68 = icmp eq %"class.mojo::StructPtr.12"* %67, %58
  br i1 %68, label %69, label %59

69:                                               ; preds = %66
  store i32 0, i32* %18, align 4
  %70 = bitcast %"class.WTF::Vector.9"* %7 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %52
  %73 = phi i8* [ %71, %69 ], [ %53, %52 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #10
  store %"class.mojo::StructPtr.12"* null, %"class.mojo::StructPtr.12"** %49, align 8
  br label %74

74:                                               ; preds = %48, %72
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting4ShowEbb(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequest"* %7(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %8 to void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)***
  %10 = load void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)**, void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)*, void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)** %10, i64 3
  %12 = load void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)*, void (%"class.payments::mojom::blink::PaymentRequest"*, i1, i1)** %11, align 8
  tail call void %12(%"class.payments::mojom::blink::PaymentRequest"* %8, i1 zeroext %1, i1 zeroext %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting10UpdateWithEN4mojo9StructPtrINS1_14PaymentDetailsEEE(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::StructPtr.43"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.43", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequest"* %7(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr.43"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.43"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %8 to void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)** %14, i64 4
  %16 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.43"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentRequest"* %8, %"class.mojo::StructPtr.43"* nonnull %3) #10
  %17 = load %"class.payments::mojom::blink::PaymentDetails"*, %"class.payments::mojom::blink::PaymentDetails"** %10, align 8
  store %"class.payments::mojom::blink::PaymentDetails"* null, %"class.payments::mojom::blink::PaymentDetails"** %10, align 8
  %18 = icmp eq %"class.payments::mojom::blink::PaymentDetails"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN8payments5mojom5blink14PaymentDetailsD1Ev(%"class.payments::mojom::blink::PaymentDetails"* nonnull %17) #10
  %20 = bitcast %"class.payments::mojom::blink::PaymentDetails"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting26OnPaymentDetailsNotUpdatedEv(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequest"* %5(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %6 to void (%"class.payments::mojom::blink::PaymentRequest"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequest"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %8, i64 5
  %10 = load void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequest"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting5AbortEv(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequest"* %5(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %6 to void (%"class.payments::mojom::blink::PaymentRequest"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequest"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %8, i64 6
  %10 = load void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequest"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting8CompleteENS0_15PaymentCompleteE(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentRequest"* %6(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %7 to void (%"class.payments::mojom::blink::PaymentRequest"*, i32)***
  %9 = load void (%"class.payments::mojom::blink::PaymentRequest"*, i32)**, void (%"class.payments::mojom::blink::PaymentRequest"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequest"*, i32)** %9, i64 7
  %11 = load void (%"class.payments::mojom::blink::PaymentRequest"*, i32)*, void (%"class.payments::mojom::blink::PaymentRequest"*, i32)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentRequest"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting5RetryEN4mojo9StructPtrINS1_23PaymentValidationErrorsEEE(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*, %"class.mojo::StructPtr.117"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.117", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentRequest"* %7(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr.117"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.117", %"class.mojo::StructPtr.117"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.117"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %8 to void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)** %14, i64 8
  %16 = load void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*, %"class.mojo::StructPtr.117"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentRequest"* %8, %"class.mojo::StructPtr.117"* nonnull %3) #10
  %17 = load %"class.payments::mojom::blink::PaymentValidationErrors"*, %"class.payments::mojom::blink::PaymentValidationErrors"** %10, align 8
  store %"class.payments::mojom::blink::PaymentValidationErrors"* null, %"class.payments::mojom::blink::PaymentValidationErrors"** %10, align 8
  %18 = icmp eq %"class.payments::mojom::blink::PaymentValidationErrors"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN8payments5mojom5blink23PaymentValidationErrorsD1Ev(%"class.payments::mojom::blink::PaymentValidationErrors"* nonnull %17) #10
  %20 = bitcast %"class.payments::mojom::blink::PaymentValidationErrors"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting14CanMakePaymentEv(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequest"* %5(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %6 to void (%"class.payments::mojom::blink::PaymentRequest"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequest"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %8, i64 9
  %10 = load void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequest"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTesting21HasEnrolledInstrumentEv(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)***
  %3 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentRequest"* (%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.payments::mojom::blink::PaymentRequest"* %5(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.payments::mojom::blink::PaymentRequest"* %6 to void (%"class.payments::mojom::blink::PaymentRequest"*)***
  %8 = load void (%"class.payments::mojom::blink::PaymentRequest"*)**, void (%"class.payments::mojom::blink::PaymentRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %8, i64 10
  %10 = load void (%"class.payments::mojom::blink::PaymentRequest"*)*, void (%"class.payments::mojom::blink::PaymentRequest"*)** %9, align 8
  tail call void %10(%"class.payments::mojom::blink::PaymentRequest"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterC2EPNS1_14PaymentRequestE(%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"* nocapture, %"class.payments::mojom::blink::PaymentRequest"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestAsyncWaiter", %"class.payments::mojom::blink::PaymentRequestAsyncWaiter"* %0, i64 0, i32 0
  store %"class.payments::mojom::blink::PaymentRequest"* %1, %"class.payments::mojom::blink::PaymentRequest"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentRequestAsyncWaiterD2Ev(%"class.payments::mojom::blink::PaymentRequestAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink20PaymentRequestClientD2Ev(%"class.payments::mojom::blink::PaymentRequestClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink41PaymentRequestClientInterceptorForTestingD0Ev(%"class.payments::mojom::blink::PaymentRequestClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink14PaymentRequestD2Ev(%"class.payments::mojom::blink::PaymentRequest"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink35PaymentRequestInterceptorForTestingD0Ev(%"class.payments::mojom::blink::PaymentRequestInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink14PaymentAddressD1Ev(%"class.payments::mojom::blink::PaymentAddress"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink11PayerDetailD1Ev(%"class.payments::mojom::blink::PayerDetail"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink15PaymentResponseD1Ev(%"class.payments::mojom::blink::PaymentResponse"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink14PaymentOptionsD1Ev(%"class.payments::mojom::blink::PaymentOptions"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink14PaymentDetailsD1Ev(%"class.payments::mojom::blink::PaymentDetails"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink17PaymentMethodDataD1Ev(%"class.payments::mojom::blink::PaymentMethodData"*) unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink23PaymentValidationErrorsD1Ev(%"class.payments::mojom::blink::PaymentValidationErrors"*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN8payments5mojom5blink11PayerDetailC1Ev(%"class.payments::mojom::blink::PayerDetail"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN8payments5mojom5blink11PayerDetailEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.payments::mojom::blink::PayerDetail"* dereferenceable(24), %"class.payments::mojom::blink::PayerDetail"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.payments::mojom::blink::PayerDetail", align 8
  %4 = bitcast %"class.payments::mojom::blink::PayerDetail"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %3, i64 0, i32 1
  %10 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %5, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #10
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #10
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %2
  %31 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %6, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #10
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %39
  tail call void @llvm.trap() #10
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %49, %34, %30
  %52 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %7, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #10
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  tail call void @llvm.trap() #10
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %51, %55, %70
  %73 = tail call dereferenceable(24) %"class.payments::mojom::blink::PayerDetail"* @_ZN8payments5mojom5blink11PayerDetailaSERKS2_(%"class.payments::mojom::blink::PayerDetail"* %0, %"class.payments::mojom::blink::PayerDetail"* dereferenceable(24) %1) #10
  %74 = call dereferenceable(24) %"class.payments::mojom::blink::PayerDetail"* @_ZN8payments5mojom5blink11PayerDetailaSERKS2_(%"class.payments::mojom::blink::PayerDetail"* %1, %"class.payments::mojom::blink::PayerDetail"* nonnull dereferenceable(24) %3) #10
  call void @_ZN8payments5mojom5blink11PayerDetailD1Ev(%"class.payments::mojom::blink::PayerDetail"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.payments::mojom::blink::PayerDetail"* @_ZN8payments5mojom5blink11PayerDetailaSERKS2_(%"class.payments::mojom::blink::PayerDetail"*, %"class.payments::mojom::blink::PayerDetail"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.payments::mojom::blink::PayerDetail"* %0 to i64*
  %26 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %0, i64 0, i32 2
  %85 = getelementptr inbounds %"class.payments::mojom::blink::PayerDetail", %"class.payments::mojom::blink::PayerDetail"* %1, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #10
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %93
  tail call void @llvm.trap() #10
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %103, %88, %83
  %106 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %107 = bitcast %"class.WTF::String"* %84 to i64*
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #10
  br label %124

124:                                              ; preds = %105, %120, %123
  ret %"class.payments::mojom::blink::PayerDetail"* %0
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
