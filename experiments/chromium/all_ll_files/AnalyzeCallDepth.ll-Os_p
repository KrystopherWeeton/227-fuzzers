; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/AnalyzeCallDepth.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/AnalyzeCallDepth.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.AnalyzeCallDepth::FunctionNode" = type { %class.TIntermAggregate*, %class.TVector.17, i32, i32 }
%class.TVector.17 = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"**, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.AnalyzeCallDepth::FunctionNode"** }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.pool_allocator.23 }
%class.pool_allocator.23 = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.1" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.TPoolAllocator::tAllocState"* }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector.10, %"class.std::__1::basic_string", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string"*, %class.TVector*, %"class.std::__1::basic_string", i64 }
%class.TVector = type { %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.6" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string"*, %struct.TSourceLoc }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.pool_allocator.9 }
%class.pool_allocator.9 = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%class.TVector.10 = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.pool_allocator.16 }
%class.pool_allocator.16 = type { %class.TPoolAllocator* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.0" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%class.AnalyzeCallDepth = type { %class.TIntermTraverser, %"class.std::__1::vector.31", %"class.std::__1::set", %"class.AnalyzeCallDepth::FunctionNode"* }
%class.TIntermTraverser = type { i32 (...)**, i8, i8, i8, i8, i32, %class.TVector.10, %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.26" }
%"struct.TIntermTraverser::ParentBlock" = type { %class.TIntermAggregate*, i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.TIntermTraverser::ParentBlock"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.TIntermOperator = type <{ %class.TIntermTyped, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.AnalyzeCallDepth::FunctionNode"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string" }
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.ConstantUnion = type <{ %union.anon.45, i8, [3 x i8] }>
%union.anon.45 = type { i32 }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>

$_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE6resizeEm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc = comdat any

$_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol = comdat any

$_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion = comdat any

$_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary = comdat any

$_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary = comdat any

$_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection = comdat any

$_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop = comdat any

$_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch = comdat any

$_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase = comdat any

$_ZN16TIntermTraverserD2Ev = comdat any

$_ZN16TIntermTraverserD0Ev = comdat any

$_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate = comdat any

$_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch = comdat any

$_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE8__appendEm = comdat any

$_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSD_SD_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTV16TIntermTraverser = comdat any

@_ZTV16AnalyzeCallDepth = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.AnalyzeCallDepth*)* @_ZN16AnalyzeCallDepthD2Ev to i8*), i8* bitcast (void (%class.AnalyzeCallDepth*)* @_ZN16AnalyzeCallDepthD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.AnalyzeCallDepth*, i32, %class.TIntermAggregate*)* @_ZN16AnalyzeCallDepth14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.AnalyzeCallDepth*, i32, %class.TIntermSwitch*)* @_ZN16AnalyzeCallDepth11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [6 x i8] c"main(\00", align 1
@_ZTV16TIntermTraverser = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, comdat, align 8

@_ZN16AnalyzeCallDepth12FunctionNodeC1EP16TIntermAggregate = hidden unnamed_addr alias void (%"class.AnalyzeCallDepth::FunctionNode"*, %class.TIntermAggregate*), void (%"class.AnalyzeCallDepth::FunctionNode"*, %class.TIntermAggregate*)* @_ZN16AnalyzeCallDepth12FunctionNodeC2EP16TIntermAggregate
@_ZN16AnalyzeCallDepthC1EP11TIntermNode = hidden unnamed_addr alias void (%class.AnalyzeCallDepth*, %class.TIntermNode*), void (%class.AnalyzeCallDepth*, %class.TIntermNode*)* @_ZN16AnalyzeCallDepthC2EP11TIntermNode
@_ZN16AnalyzeCallDepthD1Ev = hidden unnamed_addr alias void (%class.AnalyzeCallDepth*), void (%class.AnalyzeCallDepth*)* @_ZN16AnalyzeCallDepthD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepth12FunctionNodeC2EP16TIntermAggregate(%"class.AnalyzeCallDepth::FunctionNode"* nocapture, %class.TIntermAggregate*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 0
  store %class.TIntermAggregate* %1, %class.TIntermAggregate** %3, align 8
  %4 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %6 = bitcast %class.TVector.17* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #12
  store %class.TPoolAllocator* %7, %class.TPoolAllocator** %5, align 8
  %8 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNK16AnalyzeCallDepth12FunctionNode7getNameEv(%"class.AnalyzeCallDepth::FunctionNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 0
  %3 = load %class.TIntermAggregate*, %class.TIntermAggregate** %2, align 8
  %4 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %3, i64 0, i32 3
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepth12FunctionNode9addCalleeEPS0_(%"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"* %1 to i64
  %4 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.18"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %"class.AnalyzeCallDepth::FunctionNode"**
  %12 = inttoptr i64 %7 to %"class.AnalyzeCallDepth::FunctionNode"**
  br i1 %10, label %24, label %13

13:                                               ; preds = %2
  %14 = sub i64 %7, %9
  %15 = ashr exact i64 %14, 3
  br label %18

16:                                               ; preds = %18
  %17 = icmp ult i64 %23, %15
  br i1 %17, label %18, label %24

18:                                               ; preds = %13, %16
  %19 = phi i64 [ 0, %13 ], [ %23, %16 ]
  %20 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %11, i64 %19
  %21 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %20, align 8
  %22 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %21, %1
  %23 = add nuw i64 %19, 1
  br i1 %22, label %81, label %16

24:                                               ; preds = %16, %2
  %25 = phi i64 [ %7, %2 ], [ %9, %16 ]
  %26 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %26, align 8
  %28 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %27, %12
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %30, align 8
  %31 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %12, i64 1
  %32 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %31 to i64
  store i64 %32, i64* %6, align 8
  br label %81

33:                                               ; preds = %24
  %34 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %27 to i64
  %35 = sub i64 %34, %25
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = bitcast %"class.std::__1::vector.18"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #13
  unreachable

41:                                               ; preds = %33
  %42 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %26 to i64*
  %43 = icmp ult i64 %36, 1152921504606846975
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = ashr exact i64 %35, 2
  %46 = icmp ult i64 %45, %37
  %47 = select i1 %46, i64 %37, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44, %41
  %50 = phi i64 [ %47, %44 ], [ 2305843009213693951, %41 ]
  %51 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %52 = load %class.TPoolAllocator*, %class.TPoolAllocator** %51, align 8
  %53 = shl i64 %50, 3
  %54 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %52, i64 %53) #12
  %55 = bitcast i8* %54 to %"class.AnalyzeCallDepth::FunctionNode"**
  br label %56

56:                                               ; preds = %49, %44
  %57 = phi i64 [ %50, %49 ], [ 0, %44 ]
  %58 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %55, %49 ], [ null, %44 ]
  %59 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %58, i64 %36
  %60 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %58, i64 %57
  %61 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %60 to i64
  %62 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %59 to i64*
  store i64 %3, i64* %62, align 8
  %63 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %59, i64 1
  %64 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %4, i64 0, i32 0, i32 0
  %66 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %65, align 8
  %67 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %5, align 8
  %68 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %67, %66
  br i1 %68, label %78, label %69

69:                                               ; preds = %56, %69
  %70 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %72, %69 ], [ %59, %56 ]
  %71 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %73, %69 ], [ %67, %56 ]
  %72 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %70, i64 -1
  %73 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %71, i64 -1
  %74 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %73, %66
  br i1 %77, label %78, label %69

78:                                               ; preds = %69, %56
  %79 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %59, %56 ], [ %72, %69 ]
  %80 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %79 to i64
  store i64 %80, i64* %8, align 8
  store i64 %64, i64* %6, align 8
  store i64 %61, i64* %42, align 8
  br label %81

81:                                               ; preds = %18, %78, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN16AnalyzeCallDepth12FunctionNode16analyzeCallDepthEPS_(%"class.AnalyzeCallDepth::FunctionNode"* nocapture, %class.AnalyzeCallDepth*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %3, align 8
  %5 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.18"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %42, label %12

12:                                               ; preds = %2, %31
  %13 = phi i64 [ %38, %31 ], [ %10, %2 ]
  %14 = phi i64 [ %36, %31 ], [ 0, %2 ]
  %15 = inttoptr i64 %13 to %"class.AnalyzeCallDepth::FunctionNode"**
  %16 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %15, i64 %14
  %17 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %16, align 8
  %18 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %28 [
    i32 1, label %44
    i32 2, label %20
    i32 0, label %23
  ]

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %17, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  br label %25

23:                                               ; preds = %12
  %24 = tail call i32 @_ZN16AnalyzeCallDepth12FunctionNode16analyzeCallDepthEPS_(%"class.AnalyzeCallDepth::FunctionNode"* %17, %class.AnalyzeCallDepth* %1) #14
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i32 [ %24, %23 ], [ %22, %20 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %31, label %28

28:                                               ; preds = %12, %25
  %29 = phi i32 [ %26, %25 ], [ 0, %12 ]
  %30 = add nuw i32 %29, 1
  br label %31

31:                                               ; preds = %28, %25
  %32 = phi i32 [ -1, %25 ], [ %30, %28 ]
  %33 = load i32, i32* %4, align 4
  %34 = icmp ult i32 %33, %32
  %35 = select i1 %34, i32 %32, i32 %33
  store i32 %35, i32* %4, align 4
  %36 = add nuw i64 %14, 1
  %37 = load i64, i64* %7, align 8
  %38 = load i64, i64* %9, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %36, %40
  br i1 %41, label %12, label %42

42:                                               ; preds = %31, %2
  %43 = phi i32 [ 0, %2 ], [ %35, %31 ]
  store i32 2, i32* %3, align 8
  br label %44

44:                                               ; preds = %12, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %12 ]
  ret i32 %45
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK16AnalyzeCallDepth12FunctionNode12getLastDepthEv(%"class.AnalyzeCallDepth::FunctionNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepth12FunctionNode19removeIfUnreachableEv(%"class.AnalyzeCallDepth::FunctionNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %0, i64 0, i32 0
  %7 = bitcast %"class.AnalyzeCallDepth::FunctionNode"* %0 to %class.TIntermOperator**
  %8 = load %class.TIntermOperator*, %class.TIntermOperator** %7, align 8
  %9 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %8, i64 0, i32 1
  store i32 7, i32* %9, align 8
  %10 = load %class.TIntermAggregate*, %class.TIntermAggregate** %6, align 8
  %11 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %10, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE6resizeEm(%"class.std::__1::vector.11"* %11, i64 1) #14
  br label %12

12:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE6resizeEm(%"class.std::__1::vector.11"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.TIntermNode*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.TIntermNode**
  br i1 %10, label %12, label %14

12:                                               ; preds = %2
  %13 = sub i64 %1, %9
  tail call void @_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE8__appendEm(%"class.std::__1::vector.11"* %0, i64 %13) #14
  br label %18

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %11, i64 %1
  store %class.TIntermNode** %17, %class.TIntermNode*** %3, align 8
  br label %18

18:                                               ; preds = %14, %16, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepthC2EP11TIntermNode(%class.AnalyzeCallDepth*, %class.TIntermNode*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 29, i1 false)
  %10 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #12
  store %class.TPoolAllocator* %10, %class.TPoolAllocator** %9, align 8
  %11 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 7
  %12 = bitcast %"class.std::__1::vector.24"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16AnalyzeCallDepth, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %13 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::vector.31"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #11
  %15 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 3
  store %"class.AnalyzeCallDepth::FunctionNode"* null, %"class.AnalyzeCallDepth::FunctionNode"** %19, align 8
  %20 = bitcast %class.TIntermNode* %1 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %21 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %20, align 8
  %22 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %21, align 8
  tail call void %22(%class.TIntermNode* %1, %class.TIntermTraverser* %3) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepthD2Ev(%class.AnalyzeCallDepth*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16AnalyzeCallDepth, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.31"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %51, %1
  %11 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node"* %14) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %3, i64 0, i32 0, i32 0
  %16 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %15, align 8
  %17 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %16 to i64
  store i64 %19, i64* %5, align 8
  %20 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %16 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %10, %18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %22, align 8
  %24 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %23 to i64
  %27 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %28 = bitcast %"struct.TIntermTraverser::ParentBlock"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"struct.TIntermTraverser::ParentBlock"* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %25, %21
  %31 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %32 = load %class.TIntermNode**, %class.TIntermNode*** %31, align 8
  %33 = icmp eq %class.TIntermNode** %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %class.TIntermNode** %32 to i64
  %36 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %37 = bitcast %class.TIntermNode*** %36 to i64*
  store i64 %35, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %34
  ret void

39:                                               ; preds = %1, %51
  %40 = phi i64 [ %52, %51 ], [ %8, %1 ]
  %41 = phi i64 [ %53, %51 ], [ %6, %1 ]
  %42 = phi i64 [ %54, %51 ], [ 0, %1 ]
  %43 = inttoptr i64 %40 to %"class.AnalyzeCallDepth::FunctionNode"**
  %44 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %43, i64 %42
  %45 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %44, align 8
  %46 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.AnalyzeCallDepth::FunctionNode"* %45 to i8*
  tail call void @_ZdlPv(i8* %48) #15
  %49 = load i64, i64* %5, align 8
  %50 = load i64, i64* %7, align 8
  br label %51

51:                                               ; preds = %39, %47
  %52 = phi i64 [ %40, %39 ], [ %50, %47 ]
  %53 = phi i64 [ %41, %39 ], [ %49, %47 ]
  %54 = add nuw i64 %42, 1
  %55 = sub i64 %53, %52
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %39, label %10
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN16AnalyzeCallDepthD0Ev(%class.AnalyzeCallDepth*) unnamed_addr #0 align 2 {
  tail call void @_ZN16AnalyzeCallDepthD2Ev(%class.AnalyzeCallDepth* %0) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN16AnalyzeCallDepth11visitSwitchE5VisitP13TIntermSwitch(%class.AnalyzeCallDepth*, i32, %class.TIntermSwitch* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermSwitch, %class.TIntermSwitch* %2, i64 0, i32 1
  %5 = load %class.TIntermTyped*, %class.TIntermTyped** %4, align 8
  %6 = getelementptr inbounds %class.TIntermSwitch, %class.TIntermSwitch* %2, i64 0, i32 2
  %7 = load %class.TIntermAggregate*, %class.TIntermAggregate** %6, align 8
  %8 = icmp ne %class.TIntermTyped* %5, null
  %9 = icmp ne %class.TIntermAggregate* %7, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %87

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %7, i64 0, i32 2, i32 0
  %13 = bitcast %"class.std::__1::vector.11"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = bitcast %class.TIntermNode*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %17 to %class.TIntermNode**
  %19 = inttoptr i64 %14 to %class.TIntermNode**
  %20 = icmp eq %class.TIntermNode** %18, %19
  br i1 %20, label %87, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0
  br label %23

23:                                               ; preds = %21, %60
  %24 = phi %class.TIntermNode** [ %19, %21 ], [ %62, %60 ]
  %25 = phi i64 [ %14, %21 ], [ %63, %60 ]
  %26 = phi i64 [ %17, %21 ], [ %61, %60 ]
  %27 = load %class.TIntermNode*, %class.TIntermNode** %24, align 8
  %28 = bitcast %class.TIntermNode* %27 to %class.TIntermCase* (%class.TIntermNode*)***
  %29 = load %class.TIntermCase* (%class.TIntermNode*)**, %class.TIntermCase* (%class.TIntermNode*)*** %28, align 8
  %30 = getelementptr inbounds %class.TIntermCase* (%class.TIntermNode*)*, %class.TIntermCase* (%class.TIntermNode*)** %29, i64 11
  %31 = load %class.TIntermCase* (%class.TIntermNode*)*, %class.TIntermCase* (%class.TIntermNode*)** %30, align 8
  %32 = tail call %class.TIntermCase* %31(%class.TIntermNode* %27) #12
  %33 = icmp eq %class.TIntermCase* %32, null
  br i1 %33, label %60, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %class.TIntermCase, %class.TIntermCase* %32, i64 0, i32 1
  %36 = load %class.TIntermTyped*, %class.TIntermTyped** %35, align 8
  %37 = icmp eq %class.TIntermTyped* %36, null
  br i1 %37, label %60, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %36, i64 0, i32 0
  %40 = bitcast %class.TIntermTyped* %36 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %41 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %40, align 8
  %42 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %41, align 8
  tail call void %42(%class.TIntermNode* %39, %class.TIntermTraverser* %22) #12
  %43 = load %class.TIntermNode**, %class.TIntermNode*** %15, align 8
  br label %44

44:                                               ; preds = %48, %38
  %45 = phi %class.TIntermNode** [ %24, %38 ], [ %46, %48 ]
  %46 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %45, i64 1
  %47 = icmp eq %class.TIntermNode** %46, %43
  br i1 %47, label %60, label %48

48:                                               ; preds = %44
  %49 = load %class.TIntermNode*, %class.TIntermNode** %46, align 8
  %50 = bitcast %class.TIntermNode* %49 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %51 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %50, align 8
  %52 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %51, align 8
  tail call void %52(%class.TIntermNode* %49, %class.TIntermTraverser* %22) #12
  %53 = load %class.TIntermNode*, %class.TIntermNode** %46, align 8
  %54 = bitcast %class.TIntermNode* %53 to %class.TIntermBranch* (%class.TIntermNode*)***
  %55 = load %class.TIntermBranch* (%class.TIntermNode*)**, %class.TIntermBranch* (%class.TIntermNode*)*** %54, align 8
  %56 = getelementptr inbounds %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %55, i64 9
  %57 = load %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %56, align 8
  %58 = tail call %class.TIntermBranch* %57(%class.TIntermNode* %53) #12
  %59 = icmp eq %class.TIntermBranch* %58, null
  br i1 %59, label %44, label %60

60:                                               ; preds = %44, %48, %34, %23
  %61 = phi i64 [ %26, %23 ], [ %25, %34 ], [ %26, %48 ], [ %26, %44 ]
  %62 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %24, i64 1
  %63 = ptrtoint %class.TIntermNode** %62 to i64
  %64 = load %class.TIntermNode**, %class.TIntermNode*** %15, align 8
  %65 = icmp eq %class.TIntermNode** %64, %62
  br i1 %65, label %66, label %23

66:                                               ; preds = %60
  %67 = inttoptr i64 %61 to %class.TIntermNode**
  %68 = icmp eq %class.TIntermNode** %62, %67
  br i1 %68, label %87, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 0
  br label %71

71:                                               ; preds = %75, %69
  %72 = phi %class.TIntermNode** [ %67, %69 ], [ %73, %75 ]
  %73 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %72, i64 1
  %74 = icmp eq %class.TIntermNode** %72, %24
  br i1 %74, label %87, label %75

75:                                               ; preds = %71
  %76 = load %class.TIntermNode*, %class.TIntermNode** %73, align 8
  %77 = bitcast %class.TIntermNode* %76 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %78 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %77, align 8
  %79 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %78, align 8
  tail call void %79(%class.TIntermNode* %76, %class.TIntermTraverser* %70) #12
  %80 = load %class.TIntermNode*, %class.TIntermNode** %73, align 8
  %81 = bitcast %class.TIntermNode* %80 to %class.TIntermBranch* (%class.TIntermNode*)***
  %82 = load %class.TIntermBranch* (%class.TIntermNode*)**, %class.TIntermBranch* (%class.TIntermNode*)*** %81, align 8
  %83 = getelementptr inbounds %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %82, i64 9
  %84 = load %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %83, align 8
  %85 = tail call %class.TIntermBranch* %84(%class.TIntermNode* %80) #12
  %86 = icmp eq %class.TIntermBranch* %85, null
  br i1 %86, label %71, label %87

87:                                               ; preds = %71, %75, %11, %66, %3
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN16AnalyzeCallDepth14visitAggregateE5VisitP16TIntermAggregate(%class.AnalyzeCallDepth*, i32, %class.TIntermAggregate*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.AnalyzeCallDepth::FunctionNode"*, align 8
  %5 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %200 [
    i32 3, label %7
    i32 2, label %97
  ]

7:                                                ; preds = %3
  switch i32 %1, label %200 [
    i32 0, label %8
    i32 2, label %95
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3
  %10 = tail call %"class.AnalyzeCallDepth::FunctionNode"* @_ZN16AnalyzeCallDepth18findFunctionByNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%class.AnalyzeCallDepth* %0, %"class.std::__1::basic_string"* dereferenceable(32) %9) #14
  %11 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 3
  store %"class.AnalyzeCallDepth::FunctionNode"* %10, %"class.AnalyzeCallDepth::FunctionNode"** %11, align 8
  %12 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %10, null
  br i1 %12, label %13, label %200

13:                                               ; preds = %8
  %14 = tail call i8* @_Znwm(i64 48) #15
  %15 = bitcast i8* %14 to %class.TIntermAggregate**
  store %class.TIntermAggregate* %2, %class.TIntermAggregate** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = getelementptr inbounds i8, i8* %14, i64 32
  %18 = bitcast i8* %17 to %class.TPoolAllocator**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %19 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #12
  store %class.TPoolAllocator* %19, %class.TPoolAllocator** %18, align 8
  %20 = getelementptr inbounds i8, i8* %14, i64 40
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 44
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %11 to i8**
  store i8* %14, i8** %24, align 8
  %25 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %26 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %26, align 8
  %28 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %28, align 8
  %30 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %27, %29
  %31 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %29 to i64
  %32 = ptrtoint i8* %14 to i64
  br i1 %30, label %38, label %33

33:                                               ; preds = %13
  %34 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %27 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %27, i64 1
  %36 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %35 to i64
  %37 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %26 to i64*
  store i64 %36, i64* %37, align 8
  br label %200

38:                                               ; preds = %13
  %39 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %27 to i64
  %40 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %26 to i64*
  %41 = bitcast %"class.std::__1::vector.31"* %25 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::vector.31"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #13
  unreachable

49:                                               ; preds = %38
  %50 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %28 to i64*
  %51 = sub i64 %31, %42
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, 1152921504606846975
  br i1 %53, label %54, label %62

54:                                               ; preds = %49
  %55 = ashr exact i64 %51, 2
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54
  %60 = icmp ugt i64 %57, 2305843009213693951
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @abort() #13
  unreachable

62:                                               ; preds = %59, %49
  %63 = phi i64 [ %57, %59 ], [ 2305843009213693951, %49 ]
  %64 = shl i64 %63, 3
  %65 = tail call i8* @_Znwm(i64 %64) #15
  %66 = bitcast i8* %65 to %"class.AnalyzeCallDepth::FunctionNode"**
  br label %67

67:                                               ; preds = %62, %54
  %68 = phi i64 [ %63, %62 ], [ 0, %54 ]
  %69 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %66, %62 ], [ null, %54 ]
  %70 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %69, i64 %44
  %71 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %69, i64 %68
  %72 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %71 to i64
  %73 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %70 to i64*
  store i64 %32, i64* %73, align 8
  %74 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %70, i64 1
  %75 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %25, i64 0, i32 0, i32 0
  %77 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %76, align 8
  %78 = load i64, i64* %40, align 8
  %79 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %70, i64 %82
  %84 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %67
  %87 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %83 to i8*
  %88 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %80, i1 false) #11
  %89 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %76, align 8
  br label %90

90:                                               ; preds = %86, %67
  %91 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %77, %67 ], [ %89, %86 ]
  store i64 %84, i64* %41, align 8
  store i64 %75, i64* %40, align 8
  store i64 %72, i64* %50, align 8
  %92 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %91, null
  br i1 %92, label %200, label %93

93:                                               ; preds = %90
  %94 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %91 to i8*
  tail call void @_ZdlPv(i8* %94) #15
  br label %200

95:                                               ; preds = %7
  %96 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 3
  store %"class.AnalyzeCallDepth::FunctionNode"* null, %"class.AnalyzeCallDepth::FunctionNode"** %96, align 8
  br label %200

97:                                               ; preds = %3
  %98 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 4
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  %101 = icmp eq i32 %1, 0
  %102 = and i1 %101, %100
  br i1 %102, label %103, label %200

103:                                              ; preds = %97
  %104 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3
  %106 = tail call %"class.AnalyzeCallDepth::FunctionNode"* @_ZN16AnalyzeCallDepth18findFunctionByNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%class.AnalyzeCallDepth* %0, %"class.std::__1::basic_string"* dereferenceable(32) %105) #14
  store %"class.AnalyzeCallDepth::FunctionNode"* %106, %"class.AnalyzeCallDepth::FunctionNode"** %4, align 8
  %107 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %106, null
  br i1 %107, label %108, label %190

108:                                              ; preds = %103
  %109 = tail call i8* @_Znwm(i64 48) #15
  %110 = bitcast i8* %109 to %class.TIntermAggregate**
  store %class.TIntermAggregate* %2, %class.TIntermAggregate** %110, align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 8
  %112 = getelementptr inbounds i8, i8* %109, i64 32
  %113 = bitcast i8* %112 to %class.TPoolAllocator**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #11
  %114 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #12
  store %class.TPoolAllocator* %114, %class.TPoolAllocator** %113, align 8
  %115 = getelementptr inbounds i8, i8* %109, i64 40
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds i8, i8* %109, i64 44
  %118 = bitcast i8* %117 to i32*
  store i32 0, i32* %118, align 4
  %119 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %4 to i8**
  store i8* %109, i8** %119, align 8
  %120 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %121 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 1
  %122 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %121, align 8
  %123 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %124 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %123, align 8
  %125 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %122, %124
  %126 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %124 to i64
  %127 = ptrtoint i8* %109 to i64
  br i1 %125, label %133, label %128

128:                                              ; preds = %108
  %129 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %122 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %122, i64 1
  %131 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %130 to i64
  %132 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %121 to i64*
  store i64 %131, i64* %132, align 8
  br label %190

133:                                              ; preds = %108
  %134 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %122 to i64
  %135 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %121 to i64*
  %136 = bitcast %"class.std::__1::vector.31"* %120 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %134, %137
  %139 = ashr exact i64 %138, 3
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 2305843009213693951
  br i1 %141, label %142, label %144

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::vector.31"* %120 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #13
  unreachable

144:                                              ; preds = %133
  %145 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %123 to i64*
  %146 = sub i64 %126, %137
  %147 = ashr exact i64 %146, 3
  %148 = icmp ult i64 %147, 1152921504606846975
  br i1 %148, label %149, label %157

149:                                              ; preds = %144
  %150 = ashr exact i64 %146, 2
  %151 = icmp ult i64 %150, %140
  %152 = select i1 %151, i64 %140, i64 %150
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %149
  %155 = icmp ugt i64 %152, 2305843009213693951
  br i1 %155, label %156, label %157

156:                                              ; preds = %154
  tail call void @abort() #13
  unreachable

157:                                              ; preds = %154, %144
  %158 = phi i64 [ %152, %154 ], [ 2305843009213693951, %144 ]
  %159 = shl i64 %158, 3
  %160 = tail call i8* @_Znwm(i64 %159) #15
  %161 = bitcast i8* %160 to %"class.AnalyzeCallDepth::FunctionNode"**
  br label %162

162:                                              ; preds = %157, %149
  %163 = phi i64 [ %158, %157 ], [ 0, %149 ]
  %164 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %161, %157 ], [ null, %149 ]
  %165 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %164, i64 %139
  %166 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %164, i64 %163
  %167 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %166 to i64
  %168 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %165 to i64*
  store i64 %127, i64* %168, align 8
  %169 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %165, i64 1
  %170 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %120, i64 0, i32 0, i32 0
  %172 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %171, align 8
  %173 = load i64, i64* %135, align 8
  %174 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %172 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = sub nsw i64 0, %176
  %178 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %165, i64 %177
  %179 = ptrtoint %"class.AnalyzeCallDepth::FunctionNode"** %178 to i64
  %180 = icmp sgt i64 %175, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %162
  %182 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %178 to i8*
  %183 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %175, i1 false) #11
  %184 = load %"class.AnalyzeCallDepth::FunctionNode"**, %"class.AnalyzeCallDepth::FunctionNode"*** %171, align 8
  br label %185

185:                                              ; preds = %181, %162
  %186 = phi %"class.AnalyzeCallDepth::FunctionNode"** [ %172, %162 ], [ %184, %181 ]
  store i64 %179, i64* %136, align 8
  store i64 %170, i64* %135, align 8
  store i64 %167, i64* %145, align 8
  %187 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"** %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %186 to i8*
  tail call void @_ZdlPv(i8* %189) #15
  br label %190

190:                                              ; preds = %188, %185, %128, %103
  %191 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 3
  %192 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %191, align 8
  %193 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %4, align 8
  tail call void @_ZN16AnalyzeCallDepth12FunctionNode9addCalleeEPS0_(%"class.AnalyzeCallDepth::FunctionNode"* nonnull %192, %"class.AnalyzeCallDepth::FunctionNode"* %195) #14
  br label %199

196:                                              ; preds = %190
  %197 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0
  %198 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %197, %"class.AnalyzeCallDepth::FunctionNode"** nonnull dereferenceable(8) %4, %"class.AnalyzeCallDepth::FunctionNode"** nonnull dereferenceable(8) %4) #12
  br label %199

199:                                              ; preds = %196, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %200

200:                                              ; preds = %93, %90, %33, %95, %199, %3, %8, %7, %97
  ret i1 true
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden %"class.AnalyzeCallDepth::FunctionNode"* @_ZN16AnalyzeCallDepth18findFunctionByNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%class.AnalyzeCallDepth* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.31"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"class.AnalyzeCallDepth::FunctionNode"**
  br i1 %9, label %73, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = select i1 %15, i8* %21, i8* %22
  %24 = icmp eq i64 %19, 0
  %25 = sub i64 %6, %8
  %26 = ashr exact i64 %25, 3
  br label %27

27:                                               ; preds = %11, %70
  %28 = phi i64 [ 0, %11 ], [ %71, %70 ]
  %29 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %10, i64 %28
  %30 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %29, align 8
  %31 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %30, i64 0, i32 0
  %32 = load %class.TIntermAggregate*, %class.TIntermAggregate** %31, align 8
  %33 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %32, i64 0, i32 3
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %41, %19
  br i1 %42, label %43, label %70

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %47 = select i1 %37, i8* %45, i8* %46
  br i1 %37, label %54, label %48

48:                                               ; preds = %43
  br i1 %24, label %73, label %49

49:                                               ; preds = %48
  %50 = ptrtoint i8* %45 to i64
  %51 = trunc i64 %50 to i8
  %52 = load i8, i8* %23, align 1
  %53 = icmp eq i8 %52, %51
  br i1 %53, label %55, label %70

54:                                               ; preds = %43
  br i1 %24, label %73, label %67

55:                                               ; preds = %49, %62
  %56 = phi i64 [ %59, %62 ], [ %40, %49 ]
  %57 = phi i8* [ %60, %62 ], [ %46, %49 ]
  %58 = phi i8* [ %63, %62 ], [ %23, %49 ]
  %59 = add i64 %56, -1
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  %64 = load i8, i8* %60, align 1
  %65 = load i8, i8* %63, align 1
  %66 = icmp eq i8 %64, %65
  br i1 %66, label %55, label %70

67:                                               ; preds = %54
  %68 = tail call i32 @bcmp(i8* %47, i8* %23, i64 %19) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %62, %49, %27, %67
  %71 = add nuw i64 %28, 1
  %72 = icmp ult i64 %71, %26
  br i1 %72, label %27, label %73

73:                                               ; preds = %70, %67, %54, %48, %55, %2
  %74 = phi %"class.AnalyzeCallDepth::FunctionNode"* [ null, %2 ], [ %30, %55 ], [ null, %70 ], [ %30, %67 ], [ %30, %54 ], [ %30, %48 ]
  ret %"class.AnalyzeCallDepth::FunctionNode"* %74
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN16AnalyzeCallDepth16analyzeCallDepthEv(%class.AnalyzeCallDepth*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #14
  %4 = call %"class.AnalyzeCallDepth::FunctionNode"* @_ZN16AnalyzeCallDepth18findFunctionByNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%class.AnalyzeCallDepth* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  %5 = icmp eq %"class.AnalyzeCallDepth::FunctionNode"* %4, null
  br i1 %5, label %92, label %6

6:                                                ; preds = %1
  %7 = call i32 @_ZN16AnalyzeCallDepth12FunctionNode16analyzeCallDepthEPS_(%"class.AnalyzeCallDepth::FunctionNode"* nonnull %4, %class.AnalyzeCallDepth* %0) #14
  %8 = icmp eq i32 %7, -1
  %9 = add i32 %7, 1
  %10 = select i1 %8, i32 -1, i32 %9
  %11 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %63, %6
  %16 = phi i32 [ %10, %6 ], [ %35, %63 ]
  %17 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.AnalyzeCallDepth, %class.AnalyzeCallDepth* %0, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast %"class.AnalyzeCallDepth::FunctionNode"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.31"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %92, label %66

24:                                               ; preds = %6, %63
  %25 = phi i32 [ %35, %63 ], [ %10, %6 ]
  %26 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %12, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.AnalyzeCallDepth::FunctionNode"**
  %29 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %28, align 8
  %30 = call i32 @_ZN16AnalyzeCallDepth12FunctionNode16analyzeCallDepthEPS_(%"class.AnalyzeCallDepth::FunctionNode"* %29, %class.AnalyzeCallDepth* %0) #14
  %31 = icmp eq i32 %30, -1
  %32 = add i32 %30, 1
  %33 = select i1 %31, i32 -1, i32 %32
  %34 = icmp ugt i32 %33, %25
  %35 = select i1 %34, i32 %33, i32 %25
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 1, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %47

39:                                               ; preds = %24
  %40 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 2
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_end_node"**
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %40
  br i1 %46, label %63, label %54

47:                                               ; preds = %24, %47
  %48 = phi %"class.std::__1::__tree_node_base"* [ %50, %47 ], [ %37, %24 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0
  br label %63

54:                                               ; preds = %39, %54
  %55 = phi %"class.std::__1::__tree_end_node"** [ %58, %54 ], [ %42, %39 ]
  %56 = bitcast %"class.std::__1::__tree_end_node"** %55 to %"class.std::__1::__tree_node_base"**
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 2
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %57
  br i1 %62, label %63, label %54

63:                                               ; preds = %54, %39, %52
  %64 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %43, %39 ], [ %59, %54 ]
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %13
  br i1 %65, label %15, label %24

66:                                               ; preds = %15, %85
  %67 = phi i64 [ %86, %85 ], [ %22, %15 ]
  %68 = phi i64 [ %87, %85 ], [ %20, %15 ]
  %69 = phi i64 [ %88, %85 ], [ 0, %15 ]
  %70 = inttoptr i64 %67 to %"class.AnalyzeCallDepth::FunctionNode"**
  %71 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %70, i64 %69
  %72 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %71, align 8
  %73 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %72, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.AnalyzeCallDepth::FunctionNode", %"class.AnalyzeCallDepth::FunctionNode"* %72, i64 0, i32 0
  %78 = bitcast %"class.AnalyzeCallDepth::FunctionNode"* %72 to %class.TIntermOperator**
  %79 = load %class.TIntermOperator*, %class.TIntermOperator** %78, align 8
  %80 = getelementptr inbounds %class.TIntermOperator, %class.TIntermOperator* %79, i64 0, i32 1
  store i32 7, i32* %80, align 8
  %81 = load %class.TIntermAggregate*, %class.TIntermAggregate** %77, align 8
  %82 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %81, i64 0, i32 2, i32 0
  call void @_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE6resizeEm(%"class.std::__1::vector.11"* %82, i64 1) #12
  %83 = load i64, i64* %19, align 8
  %84 = load i64, i64* %21, align 8
  br label %85

85:                                               ; preds = %66, %76
  %86 = phi i64 [ %67, %66 ], [ %84, %76 ]
  %87 = phi i64 [ %68, %66 ], [ %83, %76 ]
  %88 = add nuw i64 %69, 1
  %89 = sub i64 %87, %86
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %88, %90
  br i1 %91, label %66, label %92

92:                                               ; preds = %85, %15, %1
  %93 = phi i32 [ 0, %1 ], [ %16, %15 ], [ %16, %85 ]
  ret i32 %93
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #12
  store %class.TPoolAllocator* %4, %class.TPoolAllocator** %3, align 8
  %5 = tail call i64 @strlen(i8* %1) #12
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %8) #13
  unreachable

9:                                                ; preds = %2
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %4, i64 %13) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  br label %25

19:                                               ; preds = %9
  %20 = trunc i64 %5 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19, %11
  %26 = phi i8* [ %14, %11 ], [ %23, %19 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %1, i64 %5, i1 false) #11
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi i8* [ %23, %19 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %5
  store i8 0, i8* %29, align 1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol(%class.TIntermTraverser*, %class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TIntermTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TIntermTraverser*, i32, %class.TIntermBinary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TIntermTraverser*, i32, %class.TIntermUnary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TIntermTraverser*, i32, %class.TIntermSelection*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop(%class.TIntermTraverser*, i32, %class.TIntermLoop*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch(%class.TIntermTraverser*, i32, %class.TIntermBranch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase(%class.TIntermTraverser*, i32, %class.TIntermCase*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD2Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD0Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TIntermTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch(%class.TIntermTraverser*, i32, %class.TIntermSwitch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #6

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: optsize
declare i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIP11TIntermNode14pool_allocatorIS2_EE8__appendEm(%"class.std::__1::vector.11"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.TIntermNode*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.TIntermNode*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.TIntermNode**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %class.TIntermNode*, %class.TIntermNode** %13, i64 %18
  %20 = bitcast %class.TIntermNode** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %class.TIntermNode** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 2305843009213693951, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %class.TPoolAllocator*, %class.TPoolAllocator** %49, align 8
  %51 = shl i64 %48, 3
  %52 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %50, i64 %51) #12
  %53 = bitcast i8* %52 to %class.TIntermNode**
  br label %54

54:                                               ; preds = %47, %42
  %55 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %56 = phi %class.TIntermNode** [ %53, %47 ], [ null, %42 ]
  %57 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %56, i64 %33
  %58 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %56, i64 %55
  %59 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %57, i64 %1
  %60 = bitcast %class.TIntermNode** %57 to i8*
  %61 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %61, i1 false) #11
  %62 = ptrtoint %class.TIntermNode** %58 to i64
  %63 = ptrtoint %class.TIntermNode** %59 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %65 = load %class.TIntermNode**, %class.TIntermNode*** %64, align 8
  %66 = load %class.TIntermNode**, %class.TIntermNode*** %6, align 8
  %67 = icmp eq %class.TIntermNode** %66, %65
  br i1 %67, label %77, label %68

68:                                               ; preds = %54, %68
  %69 = phi %class.TIntermNode** [ %71, %68 ], [ %57, %54 ]
  %70 = phi %class.TIntermNode** [ %72, %68 ], [ %66, %54 ]
  %71 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %69, i64 -1
  %72 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %70, i64 -1
  %73 = bitcast %class.TIntermNode** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %class.TIntermNode** %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = icmp eq %class.TIntermNode** %72, %65
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %54
  %78 = phi %class.TIntermNode** [ %57, %54 ], [ %71, %68 ]
  %79 = ptrtoint %class.TIntermNode** %78 to i64
  store i64 %79, i64* %30, align 8
  store i64 %63, i64* %7, align 8
  store i64 %62, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.AnalyzeCallDepth::FunctionNode"** dereferenceable(8), %"class.AnalyzeCallDepth::FunctionNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %1, align 8
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load %"class.AnalyzeCallDepth::FunctionNode"*, %"class.AnalyzeCallDepth::FunctionNode"** %14, align 8
  %16 = icmp ult %"class.AnalyzeCallDepth::FunctionNode"* %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult %"class.AnalyzeCallDepth::FunctionNode"* %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 40) #15, !noalias !3
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast %"class.AnalyzeCallDepth::FunctionNode"** %2 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !3
  %50 = bitcast i8* %47 to i64*
  store i64 %49, i64* %50, align 8, !noalias !3
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSD_SD_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* nonnull %52) #12
  br label %53

53:                                               ; preds = %45, %39
  %54 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %55 = phi %"class.std::__1::__tree_node"* [ %51, %45 ], [ %43, %39 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %56, 0
  %58 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %57, i8 %54, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %58
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSD_SD_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #12
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind optsize }
attributes #13 = { noreturn nounwind optsize }
attributes #14 = { optsize }
attributes #15 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIPN16AnalyzeCallDepth12FunctionNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
