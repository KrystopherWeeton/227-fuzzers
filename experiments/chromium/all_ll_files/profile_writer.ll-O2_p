; ModuleID = '../../chrome/browser/importer/profile_writer.cc'
source_filename = "../../chrome/browser/importer/profile_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%class.ProfileWriter = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %class.Profile* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.8", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.25" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.20" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.14", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.bookmarks::BookmarkModel" = type { %"class.bookmarks::BookmarkUndoProvider", %class.KeyedService, %"class.std::__1::unique_ptr.31", i8, %"class.std::__1::unique_ptr.37", %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, i64, %"class.base::ObserverList.78", %"class.base::CancelableTaskTracker", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %class.scoped_refptr.116, i32, %"class.std::__1::unique_ptr.117", %"class.std::__1::set", %"class.bookmarks::BookmarkUndoDelegate"*, %"class.std::__1::unique_ptr.132", %class.scoped_refptr.138, %"class.base::WeakPtrFactory.139" }
%"class.bookmarks::BookmarkUndoProvider" = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.bookmarks::BookmarkClient"* }
%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.bookmarks::BookmarkNode"* }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.61", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.68", i8, [7 x i8] }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector.45" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::unique_ptr.37"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.52" }
%"class.std::__1::basic_string.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.55 }
%union.anon.55 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.52", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.61" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GURL* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::map.71"* }
%"class.std::__1::map.71" = type opaque
%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.61", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.68", i8 }>
%"class.base::ObserverList.78" = type <{ %"class.std::__1::vector.79", %"class.base::LinkedList.86", i64, i32, [4 x i8] }>
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.81" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.86" = type { %"class.base::LinkNode.87" }
%"class.base::LinkNode.87" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr.102", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.89 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.89 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::WeakPtr.102" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.bookmarks::BookmarkStorage"* }
%"class.bookmarks::BookmarkStorage" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.bookmarks::TitledUrlIndex"* }
%"class.bookmarks::TitledUrlIndex" = type opaque
%class.scoped_refptr.116 = type { %"class.bookmarks::UrlIndex"* }
%"class.bookmarks::UrlIndex" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.bookmarks::BookmarkExpandedStateTracker"* }
%"class.bookmarks::BookmarkExpandedStateTracker" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.123" }
%"class.std::__1::__tree.123" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.bookmarks::BookmarkUndoDelegate" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.bookmarks::BookmarkUndoDelegate"* }
%class.scoped_refptr.138 = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type opaque
%"class.base::WeakPtrFactory.139" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.TemplateURLService = type { %class.WebDataServiceConsumer, %class.KeyedService, %"class.syncer::SyncableService", %class.PrefService*, %"class.std::__1::unique_ptr.191", %class.scoped_refptr.197, %"class.std::__1::unique_ptr.212", %"class.base::RepeatingCallback.211", %class.PrefChangeRegistrar, %"class.std::__1::multimap", %"class.std::__1::map.237", %"class.std::__1::vector.246", %"class.base::ObserverList.293", %"class.std::__1::unique_ptr.297", i8, i8, i8, i32, %"class.std::__1::vector.313", %class.TemplateURL*, %"class.std::__1::unique_ptr.248", i32, i64, %"class.std::__1::unique_ptr.320", i8, i8, i8, %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.332", %"class.std::__1::set", i32, %"class.base::OnceCallbackList", %"class.base::OnceCallback", %class.DefaultSearchManager, i32, i8, %"class.std::__1::basic_string.52", %"class.base::TimeTicks" }
%class.WebDataServiceConsumer = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %class.scoped_refptr.170, %"class.base::RepeatingCallback.171", %class.scoped_refptr.172, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.152", i8, %"class.std::__1::unique_ptr.161" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.149, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.149 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.150 }
%class.scoped_refptr.150 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.151", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.151" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.170 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.171" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.172 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.SearchTermsData* }
%class.SearchTermsData = type { i32 (...)** }
%class.scoped_refptr.197 = type { %class.KeywordWebDataService* }
%class.KeywordWebDataService = type { %class.WebDataServiceBase, i64, %"class.std::__1::vector.201", %"class.base::RetainingOneShotTimer" }
%class.WebDataServiceBase = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", %class.scoped_refptr.200 }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.199" }>
%"class.base::RefCountedThreadSafe.199" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.200 = type { %class.WebDatabaseService* }
%class.WebDatabaseService = type opaque
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"struct.std::__1::pair.203"*, %"struct.std::__1::pair.203"*, %"class.std::__1::__compressed_pair.204" }
%"struct.std::__1::pair.203" = type opaque
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::pair.203"* }
%"class.base::RetainingOneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.211" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.198, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.210" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.210" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %class.TemplateURLServiceClient* }
%class.TemplateURLServiceClient = type opaque
%"class.base::RepeatingCallback.211" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.218", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.218" = type { %"class.std::__1::__tree.219" }
%"class.std::__1::__tree.219" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.227" }
%"class.std::__1::__tree.227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::map.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::unique_ptr.248"* }
%"class.base::ObserverList.293" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.294", i64, i32, [4 x i8] }>
%"class.base::LinkedList.294" = type { %"class.base::LinkNode.295" }
%"class.base::LinkNode.295" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %class.SearchHostToURLsMap* }
%class.SearchHostToURLsMap = type <{ %"class.std::__1::map.300", %"class.std::__1::basic_string.52", i8, [7 x i8] }>
%"class.std::__1::map.300" = type { %"class.std::__1::__tree.301" }
%"class.std::__1::__tree.301" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.TemplateURLService::URLVisitedDetails"*, %"struct.TemplateURLService::URLVisitedDetails"*, %"class.std::__1::__compressed_pair.315" }
%"struct.TemplateURLService::URLVisitedDetails" = type <{ %class.GURL, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.TemplateURLService::URLVisitedDetails"* }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.258", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.279", i32, i32 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %class.GURL, %class.GURL, %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.251", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string.52", %"class.std::__1::vector.251", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.52" }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.std::__1::basic_string.52"*, %"class.std::__1::basic_string.52"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::basic_string.52"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.52", i8, [7 x i8], %"class.std::__1::vector.260", i8, [7 x i8], %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", i32, [4 x i8], %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::vector.267", i8, [7 x i8] }>
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.262" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.269" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string.52", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %class.TemplateURL* }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase", %"class.std::__1::list" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback.211", %"class.base::WeakPtrFactory.342" }
%"class.base::WeakPtrFactory.342" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.338" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.DefaultSearchManager = type <{ %class.PrefService*, %"class.base::RepeatingCallback.343", %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344", i8, [7 x i8] }>
%"class.base::RepeatingCallback.343" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %struct.TemplateURLData* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.209" }
%"class.base::time_internal::TimeBase.209" = type { i64 }
%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string.52", %class.GURL, %class.GURL, %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.350", %"class.std::__1::vector.350", i8, %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.409" }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"struct.std::__1::pair.352"*, %"struct.std::__1::pair.352"*, %"class.std::__1::__compressed_pair.353" }
%"struct.std::__1::pair.352" = type opaque
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::pair.352"* }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.358", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.370", %"class.std::__1::vector.381", i32, [4 x i8], %"class.std::__1::vector.388", %"class.std::__1::vector.402", i8, [7 x i8] }>
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"struct.std::__1::pair.360"*, %"struct.std::__1::pair.360"*, %"class.std::__1::__compressed_pair.361" }
%"struct.std::__1::pair.360" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::pair.360"* }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.367" }
%"class.base::StrongAlias.367" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.368" }
%"class.util::IdType.368" = type { %"class.base::StrongAlias.369" }
%"class.base::StrongAlias.369" = type { i32 }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.376" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"class.autofill::internal::TokenType.372" }
%"class.autofill::internal::TokenType.372" = type { %"class.base::StrongAlias.373" }
%"class.base::StrongAlias.373" = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.absl::variant"* }
%"class.std::__1::vector.381" = type { %"class.std::__1::__vector_base.382" }
%"class.std::__1::__vector_base.382" = type { i32*, i32*, %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { i32* }
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.397" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.52", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.390", %"class.std::__1::vector.390", i32, %"class.gfx::RectF", %"class.std::__1::vector.390", %"class.std::__1::vector.390" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.390" = type { %"class.std::__1::__vector_base.391" }
%"class.std::__1::__vector_base.391" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.autofill::FieldRendererId"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.366 }
%union.anon.366 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.409" = type { %"class.std::__1::__vector_base.410" }
%"class.std::__1::__vector_base.410" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.411" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string.52" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.autofill::GaiaIdHash"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.56 }
%struct.anon.56 = type { i8 }
%"class.password_manager::PasswordStore" = type { %"class.password_manager::PasswordStoreSync", %class.RefcountedKeyedService, %class.scoped_refptr.198, %class.scoped_refptr.198, %class.scoped_refptr.418, %class.scoped_refptr.419, %"class.std::__1::unique_ptr.421", %"class.base::RepeatingCallback.211", %"class.std::__1::unique_ptr.427", %class.PrefService*, %"class.password_manager::PasswordReuseDetector"*, %"class.std::__1::unique_ptr.466", %"class.password_manager::HashPasswordManager", %"class.std::__1::unique_ptr.481", %"class.std::__1::vector.487", %"class.base::internal::CancelableCallbackImpl", i8, i32, %"class.base::TimeDelta" }
%"class.password_manager::PasswordStoreSync" = type { i32 (...)** }
%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe.417", %class.scoped_refptr.198 }
%"class.base::RefCountedThreadSafe.417" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.418 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%class.scoped_refptr.419 = type { %"class.base::ObserverListThreadSafe.420"* }
%"class.base::ObserverListThreadSafe.420" = type { %"class.base::internal::ObserverListThreadSafeBase.base", i32, %"class.base::Lock", i64, %"class.std::__1::unordered_map.597" }
%"class.base::internal::ObserverListThreadSafeBase.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.596" }>
%"class.base::RefCountedThreadSafe.596" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_map.597" = type { %"class.std::__1::__hash_table.598" }
%"class.std::__1::__hash_table.598" = type <{ %"class.std::__1::unique_ptr.599", %"class.std::__1::__compressed_pair.609", %"class.std::__1::__compressed_pair.614", %"class.std::__1::__compressed_pair.619", [4 x i8] }>
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601", %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"struct.std::__1::__hash_node_base.602"** }
%"struct.std::__1::__hash_node_base.602" = type { %"struct.std::__1::__hash_node_base.602"* }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.std::__1::__bucket_list_deallocator.604" }
%"class.std::__1::__bucket_list_deallocator.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.602" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.password_manager::PasswordSyncBridge"* }
%"class.password_manager::PasswordSyncBridge" = type opaque
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.password_manager::AffiliatedMatchHelper"* }
%"class.password_manager::AffiliatedMatchHelper" = type opaque
%"class.password_manager::PasswordReuseDetector" = type { %"class.password_manager::PasswordStoreConsumer", %"class.std::__1::map.434", i32, %"class.absl::optional.443", %"class.absl::optional.443", %"class.absl::optional.455" }
%"class.password_manager::PasswordStoreConsumer" = type { i32 (...)**, %"class.base::CancelableTaskTracker", %"class.base::WeakPtrFactory.433" }
%"class.base::WeakPtrFactory.433" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.434" = type { %"class.std::__1::__tree.435" }
%"class.std::__1::__tree.435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.absl::optional.443" = type { %"class.absl::optional_internal::optional_data.444" }
%"class.absl::optional_internal::optional_data.444" = type { %"class.absl::optional_internal::optional_data_base.445" }
%"class.absl::optional_internal::optional_data_base.445" = type { %"class.absl::optional_internal::optional_data_dtor_base.446" }
%"class.absl::optional_internal::optional_data_dtor_base.446" = type { i8, %union.anon.447 }
%union.anon.447 = type { %"class.std::__1::vector.448" }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"struct.password_manager::PasswordHashData"*, %"struct.password_manager::PasswordHashData"*, %"class.std::__1::__compressed_pair.450" }
%"struct.password_manager::PasswordHashData" = type <{ %"class.std::__1::basic_string.52", i64, %"class.std::__1::basic_string.52", i64, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.password_manager::PasswordHashData"* }
%"class.absl::optional.455" = type { %"class.absl::optional_internal::optional_data.456" }
%"class.absl::optional_internal::optional_data.456" = type { %"class.absl::optional_internal::optional_data_base.457" }
%"class.absl::optional_internal::optional_data_base.457" = type { %"class.absl::optional_internal::optional_data_dtor_base.458" }
%"class.absl::optional_internal::optional_data_dtor_base.458" = type { i8, %union.anon.459 }
%union.anon.459 = type { %"class.std::__1::vector.460" }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.password_manager::PasswordStoreSigninNotifier"* }
%"class.password_manager::PasswordStoreSigninNotifier" = type opaque
%"class.password_manager::HashPasswordManager" = type { i32 (...)**, %class.PrefService*, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase.472" }
%"class.base::internal::CallbackListBase.472" = type { %"class.std::__1::list.473", i8, %"class.base::RepeatingCallback.211", %"class.base::WeakPtrFactory.480" }
%"class.std::__1::list.473" = type { %"class.std::__1::__list_imp.474" }
%"class.std::__1::__list_imp.474" = type { %"struct.std::__1::__list_node_base.475", %"class.std::__1::__compressed_pair.476" }
%"struct.std::__1::__list_node_base.475" = type { %"struct.std::__1::__list_node_base.475"*, %"struct.std::__1::__list_node_base.475"* }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::WeakPtrFactory.480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.password_manager::PasswordStore::UnsyncedCredentialsDeletionNotifier"* }
%"class.password_manager::PasswordStore::UnsyncedCredentialsDeletionNotifier" = type { i32 (...)** }
%"class.std::__1::vector.487" = type { %"class.std::__1::__vector_base.488" }
%"class.std::__1::__vector_base.488" = type { %"class.base::OnceCallback.489"*, %"class.base::OnceCallback.489"*, %"class.std::__1::__compressed_pair.490" }
%"class.base::OnceCallback.489" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.base::OnceCallback.489"* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback", %"class.base::WeakPtrFactory.495" }
%"class.base::WeakPtrFactory.495" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { %"class.history::URLRow"*, %"class.history::URLRow"*, %"class.std::__1::__compressed_pair.498" }
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.history::URLRow"* }
%"class.history::HistoryService" = type { %class.KeyedService, %class.scoped_refptr.198, %class.scoped_refptr.503, %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.516", i8, [7 x i8], %"class.base::ObserverList.522", %"class.base::RepeatingCallbackList.526", %"class.std::__1::unique_ptr.536", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.542" }
%class.scoped_refptr.503 = type { %"class.history::HistoryBackend"* }
%"class.history::HistoryBackend" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.history::InMemoryHistoryBackend"* }
%"class.history::InMemoryHistoryBackend" = type opaque
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.history::HistoryClient"* }
%"class.history::HistoryClient" = type opaque
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.history::VisitDelegate"* }
%"class.history::VisitDelegate" = type opaque
%"class.base::ObserverList.522" = type <{ %"class.std::__1::vector.79", %"class.base::LinkedList.523", i64, i32, [4 x i8] }>
%"class.base::LinkedList.523" = type { %"class.base::LinkNode.524" }
%"class.base::LinkNode.524" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList.526" = type { %"class.base::internal::CallbackListBase.527" }
%"class.base::internal::CallbackListBase.527" = type { %"class.std::__1::list.528", i8, %"class.base::RepeatingCallback.211", %"class.base::WeakPtrFactory.535" }
%"class.std::__1::list.528" = type { %"class.std::__1::__list_imp.529" }
%"class.std::__1::__list_imp.529" = type { %"struct.std::__1::__list_node_base.530", %"class.std::__1::__compressed_pair.531" }
%"struct.std::__1::__list_node_base.530" = type { %"struct.std::__1::__list_node_base.530"*, %"struct.std::__1::__list_node_base.530"* }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::WeakPtrFactory.535" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.history::DeleteDirectiveHandler"* }
%"class.history::DeleteDirectiveHandler" = type opaque
%"class.base::WeakPtrFactory.542" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.548", [4 x i8] }>
%"struct.std::__1::atomic.548" = type { %"struct.std::__1::__atomic_base.549" }
%"struct.std::__1::__atomic_base.549" = type { %"struct.std::__1::__atomic_base.550" }
%"struct.std::__1::__atomic_base.550" = type { %"struct.std::__1::__cxx_atomic_impl.551" }
%"struct.std::__1::__cxx_atomic_impl.551" = type { %"struct.std::__1::__cxx_atomic_base_impl.552" }
%"struct.std::__1::__cxx_atomic_base_impl.552" = type { i32 }
%"class.PrefService::Preference" = type { %"class.std::__1::basic_string.52", i8, i32, %class.PrefService* }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*, %"class.std::__1::__compressed_pair.555" }
%struct.ImportedBookmarkEntry = type { i8, i8, %class.GURL, %"class.std::__1::vector.390", %"class.std::__1::basic_string", %"class.base::Time" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %struct.ImportedBookmarkEntry* }
%"class.std::__1::set.625" = type { %"class.std::__1::__tree.626" }
%"class.std::__1::__tree.626" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::set.561" = type { %"class.std::__1::__tree.562" }
%"class.std::__1::__tree.562" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.absl::optional.571" = type { %"class.absl::optional_internal::optional_data.572" }
%"class.absl::optional_internal::optional_data.572" = type { %"class.absl::optional_internal::optional_data_base.573" }
%"class.absl::optional_internal::optional_data_base.573" = type { %"class.absl::optional_internal::optional_data_dtor_base.574" }
%"class.absl::optional_internal::optional_data_dtor_base.574" = type { i8, %union.anon.575 }
%union.anon.575 = type { %"class.base::GUID" }
%"class.absl::optional.580" = type { %"class.absl::optional_internal::optional_data.581" }
%"class.absl::optional_internal::optional_data.581" = type { %"class.absl::optional_internal::optional_data_base.582" }
%"class.absl::optional_internal::optional_data_base.582" = type { %"class.absl::optional_internal::optional_data_dtor_base.583" }
%"class.absl::optional_internal::optional_data_dtor_base.583" = type { i8, %union.anon.584 }
%union.anon.584 = type { %"class.base::Time" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.667" = type { %"class.std::__1::__tree_node_base.base", %"class.bookmarks::BookmarkNode"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.585" = type opaque
%"class.favicon::FaviconService" = type { %"class.favicon::CoreFaviconService", %"class.favicon::LargeFaviconProvider" }
%"class.favicon::CoreFaviconService" = type { %class.KeyedService }
%"class.favicon::LargeFaviconProvider" = type { i32 (...)** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string.52"* }
%"class.std::__1::tuple.652" = type { i8 }
%"class.std::__1::vector.643" = type { %"class.std::__1::__vector_base.644" }
%"class.std::__1::__vector_base.644" = type { %class.TemplateURL**, %class.TemplateURL**, %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %class.TemplateURL** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.52", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__tree_node.654" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.653" }
%"struct.std::__1::pair.653" = type { %"class.std::__1::basic_string.52", %class.TemplateURL* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.52", i32, i64, %"class.std::__1::basic_string.52", i32, %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", i8, %"class.std::__1::basic_string.52", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.52", i64, i32, i8, %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52" }
%"struct.std::__1::pair.664" = type opaque
%"class.std::__1::vector.587" = type opaque
%"class.autofill::AutofillWebDataService" = type { %class.WebDataServiceBase, %"class.base::ObserverList.589", %class.scoped_refptr.593, %class.scoped_refptr.593, %class.scoped_refptr.594, %"class.base::WeakPtrFactory.595" }
%"class.base::ObserverList.589" = type <{ %"class.std::__1::vector.79", %"class.base::LinkedList.590", i64, i32, [4 x i8] }>
%"class.base::LinkedList.590" = type { %"class.base::LinkNode.591" }
%"class.base::LinkNode.591" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.593 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%class.scoped_refptr.594 = type { %"class.autofill::AutofillWebDataBackendImpl"* }
%"class.autofill::AutofillWebDataBackendImpl" = type opaque
%"class.base::WeakPtrFactory.595" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.std::__1::__tree_node"* }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__tree_node_destructor" }
%"class.std::__1::__tree_node_destructor" = type <{ %"class.std::__1::allocator.629"*, i8, [7 x i8] }>
%"class.std::__1::allocator.629" = type { i8 }
%"class.std::__1::allocator.59" = type { i8 }

$_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZN4base12DeleteHelperI18WebDataServiceBaseE8DoDeleteEPKv = comdat any

@_ZTV13ProfileWriter = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%class.ProfileWriter*)* @_ZNK13ProfileWriter21BookmarkModelIsLoadedEv to i8*), i8* bitcast (i1 (%class.ProfileWriter*)* @_ZNK13ProfileWriter26TemplateURLServiceIsLoadedEv to i8*), i8* bitcast (void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)* @_ZN13ProfileWriter15AddPasswordFormERKN16password_manager12PasswordFormE to i8*), i8* bitcast (void (%class.ProfileWriter*, %"class.std::__1::vector.496"*, i32)* @_ZN13ProfileWriter14AddHistoryPageERKNSt3__16vectorIN7history6URLRowENS0_9allocatorIS3_EEEENS2_11VisitSourceE to i8*), i8* bitcast (void (%class.ProfileWriter*, %class.GURL*)* @_ZN13ProfileWriter11AddHomepageERK4GURL to i8*), i8* bitcast (void (%class.ProfileWriter*, %"class.std::__1::vector.553"*, %"class.std::__1::basic_string"*)* @_ZN13ProfileWriter12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE to i8*), i8* bitcast (void (%class.ProfileWriter*, %"class.std::__1::vector.585"*)* @_ZN13ProfileWriter11AddFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.ProfileWriter*, %"class.std::__1::vector.246"*, i1)* @_ZN13ProfileWriter11AddKeywordsENSt3__16vectorINS0_10unique_ptrI11TemplateURLNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEEb to i8*), i8* bitcast (void (%class.ProfileWriter*, %"class.std::__1::vector.587"*)* @_ZN13ProfileWriter26AddAutofillFormDataEntriesERKNSt3__16vectorIN8autofill13AutofillEntryENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.ProfileWriter*)* @_ZN13ProfileWriterD2Ev to i8*), i8* bitcast (void (%class.ProfileWriter*)* @_ZN13ProfileWriterD0Ev to i8*)] }, align 8
@_ZN16password_manager5prefs25kCredentialsEnableServiceE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [44 x i8] c"Import.ImportedHistorySize.AutoImportFromIE\00", align 1
@_ZN5prefs9kHomePageE = external constant [0 x i8], align 1
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@.str.1 = private unnamed_addr constant [3 x i16] [i16 32, i16 40, i16 0], align 2
@.str.2 = private unnamed_addr constant [2 x i16] [i16 41, i16 0], align 2
@_ZN9bookmarks5prefs16kShowBookmarkBarE = external constant [0 x i8], align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"../../components/search_engines/template_url.h\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"!url_refs_.empty()\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"DestructOnSequence\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"../../base/memory/ref_counted_delete_on_sequence.h\00", align 1
@_ZZN13ProfileWriter14AddHistoryPageERKNSt3__16vectorIN7history6URLRowENS0_9allocatorIS3_EEEENS2_11VisitSourceEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN13ProfileWriterC1EP7Profile = hidden unnamed_addr alias void (%class.ProfileWriter*, %class.Profile*), void (%class.ProfileWriter*, %class.Profile*)* @_ZN13ProfileWriterC2EP7Profile
@_ZN13ProfileWriterD1Ev = hidden unnamed_addr alias void (%class.ProfileWriter*), void (%class.ProfileWriter*)* @_ZN13ProfileWriterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13ProfileWriterC2EP7Profile(%class.ProfileWriter* nocapture, %class.Profile*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV13ProfileWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  store %class.Profile* %1, %class.Profile** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13ProfileWriter21BookmarkModelIsLoadedEv(%class.ProfileWriter* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %3 = bitcast %class.Profile** %2 to %"class.content::BrowserContext"**
  %4 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %3, align 8
  %5 = tail call %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %4) #13
  %6 = getelementptr inbounds %"class.bookmarks::BookmarkModel", %"class.bookmarks::BookmarkModel"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

declare %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13ProfileWriter26TemplateURLServiceIsLoadedEv(%class.ProfileWriter* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %3 = load %class.Profile*, %class.Profile** %2, align 8
  %4 = tail call %class.TemplateURLService* @_ZN25TemplateURLServiceFactory13GetForProfileEP7Profile(%class.Profile* %3) #13
  %5 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %4, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

declare %class.TemplateURLService* @_ZN25TemplateURLServiceFactory13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter15AddPasswordFormERKN16password_manager12PasswordFormE(%class.ProfileWriter* nocapture readonly, %"struct.password_manager::PasswordForm"* dereferenceable(1744)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string.52", align 8
  %4 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %5 = load %class.Profile*, %class.Profile** %4, align 8
  %6 = bitcast %class.Profile* %5 to %class.PrefService* (%class.Profile*)***
  %7 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %6, align 8
  %8 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %7, i64 46
  %9 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %8, align 8
  %10 = tail call %class.PrefService* %9(%class.Profile* %5) #13
  %11 = bitcast %"class.std::__1::basic_string.52"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16password_manager5prefs25kCredentialsEnableServiceE, i64 0, i64 0)) #13
  %13 = icmp ugt i64 %12, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #14
  unreachable

16:                                               ; preds = %2
  %17 = icmp ult i64 %12, 23
  br i1 %17, label %27, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %12, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #15
  %22 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %25, align 8
  %26 = bitcast %"class.std::__1::basic_string.52"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

27:                                               ; preds = %16
  %28 = trunc i64 %12 to i8
  %29 = bitcast %"class.std::__1::basic_string.52"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27, %18
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %26, %18 ]
  %34 = phi i8* [ %11, %27 ], [ %21, %18 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16password_manager5prefs25kCredentialsEnableServiceE, i64 0, i64 0), i64 %12, i1 false) #13
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %27 ], [ %33, %32 ]
  %37 = phi i8* [ %11, %27 ], [ %34, %32 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %12
  store i8 0, i8* %38, align 1
  %39 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %10, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %3) #13
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br i1 %39, label %47, label %63

47:                                               ; preds = %46
  %48 = load %class.Profile*, %class.Profile** %4, align 8
  %49 = call %"class.password_manager::PasswordStore"* @_ZN20PasswordStoreFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile* %48, i32 0) #13
  %50 = bitcast %"class.password_manager::PasswordStore"* %49 to void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)***
  %51 = load void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)**, void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)*, void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)** %51, i64 22
  %53 = load void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)*, void (%"class.password_manager::PasswordStore"*, %"struct.password_manager::PasswordForm"*)** %52, align 8
  call void %53(%"class.password_manager::PasswordStore"* %49, %"struct.password_manager::PasswordForm"* dereferenceable(1744) %1) #13
  %54 = icmp eq %"class.password_manager::PasswordStore"* %49, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.password_manager::PasswordStore", %"class.password_manager::PasswordStore"* %49, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe.417"* %61 to %class.RefcountedKeyedService*
  call void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService* %62) #13
  br label %63

63:                                               ; preds = %60, %55, %47, %46
  ret void
}

declare zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.password_manager::PasswordStore"* @_ZN20PasswordStoreFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter14AddHistoryPageERKNSt3__16vectorIN7history6URLRowENS0_9allocatorIS3_EEEENS2_11VisitSourceE(%class.ProfileWriter* nocapture readonly, %"class.std::__1::vector.496"* dereferenceable(24), i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.496", %"class.std::__1::vector.496"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.history::URLRow"*, %"class.history::URLRow"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.496", %"class.std::__1::vector.496"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.history::URLRow"*, %"class.history::URLRow"** %6, align 8
  %8 = icmp eq %"class.history::URLRow"* %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %11 = load %class.Profile*, %class.Profile** %10, align 8
  %12 = tail call %"class.history::HistoryService"* @_ZN21HistoryServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile* %11, i32 0) #13
  tail call void @_ZN7history14HistoryService19AddPagesWithDetailsERKNSt3__16vectorINS_6URLRowENS1_9allocatorIS3_EEEENS_11VisitSourceE(%"class.history::HistoryService"* %12, %"class.std::__1::vector.496"* dereferenceable(24) %1, i32 %2) #13
  br label %13

13:                                               ; preds = %9, %3
  %14 = tail call zeroext i1 @_ZN9first_run16IsChromeFirstRunEv() #13
  %15 = icmp eq i32 %2, 4
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %37

17:                                               ; preds = %13
  %18 = load atomic i64, i64* @_ZZN13ProfileWriter14AddHistoryPageERKNSt3__16vectorIN7history6URLRowENS0_9allocatorIS3_EEEENS2_11VisitSourceEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 1, i32 1000000, i32 50, i32 1) #13
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN13ProfileWriter14AddHistoryPageERKNSt3__16vectorIN7history6URLRowENS0_9allocatorIS3_EEEENS2_11VisitSourceEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ]
  %26 = bitcast %"class.history::URLRow"** %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.496"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 184
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"class.base::HistogramBase"* %25 to void (%"class.base::HistogramBase"*, i32)***
  %34 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %34, i64 6
  %36 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %35, align 8
  tail call void %36(%"class.base::HistogramBase"* %25, i32 %32) #13
  br label %37

37:                                               ; preds = %24, %13
  ret void
}

declare %"class.history::HistoryService"* @_ZN21HistoryServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile*, i32) local_unnamed_addr #2

declare void @_ZN7history14HistoryService19AddPagesWithDetailsERKNSt3__16vectorINS_6URLRowENS1_9allocatorIS3_EEEENS_11VisitSourceE(%"class.history::HistoryService"*, %"class.std::__1::vector.496"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN9first_run16IsChromeFirstRunEv() local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter11AddHomepageERK4GURL(%class.ProfileWriter* nocapture readonly, %class.GURL* dereferenceable(120)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string.52", align 8
  %4 = alloca %"class.std::__1::basic_string.52", align 8
  %5 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %6 = load %class.Profile*, %class.Profile** %5, align 8
  %7 = bitcast %class.Profile* %6 to %class.PrefService* (%class.Profile*)***
  %8 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %7, align 8
  %9 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %8, i64 46
  %10 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %9, align 8
  %11 = tail call %class.PrefService* %10(%class.Profile* %6) #13
  %12 = bitcast %"class.std::__1::basic_string.52"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs9kHomePageE, i64 0, i64 0)) #13
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #14
  unreachable

17:                                               ; preds = %2
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string.52"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string.52"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %13, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %12, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs9kHomePageE, i64 0, i64 0), i64 %13, i1 false) #13
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %12, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %13
  store i8 0, i8* %39, align 1
  %40 = call %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %11, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %3) #13
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  %48 = icmp eq %"class.PrefService::Preference"* %40, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %47
  %50 = call zeroext i1 @_ZNK11PrefService10Preference9IsManagedEv(%"class.PrefService::Preference"* nonnull %40) #13
  br i1 %50, label %88, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::basic_string.52"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs9kHomePageE, i64 0, i64 0)) #13
  %54 = icmp ugt i64 %53, -17
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::basic_string.52"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %56) #14
  unreachable

57:                                               ; preds = %51
  %58 = icmp ult i64 %53, 23
  br i1 %58, label %68, label %59

59:                                               ; preds = %57
  %60 = add nuw i64 %53, 16
  %61 = and i64 %60, -16
  %62 = call i8* @_Znwm(i64 %61) #15
  %63 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = or i64 %61, -9223372036854775808
  %65 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %66, align 8
  %67 = bitcast %"class.std::__1::basic_string.52"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %73

68:                                               ; preds = %57
  %69 = trunc i64 %53 to i8
  %70 = bitcast %"class.std::__1::basic_string.52"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 %69, i8* %71, align 1
  %72 = icmp eq i64 %53, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68, %59
  %74 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %70, %68 ], [ %67, %59 ]
  %75 = phi i8* [ %52, %68 ], [ %62, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs9kHomePageE, i64 0, i64 0), i64 %53, i1 false) #13
  br label %76

76:                                               ; preds = %68, %73
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %70, %68 ], [ %74, %73 ]
  %78 = phi i8* [ %52, %68 ], [ %75, %73 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 %53
  store i8 0, i8* %79, align 1
  %80 = call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNK4GURL4specEv(%class.GURL* %1) #13
  call void @_ZN11PrefService9SetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.PrefService* %11, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string.52"* dereferenceable(24) %80) #13
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %76, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br label %88

88:                                               ; preds = %47, %87, %49
  ret void
}

declare %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK11PrefService10Preference9IsManagedEv(%"class.PrefService::Preference"*) local_unnamed_addr #2

declare void @_ZN11PrefService9SetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.PrefService*, %"class.std::__1::basic_string.52"* dereferenceable(24), %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE(%class.ProfileWriter* nocapture readonly, %"class.std::__1::vector.553"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::set.625", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.52", align 8
  %9 = alloca %"class.std::__1::vector.553", align 8
  %10 = alloca %"class.std::__1::vector.553", align 8
  %11 = alloca %"class.std::__1::set.561", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.absl::optional.571", align 8
  %14 = alloca %"class.absl::optional.571", align 8
  %15 = alloca %"class.absl::optional.571", align 8
  %16 = alloca %"class.absl::optional.580", align 8
  %17 = alloca %"class.absl::optional.571", align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 0
  %19 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %1, i64 0, i32 0, i32 1
  %21 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %20, align 8
  %22 = icmp eq %struct.ImportedBookmarkEntry* %19, %21
  br i1 %22, label %1158, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %25 = bitcast %class.Profile** %24 to %"class.content::BrowserContext"**
  %26 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %25, align 8
  %27 = tail call %"class.bookmarks::BookmarkModel"* @_ZN20BookmarkModelFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %26) #13
  %28 = getelementptr inbounds %"class.bookmarks::BookmarkModel", %"class.bookmarks::BookmarkModel"* %27, i64 0, i32 6
  %29 = bitcast %"class.bookmarks::BookmarkPermanentNode"** %28 to %"class.bookmarks::BookmarkNode"**
  %30 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %29, align 8
  %31 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %30, i64 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %32, align 8
  %34 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %30, i64 0, i32 0, i32 3, i32 0, i32 1
  %35 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %34, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.37"* %33, %35
  %37 = bitcast %"class.std::__1::vector.553"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %9, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %9, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #13
  %41 = bitcast %"class.std::__1::vector.553"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #13
  %45 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %18, align 8
  %46 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %20, align 8
  %47 = icmp eq %struct.ImportedBookmarkEntry* %45, %46
  br i1 %47, label %55, label %48

48:                                               ; preds = %23
  %49 = bitcast %struct.ImportedBookmarkEntry** %39 to i64*
  %50 = bitcast %struct.ImportedBookmarkEntry** %43 to i64*
  br label %60

51:                                               ; preds = %81
  %52 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %42, align 8
  %53 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %38, align 8
  %54 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  br label %55

55:                                               ; preds = %51, %23
  %56 = phi %struct.ImportedBookmarkEntry* [ %54, %51 ], [ null, %23 ]
  %57 = phi %struct.ImportedBookmarkEntry* [ %53, %51 ], [ null, %23 ]
  %58 = phi %struct.ImportedBookmarkEntry* [ %52, %51 ], [ null, %23 ]
  %59 = call %struct.ImportedBookmarkEntry* @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_(%"class.std::__1::vector.553"* nonnull %10, %struct.ImportedBookmarkEntry* %58, %struct.ImportedBookmarkEntry* %57, %struct.ImportedBookmarkEntry* %56)
  br i1 %36, label %85, label %89

60:                                               ; preds = %48, %81
  %61 = phi %struct.ImportedBookmarkEntry* [ %45, %48 ], [ %82, %81 ]
  %62 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %61, i64 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %67 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %40, align 8
  %68 = icmp eq %struct.ImportedBookmarkEntry* %66, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %66, %struct.ImportedBookmarkEntry* dereferenceable(184) %61) #13
  %70 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %66, i64 1
  %71 = ptrtoint %struct.ImportedBookmarkEntry* %70 to i64
  store i64 %71, i64* %49, align 8
  br label %81

72:                                               ; preds = %65
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.553"* nonnull %9, %struct.ImportedBookmarkEntry* dereferenceable(184) %61) #13
  br label %81

73:                                               ; preds = %60
  %74 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %43, align 8
  %75 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %44, align 8
  %76 = icmp eq %struct.ImportedBookmarkEntry* %74, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %74, %struct.ImportedBookmarkEntry* dereferenceable(184) %61) #13
  %78 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %74, i64 1
  %79 = ptrtoint %struct.ImportedBookmarkEntry* %78 to i64
  store i64 %79, i64* %50, align 8
  br label %81

80:                                               ; preds = %73
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.553"* nonnull %10, %struct.ImportedBookmarkEntry* dereferenceable(184) %61) #13
  br label %81

81:                                               ; preds = %80, %77, %72, %69
  %82 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %61, i64 1
  %83 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %20, align 8
  %84 = icmp eq %struct.ImportedBookmarkEntry* %82, %83
  br i1 %84, label %51, label %60

85:                                               ; preds = %55
  %86 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %38, align 8
  %87 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %88 = icmp eq %struct.ImportedBookmarkEntry* %86, %87
  br label %89

89:                                               ; preds = %85, %55
  %90 = phi i1 [ false, %55 ], [ %88, %85 ]
  call void @_ZN9bookmarks13BookmarkModel21BeginExtensiveChangesEv(%"class.bookmarks::BookmarkModel"* %27) #13
  %91 = bitcast %"class.std::__1::set.561"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #13
  %92 = getelementptr inbounds %"class.std::__1::set.561", %"class.std::__1::set.561"* %11, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::set.561", %"class.std::__1::set.561"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::set.561", %"class.std::__1::set.561"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::set.561", %"class.std::__1::set.561"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = bitcast %"class.std::__1::__tree_node_base"** %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %95, %"class.std::__1::__tree_end_node"** %92, align 8
  %97 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %42, align 8
  %98 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %43, align 8
  %99 = icmp eq %struct.ImportedBookmarkEntry* %97, %98
  br i1 %99, label %1044, label %100

100:                                              ; preds = %89
  %101 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %104 = bitcast %"class.std::__1::set.625"* %4 to i8*
  %105 = getelementptr inbounds %"class.std::__1::set.625", %"class.std::__1::set.625"* %4, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.std::__1::set.625", %"class.std::__1::set.625"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::set.625", %"class.std::__1::set.625"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::set.625", %"class.std::__1::set.625"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %109 = bitcast %"class.std::__1::__tree_node_base"** %106 to i8*
  %110 = getelementptr inbounds %"class.std::__1::set.625", %"class.std::__1::set.625"* %4, i64 0, i32 0
  %111 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %114 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %114, i64 0, i32 1, i32 1
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %119 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %125 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %131 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %132 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %133 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %133, i64 0, i32 1, i32 1
  %135 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %136 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %136, i64 0, i32 1, i32 1
  %138 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %142 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_node"**
  %143 = bitcast %"class.std::__1::unique_ptr.37"** %34 to i64*
  %144 = bitcast %"class.std::__1::vector.45"* %31 to i64*
  %145 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast %union.anon.575* %146 to i8*
  %148 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %149 = bitcast %"class.base::GUID"* %148 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.base::GUID", %"class.base::GUID"* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast %union.anon.575* %153 to i8*
  %155 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %156 = bitcast %"class.base::GUID"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.base::GUID", %"class.base::GUID"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node.667"**
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 0, i32 0
  %161 = bitcast %"class.std::__1::set.561"* %11 to i64*
  %162 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %164 = bitcast %union.anon.575* %163 to i8*
  %165 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = bitcast %"class.base::GUID"* %165 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = getelementptr inbounds %"class.base::GUID", %"class.base::GUID"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.absl::optional.580", %"class.absl::optional.580"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.absl::optional.580", %"class.absl::optional.580"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast %union.anon.575* %172 to i8*
  %174 = getelementptr inbounds %"class.absl::optional.571", %"class.absl::optional.571"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %175 = bitcast %"class.base::GUID"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = getelementptr inbounds %"class.base::GUID", %"class.base::GUID"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %182

179:                                              ; preds = %1039
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %181 = icmp eq %"class.std::__1::__tree_end_node"* %180, %95
  br i1 %181, label %1044, label %1047

182:                                              ; preds = %100, %1039
  %183 = phi %"class.bookmarks::BookmarkNode"* [ null, %100 ], [ %1040, %1039 ]
  %184 = phi %struct.ImportedBookmarkEntry* [ %97, %100 ], [ %1041, %1039 ]
  %185 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 1
  %186 = load i8, i8* %185, align 1, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 2, i32 1
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %1039, label %192

192:                                              ; preds = %188, %182
  br i1 %36, label %193, label %198

193:                                              ; preds = %192
  br i1 %90, label %828, label %194

194:                                              ; preds = %193
  %195 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 0
  %196 = load i8, i8* %195, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %828

198:                                              ; preds = %194, %192
  %199 = icmp eq %"class.bookmarks::BookmarkNode"* %183, null
  br i1 %199, label %200, label %828

200:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #13, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #13, !noalias !3
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %105, align 8, !noalias !3
  %201 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %29, align 8, !noalias !3
  %202 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %201, i64 0, i32 0, i32 3, i32 0, i32 0
  %203 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %202, align 8, !noalias !3
  %204 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %201, i64 0, i32 0, i32 3, i32 0, i32 1
  %205 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %204, align 8, !noalias !3
  %206 = icmp eq %"class.std::__1::unique_ptr.37"* %203, %205
  br i1 %206, label %207, label %213

207:                                              ; preds = %227, %200
  %208 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.626"* nonnull %110, %"class.std::__1::basic_string"* dereferenceable(24) %2) #13
  %209 = icmp eq %"class.std::__1::__tree_end_node"* %208, %108
  br i1 %209, label %230, label %210

210:                                              ; preds = %207
  %211 = load i64, i64* %107, align 8, !noalias !3
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %635, label %406

213:                                              ; preds = %200, %227
  %214 = phi %"class.std::__1::unique_ptr.37"* [ %228, %227 ], [ %203, %200 ]
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %214, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %215, align 8
  %217 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %216, i64 0, i32 5
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %227, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %216, i64 0, i32 0
  %222 = bitcast %"class.bookmarks::BookmarkNode"* %216 to %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)***
  %223 = load %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)**, %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)*** %222, align 8
  %224 = load %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)*, %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)** %223, align 8
  %225 = call dereferenceable(24) %"class.std::__1::basic_string"* %224(%"class.ui::TreeNode"* %221) #13
  %226 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.626"* nonnull %110, %"class.std::__1::basic_string"* dereferenceable(24) %225, %"class.std::__1::basic_string"* dereferenceable(24) %225) #13
  br label %227

227:                                              ; preds = %220, %213
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %214, i64 1
  %229 = icmp eq %"class.std::__1::unique_ptr.37"* %228, %205
  br i1 %229, label %207, label %213

230:                                              ; preds = %207
  %231 = load i8, i8* %137, align 1, !noalias !3
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %234, label %233

233:                                              ; preds = %230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %138, i64 24, i1 false) #13
  br label %807

234:                                              ; preds = %230
  %235 = load i16*, i16** %139, align 8, !noalias !3
  %236 = load i64, i64* %140, align 8, !noalias !3
  %237 = icmp ult i64 %236, 11
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  %239 = trunc i64 %236 to i8
  store i8 %239, i8* %134, align 1, !alias.scope !3
  br label %254

240:                                              ; preds = %234
  %241 = icmp ugt i64 %236, 9223372036854775791
  br i1 %241, label %242, label %244

242:                                              ; preds = %240
  %243 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %243) #14
  unreachable

244:                                              ; preds = %240
  %245 = add nuw nsw i64 %236, 8
  %246 = and i64 %245, -8
  %247 = icmp slt i64 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %244
  call void @abort() #14
  unreachable

249:                                              ; preds = %244
  %250 = shl i64 %246, 1
  %251 = call i8* @_Znwm(i64 %250) #15
  %252 = bitcast i8* %251 to i16*
  store i8* %251, i8** %135, align 8, !alias.scope !3
  %253 = or i64 %246, -9223372036854775808
  store i64 %253, i64* %103, align 8, !alias.scope !3
  store i64 %236, i64* %102, align 8, !alias.scope !3
  br label %254

254:                                              ; preds = %249, %238
  %255 = phi i16* [ %141, %238 ], [ %252, %249 ]
  %256 = add nuw nsw i64 %236, 1
  %257 = add i64 %236, 1
  %258 = icmp ult i64 %257, 16
  br i1 %258, label %349, label %259

259:                                              ; preds = %254
  %260 = getelementptr i16, i16* %255, i64 1
  %261 = getelementptr i16, i16* %260, i64 %236
  %262 = getelementptr i16, i16* %235, i64 1
  %263 = getelementptr i16, i16* %262, i64 %236
  %264 = icmp ult i16* %255, %263
  %265 = icmp ult i16* %235, %261
  %266 = and i1 %264, %265
  br i1 %266, label %349, label %267

267:                                              ; preds = %259
  %268 = and i64 %257, -16
  %269 = sub i64 %256, %268
  %270 = getelementptr i16, i16* %235, i64 %268
  %271 = getelementptr i16, i16* %255, i64 %268
  %272 = add i64 %268, -16
  %273 = lshr exact i64 %272, 4
  %274 = add nuw nsw i64 %273, 1
  %275 = and i64 %274, 3
  %276 = icmp ult i64 %272, 48
  br i1 %276, label %328, label %277

277:                                              ; preds = %267
  %278 = sub nsw i64 %274, %275
  br label %279

279:                                              ; preds = %279, %277
  %280 = phi i64 [ 0, %277 ], [ %325, %279 ]
  %281 = phi i64 [ %278, %277 ], [ %326, %279 ]
  %282 = getelementptr i16, i16* %235, i64 %280
  %283 = getelementptr i16, i16* %255, i64 %280
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !6
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !6
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !9, !noalias !6
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !9, !noalias !6
  %292 = or i64 %280, 16
  %293 = getelementptr i16, i16* %235, i64 %292
  %294 = getelementptr i16, i16* %255, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !6
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !6
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !9, !noalias !6
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !9, !noalias !6
  %303 = or i64 %280, 32
  %304 = getelementptr i16, i16* %235, i64 %303
  %305 = getelementptr i16, i16* %255, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !6
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !6
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !9, !noalias !6
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !9, !noalias !6
  %314 = or i64 %280, 48
  %315 = getelementptr i16, i16* %235, i64 %314
  %316 = getelementptr i16, i16* %255, i64 %314
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !6
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !6
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !9, !noalias !6
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !9, !noalias !6
  %325 = add i64 %280, 64
  %326 = add i64 %281, -4
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %279, !llvm.loop !11

328:                                              ; preds = %279, %267
  %329 = phi i64 [ 0, %267 ], [ %325, %279 ]
  %330 = icmp eq i64 %275, 0
  br i1 %330, label %347, label %331

331:                                              ; preds = %328, %331
  %332 = phi i64 [ %344, %331 ], [ %329, %328 ]
  %333 = phi i64 [ %345, %331 ], [ %275, %328 ]
  %334 = getelementptr i16, i16* %235, i64 %332
  %335 = getelementptr i16, i16* %255, i64 %332
  %336 = bitcast i16* %334 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !6
  %338 = getelementptr i16, i16* %334, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !6
  %341 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !9, !noalias !6
  %342 = getelementptr i16, i16* %335, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !9, !noalias !6
  %344 = add i64 %332, 16
  %345 = add i64 %333, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %331, !llvm.loop !13

347:                                              ; preds = %331, %328
  %348 = icmp eq i64 %257, %268
  br i1 %348, label %807, label %349

349:                                              ; preds = %347, %259, %254
  %350 = phi i64 [ %256, %259 ], [ %256, %254 ], [ %269, %347 ]
  %351 = phi i16* [ %235, %259 ], [ %235, %254 ], [ %270, %347 ]
  %352 = phi i16* [ %255, %259 ], [ %255, %254 ], [ %271, %347 ]
  %353 = add i64 %350, -1
  %354 = and i64 %350, 7
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %367, label %356

356:                                              ; preds = %349, %356
  %357 = phi i64 [ %362, %356 ], [ %350, %349 ]
  %358 = phi i16* [ %364, %356 ], [ %351, %349 ]
  %359 = phi i16* [ %363, %356 ], [ %352, %349 ]
  %360 = phi i64 [ %365, %356 ], [ %354, %349 ]
  %361 = load i16, i16* %358, align 2
  store i16 %361, i16* %359, align 2
  %362 = add i64 %357, -1
  %363 = getelementptr inbounds i16, i16* %359, i64 1
  %364 = getelementptr inbounds i16, i16* %358, i64 1
  %365 = add i64 %360, -1
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %356, !llvm.loop !15

367:                                              ; preds = %356, %349
  %368 = phi i64 [ %350, %349 ], [ %362, %356 ]
  %369 = phi i16* [ %351, %349 ], [ %364, %356 ]
  %370 = phi i16* [ %352, %349 ], [ %363, %356 ]
  %371 = icmp ult i64 %353, 7
  br i1 %371, label %807, label %372

372:                                              ; preds = %367, %372
  %373 = phi i64 [ %398, %372 ], [ %368, %367 ]
  %374 = phi i16* [ %400, %372 ], [ %369, %367 ]
  %375 = phi i16* [ %399, %372 ], [ %370, %367 ]
  %376 = load i16, i16* %374, align 2
  store i16 %376, i16* %375, align 2
  %377 = getelementptr inbounds i16, i16* %375, i64 1
  %378 = getelementptr inbounds i16, i16* %374, i64 1
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = getelementptr inbounds i16, i16* %375, i64 2
  %381 = getelementptr inbounds i16, i16* %374, i64 2
  %382 = load i16, i16* %381, align 2
  store i16 %382, i16* %380, align 2
  %383 = getelementptr inbounds i16, i16* %375, i64 3
  %384 = getelementptr inbounds i16, i16* %374, i64 3
  %385 = load i16, i16* %384, align 2
  store i16 %385, i16* %383, align 2
  %386 = getelementptr inbounds i16, i16* %375, i64 4
  %387 = getelementptr inbounds i16, i16* %374, i64 4
  %388 = load i16, i16* %387, align 2
  store i16 %388, i16* %386, align 2
  %389 = getelementptr inbounds i16, i16* %375, i64 5
  %390 = getelementptr inbounds i16, i16* %374, i64 5
  %391 = load i16, i16* %390, align 2
  store i16 %391, i16* %389, align 2
  %392 = getelementptr inbounds i16, i16* %375, i64 6
  %393 = getelementptr inbounds i16, i16* %374, i64 6
  %394 = load i16, i16* %393, align 2
  store i16 %394, i16* %392, align 2
  %395 = getelementptr inbounds i16, i16* %375, i64 7
  %396 = getelementptr inbounds i16, i16* %374, i64 7
  %397 = load i16, i16* %396, align 2
  store i16 %397, i16* %395, align 2
  %398 = add i64 %373, -8
  %399 = getelementptr inbounds i16, i16* %375, i64 8
  %400 = getelementptr inbounds i16, i16* %374, i64 8
  %401 = icmp eq i64 %398, 0
  br i1 %401, label %807, label %372, !llvm.loop !16

402:                                              ; preds = %633, %630
  %403 = add i64 %407, 1
  %404 = load i64, i64* %107, align 8, !noalias !3
  %405 = icmp ugt i64 %403, %404
  br i1 %405, label %635, label %406

406:                                              ; preds = %210, %402
  %407 = phi i64 [ %403, %402 ], [ 1, %210 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 24, i1 false) #13, !alias.scope !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #13, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #13, !noalias !3
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.1, i64 0, i64 0)) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #13, !noalias !3
  call void @_ZN4base16NumberToString16Em(%"class.std::__1::basic_string"* nonnull sret %7, i64 %407) #13
  %408 = load i8, i8* %115, align 1, !noalias !17
  %409 = icmp slt i8 %408, 0
  %410 = load i16*, i16** %116, align 8, !noalias !17
  %411 = load i64, i64* %117, align 8, !noalias !17
  %412 = zext i8 %408 to i64
  %413 = select i1 %409, i16* %410, i16* %118
  %414 = select i1 %409, i64 %411, i64 %412
  %415 = load i8, i8* %120, align 1, !noalias !17
  %416 = icmp slt i8 %415, 0
  br i1 %416, label %417, label %422

417:                                              ; preds = %406
  %418 = load i64, i64* %121, align 8, !noalias !17
  %419 = and i64 %418, 9223372036854775807
  %420 = add nsw i64 %419, -1
  %421 = load i64, i64* %122, align 8, !noalias !17
  br label %424

422:                                              ; preds = %406
  %423 = zext i8 %415 to i64
  br label %424

424:                                              ; preds = %422, %417
  %425 = phi i64 [ %420, %417 ], [ 10, %422 ]
  %426 = phi i64 [ %421, %417 ], [ %423, %422 ]
  %427 = sub i64 %425, %426
  %428 = icmp ult i64 %427, %414
  br i1 %428, label %587, label %429

429:                                              ; preds = %424
  %430 = icmp eq i64 %414, 0
  br i1 %430, label %590, label %431

431:                                              ; preds = %429
  %432 = load i16*, i16** %123, align 8, !noalias !17
  %433 = select i1 %416, i16* %432, i16* %124
  %434 = getelementptr inbounds i16, i16* %433, i64 %426
  %435 = icmp ult i64 %414, 16
  br i1 %435, label %525, label %436

436:                                              ; preds = %431
  %437 = add i64 %414, %426
  %438 = getelementptr i16, i16* %433, i64 %437
  %439 = getelementptr i16, i16* %413, i64 %414
  %440 = icmp ult i16* %434, %439
  %441 = icmp ult i16* %413, %438
  %442 = and i1 %440, %441
  br i1 %442, label %525, label %443

443:                                              ; preds = %436
  %444 = and i64 %414, -16
  %445 = sub i64 %414, %444
  %446 = getelementptr i16, i16* %413, i64 %444
  %447 = getelementptr i16, i16* %434, i64 %444
  %448 = add i64 %444, -16
  %449 = lshr exact i64 %448, 4
  %450 = add nuw nsw i64 %449, 1
  %451 = and i64 %450, 3
  %452 = icmp ult i64 %448, 48
  br i1 %452, label %504, label %453

453:                                              ; preds = %443
  %454 = sub nsw i64 %450, %451
  br label %455

455:                                              ; preds = %455, %453
  %456 = phi i64 [ 0, %453 ], [ %501, %455 ]
  %457 = phi i64 [ %454, %453 ], [ %502, %455 ]
  %458 = getelementptr i16, i16* %413, i64 %456
  %459 = getelementptr i16, i16* %434, i64 %456
  %460 = bitcast i16* %458 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !20, !noalias !23
  %462 = getelementptr i16, i16* %458, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 2, !alias.scope !20, !noalias !23
  %465 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %465, align 2, !alias.scope !24, !noalias !26
  %466 = getelementptr i16, i16* %459, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %464, <8 x i16>* %467, align 2, !alias.scope !24, !noalias !26
  %468 = or i64 %456, 16
  %469 = getelementptr i16, i16* %413, i64 %468
  %470 = getelementptr i16, i16* %434, i64 %468
  %471 = bitcast i16* %469 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !20, !noalias !23
  %473 = getelementptr i16, i16* %469, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !20, !noalias !23
  %476 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %476, align 2, !alias.scope !24, !noalias !26
  %477 = getelementptr i16, i16* %470, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %478, align 2, !alias.scope !24, !noalias !26
  %479 = or i64 %456, 32
  %480 = getelementptr i16, i16* %413, i64 %479
  %481 = getelementptr i16, i16* %434, i64 %479
  %482 = bitcast i16* %480 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !20, !noalias !23
  %484 = getelementptr i16, i16* %480, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !20, !noalias !23
  %487 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %487, align 2, !alias.scope !24, !noalias !26
  %488 = getelementptr i16, i16* %481, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %489, align 2, !alias.scope !24, !noalias !26
  %490 = or i64 %456, 48
  %491 = getelementptr i16, i16* %413, i64 %490
  %492 = getelementptr i16, i16* %434, i64 %490
  %493 = bitcast i16* %491 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !20, !noalias !23
  %495 = getelementptr i16, i16* %491, i64 8
  %496 = bitcast i16* %495 to <8 x i16>*
  %497 = load <8 x i16>, <8 x i16>* %496, align 2, !alias.scope !20, !noalias !23
  %498 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %498, align 2, !alias.scope !24, !noalias !26
  %499 = getelementptr i16, i16* %492, i64 8
  %500 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %500, align 2, !alias.scope !24, !noalias !26
  %501 = add i64 %456, 64
  %502 = add i64 %457, -4
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %455, !llvm.loop !27

504:                                              ; preds = %455, %443
  %505 = phi i64 [ 0, %443 ], [ %501, %455 ]
  %506 = icmp eq i64 %451, 0
  br i1 %506, label %523, label %507

507:                                              ; preds = %504, %507
  %508 = phi i64 [ %520, %507 ], [ %505, %504 ]
  %509 = phi i64 [ %521, %507 ], [ %451, %504 ]
  %510 = getelementptr i16, i16* %413, i64 %508
  %511 = getelementptr i16, i16* %434, i64 %508
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !20, !noalias !23
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !20, !noalias !23
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !24, !noalias !26
  %518 = getelementptr i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !24, !noalias !26
  %520 = add i64 %508, 16
  %521 = add i64 %509, -1
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %507, !llvm.loop !28

523:                                              ; preds = %507, %504
  %524 = icmp eq i64 %414, %444
  br i1 %524, label %578, label %525

525:                                              ; preds = %523, %436, %431
  %526 = phi i64 [ %414, %436 ], [ %414, %431 ], [ %445, %523 ]
  %527 = phi i16* [ %413, %436 ], [ %413, %431 ], [ %446, %523 ]
  %528 = phi i16* [ %434, %436 ], [ %434, %431 ], [ %447, %523 ]
  %529 = add i64 %526, -1
  %530 = and i64 %526, 7
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %543, label %532

532:                                              ; preds = %525, %532
  %533 = phi i64 [ %538, %532 ], [ %526, %525 ]
  %534 = phi i16* [ %540, %532 ], [ %527, %525 ]
  %535 = phi i16* [ %539, %532 ], [ %528, %525 ]
  %536 = phi i64 [ %541, %532 ], [ %530, %525 ]
  %537 = load i16, i16* %534, align 2, !noalias !23
  store i16 %537, i16* %535, align 2, !noalias !23
  %538 = add i64 %533, -1
  %539 = getelementptr inbounds i16, i16* %535, i64 1
  %540 = getelementptr inbounds i16, i16* %534, i64 1
  %541 = add i64 %536, -1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %532, !llvm.loop !29

543:                                              ; preds = %532, %525
  %544 = phi i64 [ %526, %525 ], [ %538, %532 ]
  %545 = phi i16* [ %527, %525 ], [ %540, %532 ]
  %546 = phi i16* [ %528, %525 ], [ %539, %532 ]
  %547 = icmp ult i64 %529, 7
  br i1 %547, label %578, label %548

548:                                              ; preds = %543, %548
  %549 = phi i64 [ %574, %548 ], [ %544, %543 ]
  %550 = phi i16* [ %576, %548 ], [ %545, %543 ]
  %551 = phi i16* [ %575, %548 ], [ %546, %543 ]
  %552 = load i16, i16* %550, align 2, !noalias !23
  store i16 %552, i16* %551, align 2, !noalias !23
  %553 = getelementptr inbounds i16, i16* %551, i64 1
  %554 = getelementptr inbounds i16, i16* %550, i64 1
  %555 = load i16, i16* %554, align 2, !noalias !23
  store i16 %555, i16* %553, align 2, !noalias !23
  %556 = getelementptr inbounds i16, i16* %551, i64 2
  %557 = getelementptr inbounds i16, i16* %550, i64 2
  %558 = load i16, i16* %557, align 2, !noalias !23
  store i16 %558, i16* %556, align 2, !noalias !23
  %559 = getelementptr inbounds i16, i16* %551, i64 3
  %560 = getelementptr inbounds i16, i16* %550, i64 3
  %561 = load i16, i16* %560, align 2, !noalias !23
  store i16 %561, i16* %559, align 2, !noalias !23
  %562 = getelementptr inbounds i16, i16* %551, i64 4
  %563 = getelementptr inbounds i16, i16* %550, i64 4
  %564 = load i16, i16* %563, align 2, !noalias !23
  store i16 %564, i16* %562, align 2, !noalias !23
  %565 = getelementptr inbounds i16, i16* %551, i64 5
  %566 = getelementptr inbounds i16, i16* %550, i64 5
  %567 = load i16, i16* %566, align 2, !noalias !23
  store i16 %567, i16* %565, align 2, !noalias !23
  %568 = getelementptr inbounds i16, i16* %551, i64 6
  %569 = getelementptr inbounds i16, i16* %550, i64 6
  %570 = load i16, i16* %569, align 2, !noalias !23
  store i16 %570, i16* %568, align 2, !noalias !23
  %571 = getelementptr inbounds i16, i16* %551, i64 7
  %572 = getelementptr inbounds i16, i16* %550, i64 7
  %573 = load i16, i16* %572, align 2, !noalias !23
  store i16 %573, i16* %571, align 2, !noalias !23
  %574 = add i64 %549, -8
  %575 = getelementptr inbounds i16, i16* %551, i64 8
  %576 = getelementptr inbounds i16, i16* %550, i64 8
  %577 = icmp eq i64 %574, 0
  br i1 %577, label %578, label %548, !llvm.loop !30

578:                                              ; preds = %543, %548, %523
  %579 = add i64 %426, %414
  %580 = load i8, i8* %120, align 1, !noalias !17
  %581 = icmp slt i8 %580, 0
  br i1 %581, label %582, label %583

582:                                              ; preds = %578
  store i64 %579, i64* %122, align 8, !noalias !17
  br label %585

583:                                              ; preds = %578
  %584 = trunc i64 %579 to i8
  store i8 %584, i8* %120, align 1, !noalias !17
  br label %585

585:                                              ; preds = %583, %582
  %586 = getelementptr inbounds i16, i16* %433, i64 %579
  store i16 0, i16* %586, align 2, !noalias !23
  br label %590

587:                                              ; preds = %424
  %588 = add i64 %426, %414
  %589 = sub i64 %588, %425
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %6, i64 %425, i64 %589, i64 %426, i64 %426, i64 0, i64 %414, i16* %413) #13, !noalias !23
  br label %590

590:                                              ; preds = %587, %585, %429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* nonnull align 8 %112, i64 24, i1 false) #13, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 24, i1 false) #13, !noalias !17
  %591 = load i8, i8* %126, align 1, !noalias !31
  %592 = icmp slt i8 %591, 0
  br i1 %592, label %593, label %598

593:                                              ; preds = %590
  %594 = load i64, i64* %127, align 8, !noalias !31
  %595 = and i64 %594, 9223372036854775807
  %596 = add nsw i64 %595, -1
  %597 = load i64, i64* %128, align 8, !noalias !31
  br label %600

598:                                              ; preds = %590
  %599 = zext i8 %591 to i64
  br label %600

600:                                              ; preds = %598, %593
  %601 = phi i64 [ %596, %593 ], [ 10, %598 ]
  %602 = phi i64 [ %597, %593 ], [ %599, %598 ]
  %603 = icmp eq i64 %601, %602
  br i1 %603, label %616, label %604

604:                                              ; preds = %600
  %605 = load i16*, i16** %129, align 8, !noalias !31
  %606 = select i1 %592, i16* %605, i16* %130
  %607 = getelementptr inbounds i16, i16* %606, i64 %602
  store i16 41, i16* %607, align 2, !noalias !34
  %608 = add i64 %602, 1
  %609 = load i8, i8* %126, align 1, !noalias !31
  %610 = icmp slt i8 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %604
  store i64 %608, i64* %128, align 8, !noalias !31
  br label %614

612:                                              ; preds = %604
  %613 = trunc i64 %608 to i8
  store i8 %613, i8* %126, align 1, !noalias !31
  br label %614

614:                                              ; preds = %612, %611
  %615 = getelementptr inbounds i16, i16* %606, i64 %608
  store i16 0, i16* %615, align 2, !noalias !34
  br label %617

616:                                              ; preds = %600
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %5, i64 %601, i64 1, i64 %601, i64 %601, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.2, i64 0, i64 0)) #13, !noalias !34
  br label %617

617:                                              ; preds = %616, %614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %111, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 24, i1 false) #13, !noalias !31
  %618 = load i8, i8* %115, align 1, !noalias !3
  %619 = icmp slt i8 %618, 0
  br i1 %619, label %620, label %622

620:                                              ; preds = %617
  %621 = load i8*, i8** %131, align 8, !noalias !3
  call void @_ZdlPv(i8* %621) #15
  br label %622

622:                                              ; preds = %620, %617
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #13, !noalias !3
  %623 = load i8, i8* %120, align 1, !noalias !3
  %624 = icmp slt i8 %623, 0
  br i1 %624, label %625, label %627

625:                                              ; preds = %622
  %626 = load i8*, i8** %132, align 8, !noalias !3
  call void @_ZdlPv(i8* %626) #15
  br label %627

627:                                              ; preds = %625, %622
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #13, !noalias !3
  %628 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.626"* nonnull %110, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #13
  %629 = icmp eq %"class.std::__1::__tree_end_node"* %628, %108
  br i1 %629, label %807, label %630

630:                                              ; preds = %627
  %631 = load i8, i8* %134, align 1, !alias.scope !3
  %632 = icmp slt i8 %631, 0
  br i1 %632, label %633, label %402

633:                                              ; preds = %630
  %634 = load i8*, i8** %135, align 8, !alias.scope !3
  call void @_ZdlPv(i8* %634) #15
  br label %402

635:                                              ; preds = %402, %210
  %636 = load i8, i8* %137, align 1, !noalias !3
  %637 = icmp slt i8 %636, 0
  br i1 %637, label %639, label %638

638:                                              ; preds = %635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %138, i64 24, i1 false) #13
  br label %807

639:                                              ; preds = %635
  %640 = load i16*, i16** %139, align 8, !noalias !3
  %641 = load i64, i64* %140, align 8, !noalias !3
  %642 = icmp ult i64 %641, 11
  br i1 %642, label %643, label %645

643:                                              ; preds = %639
  %644 = trunc i64 %641 to i8
  store i8 %644, i8* %134, align 1, !alias.scope !3
  br label %659

645:                                              ; preds = %639
  %646 = icmp ugt i64 %641, 9223372036854775791
  br i1 %646, label %647, label %649

647:                                              ; preds = %645
  %648 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %648) #14
  unreachable

649:                                              ; preds = %645
  %650 = add nuw nsw i64 %641, 8
  %651 = and i64 %650, -8
  %652 = icmp slt i64 %651, 0
  br i1 %652, label %653, label %654

653:                                              ; preds = %649
  call void @abort() #14
  unreachable

654:                                              ; preds = %649
  %655 = shl i64 %651, 1
  %656 = call i8* @_Znwm(i64 %655) #15
  %657 = bitcast i8* %656 to i16*
  store i8* %656, i8** %135, align 8, !alias.scope !3
  %658 = or i64 %651, -9223372036854775808
  store i64 %658, i64* %103, align 8, !alias.scope !3
  store i64 %641, i64* %102, align 8, !alias.scope !3
  br label %659

659:                                              ; preds = %654, %643
  %660 = phi i16* [ %141, %643 ], [ %657, %654 ]
  %661 = add nuw nsw i64 %641, 1
  %662 = add i64 %641, 1
  %663 = icmp ult i64 %662, 16
  br i1 %663, label %754, label %664

664:                                              ; preds = %659
  %665 = getelementptr i16, i16* %660, i64 1
  %666 = getelementptr i16, i16* %665, i64 %641
  %667 = getelementptr i16, i16* %640, i64 1
  %668 = getelementptr i16, i16* %667, i64 %641
  %669 = icmp ult i16* %660, %668
  %670 = icmp ult i16* %640, %666
  %671 = and i1 %669, %670
  br i1 %671, label %754, label %672

672:                                              ; preds = %664
  %673 = and i64 %662, -16
  %674 = sub i64 %661, %673
  %675 = getelementptr i16, i16* %640, i64 %673
  %676 = getelementptr i16, i16* %660, i64 %673
  %677 = add i64 %673, -16
  %678 = lshr exact i64 %677, 4
  %679 = add nuw nsw i64 %678, 1
  %680 = and i64 %679, 3
  %681 = icmp ult i64 %677, 48
  br i1 %681, label %733, label %682

682:                                              ; preds = %672
  %683 = sub nsw i64 %679, %680
  br label %684

684:                                              ; preds = %684, %682
  %685 = phi i64 [ 0, %682 ], [ %730, %684 ]
  %686 = phi i64 [ %683, %682 ], [ %731, %684 ]
  %687 = getelementptr i16, i16* %640, i64 %685
  %688 = getelementptr i16, i16* %660, i64 %685
  %689 = bitcast i16* %687 to <8 x i16>*
  %690 = load <8 x i16>, <8 x i16>* %689, align 2, !alias.scope !35
  %691 = getelementptr i16, i16* %687, i64 8
  %692 = bitcast i16* %691 to <8 x i16>*
  %693 = load <8 x i16>, <8 x i16>* %692, align 2, !alias.scope !35
  %694 = bitcast i16* %688 to <8 x i16>*
  store <8 x i16> %690, <8 x i16>* %694, align 2, !alias.scope !38, !noalias !35
  %695 = getelementptr i16, i16* %688, i64 8
  %696 = bitcast i16* %695 to <8 x i16>*
  store <8 x i16> %693, <8 x i16>* %696, align 2, !alias.scope !38, !noalias !35
  %697 = or i64 %685, 16
  %698 = getelementptr i16, i16* %640, i64 %697
  %699 = getelementptr i16, i16* %660, i64 %697
  %700 = bitcast i16* %698 to <8 x i16>*
  %701 = load <8 x i16>, <8 x i16>* %700, align 2, !alias.scope !35
  %702 = getelementptr i16, i16* %698, i64 8
  %703 = bitcast i16* %702 to <8 x i16>*
  %704 = load <8 x i16>, <8 x i16>* %703, align 2, !alias.scope !35
  %705 = bitcast i16* %699 to <8 x i16>*
  store <8 x i16> %701, <8 x i16>* %705, align 2, !alias.scope !38, !noalias !35
  %706 = getelementptr i16, i16* %699, i64 8
  %707 = bitcast i16* %706 to <8 x i16>*
  store <8 x i16> %704, <8 x i16>* %707, align 2, !alias.scope !38, !noalias !35
  %708 = or i64 %685, 32
  %709 = getelementptr i16, i16* %640, i64 %708
  %710 = getelementptr i16, i16* %660, i64 %708
  %711 = bitcast i16* %709 to <8 x i16>*
  %712 = load <8 x i16>, <8 x i16>* %711, align 2, !alias.scope !35
  %713 = getelementptr i16, i16* %709, i64 8
  %714 = bitcast i16* %713 to <8 x i16>*
  %715 = load <8 x i16>, <8 x i16>* %714, align 2, !alias.scope !35
  %716 = bitcast i16* %710 to <8 x i16>*
  store <8 x i16> %712, <8 x i16>* %716, align 2, !alias.scope !38, !noalias !35
  %717 = getelementptr i16, i16* %710, i64 8
  %718 = bitcast i16* %717 to <8 x i16>*
  store <8 x i16> %715, <8 x i16>* %718, align 2, !alias.scope !38, !noalias !35
  %719 = or i64 %685, 48
  %720 = getelementptr i16, i16* %640, i64 %719
  %721 = getelementptr i16, i16* %660, i64 %719
  %722 = bitcast i16* %720 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !35
  %724 = getelementptr i16, i16* %720, i64 8
  %725 = bitcast i16* %724 to <8 x i16>*
  %726 = load <8 x i16>, <8 x i16>* %725, align 2, !alias.scope !35
  %727 = bitcast i16* %721 to <8 x i16>*
  store <8 x i16> %723, <8 x i16>* %727, align 2, !alias.scope !38, !noalias !35
  %728 = getelementptr i16, i16* %721, i64 8
  %729 = bitcast i16* %728 to <8 x i16>*
  store <8 x i16> %726, <8 x i16>* %729, align 2, !alias.scope !38, !noalias !35
  %730 = add i64 %685, 64
  %731 = add i64 %686, -4
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %733, label %684, !llvm.loop !40

733:                                              ; preds = %684, %672
  %734 = phi i64 [ 0, %672 ], [ %730, %684 ]
  %735 = icmp eq i64 %680, 0
  br i1 %735, label %752, label %736

736:                                              ; preds = %733, %736
  %737 = phi i64 [ %749, %736 ], [ %734, %733 ]
  %738 = phi i64 [ %750, %736 ], [ %680, %733 ]
  %739 = getelementptr i16, i16* %640, i64 %737
  %740 = getelementptr i16, i16* %660, i64 %737
  %741 = bitcast i16* %739 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !35
  %743 = getelementptr i16, i16* %739, i64 8
  %744 = bitcast i16* %743 to <8 x i16>*
  %745 = load <8 x i16>, <8 x i16>* %744, align 2, !alias.scope !35
  %746 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %742, <8 x i16>* %746, align 2, !alias.scope !38, !noalias !35
  %747 = getelementptr i16, i16* %740, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  store <8 x i16> %745, <8 x i16>* %748, align 2, !alias.scope !38, !noalias !35
  %749 = add i64 %737, 16
  %750 = add i64 %738, -1
  %751 = icmp eq i64 %750, 0
  br i1 %751, label %752, label %736, !llvm.loop !41

752:                                              ; preds = %736, %733
  %753 = icmp eq i64 %662, %673
  br i1 %753, label %807, label %754

754:                                              ; preds = %752, %664, %659
  %755 = phi i64 [ %661, %664 ], [ %661, %659 ], [ %674, %752 ]
  %756 = phi i16* [ %640, %664 ], [ %640, %659 ], [ %675, %752 ]
  %757 = phi i16* [ %660, %664 ], [ %660, %659 ], [ %676, %752 ]
  %758 = add i64 %755, -1
  %759 = and i64 %755, 7
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %772, label %761

761:                                              ; preds = %754, %761
  %762 = phi i64 [ %767, %761 ], [ %755, %754 ]
  %763 = phi i16* [ %769, %761 ], [ %756, %754 ]
  %764 = phi i16* [ %768, %761 ], [ %757, %754 ]
  %765 = phi i64 [ %770, %761 ], [ %759, %754 ]
  %766 = load i16, i16* %763, align 2
  store i16 %766, i16* %764, align 2
  %767 = add i64 %762, -1
  %768 = getelementptr inbounds i16, i16* %764, i64 1
  %769 = getelementptr inbounds i16, i16* %763, i64 1
  %770 = add i64 %765, -1
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %772, label %761, !llvm.loop !42

772:                                              ; preds = %761, %754
  %773 = phi i64 [ %755, %754 ], [ %767, %761 ]
  %774 = phi i16* [ %756, %754 ], [ %769, %761 ]
  %775 = phi i16* [ %757, %754 ], [ %768, %761 ]
  %776 = icmp ult i64 %758, 7
  br i1 %776, label %807, label %777

777:                                              ; preds = %772, %777
  %778 = phi i64 [ %803, %777 ], [ %773, %772 ]
  %779 = phi i16* [ %805, %777 ], [ %774, %772 ]
  %780 = phi i16* [ %804, %777 ], [ %775, %772 ]
  %781 = load i16, i16* %779, align 2
  store i16 %781, i16* %780, align 2
  %782 = getelementptr inbounds i16, i16* %780, i64 1
  %783 = getelementptr inbounds i16, i16* %779, i64 1
  %784 = load i16, i16* %783, align 2
  store i16 %784, i16* %782, align 2
  %785 = getelementptr inbounds i16, i16* %780, i64 2
  %786 = getelementptr inbounds i16, i16* %779, i64 2
  %787 = load i16, i16* %786, align 2
  store i16 %787, i16* %785, align 2
  %788 = getelementptr inbounds i16, i16* %780, i64 3
  %789 = getelementptr inbounds i16, i16* %779, i64 3
  %790 = load i16, i16* %789, align 2
  store i16 %790, i16* %788, align 2
  %791 = getelementptr inbounds i16, i16* %780, i64 4
  %792 = getelementptr inbounds i16, i16* %779, i64 4
  %793 = load i16, i16* %792, align 2
  store i16 %793, i16* %791, align 2
  %794 = getelementptr inbounds i16, i16* %780, i64 5
  %795 = getelementptr inbounds i16, i16* %779, i64 5
  %796 = load i16, i16* %795, align 2
  store i16 %796, i16* %794, align 2
  %797 = getelementptr inbounds i16, i16* %780, i64 6
  %798 = getelementptr inbounds i16, i16* %779, i64 6
  %799 = load i16, i16* %798, align 2
  store i16 %799, i16* %797, align 2
  %800 = getelementptr inbounds i16, i16* %780, i64 7
  %801 = getelementptr inbounds i16, i16* %779, i64 7
  %802 = load i16, i16* %801, align 2
  store i16 %802, i16* %800, align 2
  %803 = add i64 %778, -8
  %804 = getelementptr inbounds i16, i16* %780, i64 8
  %805 = getelementptr inbounds i16, i16* %779, i64 8
  %806 = icmp eq i64 %803, 0
  br i1 %806, label %807, label %777, !llvm.loop !43

807:                                              ; preds = %627, %772, %777, %367, %372, %752, %347, %233, %638
  %808 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8, !noalias !3
  call void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.626"* nonnull %110, %"class.std::__1::__tree_node"* %808) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #13, !noalias !3
  %809 = load i64, i64* %143, align 8
  %810 = load i64, i64* %144, align 8
  %811 = sub i64 %809, %810
  %812 = ashr exact i64 %811, 3
  store i8 0, i8* %145, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #13
  %813 = call %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel9AddFolderEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESG_NS4_4lessISG_EENS8_INS4_4pairIKSG_SG_EEEEEEN4absl8optionalIN4base4GUIDEEE(%"class.bookmarks::BookmarkModel"* %27, %"class.bookmarks::BookmarkNode"* %30, i64 %812, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::map.71"* null, %"class.absl::optional.571"* nonnull %13) #13
  %814 = load i8, i8* %145, align 8, !range !2
  %815 = icmp eq i8 %814, 0
  br i1 %815, label %822, label %816

816:                                              ; preds = %807
  %817 = load i8, i8* %150, align 1
  %818 = icmp slt i8 %817, 0
  br i1 %818, label %819, label %821

819:                                              ; preds = %816
  %820 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %820) #15
  br label %821

821:                                              ; preds = %819, %816
  store i8 0, i8* %145, align 8
  br label %822

822:                                              ; preds = %807, %821
  %823 = load i8, i8* %134, align 1
  %824 = icmp slt i8 %823, 0
  br i1 %824, label %825, label %827

825:                                              ; preds = %822
  %826 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %826) #15
  br label %827

827:                                              ; preds = %822, %825
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #13
  br label %828

828:                                              ; preds = %827, %198, %193, %194
  %829 = phi %"class.bookmarks::BookmarkNode"* [ %30, %194 ], [ %30, %193 ], [ %183, %198 ], [ %813, %827 ]
  %830 = phi %"class.bookmarks::BookmarkNode"* [ %183, %194 ], [ %183, %193 ], [ %183, %198 ], [ %813, %827 ]
  %831 = ptrtoint %"class.bookmarks::BookmarkNode"* %829 to i64
  %832 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 3, i32 0, i32 0
  %833 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %832, align 8
  %834 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 3, i32 0, i32 1
  %835 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %834, align 8
  %836 = icmp eq %"class.std::__1::basic_string"* %833, %835
  br i1 %836, label %839, label %837

837:                                              ; preds = %828
  %838 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 0
  br label %910

839:                                              ; preds = %1011, %828
  %840 = phi i64 [ %831, %828 ], [ %1012, %1011 ]
  %841 = load %"class.std::__1::__tree_node.667"*, %"class.std::__1::__tree_node.667"** %159, align 8
  %842 = icmp eq %"class.std::__1::__tree_node.667"* %841, null
  br i1 %842, label %871, label %843

843:                                              ; preds = %839
  %844 = inttoptr i64 %840 to %"class.bookmarks::BookmarkNode"*
  br label %845

845:                                              ; preds = %867, %843
  %846 = phi %"class.std::__1::__tree_node.667"* [ %870, %867 ], [ %841, %843 ]
  %847 = phi %"class.std::__1::__tree_node_base"** [ %869, %867 ], [ %93, %843 ]
  %848 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 1
  %849 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %848, align 8
  %850 = icmp ugt %"class.bookmarks::BookmarkNode"* %849, %844
  br i1 %850, label %851, label %857

851:                                              ; preds = %845
  %852 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 0, i32 0, i32 0
  %853 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %852, align 8
  %854 = icmp eq %"class.std::__1::__tree_node_base"* %853, null
  br i1 %854, label %855, label %867

855:                                              ; preds = %851
  %856 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 0, i32 0
  br label %871

857:                                              ; preds = %845
  %858 = icmp ult %"class.bookmarks::BookmarkNode"* %849, %844
  br i1 %858, label %859, label %865

859:                                              ; preds = %857
  %860 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 0, i32 1
  %861 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %860, align 8
  %862 = icmp eq %"class.std::__1::__tree_node_base"* %861, null
  br i1 %862, label %863, label %867

863:                                              ; preds = %859
  %864 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 0, i32 0
  br label %871

865:                                              ; preds = %857
  %866 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %846, i64 0, i32 0, i32 0
  br label %871

867:                                              ; preds = %859, %851
  %868 = phi %"class.std::__1::__tree_node_base"* [ %853, %851 ], [ %861, %859 ]
  %869 = phi %"class.std::__1::__tree_node_base"** [ %852, %851 ], [ %860, %859 ]
  %870 = bitcast %"class.std::__1::__tree_node_base"* %868 to %"class.std::__1::__tree_node.667"*
  br label %845

871:                                              ; preds = %839, %865, %863, %855
  %872 = phi %"class.std::__1::__tree_end_node"* [ %856, %855 ], [ %864, %863 ], [ %866, %865 ], [ %95, %839 ]
  %873 = phi %"class.std::__1::__tree_node_base"** [ %852, %855 ], [ %860, %863 ], [ %847, %865 ], [ %160, %839 ]
  %874 = bitcast %"class.std::__1::__tree_node_base"** %873 to %"class.std::__1::__tree_node.667"**
  %875 = load %"class.std::__1::__tree_node.667"*, %"class.std::__1::__tree_node.667"** %874, align 8
  %876 = icmp eq %"class.std::__1::__tree_node.667"* %875, null
  br i1 %876, label %877, label %897

877:                                              ; preds = %871
  %878 = call i8* @_Znwm(i64 40) #15, !noalias !44
  %879 = getelementptr inbounds i8, i8* %878, i64 32
  %880 = bitcast i8* %879 to i64*
  store i64 %840, i64* %880, align 8, !noalias !44
  %881 = bitcast i8* %878 to %"class.std::__1::__tree_node_base"*
  %882 = getelementptr inbounds i8, i8* %878, i64 16
  %883 = bitcast i8* %882 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %878, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %872, %"class.std::__1::__tree_end_node"** %883, align 8
  %884 = bitcast %"class.std::__1::__tree_node_base"** %873 to i8**
  store i8* %878, i8** %884, align 8
  %885 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %886 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %885, i64 0, i32 0
  %887 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %886, align 8
  %888 = icmp eq %"class.std::__1::__tree_node_base"* %887, null
  br i1 %888, label %892, label %889

889:                                              ; preds = %877
  %890 = ptrtoint %"class.std::__1::__tree_node_base"* %887 to i64
  store i64 %890, i64* %161, align 8
  %891 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %873, align 8
  br label %892

892:                                              ; preds = %889, %877
  %893 = phi %"class.std::__1::__tree_node_base"* [ %881, %877 ], [ %891, %889 ]
  %894 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %894, %"class.std::__1::__tree_node_base"* %893) #13
  %895 = load i64, i64* %94, align 8
  %896 = add i64 %895, 1
  store i64 %896, i64* %94, align 8
  br label %897

897:                                              ; preds = %871, %892
  %898 = load i8, i8* %185, align 1, !range !2
  %899 = icmp eq i8 %898, 0
  %900 = inttoptr i64 %840 to %"class.bookmarks::BookmarkNode"*
  %901 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %900, i64 0, i32 0, i32 3
  %902 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %900, i64 0, i32 0, i32 3, i32 0, i32 1
  %903 = bitcast %"class.std::__1::unique_ptr.37"** %902 to i64*
  %904 = load i64, i64* %903, align 8
  %905 = bitcast %"class.std::__1::vector.45"* %901 to i64*
  %906 = load i64, i64* %905, align 8
  %907 = sub i64 %904, %906
  %908 = ashr exact i64 %907, 3
  %909 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 4
  br i1 %899, label %1026, label %1016

910:                                              ; preds = %837, %1011
  %911 = phi i64 [ %831, %837 ], [ %1012, %1011 ]
  %912 = phi %"class.std::__1::basic_string"* [ %833, %837 ], [ %1013, %1011 ]
  %913 = load i8, i8* %838, align 8, !range !2
  %914 = icmp ne i8 %913, 0
  %915 = inttoptr i64 %911 to %"class.bookmarks::BookmarkNode"*
  %916 = icmp eq %"class.bookmarks::BookmarkNode"* %30, %915
  %917 = and i1 %916, %914
  br i1 %917, label %918, label %921

918:                                              ; preds = %910
  %919 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %832, align 8
  %920 = icmp eq %"class.std::__1::basic_string"* %912, %919
  br i1 %920, label %1011, label %921

921:                                              ; preds = %910, %918
  %922 = inttoptr i64 %911 to %"class.ui::TreeNode"*
  %923 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %922, i64 0, i32 3, i32 0, i32 0
  %924 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %923, align 8
  %925 = getelementptr inbounds %"class.ui::TreeNode", %"class.ui::TreeNode"* %922, i64 0, i32 3, i32 0, i32 1
  %926 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %925, align 8
  %927 = icmp eq %"class.std::__1::unique_ptr.37"* %924, %926
  br i1 %927, label %985, label %928

928:                                              ; preds = %921
  %929 = bitcast %"class.std::__1::basic_string"* %912 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %930 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %929, i64 0, i32 1, i32 1
  %931 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %912, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %932 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %912, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %933 = bitcast %"class.std::__1::basic_string"* %912 to i16*
  br label %934

934:                                              ; preds = %982, %928
  %935 = phi %"class.std::__1::unique_ptr.37"* [ %924, %928 ], [ %983, %982 ]
  %936 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %935, i64 0, i32 0, i32 0, i32 0
  %937 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %936, align 8
  %938 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %937, i64 0, i32 5
  %939 = load i32, i32* %938, align 8
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %982, label %941

941:                                              ; preds = %934
  %942 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %937, i64 0, i32 0
  %943 = bitcast %"class.bookmarks::BookmarkNode"* %937 to %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)***
  %944 = load %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)**, %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)*** %943, align 8
  %945 = load %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)*, %"class.std::__1::basic_string"* (%"class.ui::TreeNode"*)** %944, align 8
  %946 = call dereferenceable(24) %"class.std::__1::basic_string"* %945(%"class.ui::TreeNode"* %942) #13
  %947 = bitcast %"class.std::__1::basic_string"* %946 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %948 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %947, i64 0, i32 1, i32 1
  %949 = load i8, i8* %948, align 1
  %950 = icmp slt i8 %949, 0
  %951 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %946, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %952 = load i64, i64* %951, align 8
  %953 = zext i8 %949 to i64
  %954 = select i1 %950, i64 %952, i64 %953
  %955 = load i8, i8* %930, align 1
  %956 = icmp slt i8 %955, 0
  %957 = load i64, i64* %931, align 8
  %958 = zext i8 %955 to i64
  %959 = select i1 %956, i64 %957, i64 %958
  %960 = icmp eq i64 %954, %959
  br i1 %960, label %961, label %982

961:                                              ; preds = %941
  %962 = icmp eq i64 %954, 0
  br i1 %962, label %985, label %963

963:                                              ; preds = %961
  %964 = load i16*, i16** %932, align 8
  %965 = select i1 %956, i16* %964, i16* %933
  %966 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %946, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %967 = load i16*, i16** %966, align 8
  %968 = bitcast %"class.std::__1::basic_string"* %946 to i16*
  %969 = select i1 %950, i16* %967, i16* %968
  br label %970

970:                                              ; preds = %977, %963
  %971 = phi i64 [ %978, %977 ], [ %954, %963 ]
  %972 = phi i16* [ %980, %977 ], [ %965, %963 ]
  %973 = phi i16* [ %979, %977 ], [ %969, %963 ]
  %974 = load i16, i16* %973, align 2
  %975 = load i16, i16* %972, align 2
  %976 = icmp eq i16 %975, %974
  br i1 %976, label %977, label %982

977:                                              ; preds = %970
  %978 = add i64 %971, -1
  %979 = getelementptr inbounds i16, i16* %973, i64 1
  %980 = getelementptr inbounds i16, i16* %972, i64 1
  %981 = icmp eq i64 %978, 0
  br i1 %981, label %985, label %970

982:                                              ; preds = %970, %941, %934
  %983 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %935, i64 1
  %984 = icmp eq %"class.std::__1::unique_ptr.37"* %983, %926
  br i1 %984, label %985, label %934

985:                                              ; preds = %961, %982, %977, %921
  %986 = phi %"class.std::__1::unique_ptr.37"* [ %924, %921 ], [ %935, %977 ], [ %926, %982 ], [ %935, %961 ]
  %987 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %925, align 8
  %988 = icmp eq %"class.std::__1::unique_ptr.37"* %986, %987
  br i1 %988, label %989, label %1008

989:                                              ; preds = %985
  %990 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %915, i64 0, i32 0, i32 3
  %991 = getelementptr inbounds %"class.bookmarks::BookmarkNode", %"class.bookmarks::BookmarkNode"* %915, i64 0, i32 0, i32 3, i32 0, i32 1
  %992 = bitcast %"class.std::__1::unique_ptr.37"** %991 to i64*
  %993 = load i64, i64* %992, align 8
  %994 = bitcast %"class.std::__1::vector.45"* %990 to i64*
  %995 = load i64, i64* %994, align 8
  %996 = sub i64 %993, %995
  %997 = ashr exact i64 %996, 3
  store i8 0, i8* %152, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #13
  %998 = call %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel9AddFolderEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESG_NS4_4lessISG_EENS8_INS4_4pairIKSG_SG_EEEEEEN4absl8optionalIN4base4GUIDEEE(%"class.bookmarks::BookmarkModel"* %27, %"class.bookmarks::BookmarkNode"* %915, i64 %997, %"class.std::__1::basic_string"* dereferenceable(24) %912, %"class.std::__1::map.71"* null, %"class.absl::optional.571"* nonnull %14) #13
  %999 = ptrtoint %"class.bookmarks::BookmarkNode"* %998 to i64
  %1000 = load i8, i8* %152, align 8, !range !2
  %1001 = icmp eq i8 %1000, 0
  br i1 %1001, label %1011, label %1002

1002:                                             ; preds = %989
  %1003 = load i8, i8* %157, align 1
  %1004 = icmp slt i8 %1003, 0
  br i1 %1004, label %1005, label %1007

1005:                                             ; preds = %1002
  %1006 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %1006) #15
  br label %1007

1007:                                             ; preds = %1005, %1002
  store i8 0, i8* %152, align 8
  br label %1011

1008:                                             ; preds = %985
  %1009 = bitcast %"class.std::__1::unique_ptr.37"* %986 to i64*
  %1010 = load i64, i64* %1009, align 8
  br label %1011

1011:                                             ; preds = %1008, %989, %1007, %918
  %1012 = phi i64 [ %911, %918 ], [ %1010, %1008 ], [ %999, %989 ], [ %999, %1007 ]
  %1013 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %912, i64 1
  %1014 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %834, align 8
  %1015 = icmp eq %"class.std::__1::basic_string"* %1013, %1014
  br i1 %1015, label %839, label %910

1016:                                             ; preds = %897
  store i8 0, i8* %162, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #13
  %1017 = call %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel9AddFolderEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESG_NS4_4lessISG_EENS8_INS4_4pairIKSG_SG_EEEEEEN4absl8optionalIN4base4GUIDEEE(%"class.bookmarks::BookmarkModel"* %27, %"class.bookmarks::BookmarkNode"* %900, i64 %908, %"class.std::__1::basic_string"* dereferenceable(24) %909, %"class.std::__1::map.71"* null, %"class.absl::optional.571"* nonnull %15) #13
  %1018 = load i8, i8* %162, align 8, !range !2
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1039, label %1020

1020:                                             ; preds = %1016
  %1021 = load i8, i8* %167, align 1
  %1022 = icmp slt i8 %1021, 0
  br i1 %1022, label %1023, label %1025

1023:                                             ; preds = %1020
  %1024 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %1024) #15
  br label %1025

1025:                                             ; preds = %1023, %1020
  store i8 0, i8* %162, align 8
  br label %1039

1026:                                             ; preds = %897
  %1027 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 2
  store i8 1, i8* %169, align 8
  %1028 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 0, i32 5, i32 0, i32 0
  %1029 = load i64, i64* %1028, align 8
  store i64 %1029, i64* %170, align 8
  store i8 0, i8* %171, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #13
  %1030 = call %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel6AddURLEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERK4GURLPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESJ_NS4_4lessISJ_EENS8_INS4_4pairIKSJ_SJ_EEEEEEN4absl8optionalIN4base4TimeEEENSU_INSV_4GUIDEEE(%"class.bookmarks::BookmarkModel"* %27, %"class.bookmarks::BookmarkNode"* %900, i64 %908, %"class.std::__1::basic_string"* dereferenceable(24) %909, %class.GURL* dereferenceable(120) %1027, %"class.std::__1::map.71"* null, %"class.absl::optional.580"* nonnull byval(%"class.absl::optional.580") align 8 %16, %"class.absl::optional.571"* nonnull %17) #13
  %1031 = load i8, i8* %171, align 8, !range !2
  %1032 = icmp eq i8 %1031, 0
  br i1 %1032, label %1039, label %1033

1033:                                             ; preds = %1026
  %1034 = load i8, i8* %176, align 1
  %1035 = icmp slt i8 %1034, 0
  br i1 %1035, label %1036, label %1038

1036:                                             ; preds = %1033
  %1037 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %1037) #15
  br label %1038

1038:                                             ; preds = %1036, %1033
  store i8 0, i8* %171, align 8
  br label %1039

1039:                                             ; preds = %188, %1016, %1025, %1026, %1038
  %1040 = phi %"class.bookmarks::BookmarkNode"* [ %183, %188 ], [ %830, %1038 ], [ %830, %1026 ], [ %830, %1025 ], [ %830, %1016 ]
  %1041 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %184, i64 1
  %1042 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %43, align 8
  %1043 = icmp eq %struct.ImportedBookmarkEntry* %1041, %1042
  br i1 %1043, label %179, label %182

1044:                                             ; preds = %1079, %89, %179
  call void @_ZN9bookmarks13BookmarkModel19EndExtensiveChangesEv(%"class.bookmarks::BookmarkModel"* %27) #13
  %1045 = xor i1 %36, true
  %1046 = or i1 %90, %1045
  br i1 %1046, label %1124, label %1082

1047:                                             ; preds = %179, %1079
  %1048 = phi %"class.std::__1::__tree_end_node"* [ %1080, %1079 ], [ %180, %179 ]
  %1049 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1048, i64 4
  %1050 = bitcast %"class.std::__1::__tree_end_node"* %1049 to %"class.bookmarks::BookmarkNode"**
  %1051 = load %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkNode"** %1050, align 8
  call void @_ZN9bookmarks13BookmarkModel23ResetDateFolderModifiedEPKNS_12BookmarkNodeE(%"class.bookmarks::BookmarkModel"* %27, %"class.bookmarks::BookmarkNode"* %1051) #13
  %1052 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1048, i64 1, i32 0
  %1053 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1052, align 8
  %1054 = icmp eq %"class.std::__1::__tree_node_base"* %1053, null
  br i1 %1054, label %1055, label %1063

1055:                                             ; preds = %1047
  %1056 = bitcast %"class.std::__1::__tree_end_node"* %1048 to %"class.std::__1::__tree_node_base"*
  %1057 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1048, i64 2
  %1058 = bitcast %"class.std::__1::__tree_end_node"* %1057 to %"class.std::__1::__tree_end_node"**
  %1059 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1058, align 8
  %1060 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1059, i64 0, i32 0
  %1061 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1060, align 8
  %1062 = icmp eq %"class.std::__1::__tree_node_base"* %1061, %1056
  br i1 %1062, label %1079, label %1070

1063:                                             ; preds = %1047, %1063
  %1064 = phi %"class.std::__1::__tree_node_base"* [ %1066, %1063 ], [ %1053, %1047 ]
  %1065 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1064, i64 0, i32 0, i32 0
  %1066 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1065, align 8
  %1067 = icmp eq %"class.std::__1::__tree_node_base"* %1066, null
  br i1 %1067, label %1068, label %1063

1068:                                             ; preds = %1063
  %1069 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1064, i64 0, i32 0
  br label %1079

1070:                                             ; preds = %1055, %1070
  %1071 = phi %"class.std::__1::__tree_end_node"** [ %1074, %1070 ], [ %1058, %1055 ]
  %1072 = bitcast %"class.std::__1::__tree_end_node"** %1071 to %"class.std::__1::__tree_node_base"**
  %1073 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1072, align 8
  %1074 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1073, i64 0, i32 2
  %1075 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1074, align 8
  %1076 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1075, i64 0, i32 0
  %1077 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1076, align 8
  %1078 = icmp eq %"class.std::__1::__tree_node_base"* %1077, %1073
  br i1 %1078, label %1079, label %1070

1079:                                             ; preds = %1070, %1055, %1068
  %1080 = phi %"class.std::__1::__tree_end_node"* [ %1069, %1068 ], [ %1059, %1055 ], [ %1075, %1070 ]
  %1081 = icmp eq %"class.std::__1::__tree_end_node"* %1080, %95
  br i1 %1081, label %1044, label %1047

1082:                                             ; preds = %1044
  %1083 = load %class.Profile*, %class.Profile** %24, align 8
  %1084 = bitcast %class.Profile* %1083 to %class.PrefService* (%class.Profile*)***
  %1085 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %1084, align 8
  %1086 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %1085, i64 46
  %1087 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %1086, align 8
  %1088 = call %class.PrefService* %1087(%class.Profile* %1083) #13
  %1089 = bitcast %"class.std::__1::basic_string.52"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1089) #13
  %1090 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs16kShowBookmarkBarE, i64 0, i64 0)) #13
  %1091 = icmp ugt i64 %1090, -17
  br i1 %1091, label %1092, label %1094

1092:                                             ; preds = %1082
  %1093 = bitcast %"class.std::__1::basic_string.52"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1093) #14
  unreachable

1094:                                             ; preds = %1082
  %1095 = icmp ult i64 %1090, 23
  br i1 %1095, label %1105, label %1096

1096:                                             ; preds = %1094
  %1097 = add nuw i64 %1090, 16
  %1098 = and i64 %1097, -16
  %1099 = call i8* @_Znwm(i64 %1098) #15
  %1100 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1099, i8** %1100, align 8
  %1101 = or i64 %1098, -9223372036854775808
  %1102 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1101, i64* %1102, align 8
  %1103 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1090, i64* %1103, align 8
  %1104 = bitcast %"class.std::__1::basic_string.52"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1110

1105:                                             ; preds = %1094
  %1106 = trunc i64 %1090 to i8
  %1107 = bitcast %"class.std::__1::basic_string.52"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1107, i64 0, i32 1, i32 0
  store i8 %1106, i8* %1108, align 1
  %1109 = icmp eq i64 %1090, 0
  br i1 %1109, label %1113, label %1110

1110:                                             ; preds = %1105, %1096
  %1111 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1107, %1105 ], [ %1104, %1096 ]
  %1112 = phi i8* [ %1089, %1105 ], [ %1099, %1096 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1112, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN9bookmarks5prefs16kShowBookmarkBarE, i64 0, i64 0), i64 %1090, i1 false) #13
  br label %1113

1113:                                             ; preds = %1110, %1105
  %1114 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1107, %1105 ], [ %1111, %1110 ]
  %1115 = phi i8* [ %1089, %1105 ], [ %1112, %1110 ]
  %1116 = getelementptr inbounds i8, i8* %1115, i64 %1090
  store i8 0, i8* %1116, align 1
  call void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService* %1088, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %8, i1 zeroext true) #13
  %1117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1114, i64 0, i32 1, i32 0
  %1118 = load i8, i8* %1117, align 1
  %1119 = icmp slt i8 %1118, 0
  br i1 %1119, label %1120, label %1123

1120:                                             ; preds = %1113
  %1121 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1122 = load i8*, i8** %1121, align 8
  call void @_ZdlPv(i8* %1122) #15
  br label %1123

1123:                                             ; preds = %1113, %1120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1089) #13
  br label %1124

1124:                                             ; preds = %1044, %1123
  %1125 = getelementptr inbounds %"class.std::__1::set.561", %"class.std::__1::set.561"* %11, i64 0, i32 0
  %1126 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node.667"**
  %1127 = load %"class.std::__1::__tree_node.667"*, %"class.std::__1::__tree_node.667"** %1126, align 8
  call void @_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.562"* nonnull %1125, %"class.std::__1::__tree_node.667"* %1127) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #13
  %1128 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %42, align 8
  %1129 = icmp eq %struct.ImportedBookmarkEntry* %1128, null
  br i1 %1129, label %1142, label %1130

1130:                                             ; preds = %1124
  %1131 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %43, align 8
  %1132 = icmp eq %struct.ImportedBookmarkEntry* %1131, %1128
  br i1 %1132, label %1139, label %1133

1133:                                             ; preds = %1130, %1133
  %1134 = phi %struct.ImportedBookmarkEntry* [ %1135, %1133 ], [ %1131, %1130 ]
  %1135 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1134, i64 -1
  call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %1135) #13
  %1136 = icmp eq %struct.ImportedBookmarkEntry* %1135, %1128
  br i1 %1136, label %1137, label %1133

1137:                                             ; preds = %1133
  %1138 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %42, align 8
  br label %1139

1139:                                             ; preds = %1137, %1130
  %1140 = phi %struct.ImportedBookmarkEntry* [ %1138, %1137 ], [ %1128, %1130 ]
  store %struct.ImportedBookmarkEntry* %1128, %struct.ImportedBookmarkEntry** %43, align 8
  %1141 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1140, i64 0, i32 0
  call void @_ZdlPv(i8* %1141) #15
  br label %1142

1142:                                             ; preds = %1124, %1139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  %1143 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %38, align 8
  %1144 = icmp eq %struct.ImportedBookmarkEntry* %1143, null
  br i1 %1144, label %1157, label %1145

1145:                                             ; preds = %1142
  %1146 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %1147 = icmp eq %struct.ImportedBookmarkEntry* %1146, %1143
  br i1 %1147, label %1154, label %1148

1148:                                             ; preds = %1145, %1148
  %1149 = phi %struct.ImportedBookmarkEntry* [ %1150, %1148 ], [ %1146, %1145 ]
  %1150 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1149, i64 -1
  call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %1150) #13
  %1151 = icmp eq %struct.ImportedBookmarkEntry* %1150, %1143
  br i1 %1151, label %1152, label %1148

1152:                                             ; preds = %1148
  %1153 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %38, align 8
  br label %1154

1154:                                             ; preds = %1152, %1145
  %1155 = phi %struct.ImportedBookmarkEntry* [ %1153, %1152 ], [ %1143, %1145 ]
  store %struct.ImportedBookmarkEntry* %1143, %struct.ImportedBookmarkEntry** %39, align 8
  %1156 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1155, i64 0, i32 0
  call void @_ZdlPv(i8* %1156) #15
  br label %1157

1157:                                             ; preds = %1142, %1154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br label %1158

1158:                                             ; preds = %3, %1157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.ImportedBookmarkEntry* @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_(%"class.std::__1::vector.553"*, %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %struct.ImportedBookmarkEntry* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.ImportedBookmarkEntry* %2 to i64
  %8 = ptrtoint %struct.ImportedBookmarkEntry* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 184
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %197

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %struct.ImportedBookmarkEntry** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 1
  %17 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %16, align 8
  %18 = ptrtoint %struct.ImportedBookmarkEntry* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 184
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %struct.ImportedBookmarkEntry** %16 to i64*
  br i1 %21, label %118, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 184
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %2, i64 %25
  %29 = icmp eq %struct.ImportedBookmarkEntry* %28, %3
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi %struct.ImportedBookmarkEntry* [ %34, %30 ], [ %17, %27 ]
  %32 = phi %struct.ImportedBookmarkEntry* [ %33, %30 ], [ %28, %27 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %31, %struct.ImportedBookmarkEntry* dereferenceable(184) %32) #13
  %33 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %32, i64 1
  %34 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 1
  %35 = icmp eq %struct.ImportedBookmarkEntry* %33, %3
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %struct.ImportedBookmarkEntry* %34 to i64
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi i64 [ %18, %27 ], [ %37, %36 ]
  store i64 %39, i64* %22, align 8
  %40 = icmp sgt i64 %24, 0
  br i1 %40, label %41, label %197

41:                                               ; preds = %38
  %42 = inttoptr i64 %39 to %struct.ImportedBookmarkEntry*
  br label %43

43:                                               ; preds = %41, %23
  %44 = phi i64 [ %39, %41 ], [ %18, %23 ]
  %45 = phi %struct.ImportedBookmarkEntry* [ %42, %41 ], [ %17, %23 ]
  %46 = phi %struct.ImportedBookmarkEntry* [ %28, %41 ], [ %3, %23 ]
  %47 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 %10
  %48 = ptrtoint %struct.ImportedBookmarkEntry* %47 to i64
  %49 = sub i64 %44, %48
  %50 = sdiv exact i64 %49, 184
  %51 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 %50
  %52 = icmp ult %struct.ImportedBookmarkEntry* %51, %17
  br i1 %52, label %84, label %55

53:                                               ; preds = %84
  %54 = ptrtoint %struct.ImportedBookmarkEntry* %88 to i64
  br label %55

55:                                               ; preds = %53, %43
  %56 = phi i64 [ %54, %53 ], [ %44, %43 ]
  store i64 %56, i64* %22, align 8
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %90, label %58

58:                                               ; preds = %55, %76
  %59 = phi %struct.ImportedBookmarkEntry* [ %62, %76 ], [ %45, %55 ]
  %60 = phi %struct.ImportedBookmarkEntry* [ %61, %76 ], [ %51, %55 ]
  %61 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1
  %62 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %59, i64 -1
  %63 = bitcast %struct.ImportedBookmarkEntry* %61 to i16*
  %64 = bitcast %struct.ImportedBookmarkEntry* %62 to i16*
  %65 = load i16, i16* %63, align 8
  store i16 %65, i16* %64, align 8
  %66 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %59, i64 -1, i32 2
  %67 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1, i32 2
  %68 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %66, %class.GURL* dereferenceable(120) %67) #13
  %69 = icmp eq %struct.ImportedBookmarkEntry* %59, %60
  br i1 %69, label %76, label %70

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %59, i64 -1, i32 3
  %72 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1, i32 3, i32 0, i32 0
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %72, align 8
  %74 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1, i32 3, i32 0, i32 1
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %74, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.390"* %71, %"class.std::__1::basic_string"* %73, %"class.std::__1::basic_string"* %75) #13
  br label %76

76:                                               ; preds = %70, %58
  %77 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %59, i64 -1, i32 4
  %78 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1, i32 4
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"* dereferenceable(24) %78) #13
  %80 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %60, i64 -1, i32 5, i32 0, i32 0
  %81 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %59, i64 -1, i32 5, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = icmp eq %struct.ImportedBookmarkEntry* %61, %1
  br i1 %83, label %90, label %58

84:                                               ; preds = %43, %84
  %85 = phi %struct.ImportedBookmarkEntry* [ %88, %84 ], [ %45, %43 ]
  %86 = phi %struct.ImportedBookmarkEntry* [ %87, %84 ], [ %51, %43 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %85, %struct.ImportedBookmarkEntry* dereferenceable(184) %86) #13
  %87 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %86, i64 1
  %88 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %85, i64 1
  %89 = icmp ult %struct.ImportedBookmarkEntry* %87, %17
  br i1 %89, label %84, label %53

90:                                               ; preds = %76, %55
  %91 = icmp eq %struct.ImportedBookmarkEntry* %46, %2
  br i1 %91, label %197, label %92

92:                                               ; preds = %90, %108
  %93 = phi %struct.ImportedBookmarkEntry* [ %116, %108 ], [ %1, %90 ]
  %94 = phi %struct.ImportedBookmarkEntry* [ %115, %108 ], [ %2, %90 ]
  %95 = bitcast %struct.ImportedBookmarkEntry* %94 to i16*
  %96 = bitcast %struct.ImportedBookmarkEntry* %93 to i16*
  %97 = load i16, i16* %95, align 8
  store i16 %97, i16* %96, align 8
  %98 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %93, i64 0, i32 2
  %99 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 0, i32 2
  %100 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %98, %class.GURL* dereferenceable(120) %99) #13
  %101 = icmp eq %struct.ImportedBookmarkEntry* %93, %94
  br i1 %101, label %108, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %93, i64 0, i32 3
  %104 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 0, i32 3, i32 0, i32 0
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 0, i32 3, i32 0, i32 1
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %106, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.390"* %103, %"class.std::__1::basic_string"* %105, %"class.std::__1::basic_string"* %107) #13
  br label %108

108:                                              ; preds = %102, %92
  %109 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %93, i64 0, i32 4
  %110 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 0, i32 4
  %111 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %109, %"class.std::__1::basic_string"* dereferenceable(24) %110) #13
  %112 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 0, i32 5, i32 0, i32 0
  %113 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %93, i64 0, i32 5, i32 0, i32 0
  %114 = load i64, i64* %112, align 8
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %94, i64 1
  %116 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %93, i64 1
  %117 = icmp eq %struct.ImportedBookmarkEntry* %115, %46
  br i1 %117, label %197, label %92

118:                                              ; preds = %12
  %119 = bitcast %"class.std::__1::vector.553"* %0 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %18, %120
  %122 = sdiv exact i64 %121, 184
  %123 = add nsw i64 %122, %10
  %124 = icmp ugt i64 %123, 100254043878856258
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector.553"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #14
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %15, %120
  %129 = sdiv exact i64 %128, 184
  %130 = icmp ult i64 %129, 50127021939428129
  br i1 %130, label %134, label %131

131:                                              ; preds = %127
  %132 = sub i64 %5, %120
  %133 = sdiv exact i64 %132, 184
  br label %141

134:                                              ; preds = %127
  %135 = shl nsw i64 %129, 1
  %136 = icmp ult i64 %135, %123
  %137 = select i1 %136, i64 %123, i64 %135
  %138 = sub i64 %5, %120
  %139 = sdiv exact i64 %138, 184
  %140 = icmp eq i64 %137, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %134, %131
  %142 = phi i64 [ %133, %131 ], [ %139, %134 ]
  %143 = phi i64 [ 100254043878856258, %131 ], [ %137, %134 ]
  %144 = mul i64 %143, 184
  %145 = tail call i8* @_Znwm(i64 %144) #15
  %146 = bitcast i8* %145 to %struct.ImportedBookmarkEntry*
  br label %147

147:                                              ; preds = %141, %134
  %148 = phi i64 [ %142, %141 ], [ %139, %134 ]
  %149 = phi i64 [ %143, %141 ], [ 0, %134 ]
  %150 = phi %struct.ImportedBookmarkEntry* [ %146, %141 ], [ null, %134 ]
  %151 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %150, i64 %148
  %152 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %150, i64 %149
  %153 = ptrtoint %struct.ImportedBookmarkEntry* %152 to i64
  %154 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %151, i64 %10
  br label %155

155:                                              ; preds = %147, %155
  %156 = phi %struct.ImportedBookmarkEntry* [ %158, %155 ], [ %151, %147 ]
  %157 = phi %struct.ImportedBookmarkEntry* [ %159, %155 ], [ %2, %147 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %156, %struct.ImportedBookmarkEntry* dereferenceable(184) %157) #13
  %158 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %156, i64 1
  %159 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %157, i64 1
  %160 = icmp eq %struct.ImportedBookmarkEntry* %154, %158
  br i1 %160, label %161, label %155

161:                                              ; preds = %155
  %162 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %6, align 8
  %163 = icmp eq %struct.ImportedBookmarkEntry* %162, %1
  br i1 %163, label %170, label %164

164:                                              ; preds = %161, %164
  %165 = phi %struct.ImportedBookmarkEntry* [ %167, %164 ], [ %151, %161 ]
  %166 = phi %struct.ImportedBookmarkEntry* [ %168, %164 ], [ %1, %161 ]
  %167 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %165, i64 -1
  %168 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %166, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %167, %struct.ImportedBookmarkEntry* dereferenceable(184) %168) #13
  %169 = icmp eq %struct.ImportedBookmarkEntry* %168, %162
  br i1 %169, label %170, label %164

170:                                              ; preds = %164, %161
  %171 = phi %struct.ImportedBookmarkEntry* [ %151, %161 ], [ %167, %164 ]
  %172 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %16, align 8
  %173 = icmp eq %struct.ImportedBookmarkEntry* %172, %1
  br i1 %173, label %182, label %174

174:                                              ; preds = %170, %174
  %175 = phi %struct.ImportedBookmarkEntry* [ %178, %174 ], [ %154, %170 ]
  %176 = phi %struct.ImportedBookmarkEntry* [ %177, %174 ], [ %1, %170 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %175, %struct.ImportedBookmarkEntry* dereferenceable(184) %176) #13
  %177 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %176, i64 1
  %178 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %175, i64 1
  %179 = icmp eq %struct.ImportedBookmarkEntry* %177, %172
  br i1 %179, label %180, label %174

180:                                              ; preds = %174
  %181 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %16, align 8
  br label %182

182:                                              ; preds = %170, %180
  %183 = phi %struct.ImportedBookmarkEntry* [ %181, %180 ], [ %1, %170 ]
  %184 = phi %struct.ImportedBookmarkEntry* [ %178, %180 ], [ %154, %170 ]
  %185 = ptrtoint %struct.ImportedBookmarkEntry* %171 to i64
  %186 = ptrtoint %struct.ImportedBookmarkEntry* %184 to i64
  %187 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %6, align 8
  store i64 %185, i64* %119, align 8
  store i64 %186, i64* %22, align 8
  store i64 %153, i64* %14, align 8
  %188 = icmp eq %struct.ImportedBookmarkEntry* %183, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %182, %189
  %190 = phi %struct.ImportedBookmarkEntry* [ %191, %189 ], [ %183, %182 ]
  %191 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %190, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %191) #13
  %192 = icmp eq %struct.ImportedBookmarkEntry* %191, %187
  br i1 %192, label %193, label %189

193:                                              ; preds = %189, %182
  %194 = icmp eq %struct.ImportedBookmarkEntry* %187, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %187, i64 0, i32 0
  tail call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %108, %195, %193, %38, %90, %4
  %198 = phi %struct.ImportedBookmarkEntry* [ %1, %4 ], [ %1, %90 ], [ %1, %38 ], [ %151, %193 ], [ %151, %195 ], [ %1, %108 ]
  ret %struct.ImportedBookmarkEntry* %198
}

declare void @_ZN9bookmarks13BookmarkModel21BeginExtensiveChangesEv(%"class.bookmarks::BookmarkModel"*) local_unnamed_addr #2

declare %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel9AddFolderEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESG_NS4_4lessISG_EENS8_INS4_4pairIKSG_SG_EEEEEEN4absl8optionalIN4base4GUIDEEE(%"class.bookmarks::BookmarkModel"*, %"class.bookmarks::BookmarkNode"*, i64, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map.71"*, %"class.absl::optional.571"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.bookmarks::BookmarkNode"* @_ZN9bookmarks13BookmarkModel6AddURLEPKNS_12BookmarkNodeEmRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERK4GURLPKNS4_3mapINS5_IcNS6_IcEENS8_IcEEEESJ_NS4_4lessISJ_EENS8_INS4_4pairIKSJ_SJ_EEEEEEN4absl8optionalIN4base4TimeEEENSU_INSV_4GUIDEEE(%"class.bookmarks::BookmarkModel"*, %"class.bookmarks::BookmarkNode"*, i64, %"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120), %"class.std::__1::map.71"*, %"class.absl::optional.580"* byval(%"class.absl::optional.580") align 8, %"class.absl::optional.571"*) local_unnamed_addr #2

declare void @_ZN9bookmarks13BookmarkModel23ResetDateFolderModifiedEPKNS_12BookmarkNodeE(%"class.bookmarks::BookmarkModel"*, %"class.bookmarks::BookmarkNode"*) local_unnamed_addr #2

declare void @_ZN9bookmarks13BookmarkModel19EndExtensiveChangesEv(%"class.bookmarks::BookmarkModel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter11AddFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE(%class.ProfileWriter* nocapture readonly, %"class.std::__1::vector.585"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %4 = load %class.Profile*, %class.Profile** %3, align 8
  %5 = tail call %"class.favicon::FaviconService"* @_ZN21FaviconServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile* %4, i32 0) #13
  %6 = bitcast %"class.favicon::FaviconService"* %5 to void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)***
  %7 = load void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)**, void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)*, void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)** %7, i64 19
  %9 = load void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)*, void (%"class.favicon::FaviconService"*, %"class.std::__1::vector.585"*)** %8, align 8
  tail call void %9(%"class.favicon::FaviconService"* %5, %"class.std::__1::vector.585"* %1) #13
  ret void
}

declare %"class.favicon::FaviconService"* @_ZN21FaviconServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter11AddKeywordsENSt3__16vectorINS0_10unique_ptrI11TemplateURLNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEEb(%class.ProfileWriter* nocapture readonly, %"class.std::__1::vector.246"* nocapture readonly, i1 zeroext) unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.652", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.652", align 1
  %8 = alloca %"class.std::__1::vector.643", align 8
  %9 = alloca %"class.std::__1::basic_string.52", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::map.237", align 8
  %12 = alloca %"class.std::__1::basic_string.52", align 8
  %13 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %14 = load %class.Profile*, %class.Profile** %13, align 8
  %15 = tail call %class.TemplateURLService* @_ZN25TemplateURLServiceFactory13GetForProfileEP7Profile(%class.Profile* %14) #13
  %16 = bitcast %"class.std::__1::map.237"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %17, align 8
  br i1 %2, label %21, label %98

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::vector.643"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.std::__1::vector.643", %"class.std::__1::vector.643"* %8, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.643", %"class.std::__1::vector.643"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #13
  call void @_ZN18TemplateURLService15GetTemplateURLsEv(%"class.std::__1::vector.643"* nonnull sret %8, %class.TemplateURLService* %15) #13
  %25 = bitcast %class.TemplateURL*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.643"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  %30 = inttoptr i64 %28 to %class.TemplateURL**
  br i1 %29, label %47, label %31

31:                                               ; preds = %21
  %32 = bitcast %"class.std::__1::basic_string.52"* %9 to i8*
  %33 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string.52"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0
  %39 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %40 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %5, i64 0, i32 0
  %42 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %7, i64 0, i32 0
  br label %53

45:                                               ; preds = %89
  %46 = inttoptr i64 %92 to %class.TemplateURL**
  br label %47

47:                                               ; preds = %45, %21
  %48 = phi %class.TemplateURL** [ %30, %21 ], [ %46, %45 ]
  %49 = icmp eq %class.TemplateURL** %48, null
  br i1 %49, label %97, label %50

50:                                               ; preds = %47
  %51 = ptrtoint %class.TemplateURL** %48 to i64
  store i64 %51, i64* %25, align 8
  %52 = bitcast %class.TemplateURL** %48 to i8*
  call void @_ZdlPv(i8* %52) #15
  br label %97

53:                                               ; preds = %89, %31
  %54 = phi %class.TemplateURL** [ %30, %31 ], [ %96, %89 ]
  %55 = phi i64 [ 0, %31 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %56 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %54, i64 %55
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #13
  %57 = load %class.TemplateURL*, %class.TemplateURL** %56, align 8
  %58 = load %class.SearchTermsData*, %class.SearchTermsData** %35, align 8
  call fastcc void @_ZL16BuildHostPathKeyPK11TemplateURLRK15SearchTermsDatab(%"class.std::__1::basic_string.52"* nonnull sret %9, %class.TemplateURL* %57, %class.SearchTermsData* dereferenceable(8) %58, i1 zeroext false) #13
  %59 = load i8, i8* %37, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i64, i64* %34, align 8
  %62 = zext i8 %59 to i64
  %63 = select i1 %60, i64 %61, i64 %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.std::__1::basic_string.52"* %9, %"class.std::__1::basic_string.52"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #13
  %66 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.238"* nonnull %38, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.652"* nonnull dereferenceable(1) %5) #13
  %67 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %66, 0
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 7
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %class.TemplateURL**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %70 = load %class.TemplateURL*, %class.TemplateURL** %69, align 8
  %71 = load %class.TemplateURL**, %class.TemplateURL*** %23, align 8
  %72 = getelementptr inbounds %class.TemplateURL*, %class.TemplateURL** %71, i64 %55
  %73 = load %class.TemplateURL*, %class.TemplateURL** %72, align 8
  %74 = icmp eq %class.TemplateURL* %70, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %65
  %76 = call zeroext i1 @_ZNK18TemplateURLService17ShowInDefaultListEPK11TemplateURL(%class.TemplateURLService* %15, %class.TemplateURL* %73) #13
  br i1 %76, label %77, label %84

77:                                               ; preds = %75
  %78 = call zeroext i1 @_ZNK18TemplateURLService17ShowInDefaultListEPK11TemplateURL(%class.TemplateURLService* %15, %class.TemplateURL* nonnull %70) #13
  br i1 %78, label %84, label %79

79:                                               ; preds = %77, %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  store %"class.std::__1::basic_string.52"* %9, %"class.std::__1::basic_string.52"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #13
  %80 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.238"* nonnull %38, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.652"* nonnull dereferenceable(1) %7) #13
  %81 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %80, 0
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 7
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %class.TemplateURL**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  store %class.TemplateURL* %73, %class.TemplateURL** %83, align 8
  br label %84

84:                                               ; preds = %79, %77, %75, %53
  %85 = load i8, i8* %37, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %87, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  %90 = add nuw i64 %55, 1
  %91 = load i64, i64* %25, align 8
  %92 = load i64, i64* %27, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = icmp ult i64 %90, %94
  %96 = inttoptr i64 %92 to %class.TemplateURL**
  br i1 %95, label %53, label %45

97:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  br label %98

98:                                               ; preds = %97, %3
  %99 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %1, i64 0, i32 0, i32 0
  %100 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %1, i64 0, i32 0, i32 1
  %102 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %101, align 8
  %103 = icmp eq %"class.std::__1::unique_ptr.248"* %100, %102
  br i1 %103, label %112, label %104

104:                                              ; preds = %98
  %105 = bitcast %"class.std::__1::basic_string.52"* %12 to i8*
  %106 = getelementptr inbounds %class.TemplateURLService, %class.TemplateURLService* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0
  %108 = bitcast %"class.std::__1::basic_string.52"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.logging::CheckError"* %10 to i8*
  br label %116

112:                                              ; preds = %207, %98
  %113 = getelementptr inbounds %"class.std::__1::map.237", %"class.std::__1::map.237"* %11, i64 0, i32 0
  %114 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node.654"**
  %115 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %114, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.238"* nonnull %113, %"class.std::__1::__tree_node.654"* %115) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  ret void

116:                                              ; preds = %104, %207
  %117 = phi %"class.std::__1::unique_ptr.248"* [ %100, %104 ], [ %208, %207 ]
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %class.TemplateURL*, %class.TemplateURL** %118, align 8
  %120 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %119, i64 0, i32 0, i32 24
  %121 = call %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService* %15, %"class.std::__1::basic_string"* dereferenceable(24) %120) #13
  %122 = icmp eq %class.TemplateURL* %121, null
  br i1 %122, label %123, label %207

123:                                              ; preds = %116
  %124 = load %class.TemplateURL*, %class.TemplateURL** %118, align 8
  %125 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %124, i64 0, i32 0, i32 24
  %126 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %135

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i16*, i16** %131, align 8
  %133 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %124, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  br label %138

135:                                              ; preds = %123
  %136 = bitcast %"class.std::__1::basic_string"* %125 to i16*
  %137 = zext i8 %128 to i64
  br label %138

138:                                              ; preds = %135, %130
  %139 = phi i16* [ %132, %130 ], [ %136, %135 ]
  %140 = phi i64 [ %134, %130 ], [ %137, %135 ]
  %141 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %142 = icmp eq i16 %141, 0
  br i1 %142, label %177, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %146, %143 ], [ 0, %138 ]
  %145 = phi i16* [ %147, %143 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %138 ]
  %146 = add i64 %144, 1
  %147 = getelementptr inbounds i16, i16* %145, i64 1
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 0
  br i1 %149, label %150, label %143

150:                                              ; preds = %143
  %151 = icmp eq i64 %140, 0
  %152 = icmp eq i64 %146, 0
  %153 = or i1 %151, %152
  br i1 %153, label %177, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds i16, i16* %139, i64 %140
  %156 = getelementptr inbounds [0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 %146
  br label %157

157:                                              ; preds = %167, %154
  %158 = phi i16* [ %139, %154 ], [ %168, %167 ]
  %159 = load i16, i16* %158, align 2
  br label %162

160:                                              ; preds = %162
  %161 = icmp eq i16* %166, %156
  br i1 %161, label %167, label %162

162:                                              ; preds = %160, %157
  %163 = phi i16* [ %166, %160 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %157 ]
  %164 = load i16, i16* %163, align 2
  %165 = icmp eq i16 %159, %164
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  br i1 %165, label %170, label %160

167:                                              ; preds = %160
  %168 = getelementptr inbounds i16, i16* %158, i64 1
  %169 = icmp eq i16* %168, %155
  br i1 %169, label %177, label %157

170:                                              ; preds = %162
  %171 = icmp eq i16* %158, %155
  %172 = ptrtoint i16* %158 to i64
  %173 = ptrtoint i16* %139 to i64
  %174 = sub i64 %172, %173
  %175 = icmp eq i64 %174, -2
  %176 = or i1 %171, %175
  br i1 %176, label %177, label %207

177:                                              ; preds = %167, %170, %138, %150
  br i1 %2, label %178, label %189

178:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #13
  %179 = load %class.SearchTermsData*, %class.SearchTermsData** %106, align 8
  call fastcc void @_ZL16BuildHostPathKeyPK11TemplateURLRK15SearchTermsDatab(%"class.std::__1::basic_string.52"* nonnull sret %12, %class.TemplateURL* %124, %class.SearchTermsData* dereferenceable(8) %179, i1 zeroext true)
  %180 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.238"* nonnull %107, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %12) #13
  %181 = icmp eq %"class.std::__1::__tree_end_node"* %180, %19
  %182 = load i8, i8* %109, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %178
  %185 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %185) #15
  br label %186

186:                                              ; preds = %184, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #13
  br i1 %181, label %187, label %207

187:                                              ; preds = %186
  %188 = load %class.TemplateURL*, %class.TemplateURL** %118, align 8
  br label %189

189:                                              ; preds = %187, %177
  %190 = phi %class.TemplateURL* [ %188, %187 ], [ %124, %177 ]
  %191 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %190, i64 0, i32 1, i32 0, i32 0
  %192 = load %class.TemplateURLRef*, %class.TemplateURLRef** %191, align 8
  %193 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %190, i64 0, i32 1, i32 0, i32 1
  %194 = load %class.TemplateURLRef*, %class.TemplateURLRef** %193, align 8
  %195 = icmp eq %class.TemplateURLRef* %192, %194
  br i1 %195, label %196, label %199

196:                                              ; preds = %189
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #13
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  %198 = load %class.TemplateURLRef*, %class.TemplateURLRef** %193, align 8
  br label %199

199:                                              ; preds = %189, %196
  %200 = phi %class.TemplateURLRef* [ %194, %189 ], [ %198, %196 ]
  %201 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %200, i64 -1
  %202 = load %class.SearchTermsData*, %class.SearchTermsData** %106, align 8
  %203 = call zeroext i1 @_ZNK14TemplateURLRef7IsValidERK15SearchTermsData(%class.TemplateURLRef* %201, %class.SearchTermsData* dereferenceable(8) %202) #13
  br i1 %203, label %204, label %207

204:                                              ; preds = %199
  %205 = load %class.TemplateURL*, %class.TemplateURL** %118, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %118, align 8
  %206 = call %class.TemplateURL* @_ZN18TemplateURLService3AddENSt3__110unique_ptrI11TemplateURLNS0_14default_deleteIS2_EEEE(%class.TemplateURLService* %15, %class.TemplateURL* %205) #13
  br label %207

207:                                              ; preds = %186, %170, %199, %204, %116
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %117, i64 1
  %209 = icmp eq %"class.std::__1::unique_ptr.248"* %208, %102
  br i1 %209, label %112, label %116
}

declare %class.TemplateURL* @_ZN18TemplateURLService24GetTemplateURLForKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.TemplateURLService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL16BuildHostPathKeyPK11TemplateURLRK15SearchTermsDatab(%"class.std::__1::basic_string.52"* noalias nocapture sret, %class.TemplateURL*, %class.SearchTermsData* dereferenceable(8), i1 zeroext) unnamed_addr #1 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %class.GURL, align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string.52", align 8
  %11 = alloca %"struct.TemplateURLRef::SearchTermsArgs", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  br i1 %3, label %13, label %42

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 1, i32 0, i32 0
  %15 = load %class.TemplateURLRef*, %class.TemplateURLRef** %14, align 8
  %16 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 1, i32 0, i32 1
  %17 = load %class.TemplateURLRef*, %class.TemplateURLRef** %16, align 8
  %18 = icmp eq %class.TemplateURLRef* %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %22 = load %class.TemplateURLRef*, %class.TemplateURLRef** %16, align 8
  br label %23

23:                                               ; preds = %13, %19
  %24 = phi %class.TemplateURLRef* [ %17, %13 ], [ %22, %19 ]
  %25 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %24, i64 -1
  %26 = call zeroext i1 @_ZNK14TemplateURLRef7IsValidERK15SearchTermsData(%class.TemplateURLRef* %25, %class.SearchTermsData* dereferenceable(8) %2) #13
  br i1 %26, label %42, label %27

27:                                               ; preds = %23
  %28 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %28) #13
  %29 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 0, i32 25
  %30 = bitcast %"class.std::__1::basic_string.52"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string.52"* %29 to i8*
  %37 = select i1 %33, i8* %35, i8* %36
  %38 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %32 to i64
  %41 = select i1 %33, i64 %39, i64 %40
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %8, i8* %37, i64 %41) #13
  call fastcc void @_ZL17HostPathKeyForURLRK4GURL(%"class.std::__1::basic_string.52"* sret %0, %class.GURL* nonnull dereferenceable(120) %8)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %28) #13
  br label %101

42:                                               ; preds = %23, %4
  %43 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 1, i32 0, i32 0
  %44 = load %class.TemplateURLRef*, %class.TemplateURLRef** %43, align 8
  %45 = getelementptr inbounds %class.TemplateURL, %class.TemplateURL* %1, i64 0, i32 1, i32 0, i32 1
  %46 = load %class.TemplateURLRef*, %class.TemplateURLRef** %45, align 8
  %47 = icmp eq %class.TemplateURLRef* %44, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #13
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  %51 = load %class.TemplateURLRef*, %class.TemplateURLRef** %45, align 8
  br label %52

52:                                               ; preds = %42, %48
  %53 = phi %class.TemplateURLRef* [ %46, %42 ], [ %51, %48 ]
  %54 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %53, i64 -1
  %55 = call zeroext i1 @_ZNK14TemplateURLRef19SupportsReplacementERK15SearchTermsData(%class.TemplateURLRef* %54, %class.SearchTermsData* dereferenceable(8) %2) #13
  br i1 %55, label %56, label %99

56:                                               ; preds = %52
  %57 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %57) #13
  %58 = bitcast %"class.std::__1::basic_string.52"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = load %class.TemplateURLRef*, %class.TemplateURLRef** %43, align 8
  %60 = load %class.TemplateURLRef*, %class.TemplateURLRef** %45, align 8
  %61 = icmp eq %class.TemplateURLRef* %59, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %56
  %63 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #13
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  %65 = load %class.TemplateURLRef*, %class.TemplateURLRef** %45, align 8
  br label %66

66:                                               ; preds = %56, %62
  %67 = phi %class.TemplateURLRef* [ %60, %56 ], [ %65, %62 ]
  %68 = bitcast %"struct.TemplateURLRef::SearchTermsArgs"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %68) #13
  %69 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #13
  %70 = getelementptr inbounds %class.TemplateURLRef, %class.TemplateURLRef* %67, i64 -1
  %71 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  store i8 1, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 120, i16* %73, align 8
  %74 = getelementptr inbounds i16, i16* %73, i64 1
  store i16 0, i16* %74, align 2
  call void @_ZN14TemplateURLRef15SearchTermsArgsC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.TemplateURLRef::SearchTermsArgs"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #13
  call void @_ZNK14TemplateURLRef18ReplaceSearchTermsERKNS_15SearchTermsArgsERK15SearchTermsDataPNSt3__14pairINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESD_EE(%"class.std::__1::basic_string.52"* nonnull sret %10, %class.TemplateURLRef* %70, %"struct.TemplateURLRef::SearchTermsArgs"* nonnull dereferenceable(536) %11, %class.SearchTermsData* dereferenceable(8) %2, %"struct.std::__1::pair.664"* null) #13
  %75 = bitcast %"class.std::__1::basic_string.52"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = select i1 %78, i8* %80, i8* %58
  %82 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = zext i8 %77 to i64
  %85 = select i1 %78, i64 %83, i64 %84
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %81, i64 %85) #13
  call fastcc void @_ZL17HostPathKeyForURLRK4GURL(%"class.std::__1::basic_string.52"* sret %0, %class.GURL* nonnull dereferenceable(120) %9)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #13
  %86 = load i8, i8* %76, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %66
  %89 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %66, %88
  call void @_ZN14TemplateURLRef15SearchTermsArgsD1Ev(%"struct.TemplateURLRef::SearchTermsArgs"* nonnull %11) #13
  %91 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %68) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %57) #13
  br label %101

99:                                               ; preds = %52
  %100 = bitcast %"class.std::__1::basic_string.52"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #13
  br label %101

101:                                              ; preds = %99, %98, %27
  ret void
}

declare zeroext i1 @_ZNK14TemplateURLRef7IsValidERK15SearchTermsData(%class.TemplateURLRef*, %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #2

declare %class.TemplateURL* @_ZN18TemplateURLService3AddENSt3__110unique_ptrI11TemplateURLNS0_14default_deleteIS2_EEEE(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriter26AddAutofillFormDataEntriesERKNSt3__16vectorIN8autofill13AutofillEntryENS0_9allocatorIS3_EEEE(%class.ProfileWriter* nocapture readonly, %"class.std::__1::vector.587"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %class.ProfileWriter, %class.ProfileWriter* %0, i64 0, i32 2
  %5 = load %class.Profile*, %class.Profile** %4, align 8
  %6 = tail call %"class.autofill::AutofillWebDataService"* @_ZN21WebDataServiceFactory28GetAutofillWebDataForProfileEP7Profile17ServiceAccessType(%class.Profile* %5, i32 0) #13
  %7 = icmp eq %"class.autofill::AutofillWebDataService"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %2
  tail call void @_ZN8autofill22AutofillWebDataService21UpdateAutofillEntriesERKNSt3__16vectorINS_13AutofillEntryENS1_9allocatorIS3_EEEE(%"class.autofill::AutofillWebDataService"* nonnull %6, %"class.std::__1::vector.587"* %1) #13
  %9 = getelementptr inbounds %"class.autofill::AutofillWebDataService", %"class.autofill::AutofillWebDataService"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %9, i64 -1, i32 1
  %15 = getelementptr inbounds %"class.autofill::AutofillWebDataService", %"class.autofill::AutofillWebDataService"* %6, i64 0, i32 0, i32 1, i32 1, i32 0
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %17 = bitcast %"class.base::SequencedTaskRunner"* %16 to i1 (%"class.base::SequencedTaskRunner"*)***
  %18 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %18, i64 5
  %20 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.base::SequencedTaskRunner"* %16) #13
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = bitcast %class.scoped_refptr.198* %14 to %class.WebDataServiceBase*
  %24 = bitcast %class.scoped_refptr.198* %14 to void (%class.WebDataServiceBase*)***
  %25 = load void (%class.WebDataServiceBase*)**, void (%class.WebDataServiceBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.WebDataServiceBase*)*, void (%class.WebDataServiceBase*)** %25, i64 5
  %27 = load void (%class.WebDataServiceBase*)*, void (%class.WebDataServiceBase*)** %26, align 8
  tail call void %27(%class.WebDataServiceBase* nonnull %23) #13
  br label %33

28:                                               ; preds = %13
  %29 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %30 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i32 72) #13
  %31 = bitcast %class.scoped_refptr.198* %14 to i8*
  %32 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %3, void (i8*)* nonnull @_ZN4base12DeleteHelperI18WebDataServiceBaseE8DoDeleteEPKv, i8* %31) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  br label %33

33:                                               ; preds = %2, %8, %22, %28
  ret void
}

declare %"class.autofill::AutofillWebDataService"* @_ZN21WebDataServiceFactory28GetAutofillWebDataForProfileEP7Profile17ServiceAccessType(%class.Profile*, i32) local_unnamed_addr #2

declare void @_ZN8autofill22AutofillWebDataService21UpdateAutofillEntriesERKNSt3__16vectorINS_13AutofillEntryENS1_9allocatorIS3_EEEE(%"class.autofill::AutofillWebDataService"*, %"class.std::__1::vector.587"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13ProfileWriterD2Ev(%class.ProfileWriter* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13ProfileWriterD0Ev(%class.ProfileWriter*) unnamed_addr #1 align 2 {
  %2 = bitcast %class.ProfileWriter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i16*) local_unnamed_addr #6 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = load i16, i16* %2, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %3 ]
  %20 = phi i16* [ %22, %18 ], [ %2, %3 ]
  %21 = add i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %20, i64 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %3
  %26 = phi i64 [ 0, %3 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %30 = select i1 %11, i16* %28, i16* %29
  %31 = add i64 %26, %15
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %25
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %35
  %38 = trunc i64 %15 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %53

42:                                               ; preds = %35
  %43 = add nuw nsw i64 %31, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @abort() #14
  unreachable

47:                                               ; preds = %42
  %48 = shl i64 %44, 1
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8
  %52 = or i64 %44, -9223372036854775808
  store i64 %52, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %53

53:                                               ; preds = %47, %37
  %54 = phi i16* [ %41, %37 ], [ %50, %47 ]
  %55 = icmp eq i64 %15, 0
  br i1 %55, label %199, label %56

56:                                               ; preds = %53
  %57 = icmp ult i64 %15, 16
  br i1 %57, label %146, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %54, i64 %15
  %60 = getelementptr i16, i16* %30, i64 %15
  %61 = icmp ult i16* %54, %60
  %62 = icmp ult i16* %30, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %58
  %65 = and i64 %15, -16
  %66 = sub i64 %15, %65
  %67 = getelementptr i16, i16* %30, i64 %65
  %68 = getelementptr i16, i16* %54, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %30, i64 %77
  %80 = getelementptr i16, i16* %54, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !47
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !47
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !50, !noalias !47
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !50, !noalias !47
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %30, i64 %89
  %91 = getelementptr i16, i16* %54, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !47
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !47
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !50, !noalias !47
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !50, !noalias !47
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %30, i64 %100
  %102 = getelementptr i16, i16* %54, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !47
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !47
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !50, !noalias !47
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !50, !noalias !47
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %30, i64 %111
  %113 = getelementptr i16, i16* %54, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !47
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !47
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !50, !noalias !47
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !50, !noalias !47
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !52

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %30, i64 %129
  %132 = getelementptr i16, i16* %54, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !47
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !47
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !50, !noalias !47
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !50, !noalias !47
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !53

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %15, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %58, %56
  %147 = phi i64 [ %15, %58 ], [ %15, %56 ], [ %66, %144 ]
  %148 = phi i16* [ %30, %58 ], [ %30, %56 ], [ %67, %144 ]
  %149 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !54

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !55

199:                                              ; preds = %164, %169, %144, %53
  %200 = getelementptr inbounds i16, i16* %54, i64 %15
  store i16 0, i16* %200, align 2
  %201 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %210

205:                                              ; preds = %199
  %206 = load i64, i64* %6, align 8
  %207 = and i64 %206, 9223372036854775807
  %208 = add nsw i64 %207, -1
  %209 = load i64, i64* %5, align 8
  br label %212

210:                                              ; preds = %199
  %211 = zext i8 %203 to i64
  br label %212

212:                                              ; preds = %210, %205
  %213 = phi i64 [ %208, %205 ], [ 10, %210 ]
  %214 = phi i64 [ %209, %205 ], [ %211, %210 ]
  %215 = sub i64 %213, %214
  %216 = icmp ult i64 %215, %26
  br i1 %216, label %376, label %217

217:                                              ; preds = %212
  %218 = icmp eq i64 %26, 0
  br i1 %218, label %379, label %219

219:                                              ; preds = %217
  %220 = load i16*, i16** %4, align 8
  %221 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %222 = select i1 %204, i16* %220, i16* %221
  %223 = getelementptr inbounds i16, i16* %222, i64 %214
  %224 = icmp ult i64 %26, 16
  br i1 %224, label %314, label %225

225:                                              ; preds = %219
  %226 = add i64 %214, %26
  %227 = getelementptr i16, i16* %222, i64 %226
  %228 = getelementptr i16, i16* %2, i64 %26
  %229 = icmp ult i16* %223, %228
  %230 = icmp ugt i16* %227, %2
  %231 = and i1 %229, %230
  br i1 %231, label %314, label %232

232:                                              ; preds = %225
  %233 = and i64 %26, -16
  %234 = sub i64 %26, %233
  %235 = getelementptr i16, i16* %2, i64 %233
  %236 = getelementptr i16, i16* %223, i64 %233
  %237 = add i64 %233, -16
  %238 = lshr exact i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp ult i64 %237, 48
  br i1 %241, label %293, label %242

242:                                              ; preds = %232
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %290, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %291, %244 ]
  %247 = getelementptr i16, i16* %2, i64 %245
  %248 = getelementptr i16, i16* %223, i64 %245
  %249 = bitcast i16* %247 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !56
  %251 = getelementptr i16, i16* %247, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !56
  %254 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %254, align 2, !alias.scope !59, !noalias !56
  %255 = getelementptr i16, i16* %248, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %256, align 2, !alias.scope !59, !noalias !56
  %257 = or i64 %245, 16
  %258 = getelementptr i16, i16* %2, i64 %257
  %259 = getelementptr i16, i16* %223, i64 %257
  %260 = bitcast i16* %258 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !56
  %262 = getelementptr i16, i16* %258, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !56
  %265 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !59, !noalias !56
  %266 = getelementptr i16, i16* %259, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !59, !noalias !56
  %268 = or i64 %245, 32
  %269 = getelementptr i16, i16* %2, i64 %268
  %270 = getelementptr i16, i16* %223, i64 %268
  %271 = bitcast i16* %269 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !56
  %273 = getelementptr i16, i16* %269, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !56
  %276 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !59, !noalias !56
  %277 = getelementptr i16, i16* %270, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !59, !noalias !56
  %279 = or i64 %245, 48
  %280 = getelementptr i16, i16* %2, i64 %279
  %281 = getelementptr i16, i16* %223, i64 %279
  %282 = bitcast i16* %280 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !56
  %284 = getelementptr i16, i16* %280, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !56
  %287 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !59, !noalias !56
  %288 = getelementptr i16, i16* %281, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !59, !noalias !56
  %290 = add i64 %245, 64
  %291 = add i64 %246, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %244, !llvm.loop !61

293:                                              ; preds = %244, %232
  %294 = phi i64 [ 0, %232 ], [ %290, %244 ]
  %295 = icmp eq i64 %240, 0
  br i1 %295, label %312, label %296

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %309, %296 ], [ %294, %293 ]
  %298 = phi i64 [ %310, %296 ], [ %240, %293 ]
  %299 = getelementptr i16, i16* %2, i64 %297
  %300 = getelementptr i16, i16* %223, i64 %297
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !56
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !56
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !59, !noalias !56
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !59, !noalias !56
  %309 = add i64 %297, 16
  %310 = add i64 %298, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %296, !llvm.loop !62

312:                                              ; preds = %296, %293
  %313 = icmp eq i64 %26, %233
  br i1 %313, label %367, label %314

314:                                              ; preds = %312, %225, %219
  %315 = phi i64 [ %26, %225 ], [ %26, %219 ], [ %234, %312 ]
  %316 = phi i16* [ %2, %225 ], [ %2, %219 ], [ %235, %312 ]
  %317 = phi i16* [ %223, %225 ], [ %223, %219 ], [ %236, %312 ]
  %318 = add i64 %315, -1
  %319 = and i64 %315, 7
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %332, label %321

321:                                              ; preds = %314, %321
  %322 = phi i64 [ %327, %321 ], [ %315, %314 ]
  %323 = phi i16* [ %329, %321 ], [ %316, %314 ]
  %324 = phi i16* [ %328, %321 ], [ %317, %314 ]
  %325 = phi i64 [ %330, %321 ], [ %319, %314 ]
  %326 = load i16, i16* %323, align 2
  store i16 %326, i16* %324, align 2
  %327 = add i64 %322, -1
  %328 = getelementptr inbounds i16, i16* %324, i64 1
  %329 = getelementptr inbounds i16, i16* %323, i64 1
  %330 = add i64 %325, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %321, !llvm.loop !63

332:                                              ; preds = %321, %314
  %333 = phi i64 [ %315, %314 ], [ %327, %321 ]
  %334 = phi i16* [ %316, %314 ], [ %329, %321 ]
  %335 = phi i16* [ %317, %314 ], [ %328, %321 ]
  %336 = icmp ult i64 %318, 7
  br i1 %336, label %367, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %363, %337 ], [ %333, %332 ]
  %339 = phi i16* [ %365, %337 ], [ %334, %332 ]
  %340 = phi i16* [ %364, %337 ], [ %335, %332 ]
  %341 = load i16, i16* %339, align 2
  store i16 %341, i16* %340, align 2
  %342 = getelementptr inbounds i16, i16* %340, i64 1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %340, i64 2
  %346 = getelementptr inbounds i16, i16* %339, i64 2
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %340, i64 3
  %349 = getelementptr inbounds i16, i16* %339, i64 3
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %340, i64 4
  %352 = getelementptr inbounds i16, i16* %339, i64 4
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %340, i64 5
  %355 = getelementptr inbounds i16, i16* %339, i64 5
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %340, i64 6
  %358 = getelementptr inbounds i16, i16* %339, i64 6
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %340, i64 7
  %361 = getelementptr inbounds i16, i16* %339, i64 7
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = add i64 %338, -8
  %364 = getelementptr inbounds i16, i16* %340, i64 8
  %365 = getelementptr inbounds i16, i16* %339, i64 8
  %366 = icmp eq i64 %363, 0
  br i1 %366, label %367, label %337, !llvm.loop !64

367:                                              ; preds = %332, %337, %312
  %368 = add i64 %214, %26
  %369 = load i8, i8* %202, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  store i64 %368, i64* %5, align 8
  br label %374

372:                                              ; preds = %367
  %373 = trunc i64 %368 to i8
  store i8 %373, i8* %202, align 1
  br label %374

374:                                              ; preds = %372, %371
  %375 = getelementptr inbounds i16, i16* %222, i64 %368
  store i16 0, i16* %375, align 2
  br label %379

376:                                              ; preds = %212
  %377 = add i64 %214, %26
  %378 = sub i64 %377, %213
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %213, i64 %378, i64 %214, i64 %214, i64 0, i64 %26, i16* %2) #13
  br label %379

379:                                              ; preds = %217, %374, %376
  ret void
}

declare void @_ZN4base16NumberToString16Em(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.626"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.639", align 8
  %5 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %98, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %22 = select i1 %14, i16* %20, i16* %21
  br label %23

23:                                               ; preds = %94, %9
  %24 = phi %"class.std::__1::__tree_node"* [ %97, %94 ], [ %7, %9 ]
  %25 = phi %"class.std::__1::__tree_node_base"** [ %96, %94 ], [ %10, %9 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp ult i64 %34, %18
  %36 = select i1 %35, i64 %34, i64 %18
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %42 = select i1 %30, i16* %40, i16* %41
  br label %43

43:                                               ; preds = %52, %38
  %44 = phi i64 [ %53, %52 ], [ %36, %38 ]
  %45 = phi i16* [ %55, %52 ], [ %42, %38 ]
  %46 = phi i16* [ %54, %52 ], [ %22, %38 ]
  %47 = load i16, i16* %46, align 2
  %48 = load i16, i16* %45, align 2
  %49 = icmp ult i16 %47, %48
  br i1 %49, label %59, label %50

50:                                               ; preds = %43
  %51 = icmp ult i16 %48, %47
  br i1 %51, label %65, label %52

52:                                               ; preds = %50
  %53 = add i64 %44, -1
  %54 = getelementptr inbounds i16, i16* %46, i64 1
  %55 = getelementptr inbounds i16, i16* %45, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %57, label %43

57:                                               ; preds = %52, %23
  %58 = icmp ult i64 %18, %34
  br i1 %58, label %59, label %65

59:                                               ; preds = %43, %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %94

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %100

65:                                               ; preds = %50, %57
  br i1 %37, label %85, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %70 = select i1 %30, i16* %68, i16* %69
  br label %71

71:                                               ; preds = %80, %66
  %72 = phi i64 [ %81, %80 ], [ %36, %66 ]
  %73 = phi i16* [ %83, %80 ], [ %22, %66 ]
  %74 = phi i16* [ %82, %80 ], [ %70, %66 ]
  %75 = load i16, i16* %74, align 2
  %76 = load i16, i16* %73, align 2
  %77 = icmp ult i16 %75, %76
  br i1 %77, label %86, label %78

78:                                               ; preds = %71
  %79 = icmp ult i16 %76, %75
  br i1 %79, label %92, label %80

80:                                               ; preds = %78
  %81 = add i64 %72, -1
  %82 = getelementptr inbounds i16, i16* %74, i64 1
  %83 = getelementptr inbounds i16, i16* %73, i64 1
  %84 = icmp eq i64 %81, 0
  br i1 %84, label %85, label %71

85:                                               ; preds = %80, %65
  br i1 %35, label %86, label %92

86:                                               ; preds = %71, %85
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %100

92:                                               ; preds = %85, %78
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %100

94:                                               ; preds = %86, %59
  %95 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %88, %86 ]
  %96 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %87, %86 ]
  %97 = bitcast %"class.std::__1::__tree_node_base"* %95 to %"class.std::__1::__tree_node"*
  br label %23

98:                                               ; preds = %3
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %100

100:                                              ; preds = %63, %90, %92, %98
  %101 = phi %"class.std::__1::__tree_end_node"* [ %5, %98 ], [ %64, %63 ], [ %91, %90 ], [ %93, %92 ]
  %102 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %60, %63 ], [ %87, %90 ], [ %25, %92 ]
  %103 = bitcast %"class.std::__1::__tree_node_base"** %102 to %"class.std::__1::__tree_node"**
  %104 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node"* %104, null
  br i1 %105, label %106, label %131

106:                                              ; preds = %100
  %107 = bitcast %"class.std::__1::unique_ptr.639"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %4, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.639"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_(%"class.std::__1::unique_ptr.639"* nonnull sret %4, %"class.std::__1::__tree.626"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %110 = bitcast %"class.std::__1::unique_ptr.639"* %4 to %"class.std::__1::__tree_node_base"**
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 2
  %113 = bitcast %"class.std::__1::__tree_node_base"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %101, %"class.std::__1::__tree_end_node"** %112, align 8
  store %"class.std::__1::__tree_node_base"* %111, %"class.std::__1::__tree_node_base"** %102, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %106
  %120 = ptrtoint %"class.std::__1::__tree_node_base"* %117 to i64
  %121 = bitcast %"class.std::__1::__tree.626"* %0 to i64*
  store i64 %120, i64* %121, align 8
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  br label %123

123:                                              ; preds = %119, %106
  %124 = phi %"class.std::__1::__tree_node_base"* [ %111, %106 ], [ %122, %119 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %124) #13
  %127 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 2, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  br label %131

131:                                              ; preds = %123, %100
  %132 = phi i8 [ 1, %123 ], [ 0, %100 ]
  %133 = phi %"class.std::__1::__tree_node"* [ %130, %123 ], [ %104, %100 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 0
  %135 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %134, 0
  %136 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %135, i8 %132, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_(%"class.std::__1::unique_ptr.639"* noalias sret, %"class.std::__1::__tree.626"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.639", %"class.std::__1::unique_ptr.639"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.639"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = tail call i8* @_Znwm(i64 56) #15
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.639"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.std::__1::allocator.629"** %5 to %"class.std::__1::__compressed_pair.627"**
  store %"class.std::__1::__compressed_pair.627"* %4, %"class.std::__1::__compressed_pair.627"** %11, align 8
  store i8 0, i8* %6, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #13
  br label %198

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast i16* %21 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = trunc i64 %24 to i8
  %28 = getelementptr inbounds i8, i8* %8, i64 55
  store i8 %27, i8* %28, align 1
  br label %47

29:                                               ; preds = %19
  %30 = icmp ugt i64 %24, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast i8* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %32) #14
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %24, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #15
  %41 = bitcast i8* %12 to i8**
  store i8* %40, i8** %41, align 8
  %42 = or i64 %35, -9223372036854775808
  %43 = getelementptr inbounds i8, i8* %8, i64 48
  %44 = bitcast i8* %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %8, i64 40
  %46 = bitcast i8* %45 to i64*
  store i64 %24, i64* %46, align 8
  br label %47

47:                                               ; preds = %38, %26
  %48 = phi i8* [ %12, %26 ], [ %40, %38 ]
  %49 = bitcast i8* %48 to i16*
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %145, label %53

53:                                               ; preds = %47
  %54 = shl i64 %24, 1
  %55 = add i64 %54, 2
  %56 = getelementptr i8, i8* %48, i64 %55
  %57 = add i64 %24, 1
  %58 = getelementptr i16, i16* %21, i64 %57
  %59 = bitcast i16* %58 to i8*
  %60 = icmp ult i8* %48, %59
  %61 = icmp ugt i8* %56, %22
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %53
  %64 = and i64 %51, -16
  %65 = sub i64 %50, %64
  %66 = getelementptr i16, i16* %21, i64 %64
  %67 = getelementptr i16, i16* %49, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %21, i64 %76
  %79 = getelementptr i16, i16* %49, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !65
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !65
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !68, !noalias !65
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !68, !noalias !65
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %21, i64 %88
  %90 = getelementptr i16, i16* %49, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !65
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !65
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !68, !noalias !65
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !68, !noalias !65
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %21, i64 %99
  %101 = getelementptr i16, i16* %49, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !65
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !65
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !68, !noalias !65
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !68, !noalias !65
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %21, i64 %110
  %112 = getelementptr i16, i16* %49, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !65
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !65
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !68, !noalias !65
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !68, !noalias !65
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !70

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %21, i64 %128
  %131 = getelementptr i16, i16* %49, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !65
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !65
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !68, !noalias !65
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !68, !noalias !65
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !71

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %51, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %53, %47
  %146 = phi i64 [ %50, %53 ], [ %50, %47 ], [ %65, %143 ]
  %147 = phi i16* [ %21, %53 ], [ %21, %47 ], [ %66, %143 ]
  %148 = phi i16* [ %49, %53 ], [ %49, %47 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !72

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !73

198:                                              ; preds = %163, %168, %143, %17
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.626"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.626", %"class.std::__1::__tree.626"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %106, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %19 = select i1 %11, i16* %17, i16* %18
  br label %20

20:                                               ; preds = %64, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %66, %64 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %67, %64 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %57, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  %39 = select i1 %27, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %52, %35
  %41 = phi i64 [ %53, %52 ], [ %33, %35 ]
  %42 = phi i16* [ %55, %52 ], [ %19, %35 ]
  %43 = phi i16* [ %54, %52 ], [ %39, %35 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  br label %64

50:                                               ; preds = %40
  %51 = icmp ult i16 %45, %44
  br i1 %51, label %61, label %52

52:                                               ; preds = %50
  %53 = add i64 %41, -1
  %54 = getelementptr inbounds i16, i16* %43, i64 1
  %55 = getelementptr inbounds i16, i16* %42, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %57, label %40

57:                                               ; preds = %52, %20
  %58 = icmp ult i64 %31, %15
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node"**
  br i1 %58, label %64, label %61

61:                                               ; preds = %50, %57
  %62 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %61, %57, %47
  %65 = phi %"class.std::__1::__tree_node"** [ %62, %61 ], [ %49, %47 ], [ %60, %57 ]
  %66 = phi %"class.std::__1::__tree_end_node"* [ %63, %61 ], [ %21, %47 ], [ %21, %57 ]
  %67 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %68 = icmp eq %"class.std::__1::__tree_node"* %67, null
  br i1 %68, label %69, label %20

69:                                               ; preds = %64
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %66, %3
  br i1 %70, label %106, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 4
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 5
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp ult i64 %81, %15
  %83 = select i1 %82, i64 %81, i64 %15
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %104, label %85

85:                                               ; preds = %71
  %86 = bitcast %"class.std::__1::__tree_end_node"* %72 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"class.std::__1::__tree_end_node"* %72 to i16*
  %89 = select i1 %76, i16* %87, i16* %88
  br label %90

90:                                               ; preds = %99, %85
  %91 = phi i64 [ %100, %99 ], [ %83, %85 ]
  %92 = phi i16* [ %102, %99 ], [ %89, %85 ]
  %93 = phi i16* [ %101, %99 ], [ %19, %85 ]
  %94 = load i16, i16* %93, align 2
  %95 = load i16, i16* %92, align 2
  %96 = icmp ult i16 %94, %95
  br i1 %96, label %106, label %97

97:                                               ; preds = %90
  %98 = icmp ult i16 %95, %94
  br i1 %98, label %107, label %99

99:                                               ; preds = %97
  %100 = add i64 %91, -1
  %101 = getelementptr inbounds i16, i16* %93, i64 1
  %102 = getelementptr inbounds i16, i16* %92, i64 1
  %103 = icmp eq i64 %100, 0
  br i1 %103, label %104, label %90

104:                                              ; preds = %99, %71
  %105 = icmp ult i64 %15, %81
  br i1 %105, label %106, label %107

106:                                              ; preds = %90, %69, %2, %104
  br label %107

107:                                              ; preds = %97, %104, %106
  %108 = phi %"class.std::__1::__tree_end_node"* [ %3, %106 ], [ %66, %104 ], [ %66, %97 ]
  ret %"class.std::__1::__tree_end_node"* %108
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #1 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !74
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !74
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !77, !noalias !74
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !77, !noalias !74
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !74
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !74
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !77, !noalias !74
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !77, !noalias !74
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !74
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !74
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !77, !noalias !74
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !77, !noalias !74
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !74
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !74
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !77, !noalias !74
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !77, !noalias !74
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !79

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !74
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !74
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !77, !noalias !74
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !77, !noalias !74
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !80

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !81

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !82

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !83

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !84

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !85

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !87
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !87
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !90, !noalias !87
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !90, !noalias !87
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !87
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !87
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !90, !noalias !87
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !90, !noalias !87
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !87
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !87
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !90, !noalias !87
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !90, !noalias !87
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !87
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !87
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !90, !noalias !87
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !90, !noalias !87
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !92

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !87
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !87
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !90, !noalias !87
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !90, !noalias !87
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !93

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !94

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !95

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.626"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.626"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.626"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService*, %"class.std::__1::basic_string.52"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare void @_ZN18TemplateURLService15GetTemplateURLsEv(%"class.std::__1::vector.643"* sret, %class.TemplateURLService*) local_unnamed_addr #2

declare zeroext i1 @_ZNK18TemplateURLService17ShowInDefaultListEPK11TemplateURL(%class.TemplateURLService*, %class.TemplateURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.238"*, %"class.std::__1::basic_string.52"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.652"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.238"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string.52"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.654"**
  %10 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.654"* %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 64) #15, !noalias !96
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string.52"*, %"class.std::__1::basic_string.52"** %15, align 8, !noalias !96
  %17 = bitcast %"class.std::__1::basic_string.52"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !96
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string.52"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #13, !noalias !96
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string.52"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !96
  %27 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !96
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.52"* %24, i8* %26, i64 %28) #13, !noalias !96
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  %31 = bitcast i8* %30 to %class.TemplateURL**
  store %class.TemplateURL* null, %class.TemplateURL** %31, align 8, !noalias !96
  %32 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %13 to %"class.std::__1::__tree_node.654"*
  %35 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #13
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %29
  %45 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %46 = bitcast %"class.std::__1::__tree.238"* %0 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %48

48:                                               ; preds = %44, %29
  %49 = phi %"class.std::__1::__tree_node_base"* [ %35, %29 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %51, %"class.std::__1::__tree_node_base"* %49) #13
  %52 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  br label %55

55:                                               ; preds = %48, %5
  %56 = phi i8 [ 1, %48 ], [ 0, %5 ]
  %57 = phi %"class.std::__1::__tree_node.654"* [ %34, %48 ], [ %10, %5 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %57, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %58, 0
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %59, i8 %56, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.238"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.654"**
  %6 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.654"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string.52"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.52"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.654"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #13
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.654"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.52"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL17HostPathKeyForURLRK4GURL(%"class.std::__1::basic_string.52"* noalias nocapture sret, %class.GURL* dereferenceable(120)) unnamed_addr #1 {
  %3 = alloca %"class.std::__1::allocator.59", align 1
  %4 = alloca %"class.std::__1::allocator.59", align 1
  %5 = alloca %"class.std::__1::basic_string.52", align 8
  %6 = alloca %"class.std::__1::basic_string.52", align 8
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %71, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string.52"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %13 = load i32, i32* %12, align 4, !noalias !99
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #13, !alias.scope !99
  br label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %18 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %19 = load i32, i32* %18, align 4, !noalias !99
  %20 = sext i32 %19 to i64
  %21 = sext i32 %13 to i64
  %22 = getelementptr inbounds %"class.std::__1::allocator.59", %"class.std::__1::allocator.59"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #13, !noalias !99
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.52"* nonnull %5, %"class.std::__1::basic_string.52"* dereferenceable(24) %17, i64 %20, i64 %21, %"class.std::__1::allocator.59"* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #13, !noalias !99
  br label %23

23:                                               ; preds = %15, %16
  %24 = bitcast %"class.std::__1::basic_string.52"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 1
  %26 = load i32, i32* %25, align 4, !noalias !104
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #13, !alias.scope !104
  %29 = bitcast %"class.std::__1::basic_string.52"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %32 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 0
  %33 = load i32, i32* %32, align 4, !noalias !104
  %34 = sext i32 %33 to i64
  %35 = sext i32 %26 to i64
  %36 = getelementptr inbounds %"class.std::__1::allocator.59", %"class.std::__1::allocator.59"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #13, !noalias !104
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.52"* nonnull %6, %"class.std::__1::basic_string.52"* dereferenceable(24) %31, i64 %34, i64 %35, %"class.std::__1::allocator.59"* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #13, !noalias !104
  %37 = bitcast %"class.std::__1::basic_string.52"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1, !noalias !109
  %40 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !noalias !109
  %42 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !109
  br label %44

44:                                               ; preds = %28, %30
  %45 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %29, %28 ], [ %37, %30 ]
  %46 = phi i64 [ 0, %28 ], [ %43, %30 ]
  %47 = phi i8* [ null, %28 ], [ %41, %30 ]
  %48 = phi i8 [ 0, %28 ], [ %39, %30 ]
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %50 = icmp slt i8 %48, 0
  %51 = zext i8 %48 to i64
  %52 = select i1 %50, i8* %47, i8* %24
  %53 = select i1 %50, i64 %46, i64 %51
  %54 = call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.52"* nonnull %5, i8* %52, i64 %53) #13, !noalias !109
  %55 = bitcast %"class.std::__1::basic_string.52"* %0 to i8*
  %56 = bitcast %"class.std::__1::basic_string.52"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #13, !noalias !109
  %57 = load i8, i8* %49, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %44, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  %63 = bitcast %"class.std::__1::basic_string.52"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %73

71:                                               ; preds = %2
  %72 = bitcast %"class.std::__1::basic_string.52"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #13
  br label %73

73:                                               ; preds = %71, %70
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #11

declare zeroext i1 @_ZNK14TemplateURLRef19SupportsReplacementERK15SearchTermsData(%class.TemplateURLRef*, %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN14TemplateURLRef15SearchTermsArgsC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.TemplateURLRef::SearchTermsArgs"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14TemplateURLRef15SearchTermsArgsD1Ev(%"struct.TemplateURLRef::SearchTermsArgs"*) unnamed_addr #11

declare dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.52"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.52"*, %"class.std::__1::basic_string.52"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.59"* dereferenceable(1)) unnamed_addr #2

declare void @_ZNK14TemplateURLRef18ReplaceSearchTermsERKNS_15SearchTermsArgsERK15SearchTermsDataPNSt3__14pairINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESD_EE(%"class.std::__1::basic_string.52"* sret, %class.TemplateURLRef*, %"struct.TemplateURLRef::SearchTermsArgs"* dereferenceable(536), %class.SearchTermsData* dereferenceable(8), %"struct.std::__1::pair.664"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.553"*, %struct.ImportedBookmarkEntry* dereferenceable(184)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.ImportedBookmarkEntry** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.553"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.553"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.ImportedBookmarkEntry** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %struct.ImportedBookmarkEntry*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.ImportedBookmarkEntry* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 %9
  %35 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 %32
  %36 = ptrtoint %struct.ImportedBookmarkEntry* %35 to i64
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %34, %struct.ImportedBookmarkEntry* dereferenceable(184) %1) #13
  %37 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %34, i64 1
  %38 = ptrtoint %struct.ImportedBookmarkEntry* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %41 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %3, align 8
  %42 = icmp eq %struct.ImportedBookmarkEntry* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.ImportedBookmarkEntry* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %struct.ImportedBookmarkEntry* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.ImportedBookmarkEntry* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %46, i64 -1
  %49 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %47, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %48, %struct.ImportedBookmarkEntry* dereferenceable(184) %49) #13
  %50 = icmp eq %struct.ImportedBookmarkEntry* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %53 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %3, align 8
  %54 = ptrtoint %struct.ImportedBookmarkEntry* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %struct.ImportedBookmarkEntry* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %struct.ImportedBookmarkEntry* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %57, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %58) #13
  %59 = icmp eq %struct.ImportedBookmarkEntry* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %struct.ImportedBookmarkEntry* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %struct.ImportedBookmarkEntry* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %61, i64 0, i32 0
  tail call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry* dereferenceable(184)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !112
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !112
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !115, !noalias !112
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !115, !noalias !112
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !112
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !112
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !115, !noalias !112
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !115, !noalias !112
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !112
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !112
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !115, !noalias !112
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !115, !noalias !112
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !112
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !112
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !115, !noalias !112
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !115, !noalias !112
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !117

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !112
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !112
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !115, !noalias !112
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !115, !noalias !112
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !118

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !119

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !120

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !121
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !121
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !124, !noalias !121
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !124, !noalias !121
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !121
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !121
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !124, !noalias !121
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !124, !noalias !121
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !121
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !121
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !124, !noalias !121
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !124, !noalias !121
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !121
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !121
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !124, !noalias !121
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !124, !noalias !121
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !126

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !121
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !121
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !124, !noalias !121
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !124, !noalias !121
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !127

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !128

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !129

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !130
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !130
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !133, !noalias !130
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !133, !noalias !130
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !130
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !130
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !133, !noalias !130
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !133, !noalias !130
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !130
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !130
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !133, !noalias !130
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !133, !noalias !130
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !130
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !130
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !133, !noalias !130
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !133, !noalias !130
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !135

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !130
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !130
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !133, !noalias !130
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !133, !noalias !130
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !136

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !137

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !138

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.390"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.390", %"class.std::__1::vector.390"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.390"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.390", %"class.std::__1::vector.390"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #13
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #13
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #14
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #15
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !139
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !139
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !142, !noalias !139
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !142, !noalias !139
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !139
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !139
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !142, !noalias !139
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !142, !noalias !139
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !139
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !139
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !142, !noalias !139
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !142, !noalias !139
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !139
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !139
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !142, !noalias !139
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !142, !noalias !139
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !144

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !139
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !139
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !142, !noalias !139
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !142, !noalias !139
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !145

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !146

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !147

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.390", %"class.std::__1::vector.390"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #15
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.390"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #15
  %275 = bitcast %"class.std::__1::vector.390"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #13
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.390"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #14
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #15
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector.390", %"class.std::__1::vector.390"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.390"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #13
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #14
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #14
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #15
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !148
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !148
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !151, !noalias !148
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !151, !noalias !148
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !148
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !148
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !151, !noalias !148
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !151, !noalias !148
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !148
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !148
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !151, !noalias !148
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !151, !noalias !148
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !148
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !148
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !151, !noalias !148
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !151, !noalias !148
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !153

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !148
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !148
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !151, !noalias !148
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !151, !noalias !148
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !154

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !155

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !156

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.562"*, %"class.std::__1::__tree_node.667"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.667"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.667"* %1 to %"class.std::__1::__tree_node.667"**
  %6 = load %"class.std::__1::__tree_node.667"*, %"class.std::__1::__tree_node.667"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.562"* %0, %"class.std::__1::__tree_node.667"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.667", %"class.std::__1::__tree_node.667"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.667"**
  %9 = load %"class.std::__1::__tree_node.667"*, %"class.std::__1::__tree_node.667"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.562"* %0, %"class.std::__1::__tree_node.667"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.667"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.238"*, %"class.std::__1::__tree_node.654"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.654"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.654"* %1 to %"class.std::__1::__tree_node.654"**
  %6 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.238"* %0, %"class.std::__1::__tree_node.654"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.654"**
  %9 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.238"* %0, %"class.std::__1::__tree_node.654"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.std::__1::pair.653"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair.653", %"struct.std::__1::pair.653"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.654"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.238"*, %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.238", %"class.std::__1::__tree.238"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.654"**
  %5 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.654"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string.52"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.52"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.654"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.654"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.654", %"class.std::__1::__tree_node.654"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.654"* %22 to %"class.std::__1::__tree_node.654"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.654"** %50, %"class.std::__1::__tree_node.654"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.654"*, %"class.std::__1::__tree_node.654"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.654"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperI18WebDataServiceBaseE8DoDeleteEPKv(i8*) #1 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.WebDataServiceBase*
  %5 = bitcast i8* %0 to void (%class.WebDataServiceBase*)***
  %6 = load void (%class.WebDataServiceBase*)**, void (%class.WebDataServiceBase*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.WebDataServiceBase*)*, void (%class.WebDataServiceBase*)** %6, i64 5
  %8 = load void (%class.WebDataServiceBase*)*, void (%class.WebDataServiceBase*)** %7, align 8
  tail call void %8(%class.WebDataServiceBase* nonnull %4) #13
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN12_GLOBAL__N_124GenerateUniqueFolderNameEPN9bookmarks13BookmarkModelERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN12_GLOBAL__N_124GenerateUniqueFolderNameEPN9bookmarks13BookmarkModelERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18, !4}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!18}
!24 = !{!25}
!25 = distinct !{!25, !22}
!26 = !{!18, !21}
!27 = distinct !{!27, !12}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14}
!30 = distinct !{!30, !12}
!31 = !{!32, !4}
!32 = distinct !{!32, !33, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!34 = !{!32}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !14}
!43 = distinct !{!43, !12}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeIPKN9bookmarks12BookmarkNodeENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !12}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14}
!55 = distinct !{!55, !12}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !12}
!62 = distinct !{!62, !14}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !12}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !12}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14}
!73 = distinct !{!73, !12}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !12}
!80 = distinct !{!80, !14}
!81 = distinct !{!81, !14}
!82 = distinct !{!82, !12}
!83 = distinct !{!83, !12}
!84 = distinct !{!84, !14}
!85 = distinct !{!85, !86, !12}
!86 = !{!"llvm.loop.unroll.runtime.disable"}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !12}
!93 = distinct !{!93, !14}
!94 = distinct !{!94, !14}
!95 = distinct !{!95, !12}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_: argument 0"}
!98 = distinct !{!98, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP11TemplateURLEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_"}
!99 = !{!100, !102}
!100 = distinct !{!100, !101, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!101 = distinct !{!101, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!102 = distinct !{!102, !103, !"_ZNK4GURL4hostEv: argument 0"}
!103 = distinct !{!103, !"_ZNK4GURL4hostEv"}
!104 = !{!105, !107}
!105 = distinct !{!105, !106, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!106 = distinct !{!106, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!107 = distinct !{!107, !108, !"_ZNK4GURL4pathEv: argument 0"}
!108 = distinct !{!108, !"_ZNK4GURL4pathEv"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !12}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !14}
!120 = distinct !{!120, !12}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !12}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !14}
!129 = distinct !{!129, !12}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !12}
!136 = distinct !{!136, !14}
!137 = distinct !{!137, !14}
!138 = distinct !{!138, !12}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !12}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14}
!147 = distinct !{!147, !12}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = distinct !{!153, !12}
!154 = distinct !{!154, !14}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !12}
