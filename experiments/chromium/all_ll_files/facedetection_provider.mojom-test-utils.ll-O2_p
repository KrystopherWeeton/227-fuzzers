; ModuleID = 'gen/services/shape_detection/public/mojom/facedetection_provider.mojom-test-utils.cc'
source_filename = "gen/services/shape_detection/public/mojom/facedetection_provider.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter" = type { %"class.shape_detection::mojom::FaceDetectionProvider"* }
%"class.shape_detection::mojom::FaceDetectionProvider" = type { i32 (...)** }
%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting" = type { %"class.shape_detection::mojom::FaceDetectionProvider" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.3, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4" }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.shape_detection::mojom::FaceDetectorOptions", i32 }
%"class.shape_detection::mojom::FaceDetectorOptions" = type <{ i32, i8, [3 x i8] }>

$_ZN15shape_detection5mojom21FaceDetectionProviderD2Ev = comdat any

$_ZN15shape_detection5mojom42FaceDetectionProviderInterceptorForTestingD0Ev = comdat any

@_ZTVN15shape_detection5mojom42FaceDetectionProviderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.shape_detection::mojom::FaceDetectionProvider"*)* @_ZN15shape_detection5mojom21FaceDetectionProviderD2Ev to i8*), i8* bitcast (void (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)* @_ZN15shape_detection5mojom42FaceDetectionProviderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)* @_ZN15shape_detection5mojom42FaceDetectionProviderInterceptorForTesting19CreateFaceDetectionEN4mojo15PendingReceiverINS0_13FaceDetectionEEENS2_16InlinedStructPtrINS0_19FaceDetectorOptionsEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterC1EPNS0_21FaceDetectionProviderE = hidden unnamed_addr alias void (%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"*, %"class.shape_detection::mojom::FaceDetectionProvider"*), void (%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"*, %"class.shape_detection::mojom::FaceDetectionProvider"*)* @_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterC2EPNS0_21FaceDetectionProviderE
@_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"*), void (%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"*)* @_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15shape_detection5mojom42FaceDetectionProviderInterceptorForTesting19CreateFaceDetectionEN4mojo15PendingReceiverINS0_13FaceDetectionEEENS2_16InlinedStructPtrINS0_19FaceDetectorOptionsEEE(%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.mojo::InlinedStructPtr", align 8
  %7 = bitcast %"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"* %0 to %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)***
  %8 = load %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)**, %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)*, %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)** %8, i64 3
  %10 = load %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)*, %"class.shape_detection::mojom::FaceDetectionProvider"* (%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.shape_detection::mojom::FaceDetectionProvider"* %10(%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"* %0) #8
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %12, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %13) #8
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0
  call void @_ZN15shape_detection5mojom19FaceDetectorOptionsC1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"* nonnull %14) #8
  %15 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 1
  store i32 0, i32* %15, align 8
  call void @_ZN15shape_detection5mojom19FaceDetectorOptionsD1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"* nonnull %14) #8
  call void @_ZN15shape_detection5mojom19FaceDetectorOptionsC1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"* nonnull %14) #8
  %16 = bitcast i64* %4 to %"class.shape_detection::mojom::FaceDetectorOptions"*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %4, align 8
  %20 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  %21 = bitcast %"class.mojo::InlinedStructPtr"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 4 %21, i64 5, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* nonnull align 8 %17, i64 5, i1 false) #8
  call void @_ZN15shape_detection5mojom19FaceDetectorOptionsD1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %23 = load i32, i32* %15, align 8
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %15, align 8
  store i32 %23, i32* %22, align 4
  %25 = bitcast %"class.shape_detection::mojom::FaceDetectionProvider"* %11 to void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)***
  %26 = load void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)**, void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)** %26, i64 2
  %28 = load void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.shape_detection::mojom::FaceDetectionProvider"*, %"class.mojo::PendingReceiver"*, %"class.mojo::InlinedStructPtr"*)** %27, align 8
  call void %28(%"class.shape_detection::mojom::FaceDetectionProvider"* %11, %"class.mojo::PendingReceiver"* nonnull %5, %"class.mojo::InlinedStructPtr"* nonnull %6) #8
  call void @_ZN15shape_detection5mojom19FaceDetectorOptionsD1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"* nonnull %14) #8
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %12) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterC2EPNS0_21FaceDetectionProviderE(%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"* nocapture, %"class.shape_detection::mojom::FaceDetectionProvider"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter", %"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.shape_detection::mojom::FaceDetectionProvider"* %1, %"class.shape_detection::mojom::FaceDetectionProvider"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15shape_detection5mojom32FaceDetectionProviderAsyncWaiterD2Ev(%"class.shape_detection::mojom::FaceDetectionProviderAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15shape_detection5mojom21FaceDetectionProviderD2Ev(%"class.shape_detection::mojom::FaceDetectionProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15shape_detection5mojom42FaceDetectionProviderInterceptorForTestingD0Ev(%"class.shape_detection::mojom::FaceDetectionProviderInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN15shape_detection5mojom19FaceDetectorOptionsD1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN15shape_detection5mojom19FaceDetectorOptionsC1Ev(%"class.shape_detection::mojom::FaceDetectorOptions"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
