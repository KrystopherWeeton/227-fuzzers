; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/rtp_dependency_descriptor_reader.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/rtp_dependency_descriptor_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtpDependencyDescriptorReader" = type { i8, %"struct.webrtc::DependencyDescriptor"*, %"class.rtc::BitBuffer", i32, i8, i8, i8, i8, %"struct.webrtc::FrameDependencyStructure"* }
%"class.rtc::BitBuffer" = type { i8*, i64, i64, i64 }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector.13", %"class.absl::InlinedVector.15", %"class.std::__1::vector" }
%"class.absl::InlinedVector.13" = type { %"class.absl::inlined_vector_internal::Storage.14" }
%"class.absl::inlined_vector_internal::Storage.14" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.0" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.15" = type { %"class.absl::inlined_vector_internal::Storage.16" }
%"class.absl::inlined_vector_internal::Storage.16" = type { %"class.absl::container_internal::CompressedTuple.17", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.17" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.18" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.18" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair.22" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.1" = type { %"class.absl::inlined_vector_internal::Storage.2" }
%"class.absl::inlined_vector_internal::Storage.2" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"struct.webrtc::DependencyDescriptor" = type { i8, i8, i32, %"struct.webrtc::FrameDependencyTemplate", %"class.absl::optional", %"class.absl::optional.8", %"class.std::__1::unique_ptr" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.webrtc::RenderResolution" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::FrameDependencyStructure"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m = comdat any

$_ZN6webrtc24FrameDependencyStructureD2Ev = comdat any

$_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE13__vdeallocateEv = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6ResizeINS0_19DefaultValueAdapterIS6_EEEEvT_m = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJiiEEERS3_DpOT_ = comdat any

@_ZN6webrtc29RtpDependencyDescriptorReaderC1EN3rtc9ArrayViewIKhLln4711EEEPKNS_24FrameDependencyStructureEPNS_20DependencyDescriptorE = hidden unnamed_addr alias void (%"class.webrtc::RtpDependencyDescriptorReader"*, i8*, i64, %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::DependencyDescriptor"*), void (%"class.webrtc::RtpDependencyDescriptorReader"*, i8*, i64, %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::DependencyDescriptor"*)* @_ZN6webrtc29RtpDependencyDescriptorReaderC2EN3rtc9ArrayViewIKhLln4711EEEPKNS_24FrameDependencyStructureEPNS_20DependencyDescriptorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReaderC2EN3rtc9ArrayViewIKhLln4711EEEPKNS_24FrameDependencyStructureEPNS_20DependencyDescriptorE(%"class.webrtc::RtpDependencyDescriptorReader"*, i8*, i64, %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::DependencyDescriptor"*) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  store %"struct.webrtc::DependencyDescriptor"* %4, %"struct.webrtc::DependencyDescriptor"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  tail call void @_ZN3rtc9BitBufferC1EPKhm(%"class.rtc::BitBuffer"* %9, i8* %1, i64 %2) #11
  %10 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 8
  %13 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  tail call void @_ZN6webrtc29RtpDependencyDescriptorReader19ReadMandatoryFieldsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  %14 = icmp ugt i64 %2, 3
  br i1 %14, label %15, label %16

15:                                               ; preds = %5
  tail call void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadExtendedFieldsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %17, align 8
  %19 = icmp eq %"struct.webrtc::FrameDependencyStructure"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  store %"struct.webrtc::FrameDependencyStructure"* %18, %"struct.webrtc::FrameDependencyStructure"** %12, align 8
  br label %23

21:                                               ; preds = %16
  store %"struct.webrtc::FrameDependencyStructure"* %3, %"struct.webrtc::FrameDependencyStructure"** %12, align 8
  %22 = icmp eq %"struct.webrtc::FrameDependencyStructure"* %3, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %20, %21
  %24 = phi %"struct.webrtc::FrameDependencyStructure"* [ %18, %20 ], [ %3, %21 ]
  %25 = load i8, i8* %7, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %21
  store i8 1, i8* %7, align 8
  br label %46

28:                                               ; preds = %23
  %29 = load i8, i8* %11, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %24, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #11
  store i32 0, i32* %6, align 4
  %36 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %9, i64 %34, i32* nonnull dereferenceable(4) %6) #11
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  store i8 1, i8* %7, align 8
  br label %38

38:                                               ; preds = %31, %37
  %39 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #11
  %40 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast i8* %40 to i64*
  %42 = zext i32 %39 to i64
  %43 = shl nuw i64 %42, 32
  %44 = or i64 %43, 1
  store i64 %44, i64* %41, align 4
  br label %45

45:                                               ; preds = %28, %38
  call void @_ZN6webrtc29RtpDependencyDescriptorReader29ReadFrameDependencyDefinitionEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  br label %46

46:                                               ; preds = %45, %27
  ret void
}

declare void @_ZN3rtc9BitBufferC1EPKhm(%"class.rtc::BitBuffer"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader19ReadMandatoryFieldsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %8 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %7, i64 1, i32* nonnull dereferenceable(4) %5) #11
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %10, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  %13 = icmp ne i32 %12, 0
  %14 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %15 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %14, align 8
  %16 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %15, i64 0, i32 0
  %17 = zext i1 %13 to i8
  store i8 %17, i8* %16, align 8
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  store i32 0, i32* %4, align 4
  %19 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %7, i64 1, i32* nonnull dereferenceable(4) %4) #11
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %21, align 8
  br label %22

22:                                               ; preds = %11, %20
  %23 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  %24 = icmp ne i32 %23, 0
  %25 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %14, align 8
  %26 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %25, i64 0, i32 1
  %27 = zext i1 %24 to i8
  store i8 %27, i8* %26, align 1
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 0, i32* %3, align 4
  %29 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %7, i64 6, i32* nonnull dereferenceable(4) %3) #11
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %31, align 8
  br label %32

32:                                               ; preds = %22, %30
  %33 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  %34 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 3
  store i32 %33, i32* %34, align 8
  %35 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #11
  store i32 0, i32* %2, align 4
  %36 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %7, i64 16, i32* nonnull dereferenceable(4) %2) #11
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %38, align 8
  br label %39

39:                                               ; preds = %32, %37
  %40 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #11
  %41 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %14, align 8
  %42 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %41, i64 0, i32 2
  store i32 %40, i32* %42, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadExtendedFieldsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %9 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %8, i64 1, i32* nonnull dereferenceable(4) %6) #11
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %11, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  %14 = icmp eq i32 %13, 0
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 0, i32* %5, align 4
  %16 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %8, i64 1, i32* nonnull dereferenceable(4) %5) #11
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %12, %17
  %20 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  %21 = icmp ne i32 %20, 0
  %22 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 4
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 4
  %24 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  store i32 0, i32* %4, align 4
  %25 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %8, i64 1, i32* nonnull dereferenceable(4) %4) #11
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %27, align 8
  br label %28

28:                                               ; preds = %19, %26
  %29 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  %30 = icmp ne i32 %29, 0
  %31 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 5
  %32 = zext i1 %30 to i8
  store i8 %32, i8* %31, align 1
  %33 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #11
  store i32 0, i32* %3, align 4
  %34 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %8, i64 1, i32* nonnull dereferenceable(4) %3) #11
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %36, align 8
  br label %37

37:                                               ; preds = %28, %35
  %38 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #11
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 6
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 2
  %42 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #11
  store i32 0, i32* %2, align 4
  %43 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %8, i64 1, i32* nonnull dereferenceable(4) %2) #11
  br i1 %43, label %46, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %45, align 8
  br label %46

46:                                               ; preds = %37, %44
  %47 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #11
  %48 = icmp ne i32 %47, 0
  %49 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 7
  %50 = zext i1 %48 to i8
  store i8 %50, i8* %49, align 1
  br i1 %14, label %68, label %51

51:                                               ; preds = %46
  call void @_ZN6webrtc29RtpDependencyDescriptorReader31ReadTemplateDependencyStructureEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  %52 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %53 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %52, align 8
  %54 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %53, i64 0, i32 6, i32 0, i32 0, i32 0
  %55 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %54, align 8
  %56 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = shl nsw i64 -1, %58
  %60 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %53, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %51
  store i8 1, i8* %60, align 4
  br label %64

64:                                               ; preds = %51, %63
  %65 = trunc i64 %59 to i32
  %66 = xor i32 %65, -1
  %67 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %53, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %66, i32* %67, align 4
  br label %68

68:                                               ; preds = %46, %64
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc29RtpDependencyDescriptorReader8ReadBitsEm(%"class.webrtc::RtpDependencyDescriptorReader"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %6 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %5, i64 %1, i32* nonnull dereferenceable(4) %3) #11
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %8, align 8
  br label %9

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader29ReadFrameDependencyDefinitionEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 64
  %7 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 8
  %8 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %7, align 8
  %9 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sub i32 %6, %10
  %12 = srem i32 %11, 64
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %8, i64 0, i32 5
  %15 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %8, i64 0, i32 5, i32 0, i32 1
  %16 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 104
  %22 = icmp ugt i64 %21, %13
  %23 = inttoptr i64 %19 to %"struct.webrtc::FrameDependencyTemplate"*
  br i1 %22, label %26, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %25, align 8
  br label %186

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13
  %28 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %29 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %28, align 8
  %30 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %29, i64 0, i32 3
  %31 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %27 to i64*
  %32 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %30 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %27, %30
  br i1 %34, label %75, label %35, !prof !3

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  %40 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 2, i32 0, i32 1, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 2, i32 0, i32 1
  %43 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %42 to i32*
  %44 = select i1 %39, i32* %43, i32* %41
  %45 = lshr i64 %37, 1
  %46 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %29, i64 0, i32 3, i32 2, i32 0
  %47 = shl nuw i64 %45, 2
  %48 = ashr exact i64 %47, 2
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %46, i32* %44, i64 %48) #11
  %49 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 3, i32 0, i32 1, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 3, i32 0, i32 1
  %56 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %55 to i32*
  %57 = select i1 %52, i32* %56, i32* %54
  %58 = lshr i64 %50, 1
  %59 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %29, i64 0, i32 3, i32 3, i32 0
  %60 = shl nuw i64 %58, 2
  %61 = ashr exact i64 %60, 2
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.2"* %59, i32* %57, i64 %61) #11
  %62 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 4, i32 0, i32 1, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %23, i64 %13, i32 4, i32 0, i32 1
  %69 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %68 to i32*
  %70 = select i1 %65, i32* %69, i32* %67
  %71 = lshr i64 %63, 1
  %72 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %29, i64 0, i32 3, i32 4, i32 0
  %73 = shl nuw i64 %71, 2
  %74 = ashr exact i64 %73, 2
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.2"* %72, i32* %70, i64 %74) #11
  br label %75

75:                                               ; preds = %26, %35
  %76 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 5
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %108, label %79

79:                                               ; preds = %75
  %80 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %28, align 8
  %81 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %80, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %80, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  br label %91

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %80, i64 0, i32 3, i32 2, i32 0, i32 1
  %90 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %89 to i32*
  br label %91

91:                                               ; preds = %88, %85
  %92 = phi i32* [ %87, %85 ], [ %90, %88 ]
  %93 = lshr i64 %82, 1
  %94 = getelementptr inbounds i32, i32* %92, i64 %93
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %108, label %96

96:                                               ; preds = %91
  %97 = bitcast i32* %2 to i8*
  %98 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %99 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  br label %100

100:                                              ; preds = %104, %96
  %101 = phi i32* [ %92, %96 ], [ %106, %104 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #11
  store i32 0, i32* %2, align 4
  %102 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %98, i64 2, i32* nonnull dereferenceable(4) %2) #11
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  store i8 1, i8* %99, align 8
  br label %104

104:                                              ; preds = %103, %100
  %105 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #11
  store i32 %105, i32* %101, align 4
  %106 = getelementptr inbounds i32, i32* %101, i64 1
  %107 = icmp eq i32* %106, %94
  br i1 %107, label %108, label %100

108:                                              ; preds = %104, %91, %75
  %109 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 6
  %110 = load i8, i8* %109, align 2, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %108
  call void @_ZN6webrtc29RtpDependencyDescriptorReader15ReadFrameFdiffsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  br label %113

113:                                              ; preds = %108, %112
  %114 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 7
  %115 = load i8, i8* %114, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %146, label %117

117:                                              ; preds = %113
  %118 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %28, align 8
  %119 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %118, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %118, i64 0, i32 3, i32 4, i32 0, i32 1, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  br label %129

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %118, i64 0, i32 3, i32 4, i32 0, i32 1
  %128 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %127 to i32*
  br label %129

129:                                              ; preds = %126, %123
  %130 = phi i32* [ %125, %123 ], [ %128, %126 ]
  %131 = lshr i64 %120, 1
  %132 = getelementptr inbounds i32, i32* %130, i64 %131
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %146, label %134

134:                                              ; preds = %129
  %135 = bitcast i32* %3 to i8*
  %136 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %137 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  br label %138

138:                                              ; preds = %142, %134
  %139 = phi i32* [ %130, %134 ], [ %144, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #11
  store i32 0, i32* %3, align 4
  %140 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %136, i64 8, i32* nonnull dereferenceable(4) %3) #11
  br i1 %140, label %142, label %141

141:                                              ; preds = %138
  store i8 1, i8* %137, align 8
  br label %142

142:                                              ; preds = %141, %138
  %143 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #11
  store i32 %143, i32* %139, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = icmp eq i32* %144, %132
  br i1 %145, label %146, label %138

146:                                              ; preds = %142, %129, %113
  %147 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %7, align 8
  %148 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %147, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = icmp ult i64 %149, 2
  %151 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %28, align 8
  br i1 %150, label %152, label %154

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %151, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %153, align 4
  br label %186

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %151, i64 0, i32 3, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = sext i32 %156 to i64
  %158 = lshr i64 %149, 1
  %159 = icmp ugt i64 %158, %157
  br i1 %159, label %161, label %160, !prof !4

160:                                              ; preds = %154
  call void @llvm.trap() #11
  unreachable

161:                                              ; preds = %154
  %162 = and i64 %149, 1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %147, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %166 = load %"class.webrtc::RenderResolution"*, %"class.webrtc::RenderResolution"** %165, align 8
  br label %170

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %147, i64 0, i32 4, i32 0, i32 1
  %169 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %168 to %"class.webrtc::RenderResolution"*
  br label %170

170:                                              ; preds = %164, %167
  %171 = phi %"class.webrtc::RenderResolution"* [ %166, %164 ], [ %169, %167 ]
  %172 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %171, i64 %157
  %173 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %151, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %174 = load i8, i8* %173, align 4, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %151, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = bitcast %"class.webrtc::RenderResolution"* %172 to i64*
  %179 = bitcast %"class.webrtc::RenderResolution"* %177 to i64*
  %180 = load i64, i64* %178, align 4
  store i64 %180, i64* %179, align 4
  br label %186

181:                                              ; preds = %170
  %182 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %151, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %183 = bitcast %"class.webrtc::RenderResolution"* %172 to i64*
  %184 = bitcast %union.anon* %182 to i64*
  %185 = load i64, i64* %183, align 4
  store i64 %185, i64* %184, align 4
  store i8 1, i8* %173, align 4
  br label %186

186:                                              ; preds = %181, %176, %152, %24
  ret void
}

declare zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"*, i64, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc29RtpDependencyDescriptorReader16ReadNonSymmetricEm(%"class.webrtc::RtpDependencyDescriptorReader"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %6 = trunc i64 %1 to i32
  %7 = call zeroext i1 @_ZN3rtc9BitBuffer16ReadNonSymmetricEjRj(%"class.rtc::BitBuffer"* %5, i32 %6, i32* nonnull dereferenceable(4) %3) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %9, align 8
  br label %10

10:                                               ; preds = %8, %2
  %11 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i32 %11
}

declare zeroext i1 @_ZN3rtc9BitBuffer16ReadNonSymmetricEjRj(%"class.rtc::BitBuffer"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader31ReadTemplateDependencyStructureEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = tail call i8* @_Znwm(i64 128) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 128, i1 false) #11
  %6 = ptrtoint i8* %5 to i64
  %7 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %8 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %7, align 8
  %9 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %8, i64 0, i32 6
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %6, i64* %12, align 8
  %13 = icmp eq %"struct.webrtc::FrameDependencyStructure"* %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN6webrtc24FrameDependencyStructureD2Ev(%"struct.webrtc::FrameDependencyStructure"* nonnull %11) #11
  %15 = bitcast %"struct.webrtc::FrameDependencyStructure"* %11 to i8*
  tail call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %14, %1
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 0, i32* %4, align 4
  %18 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %19 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 6, i32* nonnull dereferenceable(4) %4) #11
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %21, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  %24 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %7, align 8
  %25 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %24, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %25, align 8
  %27 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %26, i64 0, i32 0
  store i32 %23, i32* %27, align 8
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  store i32 0, i32* %3, align 4
  %29 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 5, i32* nonnull dereferenceable(4) %3) #11
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %31, align 8
  br label %32

32:                                               ; preds = %22, %30
  %33 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  %34 = add i32 %33, 1
  %35 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %7, align 8
  %36 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %35, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %36, align 8
  %38 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %37, i64 0, i32 1
  store i32 %34, i32* %38, align 4
  call void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateLayersEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  call void @_ZN6webrtc29RtpDependencyDescriptorReader16ReadTemplateDtisEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  call void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateFdiffsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  call void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateChainsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  %39 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #11
  store i32 0, i32* %2, align 4
  %40 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 1, i32* nonnull dereferenceable(4) %2) #11
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br label %43

43:                                               ; preds = %32, %41
  %44 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  call void @_ZN6webrtc29RtpDependencyDescriptorReader15ReadResolutionsEv(%"class.webrtc::RtpDependencyDescriptorReader"* %0)
  br label %47

47:                                               ; preds = %43, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateLayersEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false) #11
  %7 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %5 to i64*
  %8 = bitcast %"class.std::__1::vector"* %3 to i64*
  %9 = bitcast i32* %2 to i8*
  %10 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  br label %13

12:                                               ; preds = %46
  store i8 1, i8* %11, align 8
  br label %52

13:                                               ; preds = %1, %46
  %14 = phi i32 [ 0, %1 ], [ %42, %46 ]
  %15 = phi i32 [ 0, %1 ], [ %43, %46 ]
  %16 = phi %"struct.webrtc::FrameDependencyTemplate"* [ null, %1 ], [ %49, %46 ]
  %17 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %6, align 16
  %18 = icmp ult %"struct.webrtc::FrameDependencyTemplate"* %16, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 104, i1 false) #11
  %21 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %16, i64 1
  %22 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %21 to i64
  store i64 %22, i64* %7, align 8
  br label %25

23:                                               ; preds = %13
  call void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"* nonnull %3) #11
  %24 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %5, align 8
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %21, %19 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %26, i64 -1, i32 1
  store i32 %14, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %26, i64 -1, i32 0
  store i32 %15, i32* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 0, i32* %2, align 4
  %29 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %10, i64 2, i32* nonnull dereferenceable(4) %2) #11
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  store i8 1, i8* %11, align 8
  br label %31

31:                                               ; preds = %25, %30
  %32 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  switch i32 %32, label %41 [
    i32 1, label %33
    i32 2, label %37
    i32 3, label %52
  ]

33:                                               ; preds = %31
  %34 = add nsw i32 %14, 1
  %35 = icmp sgt i32 %14, 6
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  store i8 1, i8* %11, align 8
  br label %52

37:                                               ; preds = %31
  %38 = add nsw i32 %15, 1
  %39 = icmp sgt i32 %15, 2
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i8 1, i8* %11, align 8
  br label %52

41:                                               ; preds = %31, %37, %33
  %42 = phi i32 [ 0, %37 ], [ %34, %33 ], [ %14, %31 ]
  %43 = phi i32 [ %38, %37 ], [ %15, %33 ], [ %15, %31 ]
  %44 = load i8, i8* %11, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = load i64, i64* %7, align 8
  %48 = load i64, i64* %8, align 16
  %49 = inttoptr i64 %47 to %"struct.webrtc::FrameDependencyTemplate"*
  %50 = sub i64 %47, %48
  %51 = icmp eq i64 %50, 6656
  br i1 %51, label %12, label %13

52:                                               ; preds = %41, %31, %12, %36, %40
  %53 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %54 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %53, align 8
  %55 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %54, i64 0, i32 6, i32 0, i32 0, i32 0
  %56 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %55, align 8
  %57 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %56, i64 0, i32 5
  call void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE13__vdeallocateEv(%"class.std::__1::vector"* %57) #11
  %58 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  %60 = bitcast %"class.std::__1::vector"* %57 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %6 to i64*
  %62 = load i64, i64* %61, align 16
  %63 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %56, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %63 to i64*
  store i64 %62, i64* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader16ReadTemplateDtisEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %4 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %5, align 8
  %7 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %6, i64 0, i32 5, i32 0, i32 0
  %8 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %7, align 8
  %9 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %6, i64 0, i32 5, i32 0, i32 1
  %10 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %9, align 8
  %11 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %8, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %6, i64 0, i32 1
  %14 = bitcast i32* %2 to i8*
  %15 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %17 = load i32, i32* %13, align 4
  br label %19

18:                                               ; preds = %35, %1
  ret void

19:                                               ; preds = %12, %35
  %20 = phi i32 [ %17, %12 ], [ %36, %35 ]
  %21 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %8, %12 ], [ %37, %35 ]
  %22 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %21, i64 0, i32 2
  %23 = icmp slt i32 %20, 0
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %19
  call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %19
  %26 = sext i32 %20 to i64
  %27 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %22, i64 0, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6ResizeINS0_19DefaultValueAdapterIS6_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %27, i64 %26) #11
  %28 = load i32, i32* %13, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %21, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %21, i64 0, i32 2, i32 0, i32 1
  %34 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %33 to i32*
  br label %39

35:                                               ; preds = %54, %25
  %36 = phi i32 [ %28, %25 ], [ %58, %54 ]
  %37 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %21, i64 1
  %38 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %37, %10
  br i1 %38, label %18, label %19

39:                                               ; preds = %30, %54
  %40 = phi i64 [ 0, %30 ], [ %57, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 0, i32* %2, align 4
  %41 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %15, i64 2, i32* nonnull dereferenceable(4) %2) #11
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  store i8 1, i8* %16, align 8
  br label %43

43:                                               ; preds = %39, %42
  %44 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  %45 = load i64, i64* %31, align 8
  %46 = lshr i64 %45, 1
  %47 = icmp ugt i64 %46, %40
  br i1 %47, label %49, label %48, !prof !4

48:                                               ; preds = %43
  call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %43
  %50 = and i64 %45, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = load i32*, i32** %32, align 8
  br label %54

54:                                               ; preds = %49, %52
  %55 = phi i32* [ %53, %52 ], [ %34, %49 ]
  %56 = getelementptr inbounds i32, i32* %55, i64 %40
  store i32 %44, i32* %56, align 4
  %57 = add nuw nsw i64 %40, 1
  %58 = load i32, i32* %13, align 4
  %59 = sext i32 %58 to i64
  %60 = icmp slt i64 %57, %59
  br i1 %60, label %39, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateFdiffsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %7 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %8, align 8
  %10 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 5, i32 0, i32 0
  %11 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %10, align 8
  %12 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 5, i32 0, i32 1
  %13 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %12, align 8
  %14 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %11, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i32* %2 to i8*
  %17 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %19 = bitcast i32* %3 to i8*
  %20 = bitcast i32* %5 to i8*
  %21 = bitcast i32* %4 to i8*
  br label %23

22:                                               ; preds = %39, %1
  ret void

23:                                               ; preds = %15, %39
  %24 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %11, %15 ], [ %40, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 0, i32* %2, align 4
  %25 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %17, i64 1, i32* nonnull dereferenceable(4) %2) #11
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  store i8 1, i8* %18, align 8
  br label %27

27:                                               ; preds = %23, %26
  %28 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %24, i64 0, i32 3
  %32 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %24, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast i32** %34 to i64*
  %36 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %24, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %24, i64 0, i32 3, i32 0, i32 1
  %38 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %37 to i64
  br label %42

39:                                               ; preds = %69, %27
  %40 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %24, i64 1
  %41 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %40, %13
  br i1 %41, label %22, label %23

42:                                               ; preds = %30, %69
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #11
  store i32 0, i32* %3, align 4
  %43 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %17, i64 4, i32* nonnull dereferenceable(4) %3) #11
  br i1 %43, label %45, label %44

44:                                               ; preds = %42
  store i8 1, i8* %18, align 8
  br label %45

45:                                               ; preds = %42, %44
  %46 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #11
  %47 = add i32 %46, 1
  store i32 %47, i32* %5, align 4
  %48 = load i64, i64* %33, align 8, !noalias !5
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = load i64, i64* %35, align 8, !noalias !5
  %53 = load i64, i64* %36, align 8, !noalias !5
  br label %54

54:                                               ; preds = %45, %51
  %55 = phi i64 [ %52, %51 ], [ %38, %45 ]
  %56 = phi i64 [ %53, %51 ], [ 4, %45 ]
  %57 = lshr i64 %48, 1
  %58 = icmp eq i64 %57, %56
  br i1 %58, label %64, label %59, !prof !3

59:                                               ; preds = %54
  %60 = inttoptr i64 %55 to i32*
  %61 = getelementptr inbounds i32, i32* %60, i64 %57
  store i32 %47, i32* %61, align 4
  %62 = load i64, i64* %33, align 8
  %63 = add i64 %62, 2
  store i64 %63, i64* %33, align 8
  br label %66

64:                                               ; preds = %54
  %65 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.2"* %32, i32* nonnull dereferenceable(4) %5) #11
  br label %66

66:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 0, i32* %4, align 4
  %67 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %17, i64 1, i32* nonnull dereferenceable(4) %4) #11
  br i1 %67, label %69, label %68

68:                                               ; preds = %66
  store i8 1, i8* %18, align 8
  br label %69

69:                                               ; preds = %66, %68
  %70 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %39, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader18ReadTemplateChainsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %8 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %7, align 8
  %9 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %9, align 8
  %11 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 0, i32* %4, align 4
  %15 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %16 = call zeroext i1 @_ZN3rtc9BitBuffer16ReadNonSymmetricEjRj(%"class.rtc::BitBuffer"* %15, i32 %13, i32* nonnull dereferenceable(4) %4) #11
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  %21 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %125, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* %11, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %23
  %27 = bitcast i32* %2 to i8*
  %28 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 3
  %30 = bitcast i32* %5 to i8*
  %31 = getelementptr inbounds %"class.absl::InlinedVector.13", %"class.absl::InlinedVector.13"* %29, i64 0, i32 0
  %32 = getelementptr inbounds %"class.absl::InlinedVector.13", %"class.absl::InlinedVector.13"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast i32** %33 to i64*
  %35 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 3, i32 0, i32 1
  %37 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %36 to i64
  br label %49

38:                                               ; preds = %74, %23
  %39 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 5, i32 0, i32 0
  %40 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %39, align 8
  %41 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %10, i64 0, i32 5, i32 0, i32 1
  %42 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %41, align 8
  %43 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %40, %42
  br i1 %43, label %125, label %44

44:                                               ; preds = %38
  %45 = bitcast i32* %6 to i8*
  %46 = bitcast i32* %3 to i8*
  %47 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %48 = load i32, i32* %21, align 8
  br label %80

49:                                               ; preds = %78, %26
  %50 = phi i32 [ %20, %26 ], [ %79, %78 ]
  %51 = phi i32 [ 0, %26 ], [ %75, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #11
  store i32 0, i32* %2, align 4
  %52 = call zeroext i1 @_ZN3rtc9BitBuffer16ReadNonSymmetricEjRj(%"class.rtc::BitBuffer"* %15, i32 %50, i32* nonnull dereferenceable(4) %2) #11
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i8 1, i8* %28, align 8
  br label %54

54:                                               ; preds = %49, %53
  %55 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #11
  store i32 %55, i32* %5, align 4
  %56 = load i64, i64* %32, align 8, !noalias !8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = load i64, i64* %34, align 8, !noalias !8
  %61 = load i64, i64* %35, align 8, !noalias !8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %60, %59 ], [ %37, %54 ]
  %64 = phi i64 [ %61, %59 ], [ 10, %54 ]
  %65 = lshr i64 %56, 1
  %66 = icmp eq i64 %65, %64
  br i1 %66, label %72, label %67, !prof !3

67:                                               ; preds = %62
  %68 = inttoptr i64 %63 to i32*
  %69 = getelementptr inbounds i32, i32* %68, i64 %65
  store i32 %55, i32* %69, align 4
  %70 = load i64, i64* %32, align 8
  %71 = add i64 %70, 2
  store i64 %71, i64* %32, align 8
  br label %74

72:                                               ; preds = %62
  %73 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.14"* %31, i32* nonnull dereferenceable(4) %5) #11
  br label %74

74:                                               ; preds = %67, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #11
  %75 = add nuw nsw i32 %51, 1
  %76 = load i32, i32* %11, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %78, label %38

78:                                               ; preds = %74
  %79 = load i32, i32* %21, align 8
  br label %49

80:                                               ; preds = %44, %93
  %81 = phi i32 [ %48, %44 ], [ %94, %93 ]
  %82 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %40, %44 ], [ %95, %93 ]
  %83 = icmp sgt i32 %81, 0
  br i1 %83, label %84, label %93

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %82, i64 0, i32 4
  %86 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %82, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %89 = bitcast i32** %88 to i64*
  %90 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %82, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %91 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %82, i64 0, i32 4, i32 0, i32 1
  %92 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %91 to i64
  br label %97

93:                                               ; preds = %121, %80
  %94 = phi i32 [ %81, %80 ], [ %123, %121 ]
  %95 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %82, i64 1
  %96 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %95, %42
  br i1 %96, label %125, label %80

97:                                               ; preds = %84, %121
  %98 = phi i32 [ 0, %84 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #11
  store i32 0, i32* %3, align 4
  %99 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %15, i64 4, i32* nonnull dereferenceable(4) %3) #11
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  store i8 1, i8* %47, align 8
  br label %101

101:                                              ; preds = %97, %100
  %102 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #11
  store i32 %102, i32* %6, align 4
  %103 = load i64, i64* %87, align 8, !noalias !11
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = load i64, i64* %89, align 8, !noalias !11
  %108 = load i64, i64* %90, align 8, !noalias !11
  br label %109

109:                                              ; preds = %101, %106
  %110 = phi i64 [ %107, %106 ], [ %92, %101 ]
  %111 = phi i64 [ %108, %106 ], [ 4, %101 ]
  %112 = lshr i64 %103, 1
  %113 = icmp eq i64 %112, %111
  br i1 %113, label %119, label %114, !prof !3

114:                                              ; preds = %109
  %115 = inttoptr i64 %110 to i32*
  %116 = getelementptr inbounds i32, i32* %115, i64 %112
  store i32 %102, i32* %116, align 4
  %117 = load i64, i64* %87, align 8
  %118 = add i64 %117, 2
  store i64 %118, i64* %87, align 8
  br label %121

119:                                              ; preds = %109
  %120 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.2"* %86, i32* nonnull dereferenceable(4) %6) #11
  br label %121

121:                                              ; preds = %114, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #11
  %122 = add nuw nsw i32 %98, 1
  %123 = load i32, i32* %21, align 8
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %97, label %93

125:                                              ; preds = %93, %38, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader15ReadResolutionsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %7 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.webrtc::FrameDependencyStructure"*, %"struct.webrtc::FrameDependencyStructure"** %8, align 8
  %10 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 5, i32 0, i32 1
  %11 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %10, align 8
  %12 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1
  %15 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %"class.absl::InlinedVector.15", %"class.absl::InlinedVector.15"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !14
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.webrtc::RenderResolution"** %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !14
  %25 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !14
  br label %30

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1
  %29 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %28 to i64
  br label %30

30:                                               ; preds = %27, %21
  %31 = phi i64 [ %29, %27 ], [ %24, %21 ]
  %32 = phi i64 [ 4, %27 ], [ %26, %21 ]
  %33 = inttoptr i64 %31 to %"class.webrtc::RenderResolution"*
  %34 = lshr i64 %18, 1
  %35 = icmp ult i64 %32, %16
  br i1 %35, label %36, label %142, !prof !4

36:                                               ; preds = %30
  %37 = shl i64 %32, 1
  %38 = icmp ult i64 %37, %16
  %39 = select i1 %38, i64 %16, i64 %37
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @abort() #13
  unreachable

42:                                               ; preds = %36
  %43 = shl i64 %39, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.webrtc::RenderResolution"*
  %46 = ptrtoint i8* %44 to i64
  %47 = icmp eq i64 %34, 0
  br i1 %47, label %130, label %48

48:                                               ; preds = %42
  %49 = inttoptr i64 %31 to i64*
  %50 = add nsw i64 %34, -1
  %51 = and i64 %34, 7
  %52 = icmp ult i64 %50, 7
  br i1 %52, label %112, label %53

53:                                               ; preds = %48
  %54 = sub nsw i64 %34, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"class.webrtc::RenderResolution"* [ %33, %53 ], [ %105, %55 ]
  %57 = phi i64* [ %49, %53 ], [ %107, %55 ]
  %58 = phi i64 [ 0, %53 ], [ %106, %55 ]
  %59 = phi i64 [ %54, %53 ], [ %108, %55 ]
  %60 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %58
  %61 = bitcast %"class.webrtc::RenderResolution"* %60 to i64*
  %62 = load i64, i64* %57, align 4
  store i64 %62, i64* %61, align 4
  %63 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 1
  %64 = or i64 %58, 1
  %65 = bitcast %"class.webrtc::RenderResolution"* %63 to i64*
  %66 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %64
  %67 = bitcast %"class.webrtc::RenderResolution"* %66 to i64*
  %68 = load i64, i64* %65, align 4
  store i64 %68, i64* %67, align 4
  %69 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 2
  %70 = or i64 %58, 2
  %71 = bitcast %"class.webrtc::RenderResolution"* %69 to i64*
  %72 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %70
  %73 = bitcast %"class.webrtc::RenderResolution"* %72 to i64*
  %74 = load i64, i64* %71, align 4
  store i64 %74, i64* %73, align 4
  %75 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 3
  %76 = or i64 %58, 3
  %77 = bitcast %"class.webrtc::RenderResolution"* %75 to i64*
  %78 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %76
  %79 = bitcast %"class.webrtc::RenderResolution"* %78 to i64*
  %80 = load i64, i64* %77, align 4
  store i64 %80, i64* %79, align 4
  %81 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 4
  %82 = or i64 %58, 4
  %83 = bitcast %"class.webrtc::RenderResolution"* %81 to i64*
  %84 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %82
  %85 = bitcast %"class.webrtc::RenderResolution"* %84 to i64*
  %86 = load i64, i64* %83, align 4
  store i64 %86, i64* %85, align 4
  %87 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 5
  %88 = or i64 %58, 5
  %89 = bitcast %"class.webrtc::RenderResolution"* %87 to i64*
  %90 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %88
  %91 = bitcast %"class.webrtc::RenderResolution"* %90 to i64*
  %92 = load i64, i64* %89, align 4
  store i64 %92, i64* %91, align 4
  %93 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 6
  %94 = or i64 %58, 6
  %95 = bitcast %"class.webrtc::RenderResolution"* %93 to i64*
  %96 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %94
  %97 = bitcast %"class.webrtc::RenderResolution"* %96 to i64*
  %98 = load i64, i64* %95, align 4
  store i64 %98, i64* %97, align 4
  %99 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 7
  %100 = or i64 %58, 7
  %101 = bitcast %"class.webrtc::RenderResolution"* %99 to i64*
  %102 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %100
  %103 = bitcast %"class.webrtc::RenderResolution"* %102 to i64*
  %104 = load i64, i64* %101, align 4
  store i64 %104, i64* %103, align 4
  %105 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %56, i64 8
  %106 = add nuw nsw i64 %58, 8
  %107 = bitcast %"class.webrtc::RenderResolution"* %105 to i64*
  %108 = add i64 %59, -8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %55

110:                                              ; preds = %55
  %111 = bitcast %"class.webrtc::RenderResolution"* %105 to i64*
  br label %112

112:                                              ; preds = %110, %48
  %113 = phi %"class.webrtc::RenderResolution"* [ %33, %48 ], [ %105, %110 ]
  %114 = phi i64* [ %49, %48 ], [ %111, %110 ]
  %115 = phi i64 [ 0, %48 ], [ %106, %110 ]
  %116 = icmp eq i64 %51, 0
  br i1 %116, label %130, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.webrtc::RenderResolution"* [ %125, %117 ], [ %113, %112 ]
  %119 = phi i64* [ %127, %117 ], [ %114, %112 ]
  %120 = phi i64 [ %126, %117 ], [ %115, %112 ]
  %121 = phi i64 [ %128, %117 ], [ %51, %112 ]
  %122 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %45, i64 %120
  %123 = bitcast %"class.webrtc::RenderResolution"* %122 to i64*
  %124 = load i64, i64* %119, align 4
  store i64 %124, i64* %123, align 4
  %125 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %118, i64 1
  %126 = add nuw nsw i64 %120, 1
  %127 = bitcast %"class.webrtc::RenderResolution"* %125 to i64*
  %128 = add i64 %121, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %117, !llvm.loop !17

130:                                              ; preds = %112, %117, %42
  br i1 %20, label %136, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %133 = bitcast %"class.webrtc::RenderResolution"** %132 to i8**
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #12
  %135 = load i64, i64* %17, align 8
  br label %136

136:                                              ; preds = %131, %130
  %137 = phi i64 [ %135, %131 ], [ %18, %130 ]
  %138 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %139 = bitcast %"class.webrtc::RenderResolution"** %138 to i64*
  store i64 %46, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  store i64 %39, i64* %140, align 8
  %141 = or i64 %137, 1
  store i64 %141, i64* %17, align 8
  br label %142

142:                                              ; preds = %30, %136
  %143 = icmp slt i32 %13, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %142
  %145 = bitcast i32* %2 to i8*
  %146 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %147 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %148 = bitcast i32* %3 to i8*
  %149 = bitcast i32* %4 to i8*
  %150 = bitcast i32* %5 to i8*
  %151 = getelementptr inbounds %"class.absl::InlinedVector.15", %"class.absl::InlinedVector.15"* %15, i64 0, i32 0
  %152 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %153 = bitcast %"class.webrtc::RenderResolution"** %152 to i64*
  %154 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %155 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %9, i64 0, i32 4, i32 0, i32 1
  %156 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %155 to i64
  br label %158

157:                                              ; preds = %191, %142
  ret void

158:                                              ; preds = %191, %144
  %159 = phi i32 [ 0, %144 ], [ %192, %191 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #11
  store i32 0, i32* %2, align 4
  %160 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %146, i64 16, i32* nonnull dereferenceable(4) %2) #11
  br i1 %160, label %162, label %161

161:                                              ; preds = %158
  store i8 1, i8* %147, align 8
  br label %162

162:                                              ; preds = %158, %161
  %163 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #11
  store i32 0, i32* %3, align 4
  %164 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %146, i64 16, i32* nonnull dereferenceable(4) %3) #11
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  store i8 1, i8* %147, align 8
  br label %166

166:                                              ; preds = %162, %165
  %167 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #11
  %168 = and i32 %163, 65535
  %169 = add nuw nsw i32 %168, 1
  store i32 %169, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #11
  %170 = and i32 %167, 65535
  %171 = add nuw nsw i32 %170, 1
  store i32 %171, i32* %5, align 4
  %172 = load i64, i64* %17, align 8, !noalias !19
  %173 = and i64 %172, 1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %166
  %176 = load i64, i64* %153, align 8, !noalias !19
  %177 = load i64, i64* %154, align 8, !noalias !19
  br label %178

178:                                              ; preds = %166, %175
  %179 = phi i64 [ %176, %175 ], [ %156, %166 ]
  %180 = phi i64 [ %177, %175 ], [ 4, %166 ]
  %181 = lshr i64 %172, 1
  %182 = icmp eq i64 %181, %180
  br i1 %182, label %189, label %183, !prof !3

183:                                              ; preds = %178
  %184 = inttoptr i64 %179 to %"class.webrtc::RenderResolution"*
  %185 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %184, i64 %181, i32 0
  store i32 %169, i32* %185, align 4
  %186 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %184, i64 %181, i32 1
  store i32 %171, i32* %186, align 4
  %187 = load i64, i64* %17, align 8
  %188 = add i64 %187, 2
  store i64 %188, i64* %17, align 8
  br label %191

189:                                              ; preds = %178
  %190 = call dereferenceable(8) %"class.webrtc::RenderResolution"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJiiEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.16"* %151, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5) #11
  br label %191

191:                                              ; preds = %183, %189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #11
  %192 = add nuw i32 %159, 1
  %193 = icmp eq i32 %192, %14
  br i1 %193, label %157, label %158
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader13ReadFrameDtisEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %4 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 2, i32 0, i32 1
  %14 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %13 to i32*
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi i32* [ %11, %9 ], [ %14, %12 ]
  %17 = lshr i64 %6, 1
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = bitcast i32* %2 to i8*
  %22 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  br label %25

24:                                               ; preds = %29, %15
  ret void

25:                                               ; preds = %20, %29
  %26 = phi i32* [ %16, %20 ], [ %31, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 0, i32* %2, align 4
  %27 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %22, i64 2, i32* nonnull dereferenceable(4) %2) #11
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  store i8 1, i8* %23, align 8
  br label %29

29:                                               ; preds = %25, %28
  %30 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  store i32 %30, i32* %26, align 4
  %31 = getelementptr inbounds i32, i32* %26, i64 1
  %32 = icmp eq i32* %31, %18
  br i1 %32, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader15ReadFrameFdiffsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %7 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %7, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %7, i64 0, i32 3, i32 3, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast i32** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %1, %12
  store i64 0, i64* %8, align 8
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 0, i32* %4, align 4
  %18 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %19 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 2, i32* nonnull dereferenceable(4) %4) #11
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  store i8 1, i8* %21, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = bitcast i32* %3 to i8*
  %27 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  %28 = bitcast i32* %5 to i8*
  %29 = bitcast i32* %2 to i8*
  br label %31

30:                                               ; preds = %71, %22
  ret void

31:                                               ; preds = %25, %71
  %32 = phi i32 [ %23, %25 ], [ %72, %71 ]
  %33 = shl i32 %32, 2
  %34 = zext i32 %33 to i64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store i32 0, i32* %3, align 4
  %35 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 %34, i32* nonnull dereferenceable(4) %3) #11
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store i8 1, i8* %27, align 8
  br label %37

37:                                               ; preds = %31, %36
  %38 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  %39 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %6, align 8
  %40 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %39, i64 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #11
  %41 = add i32 %38, 1
  store i32 %41, i32* %5, align 4
  %42 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !22
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %39, i64 0, i32 3, i32 3, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !22
  %51 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %39, i64 0, i32 3, i32 3, i32 0, i32 1, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !22
  br label %56

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %39, i64 0, i32 3, i32 3, i32 0, i32 1
  %55 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %54 to i64
  br label %56

56:                                               ; preds = %53, %47
  %57 = phi i64 [ %55, %53 ], [ %50, %47 ]
  %58 = phi i64 [ 4, %53 ], [ %52, %47 ]
  %59 = lshr i64 %44, 1
  %60 = icmp eq i64 %59, %58
  br i1 %60, label %66, label %61, !prof !3

61:                                               ; preds = %56
  %62 = inttoptr i64 %57 to i32*
  %63 = getelementptr inbounds i32, i32* %62, i64 %59
  store i32 %41, i32* %63, align 4
  %64 = load i64, i64* %43, align 8
  %65 = add i64 %64, 2
  store i64 %65, i64* %43, align 8
  br label %68

66:                                               ; preds = %56
  %67 = call dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.2"* %42, i32* nonnull dereferenceable(4) %5) #11
  br label %68

68:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #11
  store i32 0, i32* %2, align 4
  %69 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %18, i64 2, i32* nonnull dereferenceable(4) %2) #11
  br i1 %69, label %71, label %70

70:                                               ; preds = %68
  store i8 1, i8* %27, align 8
  br label %71

71:                                               ; preds = %68, %70
  %72 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtpDependencyDescriptorReader15ReadFrameChainsEv(%"class.webrtc::RtpDependencyDescriptorReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 1
  %4 = load %"struct.webrtc::DependencyDescriptor"*, %"struct.webrtc::DependencyDescriptor"** %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.webrtc::DependencyDescriptor", %"struct.webrtc::DependencyDescriptor"* %4, i64 0, i32 3, i32 4, i32 0, i32 1
  %14 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %13 to i32*
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi i32* [ %11, %9 ], [ %14, %12 ]
  %17 = lshr i64 %6, 1
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = bitcast i32* %2 to i8*
  %22 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.webrtc::RtpDependencyDescriptorReader", %"class.webrtc::RtpDependencyDescriptorReader"* %0, i64 0, i32 0
  br label %25

24:                                               ; preds = %29, %15
  ret void

25:                                               ; preds = %20, %29
  %26 = phi i32* [ %16, %20 ], [ %31, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 0, i32* %2, align 4
  %27 = call zeroext i1 @_ZN3rtc9BitBuffer8ReadBitsEmRj(%"class.rtc::BitBuffer"* %22, i64 8, i32* nonnull dereferenceable(4) %2) #11
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  store i8 1, i8* %23, align 8
  br label %29

29:                                               ; preds = %25, %28
  %30 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  store i32 %30, i32* %26, align 4
  %31 = getelementptr inbounds i32, i32* %26, i64 1
  %32 = icmp eq i32* %31, %18
  br i1 %32, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage"*, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !25
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !25
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !25
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 10, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 4611686018427387903
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #13
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 2
  %30 = tail call i8* @_Znwm(i64 %29) #12
  %31 = bitcast i8* %30 to i32*
  %32 = ptrtoint i8* %30 to i64
  br label %176

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to i32*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds i32, i32* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, i32* %37, i32* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 8
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr i32, i32* %35, i64 %40
  %46 = getelementptr i32, i32* %1, i64 %40
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt i32* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775800
  %53 = getelementptr i32, i32* %1, i64 %52
  %54 = add nsw i64 %52, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 24
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i32, i32* %1, i64 %62
  %65 = getelementptr inbounds i32, i32* %35, i64 %62
  %66 = bitcast i32* %64 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4, !alias.scope !28
  %68 = getelementptr i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !alias.scope !28
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %71, align 4, !alias.scope !31, !noalias !28
  %72 = getelementptr inbounds i32, i32* %65, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %73, align 4, !alias.scope !31, !noalias !28
  %74 = or i64 %62, 8
  %75 = getelementptr i32, i32* %1, i64 %74
  %76 = getelementptr inbounds i32, i32* %35, i64 %74
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !28
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !28
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !31, !noalias !28
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !31, !noalias !28
  %85 = or i64 %62, 16
  %86 = getelementptr i32, i32* %1, i64 %85
  %87 = getelementptr inbounds i32, i32* %35, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !28
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !28
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !31, !noalias !28
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !31, !noalias !28
  %96 = or i64 %62, 24
  %97 = getelementptr i32, i32* %1, i64 %96
  %98 = getelementptr inbounds i32, i32* %35, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !28
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !28
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !31, !noalias !28
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !31, !noalias !28
  %107 = add i64 %62, 32
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !33

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i32, i32* %1, i64 %114
  %117 = getelementptr inbounds i32, i32* %35, i64 %114
  %118 = bitcast i32* %116 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !28
  %120 = getelementptr i32, i32* %116, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !28
  %123 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !31, !noalias !28
  %124 = getelementptr inbounds i32, i32* %117, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !31, !noalias !28
  %126 = add i64 %114, 8
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !35

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %173, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi i32* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %40, %134
  %136 = and i64 %40, 3
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %138
  %139 = phi i32* [ %144, %138 ], [ %132, %131 ]
  %140 = phi i64 [ %145, %138 ], [ %133, %131 ]
  %141 = phi i64 [ %146, %138 ], [ %136, %131 ]
  %142 = getelementptr inbounds i32, i32* %35, i64 %140
  %143 = load i32, i32* %139, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = add nuw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %138, !llvm.loop !36

148:                                              ; preds = %138, %131
  %149 = phi i32* [ undef, %131 ], [ %144, %138 ]
  %150 = phi i32* [ %132, %131 ], [ %144, %138 ]
  %151 = phi i64 [ %133, %131 ], [ %145, %138 ]
  %152 = icmp ult i64 %135, 3
  br i1 %152, label %173, label %153

153:                                              ; preds = %148, %153
  %154 = phi i32* [ %170, %153 ], [ %150, %148 ]
  %155 = phi i64 [ %171, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds i32, i32* %35, i64 %155
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %156, align 4
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = add nuw i64 %155, 1
  %160 = getelementptr inbounds i32, i32* %35, i64 %159
  %161 = load i32, i32* %158, align 4
  store i32 %161, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = add nuw i64 %155, 2
  %164 = getelementptr inbounds i32, i32* %35, i64 %163
  %165 = load i32, i32* %162, align 4
  store i32 %165, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %154, i64 3
  %167 = add nuw i64 %155, 3
  %168 = getelementptr inbounds i32, i32* %35, i64 %167
  %169 = load i32, i32* %166, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %154, i64 4
  %171 = add nuw i64 %155, 4
  %172 = icmp eq i64 %171, %40
  br i1 %172, label %173, label %153, !llvm.loop !37

173:                                              ; preds = %148, %153, %129, %33
  %174 = phi i32* [ %1, %33 ], [ %53, %129 ], [ %149, %148 ], [ %170, %153 ]
  %175 = icmp eq i64 %38, 0
  br i1 %175, label %312, label %176

176:                                              ; preds = %28, %173
  %177 = phi i32* [ %1, %28 ], [ %174, %173 ]
  %178 = phi i64 [ %2, %28 ], [ %38, %173 ]
  %179 = phi i32* [ %31, %28 ], [ %39, %173 ]
  %180 = phi i64 [ %25, %28 ], [ 0, %173 ]
  %181 = phi i64 [ %32, %28 ], [ 0, %173 ]
  %182 = icmp ult i64 %178, 8
  br i1 %182, label %269, label %183

183:                                              ; preds = %176
  %184 = getelementptr i32, i32* %179, i64 %178
  %185 = getelementptr i32, i32* %177, i64 %178
  %186 = icmp ult i32* %179, %185
  %187 = icmp ult i32* %177, %184
  %188 = and i1 %186, %187
  br i1 %188, label %269, label %189

189:                                              ; preds = %183
  %190 = and i64 %178, -8
  %191 = getelementptr i32, i32* %177, i64 %190
  %192 = add i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %189
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %177, i64 %200
  %203 = getelementptr inbounds i32, i32* %179, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !38
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !38
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !41, !noalias !38
  %210 = getelementptr inbounds i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !41, !noalias !38
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %177, i64 %212
  %214 = getelementptr inbounds i32, i32* %179, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !38
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !38
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !41, !noalias !38
  %221 = getelementptr inbounds i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !41, !noalias !38
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %177, i64 %223
  %225 = getelementptr inbounds i32, i32* %179, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !38
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !38
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !41, !noalias !38
  %232 = getelementptr inbounds i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !41, !noalias !38
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %177, i64 %234
  %236 = getelementptr inbounds i32, i32* %179, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !38
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !38
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !41, !noalias !38
  %243 = getelementptr inbounds i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !41, !noalias !38
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !43

248:                                              ; preds = %199, %189
  %249 = phi i64 [ 0, %189 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %177, i64 %252
  %255 = getelementptr inbounds i32, i32* %179, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !38
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !38
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !41, !noalias !38
  %262 = getelementptr inbounds i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !41, !noalias !38
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !44

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %190
  br i1 %268, label %310, label %269

269:                                              ; preds = %267, %183, %176
  %270 = phi i32* [ %177, %183 ], [ %177, %176 ], [ %191, %267 ]
  %271 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %190, %267 ]
  %272 = xor i64 %271, -1
  %273 = add i64 %178, %272
  %274 = and i64 %178, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %286, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %283, %276 ], [ %271, %269 ]
  %279 = phi i64 [ %284, %276 ], [ %274, %269 ]
  %280 = getelementptr inbounds i32, i32* %179, i64 %278
  %281 = load i32, i32* %277, align 4
  store i32 %281, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = add nuw i64 %278, 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %276, !llvm.loop !45

286:                                              ; preds = %276, %269
  %287 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %288 = phi i64 [ %271, %269 ], [ %283, %276 ]
  %289 = icmp ult i64 %273, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %286, %290
  %291 = phi i32* [ %307, %290 ], [ %287, %286 ]
  %292 = phi i64 [ %308, %290 ], [ %288, %286 ]
  %293 = getelementptr inbounds i32, i32* %179, i64 %292
  %294 = load i32, i32* %291, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds i32, i32* %291, i64 1
  %296 = add nuw i64 %292, 1
  %297 = getelementptr inbounds i32, i32* %179, i64 %296
  %298 = load i32, i32* %295, align 4
  store i32 %298, i32* %297, align 4
  %299 = getelementptr inbounds i32, i32* %291, i64 2
  %300 = add nuw i64 %292, 2
  %301 = getelementptr inbounds i32, i32* %179, i64 %300
  %302 = load i32, i32* %299, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds i32, i32* %291, i64 3
  %304 = add nuw i64 %292, 3
  %305 = getelementptr inbounds i32, i32* %179, i64 %304
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %291, i64 4
  %308 = add nuw i64 %292, 4
  %309 = icmp eq i64 %308, %178
  br i1 %309, label %310, label %290, !llvm.loop !46

310:                                              ; preds = %286, %290, %267
  %311 = icmp eq i64 %181, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %173, %310
  %313 = load i64, i64* %4, align 8
  br label %329

314:                                              ; preds = %310
  %315 = load i64, i64* %4, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %320 = bitcast i32** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  tail call void @_ZdlPv(i8* %321) #12
  %322 = load i64, i64* %4, align 8
  br label %323

323:                                              ; preds = %314, %318
  %324 = phi i64 [ %315, %314 ], [ %322, %318 ]
  %325 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %181, i64* %326, align 8
  %327 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %180, i64* %327, align 8
  %328 = or i64 %324, 1
  store i64 %328, i64* %4, align 8
  br label %329

329:                                              ; preds = %323, %312
  %330 = phi i64 [ %313, %312 ], [ %328, %323 ]
  %331 = shl i64 %2, 1
  %332 = and i64 %330, 1
  %333 = or i64 %332, %331
  store i64 %333, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE6AssignINS0_20IteratorValueAdapterIS4_PKiEEEEvT_m(%"class.absl::inlined_vector_internal::Storage.2"*, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !47
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !47
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !47
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 4, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 4611686018427387903
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #13
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 2
  %30 = tail call i8* @_Znwm(i64 %29) #12
  %31 = bitcast i8* %30 to i32*
  %32 = ptrtoint i8* %30 to i64
  br label %176

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to i32*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds i32, i32* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, i32* %37, i32* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 8
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr i32, i32* %35, i64 %40
  %46 = getelementptr i32, i32* %1, i64 %40
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt i32* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775800
  %53 = getelementptr i32, i32* %1, i64 %52
  %54 = add nsw i64 %52, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 24
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i32, i32* %1, i64 %62
  %65 = getelementptr inbounds i32, i32* %35, i64 %62
  %66 = bitcast i32* %64 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4, !alias.scope !50
  %68 = getelementptr i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !alias.scope !50
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %71, align 4, !alias.scope !53, !noalias !50
  %72 = getelementptr inbounds i32, i32* %65, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %73, align 4, !alias.scope !53, !noalias !50
  %74 = or i64 %62, 8
  %75 = getelementptr i32, i32* %1, i64 %74
  %76 = getelementptr inbounds i32, i32* %35, i64 %74
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !50
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !50
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !53, !noalias !50
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !53, !noalias !50
  %85 = or i64 %62, 16
  %86 = getelementptr i32, i32* %1, i64 %85
  %87 = getelementptr inbounds i32, i32* %35, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !50
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !50
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !53, !noalias !50
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !53, !noalias !50
  %96 = or i64 %62, 24
  %97 = getelementptr i32, i32* %1, i64 %96
  %98 = getelementptr inbounds i32, i32* %35, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !50
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !50
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !53, !noalias !50
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !53, !noalias !50
  %107 = add i64 %62, 32
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !55

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i32, i32* %1, i64 %114
  %117 = getelementptr inbounds i32, i32* %35, i64 %114
  %118 = bitcast i32* %116 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !50
  %120 = getelementptr i32, i32* %116, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !50
  %123 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !53, !noalias !50
  %124 = getelementptr inbounds i32, i32* %117, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !53, !noalias !50
  %126 = add i64 %114, 8
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !56

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %173, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi i32* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %40, %134
  %136 = and i64 %40, 3
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %138
  %139 = phi i32* [ %144, %138 ], [ %132, %131 ]
  %140 = phi i64 [ %145, %138 ], [ %133, %131 ]
  %141 = phi i64 [ %146, %138 ], [ %136, %131 ]
  %142 = getelementptr inbounds i32, i32* %35, i64 %140
  %143 = load i32, i32* %139, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = add nuw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %138, !llvm.loop !57

148:                                              ; preds = %138, %131
  %149 = phi i32* [ undef, %131 ], [ %144, %138 ]
  %150 = phi i32* [ %132, %131 ], [ %144, %138 ]
  %151 = phi i64 [ %133, %131 ], [ %145, %138 ]
  %152 = icmp ult i64 %135, 3
  br i1 %152, label %173, label %153

153:                                              ; preds = %148, %153
  %154 = phi i32* [ %170, %153 ], [ %150, %148 ]
  %155 = phi i64 [ %171, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds i32, i32* %35, i64 %155
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %156, align 4
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = add nuw i64 %155, 1
  %160 = getelementptr inbounds i32, i32* %35, i64 %159
  %161 = load i32, i32* %158, align 4
  store i32 %161, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = add nuw i64 %155, 2
  %164 = getelementptr inbounds i32, i32* %35, i64 %163
  %165 = load i32, i32* %162, align 4
  store i32 %165, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %154, i64 3
  %167 = add nuw i64 %155, 3
  %168 = getelementptr inbounds i32, i32* %35, i64 %167
  %169 = load i32, i32* %166, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %154, i64 4
  %171 = add nuw i64 %155, 4
  %172 = icmp eq i64 %171, %40
  br i1 %172, label %173, label %153, !llvm.loop !58

173:                                              ; preds = %148, %153, %129, %33
  %174 = phi i32* [ %1, %33 ], [ %53, %129 ], [ %149, %148 ], [ %170, %153 ]
  %175 = icmp eq i64 %38, 0
  br i1 %175, label %312, label %176

176:                                              ; preds = %28, %173
  %177 = phi i32* [ %1, %28 ], [ %174, %173 ]
  %178 = phi i64 [ %2, %28 ], [ %38, %173 ]
  %179 = phi i32* [ %31, %28 ], [ %39, %173 ]
  %180 = phi i64 [ %25, %28 ], [ 0, %173 ]
  %181 = phi i64 [ %32, %28 ], [ 0, %173 ]
  %182 = icmp ult i64 %178, 8
  br i1 %182, label %269, label %183

183:                                              ; preds = %176
  %184 = getelementptr i32, i32* %179, i64 %178
  %185 = getelementptr i32, i32* %177, i64 %178
  %186 = icmp ult i32* %179, %185
  %187 = icmp ult i32* %177, %184
  %188 = and i1 %186, %187
  br i1 %188, label %269, label %189

189:                                              ; preds = %183
  %190 = and i64 %178, -8
  %191 = getelementptr i32, i32* %177, i64 %190
  %192 = add i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %189
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %177, i64 %200
  %203 = getelementptr inbounds i32, i32* %179, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !59
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !59
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !62, !noalias !59
  %210 = getelementptr inbounds i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !62, !noalias !59
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %177, i64 %212
  %214 = getelementptr inbounds i32, i32* %179, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !59
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !59
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !62, !noalias !59
  %221 = getelementptr inbounds i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !62, !noalias !59
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %177, i64 %223
  %225 = getelementptr inbounds i32, i32* %179, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !59
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !59
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !62, !noalias !59
  %232 = getelementptr inbounds i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !62, !noalias !59
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %177, i64 %234
  %236 = getelementptr inbounds i32, i32* %179, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !59
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !59
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !62, !noalias !59
  %243 = getelementptr inbounds i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !62, !noalias !59
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !64

248:                                              ; preds = %199, %189
  %249 = phi i64 [ 0, %189 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %177, i64 %252
  %255 = getelementptr inbounds i32, i32* %179, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !59
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !59
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !62, !noalias !59
  %262 = getelementptr inbounds i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !62, !noalias !59
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !65

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %190
  br i1 %268, label %310, label %269

269:                                              ; preds = %267, %183, %176
  %270 = phi i32* [ %177, %183 ], [ %177, %176 ], [ %191, %267 ]
  %271 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %190, %267 ]
  %272 = xor i64 %271, -1
  %273 = add i64 %178, %272
  %274 = and i64 %178, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %286, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %283, %276 ], [ %271, %269 ]
  %279 = phi i64 [ %284, %276 ], [ %274, %269 ]
  %280 = getelementptr inbounds i32, i32* %179, i64 %278
  %281 = load i32, i32* %277, align 4
  store i32 %281, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = add nuw i64 %278, 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %276, !llvm.loop !66

286:                                              ; preds = %276, %269
  %287 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %288 = phi i64 [ %271, %269 ], [ %283, %276 ]
  %289 = icmp ult i64 %273, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %286, %290
  %291 = phi i32* [ %307, %290 ], [ %287, %286 ]
  %292 = phi i64 [ %308, %290 ], [ %288, %286 ]
  %293 = getelementptr inbounds i32, i32* %179, i64 %292
  %294 = load i32, i32* %291, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds i32, i32* %291, i64 1
  %296 = add nuw i64 %292, 1
  %297 = getelementptr inbounds i32, i32* %179, i64 %296
  %298 = load i32, i32* %295, align 4
  store i32 %298, i32* %297, align 4
  %299 = getelementptr inbounds i32, i32* %291, i64 2
  %300 = add nuw i64 %292, 2
  %301 = getelementptr inbounds i32, i32* %179, i64 %300
  %302 = load i32, i32* %299, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds i32, i32* %291, i64 3
  %304 = add nuw i64 %292, 3
  %305 = getelementptr inbounds i32, i32* %179, i64 %304
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %291, i64 4
  %308 = add nuw i64 %292, 4
  %309 = icmp eq i64 %308, %178
  br i1 %309, label %310, label %290, !llvm.loop !67

310:                                              ; preds = %286, %290, %267
  %311 = icmp eq i64 %181, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %173, %310
  %313 = load i64, i64* %4, align 8
  br label %329

314:                                              ; preds = %310
  %315 = load i64, i64* %4, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %320 = bitcast i32** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  tail call void @_ZdlPv(i8* %321) #12
  %322 = load i64, i64* %4, align 8
  br label %323

323:                                              ; preds = %314, %318
  %324 = phi i64 [ %315, %314 ], [ %322, %318 ]
  %325 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %181, i64* %326, align 8
  %327 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %180, i64* %327, align 8
  %328 = or i64 %324, 1
  store i64 %328, i64* %4, align 8
  br label %329

329:                                              ; preds = %323, %312
  %330 = phi i64 [ %313, %312 ], [ %328, %323 ]
  %331 = shl i64 %2, 1
  %332 = and i64 %330, 1
  %333 = or i64 %332, %331
  store i64 %333, i64* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc24FrameDependencyStructureD2Ev(%"struct.webrtc::FrameDependencyStructure"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %3, align 8
  %5 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %4 to i8*
  %8 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %8, align 8
  %10 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %9, %4
  br i1 %10, label %45, label %11

11:                                               ; preds = %6, %40
  %12 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %13, %40 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast i32** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %11
  %23 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast i32** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %27, %22
  %32 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast i32** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %36, %31
  %41 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %13, %4
  br i1 %41, label %42, label %11

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector"* %2 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %6, %42
  %46 = phi i8* [ %44, %42 ], [ %7, %6 ]
  store %"struct.webrtc::FrameDependencyTemplate"* %4, %"struct.webrtc::FrameDependencyTemplate"** %8, align 8
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %45
  %48 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.webrtc::RenderResolution"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %47, %52
  %57 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast i32** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %56, %61
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 104
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 177372539170284150
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #13
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 104
  %19 = icmp ult i64 %18, 88686269585142075
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 177372539170284150, %13 ]
  %27 = mul i64 %26, 104
  %28 = tail call i8* @_Znwm(i64 %27) #12
  %29 = bitcast i8* %28 to %"struct.webrtc::FrameDependencyTemplate"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %32, i64 %8
  %34 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %32, i64 %31
  %35 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %34 to i64
  %36 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 104, i1 false) #11
  %37 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %33, i64 1
  %38 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %39, align 8
  %41 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %2, align 8
  %42 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %40 to i64
  br label %78

45:                                               ; preds = %30, %45
  %46 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %48, %45 ], [ %33, %30 ]
  %47 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %49, %45 ], [ %41, %30 ]
  %48 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1
  %50 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %49 to i64*
  %51 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %48 to i64*
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %53, align 8
  %56 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 2, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 2, i32 0, i32 1
  %58 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %57 to i8*
  %59 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false) #11
  store i64 0, i64* %54, align 8
  %60 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 3, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 3, i32 0, i32 1
  %65 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %64 to i8*
  %66 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false) #11
  store i64 0, i64* %61, align 8
  %67 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %67, align 8
  %70 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %47, i64 -1, i32 4, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %46, i64 -1, i32 4, i32 0, i32 1
  %72 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %71 to i8*
  %73 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false) #11
  store i64 0, i64* %68, align 8
  %74 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %49, %40
  br i1 %74, label %75, label %45

75:                                               ; preds = %45
  %76 = load i64, i64* %5, align 8
  %77 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %2, align 8
  br label %78

78:                                               ; preds = %43, %75
  %79 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %40, %43 ], [ %77, %75 ]
  %80 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %33, %43 ], [ %48, %75 ]
  %81 = phi i64 [ %44, %43 ], [ %76, %75 ]
  %82 = ptrtoint %"struct.webrtc::FrameDependencyTemplate"* %80 to i64
  store i64 %82, i64* %5, align 8
  store i64 %38, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %83 = inttoptr i64 %81 to %"struct.webrtc::FrameDependencyTemplate"*
  %84 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %79, %83
  br i1 %84, label %116, label %85

85:                                               ; preds = %78, %114
  %86 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %87, %114 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1
  %88 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %94 = bitcast i32** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %92, %85
  %97 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %103 = bitcast i32** %102 to i8**
  %104 = load i8*, i8** %103, align 8
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %101, %96
  %106 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %86, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %112 = bitcast i32** %111 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %110, %105
  %115 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %87, %83
  br i1 %115, label %116, label %85

116:                                              ; preds = %114, %78
  %117 = icmp eq i64 %81, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %116, %118
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc23FrameDependencyTemplateENS_9allocatorIS2_EEE13__vdeallocateEv(%"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %2, align 8
  %4 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %7, align 8
  %9 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %8, %3
  br i1 %9, label %44, label %10

10:                                               ; preds = %5, %39
  %11 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %12, %39 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast i32** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %17, %10
  %22 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast i32** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %26, %21
  %31 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %11, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast i32** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %35, %30
  %40 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %12, %3
  br i1 %40, label %41, label %10

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %5, %41
  %45 = phi i8* [ %43, %41 ], [ %6, %5 ]
  store %"struct.webrtc::FrameDependencyTemplate"* %3, %"struct.webrtc::FrameDependencyTemplate"** %7, align 8
  tail call void @_ZdlPv(i8* %45) #12
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false)
  br label %47

47:                                               ; preds = %1, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE6ResizeINS0_19DefaultValueAdapterIS6_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !68
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !68
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !68
  br label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %15 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %14 to i64
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi i64 [ %15, %13 ], [ %10, %7 ]
  %18 = phi i64 [ 10, %13 ], [ %12, %7 ]
  %19 = lshr i64 %4, 1
  %20 = inttoptr i64 %17 to i32*
  %21 = inttoptr i64 %17 to i8*
  %22 = icmp ult i64 %19, %1
  br i1 %22, label %23, label %195

23:                                               ; preds = %16
  %24 = icmp ult i64 %18, %1
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = sub i64 %1, %19
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %195, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds i32, i32* %20, i64 %19
  %30 = bitcast i32* %29 to i8*
  %31 = shl nuw i64 %26, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 %31, i1 false) #11
  %32 = load i64, i64* %3, align 8
  br label %195

33:                                               ; preds = %23
  %34 = shl i64 %18, 1
  %35 = icmp ult i64 %34, %1
  %36 = select i1 %35, i64 %1, i64 %34
  %37 = icmp ugt i64 %36, 4611686018427387903
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

39:                                               ; preds = %33
  %40 = shl i64 %36, 2
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i32*
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 %1, %19
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds i32, i32* %42, i64 %19
  %48 = bitcast i32* %47 to i8*
  %49 = shl nuw i64 %44, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 %49, i1 false) #11
  br label %50

50:                                               ; preds = %39, %46
  %51 = icmp eq i64 %19, 0
  br i1 %51, label %183, label %52

52:                                               ; preds = %50
  %53 = icmp ult i64 %4, 16
  br i1 %53, label %142, label %54

54:                                               ; preds = %52
  %55 = shl i64 %19, 2
  %56 = getelementptr i8, i8* %41, i64 %55
  %57 = getelementptr i32, i32* %20, i64 %19
  %58 = bitcast i32* %57 to i8*
  %59 = icmp ult i8* %41, %58
  %60 = icmp ugt i8* %56, %21
  %61 = and i1 %59, %60
  br i1 %61, label %142, label %62

62:                                               ; preds = %54
  %63 = and i64 %19, 9223372036854775800
  %64 = getelementptr i32, i32* %20, i64 %63
  %65 = add nsw i64 %63, -8
  %66 = lshr exact i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 24
  br i1 %69, label %121, label %70

70:                                               ; preds = %62
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i32, i32* %20, i64 %73
  %76 = getelementptr inbounds i32, i32* %42, i64 %73
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !71
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !71
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !74, !noalias !71
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !74, !noalias !71
  %85 = or i64 %73, 8
  %86 = getelementptr i32, i32* %20, i64 %85
  %87 = getelementptr inbounds i32, i32* %42, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !71
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !71
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !74, !noalias !71
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !74, !noalias !71
  %96 = or i64 %73, 16
  %97 = getelementptr i32, i32* %20, i64 %96
  %98 = getelementptr inbounds i32, i32* %42, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !71
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !71
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !74, !noalias !71
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !74, !noalias !71
  %107 = or i64 %73, 24
  %108 = getelementptr i32, i32* %20, i64 %107
  %109 = getelementptr inbounds i32, i32* %42, i64 %107
  %110 = bitcast i32* %108 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !71
  %112 = getelementptr i32, i32* %108, i64 4
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4, !alias.scope !71
  %115 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %115, align 4, !alias.scope !74, !noalias !71
  %116 = getelementptr inbounds i32, i32* %109, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %117, align 4, !alias.scope !74, !noalias !71
  %118 = add i64 %73, 32
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !76

121:                                              ; preds = %72, %62
  %122 = phi i64 [ 0, %62 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i32, i32* %20, i64 %125
  %128 = getelementptr inbounds i32, i32* %42, i64 %125
  %129 = bitcast i32* %127 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !71
  %131 = getelementptr i32, i32* %127, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !71
  %134 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !74, !noalias !71
  %135 = getelementptr inbounds i32, i32* %128, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !74, !noalias !71
  %137 = add i64 %125, 8
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !77

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %19, %63
  br i1 %141, label %183, label %142

142:                                              ; preds = %140, %54, %52
  %143 = phi i32* [ %20, %54 ], [ %20, %52 ], [ %64, %140 ]
  %144 = phi i64 [ 0, %54 ], [ 0, %52 ], [ %63, %140 ]
  %145 = xor i64 %144, -1
  %146 = add nsw i64 %19, %145
  %147 = and i64 %19, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %142, %149
  %150 = phi i32* [ %155, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %156, %149 ], [ %144, %142 ]
  %152 = phi i64 [ %157, %149 ], [ %147, %142 ]
  %153 = getelementptr inbounds i32, i32* %42, i64 %151
  %154 = load i32, i32* %150, align 4
  store i32 %154, i32* %153, align 4
  %155 = getelementptr inbounds i32, i32* %150, i64 1
  %156 = add nuw nsw i64 %151, 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %149, !llvm.loop !78

159:                                              ; preds = %149, %142
  %160 = phi i32* [ %143, %142 ], [ %155, %149 ]
  %161 = phi i64 [ %144, %142 ], [ %156, %149 ]
  %162 = icmp ult i64 %146, 3
  br i1 %162, label %183, label %163

163:                                              ; preds = %159, %163
  %164 = phi i32* [ %180, %163 ], [ %160, %159 ]
  %165 = phi i64 [ %181, %163 ], [ %161, %159 ]
  %166 = getelementptr inbounds i32, i32* %42, i64 %165
  %167 = load i32, i32* %164, align 4
  store i32 %167, i32* %166, align 4
  %168 = getelementptr inbounds i32, i32* %164, i64 1
  %169 = add nuw nsw i64 %165, 1
  %170 = getelementptr inbounds i32, i32* %42, i64 %169
  %171 = load i32, i32* %168, align 4
  store i32 %171, i32* %170, align 4
  %172 = getelementptr inbounds i32, i32* %164, i64 2
  %173 = add nuw nsw i64 %165, 2
  %174 = getelementptr inbounds i32, i32* %42, i64 %173
  %175 = load i32, i32* %172, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %164, i64 3
  %177 = add nuw nsw i64 %165, 3
  %178 = getelementptr inbounds i32, i32* %42, i64 %177
  %179 = load i32, i32* %176, align 4
  store i32 %179, i32* %178, align 4
  %180 = getelementptr inbounds i32, i32* %164, i64 4
  %181 = add nuw nsw i64 %165, 4
  %182 = icmp eq i64 %181, %19
  br i1 %182, label %183, label %163, !llvm.loop !79

183:                                              ; preds = %159, %163, %140, %50
  br i1 %6, label %189, label %184

184:                                              ; preds = %183
  %185 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %186 = bitcast i32** %185 to i8**
  %187 = load i8*, i8** %186, align 8
  tail call void @_ZdlPv(i8* %187) #12
  %188 = load i64, i64* %3, align 8
  br label %189

189:                                              ; preds = %184, %183
  %190 = phi i64 [ %188, %184 ], [ %4, %183 ]
  %191 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %192 = bitcast i32** %191 to i64*
  store i64 %43, i64* %192, align 8
  %193 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %36, i64* %193, align 8
  %194 = or i64 %190, 1
  store i64 %194, i64* %3, align 8
  br label %195

195:                                              ; preds = %28, %25, %16, %189
  %196 = phi i64 [ %32, %28 ], [ %4, %25 ], [ %4, %16 ], [ %194, %189 ]
  %197 = shl i64 %1, 1
  %198 = and i64 %196, 1
  %199 = or i64 %198, %197
  store i64 %199, i64* %3, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.2"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !80
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !80
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !80
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 4611686018427387903
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 8, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = inttoptr i64 %21 to i32*
  %23 = inttoptr i64 %21 to i8*
  %24 = lshr i64 %4, 1
  %25 = shl i64 %20, 2
  %26 = tail call i8* @_Znwm(i64 %25) #12
  %27 = bitcast i8* %26 to i32*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds i32, i32* %27, i64 %24
  %30 = load i32, i32* %1, align 4
  store i32 %30, i32* %29, align 4
  %31 = icmp eq i64 %24, 0
  br i1 %31, label %163, label %32

32:                                               ; preds = %19
  %33 = icmp ult i64 %4, 16
  br i1 %33, label %122, label %34

34:                                               ; preds = %32
  %35 = shl i64 %24, 2
  %36 = getelementptr i8, i8* %26, i64 %35
  %37 = getelementptr i32, i32* %22, i64 %24
  %38 = bitcast i32* %37 to i8*
  %39 = icmp ult i8* %26, %38
  %40 = icmp ugt i8* %36, %23
  %41 = and i1 %39, %40
  br i1 %41, label %122, label %42

42:                                               ; preds = %34
  %43 = and i64 %24, 9223372036854775800
  %44 = getelementptr i32, i32* %22, i64 %43
  %45 = add nsw i64 %43, -8
  %46 = lshr exact i64 %45, 3
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 24
  br i1 %49, label %101, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr i32, i32* %22, i64 %53
  %56 = getelementptr inbounds i32, i32* %27, i64 %53
  %57 = bitcast i32* %55 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4, !alias.scope !83
  %59 = getelementptr i32, i32* %55, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4, !alias.scope !83
  %62 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %62, align 4, !alias.scope !86, !noalias !83
  %63 = getelementptr inbounds i32, i32* %56, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %64, align 4, !alias.scope !86, !noalias !83
  %65 = or i64 %53, 8
  %66 = getelementptr i32, i32* %22, i64 %65
  %67 = getelementptr inbounds i32, i32* %27, i64 %65
  %68 = bitcast i32* %66 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !83
  %70 = getelementptr i32, i32* %66, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !alias.scope !83
  %73 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %73, align 4, !alias.scope !86, !noalias !83
  %74 = getelementptr inbounds i32, i32* %67, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %75, align 4, !alias.scope !86, !noalias !83
  %76 = or i64 %53, 16
  %77 = getelementptr i32, i32* %22, i64 %76
  %78 = getelementptr inbounds i32, i32* %27, i64 %76
  %79 = bitcast i32* %77 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !83
  %81 = getelementptr i32, i32* %77, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !83
  %84 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %84, align 4, !alias.scope !86, !noalias !83
  %85 = getelementptr inbounds i32, i32* %78, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %86, align 4, !alias.scope !86, !noalias !83
  %87 = or i64 %53, 24
  %88 = getelementptr i32, i32* %22, i64 %87
  %89 = getelementptr inbounds i32, i32* %27, i64 %87
  %90 = bitcast i32* %88 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !83
  %92 = getelementptr i32, i32* %88, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !83
  %95 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4, !alias.scope !86, !noalias !83
  %96 = getelementptr inbounds i32, i32* %89, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %97, align 4, !alias.scope !86, !noalias !83
  %98 = add i64 %53, 32
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !88

101:                                              ; preds = %52, %42
  %102 = phi i64 [ 0, %42 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr i32, i32* %22, i64 %105
  %108 = getelementptr inbounds i32, i32* %27, i64 %105
  %109 = bitcast i32* %107 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !83
  %111 = getelementptr i32, i32* %107, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !83
  %114 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !86, !noalias !83
  %115 = getelementptr inbounds i32, i32* %108, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !86, !noalias !83
  %117 = add i64 %105, 8
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !89

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %24, %43
  br i1 %121, label %163, label %122

122:                                              ; preds = %120, %34, %32
  %123 = phi i32* [ %22, %34 ], [ %22, %32 ], [ %44, %120 ]
  %124 = phi i64 [ 0, %34 ], [ 0, %32 ], [ %43, %120 ]
  %125 = xor i64 %124, -1
  %126 = add nsw i64 %24, %125
  %127 = and i64 %24, 3
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %139, label %129

129:                                              ; preds = %122, %129
  %130 = phi i32* [ %135, %129 ], [ %123, %122 ]
  %131 = phi i64 [ %136, %129 ], [ %124, %122 ]
  %132 = phi i64 [ %137, %129 ], [ %127, %122 ]
  %133 = getelementptr inbounds i32, i32* %27, i64 %131
  %134 = load i32, i32* %130, align 4
  store i32 %134, i32* %133, align 4
  %135 = getelementptr inbounds i32, i32* %130, i64 1
  %136 = add nuw nsw i64 %131, 1
  %137 = add i64 %132, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %129, !llvm.loop !90

139:                                              ; preds = %129, %122
  %140 = phi i32* [ %123, %122 ], [ %135, %129 ]
  %141 = phi i64 [ %124, %122 ], [ %136, %129 ]
  %142 = icmp ult i64 %126, 3
  br i1 %142, label %163, label %143

143:                                              ; preds = %139, %143
  %144 = phi i32* [ %160, %143 ], [ %140, %139 ]
  %145 = phi i64 [ %161, %143 ], [ %141, %139 ]
  %146 = getelementptr inbounds i32, i32* %27, i64 %145
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %146, align 4
  %148 = getelementptr inbounds i32, i32* %144, i64 1
  %149 = add nuw nsw i64 %145, 1
  %150 = getelementptr inbounds i32, i32* %27, i64 %149
  %151 = load i32, i32* %148, align 4
  store i32 %151, i32* %150, align 4
  %152 = getelementptr inbounds i32, i32* %144, i64 2
  %153 = add nuw nsw i64 %145, 2
  %154 = getelementptr inbounds i32, i32* %27, i64 %153
  %155 = load i32, i32* %152, align 4
  store i32 %155, i32* %154, align 4
  %156 = getelementptr inbounds i32, i32* %144, i64 3
  %157 = add nuw nsw i64 %145, 3
  %158 = getelementptr inbounds i32, i32* %27, i64 %157
  %159 = load i32, i32* %156, align 4
  store i32 %159, i32* %158, align 4
  %160 = getelementptr inbounds i32, i32* %144, i64 4
  %161 = add nuw nsw i64 %145, 4
  %162 = icmp eq i64 %161, %24
  br i1 %162, label %163, label %143, !llvm.loop !91

163:                                              ; preds = %139, %143, %120, %19
  br i1 %6, label %169, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %166 = bitcast i32** %165 to i8**
  %167 = load i8*, i8** %166, align 8
  tail call void @_ZdlPv(i8* %167) #12
  %168 = load i64, i64* %3, align 8
  br label %169

169:                                              ; preds = %164, %163
  %170 = phi i64 [ %168, %164 ], [ %4, %163 ]
  %171 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %172 = bitcast i32** %171 to i64*
  store i64 %28, i64* %172, align 8
  %173 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %173, align 8
  %174 = or i64 %170, 1
  %175 = add i64 %174, 2
  store i64 %175, i64* %3, align 8
  ret i32* %29
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15EmplaceBackSlowIJiEEERiDpOT_(%"class.absl::inlined_vector_internal::Storage.14"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !92
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !92
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !92
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 4611686018427387903
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #13
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 20, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = inttoptr i64 %21 to i32*
  %23 = inttoptr i64 %21 to i8*
  %24 = lshr i64 %4, 1
  %25 = shl i64 %20, 2
  %26 = tail call i8* @_Znwm(i64 %25) #12
  %27 = bitcast i8* %26 to i32*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds i32, i32* %27, i64 %24
  %30 = load i32, i32* %1, align 4
  store i32 %30, i32* %29, align 4
  %31 = icmp eq i64 %24, 0
  br i1 %31, label %163, label %32

32:                                               ; preds = %19
  %33 = icmp ult i64 %4, 16
  br i1 %33, label %122, label %34

34:                                               ; preds = %32
  %35 = shl i64 %24, 2
  %36 = getelementptr i8, i8* %26, i64 %35
  %37 = getelementptr i32, i32* %22, i64 %24
  %38 = bitcast i32* %37 to i8*
  %39 = icmp ult i8* %26, %38
  %40 = icmp ugt i8* %36, %23
  %41 = and i1 %39, %40
  br i1 %41, label %122, label %42

42:                                               ; preds = %34
  %43 = and i64 %24, 9223372036854775800
  %44 = getelementptr i32, i32* %22, i64 %43
  %45 = add nsw i64 %43, -8
  %46 = lshr exact i64 %45, 3
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 24
  br i1 %49, label %101, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr i32, i32* %22, i64 %53
  %56 = getelementptr inbounds i32, i32* %27, i64 %53
  %57 = bitcast i32* %55 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4, !alias.scope !95
  %59 = getelementptr i32, i32* %55, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4, !alias.scope !95
  %62 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %62, align 4, !alias.scope !98, !noalias !95
  %63 = getelementptr inbounds i32, i32* %56, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %64, align 4, !alias.scope !98, !noalias !95
  %65 = or i64 %53, 8
  %66 = getelementptr i32, i32* %22, i64 %65
  %67 = getelementptr inbounds i32, i32* %27, i64 %65
  %68 = bitcast i32* %66 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !95
  %70 = getelementptr i32, i32* %66, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !alias.scope !95
  %73 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %73, align 4, !alias.scope !98, !noalias !95
  %74 = getelementptr inbounds i32, i32* %67, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %75, align 4, !alias.scope !98, !noalias !95
  %76 = or i64 %53, 16
  %77 = getelementptr i32, i32* %22, i64 %76
  %78 = getelementptr inbounds i32, i32* %27, i64 %76
  %79 = bitcast i32* %77 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !95
  %81 = getelementptr i32, i32* %77, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !95
  %84 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %84, align 4, !alias.scope !98, !noalias !95
  %85 = getelementptr inbounds i32, i32* %78, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %86, align 4, !alias.scope !98, !noalias !95
  %87 = or i64 %53, 24
  %88 = getelementptr i32, i32* %22, i64 %87
  %89 = getelementptr inbounds i32, i32* %27, i64 %87
  %90 = bitcast i32* %88 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !95
  %92 = getelementptr i32, i32* %88, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !95
  %95 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4, !alias.scope !98, !noalias !95
  %96 = getelementptr inbounds i32, i32* %89, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %97, align 4, !alias.scope !98, !noalias !95
  %98 = add i64 %53, 32
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !100

101:                                              ; preds = %52, %42
  %102 = phi i64 [ 0, %42 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr i32, i32* %22, i64 %105
  %108 = getelementptr inbounds i32, i32* %27, i64 %105
  %109 = bitcast i32* %107 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !95
  %111 = getelementptr i32, i32* %107, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !95
  %114 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !98, !noalias !95
  %115 = getelementptr inbounds i32, i32* %108, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !98, !noalias !95
  %117 = add i64 %105, 8
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !101

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %24, %43
  br i1 %121, label %163, label %122

122:                                              ; preds = %120, %34, %32
  %123 = phi i32* [ %22, %34 ], [ %22, %32 ], [ %44, %120 ]
  %124 = phi i64 [ 0, %34 ], [ 0, %32 ], [ %43, %120 ]
  %125 = xor i64 %124, -1
  %126 = add nsw i64 %24, %125
  %127 = and i64 %24, 3
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %139, label %129

129:                                              ; preds = %122, %129
  %130 = phi i32* [ %135, %129 ], [ %123, %122 ]
  %131 = phi i64 [ %136, %129 ], [ %124, %122 ]
  %132 = phi i64 [ %137, %129 ], [ %127, %122 ]
  %133 = getelementptr inbounds i32, i32* %27, i64 %131
  %134 = load i32, i32* %130, align 4
  store i32 %134, i32* %133, align 4
  %135 = getelementptr inbounds i32, i32* %130, i64 1
  %136 = add nuw nsw i64 %131, 1
  %137 = add i64 %132, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %129, !llvm.loop !102

139:                                              ; preds = %129, %122
  %140 = phi i32* [ %123, %122 ], [ %135, %129 ]
  %141 = phi i64 [ %124, %122 ], [ %136, %129 ]
  %142 = icmp ult i64 %126, 3
  br i1 %142, label %163, label %143

143:                                              ; preds = %139, %143
  %144 = phi i32* [ %160, %143 ], [ %140, %139 ]
  %145 = phi i64 [ %161, %143 ], [ %141, %139 ]
  %146 = getelementptr inbounds i32, i32* %27, i64 %145
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %146, align 4
  %148 = getelementptr inbounds i32, i32* %144, i64 1
  %149 = add nuw nsw i64 %145, 1
  %150 = getelementptr inbounds i32, i32* %27, i64 %149
  %151 = load i32, i32* %148, align 4
  store i32 %151, i32* %150, align 4
  %152 = getelementptr inbounds i32, i32* %144, i64 2
  %153 = add nuw nsw i64 %145, 2
  %154 = getelementptr inbounds i32, i32* %27, i64 %153
  %155 = load i32, i32* %152, align 4
  store i32 %155, i32* %154, align 4
  %156 = getelementptr inbounds i32, i32* %144, i64 3
  %157 = add nuw nsw i64 %145, 3
  %158 = getelementptr inbounds i32, i32* %27, i64 %157
  %159 = load i32, i32* %156, align 4
  store i32 %159, i32* %158, align 4
  %160 = getelementptr inbounds i32, i32* %144, i64 4
  %161 = add nuw nsw i64 %145, 4
  %162 = icmp eq i64 %161, %24
  br i1 %162, label %163, label %143, !llvm.loop !103

163:                                              ; preds = %139, %143, %120, %19
  br i1 %6, label %169, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1, i32 0, i32 0
  %166 = bitcast i32** %165 to i8**
  %167 = load i8*, i8** %166, align 8
  tail call void @_ZdlPv(i8* %167) #12
  %168 = load i64, i64* %3, align 8
  br label %169

169:                                              ; preds = %164, %163
  %170 = phi i64 [ %168, %164 ], [ %4, %163 ]
  %171 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1, i32 0, i32 0
  %172 = bitcast i32** %171 to i64*
  store i64 %28, i64* %172, align 8
  %173 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.14", %"class.absl::inlined_vector_internal::Storage.14"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %173, align 8
  %174 = or i64 %170, 1
  %175 = add i64 %174, 2
  store i64 %175, i64* %3, align 8
  ret i32* %29
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.webrtc::RenderResolution"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15EmplaceBackSlowIJiiEEERS3_DpOT_(%"class.absl::inlined_vector_internal::Storage.16"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !104
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1
  %10 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %9 to i64
  br label %20

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.webrtc::RenderResolution"** %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !104
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !104
  %17 = shl i64 %16, 1
  %18 = icmp ugt i64 %17, 2305843009213693951
  br i1 %18, label %19, label %20

19:                                               ; preds = %11
  tail call void @abort() #13
  unreachable

20:                                               ; preds = %8, %11
  %21 = phi i64 [ 8, %8 ], [ %17, %11 ]
  %22 = phi i64 [ %10, %8 ], [ %14, %11 ]
  %23 = lshr i64 %5, 1
  %24 = shl i64 %21, 3
  %25 = tail call i8* @_Znwm(i64 %24) #12
  %26 = bitcast i8* %25 to %"class.webrtc::RenderResolution"*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %23
  %29 = load i32, i32* %1, align 4
  %30 = load i32, i32* %2, align 4
  %31 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %28, i64 0, i32 0
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %23, i32 1
  store i32 %30, i32* %32, align 4
  %33 = icmp eq i64 %23, 0
  br i1 %33, label %117, label %34

34:                                               ; preds = %20
  %35 = inttoptr i64 %22 to %"class.webrtc::RenderResolution"*
  %36 = inttoptr i64 %22 to i64*
  %37 = add nsw i64 %23, -1
  %38 = and i64 %23, 7
  %39 = icmp ult i64 %37, 7
  br i1 %39, label %99, label %40

40:                                               ; preds = %34
  %41 = sub nsw i64 %23, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi %"class.webrtc::RenderResolution"* [ %35, %40 ], [ %92, %42 ]
  %44 = phi i64* [ %36, %40 ], [ %94, %42 ]
  %45 = phi i64 [ 0, %40 ], [ %93, %42 ]
  %46 = phi i64 [ %41, %40 ], [ %95, %42 ]
  %47 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %45
  %48 = bitcast %"class.webrtc::RenderResolution"* %47 to i64*
  %49 = load i64, i64* %44, align 4
  store i64 %49, i64* %48, align 4
  %50 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 1
  %51 = or i64 %45, 1
  %52 = bitcast %"class.webrtc::RenderResolution"* %50 to i64*
  %53 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %51
  %54 = bitcast %"class.webrtc::RenderResolution"* %53 to i64*
  %55 = load i64, i64* %52, align 4
  store i64 %55, i64* %54, align 4
  %56 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 2
  %57 = or i64 %45, 2
  %58 = bitcast %"class.webrtc::RenderResolution"* %56 to i64*
  %59 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %57
  %60 = bitcast %"class.webrtc::RenderResolution"* %59 to i64*
  %61 = load i64, i64* %58, align 4
  store i64 %61, i64* %60, align 4
  %62 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 3
  %63 = or i64 %45, 3
  %64 = bitcast %"class.webrtc::RenderResolution"* %62 to i64*
  %65 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %63
  %66 = bitcast %"class.webrtc::RenderResolution"* %65 to i64*
  %67 = load i64, i64* %64, align 4
  store i64 %67, i64* %66, align 4
  %68 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 4
  %69 = or i64 %45, 4
  %70 = bitcast %"class.webrtc::RenderResolution"* %68 to i64*
  %71 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %69
  %72 = bitcast %"class.webrtc::RenderResolution"* %71 to i64*
  %73 = load i64, i64* %70, align 4
  store i64 %73, i64* %72, align 4
  %74 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 5
  %75 = or i64 %45, 5
  %76 = bitcast %"class.webrtc::RenderResolution"* %74 to i64*
  %77 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %75
  %78 = bitcast %"class.webrtc::RenderResolution"* %77 to i64*
  %79 = load i64, i64* %76, align 4
  store i64 %79, i64* %78, align 4
  %80 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 6
  %81 = or i64 %45, 6
  %82 = bitcast %"class.webrtc::RenderResolution"* %80 to i64*
  %83 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %81
  %84 = bitcast %"class.webrtc::RenderResolution"* %83 to i64*
  %85 = load i64, i64* %82, align 4
  store i64 %85, i64* %84, align 4
  %86 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 7
  %87 = or i64 %45, 7
  %88 = bitcast %"class.webrtc::RenderResolution"* %86 to i64*
  %89 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %87
  %90 = bitcast %"class.webrtc::RenderResolution"* %89 to i64*
  %91 = load i64, i64* %88, align 4
  store i64 %91, i64* %90, align 4
  %92 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %43, i64 8
  %93 = add nuw nsw i64 %45, 8
  %94 = bitcast %"class.webrtc::RenderResolution"* %92 to i64*
  %95 = add i64 %46, -8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %42

97:                                               ; preds = %42
  %98 = bitcast %"class.webrtc::RenderResolution"* %92 to i64*
  br label %99

99:                                               ; preds = %97, %34
  %100 = phi %"class.webrtc::RenderResolution"* [ %35, %34 ], [ %92, %97 ]
  %101 = phi i64* [ %36, %34 ], [ %98, %97 ]
  %102 = phi i64 [ 0, %34 ], [ %93, %97 ]
  %103 = icmp eq i64 %38, 0
  br i1 %103, label %117, label %104

104:                                              ; preds = %99, %104
  %105 = phi %"class.webrtc::RenderResolution"* [ %112, %104 ], [ %100, %99 ]
  %106 = phi i64* [ %114, %104 ], [ %101, %99 ]
  %107 = phi i64 [ %113, %104 ], [ %102, %99 ]
  %108 = phi i64 [ %115, %104 ], [ %38, %99 ]
  %109 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %26, i64 %107
  %110 = bitcast %"class.webrtc::RenderResolution"* %109 to i64*
  %111 = load i64, i64* %106, align 4
  store i64 %111, i64* %110, align 4
  %112 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %105, i64 1
  %113 = add nuw nsw i64 %107, 1
  %114 = bitcast %"class.webrtc::RenderResolution"* %112 to i64*
  %115 = add i64 %108, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %104, !llvm.loop !107

117:                                              ; preds = %99, %104, %20
  br i1 %7, label %123, label %118

118:                                              ; preds = %117
  %119 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"class.webrtc::RenderResolution"** %119 to i8**
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #12
  %122 = load i64, i64* %4, align 8
  br label %123

123:                                              ; preds = %118, %117
  %124 = phi i64 [ %122, %118 ], [ %5, %117 ]
  %125 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"class.webrtc::RenderResolution"** %125 to i64*
  store i64 %27, i64* %126, align 8
  %127 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.16", %"class.absl::inlined_vector_internal::Storage.16"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %21, i64* %127, align 8
  %128 = or i64 %124, 1
  %129 = add i64 %128, 2
  store i64 %129, i64* %4, align 8
  ret %"class.webrtc::RenderResolution"* %28
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!7 = distinct !{!7, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!10 = distinct !{!10, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!13 = distinct !{!13, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!16 = distinct !{!16, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!21 = distinct !{!21, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!24 = distinct !{!24, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!27 = distinct !{!27, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = distinct !{!35, !18}
!36 = distinct !{!36, !18}
!37 = distinct !{!37, !34}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !34}
!44 = distinct !{!44, !18}
!45 = distinct !{!45, !18}
!46 = distinct !{!46, !34}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!49 = distinct !{!49, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !34}
!56 = distinct !{!56, !18}
!57 = distinct !{!57, !18}
!58 = distinct !{!58, !34}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !34}
!65 = distinct !{!65, !18}
!66 = distinct !{!66, !18}
!67 = distinct !{!67, !34}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!70 = distinct !{!70, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !34}
!77 = distinct !{!77, !18}
!78 = distinct !{!78, !18}
!79 = distinct !{!79, !34}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!82 = distinct !{!82, !"_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !34}
!89 = distinct !{!89, !18}
!90 = distinct !{!90, !18}
!91 = distinct !{!91, !34}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv: argument 0"}
!94 = distinct !{!94, !"_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE15MakeStorageViewEv"}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !34}
!101 = distinct !{!101, !18}
!102 = distinct !{!102, !18}
!103 = distinct !{!103, !34}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!106 = distinct !{!106, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!107 = distinct !{!107, !18}
