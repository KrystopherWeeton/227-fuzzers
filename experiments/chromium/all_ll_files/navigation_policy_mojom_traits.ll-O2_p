; ModuleID = '../../third_party/blink/common/navigation/navigation_policy_mojom_traits.cc'
source_filename = "../../third_party/blink/common/navigation/navigation_policy_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::mojom::internal::NavigationDownloadTypes_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::NavigationDownloadTypes"* }
%"class.blink::mojom::NavigationDownloadTypes" = type { i8, i8, i8, i8, i8, i8, i8 }
%"struct.blink::NavigationDownloadPolicy" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset", i8, [7 x i8] }>
%"class.blink::mojom::internal::NavigationDownloadPolicy_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", i8, [7 x i8] }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.5", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair.2" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.16, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.18", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.15", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.16 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.blink::mojom::NavigationDownloadPolicyDataView" = type { %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"*, %"class.mojo::Message"* }

$_ZN5blink5mojom32NavigationDownloadPolicyDataView17ReadObservedTypesINSt3__16bitsetILm13EEEEEbPT_ = comdat any

$_ZN5blink5mojom32NavigationDownloadPolicyDataView19ReadDisallowedTypesINSt3__16bitsetILm13EEEEEbPT_ = comdat any

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE11view_sourceERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 2
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE12interstitialERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 4
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE19opener_cross_originERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 32
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE19ad_frame_no_gestureERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 256
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE8ad_frameERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1024
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE7sandboxERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 2048
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE10no_gestureERKS6_(%"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 4096
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom31NavigationDownloadTypesDataViewENSt3__16bitsetILm13EEEE4ReadES3_PS6_(%"class.blink::mojom::internal::NavigationDownloadTypes_Data"*, %"class.std::__1::bitset"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::internal::NavigationDownloadTypes_Data", %"class.blink::mojom::internal::NavigationDownloadTypes_Data"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = or i64 %9, 2
  store i64 %10, i64* %8, align 8
  %11 = load i8, i8* %3, align 1
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i8 [ %4, %2 ], [ %11, %7 ]
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = or i64 %18, 4
  store i64 %19, i64* %17, align 8
  %20 = load i8, i8* %3, align 1
  br label %21

21:                                               ; preds = %12, %16
  %22 = phi i8 [ %13, %12 ], [ %20, %16 ]
  %23 = and i8 %22, 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = or i64 %27, 32
  store i64 %28, i64* %26, align 8
  %29 = load i8, i8* %3, align 1
  br label %30

30:                                               ; preds = %21, %25
  %31 = phi i8 [ %22, %21 ], [ %29, %25 ]
  %32 = and i8 %31, 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = or i64 %36, 256
  store i64 %37, i64* %35, align 8
  %38 = load i8, i8* %3, align 1
  br label %39

39:                                               ; preds = %30, %34
  %40 = phi i8 [ %31, %30 ], [ %38, %34 ]
  %41 = and i8 %40, 16
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = or i64 %45, 1024
  store i64 %46, i64* %44, align 8
  %47 = load i8, i8* %3, align 1
  br label %48

48:                                               ; preds = %39, %43
  %49 = phi i8 [ %40, %39 ], [ %47, %43 ]
  %50 = and i8 %49, 32
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = or i64 %54, 2048
  store i64 %55, i64* %53, align 8
  %56 = load i8, i8* %3, align 1
  br label %57

57:                                               ; preds = %48, %52
  %58 = phi i8 [ %49, %48 ], [ %56, %52 ]
  %59 = and i8 %58, 64
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, 4096
  store i64 %64, i64* %62, align 8
  br label %65

65:                                               ; preds = %57, %61
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN5blink5mojom32NavigationDownloadPolicyDataViewENS1_24NavigationDownloadPolicyEE14observed_typesERKS4_(%"class.mojo::StructPtr"* noalias nocapture sret, %"struct.blink::NavigationDownloadPolicy"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 7) #5, !noalias !2
  %4 = bitcast i8* %3 to %"class.blink::mojom::NavigationDownloadTypes"*
  tail call void @_ZN5blink5mojom23NavigationDownloadTypesC1Ev(%"class.blink::mojom::NavigationDownloadTypes"* nonnull %4) #6, !noalias !2
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8, !alias.scope !2
  %7 = getelementptr inbounds %"struct.blink::NavigationDownloadPolicy", %"struct.blink::NavigationDownloadPolicy"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !7
  %9 = lshr i64 %8, 1
  %10 = trunc i64 %9 to i8
  %11 = and i8 %10, 1
  store i8 %11, i8* %3, align 1, !noalias !7
  %12 = getelementptr inbounds i8, i8* %3, i64 1
  %13 = lshr i64 %8, 2
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 1
  store i8 %15, i8* %12, align 1, !noalias !7
  %16 = getelementptr inbounds i8, i8* %3, i64 2
  %17 = lshr i64 %8, 5
  %18 = trunc i64 %17 to i8
  %19 = and i8 %18, 1
  store i8 %19, i8* %16, align 1, !noalias !7
  %20 = getelementptr inbounds i8, i8* %3, i64 3
  %21 = lshr i64 %8, 8
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  store i8 %23, i8* %20, align 1, !noalias !7
  %24 = getelementptr inbounds i8, i8* %3, i64 4
  %25 = lshr i64 %8, 10
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  store i8 %27, i8* %24, align 1, !noalias !7
  %28 = getelementptr inbounds i8, i8* %3, i64 5
  %29 = lshr i64 %8, 11
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  store i8 %31, i8* %28, align 1, !noalias !7
  %32 = getelementptr inbounds i8, i8* %3, i64 6
  %33 = lshr i64 %8, 12
  %34 = trunc i64 %33 to i8
  %35 = and i8 %34, 1
  store i8 %35, i8* %32, align 1, !noalias !7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN5blink5mojom32NavigationDownloadPolicyDataViewENS1_24NavigationDownloadPolicyEE16disallowed_typesERKS4_(%"class.mojo::StructPtr"* noalias nocapture sret, %"struct.blink::NavigationDownloadPolicy"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 7) #5, !noalias !8
  %4 = bitcast i8* %3 to %"class.blink::mojom::NavigationDownloadTypes"*
  tail call void @_ZN5blink5mojom23NavigationDownloadTypesC1Ev(%"class.blink::mojom::NavigationDownloadTypes"* nonnull %4) #6, !noalias !8
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8, !alias.scope !8
  %7 = getelementptr inbounds %"struct.blink::NavigationDownloadPolicy", %"struct.blink::NavigationDownloadPolicy"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !13
  %9 = lshr i64 %8, 1
  %10 = trunc i64 %9 to i8
  %11 = and i8 %10, 1
  store i8 %11, i8* %3, align 1, !noalias !13
  %12 = getelementptr inbounds i8, i8* %3, i64 1
  %13 = lshr i64 %8, 2
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 1
  store i8 %15, i8* %12, align 1, !noalias !13
  %16 = getelementptr inbounds i8, i8* %3, i64 2
  %17 = lshr i64 %8, 5
  %18 = trunc i64 %17 to i8
  %19 = and i8 %18, 1
  store i8 %19, i8* %16, align 1, !noalias !13
  %20 = getelementptr inbounds i8, i8* %3, i64 3
  %21 = lshr i64 %8, 8
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  store i8 %23, i8* %20, align 1, !noalias !13
  %24 = getelementptr inbounds i8, i8* %3, i64 4
  %25 = lshr i64 %8, 10
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  store i8 %27, i8* %24, align 1, !noalias !13
  %28 = getelementptr inbounds i8, i8* %3, i64 5
  %29 = lshr i64 %8, 11
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  store i8 %31, i8* %28, align 1, !noalias !13
  %32 = getelementptr inbounds i8, i8* %3, i64 6
  %33 = lshr i64 %8, 12
  %34 = trunc i64 %33 to i8
  %35 = and i8 %34, 1
  store i8 %35, i8* %32, align 1, !noalias !13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom32NavigationDownloadPolicyDataViewENS1_24NavigationDownloadPolicyEE4ReadES3_PS4_(%"class.blink::mojom::internal::NavigationDownloadPolicy_Data"*, %"class.mojo::Message"*, %"struct.blink::NavigationDownloadPolicy"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::mojom::NavigationDownloadPolicyDataView", align 8
  %5 = getelementptr inbounds %"class.blink::mojom::NavigationDownloadPolicyDataView", %"class.blink::mojom::NavigationDownloadPolicyDataView"* %4, i64 0, i32 0
  store %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"* %0, %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::NavigationDownloadPolicyDataView", %"class.blink::mojom::NavigationDownloadPolicyDataView"* %4, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %6, align 8
  %7 = getelementptr inbounds %"struct.blink::NavigationDownloadPolicy", %"struct.blink::NavigationDownloadPolicy"* %2, i64 0, i32 0
  %8 = call zeroext i1 @_ZN5blink5mojom32NavigationDownloadPolicyDataView17ReadObservedTypesINSt3__16bitsetILm13EEEEEbPT_(%"class.blink::mojom::NavigationDownloadPolicyDataView"* nonnull %4, %"class.std::__1::bitset"* %7)
  br i1 %8, label %9, label %18

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.blink::NavigationDownloadPolicy", %"struct.blink::NavigationDownloadPolicy"* %2, i64 0, i32 1
  %11 = call zeroext i1 @_ZN5blink5mojom32NavigationDownloadPolicyDataView19ReadDisallowedTypesINSt3__16bitsetILm13EEEEEbPT_(%"class.blink::mojom::NavigationDownloadPolicyDataView"* nonnull %4, %"class.std::__1::bitset"* %10)
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"*, %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"** %5, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::internal::NavigationDownloadPolicy_Data", %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"* %13, i64 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 1
  %17 = getelementptr inbounds %"struct.blink::NavigationDownloadPolicy", %"struct.blink::NavigationDownloadPolicy"* %2, i64 0, i32 2
  store i8 %16, i8* %17, align 8
  br label %18

18:                                               ; preds = %3, %9, %12
  %19 = phi i1 [ true, %12 ], [ false, %9 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom32NavigationDownloadPolicyDataView17ReadObservedTypesINSt3__16bitsetILm13EEEEEbPT_(%"class.blink::mojom::NavigationDownloadPolicyDataView"*, %"class.std::__1::bitset"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::NavigationDownloadPolicyDataView", %"class.blink::mojom::NavigationDownloadPolicyDataView"* %0, i64 0, i32 0
  %4 = load %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"*, %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::internal::NavigationDownloadPolicy_Data", %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = icmp eq i8* %10, null
  %12 = or i1 %8, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = or i64 %20, 2
  store i64 %21, i64* %19, align 8
  %22 = load i8, i8* %14, align 1
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i8 [ %15, %13 ], [ %22, %18 ]
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = or i64 %29, 4
  store i64 %30, i64* %28, align 8
  %31 = load i8, i8* %14, align 1
  br label %32

32:                                               ; preds = %27, %23
  %33 = phi i8 [ %24, %23 ], [ %31, %27 ]
  %34 = and i8 %33, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = or i64 %38, 32
  store i64 %39, i64* %37, align 8
  %40 = load i8, i8* %14, align 1
  br label %41

41:                                               ; preds = %36, %32
  %42 = phi i8 [ %33, %32 ], [ %40, %36 ]
  %43 = and i8 %42, 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = or i64 %47, 256
  store i64 %48, i64* %46, align 8
  %49 = load i8, i8* %14, align 1
  br label %50

50:                                               ; preds = %45, %41
  %51 = phi i8 [ %42, %41 ], [ %49, %45 ]
  %52 = and i8 %51, 16
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %56, 1024
  store i64 %57, i64* %55, align 8
  %58 = load i8, i8* %14, align 1
  br label %59

59:                                               ; preds = %54, %50
  %60 = phi i8 [ %51, %50 ], [ %58, %54 ]
  %61 = and i8 %60, 32
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = or i64 %65, 2048
  store i64 %66, i64* %64, align 8
  %67 = load i8, i8* %14, align 1
  br label %68

68:                                               ; preds = %63, %59
  %69 = phi i8 [ %60, %59 ], [ %67, %63 ]
  %70 = and i8 %69, 64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = or i64 %74, 4096
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %2, %68, %72
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom32NavigationDownloadPolicyDataView19ReadDisallowedTypesINSt3__16bitsetILm13EEEEEbPT_(%"class.blink::mojom::NavigationDownloadPolicyDataView"*, %"class.std::__1::bitset"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::NavigationDownloadPolicyDataView", %"class.blink::mojom::NavigationDownloadPolicyDataView"* %0, i64 0, i32 0
  %4 = load %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"*, %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::internal::NavigationDownloadPolicy_Data", %"class.blink::mojom::internal::NavigationDownloadPolicy_Data"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = icmp eq i8* %10, null
  %12 = or i1 %8, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = or i64 %20, 2
  store i64 %21, i64* %19, align 8
  %22 = load i8, i8* %14, align 1
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i8 [ %15, %13 ], [ %22, %18 ]
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = or i64 %29, 4
  store i64 %30, i64* %28, align 8
  %31 = load i8, i8* %14, align 1
  br label %32

32:                                               ; preds = %27, %23
  %33 = phi i8 [ %24, %23 ], [ %31, %27 ]
  %34 = and i8 %33, 4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = or i64 %38, 32
  store i64 %39, i64* %37, align 8
  %40 = load i8, i8* %14, align 1
  br label %41

41:                                               ; preds = %36, %32
  %42 = phi i8 [ %33, %32 ], [ %40, %36 ]
  %43 = and i8 %42, 8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = or i64 %47, 256
  store i64 %48, i64* %46, align 8
  %49 = load i8, i8* %14, align 1
  br label %50

50:                                               ; preds = %45, %41
  %51 = phi i8 [ %42, %41 ], [ %49, %45 ]
  %52 = and i8 %51, 16
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %56, 1024
  store i64 %57, i64* %55, align 8
  %58 = load i8, i8* %14, align 1
  br label %59

59:                                               ; preds = %54, %50
  %60 = phi i8 [ %51, %50 ], [ %58, %54 ]
  %61 = and i8 %60, 32
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = or i64 %65, 2048
  store i64 %66, i64* %64, align 8
  %67 = load i8, i8* %14, align 1
  br label %68

68:                                               ; preds = %63, %59
  %69 = phi i8 [ %60, %59 ], [ %67, %63 ]
  %70 = and i8 %69, 64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = or i64 %74, 4096
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %2, %68, %72
  ret i1 true
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN5blink5mojom23NavigationDownloadTypesC1Ev(%"class.blink::mojom::NavigationDownloadTypes"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom23NavigationDownloadTypes3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom23NavigationDownloadTypes3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = distinct !{!5, !6, !"_ZN4mojo12_GLOBAL__N_119CreateDownloadTypesERKNSt3__16bitsetILm13EEE: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo12_GLOBAL__N_119CreateDownloadTypesERKNSt3__16bitsetILm13EEE"}
!7 = !{!5}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN5blink5mojom23NavigationDownloadTypes3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink5mojom23NavigationDownloadTypes3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!11 = distinct !{!11, !12, !"_ZN4mojo12_GLOBAL__N_119CreateDownloadTypesERKNSt3__16bitsetILm13EEE: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo12_GLOBAL__N_119CreateDownloadTypesERKNSt3__16bitsetILm13EEE"}
!13 = !{!11}
