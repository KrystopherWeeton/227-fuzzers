; ModuleID = '../../components/offline_pages/core/auto_fetch.cc'
source_filename = "../../components/offline_pages/core/auto_fetch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.offline_pages::auto_fetch::ClientIdMetadata" = type { i32 }
%"struct.offline_pages::ClientId" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"struct.offline_pages::auto_fetch::ClientIdMetadata" }

@_ZN13offline_pages19kAutoAsyncNamespaceE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c"A\00", align 1

@_ZN13offline_pages10auto_fetch16ClientIdMetadataC1Ev = hidden unnamed_addr alias void (%"struct.offline_pages::auto_fetch::ClientIdMetadata"*), void (%"struct.offline_pages::auto_fetch::ClientIdMetadata"*)* @_ZN13offline_pages10auto_fetch16ClientIdMetadataC2Ev
@_ZN13offline_pages10auto_fetch16ClientIdMetadataC1ERKS1_ = hidden unnamed_addr alias void (%"struct.offline_pages::auto_fetch::ClientIdMetadata"*, %"struct.offline_pages::auto_fetch::ClientIdMetadata"*), void (%"struct.offline_pages::auto_fetch::ClientIdMetadata"*, %"struct.offline_pages::auto_fetch::ClientIdMetadata"*)* @_ZN13offline_pages10auto_fetch16ClientIdMetadataC2ERKS1_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13offline_pages10auto_fetch16ClientIdMetadataC2Ev(%"struct.offline_pages::auto_fetch::ClientIdMetadata"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13offline_pages10auto_fetch16ClientIdMetadataC2ERKS1_(%"struct.offline_pages::auto_fetch::ClientIdMetadata"* nocapture, %"struct.offline_pages::auto_fetch::ClientIdMetadata"* nocapture readonly dereferenceable(4)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.offline_pages::auto_fetch::ClientIdMetadata", %"struct.offline_pages::auto_fetch::ClientIdMetadata"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.offline_pages::auto_fetch::ClientIdMetadata", %"struct.offline_pages::auto_fetch::ClientIdMetadata"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages10auto_fetch12MakeClientIdERKNS0_16ClientIdMetadataE(%"struct.offline_pages::ClientId"* noalias sret, %"struct.offline_pages::auto_fetch::ClientIdMetadata"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN13offline_pages19kAutoAsyncNamespaceE, i64 0, i64 0)) #9
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %11) #10
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  br label %27

22:                                               ; preds = %12
  %23 = trunc i64 %8 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = icmp eq i64 %8, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %22, %14
  %28 = phi i8* [ %17, %14 ], [ %7, %22 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN13offline_pages19kAutoAsyncNamespaceE, i64 0, i64 0), i64 %8, i1 false) #9
  br label %29

29:                                               ; preds = %22, %27
  %30 = phi i8* [ %7, %22 ], [ %28, %27 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %8
  store i8 0, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = bitcast [2 x %"class.base::BasicStringPiece"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #9
  %34 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0
  %35 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 1
  store i64 1, i64* %36, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"struct.offline_pages::auto_fetch::ClientIdMetadata", %"struct.offline_pages::auto_fetch::ClientIdMetadata"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  call void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %39) #9
  %40 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = select i1 %44, i8* %46, i8* %37
  store i8* %47, i8** %40, align 8
  %48 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %43 to i64
  %52 = select i1 %44, i64 %50, i64 %51
  store i64 %52, i64* %48, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %4, i64 2, %"class.base::BasicStringPiece"* nonnull %34) #9
  call void @_ZN13offline_pages8ClientIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"struct.offline_pages::ClientId"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %29
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %29, %57
  %61 = load i8, i8* %42, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  %66 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

declare void @_ZN13offline_pages8ClientIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"struct.offline_pages::ClientId"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages10auto_fetch15ExtractMetadataERKNS_8ClientIdE(%"class.absl::optional"* noalias nocapture sret, %"struct.offline_pages::ClientId"* dereferenceable(48)) local_unnamed_addr #2 {
  %3 = alloca %"struct.offline_pages::auto_fetch::ClientIdMetadata", align 4
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN13offline_pages19kAutoAsyncNamespaceE, i64 0, i64 0)) #9
  %6 = bitcast %"struct.offline_pages::ClientId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"struct.offline_pages::ClientId", %"struct.offline_pages::ClientId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %5, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.offline_pages::ClientId", %"struct.offline_pages::ClientId"* %1, i64 0, i32 0
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %16, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN13offline_pages19kAutoAsyncNamespaceE, i64 0, i64 0), i64 %5) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %2
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 4
  br label %57

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.offline_pages::ClientId", %"struct.offline_pages::ClientId"* %1, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"struct.offline_pages::ClientId", %"struct.offline_pages::ClientId"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %36 = select i1 %26, i8* %34, i8* %35
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 65
  br i1 %38, label %41, label %39

39:                                               ; preds = %32, %21
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 4
  br label %57

41:                                               ; preds = %32
  %42 = bitcast %"struct.offline_pages::auto_fetch::ClientIdMetadata"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.offline_pages::auto_fetch::ClientIdMetadata", %"struct.offline_pages::auto_fetch::ClientIdMetadata"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %43, align 4
  %44 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %36, i8** %45, align 8
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %30, i64* %46, align 8
  %47 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 1, i64 -1)
  %48 = extractvalue { i8*, i64 } %47, 0
  %49 = extractvalue { i8*, i64 } %47, 1
  %50 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %48, i64 %49, i32* nonnull %43) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %50, label %53, label %52

52:                                               ; preds = %41
  store i8 0, i8* %51, align 4
  br label %56

53:                                               ; preds = %41
  store i8 1, i8* %51, align 4
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %43, align 4
  store i32 %55, i32* %54, align 4
  br label %56

56:                                               ; preds = %53, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  br label %57

57:                                               ; preds = %56, %39, %19
  ret void
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #2 align 2

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
