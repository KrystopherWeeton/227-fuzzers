; ModuleID = '../../third_party/skia/src/core/SkYUVPlanesCache.cpp'
source_filename = "../../third_party/skia/src/core/SkYUVPlanesCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array", %class.sk_sp.6, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.6 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.7, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%class.SkResourceCache = type { %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"*, %"class.SkResourceCache::Hash"*, %class.SkDiscardableMemory* (i64)*, i64, i64, i64, i32, [4 x i8], %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%"class.SkResourceCache::Hash" = type opaque
%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.SkResourceCache::PurgeSharedIDMessage"*, i64 }
%"struct.SkResourceCache::PurgeSharedIDMessage" = type { i64 }
%"struct.(anonymous namespace)::YUVValue" = type { %class.SkYUVAPixmaps, %class.SkCachedData* }
%"struct.(anonymous namespace)::YUVPlanesKey" = type <{ %"struct.SkResourceCache::Key", i32, [4 x i8] }>
%"struct.SkResourceCache::Key" = type { i32, i32, i32, i32, i8* }
%"struct.(anonymous namespace)::YUVPlanesRec" = type { %"struct.SkResourceCache::Rec", %"struct.(anonymous namespace)::YUVPlanesKey", %"struct.(anonymous namespace)::YUVValue" }

$_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_ = comdat any

$_ZN15SkResourceCache3Rec11canBePurgedEv = comdat any

$_ZN15SkResourceCache3Rec14postAddInstallEPv = comdat any

@_ZN12_GLOBAL__N_127gYUVPlanesKeyNamespaceLabelE = internal global i32 0, align 4
@_ZTVN12_GLOBAL__N_112YUVPlanesRecE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZN12_GLOBAL__N_112YUVPlanesRecD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZN12_GLOBAL__N_112YUVPlanesRecD0Ev to i8*), i8* bitcast (%"struct.SkResourceCache::Key"* (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZNK12_GLOBAL__N_112YUVPlanesRec6getKeyEv to i8*), i8* bitcast (i64 (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZNK12_GLOBAL__N_112YUVPlanesRec9bytesUsedEv to i8*), i8* bitcast (i1 (%"struct.SkResourceCache::Rec"*)* @_ZN15SkResourceCache3Rec11canBePurgedEv to i8*), i8* bitcast (void (%"struct.SkResourceCache::Rec"*, i8*)* @_ZN15SkResourceCache3Rec14postAddInstallEPv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZNK12_GLOBAL__N_112YUVPlanesRec11getCategoryEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%"struct.(anonymous namespace)::YUVPlanesRec"*)* @_ZNK12_GLOBAL__N_112YUVPlanesRec30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"yuv-planes\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCachedData* @_ZN16SkYUVPlanesCache10FindAndRefEjP13SkYUVAPixmapsP15SkResourceCache(i32, %class.SkYUVAPixmaps*, %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.(anonymous namespace)::YUVValue", align 8
  %5 = alloca %"struct.(anonymous namespace)::YUVPlanesKey", align 8
  %6 = bitcast %"struct.(anonymous namespace)::YUVValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 3
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 2, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 184, i1 false) #9
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %10, align 8
  %11 = bitcast %"struct.(anonymous namespace)::YUVPlanesKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesKey", %"struct.(anonymous namespace)::YUVPlanesKey"* %5, i64 0, i32 1
  %13 = bitcast %"struct.(anonymous namespace)::YUVPlanesKey"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  store i32 %0, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesKey", %"struct.(anonymous namespace)::YUVPlanesKey"* %5, i64 0, i32 0
  %15 = tail call i64 @_Z36SkMakeResourceCacheSharedIDForBitmapj(i32 %0) #9
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* nonnull %14, i8* bitcast (i32* @_ZN12_GLOBAL__N_127gYUVPlanesKeyNamespaceLabelE to i8*), i64 %15, i64 4) #9
  %16 = icmp eq %class.SkResourceCache* %2, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = call zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache* nonnull %2, %"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %14, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112YUVPlanesRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %6) #9
  br i1 %18, label %21, label %51

19:                                               ; preds = %3
  %20 = call zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* nonnull dereferenceable(24) %14, i1 (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZN12_GLOBAL__N_112YUVPlanesRec7VisitorERKN15SkResourceCache3RecEPv, i8* nonnull %6) #9
  br i1 %20, label %21, label %51

21:                                               ; preds = %19, %17
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 0
  %25 = call dereferenceable(160) %"struct.std::__1::array"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array"* %23, %"struct.std::__1::array"* nonnull dereferenceable(160) %24) #9
  %26 = icmp eq %class.SkYUVAPixmaps* %22, %1
  br i1 %26, label %44, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 1, i32 0
  %29 = load %class.SkData*, %class.SkData** %28, align 8
  %30 = icmp eq %class.SkData* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkData, %class.SkData* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %31, %27
  %35 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 1, i32 0
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  store %class.SkData* %29, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #9
  %43 = bitcast %class.SkData* %36 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %43) #9
  br label %44

44:                                               ; preds = %21, %34, %38, %42
  %45 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 2
  %47 = bitcast %class.SkYUVAInfo* %45 to i8*
  %48 = bitcast %class.SkYUVAInfo* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 36, i1 false) #9
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 1
  %50 = load %class.SkCachedData*, %class.SkCachedData** %49, align 8
  br label %51

51:                                               ; preds = %17, %19, %44
  %52 = phi %class.SkCachedData* [ %50, %44 ], [ null, %19 ], [ null, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 1, i32 0
  %54 = load %class.SkData*, %class.SkData** %53, align 8
  %55 = icmp eq %class.SkData* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.SkData, %class.SkData* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %54) #9
  %61 = bitcast %class.SkData* %54 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %61) #9
  br label %62

62:                                               ; preds = %60, %56, %51
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %63, align 8
  %65 = icmp eq %class.SkColorSpace* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = bitcast %class.SkColorSpace* %64 to i8*
  call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %70, %66, %62
  %73 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %73, align 8
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkColorSpace* %74 to i8*
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %76, %72
  %83 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %84 = load %class.SkColorSpace*, %class.SkColorSpace** %83, align 8
  %85 = icmp eq %class.SkColorSpace* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = bitcast %class.SkColorSpace* %84 to i8*
  call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %90, %86, %82
  %93 = getelementptr inbounds %"struct.(anonymous namespace)::YUVValue", %"struct.(anonymous namespace)::YUVValue"* %4, i64 0, i32 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %94 = load %class.SkColorSpace*, %class.SkColorSpace** %93, align 8
  %95 = icmp eq %class.SkColorSpace* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = bitcast %class.SkColorSpace* %94 to i8*
  call void @_ZdlPv(i8* %101) #10
  br label %102

102:                                              ; preds = %92, %96, %100
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %6) #9
  ret %class.SkCachedData* %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache*, %"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_112YUVPlanesRec7VisitorERKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* dereferenceable(24), i8*) #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %0, i64 2, i32 1
  %4 = getelementptr inbounds %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, i64 26
  %5 = bitcast %"struct.SkResourceCache::Rec"** %4 to %class.SkCachedData**
  %6 = load %class.SkCachedData*, %class.SkCachedData** %5, align 8
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %6, i1 zeroext false) #9
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %6, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %6, i1 zeroext false) #9
  br label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i64 208
  %13 = bitcast i8* %12 to %class.SkCachedData**
  store %class.SkCachedData* %6, %class.SkCachedData** %13, align 8
  %14 = bitcast i8* %1 to %"struct.std::__1::array"*
  %15 = bitcast %"struct.SkResourceCache::Rec"** %3 to %"struct.std::__1::array"*
  %16 = tail call dereferenceable(160) %"struct.std::__1::array"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array"* %14, %"struct.std::__1::array"* dereferenceable(160) %15) #9
  %17 = bitcast %"struct.SkResourceCache::Rec"** %3 to i8*
  %18 = icmp eq i8* %17, %1
  br i1 %18, label %38, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, i64 20
  %21 = bitcast %"struct.SkResourceCache::Rec"** %20 to %class.SkData**
  %22 = load %class.SkData*, %class.SkData** %21, align 8
  %23 = icmp eq %class.SkData* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %24, %19
  %28 = getelementptr inbounds i8, i8* %1, i64 160
  %29 = bitcast i8* %28 to %class.SkData**
  %30 = load %class.SkData*, %class.SkData** %29, align 8
  store %class.SkData* %22, %class.SkData** %29, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #9
  %37 = bitcast %class.SkData* %30 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %37) #9
  br label %38

38:                                               ; preds = %11, %27, %32, %36
  %39 = getelementptr inbounds i8, i8* %1, i64 168
  %40 = getelementptr inbounds %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, i64 21
  %41 = bitcast %"struct.SkResourceCache::Rec"** %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %41, i64 36, i1 false) #9
  br label %42

42:                                               ; preds = %38, %10
  %43 = phi i1 [ false, %10 ], [ true, %38 ]
  ret i1 %43
}

declare zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkYUVPlanesCache3AddEjP12SkCachedDataRK13SkYUVAPixmapsP15SkResourceCache(i32, %class.SkCachedData*, %class.SkYUVAPixmaps* dereferenceable(208), %class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.(anonymous namespace)::YUVPlanesKey", align 8
  %6 = bitcast %"struct.(anonymous namespace)::YUVPlanesKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesKey", %"struct.(anonymous namespace)::YUVPlanesKey"* %5, i64 0, i32 1
  %8 = bitcast %"struct.(anonymous namespace)::YUVPlanesKey"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  store i32 %0, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesKey", %"struct.(anonymous namespace)::YUVPlanesKey"* %5, i64 0, i32 0
  %10 = tail call i64 @_Z36SkMakeResourceCacheSharedIDForBitmapj(i32 %0) #9
  call void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"* nonnull %9, i8* bitcast (i32* @_ZN12_GLOBAL__N_127gYUVPlanesKeyNamespaceLabelE to i8*), i64 %10, i64 4) #9
  %11 = icmp eq %class.SkResourceCache* %3, null
  %12 = call i8* @_Znwm(i64 272) #10
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112YUVPlanesRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %6, i64 32, i1 false)
  %15 = getelementptr inbounds i8, i8* %12, i64 56
  %16 = getelementptr inbounds i8, i8* %12, i64 240
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 184, i1 false) #9
  %17 = bitcast i8* %16 to <4 x i32>*
  store <4 x i32> <i32 10, i32 1, i32 0, i32 0>, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 264
  %19 = bitcast i8* %18 to %class.SkCachedData**
  store %class.SkCachedData* %1, %class.SkCachedData** %19, align 8
  %20 = bitcast i8* %15 to %class.SkYUVAPixmaps*
  %21 = bitcast i8* %15 to %"struct.std::__1::array"*
  %22 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %2, i64 0, i32 0
  %23 = call dereferenceable(160) %"struct.std::__1::array"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array"* %21, %"struct.std::__1::array"* dereferenceable(160) %22) #9
  %24 = icmp eq %class.SkYUVAPixmaps* %20, %2
  br i1 %11, label %50, label %25

25:                                               ; preds = %4
  br i1 %24, label %44, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %2, i64 0, i32 1, i32 0
  %28 = load %class.SkData*, %class.SkData** %27, align 8
  %29 = icmp eq %class.SkData* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkData, %class.SkData* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %30, %26
  %34 = getelementptr inbounds i8, i8* %12, i64 216
  %35 = bitcast i8* %34 to %class.SkData**
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  store %class.SkData* %28, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #9
  %43 = bitcast %class.SkData* %36 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %43) #9
  br label %44

44:                                               ; preds = %25, %33, %38, %42
  %45 = getelementptr inbounds i8, i8* %12, i64 224
  %46 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %2, i64 0, i32 2
  %47 = bitcast %class.SkYUVAInfo* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %47, i64 36, i1 false) #9
  %48 = load %class.SkCachedData*, %class.SkCachedData** %19, align 8
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %48, i1 zeroext true) #9
  %49 = bitcast i8* %12 to %"struct.SkResourceCache::Rec"*
  call void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache* nonnull %3, %"struct.SkResourceCache::Rec"* nonnull %49, i8* null) #9
  br label %75

50:                                               ; preds = %4
  br i1 %24, label %69, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %2, i64 0, i32 1, i32 0
  %53 = load %class.SkData*, %class.SkData** %52, align 8
  %54 = icmp eq %class.SkData* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkData, %class.SkData* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %55, %51
  %59 = getelementptr inbounds i8, i8* %12, i64 216
  %60 = bitcast i8* %59 to %class.SkData**
  %61 = load %class.SkData*, %class.SkData** %60, align 8
  store %class.SkData* %53, %class.SkData** %60, align 8
  %62 = icmp eq %class.SkData* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.SkData, %class.SkData* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %61) #9
  %68 = bitcast %class.SkData* %61 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %68) #9
  br label %69

69:                                               ; preds = %50, %58, %63, %67
  %70 = getelementptr inbounds i8, i8* %12, i64 224
  %71 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %2, i64 0, i32 2
  %72 = bitcast %class.SkYUVAInfo* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %72, i64 36, i1 false) #9
  %73 = load %class.SkCachedData*, %class.SkCachedData** %19, align 8
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* %73, i1 zeroext true) #9
  %74 = bitcast i8* %12 to %"struct.SkResourceCache::Rec"*
  call void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"* nonnull %74, i8* null) #9
  br label %75

75:                                               ; preds = %69, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache*, %"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"*, i8*, i64, i64) local_unnamed_addr #2

declare i64 @_Z36SkMakeResourceCacheSharedIDForBitmapj(i32) local_unnamed_addr #2

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.std::__1::array"* @_ZNSt3__15arrayI8SkPixmapLm4EEaSERKS2_(%"struct.std::__1::array"*, %"struct.std::__1::array"* dereferenceable(160)) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::array"* %0, %1
  %4 = bitcast %"struct.std::__1::array"* %0 to i8*
  %5 = bitcast %"struct.std::__1::array"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #9
  br i1 %3, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = icmp eq %class.SkColorSpace* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %6
  %14 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  store %class.SkColorSpace* %8, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %2, %13, %17, %21
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = bitcast i32* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 2, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 0, i32 2, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  %32 = bitcast %struct.SkISize* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1
  %36 = bitcast %class.SkPixmap* %34 to i8*
  %37 = bitcast %class.SkPixmap* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #9
  br i1 %3, label %55, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic
  br label %45

45:                                               ; preds = %42, %38
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %47 = load %class.SkColorSpace*, %class.SkColorSpace** %46, align 8
  store %class.SkColorSpace* %40, %class.SkColorSpace** %46, align 8
  %48 = icmp eq %class.SkColorSpace* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = bitcast %class.SkColorSpace* %47 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %49, %45, %23
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 2, i32 0, i32 1
  %58 = bitcast i32* %57 to i64*
  %59 = bitcast i32* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 2, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 2, i32 1
  %63 = bitcast %struct.SkISize* %62 to i64*
  %64 = bitcast %struct.SkISize* %61 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2
  %68 = bitcast %class.SkPixmap* %66 to i8*
  %69 = bitcast %class.SkPixmap* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #9
  br i1 %3, label %87, label %70

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic
  br label %77

77:                                               ; preds = %74, %70
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %79 = load %class.SkColorSpace*, %class.SkColorSpace** %78, align 8
  store %class.SkColorSpace* %72, %class.SkColorSpace** %78, align 8
  %80 = icmp eq %class.SkColorSpace* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = bitcast %class.SkColorSpace* %79 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %85, %81, %77, %55
  %88 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 2, i32 0, i32 1
  %90 = bitcast i32* %89 to i64*
  %91 = bitcast i32* %88 to i64*
  %92 = load i64, i64* %90, align 8
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2, i32 2, i32 1
  %94 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 2, i32 1
  %95 = bitcast %struct.SkISize* %94 to i64*
  %96 = bitcast %struct.SkISize* %93 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3
  %99 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3
  %100 = bitcast %class.SkPixmap* %98 to i8*
  %101 = bitcast %class.SkPixmap* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #9
  br i1 %3, label %119, label %102

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  br label %109

109:                                              ; preds = %106, %102
  %110 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %111 = load %class.SkColorSpace*, %class.SkColorSpace** %110, align 8
  store %class.SkColorSpace* %104, %class.SkColorSpace** %110, align 8
  %112 = icmp eq %class.SkColorSpace* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = bitcast %class.SkColorSpace* %111 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %117, %113, %109, %87
  %120 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 2, i32 0, i32 1
  %122 = bitcast i32* %121 to i64*
  %123 = bitcast i32* %120 to i64*
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3, i32 2, i32 1
  %126 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 2, i32 1
  %127 = bitcast %struct.SkISize* %126 to i64*
  %128 = bitcast %struct.SkISize* %125 to i64*
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  ret %"struct.std::__1::array"* %0
}

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112YUVPlanesRecD2Ev(%"struct.(anonymous namespace)::YUVPlanesRec"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_112YUVPlanesRecE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 1
  %4 = load %class.SkCachedData*, %class.SkCachedData** %3, align 8
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* %4, i1 zeroext true) #9
  %5 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %6 = load %class.SkData*, %class.SkData** %5, align 8
  %7 = icmp eq %class.SkData* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %6) #9
  %13 = bitcast %class.SkData* %6 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %13) #9
  br label %14

14:                                               ; preds = %12, %8, %1
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %17 = icmp eq %class.SkColorSpace* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = bitcast %class.SkColorSpace* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %18, %14
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %27 = icmp eq %class.SkColorSpace* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorSpace* %26 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %28, %24
  %35 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0
  %36 = load %class.SkColorSpace*, %class.SkColorSpace** %35, align 8
  %37 = icmp eq %class.SkColorSpace* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast %class.SkColorSpace* %36 to i8*
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %38, %34
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %class.SkColorSpace*, %class.SkColorSpace** %45, align 8
  %47 = icmp eq %class.SkColorSpace* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = bitcast %class.SkColorSpace* %46 to i8*
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %44, %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112YUVPlanesRecD0Ev(%"struct.(anonymous namespace)::YUVPlanesRec"*) unnamed_addr #0 align 2 {
  tail call void @_ZN12_GLOBAL__N_112YUVPlanesRecD2Ev(%"struct.(anonymous namespace)::YUVPlanesRec"* %0) #9
  %2 = bitcast %"struct.(anonymous namespace)::YUVPlanesRec"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"struct.SkResourceCache::Key"* @_ZNK12_GLOBAL__N_112YUVPlanesRec6getKeyEv(%"struct.(anonymous namespace)::YUVPlanesRec"* readnone) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 1, i32 0
  ret %"struct.SkResourceCache::Key"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_112YUVPlanesRec9bytesUsedEv(%"struct.(anonymous namespace)::YUVPlanesRec"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 272
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN15SkResourceCache3Rec11canBePurgedEv(%"struct.SkResourceCache::Rec"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkResourceCache3Rec14postAddInstallEPv(%"struct.SkResourceCache::Rec"*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_112YUVPlanesRec11getCategoryEv(%"struct.(anonymous namespace)::YUVPlanesRec"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.SkDiscardableMemory* @_ZNK12_GLOBAL__N_112YUVPlanesRec30diagnostic_only_getDiscardableEv(%"struct.(anonymous namespace)::YUVPlanesRec"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::YUVPlanesRec", %"struct.(anonymous namespace)::YUVPlanesRec"* %0, i64 0, i32 2, i32 1
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %3, i64 0, i32 2, i32 0
  %9 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %class.SkDiscardableMemory* [ %9, %7 ], [ null, %1 ]
  ret %class.SkDiscardableMemory* %11
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
