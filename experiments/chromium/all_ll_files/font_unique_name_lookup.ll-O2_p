; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_unique_name_lookup.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_unique_name_lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontUniqueNameLookup" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN5blink20FontUniqueNameLookupD2Ev = comdat any

$_ZN5blink20FontUniqueNameLookupD0Ev = comdat any

$_ZN5blink20FontUniqueNameLookup40IsFontUniqueNameLookupReadyForSyncLookupEv = comdat any

$_ZN5blink20FontUniqueNameLookup27PrepareFontUniqueNameLookupEN4base12OnceCallbackIFvvEEE = comdat any

$_ZTVN5blink20FontUniqueNameLookupE = comdat any

@_ZTVN5blink20FontUniqueNameLookupE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::FontUniqueNameLookup"*)* @_ZN5blink20FontUniqueNameLookupD2Ev to i8*), i8* bitcast (void (%"class.blink::FontUniqueNameLookup"*)* @_ZN5blink20FontUniqueNameLookupD0Ev to i8*), i8* bitcast (i1 (%"class.blink::FontUniqueNameLookup"*)* @_ZN5blink20FontUniqueNameLookup40IsFontUniqueNameLookupReadyForSyncLookupEv to i8*), i8* bitcast (void (%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback"*)* @_ZN5blink20FontUniqueNameLookup27PrepareFontUniqueNameLookupEN4base12OnceCallbackIFvvEEE to i8*)] }, comdat, align 8
@_ZTVN5blink25FontUniqueNameLookupLinuxE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink20FontUniqueNameLookupC2Ev(%"class.blink::FontUniqueNameLookup"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontUniqueNameLookup", %"class.blink::FontUniqueNameLookup"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink20FontUniqueNameLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontUniqueNameLookup"* @_ZN5blink20FontUniqueNameLookup27GetPlatformUniqueNameLookupEv() local_unnamed_addr #1 align 2 {
  %1 = tail call noalias i8* @malloc(i64 8) #4
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink25FontUniqueNameLookupLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.blink::FontUniqueNameLookup"*
  ret %"class.blink::FontUniqueNameLookup"* %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20FontUniqueNameLookupD2Ev(%"class.blink::FontUniqueNameLookup"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20FontUniqueNameLookupD0Ev(%"class.blink::FontUniqueNameLookup"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink20FontUniqueNameLookup40IsFontUniqueNameLookupReadyForSyncLookupEv(%"class.blink::FontUniqueNameLookup"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20FontUniqueNameLookup27PrepareFontUniqueNameLookupEN4base12OnceCallbackIFvvEEE(%"class.blink::FontUniqueNameLookup"*, %"class.base::OnceCallback"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
