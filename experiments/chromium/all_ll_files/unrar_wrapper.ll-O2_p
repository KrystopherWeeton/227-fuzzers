; ModuleID = '../../third_party/unrar/src/unrar_wrapper.cc'
source_filename = "../../third_party/unrar/src/unrar_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.third_party_unrar::RarReader" = type { %"class.base::File", %"class.base::File", %"struct.third_party_unrar::RarReader::EntryInfo", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.28" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"struct.third_party_unrar::RarReader::EntryInfo" = type { %"class.base::FilePath", i8, i8, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.Archive* }
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.5, %union.anon.7, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.5 = type { i64 }
%union.anon.7 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.9, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.9 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.RarTime = type { i64 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon.3, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon.3 = type { i32 }
%struct.HashValue = type { i32, %union.anon.4 }
%union.anon.4 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CmdExtract* }
%class.CmdExtract = type <{ %class.RarTime, %class.CommandData*, %class.ComprDataIO, %class.Unpack*, i64, i64, i64, i8, i8, i8, i8, i8, [3 x i8], [2048 x i32], i8, i8, [2 x i8], [2048 x i32], i8, [3 x i8] }>
%class.CommandData = type { %class.RAROptions.base, i8, i8, i32, i8, [2064 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList, %class.StringList, %class.StringList }
%class.RAROptions.base = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.9, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32 }>
%class.StringList = type { %class.Array.15, i64, i64, [16 x i64], i64 }
%class.Array.15 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.Unpack = type { %class.ComprDataIO*, %class.BitInput, %class.ThreadPool*, %struct.UnpackThreadData*, i32, i8*, %class.Array, %class.Array, %class.Array.18, [4 x i32], i32, i32, i32, i64, i64, i32, i32, %struct.UnpackBlockHeader, %struct.UnpackBlockTables, i64, i8*, %class.FragmentedWindow, i8, i64, i8, i8, i8, i64, i8, [256 x i16], [256 x i16], [256 x i16], [256 x i16], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.DecodeTable], [1028 x i8], i8, i32, i32, i32, [4 x %struct.AudioVariables], i32, i32, %class.ModelPPM, i32, [404 x i8], i32, i8, i8, i8, %class.RarVM, %class.BitInput, %class.Array.21, %class.Array.21, %class.Array.23, i32, i64, i64 }
%struct.UnpackThreadData = type <{ %class.Unpack*, %class.BitInput, i8, [3 x i8], %struct.UnpackBlockHeader, i8, [3 x i8], %struct.UnpackBlockTables, i32, i8, i8, i8, i8, %struct.UnpackDecodedItem*, i32, i32, i32, [4 x i8] }>
%struct.UnpackDecodedItem = type { i32, i16, %union.anon.17 }
%union.anon.17 = type { i32 }
%class.Array.18 = type <{ %struct.UnpackFilter*, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter = type { i8, i32, i32, i8, i8 }
%struct.UnpackBlockHeader = type { i32, i32, i32, i32, i8, i8 }
%struct.UnpackBlockTables = type { %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable }
%struct.DecodeTable = type { i32, [16 x i32], [16 x i32], i32, [1024 x i8], [1024 x i16], [306 x i16] }
%class.FragmentedWindow = type { [32 x i8*], [32 x i64] }
%struct.AudioVariables = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32 }
%class.ModelPPM = type <{ i8, [25 x [16 x %struct.RARPPM_SEE2_CONTEXT]], %struct.RARPPM_SEE2_CONTEXT, [3 x i8], %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_STATE*, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], i8, i8, i8, i8, [128 x [64 x i16]], [4 x i8], %class.RangeCoder, %class.SubAllocator }>
%struct.RARPPM_SEE2_CONTEXT = type { i16, i8, i8 }
%struct.RARPPM_CONTEXT = type <{ i16, %union.anon.20, %struct.RARPPM_CONTEXT* }>
%union.anon.20 = type { %"struct.RARPPM_CONTEXT::FreqData" }
%"struct.RARPPM_CONTEXT::FreqData" = type <{ i16, %struct.RARPPM_STATE* }>
%struct.RARPPM_STATE = type <{ i8, i8, %struct.RARPPM_CONTEXT* }>
%class.RangeCoder = type { i32, i32, i32, %"struct.RangeCoder::SUBRANGE", %class.Unpack* }
%"struct.RangeCoder::SUBRANGE" = type { i32, i32, i32 }
%class.SubAllocator = type { i64, [38 x i8], [128 x i8], i8, i8*, i8*, i8*, [38 x %"struct.SubAllocator::RAR_NODE"], i8*, i8*, i8*, i8* }
%"struct.SubAllocator::RAR_NODE" = type { %"struct.SubAllocator::RAR_NODE"* }
%class.RarVM = type { i8*, [8 x i32] }
%class.BitInput = type { i32, i32, i8, i8* }
%class.Array.21 = type <{ %struct.UnpackFilter30**, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter30 = type { i32, i32, i8, i32, %struct.VM_PreparedProgram }
%struct.VM_PreparedProgram = type <{ i32, [7 x i32], i8*, i32, [4 x i8] }>
%class.Array.23 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CommandData* }
%"class.std::__1::basic_string.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon.37 }
%union.anon.37 = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short" = type { [5 x i32], %struct.anon.38 }
%struct.anon.38 = type { %"struct.std::__1::__padding.39", i8 }
%"struct.std::__1::__padding.39" = type { [3 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEC2IDnEEPKw = comdat any

$_ZN11CommandDataD2Ev = comdat any

@.str = private unnamed_addr constant [10 x i32] [i32 100, i32 117, i32 109, i32 109, i32 121, i32 46, i32 114, i32 97, i32 114, i32 0], align 4
@.str.1 = private unnamed_addr constant [3 x i32] [i32 45, i32 112, i32 0], align 4
@.str.2 = private unnamed_addr constant [2 x i32] [i32 120, i32 0], align 4

@_ZN17third_party_unrar9RarReaderC1Ev = hidden unnamed_addr alias void (%"class.third_party_unrar::RarReader"*), void (%"class.third_party_unrar::RarReader"*)* @_ZN17third_party_unrar9RarReaderC2Ev
@_ZN17third_party_unrar9RarReaderD1Ev = hidden unnamed_addr alias void (%"class.third_party_unrar::RarReader"*), void (%"class.third_party_unrar::RarReader"*)* @_ZN17third_party_unrar9RarReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17third_party_unrar9RarReaderC2Ev(%"class.third_party_unrar::RarReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %2) #10
  %3 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %3) #10
  %4 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %4) #10
  %5 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN4base4FileC1Ev(%"class.base::File"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17third_party_unrar9RarReaderD2Ev(%"class.third_party_unrar::RarReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CommandData*, %class.CommandData** %2, align 8
  store %class.CommandData* null, %class.CommandData** %2, align 8
  %4 = icmp eq %class.CommandData* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN11CommandDataD2Ev(%class.CommandData* nonnull %3) #10
  %6 = bitcast %class.CommandData* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %class.CmdExtract*, %class.CmdExtract** %8, align 8
  store %class.CmdExtract* null, %class.CmdExtract** %8, align 8
  %10 = icmp eq %class.CmdExtract* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN10CmdExtractD1Ev(%class.CmdExtract* nonnull %9) #10
  %12 = bitcast %class.CmdExtract* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %class.Archive*, %class.Archive** %14, align 8
  store %class.Archive* null, %class.Archive** %14, align 8
  %16 = icmp eq %class.Archive* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.Archive* %15 to void (%class.Archive*)***
  %19 = load void (%class.Archive*)**, void (%class.Archive*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.Archive*)*, void (%class.Archive*)** %19, i64 1
  %21 = load void (%class.Archive*)*, void (%class.Archive*)** %20, align 8
  tail call void %21(%class.Archive* nonnull %15) #10
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %23) #10
  %24 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %24) #10
  %25 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %25) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17third_party_unrar9RarReader4OpenEN4base4FileES2_(%"class.third_party_unrar::RarReader"*, %"class.base::File"*, %"class.base::File"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 1
  %5 = tail call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %4, %"class.base::File"* dereferenceable(56) %1) #10
  %6 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 0
  %7 = tail call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %6, %"class.base::File"* dereferenceable(56) %2) #10
  %8 = tail call i8* @_Znwm(i64 65336) #11
  %9 = bitcast i8* %8 to %class.Archive*
  tail call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %9, %class.RAROptions* null) #10
  %10 = ptrtoint i8* %8 to i64
  %11 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.Archive*, %class.Archive** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %class.Archive* %13, null
  %16 = bitcast i8* %8 to %class.Archive*
  br i1 %15, label %23, label %17

17:                                               ; preds = %3
  %18 = bitcast %class.Archive* %13 to void (%class.Archive*)***
  %19 = load void (%class.Archive*)**, void (%class.Archive*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.Archive*)*, void (%class.Archive*)** %19, i64 1
  %21 = load void (%class.Archive*)*, void (%class.Archive*)** %20, align 8
  tail call void %21(%class.Archive* nonnull %13) #10
  %22 = load %class.Archive*, %class.Archive** %12, align 8
  br label %23

23:                                               ; preds = %17, %3
  %24 = phi %class.Archive* [ %22, %17 ], [ %16, %3 ]
  %25 = getelementptr inbounds %class.Archive, %class.Archive* %24, i64 0, i32 0
  %26 = tail call i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"* %4) #10
  %27 = sext i32 %26 to i64
  tail call void @_ZN4File13SetFileHandleEl(%class.File* %25, i64 %27) #10
  %28 = load %class.Archive*, %class.Archive** %12, align 8
  %29 = tail call i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"* %6) #10
  %30 = sext i32 %29 to i64
  tail call void @_ZN7Archive17SetTempFileHandleEl(%class.Archive* %28, i64 %30) #10
  %31 = load %class.Archive*, %class.Archive** %12, align 8
  %32 = bitcast %class.Archive* %31 to i1 (%class.Archive*, i32*, i32)***
  %33 = load i1 (%class.Archive*, i32*, i32)**, i1 (%class.Archive*, i32*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %33, i64 2
  %35 = load i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%class.Archive* %31, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str, i64 0, i64 0), i32 0) #10
  br i1 %36, label %37, label %73

37:                                               ; preds = %23
  %38 = load %class.Archive*, %class.Archive** %12, align 8
  %39 = tail call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* %38, i1 zeroext true) #10
  br i1 %39, label %40, label %73

40:                                               ; preds = %37
  %41 = tail call i8* @_Znwm(i64 85008) #11
  %42 = bitcast i8* %41 to %class.CommandData*
  tail call void @_ZN11CommandDataC1Ev(%class.CommandData* nonnull %42) #10
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 5
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %class.CommandData*, %class.CommandData** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.28"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %class.CommandData* %46, null
  %49 = bitcast i8* %41 to %class.CommandData*
  br i1 %48, label %53, label %50

50:                                               ; preds = %40
  tail call void @_ZN11CommandDataD2Ev(%class.CommandData* nonnull %46) #10
  %51 = bitcast %class.CommandData* %46 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  %52 = load %class.CommandData*, %class.CommandData** %45, align 8
  br label %53

53:                                               ; preds = %50, %40
  %54 = phi %class.CommandData* [ %52, %50 ], [ %49, %40 ]
  tail call void @_ZN11CommandData8ParseArgEPw(%class.CommandData* %54, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.1, i64 0, i64 0)) #10
  %55 = load %class.CommandData*, %class.CommandData** %45, align 8
  tail call void @_ZN11CommandData8ParseArgEPw(%class.CommandData* %55, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.2, i64 0, i64 0)) #10
  %56 = load %class.CommandData*, %class.CommandData** %45, align 8
  tail call void @_ZN11CommandData9ParseDoneEv(%class.CommandData* %56) #10
  %57 = load %class.CommandData*, %class.CommandData** %45, align 8
  %58 = tail call i8* @_Znwm(i64 16760) #11
  %59 = bitcast i8* %58 to %class.CmdExtract*
  tail call void @_ZN10CmdExtractC1EP11CommandData(%class.CmdExtract* nonnull %59, %class.CommandData* %57) #10
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 4
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.12"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.CmdExtract*, %class.CmdExtract** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.12"* %61 to i64*
  store i64 %60, i64* %64, align 8
  %65 = icmp eq %class.CmdExtract* %63, null
  %66 = bitcast i8* %58 to %class.CmdExtract*
  br i1 %65, label %70, label %67

67:                                               ; preds = %53
  tail call void @_ZN10CmdExtractD1Ev(%class.CmdExtract* nonnull %63) #10
  %68 = bitcast %class.CmdExtract* %63 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  %69 = load %class.CmdExtract*, %class.CmdExtract** %62, align 8
  br label %70

70:                                               ; preds = %67, %53
  %71 = phi %class.CmdExtract* [ %69, %67 ], [ %66, %53 ]
  %72 = load %class.Archive*, %class.Archive** %12, align 8
  tail call void @_ZN10CmdExtract18ExtractArchiveInitER7Archive(%class.CmdExtract* %71, %class.Archive* dereferenceable(65336) %72) #10
  br label %73

73:                                               ; preds = %70, %37, %23
  %74 = phi i1 [ false, %23 ], [ true, %70 ], [ false, %37 ]
  ret i1 %74
}

declare dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4File13SetFileHandleEl(%class.File*, i64) local_unnamed_addr #1

declare i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"*) local_unnamed_addr #1

declare void @_ZN7Archive17SetTempFileHandleEl(%class.Archive*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN11CommandData8ParseArgEPw(%class.CommandData*, i32*) local_unnamed_addr #1

declare void @_ZN11CommandData9ParseDoneEv(%class.CommandData*) local_unnamed_addr #1

declare void @_ZN10CmdExtract18ExtractArchiveInitER7Archive(%class.CmdExtract*, %class.Archive* dereferenceable(65336)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17third_party_unrar9RarReader16ExtractNextEntryEv(%"class.third_party_unrar::RarReader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.std::__1::basic_string.34", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::FilePath", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 1, i8* %2, align 1
  %6 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %1, %21
  %10 = call i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"* %6, i32 0, i64 0) #10
  %11 = call zeroext i1 @_ZN4base4File9SetLengthEl(%"class.base::File"* %6, i64 0) #10
  %12 = load %class.Archive*, %class.Archive** %7, align 8
  %13 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %12) #10
  store i8 0, i8* %2, align 1
  %14 = load %class.CmdExtract*, %class.CmdExtract** %8, align 8
  %15 = load %class.Archive*, %class.Archive** %7, align 8
  %16 = call zeroext i1 @_ZN10CmdExtract18ExtractCurrentFileER7ArchivemRb(%class.CmdExtract* %14, %class.Archive* dereferenceable(65336) %15, i64 %13, i8* nonnull dereferenceable(1) %2) #10
  %17 = load %class.Archive*, %class.Archive** %7, align 8
  %18 = getelementptr inbounds %class.Archive, %class.Archive* %17, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %26, label %21

21:                                               ; preds = %9
  %22 = load i8, i8* %2, align 1
  %23 = and i8 %22, 1
  %24 = icmp ne i8 %23, 0
  %25 = or i1 %16, %24
  br i1 %25, label %9, label %244

26:                                               ; preds = %9
  %27 = bitcast %"class.std::__1::basic_string.34"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %class.Archive, %class.Archive* %17, i64 0, i32 20, i32 5, i64 0
  %31 = bitcast %"class.std::__1::basic_string.34"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEC2IDnEEPKw(%"class.std::__1::basic_string.34"* nonnull %3, i32* %30)
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = bitcast %"class.std::__1::basic_string.34"* %3 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = load i8, i8* %37, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i32*, i32** %28, align 8
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.std::__1::basic_string.34"* %3 to i32*
  %44 = zext i8 %39 to i64
  %45 = select i1 %40, i32* %41, i32* %43
  %46 = bitcast i32* %45 to i8*
  %47 = select i1 %40, i64 %42, i64 %44
  %48 = getelementptr inbounds i32, i32* %45, i64 %47
  %49 = shl nuw i64 %47, 2
  %50 = ashr exact i64 %49, 2
  %51 = icmp ugt i64 %50, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %26
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %53) #12
  unreachable

54:                                               ; preds = %26
  %55 = icmp ult i64 %50, 23
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  %57 = trunc i64 %50 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  br label %65

60:                                               ; preds = %54
  %61 = add nsw i64 %50, 16
  %62 = and i64 %61, -16
  %63 = call i8* @_Znwm(i64 %62) #11
  store i8* %63, i8** %33, align 8
  %64 = or i64 %62, -9223372036854775808
  store i64 %64, i64* %35, align 8
  store i64 %50, i64* %34, align 8
  br label %65

65:                                               ; preds = %60, %56
  %66 = phi i8* [ %32, %56 ], [ %63, %60 ]
  %67 = icmp eq i64 %47, 0
  br i1 %67, label %208, label %68

68:                                               ; preds = %65
  %69 = shl nsw i64 %47, 2
  %70 = add i64 %69, -4
  %71 = lshr exact i64 %70, 2
  %72 = add nuw nsw i64 %71, 1
  %73 = icmp ult i64 %72, 4
  br i1 %73, label %145, label %74

74:                                               ; preds = %68
  %75 = shl nsw i64 %47, 2
  %76 = add i64 %75, -4
  %77 = lshr exact i64 %76, 2
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr i8, i8* %66, i64 %78
  %80 = getelementptr i32, i32* %45, i64 %78
  %81 = bitcast i32* %80 to i8*
  %82 = icmp ult i8* %66, %81
  %83 = icmp ugt i8* %79, %46
  %84 = and i1 %82, %83
  br i1 %84, label %145, label %85

85:                                               ; preds = %74
  %86 = and i64 %72, 9223372036854775804
  %87 = getelementptr i8, i8* %66, i64 %86
  %88 = getelementptr i32, i32* %45, i64 %86
  %89 = add nsw i64 %86, -4
  %90 = lshr exact i64 %89, 2
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %89, 0
  br i1 %93, label %127, label %94

94:                                               ; preds = %85
  %95 = sub nuw nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %124, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %125, %96 ]
  %99 = getelementptr i8, i8* %66, i64 %97
  %100 = getelementptr i32, i32* %45, i64 %97
  %101 = bitcast i32* %100 to <2 x i32>*
  %102 = load <2 x i32>, <2 x i32>* %101, align 4, !alias.scope !2
  %103 = getelementptr i32, i32* %100, i64 2
  %104 = bitcast i32* %103 to <2 x i32>*
  %105 = load <2 x i32>, <2 x i32>* %104, align 4, !alias.scope !2
  %106 = trunc <2 x i32> %102 to <2 x i8>
  %107 = trunc <2 x i32> %105 to <2 x i8>
  %108 = bitcast i8* %99 to <2 x i8>*
  store <2 x i8> %106, <2 x i8>* %108, align 1, !alias.scope !5, !noalias !2
  %109 = getelementptr i8, i8* %99, i64 2
  %110 = bitcast i8* %109 to <2 x i8>*
  store <2 x i8> %107, <2 x i8>* %110, align 1, !alias.scope !5, !noalias !2
  %111 = or i64 %97, 4
  %112 = getelementptr i8, i8* %66, i64 %111
  %113 = getelementptr i32, i32* %45, i64 %111
  %114 = bitcast i32* %113 to <2 x i32>*
  %115 = load <2 x i32>, <2 x i32>* %114, align 4, !alias.scope !2
  %116 = getelementptr i32, i32* %113, i64 2
  %117 = bitcast i32* %116 to <2 x i32>*
  %118 = load <2 x i32>, <2 x i32>* %117, align 4, !alias.scope !2
  %119 = trunc <2 x i32> %115 to <2 x i8>
  %120 = trunc <2 x i32> %118 to <2 x i8>
  %121 = bitcast i8* %112 to <2 x i8>*
  store <2 x i8> %119, <2 x i8>* %121, align 1, !alias.scope !5, !noalias !2
  %122 = getelementptr i8, i8* %112, i64 2
  %123 = bitcast i8* %122 to <2 x i8>*
  store <2 x i8> %120, <2 x i8>* %123, align 1, !alias.scope !5, !noalias !2
  %124 = add i64 %97, 8
  %125 = add i64 %98, -2
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %96, !llvm.loop !7

127:                                              ; preds = %96, %85
  %128 = phi i64 [ 0, %85 ], [ %124, %96 ]
  %129 = icmp eq i64 %92, 0
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr i8, i8* %66, i64 %128
  %132 = getelementptr i32, i32* %45, i64 %128
  %133 = bitcast i32* %132 to <2 x i32>*
  %134 = load <2 x i32>, <2 x i32>* %133, align 4, !alias.scope !2
  %135 = getelementptr i32, i32* %132, i64 2
  %136 = bitcast i32* %135 to <2 x i32>*
  %137 = load <2 x i32>, <2 x i32>* %136, align 4, !alias.scope !2
  %138 = trunc <2 x i32> %134 to <2 x i8>
  %139 = trunc <2 x i32> %137 to <2 x i8>
  %140 = bitcast i8* %131 to <2 x i8>*
  store <2 x i8> %138, <2 x i8>* %140, align 1, !alias.scope !5, !noalias !2
  %141 = getelementptr i8, i8* %131, i64 2
  %142 = bitcast i8* %141 to <2 x i8>*
  store <2 x i8> %139, <2 x i8>* %142, align 1, !alias.scope !5, !noalias !2
  br label %143

143:                                              ; preds = %127, %130
  %144 = icmp eq i64 %72, %86
  br i1 %144, label %208, label %145

145:                                              ; preds = %143, %74, %68
  %146 = phi i8* [ %66, %74 ], [ %66, %68 ], [ %87, %143 ]
  %147 = phi i32* [ %45, %74 ], [ %45, %68 ], [ %88, %143 ]
  %148 = ptrtoint i32* %147 to i64
  %149 = add i64 %47, -1
  %150 = getelementptr i32, i32* %45, i64 %149
  %151 = ptrtoint i32* %150 to i64
  %152 = sub i64 %151, %148
  %153 = lshr i64 %152, 2
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %145, %157
  %158 = phi i8* [ %164, %157 ], [ %146, %145 ]
  %159 = phi i32* [ %163, %157 ], [ %147, %145 ]
  %160 = phi i64 [ %165, %157 ], [ %155, %145 ]
  %161 = load i32, i32* %159, align 4
  %162 = trunc i32 %161 to i8
  store i8 %162, i8* %158, align 1
  %163 = getelementptr inbounds i32, i32* %159, i64 1
  %164 = getelementptr inbounds i8, i8* %158, i64 1
  %165 = add i64 %160, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %157, !llvm.loop !9

167:                                              ; preds = %157, %145
  %168 = phi i8* [ undef, %145 ], [ %164, %157 ]
  %169 = phi i8* [ %146, %145 ], [ %164, %157 ]
  %170 = phi i32* [ %147, %145 ], [ %163, %157 ]
  %171 = icmp ult i64 %152, 28
  br i1 %171, label %208, label %172

172:                                              ; preds = %167, %172
  %173 = phi i8* [ %206, %172 ], [ %169, %167 ]
  %174 = phi i32* [ %205, %172 ], [ %170, %167 ]
  %175 = load i32, i32* %174, align 4
  %176 = trunc i32 %175 to i8
  store i8 %176, i8* %173, align 1
  %177 = getelementptr inbounds i32, i32* %174, i64 1
  %178 = getelementptr inbounds i8, i8* %173, i64 1
  %179 = load i32, i32* %177, align 4
  %180 = trunc i32 %179 to i8
  store i8 %180, i8* %178, align 1
  %181 = getelementptr inbounds i32, i32* %174, i64 2
  %182 = getelementptr inbounds i8, i8* %173, i64 2
  %183 = load i32, i32* %181, align 4
  %184 = trunc i32 %183 to i8
  store i8 %184, i8* %182, align 1
  %185 = getelementptr inbounds i32, i32* %174, i64 3
  %186 = getelementptr inbounds i8, i8* %173, i64 3
  %187 = load i32, i32* %185, align 4
  %188 = trunc i32 %187 to i8
  store i8 %188, i8* %186, align 1
  %189 = getelementptr inbounds i32, i32* %174, i64 4
  %190 = getelementptr inbounds i8, i8* %173, i64 4
  %191 = load i32, i32* %189, align 4
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %190, align 1
  %193 = getelementptr inbounds i32, i32* %174, i64 5
  %194 = getelementptr inbounds i8, i8* %173, i64 5
  %195 = load i32, i32* %193, align 4
  %196 = trunc i32 %195 to i8
  store i8 %196, i8* %194, align 1
  %197 = getelementptr inbounds i32, i32* %174, i64 6
  %198 = getelementptr inbounds i8, i8* %173, i64 6
  %199 = load i32, i32* %197, align 4
  %200 = trunc i32 %199 to i8
  store i8 %200, i8* %198, align 1
  %201 = getelementptr inbounds i32, i32* %174, i64 7
  %202 = getelementptr inbounds i8, i8* %173, i64 7
  %203 = load i32, i32* %201, align 4
  %204 = trunc i32 %203 to i8
  store i8 %204, i8* %202, align 1
  %205 = getelementptr inbounds i32, i32* %174, i64 8
  %206 = getelementptr inbounds i8, i8* %173, i64 8
  %207 = icmp eq i32* %205, %48
  br i1 %207, label %208, label %172, !llvm.loop !11

208:                                              ; preds = %167, %172, %143, %65
  %209 = phi i8* [ %66, %65 ], [ %87, %143 ], [ %168, %167 ], [ %206, %172 ]
  store i8 0, i8* %209, align 1
  %210 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #10
  %211 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  %215 = load i8*, i8** %33, align 8
  %216 = select i1 %214, i8* %215, i8* %32
  %217 = load i64, i64* %34, align 8
  %218 = zext i8 %213 to i64
  %219 = select i1 %214, i64 %217, i64 %218
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %5, i8* %216, i64 %219) #10
  %220 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 0
  %221 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* %220, %"class.base::FilePath"* nonnull dereferenceable(24) %5) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #10
  %222 = load %class.Archive*, %class.Archive** %7, align 8
  %223 = getelementptr inbounds %class.Archive, %class.Archive* %222, i64 0, i32 20, i32 29
  %224 = load i8, i8* %223, align 1, !range !12
  %225 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 1
  store i8 %224, i8* %225, align 8
  %226 = getelementptr inbounds %class.Archive, %class.Archive* %222, i64 0, i32 20, i32 18
  %227 = load i8, i8* %226, align 1, !range !12
  %228 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 2
  store i8 %227, i8* %228, align 1
  %229 = load %class.CmdExtract*, %class.CmdExtract** %8, align 8
  %230 = getelementptr inbounds %class.CmdExtract, %class.CmdExtract* %229, i64 0, i32 2, i32 33
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %"class.third_party_unrar::RarReader", %"class.third_party_unrar::RarReader"* %0, i64 0, i32 2, i32 3
  store i64 %231, i64* %232, align 8
  %233 = load i8, i8* %212, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %208
  %236 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %236) #11
  br label %237

237:                                              ; preds = %208, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  %238 = load i8, i8* %37, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %237
  %241 = bitcast %"class.std::__1::basic_string.34"* %3 to i8**
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #11
  br label %243

243:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %244

244:                                              ; preds = %21, %243
  %245 = phi i1 [ true, %243 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  ret i1 %245
}

declare i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"*, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base4File9SetLengthEl(%"class.base::File"*, i64) local_unnamed_addr #1

declare i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #1

declare zeroext i1 @_ZN10CmdExtract18ExtractCurrentFileER7ArchivemRb(%class.CmdExtract*, %class.Archive* dereferenceable(65336), i64, i8* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEC2IDnEEPKw(%"class.std::__1::basic_string.34"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @wcslen(i32* %1) #10
  %4 = icmp ugt i64 %3, 4611686018427387887
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.34"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #12
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 5
  br i1 %8, label %22, label %9

9:                                                ; preds = %7
  %10 = add nuw nsw i64 %3, 4
  %11 = and i64 %10, -4
  %12 = icmp ugt i64 %11, 4611686018427387903
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @abort() #12
  unreachable

14:                                               ; preds = %9
  %15 = shl i64 %11, 2
  %16 = tail call i8* @_Znwm(i64 %15) #11
  %17 = bitcast i8* %16 to i32*
  %18 = bitcast %"class.std::__1::basic_string.34"* %0 to i8**
  store i8* %16, i8** %18, align 8
  %19 = or i64 %11, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %21, align 8
  br label %28

22:                                               ; preds = %7
  %23 = trunc i64 %3 to i8
  %24 = bitcast %"class.std::__1::basic_string.34"* %0 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string.34"* %0 to i32*
  %27 = icmp eq i64 %3, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %14
  %29 = phi i32* [ %17, %14 ], [ %26, %22 ]
  %30 = tail call i32* @wmemcpy(i32* %29, i32* %1, i64 %3) #10
  br label %31

31:                                               ; preds = %22, %28
  %32 = phi i32* [ %26, %22 ], [ %29, %28 ]
  %33 = getelementptr inbounds i32, i32* %32, i64 %3
  store i32 0, i32* %33, align 4
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10CmdExtractD1Ev(%class.CmdExtract*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11CommandDataD2Ev(%class.CommandData*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11
  %3 = getelementptr inbounds %class.StringList, %class.StringList* %2, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11, i32 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !12
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = shl i64 %13, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %6, i64 %14) #10
  %15 = bitcast %class.StringList* %2 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %11, %7
  %18 = phi i8* [ %16, %11 ], [ %6, %7 ]
  tail call void @free(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  %21 = getelementptr inbounds %class.StringList, %class.StringList* %20, i64 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  %24 = bitcast i32* %22 to i8*
  br i1 %23, label %37, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10, i32 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !12
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = shl i64 %31, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %24, i64 %32) #10
  %33 = bitcast %class.StringList* %20 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %29, %25
  %36 = phi i8* [ %34, %29 ], [ %24, %25 ]
  tail call void @free(i8* %36) #10
  br label %37

37:                                               ; preds = %19, %35
  %38 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  %39 = getelementptr inbounds %class.StringList, %class.StringList* %38, i64 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  %42 = bitcast i32* %40 to i8*
  br i1 %41, label %55, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9, i32 0, i32 4
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9, i32 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = shl i64 %49, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %42, i64 %50) #10
  %51 = bitcast %class.StringList* %38 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %47, %43
  %54 = phi i8* [ %52, %47 ], [ %42, %43 ]
  tail call void @free(i8* %54) #10
  br label %55

55:                                               ; preds = %37, %53
  %56 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  %57 = getelementptr inbounds %class.StringList, %class.StringList* %56, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  %60 = bitcast i32* %58 to i8*
  br i1 %59, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8, i32 0, i32 4
  %63 = load i8, i8* %62, align 8, !range !12
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = shl i64 %67, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %60, i64 %68) #10
  %69 = bitcast %class.StringList* %56 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %65, %61
  %72 = phi i8* [ %70, %65 ], [ %60, %61 ]
  tail call void @free(i8* %72) #10
  br label %73

73:                                               ; preds = %55, %71
  %74 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  %75 = getelementptr inbounds %class.StringList, %class.StringList* %74, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  %78 = bitcast i32* %76 to i8*
  br i1 %77, label %91, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7, i32 0, i32 4
  %81 = load i8, i8* %80, align 8, !range !12
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7, i32 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = shl i64 %85, 2
  tail call void @_Z9cleandataPvm(i8* nonnull %78, i64 %86) #10
  %87 = bitcast %class.StringList* %74 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %79
  %90 = phi i8* [ %88, %83 ], [ %78, %79 ]
  tail call void @free(i8* %90) #10
  br label %91

91:                                               ; preds = %73, %89
  %92 = bitcast %class.CommandData* %0 to %class.RAROptions*
  tail call void @_ZN10RAROptionsD2Ev(%class.RAROptions* %92) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10RAROptionsD2Ev(%class.RAROptions*) unnamed_addr #2

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN7ArchiveC1EP10RAROptions(%class.Archive*, %class.RAROptions*) unnamed_addr #1

declare void @_ZN11CommandDataC1Ev(%class.CommandData*) unnamed_addr #1

declare void @_ZN10CmdExtractC1EP11CommandData(%class.CmdExtract*, %class.CommandData*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind
declare i32* @wmemcpy(i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{i8 0, i8 2}
