; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/utils/image_tensor_specs.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/utils/image_tensor_specs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.137 = type { %"class.absl::Status" }
%"class.absl::Status" = type { i64 }
%union.anon.110 = type { %"struct.tflite::task::vision::NormalizationOptions" }
%"struct.tflite::task::vision::NormalizationOptions" = type { %"struct.std::__1::array", %"struct.std::__1::array", i32 }
%"struct.std::__1::array" = type { [3 x float] }
%"class.tflite::support::StatusOr" = type { %"class.tflite::support::internal_statusor::StatusOrData" }
%"class.tflite::support::internal_statusor::StatusOrData" = type { %union.anon, %union.anon.109 }
%union.anon = type { %"class.absl::Status" }
%union.anon.109 = type { %"struct.tflite::task::vision::ImageTensorSpecs" }
%"struct.tflite::task::vision::ImageTensorSpecs" = type { i32, i32, i32, i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.110 }
%"class.tflite::impl::Interpreter" = type { %struct.TfLiteContext*, %"class.tflite::ErrorReporter"*, %"class.std::__1::vector", %"class.std::__1::unique_ptr.4", %"class.tflite::Profiler"*, i8, [4 x %struct.TfLiteExternalContext*], %"class.std::__1::unique_ptr.8", %"class.std::__1::vector.20", %"class.std::__1::unordered_map", %"class.std::__1::unique_ptr" }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.tflite::Profiler"* }
%"class.tflite::Profiler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.tflite::ExternalCpuBackendContext"* }
%"class.tflite::ExternalCpuBackendContext" = type { %struct.TfLiteExternalContext, %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.tflite::TfLiteInternalBackendContext"* }
%"class.tflite::TfLiteInternalBackendContext" = type { i32 (...)** }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.tflite::impl::Subgraph"* }
%"class.tflite::impl::Subgraph" = type { i32 (...)**, %"class.std::__1::vector.25", i32, %struct.TfLiteContext, %struct.TfLiteExternalContext**, %"class.std::__1::vector.32", i8, %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.tflite::ErrorReporter"*, i32, i32, %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::vector.46", i8, %"class.std::__1::unique_ptr.53", %"class.std::__1::vector.57", i8, i8, %"class.std::__1::unique_ptr.64", i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::vector.20"*, i8, i1 (i8*)*, i8*, %"class.std::__1::unordered_map"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.TfLiteTensor* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type { %struct.TfLiteNode, %struct.TfLiteRegistration }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %struct.TfLiteDelegate**, %struct.TfLiteDelegate**, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %struct.TfLiteDelegate** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %struct.TfLiteIntArray* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %struct.TfLiteDelegateParams*, %struct.TfLiteDelegateParams*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.TfLiteDelegateParams* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.tflite::MemoryPlanner"* }
%"class.tflite::MemoryPlanner" = type { i32 (...)** }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.tflite::impl::Subgraph::SubgraphAwareProfiler"* }
%"class.tflite::impl::Subgraph::SubgraphAwareProfiler" = type { %"class.tflite::Profiler", %"class.tflite::Profiler"*, i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::unique_ptr.22"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.76", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i64 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.TfLiteDelegate* }
%"struct.std::__1::__compressed_pair_elem.0" = type { void (%struct.TfLiteDelegate*)* }
%"class.tflite::metadata::ModelMetadataExtractor" = type { %"struct.tflite::Model"*, %"struct.tflite::ModelMetadata"*, %"class.absl::flat_hash_map" }
%"struct.tflite::Model" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"struct.tflite::ModelMetadata" = type { %"class.flatbuffers::Table" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.tflite::support::StatusOr.154" = type { %"class.tflite::support::internal_statusor::StatusOrData.155" }
%"class.tflite::support::internal_statusor::StatusOrData.155" = type { %union.anon.156, %union.anon.157 }
%union.anon.156 = type { %"class.absl::Status" }
%union.anon.157 = type { %"struct.tflite::ProcessUnit"* }
%"struct.tflite::ProcessUnit" = type { %"class.flatbuffers::Table" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.149 }
%union.anon.149 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tflite::support::StatusOr.111" = type { %"class.tflite::support::internal_statusor::StatusOrData.112" }
%"class.tflite::support::internal_statusor::StatusOrData.112" = type { %union.anon.113, %union.anon.114 }
%union.anon.113 = type { %"class.absl::Status" }
%union.anon.114 = type { %"struct.tflite::TensorMetadata"* }
%"struct.tflite::TensorMetadata" = type { %"class.flatbuffers::Table" }
%"class.tflite::support::StatusOr.123" = type { %"class.tflite::support::internal_statusor::StatusOrData.124" }
%"class.tflite::support::internal_statusor::StatusOrData.124" = type { %union.anon.125, %union.anon.126 }
%union.anon.125 = type { %"class.absl::Status" }
%union.anon.126 = type { %"struct.tflite::ImageProperties"* }
%"struct.tflite::ImageProperties" = type { %"class.flatbuffers::Table" }
%"class.tflite::support::StatusOr.135" = type { %"class.tflite::support::internal_statusor::StatusOrData.136" }
%"class.tflite::support::internal_statusor::StatusOrData.136" = type { %union.anon.137, %union.anon.138 }
%union.anon.138 = type { %"class.absl::optional" }
%"struct.tflite::Content" = type { %"class.flatbuffers::Table" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.tflite::NormalizationOptions" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Vector.166" = type { i32 }

$_ZZN6tflite26EnumNamesContentPropertiesEvE5names = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@__const._ZN6tflite4task6vision26BuildInputImageTensorSpecsERKNS_4impl11InterpreterERKNS_8metadata22ModelMetadataExtractorE._status_or_value148 = private unnamed_addr constant { { %union.anon.137, { { { { { i8, [3 x i8], %union.anon.110 } } } } } } } { { %union.anon.137, { { { { { i8, [3 x i8], %union.anon.110 } } } } } } { %union.anon.137 { %"class.absl::Status" { i64 -6148914691236517206 } }, { { { { { i8, [3 x i8], %union.anon.110 } } } } } { { { { { i8, [3 x i8], %union.anon.110 } } } } { { { { i8, [3 x i8], %union.anon.110 } } } { { { i8, [3 x i8], %union.anon.110 } } { { i8, [3 x i8], %union.anon.110 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.110 { %"struct.tflite::task::vision::NormalizationOptions" { %"struct.std::__1::array" { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"struct.std::__1::array" { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, i32 -1431655766 } } } } } } } } }, align 8
@.str.1 = private unnamed_addr constant [43 x i8] c"Models are assumed to have a single input.\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"Only 4D tensors in BHWD layout are supported.\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"Type mismatch for input tensor \00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c". Requested one of these types: kTfLiteUint8/kTfLiteFloat32, got \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Only RGB color space is supported for now.\00", align 1
@.str.7 = private unnamed_addr constant [69 x i8] c"The input tensor should have dimensions 1 x height x width x 3. Got \00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c" x \00", align 1
@.str.9 = private unnamed_addr constant [119 x i8] c"Input tensor has type kTfLiteFloat32: it requires specifying NormalizationOptions metadata to preprocess input images.\00", align 1
@.str.10 = private unnamed_addr constant [105 x i8] c"The number of elements in the input tensor must be a multiple of the number of normalization parameters.\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"The input width should be positive.\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"The input height should be positive.\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"The input size in bytes does not correspond to the expected number of pixels.\00", align 1
@.str.14 = private unnamed_addr constant [58 x i8] c"Models are assumed to have a single input TensorMetadata.\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Input TensorMetadata is null.\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"Expected ImageProperties for tensor \00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c", got \00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN6tflite26EnumNamesContentPropertiesEvE5names = linkonce_odr hidden local_unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i32 0, i32 0), i8* null], comdat, align 16
@.str.21 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"FeatureProperties\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"ImageProperties\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"BoundingBoxProperties\00", align 1
@.str.25 = private unnamed_addr constant [68 x i8] c"NormalizationOptions: expected mean and std of same dimension, got \00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@__const._ZN6tflite4task6vision12_GLOBAL__N_128GetNormalizationOptionsIfAnyERKNS_14TensorMetadataE.normalization_options = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon.110 } } } } { { { { i8, [3 x i8], %union.anon.110 } } } { { { i8, [3 x i8], %union.anon.110 } } { { i8, [3 x i8], %union.anon.110 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.110 { %"struct.tflite::task::vision::NormalizationOptions" { %"struct.std::__1::array" { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"struct.std::__1::array" { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, i32 -1431655766 } } } } } }, align 4
@.str.27 = private unnamed_addr constant [74 x i8] c"NormalizationOptions: only 1 or 3 mean and std values are supported, got \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision26BuildInputImageTensorSpecsERKNS_4impl11InterpreterERKNS_8metadata22ModelMetadataExtractorE(%"class.tflite::support::StatusOr"* noalias sret, %"class.tflite::impl::Interpreter"* nocapture readonly dereferenceable(184), %"class.tflite::metadata::ModelMetadataExtractor"* dereferenceable(56)) local_unnamed_addr #0 {
  %4 = alloca [9 x %"class.absl::string_view"], align 16
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.tflite::support::StatusOr.154", align 8
  %8 = alloca %"class.absl::Status", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.absl::AlphaNum", align 16
  %11 = alloca %"class.absl::AlphaNum", align 8
  %12 = alloca %"class.absl::Status", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.absl::AlphaNum", align 8
  %15 = alloca %"class.absl::AlphaNum", align 8
  %16 = alloca %"class.absl::AlphaNum", align 8
  %17 = alloca [5 x %"class.absl::string_view"], align 16
  %18 = alloca %"class.absl::Status", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.absl::Status", align 8
  %22 = alloca %"class.absl::Status", align 8
  %23 = alloca %"class.tflite::support::StatusOr.111", align 8
  %24 = alloca [27 x i8], align 1
  %25 = alloca %"class.tflite::support::StatusOr.123", align 8
  %26 = alloca %"class.tflite::support::StatusOr.135", align 8
  %27 = alloca %"class.absl::Status", align 8
  %28 = alloca %"class.absl::Status", align 8
  %29 = alloca %"class.absl::Status", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.absl::Status", align 8
  %32 = alloca %"class.absl::Status", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"class.absl::AlphaNum", align 16
  %35 = alloca %"class.absl::AlphaNum", align 8
  %36 = alloca %"class.absl::Status", align 8
  %37 = alloca %"class.absl::Status", align 8
  %38 = alloca %"class.absl::Status", align 8
  %39 = alloca %"class.absl::Status", align 8
  %40 = alloca %"class.absl::Status", align 8
  %41 = bitcast %"class.tflite::support::StatusOr.111"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.tflite::support::StatusOr.111", %"class.tflite::support::StatusOr.111"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.tflite::support::StatusOr.111", %"class.tflite::support::StatusOr.111"* %23, i64 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.tflite::metadata::ModelMetadataExtractor", %"class.tflite::metadata::ModelMetadataExtractor"* %2, i64 0, i32 1
  %45 = bitcast %"class.tflite::support::StatusOr.111"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load %"struct.tflite::ModelMetadata"*, %"struct.tflite::ModelMetadata"** %44, align 8, !noalias !2
  %47 = icmp eq %"struct.tflite::ModelMetadata"* %46, null
  br i1 %47, label %70, label %48

48:                                               ; preds = %3
  %49 = bitcast %"struct.tflite::ModelMetadata"* %46 to i32*
  %50 = load i32, i32* %49, align 4, !noalias !2
  %51 = sext i32 %50 to i64
  %52 = sub nsw i64 0, %51
  %53 = getelementptr inbounds %"struct.tflite::ModelMetadata", %"struct.tflite::ModelMetadata"* %46, i64 0, i32 0, i32 0, i64 %52
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2, !noalias !2
  %56 = icmp ugt i16 %55, 10
  br i1 %56, label %57, label %70

57:                                               ; preds = %48
  %58 = getelementptr inbounds i8, i8* %53, i64 10
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 2, !noalias !2
  %61 = zext i16 %60 to i64
  %62 = getelementptr inbounds %"struct.tflite::ModelMetadata", %"struct.tflite::ModelMetadata"* %46, i64 0, i32 0, i32 0, i64 %61
  %63 = icmp eq i16 %60, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %57
  %65 = bitcast i8* %62 to i32*
  %66 = load i32, i32* %65, align 4, !noalias !2
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %62, i64 %67
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %64, %57, %48, %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false) #7, !alias.scope !2
  br label %104

71:                                               ; preds = %64
  %72 = tail call i32 @_ZNK6tflite8metadata22ModelMetadataExtractor19GetInputTensorCountEv(%"class.tflite::metadata::ModelMetadataExtractor"* %2) #7, !noalias !2
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %86, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.absl::Status"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #7, !noalias !2
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %21, i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.14, i64 0, i64 0), i64 57, i32 300) #7
  %76 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %21, i64 0, i32 0
  %77 = load i64, i64* %76, align 8, !noalias !2
  store i64 %77, i64* %42, align 8, !alias.scope !2
  store i64 54, i64* %76, align 8, !noalias !2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %85, !prof !5

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.tflite::support::StatusOr.111", %"class.tflite::support::StatusOr.111"* %23, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %80) #7
  %81 = load i64, i64* %76, align 8, !noalias !2
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %81) #7
  br label %85

85:                                               ; preds = %84, %79, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #7, !noalias !2
  br label %104

86:                                               ; preds = %71
  %87 = tail call %"struct.tflite::TensorMetadata"* @_ZNK6tflite8metadata22ModelMetadataExtractor22GetInputTensorMetadataEi(%"class.tflite::metadata::ModelMetadataExtractor"* %2, i32 0) #7
  %88 = icmp eq %"struct.tflite::TensorMetadata"* %87, null
  br i1 %88, label %89, label %101

89:                                               ; preds = %86
  %90 = bitcast %"class.absl::Status"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #7, !noalias !2
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %22, i32 13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i64 29, i32 1) #7
  %91 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %22, i64 0, i32 0
  %92 = load i64, i64* %91, align 8, !noalias !2
  store i64 %92, i64* %42, align 8, !alias.scope !2
  store i64 54, i64* %91, align 8, !noalias !2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %100, !prof !5

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.tflite::support::StatusOr.111", %"class.tflite::support::StatusOr.111"* %23, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %95) #7
  %96 = load i64, i64* %91, align 8, !noalias !2
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %94
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %96) #7
  br label %100

100:                                              ; preds = %99, %94, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #7, !noalias !2
  br label %104

101:                                              ; preds = %86
  %102 = ptrtoint %"struct.tflite::TensorMetadata"* %87 to i64
  %103 = bitcast %"struct.tflite::TensorMetadata"** %43 to i64*
  store i64 %102, i64* %103, align 8, !alias.scope !2
  store i64 0, i64* %42, align 8, !alias.scope !2
  br label %111

104:                                              ; preds = %70, %85, %100
  %105 = load i64, i64* %42, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %109, label %107, !prof !6

107:                                              ; preds = %104
  store i64 54, i64* %42, align 8, !noalias !7
  %108 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %108, align 8
  br label %1019

109:                                              ; preds = %104
  %110 = load %"struct.tflite::TensorMetadata"*, %"struct.tflite::TensorMetadata"** %43, align 8
  br label %111

111:                                              ; preds = %109, %101
  %112 = phi %"struct.tflite::TensorMetadata"* [ %110, %109 ], [ %87, %101 ]
  %113 = getelementptr inbounds [27 x i8], [27 x i8]* %24, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 27, i8* nonnull %113)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.110 } } } }, { { { { i8, [3 x i8], %union.anon.110 } } } }* @__const._ZN6tflite4task6vision12_GLOBAL__N_128GetNormalizationOptionsIfAnyERKNS_14TensorMetadataE.normalization_options, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 3, i1 false)
  %114 = getelementptr inbounds [27 x i8], [27 x i8]* %24, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %114, i8 0, i64 24, i1 false)
  %115 = icmp eq %"struct.tflite::TensorMetadata"* %112, null
  br i1 %115, label %624, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.tflite::support::StatusOr.123"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #7
  %118 = getelementptr inbounds %"class.tflite::support::StatusOr.123", %"class.tflite::support::StatusOr.123"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.tflite::support::StatusOr.123", %"class.tflite::support::StatusOr.123"* %25, i64 0, i32 0, i32 1, i32 0
  %120 = bitcast %"struct.tflite::TensorMetadata"* %112 to i32*
  %121 = bitcast %"class.tflite::support::StatusOr.123"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false)
  %122 = load i32, i32* %120, align 4, !noalias !10
  %123 = sext i32 %122 to i64
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds %"struct.tflite::TensorMetadata", %"struct.tflite::TensorMetadata"* %112, i64 0, i32 0, i32 0, i64 %124
  %126 = bitcast i8* %125 to i16*
  %127 = load i16, i16* %126, align 2, !noalias !10
  %128 = icmp ugt i16 %127, 10
  br i1 %128, label %129, label %165

129:                                              ; preds = %116
  %130 = getelementptr inbounds i8, i8* %125, i64 10
  %131 = bitcast i8* %130 to i16*
  %132 = load i16, i16* %131, align 2, !noalias !10
  %133 = zext i16 %132 to i64
  %134 = getelementptr inbounds %"struct.tflite::TensorMetadata", %"struct.tflite::TensorMetadata"* %112, i64 0, i32 0, i32 0, i64 %133
  %135 = icmp eq i16 %132, 0
  br i1 %135, label %165, label %136

136:                                              ; preds = %129
  %137 = bitcast i8* %134 to i32*
  %138 = load i32, i32* %137, align 4, !noalias !10
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %134, i64 %139
  %141 = icmp eq i8* %140, null
  br i1 %141, label %165, label %142

142:                                              ; preds = %136
  %143 = bitcast i8* %140 to %"struct.tflite::Content"*
  %144 = bitcast i8* %140 to i32*
  %145 = load i32, i32* %144, align 4, !noalias !10
  %146 = sext i32 %145 to i64
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds %"struct.tflite::Content", %"struct.tflite::Content"* %143, i64 0, i32 0, i32 0, i64 %147
  %149 = bitcast i8* %148 to i16*
  %150 = load i16, i16* %149, align 2, !noalias !10
  %151 = icmp ugt i16 %150, 6
  br i1 %151, label %152, label %165

152:                                              ; preds = %142
  %153 = getelementptr inbounds i8, i8* %148, i64 6
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 2, !noalias !10
  %156 = zext i16 %155 to i64
  %157 = getelementptr inbounds %"struct.tflite::Content", %"struct.tflite::Content"* %143, i64 0, i32 0, i32 0, i64 %156
  %158 = icmp eq i16 %155, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = bitcast i8* %157 to i32*
  %161 = load i32, i32* %160, align 4, !noalias !10
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %157, i64 %162
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %166

165:                                              ; preds = %116, %129, %136, %142, %152, %159
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #7, !alias.scope !10
  br label %317

166:                                              ; preds = %159
  %167 = getelementptr inbounds i8, i8* %148, i64 4
  %168 = bitcast i8* %167 to i16*
  %169 = load i16, i16* %168, align 2, !noalias !10
  %170 = icmp eq i16 %169, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %166
  %172 = zext i16 %169 to i64
  %173 = getelementptr inbounds %"struct.tflite::Content", %"struct.tflite::Content"* %143, i64 0, i32 0, i32 0, i64 %172
  %174 = load i8, i8* %173, align 1, !noalias !10
  %175 = zext i8 %174 to i32
  %176 = icmp eq i8 %174, 2
  br i1 %176, label %310, label %177

177:                                              ; preds = %171, %166
  %178 = phi i32 [ %175, %171 ], [ 0, %166 ]
  %179 = bitcast %"class.absl::Status"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #7, !noalias !10
  %180 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #7, !noalias !10
  %181 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #7, !noalias !10
  %182 = getelementptr inbounds i8, i8* %125, i64 4
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 2, !noalias !10
  %185 = zext i16 %184 to i64
  %186 = getelementptr inbounds %"struct.tflite::TensorMetadata", %"struct.tflite::TensorMetadata"* %112, i64 0, i32 0, i32 0, i64 %185
  %187 = icmp eq i16 %184, 0
  br i1 %187, label %217, label %188

188:                                              ; preds = %177
  %189 = bitcast i8* %186 to i32*
  %190 = load i32, i32* %189, align 4, !noalias !10
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %186, i64 %191
  %193 = icmp eq i8* %192, null
  br i1 %193, label %217, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds i8, i8* %192, i64 4
  %196 = bitcast i8* %192 to i32*
  %197 = load i32, i32* %196, align 4, !noalias !13
  %198 = zext i32 %197 to i64
  %199 = icmp ult i32 %197, 23
  br i1 %199, label %209, label %200

200:                                              ; preds = %194
  %201 = add nuw nsw i64 %198, 16
  %202 = and i64 %201, 8589934576
  %203 = call i8* @_Znwm(i64 %202) #8, !noalias !16
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %203, i8** %204, align 8, !alias.scope !16, !noalias !10
  %205 = or i64 %202, -9223372036854775808
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %205, i64* %206, align 8, !alias.scope !16, !noalias !10
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %198, i64* %207, align 8, !alias.scope !16, !noalias !10
  %208 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %214

209:                                              ; preds = %194
  %210 = trunc i32 %197 to i8
  %211 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  store i8 %210, i8* %212, align 1, !alias.scope !16, !noalias !10
  %213 = icmp eq i32 %197, 0
  br i1 %213, label %222, label %214

214:                                              ; preds = %209, %200
  %215 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %211, %209 ], [ %208, %200 ]
  %216 = phi i8* [ %181, %209 ], [ %203, %200 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %216, i8* align 1 %195, i64 %198, i1 false) #7, !noalias !10
  br label %222

217:                                              ; preds = %188, %177
  %218 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  store i8 2, i8* %219, align 1, !noalias !10
  %220 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  store i16 12323, i16* %220, align 8, !noalias !10
  %221 = getelementptr inbounds i8, i8* %181, i64 2
  store i8 0, i8* %221, align 2, !noalias !10
  br label %229

222:                                              ; preds = %214, %209
  %223 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %211, %209 ], [ %215, %214 ]
  %224 = phi i8* [ %181, %209 ], [ %216, %214 ]
  %225 = getelementptr inbounds i8, i8* %224, i64 %198
  store i8 0, i8* %225, align 1, !noalias !10
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1, !noalias !10
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %234, label %229

229:                                              ; preds = %222, %217
  %230 = phi i8* [ %219, %217 ], [ %226, %222 ]
  %231 = phi i8 [ 2, %217 ], [ %227, %222 ]
  %232 = zext i8 %231 to i64
  %233 = ptrtoint %"class.std::__1::basic_string"* %20 to i64
  br label %241

234:                                              ; preds = %222
  %235 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  %236 = load i64, i64* %235, align 8, !noalias !10
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %238 = load i64, i64* %237, align 8, !noalias !10
  %239 = icmp sgt i64 %238, -1
  br i1 %239, label %241, label %240, !prof !6

240:                                              ; preds = %234
  call void @llvm.trap() #7
  unreachable

241:                                              ; preds = %234, %229
  %242 = phi i8* [ %226, %234 ], [ %230, %229 ]
  %243 = phi i64 [ %236, %234 ], [ %233, %229 ]
  %244 = phi i64 [ %238, %234 ], [ %232, %229 ]
  %245 = icmp ugt i32 %178, 3
  br i1 %245, label %251, label %246

246:                                              ; preds = %241
  %247 = zext i32 %178 to i64
  %248 = getelementptr inbounds [5 x i8*], [5 x i8*]* @_ZZN6tflite26EnumNamesContentPropertiesEvE5names, i64 0, i64 %247
  %249 = load i8*, i8** %248, align 8
  %250 = ptrtoint i8* %249 to i64
  br label %251

251:                                              ; preds = %246, %241
  %252 = phi i64 [ %250, %246 ], [ ptrtoint ([1 x i8]* @.str.20 to i64), %241 ]
  %253 = phi i8* [ %249, %246 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %241 ]
  %254 = call i64 @strlen(i8* nonnull %253) #7, !noalias !10
  %255 = icmp sgt i64 %254, -1
  br i1 %255, label %257, label %256, !prof !6

256:                                              ; preds = %251
  call void @llvm.trap() #7
  unreachable

257:                                              ; preds = %251
  %258 = bitcast [5 x %"class.absl::string_view"]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %258) #7, !noalias !17
  %259 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 0
  %260 = bitcast [5 x %"class.absl::string_view"]* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([37 x i8]* @.str.16 to i64), i64 36>, <2 x i64>* %260, align 16, !noalias !17
  %261 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 1, i32 0
  %262 = bitcast i8** %261 to i64*
  store i64 %243, i64* %262, align 16, !noalias !17
  %263 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 1, i32 1
  store i64 %244, i64* %263, align 8, !noalias !17
  %264 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 2, i32 0
  %265 = bitcast i8** %264 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([7 x i8]* @.str.18 to i64), i64 6>, <2 x i64>* %265, align 16, !noalias !17
  %266 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 0
  %267 = bitcast i8** %266 to i64*
  store i64 %252, i64* %267, align 16, !noalias !17
  %268 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 1
  store i64 %254, i64* %268, align 8, !noalias !17
  %269 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 4, i32 0
  %270 = bitcast i8** %269 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.5 to i64), i64 1>, <2 x i64>* %270, align 16, !noalias !17
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %19, %"class.absl::string_view"* nonnull %259, i64 5) #7, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %258) #7, !noalias !17
  %271 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  %273 = load i8, i8* %272, align 1, !noalias !10
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %278, label %275

275:                                              ; preds = %257
  %276 = zext i8 %273 to i64
  %277 = ptrtoint %"class.std::__1::basic_string"* %19 to i64
  br label %285

278:                                              ; preds = %257
  %279 = bitcast %"class.std::__1::basic_string"* %19 to i64*
  %280 = load i64, i64* %279, align 8, !noalias !10
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %282 = load i64, i64* %281, align 8, !noalias !10
  %283 = icmp sgt i64 %282, -1
  br i1 %283, label %285, label %284, !prof !6

284:                                              ; preds = %278
  call void @llvm.trap() #7
  unreachable

285:                                              ; preds = %278, %275
  %286 = phi i64 [ %280, %278 ], [ %277, %275 ]
  %287 = phi i64 [ %282, %278 ], [ %276, %275 ]
  %288 = inttoptr i64 %286 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %18, i32 3, i8* %288, i64 %287, i32 209) #7, !noalias !10
  %289 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %18, i64 0, i32 0
  %290 = load i64, i64* %289, align 8, !noalias !10
  store i64 %290, i64* %118, align 8, !alias.scope !10
  store i64 54, i64* %289, align 8, !noalias !10
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %298, !prof !5

292:                                              ; preds = %285
  %293 = getelementptr inbounds %"class.tflite::support::StatusOr.123", %"class.tflite::support::StatusOr.123"* %25, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %293) #7
  %294 = load i64, i64* %289, align 8, !noalias !10
  %295 = and i64 %294, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %292
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %294) #7
  br label %298

298:                                              ; preds = %297, %292, %285
  %299 = load i8, i8* %272, align 1, !noalias !10
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8, !noalias !10
  call void @_ZdlPv(i8* %303) #8
  br label %304

304:                                              ; preds = %301, %298
  %305 = load i8, i8* %242, align 1, !noalias !10
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %314

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8, !noalias !10
  call void @_ZdlPv(i8* %309) #8
  br label %314

310:                                              ; preds = %171
  %311 = ptrtoint i8* %163 to i64
  %312 = bitcast %"struct.tflite::ImageProperties"** %119 to i64*
  store i64 %311, i64* %312, align 8, !alias.scope !10
  store i64 0, i64* %118, align 8, !alias.scope !10
  %313 = bitcast i8* %163 to %"struct.tflite::ImageProperties"*
  br label %321

314:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #7, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #7, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #7, !noalias !10
  %315 = load i64, i64* %118, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %319, !prof !6

317:                                              ; preds = %165, %314
  %318 = load %"struct.tflite::ImageProperties"*, %"struct.tflite::ImageProperties"** %119, align 8
  br label %321

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %315, i64* %320, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #7
  br label %1014

321:                                              ; preds = %317, %310
  %322 = phi %"struct.tflite::ImageProperties"* [ %318, %317 ], [ %313, %310 ]
  %323 = bitcast %"struct.tflite::ImageProperties"* %322 to i32*
  %324 = bitcast %"class.tflite::support::StatusOr.135"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %324) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %324, i8* align 8 bitcast ({ { %union.anon.137, { { { { { i8, [3 x i8], %union.anon.110 } } } } } } }* @__const._ZN6tflite4task6vision26BuildInputImageTensorSpecsERKNS_4impl11InterpreterERKNS_8metadata22ModelMetadataExtractorE._status_or_value148 to i8*), i64 40, i1 false)
  %325 = bitcast %"class.tflite::support::StatusOr.154"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #7, !noalias !20
  %326 = getelementptr inbounds %"class.tflite::support::StatusOr.154", %"class.tflite::support::StatusOr.154"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 -86, i64 16, i1 false) #7, !noalias !20
  call void @_ZN6tflite8metadata22ModelMetadataExtractor20FindFirstProcessUnitERKNS_14TensorMetadataENS_18ProcessUnitOptionsE(%"class.tflite::support::StatusOr.154"* nonnull sret %7, %"struct.tflite::TensorMetadata"* nonnull dereferenceable(1) %112, i32 1) #7, !noalias !20
  %327 = load i64, i64* %326, align 8, !noalias !20
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %331, label %329, !prof !6

329:                                              ; preds = %321
  store i64 54, i64* %326, align 8, !noalias !23
  %330 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %327, i64* %330, align 8, !alias.scope !20
  br label %597

331:                                              ; preds = %321
  %332 = getelementptr inbounds %"class.tflite::support::StatusOr.154", %"class.tflite::support::StatusOr.154"* %7, i64 0, i32 0, i32 1, i32 0
  %333 = load %"struct.tflite::ProcessUnit"*, %"struct.tflite::ProcessUnit"** %332, align 8, !noalias !20
  %334 = icmp eq %"struct.tflite::ProcessUnit"* %333, null
  br i1 %334, label %335, label %340

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %336, align 8, !alias.scope !20
  %337 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %338 = bitcast %union.anon.110* %337 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %338, i8 0, i64 28, i1 false) #7, !alias.scope !20
  %339 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %339, align 8, !alias.scope !20
  br label %597

340:                                              ; preds = %331
  %341 = bitcast %"struct.tflite::ProcessUnit"* %333 to i32*
  %342 = load i32, i32* %341, align 4, !noalias !20
  %343 = sext i32 %342 to i64
  %344 = sub nsw i64 0, %343
  %345 = getelementptr inbounds %"struct.tflite::ProcessUnit", %"struct.tflite::ProcessUnit"* %333, i64 0, i32 0, i32 0, i64 %344
  %346 = bitcast i8* %345 to i16*
  %347 = load i16, i16* %346, align 2, !noalias !20
  %348 = icmp ugt i16 %347, 4
  br i1 %348, label %349, label %374

349:                                              ; preds = %340
  %350 = getelementptr inbounds i8, i8* %345, i64 4
  %351 = bitcast i8* %350 to i16*
  %352 = load i16, i16* %351, align 2
  %353 = icmp eq i16 %352, 0
  br i1 %353, label %374, label %354

354:                                              ; preds = %349
  %355 = zext i16 %352 to i64
  %356 = getelementptr inbounds %"struct.tflite::ProcessUnit", %"struct.tflite::ProcessUnit"* %333, i64 0, i32 0, i32 0, i64 %355
  %357 = load i8, i8* %356, align 1
  %358 = icmp eq i8 %357, 1
  %359 = icmp ugt i16 %347, 6
  %360 = and i1 %359, %358
  br i1 %360, label %361, label %374

361:                                              ; preds = %354
  %362 = getelementptr inbounds i8, i8* %345, i64 6
  %363 = bitcast i8* %362 to i16*
  %364 = load i16, i16* %363, align 2
  %365 = zext i16 %364 to i64
  %366 = getelementptr inbounds %"struct.tflite::ProcessUnit", %"struct.tflite::ProcessUnit"* %333, i64 0, i32 0, i32 0, i64 %365
  %367 = icmp eq i16 %364, 0
  br i1 %367, label %374, label %368

368:                                              ; preds = %361
  %369 = bitcast i8* %366 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds i8, i8* %366, i64 %371
  %373 = bitcast i8* %372 to %"struct.tflite::NormalizationOptions"*
  br label %374

374:                                              ; preds = %368, %361, %354, %349, %340
  %375 = phi %"struct.tflite::NormalizationOptions"* [ null, %354 ], [ null, %349 ], [ null, %340 ], [ %373, %368 ], [ null, %361 ]
  %376 = bitcast %"struct.tflite::NormalizationOptions"* %375 to i32*
  %377 = load i32, i32* %376, align 4, !noalias !20
  %378 = sext i32 %377 to i64
  %379 = sub nsw i64 0, %378
  %380 = getelementptr inbounds %"struct.tflite::NormalizationOptions", %"struct.tflite::NormalizationOptions"* %375, i64 0, i32 0, i32 0, i64 %379
  %381 = bitcast i8* %380 to i16*
  %382 = load i16, i16* %381, align 2, !noalias !20
  %383 = icmp ugt i16 %382, 4
  br i1 %383, label %384, label %413

384:                                              ; preds = %374
  %385 = getelementptr inbounds i8, i8* %380, i64 4
  %386 = bitcast i8* %385 to i16*
  %387 = load i16, i16* %386, align 2
  %388 = zext i16 %387 to i64
  %389 = getelementptr inbounds %"struct.tflite::NormalizationOptions", %"struct.tflite::NormalizationOptions"* %375, i64 0, i32 0, i32 0, i64 %388
  %390 = icmp eq i16 %387, 0
  br i1 %390, label %397, label %391

391:                                              ; preds = %384
  %392 = bitcast i8* %389 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds i8, i8* %389, i64 %394
  %396 = bitcast i8* %395 to %"class.flatbuffers::Vector.166"*
  br label %397

397:                                              ; preds = %391, %384
  %398 = phi %"class.flatbuffers::Vector.166"* [ %396, %391 ], [ null, %384 ]
  %399 = icmp ugt i16 %382, 6
  br i1 %399, label %400, label %413

400:                                              ; preds = %397
  %401 = getelementptr inbounds i8, i8* %380, i64 6
  %402 = bitcast i8* %401 to i16*
  %403 = load i16, i16* %402, align 2
  %404 = zext i16 %403 to i64
  %405 = getelementptr inbounds %"struct.tflite::NormalizationOptions", %"struct.tflite::NormalizationOptions"* %375, i64 0, i32 0, i32 0, i64 %404
  %406 = icmp eq i16 %403, 0
  br i1 %406, label %413, label %407

407:                                              ; preds = %400
  %408 = bitcast i8* %405 to i32*
  %409 = load i32, i32* %408, align 4
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %405, i64 %410
  %412 = bitcast i8* %411 to %"class.flatbuffers::Vector.166"*
  br label %413

413:                                              ; preds = %407, %400, %397, %374
  %414 = phi %"class.flatbuffers::Vector.166"* [ %398, %407 ], [ %398, %400 ], [ %398, %397 ], [ null, %374 ]
  %415 = phi %"class.flatbuffers::Vector.166"* [ %412, %407 ], [ null, %400 ], [ null, %397 ], [ null, %374 ]
  %416 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %414, i64 0, i32 0
  %417 = load i32, i32* %416, align 4, !noalias !20
  %418 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %415, i64 0, i32 0
  %419 = load i32, i32* %418, align 4, !noalias !20
  %420 = icmp eq i32 %417, %419
  br i1 %420, label %496, label %421

421:                                              ; preds = %413
  %422 = bitcast %"class.absl::Status"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %422) #7, !noalias !20
  %423 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %423) #7, !noalias !20
  %424 = bitcast %"class.absl::AlphaNum"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %424) #7, !noalias !20
  %425 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 1, i64 0
  %426 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %417, i8* %425) #7
  %427 = ptrtoint i8* %426 to i64
  %428 = ptrtoint i8* %425 to i64
  %429 = sub i64 %427, %428
  %430 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 0
  store i8* %425, i8** %430, align 16, !noalias !20
  %431 = icmp sgt i64 %429, -1
  br i1 %431, label %433, label %432, !prof !6

432:                                              ; preds = %421
  call void @llvm.trap() #7
  unreachable

433:                                              ; preds = %421
  %434 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 1
  store i64 %429, i64* %434, align 8, !noalias !20
  %435 = bitcast %"class.absl::AlphaNum"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %435) #7, !noalias !20
  %436 = load i32, i32* %418, align 4
  %437 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 1, i64 0
  %438 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %436, i8* %437) #7
  %439 = ptrtoint i8* %438 to i64
  %440 = ptrtoint i8* %437 to i64
  %441 = sub i64 %439, %440
  %442 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 0
  store i8* %437, i8** %442, align 8, !noalias !20
  %443 = icmp sgt i64 %441, -1
  br i1 %443, label %445, label %444, !prof !6

444:                                              ; preds = %433
  call void @llvm.trap() #7
  unreachable

445:                                              ; preds = %433
  %446 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 1
  store i64 %441, i64* %446, align 8, !noalias !20
  %447 = bitcast [5 x %"class.absl::string_view"]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %447) #7, !noalias !26
  %448 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 0
  %449 = bitcast [5 x %"class.absl::string_view"]* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([68 x i8]* @.str.25 to i64), i64 67>, <2 x i64>* %449, align 16, !noalias !26
  %450 = bitcast %"class.absl::AlphaNum"* %10 to <2 x i64>*
  %451 = load <2 x i64>, <2 x i64>* %450, align 16, !noalias !26
  %452 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 1, i32 0
  %453 = bitcast i8** %452 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %453, align 16, !noalias !26
  %454 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 2, i32 0
  %455 = bitcast i8** %454 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([6 x i8]* @.str.26 to i64), i64 5>, <2 x i64>* %455, align 16, !noalias !26
  %456 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 0
  %457 = bitcast i8** %456 to i64*
  store i64 %440, i64* %457, align 16, !noalias !26
  %458 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 1
  store i64 %441, i64* %458, align 8, !noalias !26
  %459 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 4, i32 0
  %460 = bitcast i8** %459 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.5 to i64), i64 1>, <2 x i64>* %460, align 16, !noalias !26
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.absl::string_view"* nonnull %448, i64 5) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %447) #7, !noalias !26
  %461 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1, !noalias !20
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %468, label %465

465:                                              ; preds = %445
  %466 = zext i8 %463 to i64
  %467 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  br label %475

468:                                              ; preds = %445
  %469 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %470 = load i64, i64* %469, align 8, !noalias !20
  %471 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %472 = load i64, i64* %471, align 8, !noalias !20
  %473 = icmp sgt i64 %472, -1
  br i1 %473, label %475, label %474, !prof !6

474:                                              ; preds = %468
  call void @llvm.trap() #7
  unreachable

475:                                              ; preds = %468, %465
  %476 = phi i64 [ %470, %468 ], [ %467, %465 ]
  %477 = phi i64 [ %472, %468 ], [ %466, %465 ]
  %478 = inttoptr i64 %476 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %8, i32 3, i8* %478, i64 %477, i32 204) #7
  %479 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %480 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %8, i64 0, i32 0
  %481 = load i64, i64* %480, align 8, !noalias !20
  store i64 %481, i64* %479, align 8, !alias.scope !20
  store i64 54, i64* %480, align 8, !noalias !20
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %489, !prof !5

483:                                              ; preds = %475
  %484 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %484) #7
  %485 = load i64, i64* %480, align 8, !noalias !20
  %486 = and i64 %485, 1
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %489, label %488

488:                                              ; preds = %483
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %485) #7
  br label %489

489:                                              ; preds = %488, %483, %475
  %490 = load i8, i8* %462, align 1, !noalias !20
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %489
  %493 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8, !noalias !20
  call void @_ZdlPv(i8* %494) #8
  br label %495

495:                                              ; preds = %492, %489
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %435) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %424) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %423) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #7, !noalias !20
  br label %597

496:                                              ; preds = %413
  switch i32 %417, label %523 [
    i32 1, label %497
    i32 3, label %504
  ]

497:                                              ; preds = %496
  %498 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %414, i64 1, i32 0
  %499 = bitcast i32* %498 to float*
  %500 = load float, float* %499, align 4
  %501 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %415, i64 1, i32 0
  %502 = bitcast i32* %501 to float*
  %503 = load float, float* %502, align 4
  br label %579

504:                                              ; preds = %496
  %505 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %414, i64 1, i32 0
  %506 = bitcast i32* %505 to float*
  %507 = load float, float* %506, align 4
  %508 = getelementptr inbounds i32, i32* %505, i64 1
  %509 = bitcast i32* %508 to float*
  %510 = load float, float* %509, align 4
  %511 = getelementptr inbounds i32, i32* %505, i64 2
  %512 = bitcast i32* %511 to float*
  %513 = load float, float* %512, align 4
  %514 = getelementptr inbounds %"class.flatbuffers::Vector.166", %"class.flatbuffers::Vector.166"* %415, i64 1, i32 0
  %515 = bitcast i32* %514 to float*
  %516 = load float, float* %515, align 4
  %517 = getelementptr inbounds i32, i32* %514, i64 1
  %518 = bitcast i32* %517 to float*
  %519 = load float, float* %518, align 4
  %520 = getelementptr inbounds i32, i32* %514, i64 2
  %521 = bitcast i32* %520 to float*
  %522 = load float, float* %521, align 4
  br label %579

523:                                              ; preds = %496
  %524 = bitcast %"class.absl::Status"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %524) #7, !noalias !20
  %525 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %525) #7, !noalias !20
  %526 = bitcast %"class.absl::AlphaNum"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %526) #7, !noalias !20
  %527 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %14, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.27, i64 0, i64 0), i8** %527, align 8, !noalias !20
  %528 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %14, i64 0, i32 0, i32 1
  store i64 73, i64* %528, align 8, !noalias !20
  %529 = bitcast %"class.absl::AlphaNum"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %529) #7, !noalias !20
  %530 = load i32, i32* %416, align 4
  %531 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %15, i64 0, i32 1, i64 0
  %532 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %530, i8* %531) #7
  %533 = ptrtoint i8* %532 to i64
  %534 = ptrtoint i8* %531 to i64
  %535 = sub i64 %533, %534
  %536 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %15, i64 0, i32 0, i32 0
  store i8* %531, i8** %536, align 8, !noalias !20
  %537 = icmp sgt i64 %535, -1
  br i1 %537, label %539, label %538, !prof !6

538:                                              ; preds = %523
  call void @llvm.trap() #7
  unreachable

539:                                              ; preds = %523
  %540 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %15, i64 0, i32 0, i32 1
  store i64 %535, i64* %540, align 8, !noalias !20
  %541 = bitcast %"class.absl::AlphaNum"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %541) #7, !noalias !20
  %542 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %542, align 8, !noalias !20
  %543 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 1
  store i64 1, i64* %543, align 8, !noalias !20
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %13, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %14, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %15, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %16) #7
  %544 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %544, i64 0, i32 1, i32 0
  %546 = load i8, i8* %545, align 1, !noalias !20
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %551, label %548

548:                                              ; preds = %539
  %549 = zext i8 %546 to i64
  %550 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  br label %558

551:                                              ; preds = %539
  %552 = bitcast %"class.std::__1::basic_string"* %13 to i64*
  %553 = load i64, i64* %552, align 8, !noalias !20
  %554 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %555 = load i64, i64* %554, align 8, !noalias !20
  %556 = icmp sgt i64 %555, -1
  br i1 %556, label %558, label %557, !prof !6

557:                                              ; preds = %551
  call void @llvm.trap() #7
  unreachable

558:                                              ; preds = %551, %548
  %559 = phi i64 [ %553, %551 ], [ %550, %548 ]
  %560 = phi i64 [ %555, %551 ], [ %549, %548 ]
  %561 = inttoptr i64 %559 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %12, i32 3, i8* %561, i64 %560, i32 204) #7
  %562 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %563 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %12, i64 0, i32 0
  %564 = load i64, i64* %563, align 8, !noalias !20
  store i64 %564, i64* %562, align 8, !alias.scope !20
  store i64 54, i64* %563, align 8, !noalias !20
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %566, label %572, !prof !5

566:                                              ; preds = %558
  %567 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %567) #7
  %568 = load i64, i64* %563, align 8, !noalias !20
  %569 = and i64 %568, 1
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %572, label %571

571:                                              ; preds = %566
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %568) #7
  br label %572

572:                                              ; preds = %571, %566, %558
  %573 = load i8, i8* %545, align 1, !noalias !20
  %574 = icmp slt i8 %573, 0
  br i1 %574, label %575, label %578

575:                                              ; preds = %572
  %576 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load i8*, i8** %576, align 8, !noalias !20
  call void @_ZdlPv(i8* %577) #8
  br label %578

578:                                              ; preds = %575, %572
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %541) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %529) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %526) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %525) #7, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %524) #7, !noalias !20
  br label %597

579:                                              ; preds = %504, %497
  %580 = phi i32 [ 1, %497 ], [ 3, %504 ]
  %581 = phi float [ %503, %497 ], [ %522, %504 ]
  %582 = phi float [ %503, %497 ], [ %519, %504 ]
  %583 = phi float [ %503, %497 ], [ %516, %504 ]
  %584 = phi float [ %500, %497 ], [ %513, %504 ]
  %585 = phi float [ %500, %497 ], [ %510, %504 ]
  %586 = phi float [ %500, %497 ], [ %507, %504 ]
  %587 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %587, align 8, !alias.scope !20
  %588 = getelementptr inbounds i8, i8* %324, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %588, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.110 } } } }, { { { { i8, [3 x i8], %union.anon.110 } } } }* @__const._ZN6tflite4task6vision12_GLOBAL__N_128GetNormalizationOptionsIfAnyERKNS_14TensorMetadataE.normalization_options, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 3, i1 false) #7
  %589 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  store float %586, float* %589, align 4, !alias.scope !20
  %590 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 1
  store float %585, float* %590, align 8, !alias.scope !20
  %591 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 2
  store float %584, float* %591, align 4, !alias.scope !20
  %592 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 0
  store float %583, float* %592, align 8, !alias.scope !20
  %593 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 1
  store float %582, float* %593, align 4, !alias.scope !20
  %594 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 2
  store float %581, float* %594, align 8, !alias.scope !20
  %595 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i32 %580, i32* %595, align 4, !alias.scope !20
  %596 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %596, align 8, !alias.scope !20
  br label %597

597:                                              ; preds = %579, %578, %495, %335, %329
  %598 = load i64, i64* %326, align 8, !noalias !20
  %599 = and i64 %598, 1
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %602, label %601

601:                                              ; preds = %597
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %598) #7
  br label %602

602:                                              ; preds = %597, %601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #7, !noalias !20
  %603 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %604 = load i64, i64* %603, align 8
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %608, label %606, !prof !6

606:                                              ; preds = %602
  store i64 54, i64* %603, align 8, !noalias !29
  %607 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %604, i64* %607, align 8
  br label %614

608:                                              ; preds = %602
  %609 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = load i8, i8* %609, align 8
  %611 = getelementptr inbounds i8, i8* %324, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %611, i64 27, i1 false)
  %612 = getelementptr inbounds %"class.tflite::support::StatusOr.135", %"class.tflite::support::StatusOr.135"* %26, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %613 = load i32, i32* %612, align 4
  br label %614

614:                                              ; preds = %606, %608
  %615 = phi i8 [ %610, %608 ], [ 0, %606 ]
  %616 = phi i32 [ %613, %608 ], [ 0, %606 ]
  %617 = phi i32 [ 0, %608 ], [ 1, %606 ]
  %618 = load i64, i64* %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %324) #7
  %619 = and i64 %618, 1
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %622, label %621

621:                                              ; preds = %614
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %618) #7
  br label %622

622:                                              ; preds = %614, %621
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #7
  %623 = icmp eq i32 %617, 0
  br i1 %623, label %624, label %1014

624:                                              ; preds = %111, %622
  %625 = phi i8 [ 0, %111 ], [ %615, %622 ]
  %626 = phi i32 [ 0, %111 ], [ %616, %622 ]
  %627 = phi i32* [ null, %111 ], [ %323, %622 ]
  %628 = phi %"struct.tflite::ImageProperties"* [ null, %111 ], [ %322, %622 ]
  %629 = getelementptr inbounds %"class.tflite::impl::Interpreter", %"class.tflite::impl::Interpreter"* %1, i64 0, i32 8, i32 0, i32 0
  %630 = load %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"** %629, align 8
  %631 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %630, i64 0, i32 0, i32 0, i32 0
  %632 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %631, align 8
  %633 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %632, i64 0, i32 7
  %634 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %632, i64 0, i32 7, i32 0, i32 1
  %635 = bitcast i32** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.std::__1::vector.39"* %633 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = sub i64 %636, %638
  %640 = lshr exact i64 %639, 2
  %641 = trunc i64 %640 to i32
  %642 = icmp eq i32 %641, 1
  br i1 %642, label %656, label %643

643:                                              ; preds = %624
  %644 = bitcast %"class.absl::Status"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %644) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %27, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42, i32 300) #7
  %645 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %646 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %27, i64 0, i32 0
  %647 = load i64, i64* %646, align 8
  store i64 %647, i64* %645, align 8
  store i64 54, i64* %646, align 8
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %649, label %655, !prof !5

649:                                              ; preds = %643
  %650 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %650) #7
  %651 = load i64, i64* %646, align 8
  %652 = and i64 %651, 1
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %655, label %654

654:                                              ; preds = %649
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %651) #7
  br label %655

655:                                              ; preds = %643, %649, %654
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %644) #7
  br label %1014

656:                                              ; preds = %624
  %657 = inttoptr i64 %638 to i32*
  %658 = load i32, i32* %657, align 4
  %659 = icmp slt i32 %658, 0
  br i1 %659, label %669, label %660

660:                                              ; preds = %656
  %661 = sext i32 %658 to i64
  %662 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %632, i64 0, i32 3, i32 0
  %663 = load i64, i64* %662, align 8
  %664 = icmp ugt i64 %663, %661
  br i1 %664, label %665, label %669

665:                                              ; preds = %660
  %666 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %632, i64 0, i32 3, i32 2
  %667 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %666, align 8
  %668 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %667, i64 %661
  br label %669

669:                                              ; preds = %656, %660, %665
  %670 = phi %struct.TfLiteTensor* [ %668, %665 ], [ null, %660 ], [ null, %656 ]
  %671 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %670, i64 0, i32 2
  %672 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %671, align 8
  %673 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %672, i64 0, i32 0
  %674 = load i32, i32* %673, align 4
  %675 = icmp eq i32 %674, 4
  br i1 %675, label %689, label %676

676:                                              ; preds = %669
  %677 = bitcast %"class.absl::Status"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %677) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %28, i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i64 45, i32 301) #7
  %678 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %679 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %28, i64 0, i32 0
  %680 = load i64, i64* %679, align 8
  store i64 %680, i64* %678, align 8
  store i64 54, i64* %679, align 8
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %682, label %688, !prof !5

682:                                              ; preds = %676
  %683 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %683) #7
  %684 = load i64, i64* %679, align 8
  %685 = and i64 %684, 1
  %686 = icmp eq i64 %685, 0
  br i1 %686, label %688, label %687

687:                                              ; preds = %682
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %684) #7
  br label %688

688:                                              ; preds = %676, %682, %687
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %677) #7
  br label %1014

689:                                              ; preds = %669
  %690 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %670, i64 0, i32 0
  %691 = load i32, i32* %690, align 8
  %692 = or i32 %691, 2
  %693 = icmp eq i32 %692, 3
  br i1 %693, label %764, label %694

694:                                              ; preds = %689
  %695 = bitcast %"class.absl::Status"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %695) #7
  %696 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %696) #7
  %697 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %670, i64 0, i32 7
  %698 = load i8*, i8** %697, align 8
  %699 = ptrtoint i8* %698 to i64
  %700 = icmp eq i8* %698, null
  br i1 %700, label %705, label %701

701:                                              ; preds = %694
  %702 = call i64 @strlen(i8* nonnull %698) #7
  %703 = icmp sgt i64 %702, -1
  br i1 %703, label %705, label %704, !prof !6

704:                                              ; preds = %701
  call void @llvm.trap() #7
  unreachable

705:                                              ; preds = %701, %694
  %706 = phi i64 [ 0, %694 ], [ %702, %701 ]
  %707 = call i8* @TfLiteTypeGetName(i32 %691) #7
  %708 = ptrtoint i8* %707 to i64
  %709 = icmp eq i8* %707, null
  br i1 %709, label %714, label %710

710:                                              ; preds = %705
  %711 = call i64 @strlen(i8* nonnull %707) #7
  %712 = icmp sgt i64 %711, -1
  br i1 %712, label %714, label %713, !prof !6

713:                                              ; preds = %710
  call void @llvm.trap() #7
  unreachable

714:                                              ; preds = %710, %705
  %715 = phi i64 [ 0, %705 ], [ %711, %710 ]
  %716 = bitcast [5 x %"class.absl::string_view"]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %716) #7, !noalias !32
  %717 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 0
  %718 = bitcast [5 x %"class.absl::string_view"]* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([32 x i8]* @.str.3 to i64), i64 31>, <2 x i64>* %718, align 16, !noalias !32
  %719 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 1, i32 0
  %720 = bitcast i8** %719 to i64*
  store i64 %699, i64* %720, align 16, !noalias !32
  %721 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 1, i32 1
  store i64 %706, i64* %721, align 8, !noalias !32
  %722 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 2, i32 0
  %723 = bitcast i8** %722 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([66 x i8]* @.str.4 to i64), i64 65>, <2 x i64>* %723, align 16, !noalias !32
  %724 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 0
  %725 = bitcast i8** %724 to i64*
  store i64 %708, i64* %725, align 16, !noalias !32
  %726 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 3, i32 1
  store i64 %715, i64* %726, align 8, !noalias !32
  %727 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %17, i64 0, i64 4, i32 0
  %728 = bitcast i8** %727 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.5 to i64), i64 1>, <2 x i64>* %728, align 16, !noalias !32
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %30, %"class.absl::string_view"* nonnull %717, i64 5) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %716) #7, !noalias !32
  %729 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %730 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %729, i64 0, i32 1, i32 0
  %731 = load i8, i8* %730, align 1
  %732 = icmp slt i8 %731, 0
  br i1 %732, label %736, label %733

733:                                              ; preds = %714
  %734 = zext i8 %731 to i64
  %735 = ptrtoint %"class.std::__1::basic_string"* %30 to i64
  br label %743

736:                                              ; preds = %714
  %737 = bitcast %"class.std::__1::basic_string"* %30 to i64*
  %738 = load i64, i64* %737, align 8
  %739 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %740 = load i64, i64* %739, align 8
  %741 = icmp sgt i64 %740, -1
  br i1 %741, label %743, label %742, !prof !6

742:                                              ; preds = %736
  call void @llvm.trap() #7
  unreachable

743:                                              ; preds = %733, %736
  %744 = phi i64 [ %738, %736 ], [ %735, %733 ]
  %745 = phi i64 [ %740, %736 ], [ %734, %733 ]
  %746 = inttoptr i64 %744 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %29, i32 3, i8* %746, i64 %745, i32 302) #7
  %747 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %748 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %29, i64 0, i32 0
  %749 = load i64, i64* %748, align 8
  store i64 %749, i64* %747, align 8
  store i64 54, i64* %748, align 8
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %751, label %757, !prof !5

751:                                              ; preds = %743
  %752 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %752) #7
  %753 = load i64, i64* %748, align 8
  %754 = and i64 %753, 1
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %757, label %756

756:                                              ; preds = %751
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %753) #7
  br label %757

757:                                              ; preds = %743, %751, %756
  %758 = load i8, i8* %730, align 1
  %759 = icmp slt i8 %758, 0
  br i1 %759, label %760, label %763

760:                                              ; preds = %757
  %761 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %762 = load i8*, i8** %761, align 8
  call void @_ZdlPv(i8* %762) #8
  br label %763

763:                                              ; preds = %757, %760
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %696) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %695) #7
  br label %1014

764:                                              ; preds = %689
  %765 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %672, i64 0, i32 1, i64 0
  %766 = load i32, i32* %765, align 4
  %767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %672, i64 0, i32 1, i64 1
  %768 = load i32, i32* %767, align 4
  %769 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %672, i64 0, i32 1, i64 2
  %770 = load i32, i32* %769, align 4
  %771 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %672, i64 0, i32 1, i64 3
  %772 = load i32, i32* %771, align 4
  %773 = icmp eq %"struct.tflite::ImageProperties"* %628, null
  br i1 %773, label %805, label %774

774:                                              ; preds = %764
  %775 = load i32, i32* %627, align 4
  %776 = sext i32 %775 to i64
  %777 = sub nsw i64 0, %776
  %778 = getelementptr inbounds %"struct.tflite::ImageProperties", %"struct.tflite::ImageProperties"* %628, i64 0, i32 0, i32 0, i64 %777
  %779 = bitcast i8* %778 to i16*
  %780 = load i16, i16* %779, align 2
  %781 = icmp ugt i16 %780, 4
  br i1 %781, label %782, label %792

782:                                              ; preds = %774
  %783 = getelementptr inbounds i8, i8* %778, i64 4
  %784 = bitcast i8* %783 to i16*
  %785 = load i16, i16* %784, align 2
  %786 = icmp eq i16 %785, 0
  br i1 %786, label %792, label %787

787:                                              ; preds = %782
  %788 = zext i16 %785 to i64
  %789 = getelementptr inbounds %"struct.tflite::ImageProperties", %"struct.tflite::ImageProperties"* %628, i64 0, i32 0, i32 0, i64 %788
  %790 = load i8, i8* %789, align 1
  %791 = icmp eq i8 %790, 1
  br i1 %791, label %805, label %792

792:                                              ; preds = %774, %782, %787
  %793 = bitcast %"class.absl::Status"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %793) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %31, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i64 42, i32 2) #7
  %794 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %795 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %31, i64 0, i32 0
  %796 = load i64, i64* %795, align 8
  store i64 %796, i64* %794, align 8
  store i64 54, i64* %795, align 8
  %797 = icmp eq i64 %796, 0
  br i1 %797, label %798, label %804, !prof !5

798:                                              ; preds = %792
  %799 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %799) #7
  %800 = load i64, i64* %795, align 8
  %801 = and i64 %800, 1
  %802 = icmp eq i64 %801, 0
  br i1 %802, label %804, label %803

803:                                              ; preds = %798
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %800) #7
  br label %804

804:                                              ; preds = %792, %798, %803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %793) #7
  br label %1014

805:                                              ; preds = %787, %764
  %806 = icmp ne i32 %766, 1
  %807 = icmp ne i32 %772, 3
  %808 = or i1 %806, %807
  br i1 %808, label %809, label %913

809:                                              ; preds = %805
  %810 = bitcast %"class.absl::Status"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %810) #7
  %811 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %811) #7
  %812 = bitcast %"class.absl::AlphaNum"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %812) #7
  %813 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %34, i64 0, i32 1, i64 0
  %814 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %766, i8* %813) #7
  %815 = ptrtoint i8* %814 to i64
  %816 = ptrtoint i8* %813 to i64
  %817 = sub i64 %815, %816
  %818 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %34, i64 0, i32 0, i32 0
  store i8* %813, i8** %818, align 16
  %819 = icmp sgt i64 %817, -1
  br i1 %819, label %821, label %820, !prof !6

820:                                              ; preds = %809
  call void @llvm.trap() #7
  unreachable

821:                                              ; preds = %809
  %822 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %34, i64 0, i32 0, i32 1
  store i64 %817, i64* %822, align 8
  %823 = bitcast %"class.absl::AlphaNum"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %823) #7
  %824 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %35, i64 0, i32 1, i64 0
  %825 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %768, i8* %824) #7
  %826 = ptrtoint i8* %825 to i64
  %827 = ptrtoint i8* %824 to i64
  %828 = sub i64 %826, %827
  %829 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %35, i64 0, i32 0, i32 0
  store i8* %824, i8** %829, align 8
  %830 = icmp sgt i64 %828, -1
  br i1 %830, label %832, label %831, !prof !6

831:                                              ; preds = %821
  call void @llvm.trap() #7
  unreachable

832:                                              ; preds = %821
  %833 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %35, i64 0, i32 0, i32 1
  store i64 %828, i64* %833, align 8
  %834 = bitcast [9 x %"class.absl::string_view"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %834) #7, !noalias !35
  %835 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 0
  %836 = bitcast [9 x %"class.absl::string_view"]* %4 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([69 x i8]* @.str.7 to i64), i64 68>, <2 x i64>* %836, align 16, !noalias !35
  %837 = bitcast %"class.absl::AlphaNum"* %34 to <2 x i64>*
  %838 = load <2 x i64>, <2 x i64>* %837, align 16, !noalias !35
  %839 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 1, i32 0
  %840 = bitcast i8** %839 to <2 x i64>*
  store <2 x i64> %838, <2 x i64>* %840, align 16, !noalias !35
  %841 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 2, i32 0
  %842 = bitcast i8** %841 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([4 x i8]* @.str.8 to i64), i64 3>, <2 x i64>* %842, align 16, !noalias !35
  %843 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 3, i32 0
  %844 = bitcast i8** %843 to i64*
  store i64 %827, i64* %844, align 16, !noalias !35
  %845 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 3, i32 1
  store i64 %828, i64* %845, align 8, !noalias !35
  %846 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 4, i32 0
  %847 = bitcast i8** %846 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([4 x i8]* @.str.8 to i64), i64 3>, <2 x i64>* %847, align 16, !noalias !35
  %848 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %848) #7, !noalias !35
  %849 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 1, i64 0
  %850 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %770, i8* %849) #7, !noalias !35
  %851 = ptrtoint i8* %850 to i64
  %852 = ptrtoint i8* %849 to i64
  %853 = sub i64 %851, %852
  %854 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* %849, i8** %854, align 8, !noalias !35
  %855 = icmp sgt i64 %853, -1
  br i1 %855, label %857, label %856, !prof !6

856:                                              ; preds = %832
  call void @llvm.trap() #7
  unreachable

857:                                              ; preds = %832
  %858 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 %853, i64* %858, align 8, !noalias !35
  %859 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 5, i32 0
  store i8* %849, i8** %859, align 16, !noalias !35
  %860 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 5, i32 1
  store i64 %853, i64* %860, align 8, !noalias !35
  %861 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %861, align 16, !noalias !35
  %862 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 6, i32 1
  store i64 3, i64* %862, align 8, !noalias !35
  %863 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %863) #7, !noalias !35
  %864 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %865 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %772, i8* %864) #7, !noalias !35
  %866 = ptrtoint i8* %865 to i64
  %867 = ptrtoint i8* %864 to i64
  %868 = sub i64 %866, %867
  %869 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %864, i8** %869, align 8, !noalias !35
  %870 = icmp sgt i64 %868, -1
  br i1 %870, label %872, label %871, !prof !6

871:                                              ; preds = %857
  call void @llvm.trap() #7
  unreachable

872:                                              ; preds = %857
  %873 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %868, i64* %873, align 8, !noalias !35
  %874 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 7, i32 0
  store i8* %864, i8** %874, align 16, !noalias !35
  %875 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 7, i32 1
  store i64 %868, i64* %875, align 8, !noalias !35
  %876 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %876, align 16, !noalias !35
  %877 = getelementptr inbounds [9 x %"class.absl::string_view"], [9 x %"class.absl::string_view"]* %4, i64 0, i64 8, i32 1
  store i64 1, i64* %877, align 8, !noalias !35
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %33, %"class.absl::string_view"* nonnull %835, i64 9) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %863) #7, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %848) #7, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %834) #7, !noalias !35
  %878 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %879 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %878, i64 0, i32 1, i32 0
  %880 = load i8, i8* %879, align 1
  %881 = icmp slt i8 %880, 0
  br i1 %881, label %885, label %882

882:                                              ; preds = %872
  %883 = zext i8 %880 to i64
  %884 = ptrtoint %"class.std::__1::basic_string"* %33 to i64
  br label %892

885:                                              ; preds = %872
  %886 = bitcast %"class.std::__1::basic_string"* %33 to i64*
  %887 = load i64, i64* %886, align 8
  %888 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %889 = load i64, i64* %888, align 8
  %890 = icmp sgt i64 %889, -1
  br i1 %890, label %892, label %891, !prof !6

891:                                              ; preds = %885
  call void @llvm.trap() #7
  unreachable

892:                                              ; preds = %882, %885
  %893 = phi i64 [ %887, %885 ], [ %884, %882 ]
  %894 = phi i64 [ %889, %885 ], [ %883, %882 ]
  %895 = inttoptr i64 %893 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %32, i32 3, i8* %895, i64 %894, i32 301) #7
  %896 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %897 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %32, i64 0, i32 0
  %898 = load i64, i64* %897, align 8
  store i64 %898, i64* %896, align 8
  store i64 54, i64* %897, align 8
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %900, label %906, !prof !5

900:                                              ; preds = %892
  %901 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %901) #7
  %902 = load i64, i64* %897, align 8
  %903 = and i64 %902, 1
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %906, label %905

905:                                              ; preds = %900
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %902) #7
  br label %906

906:                                              ; preds = %892, %900, %905
  %907 = load i8, i8* %879, align 1
  %908 = icmp slt i8 %907, 0
  br i1 %908, label %909, label %912

909:                                              ; preds = %906
  %910 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %911 = load i8*, i8** %910, align 8
  call void @_ZdlPv(i8* %911) #8
  br label %912

912:                                              ; preds = %906, %909
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %823) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %812) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %811) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %810) #7
  br label %1014

913:                                              ; preds = %805
  %914 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %670, i64 0, i32 5
  %915 = load i64, i64* %914, align 8
  %916 = icmp eq i32 %691, 1
  %917 = select i1 %916, i64 4, i64 1
  br i1 %916, label %918, label %953

918:                                              ; preds = %913
  %919 = icmp eq i8 %625, 0
  br i1 %919, label %920, label %933

920:                                              ; preds = %918
  %921 = bitcast %"class.absl::Status"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %921) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %36, i32 5, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.9, i64 0, i64 0), i64 118, i32 208) #7
  %922 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %923 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %36, i64 0, i32 0
  %924 = load i64, i64* %923, align 8
  store i64 %924, i64* %922, align 8
  store i64 54, i64* %923, align 8
  %925 = icmp eq i64 %924, 0
  br i1 %925, label %926, label %932, !prof !5

926:                                              ; preds = %920
  %927 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %927) #7
  %928 = load i64, i64* %923, align 8
  %929 = and i64 %928, 1
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %932, label %931

931:                                              ; preds = %926
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %928) #7
  br label %932

932:                                              ; preds = %920, %926, %931
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %921) #7
  br label %1014

933:                                              ; preds = %918
  %934 = shl i64 %915, 32
  %935 = ashr exact i64 %934, 32
  %936 = lshr i64 %935, 2
  %937 = sext i32 %626 to i64
  %938 = urem i64 %936, %937
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %953, label %940

940:                                              ; preds = %933
  %941 = bitcast %"class.absl::Status"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %941) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %37, i32 3, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0), i64 104, i32 2) #7
  %942 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %943 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %37, i64 0, i32 0
  %944 = load i64, i64* %943, align 8
  store i64 %944, i64* %942, align 8
  store i64 54, i64* %943, align 8
  %945 = icmp eq i64 %944, 0
  br i1 %945, label %946, label %952, !prof !5

946:                                              ; preds = %940
  %947 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %947) #7
  %948 = load i64, i64* %943, align 8
  %949 = and i64 %948, 1
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %952, label %951

951:                                              ; preds = %946
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %948) #7
  br label %952

952:                                              ; preds = %940, %946, %951
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %941) #7
  br label %1014

953:                                              ; preds = %933, %913
  %954 = icmp slt i32 %770, 1
  br i1 %954, label %955, label %968

955:                                              ; preds = %953
  %956 = bitcast %"class.absl::Status"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %956) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %38, i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i64 35, i32 301) #7
  %957 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %958 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %38, i64 0, i32 0
  %959 = load i64, i64* %958, align 8
  store i64 %959, i64* %957, align 8
  store i64 54, i64* %958, align 8
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %961, label %967, !prof !5

961:                                              ; preds = %955
  %962 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %962) #7
  %963 = load i64, i64* %958, align 8
  %964 = and i64 %963, 1
  %965 = icmp eq i64 %964, 0
  br i1 %965, label %967, label %966

966:                                              ; preds = %961
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %963) #7
  br label %967

967:                                              ; preds = %955, %961, %966
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %956) #7
  br label %1014

968:                                              ; preds = %953
  %969 = icmp slt i32 %768, 1
  br i1 %969, label %970, label %983

970:                                              ; preds = %968
  %971 = bitcast %"class.absl::Status"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %971) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %39, i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0), i64 36, i32 301) #7
  %972 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %973 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %39, i64 0, i32 0
  %974 = load i64, i64* %973, align 8
  store i64 %974, i64* %972, align 8
  store i64 54, i64* %973, align 8
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %982, !prof !5

976:                                              ; preds = %970
  %977 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %977) #7
  %978 = load i64, i64* %973, align 8
  %979 = and i64 %978, 1
  %980 = icmp eq i64 %979, 0
  br i1 %980, label %982, label %981

981:                                              ; preds = %976
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %978) #7
  br label %982

982:                                              ; preds = %970, %976, %981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %971) #7
  br label %1014

983:                                              ; preds = %968
  %984 = shl i64 %915, 32
  %985 = ashr exact i64 %984, 32
  %986 = mul nsw i32 %770, %768
  %987 = mul nsw i32 %986, 3
  %988 = sext i32 %987 to i64
  %989 = mul nsw i64 %917, %988
  %990 = icmp eq i64 %985, %989
  br i1 %990, label %1004, label %991

991:                                              ; preds = %983
  %992 = bitcast %"class.absl::Status"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %992) #7
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %40, i32 3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i64 77, i32 303) #7
  %993 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %994 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %40, i64 0, i32 0
  %995 = load i64, i64* %994, align 8
  store i64 %995, i64* %993, align 8
  store i64 54, i64* %994, align 8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %1003, !prof !5

997:                                              ; preds = %991
  %998 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %998) #7
  %999 = load i64, i64* %994, align 8
  %1000 = and i64 %999, 1
  %1001 = icmp eq i64 %1000, 0
  br i1 %1001, label %1003, label %1002

1002:                                             ; preds = %997
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %999) #7
  br label %1003

1003:                                             ; preds = %991, %997, %1002
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %992) #7
  br label %1014

1004:                                             ; preds = %983
  %1005 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 %770, i32* %1005, align 8
  %1006 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i32 %768, i32* %1006, align 4
  %1007 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  store i32 1, i32* %1007, align 8
  %1008 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 3
  store i32 %691, i32* %1008, align 4
  %1009 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 %625, i8* %1009, align 8
  %1010 = bitcast %"class.tflite::support::StatusOr"* %0 to i8*
  %1011 = getelementptr inbounds i8, i8* %1010, i64 25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1011, i8* nonnull align 1 %113, i64 27, i1 false)
  %1012 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i32 %626, i32* %1012, align 4
  %1013 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1013, align 8
  br label %1014

1014:                                             ; preds = %655, %622, %688, %804, %912, %1004, %1003, %982, %967, %952, %932, %763, %319
  call void @llvm.lifetime.end.p0i8(i64 27, i8* nonnull %113)
  %1015 = load i64, i64* %42, align 8
  %1016 = and i64 %1015, 1
  %1017 = icmp eq i64 %1016, 0
  br i1 %1017, label %1019, label %1018

1018:                                             ; preds = %1014
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1015) #7
  br label %1019

1019:                                             ; preds = %107, %1014, %1018
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret, i32, i8*, i64, i32) local_unnamed_addr #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

declare i32 @_ZNK6tflite8metadata22ModelMetadataExtractor19GetInputTensorCountEv(%"class.tflite::metadata::ModelMetadataExtractor"*) local_unnamed_addr #2

declare %"struct.tflite::TensorMetadata"* @_ZNK6tflite8metadata22ModelMetadataExtractor22GetInputTensorMetadataEi(%"class.tflite::metadata::ModelMetadataExtractor"*, i32) local_unnamed_addr #2

declare void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"*) local_unnamed_addr #2

declare void @_ZN4absl6Status15UnrefNonInlinedEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZN6tflite8metadata22ModelMetadataExtractor20FindFirstProcessUnitERKNS_14TensorMetadataENS_18ProcessUnitOptionsE(%"class.tflite::support::StatusOr.154"* sret, %"struct.tflite::TensorMetadata"* dereferenceable(1), i32) local_unnamed_addr #2

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite4task6vision12_GLOBAL__N_127GetInputTensorMetadataIfAnyERKNS_8metadata22ModelMetadataExtractorE: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite4task6vision12_GLOBAL__N_127GetInputTensorMetadataIfAnyERKNS_8metadata22ModelMetadataExtractorE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNO6tflite7support8StatusOrIPKNS_14TensorMetadataEE6statusEv: argument 0"}
!9 = distinct !{!9, !"_ZNO6tflite7support8StatusOrIPKNS_14TensorMetadataEE6statusEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN6tflite4task6vision12_GLOBAL__N_123GetImagePropertiesIfAnyERKNS_14TensorMetadataE: argument 0"}
!12 = distinct !{!12, !"_ZN6tflite4task6vision12_GLOBAL__N_123GetImagePropertiesIfAnyERKNS_14TensorMetadataE"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZNK11flatbuffers6String3strEv: argument 0"}
!15 = distinct !{!15, !"_ZNK11flatbuffers6String3strEv"}
!16 = !{!14}
!17 = !{!18, !11}
!18 = distinct !{!18, !19, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!19 = distinct !{!19, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite4task6vision12_GLOBAL__N_128GetNormalizationOptionsIfAnyERKNS_14TensorMetadataE: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite4task6vision12_GLOBAL__N_128GetNormalizationOptionsIfAnyERKNS_14TensorMetadataE"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZNO6tflite7support8StatusOrIPKNS_11ProcessUnitEE6statusEv: argument 0"}
!25 = distinct !{!25, !"_ZNO6tflite7support8StatusOrIPKNS_11ProcessUnitEE6statusEv"}
!26 = !{!27, !21}
!27 = distinct !{!27, !28, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!28 = distinct !{!28, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNO6tflite7support8StatusOrIN4absl8optionalINS_4task6vision20NormalizationOptionsEEEE6statusEv: argument 0"}
!31 = distinct !{!31, !"_ZNO6tflite7support8StatusOrIN4absl8optionalINS_4task6vision20NormalizationOptionsEEEE6statusEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!34 = distinct !{!34, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN4absl6StrCatIJiA4_ciA2_cEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_8AlphaNumESC_SC_SC_SC_DpRKT_: argument 0"}
!37 = distinct !{!37, !"_ZN4absl6StrCatIJiA4_ciA2_cEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS_8AlphaNumESC_SC_SC_SC_DpRKT_"}
