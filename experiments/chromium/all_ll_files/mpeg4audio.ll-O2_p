; ModuleID = '../../third_party/ffmpeg/libavcodec/mpeg4audio.c'
source_filename = "../../third_party/ffmpeg/libavcodec/mpeg4audio.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }

@avpriv_mpeg4audio_sample_rates = hidden local_unnamed_addr constant [16 x i32] [i32 96000, i32 88200, i32 64000, i32 48000, i32 44100, i32 32000, i32 24000, i32 22050, i32 16000, i32 12000, i32 11025, i32 8000, i32 7350, i32 0, i32 0, i32 0], align 16
@ff_mpeg4audio_channels = hidden local_unnamed_addr constant [14 x i8] c"\00\01\02\03\04\05\06\08\00\00\00\07\08\18", align 1
@.str = private unnamed_addr constant [24 x i8] c"Invalid chan_config %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Invalid sample rate %d\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig* nocapture, %struct.GetBitContext*, i32, i8*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = lshr i32 %6, 3
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %15) #3, !srcloc !2
  %17 = and i32 %6, 7
  %18 = shl i32 %16, %17
  %19 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -5, i32 %18) #3, !srcloc !3
  %20 = add i32 %6, 5
  %21 = icmp ugt i32 %8, %20
  %22 = select i1 %21, i32 %20, i32 %8
  store i32 %22, i32* %5, align 8
  %23 = icmp eq i32 %19, 31
  br i1 %23, label %24, label %38

24:                                               ; preds = %4
  %25 = lshr i32 %22, 3
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %10, i64 %26
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %29) #3, !srcloc !2
  %31 = and i32 %22, 7
  %32 = shl i32 %30, %31
  %33 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -6, i32 %32) #3, !srcloc !3
  %34 = add i32 %22, 6
  %35 = icmp ugt i32 %8, %34
  %36 = select i1 %35, i32 %34, i32 %8
  store i32 %36, i32* %5, align 8
  %37 = add i32 %33, 32
  br label %38

38:                                               ; preds = %4, %24
  %39 = phi i32 [ %37, %24 ], [ %19, %4 ]
  %40 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 0
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 1
  %42 = load i32, i32* %5, align 8
  %43 = load i32, i32* %7, align 8
  %44 = load i8*, i8** %9, align 8
  %45 = lshr i32 %42, 3
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %49) #3, !srcloc !2
  %51 = and i32 %42, 7
  %52 = shl i32 %50, %51
  %53 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -4, i32 %52) #3, !srcloc !3
  %54 = add i32 %42, 4
  %55 = icmp ugt i32 %43, %54
  %56 = select i1 %55, i32 %54, i32 %43
  store i32 %56, i32* %5, align 8
  store i32 %53, i32* %41, align 4
  %57 = icmp eq i32 %53, 15
  br i1 %57, label %58, label %74

58:                                               ; preds = %38
  %59 = load i32, i32* %5, align 8
  %60 = load i32, i32* %7, align 8
  %61 = load i8*, i8** %9, align 8
  %62 = lshr i32 %59, 3
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %66) #3, !srcloc !2
  %68 = and i32 %59, 7
  %69 = shl i32 %67, %68
  %70 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -24, i32 %69) #3, !srcloc !3
  %71 = add i32 %59, 24
  %72 = icmp ugt i32 %60, %71
  %73 = select i1 %72, i32 %71, i32 %60
  store i32 %73, i32* %5, align 8
  br label %78

74:                                               ; preds = %38
  %75 = sext i32 %53 to i64
  %76 = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %58, %74
  %79 = phi i32 [ %70, %58 ], [ %77, %74 ]
  %80 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 2
  store i32 %79, i32* %80, align 4
  %81 = load i32, i32* %5, align 8
  %82 = load i32, i32* %7, align 8
  %83 = load i8*, i8** %9, align 8
  %84 = lshr i32 %81, 3
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %88) #3, !srcloc !2
  %90 = and i32 %81, 7
  %91 = shl i32 %89, %90
  %92 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -4, i32 %91) #3, !srcloc !3
  %93 = add i32 %81, 4
  %94 = icmp ugt i32 %82, %93
  %95 = select i1 %94, i32 %93, i32 %82
  store i32 %95, i32* %5, align 8
  %96 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 3
  store i32 %92, i32* %96, align 4
  %97 = icmp ult i32 %92, 14
  br i1 %97, label %98, label %107

98:                                               ; preds = %78
  %99 = sext i32 %92 to i64
  %100 = getelementptr inbounds [14 x i8], [14 x i8]* @ff_mpeg4audio_channels, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 9
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 4
  store i32 -1, i32* %104, align 4
  %105 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 10
  store i32 -1, i32* %105, align 4
  %106 = load i32, i32* %40, align 4
  switch i32 %106, label %220 [
    i32 5, label %127
    i32 29, label %108
  ]

107:                                              ; preds = %78
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 %92) #4
  br label %515

108:                                              ; preds = %98
  %109 = load i32, i32* %5, align 8
  %110 = load i8*, i8** %9, align 8
  %111 = lshr i32 %109, 3
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 1
  %116 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %115) #3, !srcloc !2
  %117 = and i32 %109, 7
  %118 = shl i32 %116, %117
  %119 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -3, i32 %118) #3, !srcloc !3
  %120 = and i32 %119, 3
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %108
  %123 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -9, i32 %118) #3, !srcloc !3
  %124 = and i32 %123, 63
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %220, label %126

126:                                              ; preds = %122, %108
  store i32 1, i32* %105, align 4
  br label %127

127:                                              ; preds = %98, %126
  %128 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 5
  store i32 5, i32* %128, align 4
  store i32 1, i32* %104, align 4
  %129 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 6
  %130 = load i32, i32* %5, align 8
  %131 = load i32, i32* %7, align 8
  %132 = load i8*, i8** %9, align 8
  %133 = lshr i32 %130, 3
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %132, i64 %134
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* %136, align 1
  %138 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %137) #3, !srcloc !2
  %139 = and i32 %130, 7
  %140 = shl i32 %138, %139
  %141 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -4, i32 %140) #3, !srcloc !3
  %142 = add i32 %130, 4
  %143 = icmp ugt i32 %131, %142
  %144 = select i1 %143, i32 %142, i32 %131
  store i32 %144, i32* %5, align 8
  store i32 %141, i32* %129, align 4
  %145 = icmp eq i32 %141, 15
  br i1 %145, label %146, label %162

146:                                              ; preds = %127
  %147 = load i32, i32* %5, align 8
  %148 = load i32, i32* %7, align 8
  %149 = load i8*, i8** %9, align 8
  %150 = lshr i32 %147, 3
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %149, i64 %151
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 1
  %155 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %154) #3, !srcloc !2
  %156 = and i32 %147, 7
  %157 = shl i32 %155, %156
  %158 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -24, i32 %157) #3, !srcloc !3
  %159 = add i32 %147, 24
  %160 = icmp ugt i32 %148, %159
  %161 = select i1 %160, i32 %159, i32 %148
  store i32 %161, i32* %5, align 8
  br label %166

162:                                              ; preds = %127
  %163 = sext i32 %141 to i64
  %164 = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  br label %166

166:                                              ; preds = %146, %162
  %167 = phi i32 [ %158, %146 ], [ %165, %162 ]
  %168 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 7
  store i32 %167, i32* %168, align 4
  %169 = load i32, i32* %5, align 8
  %170 = load i32, i32* %7, align 8
  %171 = load i8*, i8** %9, align 8
  %172 = lshr i32 %169, 3
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %171, i64 %173
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 1
  %177 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %176) #3, !srcloc !2
  %178 = and i32 %169, 7
  %179 = shl i32 %177, %178
  %180 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -5, i32 %179) #3, !srcloc !3
  %181 = add i32 %169, 5
  %182 = icmp ugt i32 %170, %181
  %183 = select i1 %182, i32 %181, i32 %170
  store i32 %183, i32* %5, align 8
  %184 = icmp eq i32 %180, 31
  br i1 %184, label %185, label %199

185:                                              ; preds = %166
  %186 = lshr i32 %183, 3
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* %171, i64 %187
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 1
  %191 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %190) #3, !srcloc !2
  %192 = and i32 %183, 7
  %193 = shl i32 %191, %192
  %194 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -6, i32 %193) #3, !srcloc !3
  %195 = add i32 %183, 6
  %196 = icmp ugt i32 %170, %195
  %197 = select i1 %196, i32 %195, i32 %170
  store i32 %197, i32* %5, align 8
  %198 = add i32 %194, 32
  br label %199

199:                                              ; preds = %166, %185
  %200 = phi i32 [ %198, %185 ], [ %180, %166 ]
  store i32 %200, i32* %40, align 4
  %201 = icmp eq i32 %200, 22
  br i1 %201, label %202, label %223

202:                                              ; preds = %199
  %203 = load i32, i32* %5, align 8
  %204 = load i32, i32* %7, align 8
  %205 = load i8*, i8** %9, align 8
  %206 = lshr i32 %203, 3
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %205, i64 %207
  %209 = bitcast i8* %208 to i32*
  %210 = load i32, i32* %209, align 1
  %211 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %210) #3, !srcloc !2
  %212 = and i32 %203, 7
  %213 = shl i32 %211, %212
  %214 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -4, i32 %213) #3, !srcloc !3
  %215 = add i32 %203, 4
  %216 = icmp ugt i32 %204, %215
  %217 = select i1 %216, i32 %215, i32 %204
  store i32 %217, i32* %5, align 8
  %218 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 8
  store i32 %214, i32* %218, align 4
  %219 = load i32, i32* %40, align 4
  br label %223

220:                                              ; preds = %98, %122
  %221 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 5
  store i32 0, i32* %221, align 4
  %222 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 7
  store i32 0, i32* %222, align 4
  br label %223

223:                                              ; preds = %202, %220, %199
  %224 = phi i32 [ %200, %199 ], [ %106, %220 ], [ %219, %202 ]
  %225 = load i32, i32* %5, align 8
  %226 = icmp eq i32 %224, 36
  br i1 %226, label %227, label %336

227:                                              ; preds = %223
  %228 = load i32, i32* %7, align 8
  %229 = add i32 %225, 5
  %230 = icmp ugt i32 %228, %229
  %231 = select i1 %230, i32 %229, i32 %228
  store i32 %231, i32* %5, align 8
  %232 = load i8*, i8** %9, align 8
  %233 = lshr i32 %231, 3
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %232, i64 %234
  %236 = bitcast i8* %235 to i32*
  %237 = load i32, i32* %236, align 1
  %238 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %237) #3, !srcloc !2
  %239 = and i32 %231, 7
  %240 = shl i32 %238, %239
  %241 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -24, i32 %240) #3, !srcloc !3
  %242 = icmp eq i32 %241, 4279379
  br i1 %242, label %247, label %243

243:                                              ; preds = %227
  %244 = add i32 %231, 24
  %245 = icmp ugt i32 %228, %244
  %246 = select i1 %245, i32 %244, i32 %228
  store i32 %246, i32* %5, align 8
  br label %247

247:                                              ; preds = %227, %243
  %248 = phi i32 [ %231, %227 ], [ %246, %243 ]
  %249 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = sub nsw i32 %250, %248
  %252 = icmp slt i32 %251, 112
  br i1 %252, label %515, label %253

253:                                              ; preds = %247
  %254 = lshr i32 %248, 3
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8* %232, i64 %255
  %257 = bitcast i8* %256 to i32*
  %258 = load i32, i32* %257, align 1
  %259 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %258) #3, !srcloc !2
  %260 = and i32 %248, 7
  %261 = shl i32 %259, %260
  %262 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %261) #3, !srcloc !3
  %263 = add i32 %248, 16
  %264 = icmp ugt i32 %228, %263
  %265 = select i1 %264, i32 %263, i32 %228
  store i32 %265, i32* %5, align 8
  %266 = lshr i32 %265, 3
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds i8, i8* %232, i64 %267
  %269 = bitcast i8* %268 to i32*
  %270 = load i32, i32* %269, align 1
  %271 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %270) #3, !srcloc !2
  %272 = and i32 %265, 7
  %273 = shl i32 %271, %272
  %274 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %273) #3, !srcloc !3
  %275 = add i32 %265, 16
  %276 = icmp ugt i32 %228, %275
  %277 = select i1 %276, i32 %275, i32 %228
  store i32 %277, i32* %5, align 8
  %278 = shl i32 %262, 16
  %279 = or i32 %274, %278
  %280 = icmp eq i32 %279, 1095521024
  br i1 %280, label %281, label %515

281:                                              ; preds = %253
  %282 = lshr i32 %277, 3
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %232, i64 %283
  %285 = bitcast i8* %284 to i32*
  %286 = load i32, i32* %285, align 1
  %287 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %286) #3, !srcloc !2
  %288 = and i32 %277, 7
  %289 = shl i32 %287, %288
  %290 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %289) #3, !srcloc !3
  %291 = add i32 %277, 16
  %292 = icmp ugt i32 %228, %291
  %293 = select i1 %292, i32 %291, i32 %228
  store i32 %293, i32* %5, align 8
  %294 = lshr i32 %293, 3
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %232, i64 %295
  %297 = bitcast i8* %296 to i32*
  %298 = load i32, i32* %297, align 1
  %299 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %298) #3, !srcloc !2
  %300 = and i32 %293, 7
  %301 = shl i32 %299, %300
  %302 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %301) #3, !srcloc !3
  %303 = add i32 %293, 16
  %304 = icmp ugt i32 %228, %303
  %305 = select i1 %304, i32 %303, i32 %228
  store i32 %305, i32* %5, align 8
  %306 = shl i32 %290, 16
  %307 = or i32 %302, %306
  store i32 %307, i32* %80, align 4
  %308 = icmp slt i32 %307, 1
  br i1 %308, label %309, label %310

309:                                              ; preds = %281
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %307) #4
  br label %515

310:                                              ; preds = %281
  %311 = load i32, i32* %5, align 8
  %312 = sub nsw i32 0, %311
  %313 = load i32, i32* %7, align 8
  %314 = sub nsw i32 %313, %311
  %315 = icmp slt i32 %311, -32
  %316 = icmp slt i32 %314, 32
  %317 = select i1 %316, i32 %314, i32 32
  %318 = select i1 %315, i32 %312, i32 %317
  %319 = add nsw i32 %318, %311
  store i32 %319, i32* %5, align 8
  store i32 0, i32* %96, align 4
  %320 = load i32, i32* %5, align 8
  %321 = load i32, i32* %7, align 8
  %322 = load i8*, i8** %9, align 8
  %323 = lshr i32 %320, 3
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* %322, i64 %324
  %326 = bitcast i8* %325 to i32*
  %327 = load i32, i32* %326, align 1
  %328 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %327) #3, !srcloc !2
  %329 = and i32 %320, 7
  %330 = shl i32 %328, %329
  %331 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %330) #3, !srcloc !3
  %332 = add i32 %320, 16
  %333 = icmp ugt i32 %321, %332
  %334 = select i1 %333, i32 %332, i32 %321
  store i32 %334, i32* %5, align 8
  %335 = add i32 %331, 1
  store i32 %335, i32* %103, align 4
  br label %336

336:                                              ; preds = %310, %223
  %337 = phi i32 [ %248, %310 ], [ %225, %223 ]
  %338 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 5
  %339 = load i32, i32* %338, align 4
  %340 = icmp ne i32 %339, 5
  %341 = icmp ne i32 %2, 0
  %342 = and i1 %341, %340
  br i1 %342, label %343, label %499

343:                                              ; preds = %336
  %344 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i64 0, i32 3
  %345 = load i32, i32* %344, align 4
  %346 = load i32, i32* %5, align 8
  %347 = sub nsw i32 %345, %346
  %348 = icmp sgt i32 %347, 15
  br i1 %348, label %349, label %499

349:                                              ; preds = %343
  %350 = load i8*, i8** %9, align 8
  %351 = load i32, i32* %7, align 8
  br label %352

352:                                              ; preds = %349, %493
  %353 = phi i32 [ %496, %493 ], [ %346, %349 ]
  %354 = lshr i32 %353, 3
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %350, i64 %355
  %357 = bitcast i8* %356 to i32*
  %358 = load i32, i32* %357, align 1
  %359 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %358) #3, !srcloc !2
  %360 = and i32 %353, 7
  %361 = shl i32 %359, %360
  %362 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -11, i32 %361) #3, !srcloc !3
  %363 = icmp eq i32 %362, 695
  br i1 %363, label %364, label %493

364:                                              ; preds = %352
  %365 = add i32 %353, 11
  %366 = icmp ugt i32 %351, %365
  %367 = select i1 %366, i32 %365, i32 %351
  store i32 %367, i32* %5, align 8
  %368 = lshr i32 %367, 3
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds i8, i8* %350, i64 %369
  %371 = bitcast i8* %370 to i32*
  %372 = load i32, i32* %371, align 1
  %373 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %372) #3, !srcloc !2
  %374 = and i32 %367, 7
  %375 = shl i32 %373, %374
  %376 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -5, i32 %375) #3, !srcloc !3
  %377 = add i32 %367, 5
  %378 = icmp ugt i32 %351, %377
  %379 = select i1 %378, i32 %377, i32 %351
  store i32 %379, i32* %5, align 8
  %380 = icmp eq i32 %376, 31
  br i1 %380, label %381, label %395

381:                                              ; preds = %364
  %382 = lshr i32 %379, 3
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds i8, i8* %350, i64 %383
  %385 = bitcast i8* %384 to i32*
  %386 = load i32, i32* %385, align 1
  %387 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %386) #3, !srcloc !2
  %388 = and i32 %379, 7
  %389 = shl i32 %387, %388
  %390 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -6, i32 %389) #3, !srcloc !3
  %391 = add i32 %379, 6
  %392 = icmp ugt i32 %351, %391
  %393 = select i1 %392, i32 %391, i32 %351
  store i32 %393, i32* %5, align 8
  %394 = add i32 %390, 32
  br label %395

395:                                              ; preds = %364, %381
  %396 = phi i32 [ %394, %381 ], [ %376, %364 ]
  store i32 %396, i32* %338, align 4
  %397 = icmp eq i32 %396, 5
  br i1 %397, label %398, label %459

398:                                              ; preds = %395
  %399 = load i32, i32* %5, align 8
  %400 = load i8*, i8** %9, align 8
  %401 = lshr i32 %399, 3
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds i8, i8* %400, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = and i32 %399, 7
  %406 = zext i8 %404 to i32
  %407 = shl i32 %406, %405
  %408 = lshr i32 %407, 7
  %409 = and i32 %408, 1
  %410 = load i32, i32* %7, align 8
  %411 = icmp slt i32 %399, %410
  %412 = zext i1 %411 to i32
  %413 = add i32 %399, %412
  store i32 %413, i32* %5, align 8
  store i32 %409, i32* %104, align 4
  %414 = icmp eq i32 %409, 0
  br i1 %414, label %459, label %415

415:                                              ; preds = %398
  %416 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 6
  %417 = load i32, i32* %5, align 8
  %418 = load i32, i32* %7, align 8
  %419 = load i8*, i8** %9, align 8
  %420 = lshr i32 %417, 3
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds i8, i8* %419, i64 %421
  %423 = bitcast i8* %422 to i32*
  %424 = load i32, i32* %423, align 1
  %425 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %424) #3, !srcloc !2
  %426 = and i32 %417, 7
  %427 = shl i32 %425, %426
  %428 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -4, i32 %427) #3, !srcloc !3
  %429 = add i32 %417, 4
  %430 = icmp ugt i32 %418, %429
  %431 = select i1 %430, i32 %429, i32 %418
  store i32 %431, i32* %5, align 8
  store i32 %428, i32* %416, align 4
  %432 = icmp eq i32 %428, 15
  br i1 %432, label %433, label %449

433:                                              ; preds = %415
  %434 = load i32, i32* %5, align 8
  %435 = load i32, i32* %7, align 8
  %436 = load i8*, i8** %9, align 8
  %437 = lshr i32 %434, 3
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds i8, i8* %436, i64 %438
  %440 = bitcast i8* %439 to i32*
  %441 = load i32, i32* %440, align 1
  %442 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %441) #3, !srcloc !2
  %443 = and i32 %434, 7
  %444 = shl i32 %442, %443
  %445 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -24, i32 %444) #3, !srcloc !3
  %446 = add i32 %434, 24
  %447 = icmp ugt i32 %435, %446
  %448 = select i1 %447, i32 %446, i32 %435
  store i32 %448, i32* %5, align 8
  br label %453

449:                                              ; preds = %415
  %450 = sext i32 %428 to i64
  %451 = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4
  br label %453

453:                                              ; preds = %433, %449
  %454 = phi i32 [ %445, %433 ], [ %452, %449 ]
  %455 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %0, i64 0, i32 7
  store i32 %454, i32* %455, align 4
  %456 = load i32, i32* %80, align 4
  %457 = icmp eq i32 %454, %456
  br i1 %457, label %458, label %459

458:                                              ; preds = %453
  store i32 -1, i32* %104, align 4
  br label %459

459:                                              ; preds = %398, %453, %458, %395
  %460 = load i32, i32* %344, align 4
  %461 = load i32, i32* %5, align 8
  %462 = sub nsw i32 %460, %461
  %463 = icmp sgt i32 %462, 11
  br i1 %463, label %464, label %499

464:                                              ; preds = %459
  %465 = load i32, i32* %7, align 8
  %466 = load i8*, i8** %9, align 8
  %467 = lshr i32 %461, 3
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i8, i8* %466, i64 %468
  %470 = bitcast i8* %469 to i32*
  %471 = load i32, i32* %470, align 1
  %472 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %471) #3, !srcloc !2
  %473 = and i32 %461, 7
  %474 = shl i32 %472, %473
  %475 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -11, i32 %474) #3, !srcloc !3
  %476 = add i32 %461, 11
  %477 = icmp ugt i32 %465, %476
  %478 = select i1 %477, i32 %476, i32 %465
  store i32 %478, i32* %5, align 8
  %479 = icmp eq i32 %475, 1352
  br i1 %479, label %480, label %499

480:                                              ; preds = %464
  %481 = lshr i32 %478, 3
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %466, i64 %482
  %484 = load i8, i8* %483, align 1
  %485 = and i32 %478, 7
  %486 = zext i8 %484 to i32
  %487 = shl i32 %486, %485
  %488 = lshr i32 %487, 7
  %489 = and i32 %488, 1
  %490 = icmp slt i32 %478, %465
  %491 = zext i1 %490 to i32
  %492 = add i32 %478, %491
  store i32 %492, i32* %5, align 8
  store i32 %489, i32* %105, align 4
  br label %499

493:                                              ; preds = %352
  %494 = icmp slt i32 %353, %351
  %495 = zext i1 %494 to i32
  %496 = add i32 %353, %495
  store i32 %496, i32* %5, align 8
  %497 = sub nsw i32 %345, %496
  %498 = icmp sgt i32 %497, 15
  br i1 %498, label %352, label %499

499:                                              ; preds = %493, %343, %480, %464, %459, %336
  %500 = load i32, i32* %104, align 4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %503

502:                                              ; preds = %499
  store i32 0, i32* %105, align 4
  br label %509

503:                                              ; preds = %499
  %504 = load i32, i32* %105, align 4
  %505 = icmp eq i32 %504, -1
  br i1 %505, label %506, label %509

506:                                              ; preds = %503
  %507 = load i32, i32* %40, align 4
  %508 = icmp eq i32 %507, 2
  br i1 %508, label %509, label %512

509:                                              ; preds = %502, %506, %503
  %510 = load i32, i32* %103, align 4
  %511 = icmp ugt i32 %510, 1
  br i1 %511, label %512, label %513

512:                                              ; preds = %506, %509
  store i32 0, i32* %105, align 4
  br label %513

513:                                              ; preds = %512, %509
  %514 = sub nsw i32 %337, %6
  br label %515

515:                                              ; preds = %253, %247, %309, %513, %107
  %516 = phi i32 [ %514, %513 ], [ -1094995529, %107 ], [ -1094995529, %309 ], [ -1094995529, %247 ], [ -1094995529, %253 ]
  ret i32 %516
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig* nocapture, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.GetBitContext, align 8
  %6 = bitcast %struct.GetBitContext* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = icmp slt i32 %2, 1
  br i1 %7, label %26, label %8

8:                                                ; preds = %4
  %9 = icmp ult i32 %2, 2147483135
  %10 = icmp ne i8* %1, null
  %11 = and i1 %10, %9
  %12 = select i1 %11, i32 %2, i32 0
  %13 = select i1 %11, i8* %1, i8* null
  %14 = add nuw nsw i32 %12, 7
  %15 = ashr i32 %14, 3
  %16 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i64 0, i32 0
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i64 0, i32 3
  store i32 %12, i32* %17, align 4
  %18 = add nuw nsw i32 %12, 8
  %19 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i64 0, i32 4
  store i32 %18, i32* %19, align 8
  %20 = sext i32 %15 to i64
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i64 0, i32 1
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i64 0, i32 2
  store i32 0, i32* %23, align 8
  br i1 %11, label %24, label %26

24:                                               ; preds = %8
  %25 = call i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig* %0, %struct.GetBitContext* nonnull %5, i32 %3, i8* null)
  br label %26

26:                                               ; preds = %8, %4, %24
  %27 = phi i32 [ %25, %24 ], [ -1094995529, %4 ], [ -1094995529, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpriv_mpeg4audio_get_config2(%struct.MPEG4AudioConfig* nocapture, i8*, i32, i32, i8*) local_unnamed_addr #0 {
  %6 = alloca %struct.GetBitContext, align 8
  %7 = bitcast %struct.GetBitContext* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = icmp slt i32 %2, 1
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = icmp ugt i32 %2, 268435455
  %11 = shl i32 %2, 3
  %12 = select i1 %10, i32 -8, i32 %11
  %13 = icmp ult i32 %12, 2147483135
  %14 = icmp ne i8* %1, null
  %15 = and i1 %14, %13
  %16 = select i1 %15, i32 %12, i32 0
  %17 = select i1 %15, i8* %1, i8* null
  %18 = ashr exact i32 %16, 3
  %19 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i64 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i64 0, i32 3
  store i32 %16, i32* %20, align 4
  %21 = add nsw i32 %16, 8
  %22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i64 0, i32 4
  store i32 %21, i32* %22, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds i8, i8* %17, i64 %23
  %25 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i64 0, i32 1
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i64 0, i32 2
  store i32 0, i32* %26, align 8
  br i1 %15, label %27, label %29

27:                                               ; preds = %9
  %28 = call i32 @ff_mpeg4audio_get_config_gb(%struct.MPEG4AudioConfig* %0, %struct.GetBitContext* nonnull %6, i32 %3, i8* %4)
  br label %29

29:                                               ; preds = %9, %5, %27
  %30 = phi i32 [ %28, %27 ], [ -1094995529, %5 ], [ -1094995529, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1443527}
!3 = !{i32 1799166, i32 1799180}
