; ModuleID = '../../third_party/skia/src/core/SkOverdrawCanvas.cpp'
source_filename = "../../third_party/skia/src/core/SkOverdrawCanvas.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.22" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.19, %class.SkSpan.20, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.18" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.18" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.19 = type { i32*, i64 }
%class.SkSpan.20 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.21, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.21 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.25, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.25 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.26, %struct.SkRect, i32, %"struct.std::__1::atomic.27" }
%class.SkNVRefCnt.26 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i32 }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i16*, i16*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i16* }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.4, i32, i32 }
%class.sk_sp.4 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [160 x i8] }
%class.SkTArray = type { %"struct.SkNoPixelsDevice::ClipState"*, i64 }
%"struct.SkNoPixelsDevice::ClipState" = type <{ %class.SkConservativeClip, i32, [4 x i8] }>
%class.SkConservativeClip = type { %struct.SkIRect, i8, i8, %struct.SkIRect* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.2, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.sk_sp.2 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.32" }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.50 }
%union.anon.50 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.51, i32, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", i8, i8 }>
%class.sk_sp.51 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.52, %struct.SkRect, [4 x i8], %class.SkTDArray.53, %class.SkTDArray.54, %class.SkTDArray.55, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.52 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.53 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.54 = type { i8*, i32, i32 }
%class.SkTDArray.55 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.56 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.56 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.57", [3 x i8] }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.64, %class.SkSTArray.69, %class.SkSTArray.72 }
%class.SkZip.64 = type { %"class.std::__1::tuple.65", i64 }
%"class.std::__1::tuple.65" = type { %"struct.std::__1::__tuple_impl.66" }
%"struct.std::__1::__tuple_impl.66" = type { %"class.std::__1::__tuple_leaf.67", %"class.std::__1::__tuple_leaf.68" }
%"class.std::__1::__tuple_leaf.67" = type { i16* }
%"class.std::__1::__tuple_leaf.68" = type { %struct.SkPoint* }
%class.SkSTArray.69 = type { %class.SkAlignedSTStorage.70, %class.SkTArray.71 }
%class.SkAlignedSTStorage.70 = type { [8 x i8] }
%class.SkTArray.71 = type { i16*, i64 }
%class.SkSTArray.72 = type { %class.SkAlignedSTStorage.73, %class.SkTArray.74 }
%class.SkAlignedSTStorage.73 = type { [32 x i8] }
%class.SkTArray.74 = type { %struct.SkPoint*, i64 }
%class.SkPaint = type <{ %class.sk_sp.42, %class.sk_sp.43, %class.sk_sp.44, %class.sk_sp.45, %class.sk_sp.46, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.42 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.43 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.44 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.45 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.46 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkOverdrawCanvas = type { %class.SkCanvasVirtualEnforcer, %class.SkPaint }
%class.SkCanvasVirtualEnforcer = type { %class.SkNWayCanvas }
%class.SkNWayCanvas = type { %class.SkCanvasVirtualEnforcer.0, %class.SkTDArray }
%class.SkCanvasVirtualEnforcer.0 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer.1 }
%class.SkCanvasVirtualEnforcer.1 = type { %class.SkCanvas }
%class.SkTDArray = type { %class.SkCanvas**, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.(anonymous namespace)::TextDevice" = type { %class.SkNoPixelsDevice, %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkCanvas*, %class.SkGlyphRunListPainter }
%class.SkNoPixelsDevice = type { %class.SkBaseDevice, %struct.SkIRect, %class.SkSTArray }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.109, i64, i64, i32, i32 }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.103", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.82", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector.96", %class.SkArenaAlloc }
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.21, %class.sk_sp.42, %class.sk_sp.44, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.85, i8*, i8*, i8* }
%class.sk_sp.85 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray.89 }
%class.SkAutoTArray.89 = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkTHashTable.109 = type { i32, i32, %class.SkAutoTArray.110 }
%class.SkAutoTArray.110 = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkVertices = type opaque
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkRSXform = type { float, float, float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%class.SkLatticeIter = type { %class.SkTArray.75, %class.SkTArray.75, %class.SkTArray.76, %class.SkTArray.76, %class.SkTArray.77, %class.SkTArray.78, i32, i32, i32, i32 }
%class.SkTArray.75 = type { i32*, i64 }
%class.SkTArray.76 = type { float*, i64 }
%class.SkTArray.77 = type { i8*, i64 }
%class.SkTArray.78 = type { i32*, i64 }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.57", [7 x i8] }>
%class.SkData = type { %class.SkNVRefCnt.79, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.79 = type { %"struct.std::__1::atomic" }
%struct.SkDrawShadowRec = type { %struct.SkPoint3, %struct.SkPoint3, float, i32, i32, i32 }
%struct.SkPoint3 = type { float, float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.80, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.80 = type { %class.SkImage* }
%class.GrRecordingContext = type opaque
%class.sk_sp.81 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>
%class.GrSurfaceDrawContext = type opaque
%class.SkPaintFilterCanvas = type opaque
%class.SkSpecialImage = type opaque
%"class.skif::Mapping" = type opaque
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkBitmap = type { %class.sk_sp.117, %class.SkPixmap, %class.sk_sp.118 }
%class.sk_sp.117 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.118 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkImageFilterCache = type opaque
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>

$_ZN16SkOverdrawCanvasD2Ev = comdat any

$_ZN16SkOverdrawCanvasD0Ev = comdat any

$_ZN8SkCanvas10didRestoreEv = comdat any

$_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv = comdat any

$_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasED0Ev = comdat any

$_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasE12onDrawBehindERK7SkPaint = comdat any

$_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkBaseDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZNK16SkNoPixelsDevice10onClipIsAAEv = comdat any

$_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv = comdat any

$_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion = comdat any

$_ZNK16SkNoPixelsDevice15onDevClipBoundsEv = comdat any

$_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb = comdat any

$_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE = comdat any

$_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint = comdat any

$_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZN12SkBaseDevice12setImmutableEv = comdat any

$_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint = comdat any

$_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv = comdat any

$_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZN12SkBaseDevice19getImageFilterCacheEv = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZTV23SkCanvasVirtualEnforcerI12SkNWayCanvasE = comdat any

@_ZTV16SkOverdrawCanvas = hidden unnamed_addr constant { [59 x i8*] } { [59 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkOverdrawCanvas*)* @_ZN16SkOverdrawCanvasD2Ev to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*)* @_ZN16SkOverdrawCanvasD0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.81*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkNWayCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN12SkNWayCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkNWayCanvas*, %struct.SkRect*)* @_ZN12SkNWayCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, i8*)* @_ZN12SkNWayCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas8didScaleEff to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas11onDrawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas10onDrawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkRRect*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas11onDrawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas10onDrawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN16SkOverdrawCanvas9onDrawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkPath*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas10onDrawPathERK6SkPathRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkRegion*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)* @_ZN16SkOverdrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN16SkOverdrawCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN16SkOverdrawCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN16SkOverdrawCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN16SkOverdrawCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN16SkOverdrawCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN16SkOverdrawCanvas16onDrawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN16SkOverdrawCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkDrawable*, %class.SkMatrix*)* @_ZN16SkOverdrawCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)* @_ZN16SkOverdrawCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint to i8*), i8* bitcast (void (%class.SkOverdrawCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN16SkOverdrawCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, i32, i32)* @_ZN12SkNWayCanvas10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRRect*, i32, i32)* @_ZN12SkNWayCanvas11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPath*, i32, i32)* @_ZN12SkNWayCanvas10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.sk_sp.43*, i32)* @_ZN12SkNWayCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRegion*, i32)* @_ZN12SkNWayCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas9addCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas12removeCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas9removeAllEv to i8*)] }, align 8
@_ZZN16SkOverdrawCanvasC1EP8SkCanvasE15kIncrementAlpha = internal constant [20 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F70101020000000], align 16
@__const._ZN16SkOverdrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint.b = private unnamed_addr constant { i32, [4 x i8], %class.SkAutoTMalloc, i32, [4 x i8], %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.32" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.14" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.14" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), %"class.std::__1::__compressed_pair.22" { %"struct.std::__1::__compressed_pair_elem.23" { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*) } } } }, %class.SkGlyphRunList { %class.SkSpan.25 { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), i64 -6148914691236517206 }, %class.SkTextBlob* inttoptr (i64 -6148914691236517206 to %class.SkTextBlob*), %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.std::__1::vector.32" { %"class.std::__1::__vector_base.33" { i16* inttoptr (i64 -6148914691236517206 to i16*), i16* inttoptr (i64 -6148914691236517206 to i16*), %"class.std::__1::__compressed_pair.34" { %"struct.std::__1::__compressed_pair_elem.35" { i16* inttoptr (i64 -6148914691236517206 to i16*) } } } } }, align 8
@__const._ZN16SkOverdrawCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint.device = private unnamed_addr constant { { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, %struct.SkIRect, %class.SkSTArray }, %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkCanvas*, %class.SkGlyphRunListPainter } { { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, %struct.SkIRect, %class.SkSTArray } { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 } { %class.SkRefCnt.base { %class.SkRefCntBase.base <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 -1431655766 } } } } } }> }, [4 x i8] c"\AA\AA\AA\AA", %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*), %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.4 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %class.SkSTArray { %class.SkAlignedSTStorage { [160 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %"struct.SkNoPixelsDevice::ClipState"* inttoptr (i64 -6148914691236517206 to %"struct.SkNoPixelsDevice::ClipState"*), i64 -6148914691236517206 } } }, %"class.SkGlyphRunListPainter::BitmapDevicePainter" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %class.SkGlyphRunListPainter { %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, %class.SkStrikeForGPUCacheInterface* inttoptr (i64 -6148914691236517206 to %class.SkStrikeForGPUCacheInterface*), %class.SkDrawableGlyphBuffer { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, %class.SkAutoTArray { %"class.std::__1::unique_ptr.47" { %"class.std::__1::__compressed_pair.48" { %"struct.std::__1::__compressed_pair_elem.49" { %class.SkGlyphVariant* inttoptr (i64 -6148914691236517206 to %class.SkGlyphVariant*) } } } }, %class.SkAutoTMalloc { %"class.std::__1::unique_ptr.14" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } } } }, %class.SkSourceGlyphBuffer { %class.SkZip { %"class.std::__1::tuple" { %"struct.std::__1::__tuple_impl" { %"class.std::__1::__tuple_leaf" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.18" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, %class.SkZip.64 { %"class.std::__1::tuple.65" { %"struct.std::__1::__tuple_impl.66" { %"class.std::__1::__tuple_leaf.67" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.68" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, %class.SkSTArray.69 { %class.SkAlignedSTStorage.70 { [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.71 { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206 } }, %class.SkSTArray.72 { %class.SkAlignedSTStorage.73 { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.74 { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i64 -6148914691236517206 } } } } }, align 8
@_ZTV23SkCanvasVirtualEnforcerI12SkNWayCanvasE = linkonce_odr hidden unnamed_addr constant { [59 x i8*] } { [59 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvasD2Ev to i8*), i8* bitcast (void (%class.SkCanvasVirtualEnforcer*)* @_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasED0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.81*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkNWayCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN12SkNWayCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkNWayCanvas*, %struct.SkRect*)* @_ZN12SkNWayCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, i8*)* @_ZN12SkNWayCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkM44*)* @_ZN12SkNWayCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkNWayCanvas*, float, float)* @_ZN12SkNWayCanvas8didScaleEff to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkCanvasVirtualEnforcer*, %class.SkPaint*)* @_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasE12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN12SkNWayCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkNWayCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkNWayCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN12SkNWayCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkNWayCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN12SkNWayCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %struct.SkRect*, i32, i32)* @_ZN12SkNWayCanvas10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRRect*, i32, i32)* @_ZN12SkNWayCanvas11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkPath*, i32, i32)* @_ZN12SkNWayCanvas10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.sk_sp.43*, i32)* @_ZN12SkNWayCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkRegion*, i32)* @_ZN12SkNWayCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas9addCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*, %class.SkCanvas*)* @_ZN12SkNWayCanvas12removeCanvasEP8SkCanvas to i8*), i8* bitcast (void (%class.SkNWayCanvas*)* @_ZN12SkNWayCanvas9removeAllEv to i8*)] }, comdat, align 8
@_ZTVN12_GLOBAL__N_110TextDeviceE = internal unnamed_addr constant { [66 x i8*], [6 x i8*], [7 x i8*] } { [66 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZN12_GLOBAL__N_110TextDeviceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZN12_GLOBAL__N_110TextDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, i32, i1)* @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.sk_sp.43*)* @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*, i32)* @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*)* @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, %class.SkPaint*, i1)* @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN12_GLOBAL__N_110TextDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.81*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice19getImageFilterCacheEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)* @_ZNK12_GLOBAL__N_110TextDevice10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)* @_ZNK12_GLOBAL__N_110TextDevice10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZNK12_GLOBAL__N_110TextDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZThn16_N12_GLOBAL__N_110TextDeviceD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZThn16_N12_GLOBAL__N_110TextDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -488 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZThn488_N12_GLOBAL__N_110TextDeviceD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*)* @_ZThn488_N12_GLOBAL__N_110TextDeviceD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)* @_ZThn488_NK12_GLOBAL__N_110TextDevice10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)* @_ZThn488_NK12_GLOBAL__N_110TextDevice10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextDevice"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZThn488_NK12_GLOBAL__N_110TextDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint to i8*)] }, align 8
@_ZTV16SkNoPixelsDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@_ZTV12SkBaseDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.42 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.43 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.44 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.45 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.46 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN16SkOverdrawCanvasC1EP8SkCanvas = hidden unnamed_addr alias void (%class.SkOverdrawCanvas*, %class.SkCanvas*), void (%class.SkOverdrawCanvas*, %class.SkCanvas*)* @_ZN16SkOverdrawCanvasC2EP8SkCanvas

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvasC2EP8SkCanvas(%class.SkOverdrawCanvas*, %class.SkCanvas*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %class.sk_sp.45, align 8
  %6 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %class.SkCanvas* %1 to void (%struct.SkImageInfo*, %class.SkCanvas*)***
  %8 = load void (%struct.SkImageInfo*, %class.SkCanvas*)**, void (%struct.SkImageInfo*, %class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %8, i64 9
  %10 = load void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %9, align 8
  call void %10(%struct.SkImageInfo* nonnull sret %3, %class.SkCanvas* %1) #11
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = load void (%struct.SkImageInfo*, %class.SkCanvas*)**, void (%struct.SkImageInfo*, %class.SkCanvas*)*** %7, align 8
  %15 = getelementptr inbounds void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %14, i64 9
  %16 = load void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %15, align 8
  call void %16(%struct.SkImageInfo* nonnull sret %4, %class.SkCanvas* %1) #11
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0
  call void @_ZN12SkNWayCanvasC2Eii(%class.SkNWayCanvas* %19, i32 %12, i32 %18) #11
  %20 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTV23SkCanvasVirtualEnforcerI12SkNWayCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %class.SkColorSpace* %22 to i8*
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %2, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %30, %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTV16SkOverdrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* %41) #11
  %42 = bitcast %class.SkOverdrawCanvas* %0 to void (%class.SkNWayCanvas*, %class.SkCanvas*)***
  %43 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)**, void (%class.SkNWayCanvas*, %class.SkCanvas*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %43, i64 54
  %45 = load void (%class.SkNWayCanvas*, %class.SkCanvas*)*, void (%class.SkNWayCanvas*, %class.SkCanvas*)** %44, align 8
  call void %45(%class.SkNWayCanvas* %19, %class.SkCanvas* %1) #11
  %46 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1, i32 8, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, -261122
  %49 = or i32 %48, 12288
  store i32 %49, i32* %46, align 8
  call void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.45* nonnull sret %5, float* getelementptr inbounds ([20 x float], [20 x float]* @_ZZN16SkOverdrawCanvasC1EP8SkCanvasE15kIncrementAlpha, i64 0, i64 0)) #11
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %41, %class.sk_sp.45* nonnull %5) #11
  %50 = getelementptr inbounds %class.sk_sp.45, %class.sk_sp.45* %5, i64 0, i32 0
  %51 = load %class.SkColorFilter*, %class.SkColorFilter** %50, align 8
  %52 = icmp eq %class.SkColorFilter* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkColorFilter* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkColorFilter* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #11
  br label %63

63:                                               ; preds = %40, %53, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.45*) local_unnamed_addr #2

declare void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.45* sret, float*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) unnamed_addr #3 align 2 {
  %6 = alloca %class.SkGlyphRunBuilder, align 8
  %7 = alloca %class.SkGlyphRunList, align 8
  %8 = bitcast %class.SkGlyphRunBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ i32, [4 x i8], %class.SkAutoTMalloc, i32, [4 x i8], %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.32" }* @__const._ZN16SkOverdrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint.b to i8*), i64 128, i1 false)
  %9 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 1
  %11 = bitcast %class.SkAutoTMalloc* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 3
  %14 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 5
  %15 = bitcast %class.SkAutoTMalloc* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #11
  call void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList* %14) #11
  %16 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6
  %17 = bitcast %"class.std::__1::vector.32"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = bitcast %class.SkGlyphRunList* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %7, i64 0, i32 2, i32 0
  %20 = bitcast %class.SkGlyphRunList* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = insertelement <2 x float> undef, float %2, i32 0
  %22 = insertelement <2 x float> %21, float %3, i32 1
  %23 = bitcast float* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 -1, i64 24, i1 false)
  %24 = call dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder* nonnull %6, %class.SkTextBlob* dereferenceable(28) %1, <2 x float> %22) #11
  %25 = bitcast %class.SkGlyphRunList* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %25, i64 48, i1 false)
  %26 = bitcast %class.SkOverdrawCanvas* %0 to void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %27 = load void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %27, i64 32
  %29 = load void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkOverdrawCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %28, align 8
  call void %29(%class.SkOverdrawCanvas* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %7, %class.SkPaint* dereferenceable(72) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #11
  %30 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp eq i16* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %5
  %34 = ptrtoint i16* %31 to i64
  %35 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6, i32 0, i32 1
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i16* %31 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %33, %5
  %39 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 4
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %41 = load %class.SkGlyphRun*, %class.SkGlyphRun** %40, align 8
  %42 = icmp eq %class.SkGlyphRun* %41, null
  br i1 %42, label %71, label %43

43:                                               ; preds = %38
  %44 = bitcast %class.SkGlyphRun* %41 to i8*
  %45 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 4, i32 0, i32 1
  %46 = load %class.SkGlyphRun*, %class.SkGlyphRun** %45, align 8
  %47 = icmp eq %class.SkGlyphRun* %46, %41
  br i1 %47, label %69, label %48

48:                                               ; preds = %43, %64
  %49 = phi %class.SkGlyphRun* [ %50, %64 ], [ %46, %43 ]
  %50 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %49, i64 -1
  %51 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %49, i64 -1, i32 4, i32 0, i32 0
  %52 = load %class.SkTypeface*, %class.SkTypeface** %51, align 8
  %53 = icmp eq %class.SkTypeface* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkTypeface* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.SkTypeface* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #11
  br label %64

64:                                               ; preds = %58, %54, %48
  %65 = icmp eq %class.SkGlyphRun* %50, %41
  br i1 %65, label %66, label %48

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector"* %39 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %43
  %70 = phi i8* [ %68, %66 ], [ %44, %43 ]
  store %class.SkGlyphRun* %41, %class.SkGlyphRun** %45, align 8
  call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %38
  %72 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %class.SkAutoTMalloc* %13 to i64*
  %74 = load i64, i64* %73, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %72, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = inttoptr i64 %74 to i8*
  call void @_Z7sk_freePv(i8* %77) #11
  br label %78

78:                                               ; preds = %76, %71
  %79 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %11, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = inttoptr i64 %80 to i8*
  call void @_Z7sk_freePv(i8* %83) #11
  br label %84

84:                                               ; preds = %78, %82
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder*, %class.SkTextBlob* dereferenceable(28), <2 x float>) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %class.sk_sp.4, align 8
  %6 = alloca %class.SkSurfaceProps, align 4
  %7 = alloca %"class.(anonymous namespace)::TextDevice", align 8
  %8 = bitcast %class.SkSurfaceProps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 0
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 1
  store i32 -1431655766, i32* %10, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %6, i32 0, i32 0) #11
  %11 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = call zeroext i1 @_ZNK8SkCanvas8getPropsEP14SkSurfaceProps(%class.SkCanvas* %11, %class.SkSurfaceProps* nonnull %6) #11
  %13 = bitcast %"class.(anonymous namespace)::TextDevice"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 712, i8* nonnull %13) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, %struct.SkIRect, %class.SkSTArray }, %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkCanvas*, %class.SkGlyphRunListPainter }* @__const._ZN16SkOverdrawCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint.device to i8*), i64 712, i1 false)
  %14 = bitcast %class.sk_sp.4* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast <2 x i64>* %4 to %struct.SkIRect*
  %16 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0
  %17 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  store <2 x i64> <i64 0, i64 140733193420799>, <2 x i64>* %4, align 16
  %18 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %5, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %15, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, %class.sk_sp.4* nonnull %5) #11
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %class.SkColorSpace* %19 to i8*
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %3, %21, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  %28 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 2
  store %class.SkCanvas* %11, %class.SkCanvas** %31, align 8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3
  %33 = call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #11
  %34 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %33, i64 0, i32 0
  call void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter* %32, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, i32 6, %class.SkColorSpace* null, %class.SkStrikeForGPUCacheInterface* %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %35 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 0
  call void @_ZN12SkBaseDevice16drawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice* nonnull %35, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %36 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 40
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 32
  %43 = bitcast i8* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_Z7sk_freePv(i8* %44) #11
  br label %45

45:                                               ; preds = %41, %27
  %46 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 16
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 8
  %53 = bitcast i8* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  call void @_Z7sk_freePv(i8* %54) #11
  br label %55

55:                                               ; preds = %51, %45
  %56 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 5, i32 4
  %57 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %class.SkAutoTMalloc* %56 to i64*
  %59 = load i64, i64* %58, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %57, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = inttoptr i64 %59 to i8*
  call void @_Z7sk_freePv(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %55
  %64 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 3, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %64, align 8
  store %class.SkGlyphVariant* null, %class.SkGlyphVariant** %64, align 8
  %66 = icmp eq %class.SkGlyphVariant* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %class.SkGlyphVariant* %65 to i8*
  call void @_ZdaPv(i8* %68) #12
  br label %69

69:                                               ; preds = %67, %63
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %70 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 2, i32 0, i32 0, i64 168
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 2, i32 0, i32 0, i64 160
  %77 = bitcast i8* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @_Z7sk_freePv(i8* %78) #11
  br label %79

79:                                               ; preds = %75, %69
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %80 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %7, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  %82 = icmp eq %class.SkColorSpace* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkColorSpace* %81 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %79, %83, %87
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret void
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas8getPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) local_unnamed_addr #2

declare void @_ZN12SkBaseDevice16drawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*], [6 x i8*], [7 x i8*] }, { [66 x i8*], [6 x i8*], [7 x i8*] }* @_ZTVN12_GLOBAL__N_110TextDeviceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 32
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_Z7sk_freePv(i8* %13) #11
  br label %14

14:                                               ; preds = %10, %1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 16
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 8
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_Z7sk_freePv(i8* %23) #11
  br label %24

24:                                               ; preds = %20, %14
  %25 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 5, i32 4
  %26 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %class.SkAutoTMalloc* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = inttoptr i64 %28 to i8*
  tail call void @_Z7sk_freePv(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %24
  %33 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %33, align 8
  store %class.SkGlyphVariant* null, %class.SkGlyphVariant** %33, align 8
  %35 = icmp eq %class.SkGlyphVariant* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %class.SkGlyphVariant* %34 to i8*
  tail call void @_ZdaPv(i8* %37) #12
  br label %38

38:                                               ; preds = %32, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i64 168
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i64 160
  %46 = bitcast i8* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %44, %38
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %51 = icmp eq %class.SkColorSpace* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = bitcast %class.SkColorSpace* %50 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %48, %52, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkOverdrawCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = load %class.SkCanvas**, %class.SkCanvas*** %7, align 8
  %9 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  %10 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %11 = bitcast %class.SkCanvas* %9 to void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)***
  %12 = load void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %12, i64 33
  %14 = load void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %13, align 8
  tail call void %14(%class.SkCanvas* %9, %struct.SkPoint* %1, i32* %2, %struct.SkPoint* %3, i32 %4, %class.SkPaint* dereferenceable(72) %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas11onDrawPaintERK7SkPaint(%class.SkOverdrawCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPaint, align 8
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %5 = tail call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %9 = load %class.SkColorFilter*, %class.SkColorFilter** %8, align 8
  %10 = icmp eq %class.SkColorFilter* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  %14 = icmp eq %class.SkShader* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11, %7, %2
  %16 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %17 = load %class.SkCanvas**, %class.SkCanvas*** %16, align 8
  %18 = load %class.SkCanvas*, %class.SkCanvas** %17, align 8
  %19 = bitcast %class.SkPaint* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %20 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %3, %class.SkPaint* dereferenceable(72) %20) #11
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8, !noalias !2
  %23 = lshr i32 %22, 6
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %3, i8 zeroext %25) #11
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %27 = load float, float* %26, align 8, !noalias !2
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %3, float %27) #11
  %28 = bitcast %class.SkCanvas* %18 to void (%class.SkCanvas*, %class.SkPaint*)***
  %29 = load void (%class.SkCanvas*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPaint*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %29, i64 22
  %31 = load void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %30, align 8
  call void %31(%class.SkCanvas* %18, %class.SkPaint* nonnull dereferenceable(72) %3) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #11
  br label %32

32:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawBehindERK7SkPaint(%class.SkOverdrawCanvas*, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPaint, align 8
  %4 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %5 = load %class.SkCanvas**, %class.SkCanvas*** %4, align 8
  %6 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  %7 = bitcast %class.SkPaint* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %8 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %3, %class.SkPaint* dereferenceable(72) %8) #11
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !5
  %11 = lshr i32 %10, 6
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %3, i8 zeroext %13) #11
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %15 = load float, float* %14, align 8, !noalias !5
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %3, float %15) #11
  %16 = bitcast %class.SkCanvas* %6 to void (%class.SkCanvas*, %class.SkPaint*)***
  %17 = load void (%class.SkCanvas*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPaint*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %17, i64 23
  %19 = load void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %18, align 8
  call void %19(%class.SkCanvas* %6, %class.SkPaint* nonnull dereferenceable(72) %3) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas10onDrawRectERK6SkRectRK7SkPaint(%class.SkOverdrawCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = load %class.SkCanvas**, %class.SkCanvas*** %5, align 8
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %8 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* dereferenceable(72) %9) #11
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8, !noalias !8
  %12 = lshr i32 %11, 6
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %4, i8 zeroext %14) #11
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %16 = load float, float* %15, align 8, !noalias !8
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %4, float %16) #11
  %17 = bitcast %class.SkCanvas* %7 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %18 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %18, i64 24
  %20 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %19, align 8
  call void %20(%class.SkCanvas* %7, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %4) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawRegionERK8SkRegionRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkRegion* dereferenceable(24), %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = load %class.SkCanvas**, %class.SkCanvas*** %5, align 8
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %8 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* dereferenceable(72) %9) #11
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8, !noalias !11
  %12 = lshr i32 %11, 6
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %4, i8 zeroext %14) #11
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %16 = load float, float* %15, align 8, !noalias !11
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %4, float %16) #11
  %17 = bitcast %class.SkCanvas* %7 to void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)***
  %18 = load void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)** %18, i64 30
  %20 = load void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)** %19, align 8
  call void %20(%class.SkCanvas* %7, %class.SkRegion* dereferenceable(24) %1, %class.SkPaint* nonnull dereferenceable(72) %4) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas10onDrawOvalERK6SkRectRK7SkPaint(%class.SkOverdrawCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = load %class.SkCanvas**, %class.SkCanvas*** %5, align 8
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %8 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* dereferenceable(72) %9) #11
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8, !noalias !14
  %12 = lshr i32 %11, 6
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %4, i8 zeroext %14) #11
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %16 = load float, float* %15, align 8, !noalias !14
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %4, float %16) #11
  %17 = bitcast %class.SkCanvas* %7 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %18 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %18, i64 27
  %20 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %19, align 8
  call void %20(%class.SkCanvas* %7, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %4) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas9onDrawArcERK6SkRectffbRK7SkPaint(%class.SkOverdrawCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %9 = load %class.SkCanvas**, %class.SkCanvas*** %8, align 8
  %10 = load %class.SkCanvas*, %class.SkCanvas** %9, align 8
  %11 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %12 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %7, %class.SkPaint* dereferenceable(72) %12) #11
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %14 = load i32, i32* %13, align 8, !noalias !17
  %15 = lshr i32 %14, 6
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %7, i8 zeroext %17) #11
  %18 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 6
  %19 = load float, float* %18, align 8, !noalias !17
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %7, float %19) #11
  %20 = bitcast %class.SkCanvas* %10 to void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)***
  %21 = load void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %21, i64 28
  %23 = load void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %22, align 8
  call void %23(%class.SkCanvas* %10, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext %4, %class.SkPaint* nonnull dereferenceable(72) %7) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkOverdrawCanvas*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = load %class.SkCanvas**, %class.SkCanvas*** %6, align 8
  %8 = load %class.SkCanvas*, %class.SkCanvas** %7, align 8
  %9 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %10 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %5, %class.SkPaint* dereferenceable(72) %10) #11
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !20
  %13 = lshr i32 %12, 6
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %5, i8 zeroext %15) #11
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 6
  %17 = load float, float* %16, align 8, !noalias !20
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %5, float %17) #11
  %18 = bitcast %class.SkCanvas* %8 to void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)***
  %19 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %19, i64 26
  %21 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %20, align 8
  call void %21(%class.SkCanvas* %8, %class.SkRRect* dereferenceable(52) %1, %class.SkRRect* dereferenceable(52) %2, %class.SkPaint* nonnull dereferenceable(72) %5) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas11onDrawRRectERK7SkRRectRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = load %class.SkCanvas**, %class.SkCanvas*** %5, align 8
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  %8 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* dereferenceable(72) %9) #11
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8, !noalias !23
  %12 = lshr i32 %11, 6
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %4, i8 zeroext %14) #11
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %16 = load float, float* %15, align 8, !noalias !23
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %4, float %16) #11
  %17 = bitcast %class.SkCanvas* %7 to void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)***
  %18 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)** %18, i64 25
  %20 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)** %19, align 8
  call void %20(%class.SkCanvas* %7, %class.SkRRect* dereferenceable(52) %1, %class.SkPaint* nonnull dereferenceable(72) %4) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkOverdrawCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPaint, align 8
  %7 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = load %class.SkCanvas**, %class.SkCanvas*** %7, align 8
  %9 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  %10 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %11 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %6, %class.SkPaint* dereferenceable(72) %11) #11
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %13 = load i32, i32* %12, align 8, !noalias !26
  %14 = lshr i32 %13, 6
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %6, i8 zeroext %16) #11
  %17 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 6
  %18 = load float, float* %17, align 8, !noalias !26
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %6, float %18) #11
  %19 = bitcast %class.SkCanvas* %9 to void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)***
  %20 = load void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)**, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %20, i64 34
  %22 = load void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %21, align 8
  call void %22(%class.SkCanvas* %9, i32 %1, i64 %2, %struct.SkPoint* %3, %class.SkPaint* nonnull dereferenceable(72) %6) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkVertices*, i32, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = load %class.SkCanvas**, %class.SkCanvas*** %6, align 8
  %8 = load %class.SkCanvas*, %class.SkCanvas** %7, align 8
  %9 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  %10 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %5, %class.SkPaint* dereferenceable(72) %10) #11
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !29
  %13 = lshr i32 %12, 6
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %5, i8 zeroext %15) #11
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 6
  %17 = load float, float* %16, align 8, !noalias !29
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %5, float %17) #11
  %18 = bitcast %class.SkCanvas* %8 to void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)***
  %19 = load void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)** %19, i64 40
  %21 = load void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)** %20, align 8
  call void %21(%class.SkCanvas* %8, %class.SkVertices* %1, i32 %2, %class.SkPaint* nonnull dereferenceable(72) %5) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkOverdrawCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint* readonly) unnamed_addr #0 align 2 {
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca %class.SkPaint, align 8
  %13 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %14 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #11
  %15 = icmp eq %class.SkPaint* %9, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %17) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkPaint* @__const._ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint.newPaint to i8*), i64 72, i1 false) #11
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %12, %class.SkPaint* dereferenceable(72) %13) #11
  %18 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %19 = load i32, i32* %18, align 8, !noalias !32
  %20 = lshr i32 %19, 6
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 3
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %12, i8 zeroext %22) #11
  %23 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 6
  %24 = load float, float* %23, align 8, !noalias !32
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %12, float %24) #11
  %25 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSEOS_(%class.SkPaint* nonnull %11, %class.SkPaint* nonnull dereferenceable(72) %12) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %17) #11
  br label %26

26:                                               ; preds = %10, %16
  %27 = phi %class.SkPaint* [ %11, %16 ], [ %13, %10 ]
  %28 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %29 = load %class.SkCanvas**, %class.SkCanvas*** %28, align 8
  %30 = load %class.SkCanvas*, %class.SkCanvas** %29, align 8
  %31 = bitcast %class.SkCanvas* %30 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)***
  %32 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)** %32, i64 38
  %34 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)** %33, align 8
  call void %34(%class.SkCanvas* %30, %class.SkImage* %1, %struct.SkRSXform* %2, %struct.SkRect* %3, i32* %4, i32 %5, i32 %6, %struct.SkSamplingOptions* dereferenceable(20) %7, %struct.SkRect* %8, %class.SkPaint* %27) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #11
  ret void
}

declare dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSEOS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas10onDrawPathERK6SkPathRK7SkPaint(%class.SkOverdrawCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %5 = load %class.SkCanvas**, %class.SkCanvas*** %4, align 8
  %6 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  %7 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %8 = bitcast %class.SkCanvas* %6 to void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)***
  %9 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %9, i64 29
  %11 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %10, align 8
  tail call void %11(%class.SkCanvas* %6, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkOverdrawCanvas*, %class.SkImage* nocapture readonly, float, float, %struct.SkSamplingOptions* nocapture readnone dereferenceable(20), %class.SkPaint* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = load %class.SkCanvas**, %class.SkCanvas*** %9, align 8
  %11 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = insertelement <2 x float> undef, float %2, i32 0
  %20 = insertelement <2 x float> %19, float %3, i32 1
  %21 = fadd float %15, %2
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = fadd float %18, %3
  %24 = insertelement <2 x float> %22, float %23, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %20, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %24, <2 x float>* %26, align 8
  %27 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %28 = bitcast %class.SkCanvas* %11 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %29 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %29, i64 24
  %31 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %30, align 8
  call void %31(%class.SkCanvas* %11, %struct.SkRect* nonnull dereferenceable(16) %8, %class.SkPaint* dereferenceable(72) %27) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkOverdrawCanvas*, %class.SkImage* nocapture readnone, %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* nocapture readnone dereferenceable(20), %class.SkPaint* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %9 = load %class.SkCanvas**, %class.SkCanvas*** %8, align 8
  %10 = load %class.SkCanvas*, %class.SkCanvas** %9, align 8
  %11 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %12 = bitcast %class.SkCanvas* %10 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %13 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %13, i64 24
  %15 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %14, align 8
  tail call void %15(%class.SkCanvas* %10, %struct.SkRect* dereferenceable(16) %3, %class.SkPaint* dereferenceable(72) %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkOverdrawCanvas*, %class.SkImage* nocapture readonly, %"struct.SkCanvas::Lattice"* nocapture readonly dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %struct.SkIRect, align 8
  %9 = alloca %"struct.SkCanvas::Lattice", align 8
  %10 = alloca %class.SkLatticeIter, align 8
  %11 = alloca %struct.SkRect, align 4
  %12 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %"struct.SkCanvas::Lattice"* %9 to i8*
  %14 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %15 = bitcast %"struct.SkCanvas::Lattice"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %15, i64 48, i1 false)
  %16 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 5
  %17 = load %struct.SkIRect*, %struct.SkIRect** %16, align 8
  %18 = icmp eq %struct.SkIRect* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  br label %36

24:                                               ; preds = %6
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %26 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %27 to i64
  %33 = or i64 %31, %32
  %34 = bitcast %struct.SkIRect* %8 to i64*
  store i64 0, i64* %34, align 8
  %35 = bitcast i32* %25 to i64*
  store i64 %33, i64* %35, align 8
  store %struct.SkIRect* %8, %struct.SkIRect** %16, align 8
  br label %36

36:                                               ; preds = %19, %24
  %37 = phi i32 [ %23, %19 ], [ %29, %24 ]
  %38 = phi i32 [ %21, %19 ], [ %27, %24 ]
  %39 = call zeroext i1 @_ZN13SkLatticeIter5ValidEiiRKN8SkCanvas7LatticeE(i32 %38, i32 %37, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %9) #11
  br i1 %39, label %40, label %110

40:                                               ; preds = %36
  %41 = bitcast %class.SkLatticeIter* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 112, i1 false)
  call void @_ZN13SkLatticeIterC1ERKN8SkCanvas7LatticeERK6SkRect(%class.SkLatticeIter* nonnull %10, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %9, %struct.SkRect* dereferenceable(16) %3) #11
  %42 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  %43 = bitcast %struct.SkIRect* %7 to i8*
  %44 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %44, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 -86, i64 16, i1 false) #11
  %45 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* nonnull %10, %struct.SkIRect* nonnull %7, %struct.SkRect* nonnull %11, i8* null, i32* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  br i1 %45, label %46, label %57

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  br label %49

49:                                               ; preds = %46, %49
  %50 = load %class.SkCanvas**, %class.SkCanvas*** %47, align 8
  %51 = load %class.SkCanvas*, %class.SkCanvas** %50, align 8
  %52 = bitcast %class.SkCanvas* %51 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %53 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %53, i64 24
  %55 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %54, align 8
  call void %55(%class.SkCanvas* %51, %struct.SkRect* nonnull dereferenceable(16) %11, %class.SkPaint* dereferenceable(72) %48) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 -86, i64 16, i1 false) #11
  %56 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* nonnull %10, %struct.SkIRect* nonnull %7, %struct.SkRect* nonnull %11, i8* null, i32* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  br i1 %56, label %49, label %57

57:                                               ; preds = %49, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11
  %58 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 5, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 5
  %64 = bitcast %class.SkTArray.78* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_Z7sk_freePv(i8* %65) #11
  br label %66

66:                                               ; preds = %62, %57
  %67 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 4, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 4, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_Z7sk_freePv(i8* %73) #11
  br label %74

74:                                               ; preds = %71, %66
  %75 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 3, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 3
  %81 = bitcast %class.SkTArray.76* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  call void @_Z7sk_freePv(i8* %82) #11
  br label %83

83:                                               ; preds = %79, %74
  %84 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 2, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 2
  %90 = bitcast %class.SkTArray.76* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  call void @_Z7sk_freePv(i8* %91) #11
  br label %92

92:                                               ; preds = %88, %83
  %93 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 1, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 1
  %99 = bitcast %class.SkTArray.75* %98 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @_Z7sk_freePv(i8* %100) #11
  br label %101

101:                                              ; preds = %97, %92
  %102 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %10, i64 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = bitcast %class.SkLatticeIter* %10 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @_Z7sk_freePv(i8* %108) #11
  br label %109

109:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %41) #11
  br label %119

110:                                              ; preds = %36
  %111 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %112 = load %class.SkCanvas**, %class.SkCanvas*** %111, align 8
  %113 = load %class.SkCanvas*, %class.SkCanvas** %112, align 8
  %114 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %115 = bitcast %class.SkCanvas* %113 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %116 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %116, i64 24
  %118 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %117, align 8
  call void %118(%class.SkCanvas* %113, %struct.SkRect* dereferenceable(16) %3, %class.SkPaint* dereferenceable(72) %114) #11
  br label %119

119:                                              ; preds = %110, %109
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN13SkLatticeIter5ValidEiiRKN8SkCanvas7LatticeE(i32, i32, %"struct.SkCanvas::Lattice"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN13SkLatticeIterC1ERKN8SkCanvas7LatticeERK6SkRect(%class.SkLatticeIter*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix(%class.SkOverdrawCanvas*, %class.SkDrawable*, %class.SkMatrix*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN10SkDrawable4drawEP8SkCanvasPK8SkMatrix(%class.SkDrawable* %1, %class.SkCanvas* %4, %class.SkMatrix* %2) #11
  ret void
}

declare void @_ZN10SkDrawable4drawEP8SkCanvasPK8SkMatrix(%class.SkDrawable*, %class.SkCanvas*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkOverdrawCanvas* nocapture, %class.SkPicture* nocapture, %class.SkMatrix* nocapture, %class.SkPaint* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkOverdrawCanvas* nocapture, %struct.SkRect* nocapture dereferenceable(16), i8* nocapture, %class.SkData* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec(%class.SkOverdrawCanvas*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.SkMatrix, align 4
  %6 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %class.SkMatrix* %5 to i8*
  %8 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #11
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %5, %class.SkCanvas* %9) #11
  call void @_ZN19SkDrawShadowMetrics14GetLocalBoundsERK6SkPathRK15SkDrawShadowRecRK8SkMatrixP6SkRect(%class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* dereferenceable(40) %2, %class.SkMatrix* nonnull dereferenceable(40) %5, %struct.SkRect* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #11
  %10 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %11 = load %class.SkCanvas**, %class.SkCanvas*** %10, align 8
  %12 = load %class.SkCanvas*, %class.SkCanvas** %11, align 8
  %13 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %14 = bitcast %class.SkCanvas* %12 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %15 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %15, i64 24
  %17 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %16, align 8
  call void %17(%class.SkCanvas* %12, %struct.SkRect* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZN19SkDrawShadowMetrics14GetLocalBoundsERK6SkPathRK15SkDrawShadowRecRK8SkMatrixP6SkRect(%class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #2

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkOverdrawCanvas*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* nocapture readnone dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPath, align 8
  %8 = icmp eq %struct.SkPoint* %2, null
  %9 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = load %class.SkCanvas**, %class.SkCanvas*** %9, align 8
  %11 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  br i1 %8, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  call void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* nonnull sret %7, %struct.SkPoint* nonnull %2, i32 4, i1 zeroext true, i32 0, i1 zeroext false) #11
  %14 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %15 = bitcast %class.SkCanvas* %11 to void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)***
  %16 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %16, i64 29
  %18 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %17, align 8
  call void %18(%class.SkCanvas* %11, %class.SkPath* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %14) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br label %25

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %21 = bitcast %class.SkCanvas* %11 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %22 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %22, i64 24
  %24 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %23, align 8
  tail call void %24(%class.SkCanvas* %11, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %20) #11
  br label %25

25:                                               ; preds = %19, %12
  ret void
}

declare void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* sret, %struct.SkPoint*, i32, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOverdrawCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE(%class.SkOverdrawCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* nocapture readnone dereferenceable(20), %class.SkPaint* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %9 = alloca %class.SkPath, align 8
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %class.SkPath* %9 to i8*
  %14 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  %15 = zext i32 %2 to i64
  br label %17

16:                                               ; preds = %59, %8
  ret void

17:                                               ; preds = %59, %11
  %18 = phi i64 [ 0, %11 ], [ %60, %59 ]
  %19 = phi i32 [ 0, %11 ], [ %53, %59 ]
  %20 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %18, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %32

23:                                               ; preds = %17
  %24 = load %class.SkCanvas**, %class.SkCanvas*** %12, align 8
  %25 = load %class.SkCanvas*, %class.SkCanvas** %24, align 8
  %26 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %25) #11
  %27 = load %class.SkCanvas**, %class.SkCanvas*** %12, align 8
  %28 = load %class.SkCanvas*, %class.SkCanvas** %27, align 8
  %29 = load i32, i32* %20, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %30
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %28, %class.SkMatrix* dereferenceable(40) %31) #11
  br label %32

32:                                               ; preds = %23, %17
  %33 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %18, i32 6
  %34 = load i8, i8* %33, align 4, !range !35
  %35 = icmp eq i8 %34, 0
  %36 = load %class.SkCanvas**, %class.SkCanvas*** %12, align 8
  %37 = load %class.SkCanvas*, %class.SkCanvas** %36, align 8
  br i1 %35, label %46, label %38

38:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %39 = sext i32 %19 to i64
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %39
  call void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* nonnull sret %9, %struct.SkPoint* %40, i32 4, i1 zeroext true, i32 0, i1 zeroext false) #11
  %41 = bitcast %class.SkCanvas* %37 to void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)***
  %42 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %42, i64 29
  %44 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %43, align 8
  call void %44(%class.SkCanvas* %37, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkPaint* dereferenceable(72) %14) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  %45 = add nsw i32 %19, 4
  br label %52

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %18, i32 2
  %48 = bitcast %class.SkCanvas* %37 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %49 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %49, i64 24
  %51 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %50, align 8
  call void %51(%class.SkCanvas* %37, %struct.SkRect* dereferenceable(16) %47, %class.SkPaint* dereferenceable(72) %14) #11
  br label %52

52:                                               ; preds = %46, %38
  %53 = phi i32 [ %45, %38 ], [ %19, %46 ]
  %54 = load i32, i32* %20, align 8
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %56, label %59

56:                                               ; preds = %52
  %57 = load %class.SkCanvas**, %class.SkCanvas*** %12, align 8
  %58 = load %class.SkCanvas*, %class.SkCanvas** %57, align 8
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %58) #11
  br label %59

59:                                               ; preds = %52, %56
  %60 = add nuw nsw i64 %18, 1
  %61 = icmp eq i64 %60, %15
  br i1 %61, label %16, label %17
}

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkOverdrawCanvasD2Ev(%class.SkOverdrawCanvas*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTV16SkOverdrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #11
  %4 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0
  tail call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* %4) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkOverdrawCanvasD0Ev(%class.SkOverdrawCanvas*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [59 x i8*] }, { [59 x i8*] }* @_ZTV16SkOverdrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 1
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #11
  %4 = getelementptr inbounds %class.SkOverdrawCanvas, %class.SkOverdrawCanvas* %0, i64 0, i32 0, i32 0
  tail call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* %4) #11
  %5 = bitcast %class.SkOverdrawCanvas* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #12
  ret void
}

declare i64 @_ZNK8SkCanvas16getBaseLayerSizeEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrRecordingContext* @_ZN8SkCanvas16recordingContextEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas11isClipEmptyEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10isClipRectEv(%class.SkCanvas*) unnamed_addr #2

declare void @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.81* sret, %class.SkCanvas*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare void @_ZNK8SkCanvas11onImageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas7onFlushEv(%class.SkNWayCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas8willSaveEv(%class.SkNWayCanvas*) unnamed_addr #2

declare i32 @_ZN12SkNWayCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE(%class.SkNWayCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZN12SkNWayCanvas14onDoSaveBehindEPK6SkRect(%class.SkNWayCanvas*, %struct.SkRect*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11willRestoreEv(%class.SkNWayCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas10didRestoreEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkNWayCanvas9onMarkCTMEPKc(%class.SkNWayCanvas*, i8*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11didConcat44ERK5SkM44(%class.SkNWayCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas9didSetM44ERK5SkM44(%class.SkNWayCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12didTranslateEff(%class.SkNWayCanvas*, float, float) unnamed_addr #2

declare void @_ZN12SkNWayCanvas8didScaleEff(%class.SkNWayCanvas*, float, float) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %struct.SkRect* dereferenceable(16), i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %class.SkRRect* dereferenceable(52), i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkNWayCanvas*, %class.SkPath* dereferenceable(16), i32, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkNWayCanvas*, %class.sk_sp.43*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onClipRegionERK8SkRegion8SkClipOp(%class.SkNWayCanvas*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #2

declare void @_ZN8SkCanvas9onDiscardEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrSurfaceDrawContext* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv(%class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPaintFilterCanvas* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPaintFilterCanvas* null
}

declare void @_ZN12SkNWayCanvas9addCanvasEP8SkCanvas(%class.SkNWayCanvas*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12removeCanvasEP8SkCanvas(%class.SkNWayCanvas*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas9removeAllEv(%class.SkNWayCanvas*) unnamed_addr #2

declare void @_ZN12SkNWayCanvasC2Eii(%class.SkNWayCanvas*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasED0Ev(%class.SkCanvasVirtualEnforcer*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkCanvasVirtualEnforcerI12SkNWayCanvasE12onDrawBehindERK7SkPaint(%class.SkCanvasVirtualEnforcer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkNWayCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkNWayCanvas*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkNWayCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) unnamed_addr #2

declare void @_ZN12SkNWayCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE(%class.SkNWayCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #2

declare void @_ZN12SkNWayCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNWayCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList*) unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16), %class.SkSurfaceProps* dereferenceable(8), %class.sk_sp.4*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %class.SkM44, align 4
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0
  %9 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %11, %13
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %16, %18
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %14 to i64
  %23 = or i64 %21, %22
  %24 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %3, i64 0, i32 0
  %25 = bitcast %class.sk_sp.4* %3 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %24, align 8
  %27 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !36
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %29 = bitcast i32* %28 to i64*
  store i64 0, i64* %29, align 8, !alias.scope !36
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  store i64 %23, i64* %31, align 8, !alias.scope !36
  call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %8, %struct.SkImageInfo* nonnull dereferenceable(24) %6, %class.SkSurfaceProps* dereferenceable(8) %2) #11
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %39, %35, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %45 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %46 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast i8* %44 to i8**
  store i8* %45, i8** %48, align 8
  store i64 34359738368, i64* %47, align 8
  %49 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %49) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #11
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %17, align 4
  %52 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %52) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #11
  call void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice* %8, %class.SkM44* nonnull dereferenceable(64) %5, %class.SkM44* nonnull dereferenceable(64) %7, i32 %50, i32 %51) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %49) #11
  %53 = bitcast i8* %44 to %class.SkTArray*
  %54 = load i64, i64* %47, align 8
  %55 = and i64 %54, -4294967295
  store i64 %55, i64* %47, align 8
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %53, i32 0, i32 2) #11
  %56 = load i64, i64* %47, align 8
  %57 = and i64 %56, -4294967297
  store i64 %57, i64* %47, align 8
  %58 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %59 = bitcast %struct.SkIRect* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #11
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %53, i32 1, i32 1) #11
  %60 = bitcast i8* %44 to %"struct.SkNoPixelsDevice::ClipState"**
  %61 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %60, align 8
  %62 = load i64, i64* %47, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64
  %66 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i8*
  %67 = add i64 %62, 2
  %68 = and i64 %67, 4294967294
  %69 = and i64 %62, -4294967295
  %70 = or i64 %68, %69
  store i64 %70, i64* %47, align 8
  %71 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #11
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 2
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 3
  store %struct.SkIRect* null, %struct.SkIRect** %73, align 8
  %74 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %76 to i64
  %82 = or i64 %80, %81
  %83 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i64*
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 0, i32 2
  %85 = bitcast i32* %84 to i64*
  store i64 %82, i64* %85, align 8
  store i8 1, i8* %71, align 8
  store i8 0, i8* %72, align 1
  store %struct.SkIRect* %58, %struct.SkIRect** %73, align 8
  ret void
}

declare %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #2

declare void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110TextDeviceD0Ev(%"class.(anonymous namespace)::TextDevice"*) unnamed_addr #4 align 2 {
  tail call void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* %0) #11
  %2 = bitcast %"class.(anonymous namespace)::TextDevice"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12SkBaseDevice15getRasterHandleEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

declare zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

declare void @_ZN16SkNoPixelsDevice6onSaveEv(%class.SkNoPixelsDevice*) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice9onRestoreEv(%class.SkNoPixelsDevice*) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkNoPixelsDevice*, %class.sk_sp.43*) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkNoPixelsDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare void @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice10onClipIsAAEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !35
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %5 = bitcast i8* %4 to %"struct.SkNoPixelsDevice::ClipState"**
  %6 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %5, align 8
  %7 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = and i64 %10, 2147483647
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %6, i64 %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !35
  %15 = icmp eq i8 %14, 0
  %16 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  br i1 %15, label %40, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %20 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %19, align 8
  %21 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %20, i64 23
  %22 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %21, align 8
  %23 = tail call { i64, i64 } %22(%class.SkNoPixelsDevice* %0) #11
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %27 = extractvalue { i64, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %29 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = call i32 @bcmp(i8* nonnull %16, i8* nonnull %17, i64 16) #11
  %39 = icmp eq i32 %38, 0
  br label %40

40:                                               ; preds = %1, %18
  %41 = phi i1 [ false, %1 ], [ %39, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion(%class.SkNoPixelsDevice*, %class.SkRegion*) unnamed_addr #0 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %7 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %7, i64 23
  %9 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%class.SkNoPixelsDevice* %0) #11
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %12 = extractvalue { i64, i64 } %10, 0
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %14 = extractvalue { i64, i64 } %10, 1
  store i64 %14, i64* %13, align 8
  %15 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare i32 @_ZNK16SkNoPixelsDevice13onGetClipTypeEv(%class.SkNoPixelsDevice*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0
  %12 = bitcast %struct.SkIRect* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 2
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = insertvalue { i64, i64 } undef, i64 %13, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint(%class.SkNoPixelsDevice*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110TextDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%"class.(anonymous namespace)::TextDevice"*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 3
  %6 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 2
  %8 = load %class.SkCanvas*, %class.SkCanvas** %7, align 8
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %4, %class.SkCanvas* %8) #11
  %9 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 1
  call void @_ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE(%class.SkGlyphRunListPainter* %5, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* nonnull dereferenceable(40) %4, %"class.SkGlyphRunListPainter::BitmapDevicePainter"* %9) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap() unnamed_addr

declare void @_ZN12SkBaseDevice11makeSpecialEPK7SkImage() unnamed_addr

declare void @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12setImmutableEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.81* sret, %class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBaseDevice* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint(%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"* dereferenceable(48), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret %class.SkBaseDevice* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBaseDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterCache* @_ZN12SkBaseDevice19getImageFilterCacheEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImageFilterCache* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110TextDevice10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture, %class.SkDrawableGlyphBuffer* nocapture, float, <2 x float>, %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110TextDevice10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture readonly, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #3 align 2 {
  %4 = alloca %struct.SkMask, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca %class.SkPaint, align 8
  %8 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8, !noalias !39
  %10 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %10, align 8, !noalias !39
  %12 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.SkPoint*, %struct.SkPoint** %12, align 8, !noalias !39
  %14 = icmp eq i64 %9, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %3
  %16 = bitcast %struct.SkMask* %4 to i8*
  %17 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 2
  %20 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 3
  %21 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 0, i32 2
  %22 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %25 = bitcast %class.SkPaint* %7 to i8*
  %26 = bitcast %struct.SkMask* %4 to i8*
  br label %28

27:                                               ; preds = %28, %3
  ret void

28:                                               ; preds = %15, %28
  %29 = phi i64 [ 0, %15 ], [ %48, %28 ]
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %29
  %31 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %11, i64 %29, i32 0, i32 0
  %32 = load %class.SkGlyph*, %class.SkGlyph** %31, align 8
  %33 = bitcast %struct.SkPoint* %30 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  call void @_ZNK7SkGlyph4maskE7SkPoint(%struct.SkMask* nonnull sret %4, %class.SkGlyph* %32, <2 x float> %34) #11
  %35 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %36 = load i32, i32* %17, align 8
  %37 = sitofp i32 %36 to float
  %38 = insertelement <2 x float> undef, float %37, i32 0
  %39 = load i32, i32* %18, align 4
  %40 = sitofp i32 %39 to float
  %41 = insertelement <2 x float> %38, float %40, i32 1
  %42 = load i32, i32* %19, align 8
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = load i32, i32* %20, align 4
  %46 = sitofp i32 %45 to float
  %47 = insertelement <2 x float> %44, float %46, i32 1
  store <2 x float> %41, <2 x float>* %23, align 8
  store <2 x float> %47, <2 x float>* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #11
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #11
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %35, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* nonnull dereferenceable(72) %7) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  %48 = add nuw i64 %29, 1
  %49 = icmp eq i64 %48, %9
  br i1 %49, label %27, label %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110TextDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture, %class.SkBitmap* nocapture dereferenceable(56), %class.SkMatrix* nocapture dereferenceable(40), %struct.SkRect* nocapture, %struct.SkSamplingOptions* nocapture dereferenceable(20), %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_110TextDeviceD1Ev(%"class.(anonymous namespace)::TextDevice"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 -1, i32 3, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.74* %2 to %"class.(anonymous namespace)::TextDevice"*
  tail call void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N12_GLOBAL__N_110TextDeviceD0Ev(%"class.(anonymous namespace)::TextDevice"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 -1, i32 3, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.74* %2 to %"class.(anonymous namespace)::TextDevice"*
  tail call void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* %3) #11
  %4 = bitcast %class.SkTArray.74* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn488_N12_GLOBAL__N_110TextDeviceD1Ev(%"class.(anonymous namespace)::TextDevice"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i64 14
  %3 = bitcast float* %2 to %"class.(anonymous namespace)::TextDevice"*
  tail call void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn488_N12_GLOBAL__N_110TextDeviceD0Ev(%"class.(anonymous namespace)::TextDevice"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i64 14
  %3 = bitcast float* %2 to %"class.(anonymous namespace)::TextDevice"*
  tail call void @_ZN12_GLOBAL__N_110TextDeviceD2Ev(%"class.(anonymous namespace)::TextDevice"* %3) #11
  %4 = bitcast float* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZThn488_NK12_GLOBAL__N_110TextDevice10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture, %class.SkDrawableGlyphBuffer* nocapture, float, <2 x float>, %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn488_NK12_GLOBAL__N_110TextDevice10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture readonly, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TextDevice", %"class.(anonymous namespace)::TextDevice"* %0, i64 -1, i32 0, i32 0, i32 5, i32 0, i64 14
  %5 = bitcast float* %4 to %"class.(anonymous namespace)::TextDevice"*
  tail call void @_ZNK12_GLOBAL__N_110TextDevice10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* %5, %class.SkDrawableGlyphBuffer* %1, %class.SkPaint* dereferenceable(72) %2)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZThn488_NK12_GLOBAL__N_110TextDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%"class.(anonymous namespace)::TextDevice"* nocapture, %class.SkBitmap* nocapture dereferenceable(56), %class.SkMatrix* nocapture dereferenceable(40), %struct.SkRect* nocapture, %struct.SkSamplingOptions* nocapture dereferenceable(20), %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #6 align 2 {
  ret void
}

declare void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 40
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %49, align 8
  %55 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %54, i64 %51
  %56 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 40, i1 false) #11
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #11
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE(%class.SkGlyphRunListPainter*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40), %"class.SkGlyphRunListPainter::BitmapDevicePainter"*) local_unnamed_addr #2

declare void @_ZNK7SkGlyph4maskE7SkPoint(%struct.SkMask* sret, %class.SkGlyph*, <2 x float>) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #2

declare zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter*, %struct.SkIRect*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!4 = distinct !{!4, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!7 = distinct !{!7, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!10 = distinct !{!10, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!13 = distinct !{!13, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!16 = distinct !{!16, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!19 = distinct !{!19, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!22 = distinct !{!22, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!25 = distinct !{!25, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!28 = distinct !{!28, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!31 = distinct !{!31, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint: argument 0"}
!34 = distinct !{!34, !"_ZN16SkOverdrawCanvas13overdrawPaintERK7SkPaint"}
!35 = !{i8 0, i8 2}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!38 = distinct !{!38, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!41 = distinct !{!41, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
