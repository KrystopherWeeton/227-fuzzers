; ModuleID = '../../third_party/blink/renderer/platform/graphics/compositing/layers_as_json.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/compositing/layers_as_json.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayersAsJSON" = type { i32, i32, %"class.std::__1::unique_ptr.81", %"class.WTF::HashMap.98", %"class.std::__1::unique_ptr.81", %"class.WTF::HashMap.136" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.102" = type <{ %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.118" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr.104, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.103" }
%"class.base::RefCounted.103" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.104 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.111, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.112", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.105" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.111 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.141", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.141" = type { %"class.WTF::RefCounted.142", i8, i8, %class.scoped_refptr.111, i32, i32 }
%"class.WTF::RefCounted.142" = type { %"class.base::RefCounted.143" }
%"class.base::RefCounted.143" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.144" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.149", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.151" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::JSONArray"* }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.84" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.std::__1::unique_ptr.87"*, i32, i32 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.WTF::HashMap.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"struct.WTF::KeyValuePair.140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.140" = type { i32, i32 }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.15", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.55" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.4*, %class.scoped_refptr.4*, %"class.std::__1::__compressed_pair.5" }
%class.scoped_refptr.4 = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.scoped_refptr.4* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.38", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.44" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.33" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.26", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.25, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.20" }>
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%class.sk_sp.25 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::unique_ptr.46" = type opaque
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::unique_ptr.46"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.64", %"class.std::__1::vector.64", %"class.std::__1::vector.71" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.60 }
%union.anon.60 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { i8**, i8**, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i8** }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.73" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.160, i32, i8, i8, [2 x i8] }>
%union.anon.160 = type { %"class.WTF::Vector.161" }
%"class.WTF::Vector.161" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163", [16 x i8] }
%"class.WTF::VectorBufferBase.163" = type { i8*, i32, i32 }
%"class.blink::Color" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::LayerAsJSONClient" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERjRiEENS_18HashTableAddResultISB_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"ccLayerId\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"bounds\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"contentsOpaque\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"contentsOpaqueForText\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"drawsContent\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"backfaceVisibility\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"backgroundColor\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"compositingReasons\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"transform\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"flattenInheritedTransform\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"renderingContext\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"LayoutView #document\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"Inner Viewport Scroll Layer\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Scrolling Contents Layer\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"layers\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"transforms\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink26TransformPaintPropertyNodeEiEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::TransformPaintPropertyNode *, int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiiEEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, int>]\00", align 1

@_ZN5blink12LayersAsJSONC1Ej = hidden unnamed_addr alias void (%"class.blink::LayersAsJSON"*, i32), void (%"class.blink::LayersAsJSON"*, i32)* @_ZN5blink12LayersAsJSONC2Ej

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZN5blink13CCLayerAsJSONERKN2cc5LayerEj(%"class.cc::Layer"* dereferenceable(232), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::TextStream", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::Color", align 4
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = tail call noalias i8* @malloc(i64 56) #8
  %23 = bitcast i8* %22 to %"class.blink::JSONObject"*
  tail call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %23) #8
  %24 = and i32 %1, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %110, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #8
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = bitcast %"class.cc::Layer"* %0 to i8*
  %30 = bitcast %"class.WTF::TextStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false) #8
  %31 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0, i32 1
  %33 = bitcast %union.anon.160* %32 to i8*
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0, i32 2
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0, i32 3
  store i8 1, i8* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0, i32 4
  store i8 0, i8* %36, align 1
  %37 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKv(%"class.WTF::TextStream"* nonnull %3, i8* %29) #8
  %38 = call %"class.WTF::StringImpl"* @_ZN3WTF10TextStream7ReleaseEv(%"class.WTF::TextStream"* nonnull %3) #8
  %39 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %3, i64 0, i32 0
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %39) #8
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #8
  br label %55

55:                                               ; preds = %26, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %55, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #8
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %90 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #8
  %91 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 3
  %92 = load i32, i32* %91, align 8
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 %92) #8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #8
  br label %109

109:                                              ; preds = %89, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #8
  br label %110

110:                                              ; preds = %2, %109
  %111 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #8
  %112 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #8
  %113 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #8
  call void @_ZNK2cc5Layer9DebugNameEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.cc::Layer"* %0) #8
  %114 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %110, %118
  %123 = phi i8* [ %120, %118 ], [ %113, %110 ]
  %124 = call i64 @strlen(i8* nonnull %123) #9
  br label %125

125:                                              ; preds = %118, %122
  %126 = phi i8* [ %123, %122 ], [ null, %118 ]
  %127 = phi i64 [ %124, %122 ], [ 0, %118 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %126, i64 %127) #8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #8
  br label %144

144:                                              ; preds = %125, %140, %143
  %145 = load i8, i8* %115, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #10
  br label %150

150:                                              ; preds = %144, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #8
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #8
  br label %167

167:                                              ; preds = %150, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #8
  %168 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 13
  %169 = bitcast %"class.gfx::Vector2dF"* %168 to <2 x float>*
  %170 = load <2 x float>, <2 x float>* %169, align 8
  %171 = extractelement <2 x float> %170, i32 0
  %172 = fcmp une float %171, 0.000000e+00
  %173 = extractelement <2 x float> %170, i32 1
  %174 = fcmp une float %173, 0.000000e+00
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %202

176:                                              ; preds = %167
  %177 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #8
  %178 = load <2 x float>, <2 x float>* %169, align 8
  %179 = extractelement <2 x float> %178, i32 0
  %180 = extractelement <2 x float> %178, i32 1
  %181 = call noalias i8* @malloc(i64 32) #8
  %182 = bitcast i8* %181 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %182) #8
  %183 = fpext float %179 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %182, double %183) #8
  %184 = fpext float %180 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %182, double %184) #8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::JSONArray"* %182) #8
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %176
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #8
  br label %201

201:                                              ; preds = %176, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #8
  br label %202

202:                                              ; preds = %167, %201
  %203 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 2, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 2, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %236, label %210

210:                                              ; preds = %206, %202
  %211 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #8
  %212 = load i32, i32* %203, align 4
  %213 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 2, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = call noalias i8* @malloc(i64 32) #8
  %216 = bitcast i8* %215 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %216) #8
  %217 = sitofp i32 %212 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %216, double %217) #8
  %218 = sitofp i32 %214 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %216, double %218) #8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::JSONArray"* %216) #8
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %210
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #8
  br label %235

235:                                              ; preds = %210, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #8
  br label %236

236:                                              ; preds = %206, %235
  %237 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 4
  %238 = load i8, i8* %237, align 4
  %239 = and i8 %238, 2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %236
  %242 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #8
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext true) #8
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %280, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %280

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #8
  br label %280

259:                                              ; preds = %236
  %260 = and i8 %238, 4
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %282, label %262

262:                                              ; preds = %259
  %263 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i64 21) #8
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %13, i1 zeroext true) #8
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #8
  br label %280

280:                                              ; preds = %279, %276, %262, %258, %255, %241
  %281 = phi i8* [ %242, %241 ], [ %242, %255 ], [ %242, %258 ], [ %263, %262 ], [ %263, %276 ], [ %263, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #8
  br label %282

282:                                              ; preds = %280, %259
  %283 = call zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"* %0) #8
  br i1 %283, label %303, label %284

284:                                              ; preds = %282
  %285 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i64 12) #8
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext false) #8
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #8
  br label %302

302:                                              ; preds = %284, %298, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #8
  br label %303

303:                                              ; preds = %302, %282
  %304 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 15
  %305 = load i16, i16* %304, align 1
  %306 = and i16 %305, 2
  %307 = icmp eq i16 %306, 0
  br i1 %307, label %345, label %308

308:                                              ; preds = %303
  %309 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i64 18) #8
  %310 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16) #8
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #8
  br label %327

327:                                              ; preds = %308, %323, %326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #8
  %328 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #8
  br label %344

344:                                              ; preds = %327, %340, %343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #8
  br label %345

345:                                              ; preds = %303, %344
  %346 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 5
  %347 = load i32, i32* %346, align 8
  %348 = icmp ult i32 %347, 16777216
  br i1 %348, label %390, label %349

349:                                              ; preds = %345
  %350 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 15) #8
  %351 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %351) #8
  %352 = bitcast %"class.blink::Color"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %352) #8
  %353 = load i32, i32* %346, align 8
  %354 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %19, i64 0, i32 0
  store i32 %353, i32* %354, align 4
  %355 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %19) #8
  %356 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %355, %"class.WTF::StringImpl"** %356, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %18) #8
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %349
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #8
  br label %372

372:                                              ; preds = %349, %368, %371
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %352) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #8
  %373 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #8
  br label %389

389:                                              ; preds = %372, %385, %388
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #8
  br label %390

390:                                              ; preds = %345, %389
  %391 = and i32 %1, 33
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %454, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %395 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %394, align 8
  %396 = icmp eq %"struct.cc::LayerDebugInfo"* %395, null
  br i1 %396, label %454, label %397

397:                                              ; preds = %393
  %398 = call noalias i8* @malloc(i64 32) #8
  %399 = bitcast i8* %398 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %399) #8
  %400 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %394, align 8
  %401 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %400, i64 0, i32 3, i32 0, i32 0
  %402 = load i8**, i8*** %401, align 8
  %403 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %400, i64 0, i32 3, i32 0, i32 1
  %404 = load i8**, i8*** %403, align 8
  %405 = icmp eq i8** %402, %404
  br i1 %405, label %409, label %406

406:                                              ; preds = %397
  %407 = bitcast %"class.WTF::String"* %20 to i8*
  %408 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  br label %428

409:                                              ; preds = %451, %397
  %410 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i64 18) #8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::JSONArray"* %399) #8
  %411 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %412, null
  br i1 %413, label %427, label %414

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br i1 %418, label %421, label %423

421:                                              ; preds = %414
  %422 = add i32 %420, -1
  store i32 %422, i32* %419, align 4
  br label %423

423:                                              ; preds = %421, %414
  %424 = phi i32 [ %422, %421 ], [ %420, %414 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %412) #8
  br label %427

427:                                              ; preds = %426, %423, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #8
  br label %454

428:                                              ; preds = %406, %451
  %429 = phi i8** [ %402, %406 ], [ %452, %451 ]
  %430 = load i8*, i8** %429, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #8
  %431 = icmp eq i8* %430, null
  br i1 %431, label %434, label %432

432:                                              ; preds = %428
  %433 = call i64 @strlen(i8* nonnull %430) #9
  br label %434

434:                                              ; preds = %428, %432
  %435 = phi i64 [ %433, %432 ], [ 0, %428 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* %430, i64 %435) #8
  call void @_ZN5blink9JSONArray10PushStringERKN3WTF6StringE(%"class.blink::JSONArray"* %399, %"class.WTF::String"* nonnull dereferenceable(8) %20) #8
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %451, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #8
  br label %451

451:                                              ; preds = %434, %447, %450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #8
  %452 = getelementptr inbounds i8*, i8** %429, i64 1
  %453 = icmp eq i8** %452, %404
  br i1 %453, label %409, label %428

454:                                              ; preds = %427, %390, %393
  ret %"class.blink::JSONObject"* %23
}

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZNK2cc5Layer9DebugNameEv(%"class.std::__1::basic_string"* sret, %"class.cc::Layer"*) local_unnamed_addr #1

declare void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONArray"*) local_unnamed_addr #1

declare void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"*) local_unnamed_addr #1

declare void @_ZN5blink9JSONArray10PushStringERKN3WTF6StringE(%"class.blink::JSONArray"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayersAsJSONC2Ej(%"class.blink::LayersAsJSON"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 4
  %5 = tail call noalias i8* @malloc(i64 32) #8
  %6 = bitcast i8* %5 to %"class.blink::JSONArray"*
  tail call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %6) #8
  %7 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::JSONArray"** %7 to i8**
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 3
  %10 = bitcast %"class.WTF::HashMap.98"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #8
  %11 = tail call noalias i8* @malloc(i64 32) #8
  %12 = bitcast i8* %11 to %"class.blink::JSONArray"*
  tail call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %12) #8
  %13 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::JSONArray"** %13 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 5
  %16 = bitcast %"class.WTF::HashMap.136"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12LayersAsJSON16AddTransformJSONERKNS_26TransformPaintPropertyNodeE(%"class.blink::LayersAsJSON"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = alloca %"class.blink::TransformPaintPropertyNode"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::TransformPaintPropertyNode"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::TransformPaintPropertyNode"*, align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::TransformationMatrix", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.WTF::String", align 8
  %18 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 3
  %19 = bitcast %"class.blink::TransformPaintPropertyNode"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  store %"class.blink::TransformPaintPropertyNode"* %1, %"class.blink::TransformPaintPropertyNode"** %4, align 8
  %20 = getelementptr inbounds %"class.WTF::HashMap.98", %"class.WTF::HashMap.98"* %18, i64 0, i32 0
  %21 = call { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.99"* %20, %"class.blink::TransformPaintPropertyNode"** nonnull dereferenceable(8) %4) #8
  %22 = extractvalue { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } %21, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %23 = getelementptr inbounds %"class.WTF::HashMap.98", %"class.WTF::HashMap.98"* %18, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %24, i64 %27
  %29 = icmp eq %"struct.WTF::KeyValuePair.102"* %22, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %22, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  br label %433

33:                                               ; preds = %2
  %34 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #8
  store i32 0, i32* %5, align 4
  %35 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %36 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %35, align 8
  %37 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %33, %43
  %39 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %41, %43 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %39, i64 0, i32 0, i32 3, i32 0
  %41 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %40, align 8
  %42 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %39, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %43
  %48 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %39 to %"class.blink::TransformPaintPropertyNode"*
  %49 = call i32 @_ZN5blink12LayersAsJSON16AddTransformJSONERKNS_26TransformPaintPropertyNodeE(%"class.blink::LayersAsJSON"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %48)
  store i32 %49, i32* %5, align 4
  br label %50

50:                                               ; preds = %33, %47
  %51 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %51, align 8
  %53 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %52, null
  br i1 %53, label %54, label %84

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %56, 0xBE80000000000000
  %58 = fcmp olt float %56, 0x3E80000000000000
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %84

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = fcmp ogt float %62, 0xBE80000000000000
  %64 = fcmp olt float %62, 0x3E80000000000000
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %84

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %66
  %71 = bitcast %"class.blink::TransformPaintPropertyNode"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  store %"class.blink::TransformPaintPropertyNode"* %1, %"class.blink::TransformPaintPropertyNode"** %6, align 8
  %72 = call { %"struct.WTF::KeyValuePair.102"*, i8 } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.99"* %20, %"class.blink::TransformPaintPropertyNode"** nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %5) #8
  %73 = extractvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %72, 1
  %74 = and i8 %73, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = load i32, i32* %5, align 4
  br label %82

78:                                               ; preds = %70
  %79 = extractvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %72, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %79, i64 0, i32 1
  %81 = load i32, i32* %5, align 4
  store i32 %81, i32* %80, align 4
  br label %82

82:                                               ; preds = %76, %78
  %83 = phi i32 [ %77, %76 ], [ %81, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  br label %431

84:                                               ; preds = %54, %60, %50, %66
  %85 = call noalias i8* @malloc(i64 56) #8
  %86 = bitcast i8* %85 to %"class.blink::JSONObject"*
  call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %86) #8
  %87 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %88, align 4
  store i32 %89, i32* %7, align 4
  %91 = bitcast %"class.blink::TransformPaintPropertyNode"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #8
  store %"class.blink::TransformPaintPropertyNode"* %1, %"class.blink::TransformPaintPropertyNode"** %8, align 8
  %92 = call { %"struct.WTF::KeyValuePair.102"*, i8 } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.99"* %20, %"class.blink::TransformPaintPropertyNode"** nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %7) #8
  %93 = extractvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %92, 1
  %94 = and i8 %93, 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %84
  %97 = extractvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %92, 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %97, i64 0, i32 1
  %99 = load i32, i32* %7, align 4
  store i32 %99, i32* %98, align 4
  br label %100

100:                                              ; preds = %84, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %101 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #8
  %102 = load i32, i32* %7, align 4
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %102) #8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #8
  br label %119

119:                                              ; preds = %100, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #8
  %120 = load i32, i32* %5, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %142, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #8
  %124 = load i32, i32* %5, align 4
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 %124) #8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #8
  br label %141

141:                                              ; preds = %122, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #8
  br label %142

142:                                              ; preds = %119, %141
  %143 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %51, align 8
  %144 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %143, null
  br i1 %144, label %145, label %157

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %147 = load float, float* %146, align 4
  %148 = fcmp ogt float %147, 0xBE80000000000000
  %149 = fcmp olt float %147, 0x3E80000000000000
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %153 = load float, float* %152, align 4
  %154 = fcmp ogt float %153, 0xBE80000000000000
  %155 = fcmp olt float %153, 0x3E80000000000000
  %156 = and i1 %154, %155
  br i1 %156, label %291, label %157

157:                                              ; preds = %145, %151, %142
  %158 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #8
  %159 = bitcast %"class.blink::TransformationMatrix"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %159) #8
  %160 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %51, align 8, !noalias !3
  %161 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %160, null
  %162 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %162) #8, !noalias !3
  br i1 %161, label %165, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %160, i64 0, i32 0
  br label %183

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %166, align 8, !noalias !3
  %167 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 1
  %168 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 1
  %169 = bitcast double* %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 32, i1 false) #8, !noalias !3
  store double 1.000000e+00, double* %168, align 8, !noalias !3
  %170 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 2
  %171 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 2
  %172 = bitcast double* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 32, i1 false) #8, !noalias !3
  store double 1.000000e+00, double* %171, align 8, !noalias !3
  %173 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 3
  %174 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 3
  %175 = bitcast double* %173 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 32, i1 false) #8, !noalias !3
  store double 1.000000e+00, double* %174, align 8, !noalias !3
  %176 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load float, float* %176, align 4, !noalias !3
  %178 = fpext float %177 to double
  %179 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %180 = load float, float* %179, align 4, !noalias !3
  %181 = fpext float %180 to double
  %182 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* nonnull %3, double %178, double %181) #8, !noalias !3
  br label %183

183:                                              ; preds = %163, %165
  %184 = phi %"class.blink::TransformationMatrix"* [ %164, %163 ], [ %182, %165 ]
  %185 = bitcast %"class.blink::TransformationMatrix"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %159, i8* align 8 %185, i64 128, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %162) #8, !noalias !3
  %186 = call %"class.blink::JSONArray"* @_ZN5blink20TransformAsJSONArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %12) #8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::JSONArray"* %186) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %159) #8
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #8
  br label %203

203:                                              ; preds = %202, %199, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #8
  %204 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %51, align 8
  %205 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, null
  br i1 %205, label %291, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 0, i64 0
  %208 = load double, double* %207, align 8
  %209 = fcmp oeq double %208, 1.000000e+00
  br i1 %209, label %210, label %258

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 0, i64 1
  %212 = load double, double* %211, align 8
  %213 = fcmp oeq double %212, 0.000000e+00
  br i1 %213, label %214, label %258

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 0, i64 2
  %216 = load double, double* %215, align 8
  %217 = fcmp oeq double %216, 0.000000e+00
  br i1 %217, label %218, label %258

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 0, i64 3
  %220 = load double, double* %219, align 8
  %221 = fcmp oeq double %220, 0.000000e+00
  br i1 %221, label %222, label %258

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 1, i64 0
  %224 = load double, double* %223, align 8
  %225 = fcmp oeq double %224, 0.000000e+00
  br i1 %225, label %226, label %258

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 1, i64 1
  %228 = load double, double* %227, align 8
  %229 = fcmp oeq double %228, 1.000000e+00
  br i1 %229, label %230, label %258

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 1, i64 2
  %232 = load double, double* %231, align 8
  %233 = fcmp oeq double %232, 0.000000e+00
  br i1 %233, label %234, label %258

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 1, i64 3
  %236 = load double, double* %235, align 8
  %237 = fcmp oeq double %236, 0.000000e+00
  br i1 %237, label %238, label %258

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 2, i64 0
  %240 = load double, double* %239, align 8
  %241 = fcmp oeq double %240, 0.000000e+00
  br i1 %241, label %242, label %258

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 2, i64 1
  %244 = load double, double* %243, align 8
  %245 = fcmp oeq double %244, 0.000000e+00
  br i1 %245, label %246, label %258

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 2, i64 2
  %248 = load double, double* %247, align 8
  %249 = fcmp oeq double %248, 1.000000e+00
  br i1 %249, label %250, label %258

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 2, i64 3
  %252 = load double, double* %251, align 8
  %253 = fcmp oeq double %252, 0.000000e+00
  br i1 %253, label %254, label %258

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %204, i64 0, i32 0, i32 0, i32 0, i64 3, i64 3
  %256 = load double, double* %255, align 8
  %257 = fcmp oeq double %256, 1.000000e+00
  br i1 %257, label %291, label %258

258:                                              ; preds = %206, %210, %214, %218, %222, %226, %230, %234, %238, %242, %246, %250, %254
  %259 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #8
  %260 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %51, align 8, !noalias !8
  %261 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %260, null
  br i1 %261, label %267, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %260, i64 0, i32 1, i32 0
  %264 = load float, float* %263, align 4, !noalias !8
  %265 = getelementptr inbounds %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin", %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %260, i64 0, i32 1, i32 1
  %266 = load float, float* %265, align 4, !noalias !8
  br label %267

267:                                              ; preds = %258, %262
  %268 = phi float [ %264, %262 ], [ 0.000000e+00, %258 ]
  %269 = phi float [ %266, %262 ], [ 0.000000e+00, %258 ]
  %270 = call noalias i8* @malloc(i64 32) #8
  %271 = bitcast i8* %270 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %271) #8
  %272 = fpext float %268 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %271, double %272) #8
  %273 = fpext float %269 to double
  call void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"* %271, double %273) #8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::JSONArray"* %271) #8
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %267
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #8
  br label %290

290:                                              ; preds = %267, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #8
  br label %291

291:                                              ; preds = %151, %290, %254, %203
  %292 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 2, i32 0
  %293 = load i8, i8* %292, align 8
  %294 = and i8 %293, 1
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %315

296:                                              ; preds = %291
  %297 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i64 25) #8
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext false) #8
  %298 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #8
  br label %314

314:                                              ; preds = %296, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #8
  br label %315

315:                                              ; preds = %291, %314
  %316 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %316) #8
  %317 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 4
  %318 = load i32, i32* %317, align 4
  store i32 %318, i32* %15, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %427, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 5
  %322 = getelementptr inbounds %"class.WTF::HashMap.136", %"class.WTF::HashMap.136"* %321, i64 0, i32 0, i32 0
  %323 = load %"struct.WTF::KeyValuePair.140"*, %"struct.WTF::KeyValuePair.140"** %322, align 8
  %324 = icmp eq %"struct.WTF::KeyValuePair.140"* %323, null
  %325 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 5, i32 0, i32 1
  %326 = load i32, i32* %325, align 8
  br i1 %324, label %382, label %327

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  %329 = zext i32 %328 to i64
  %330 = shl i32 %318, 15
  %331 = xor i32 %330, -1
  %332 = add i32 %318, %331
  %333 = lshr i32 %332, 10
  %334 = xor i32 %333, %332
  %335 = mul i32 %334, 9
  %336 = lshr i32 %335, 6
  %337 = xor i32 %336, %335
  %338 = shl i32 %337, 11
  %339 = xor i32 %338, -1
  %340 = add i32 %337, %339
  %341 = lshr i32 %340, 16
  %342 = xor i32 %341, %340
  %343 = and i32 %328, %342
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %323, i64 %344
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %345, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, %318
  br i1 %348, label %377, label %349

349:                                              ; preds = %327
  %350 = xor i32 %342, -1
  %351 = lshr i32 %340, 23
  %352 = add i32 %351, %350
  %353 = shl i32 %352, 12
  %354 = xor i32 %353, %352
  %355 = lshr i32 %354, 7
  %356 = xor i32 %355, %354
  %357 = shl i32 %356, 2
  %358 = xor i32 %357, %356
  %359 = lshr i32 %358, 20
  %360 = xor i32 %359, %358
  %361 = or i32 %360, 1
  %362 = zext i32 %361 to i64
  br label %363

363:                                              ; preds = %368, %349
  %364 = phi i32 [ %347, %349 ], [ %375, %368 ]
  %365 = phi i64 [ %344, %349 ], [ %372, %368 ]
  %366 = phi i64 [ 0, %349 ], [ %370, %368 ]
  %367 = icmp eq i32 %364, 0
  br i1 %367, label %382, label %368

368:                                              ; preds = %363
  %369 = icmp eq i64 %366, 0
  %370 = select i1 %369, i64 %362, i64 %366
  %371 = add i64 %370, %365
  %372 = and i64 %371, %329
  %373 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %323, i64 %372
  %374 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %373, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = icmp eq i32 %375, %318
  br i1 %376, label %377, label %363

377:                                              ; preds = %368, %327
  %378 = phi %"struct.WTF::KeyValuePair.140"* [ %345, %327 ], [ %373, %368 ]
  %379 = icmp eq %"struct.WTF::KeyValuePair.140"* %378, null
  br i1 %379, label %382, label %380

380:                                              ; preds = %377
  %381 = zext i32 %326 to i64
  br label %385

382:                                              ; preds = %363, %377, %320
  %383 = zext i32 %326 to i64
  %384 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %323, i64 %383
  br label %385

385:                                              ; preds = %380, %382
  %386 = phi i64 [ %381, %380 ], [ %383, %382 ]
  %387 = phi %"struct.WTF::KeyValuePair.140"* [ %378, %380 ], [ %384, %382 ]
  %388 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %388) #8
  %389 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 5, i32 0, i32 2
  %390 = load i32, i32* %389, align 4
  %391 = add i32 %390, 1
  store i32 %391, i32* %16, align 4
  %392 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %323, i64 %386
  %393 = icmp eq %"struct.WTF::KeyValuePair.140"* %387, %392
  br i1 %393, label %394, label %404

394:                                              ; preds = %385
  %395 = getelementptr inbounds %"class.WTF::HashMap.136", %"class.WTF::HashMap.136"* %321, i64 0, i32 0
  %396 = call { %"struct.WTF::KeyValuePair.140"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERjRiEENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.137"* %395, i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %16) #8
  %397 = extractvalue { %"struct.WTF::KeyValuePair.140"*, i8 } %396, 1
  %398 = and i8 %397, 1
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %400, label %407

400:                                              ; preds = %394
  %401 = extractvalue { %"struct.WTF::KeyValuePair.140"*, i8 } %396, 0
  %402 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %401, i64 0, i32 1
  %403 = load i32, i32* %16, align 4
  store i32 %403, i32* %402, align 4
  br label %407

404:                                              ; preds = %385
  %405 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %387, i64 0, i32 1
  %406 = load i32, i32* %405, align 4
  store i32 %406, i32* %16, align 4
  br label %407

407:                                              ; preds = %400, %394, %404
  %408 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16) #8
  %409 = load i32, i32* %16, align 4
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %17, i32 %409) #8
  %410 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %426, label %413

413:                                              ; preds = %407
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #8
  br label %426

426:                                              ; preds = %407, %422, %425
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %388) #8
  br label %427

427:                                              ; preds = %426, %315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %316) #8
  %428 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %429 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %428, align 8
  call void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"* %429, %"class.blink::JSONObject"* %86) #8
  %430 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #8
  br label %431

431:                                              ; preds = %427, %82
  %432 = phi i32 [ %430, %427 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #8
  br label %433

433:                                              ; preds = %431, %30
  %434 = phi i32 [ %32, %30 ], [ %432, %431 ]
  ret i32 %434
}

declare %"class.blink::JSONArray"* @_ZN5blink20TransformAsJSONArrayERKNS_20TransformationMatrixE(%"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #1

declare void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayersAsJSON8AddLayerERKN2cc5LayerERKNS_26TransformPaintPropertyNodeEPKNS_17LayerAsJSONClientE(%"class.blink::LayersAsJSON"*, %"class.cc::Layer"* dereferenceable(232), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::LayerAsJSONClient"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %4
  %14 = tail call zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"* %1) #8
  br i1 %14, label %82, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  call void @_ZNK2cc5Layer9DebugNameEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.cc::Layer"* %1) #8
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %24, 20
  br i1 %25, label %26, label %29

26:                                               ; preds = %15
  %27 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %74, label %29

29:                                               ; preds = %15, %26
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  call void @_ZNK2cc5Layer9DebugNameEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.cc::Layer"* %1) #8
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp eq i64 %38, 27
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i64 27) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %29, %40
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8
  call void @_ZNK2cc5Layer9DebugNameEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.cc::Layer"* %1) #8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 24
  br i1 %53, label %54, label %58

54:                                               ; preds = %43
  %55 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i64 24) #8
  %56 = icmp eq i32 %55, 0
  %57 = load i8, i8* %46, align 1
  br label %58

58:                                               ; preds = %43, %54
  %59 = phi i8 [ %57, %54 ], [ %47, %43 ]
  %60 = phi i1 [ %56, %54 ], [ false, %43 ]
  %61 = icmp slt i8 %59, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  br label %66

66:                                               ; preds = %40, %65
  %67 = phi i1 [ %60, %65 ], [ true, %40 ]
  %68 = load i8, i8* %32, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %70, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br label %74

74:                                               ; preds = %26, %73
  %75 = phi i1 [ %67, %73 ], [ true, %26 ]
  %76 = load i8, i8* %18, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %78, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  br i1 %75, label %116, label %82

82:                                               ; preds = %4, %13, %81
  %83 = load i32, i32* %9, align 8
  %84 = call %"class.blink::JSONObject"* @_ZN5blink13CCLayerAsJSONERKN2cc5LayerEj(%"class.cc::Layer"* dereferenceable(232) %1, i32 %83)
  %85 = icmp eq %"class.blink::LayerAsJSONClient"* %3, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = load i32, i32* %9, align 8
  %88 = bitcast %"class.blink::LayerAsJSONClient"* %3 to void (%"class.blink::LayerAsJSONClient"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)***
  %89 = load void (%"class.blink::LayerAsJSONClient"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)**, void (%"class.blink::LayerAsJSONClient"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)*** %88, align 8
  %90 = load void (%"class.blink::LayerAsJSONClient"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)*, void (%"class.blink::LayerAsJSONClient"*, i32, %"class.cc::Layer"*, %"class.blink::JSONObject"*)** %89, align 8
  call void %90(%"class.blink::LayerAsJSONClient"* nonnull %3, i32 %87, %"class.cc::Layer"* dereferenceable(232) %1, %"class.blink::JSONObject"* dereferenceable(56) %84) #8
  br label %91

91:                                               ; preds = %82, %86
  %92 = call i32 @_ZN5blink12LayersAsJSON16AddTransformJSONERKNS_26TransformPaintPropertyNodeE(%"class.blink::LayersAsJSON"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %2)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #8
  call void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"* %84, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 %92) #8
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #8
  br label %112

112:                                              ; preds = %94, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  br label %113

113:                                              ; preds = %112, %91
  %114 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %115 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %114, align 8
  call void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"* %115, %"class.blink::JSONObject"* %84) #8
  br label %116

116:                                              ; preds = %81, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZN5blink12LayersAsJSON8FinalizeEv(%"class.blink::LayersAsJSON"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call noalias i8* @malloc(i64 56) #8
  %5 = bitcast i8* %4 to %"class.blink::JSONObject"*
  tail call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %5) #8
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i64 6) #8
  %7 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %7, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %7, align 8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::JSONArray"* %8) #8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #8
  br label %25

25:                                               ; preds = %1, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %26 = getelementptr inbounds %"class.blink::LayersAsJSON", %"class.blink::LayersAsJSON"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %27, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10) #8
  %33 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %26, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %26, align 8
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::JSONArray"* %33) #8
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %50

50:                                               ; preds = %31, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %50, %25
  ret %"class.blink::JSONObject"* %5
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKv(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10TextStream7ReleaseEv(%"class.WTF::TextStream"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"*, double) local_unnamed_addr #1

declare void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.99"*, %"class.blink::TransformPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.102"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::TransformPaintPropertyNode"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %34, i64 0, i32 0
  %36 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::TransformPaintPropertyNode"*
  %38 = icmp eq %"class.blink::TransformPaintPropertyNode"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::TransformPaintPropertyNode"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::TransformPaintPropertyNode"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %63, i64 0, i32 0
  %65 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %64, align 8
  %66 = icmp eq %"class.blink::TransformPaintPropertyNode"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.102"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.102"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.102"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.102"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } undef, %"struct.WTF::KeyValuePair.102"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } %79, %"struct.WTF::KeyValuePair.102"* %78, 1
  ret { %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.102"*, i8 } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES4_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.99"*, %"class.blink::TransformPaintPropertyNode"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.102"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.102"* @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.99"* %0, %"struct.WTF::KeyValuePair.102"* null)
  %9 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.102"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::TransformPaintPropertyNode"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %39, i64 0, i32 0
  %41 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %40, align 8
  %42 = icmp eq %"class.blink::TransformPaintPropertyNode"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::TransformPaintPropertyNode"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::TransformPaintPropertyNode"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.102"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.102"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::TransformPaintPropertyNode"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::TransformPaintPropertyNode"* %59, inttoptr (i64 -1 to %"class.blink::TransformPaintPropertyNode"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.102"* %60, %"struct.WTF::KeyValuePair.102"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %72, i64 0, i32 0
  %74 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %73, align 8
  %75 = icmp eq %"class.blink::TransformPaintPropertyNode"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.102"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.102"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.102"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.102"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.102"* @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.99"* %0, %"struct.WTF::KeyValuePair.102"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.102"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.102"*, i8 } undef, %"struct.WTF::KeyValuePair.102"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.102"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.102"* @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.99"*, %"struct.WTF::KeyValuePair.102"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink26TransformPaintPropertyNodeEiEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.102"*
  %37 = call %"struct.WTF::KeyValuePair.102"* @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.99"* %0, %"struct.WTF::KeyValuePair.102"* %36, i32 %32, %"struct.WTF::KeyValuePair.102"* %1) #8
  ret %"struct.WTF::KeyValuePair.102"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.102"* @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.99"*, %"struct.WTF::KeyValuePair.102"*, i32, %"struct.WTF::KeyValuePair.102"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.99", align 8
  %6 = bitcast %"class.WTF::HashTable.99"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.99"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.102"* %1, %"struct.WTF::KeyValuePair.102"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.102"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.99"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.99"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.102"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.99"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.99"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.102"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.102"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.102"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.102"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.102"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.102"*, i8 } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.99"* nonnull %5, %"class.blink::TransformPaintPropertyNode"** dereferenceable(8) %53) #8
  %55 = extractvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.102"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.102"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #8
  %58 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.102"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.102"* %55, %"struct.WTF::KeyValuePair.102"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.102"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.102"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.102"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.102"*, i8 } @_ZN3WTF9HashTableIPKN5blink26TransformPaintPropertyNodeENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.99"*, %"class.blink::TransformPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.102"*, %"struct.WTF::KeyValuePair.102"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.99", %"class.WTF::HashTable.99"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::TransformPaintPropertyNode"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.102"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %32, i64 0, i32 0
  %35 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %34, align 8
  %36 = icmp eq %"class.blink::TransformPaintPropertyNode"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::TransformPaintPropertyNode"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.102"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.102"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.102"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.102"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.102"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::TransformPaintPropertyNode"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::TransformPaintPropertyNode"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::TransformPaintPropertyNode"* %63, inttoptr (i64 -1 to %"class.blink::TransformPaintPropertyNode"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.102"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.102", %"struct.WTF::KeyValuePair.102"* %75, i64 0, i32 0
  %78 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %77, align 8
  %79 = icmp eq %"class.blink::TransformPaintPropertyNode"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.102"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.102"*, i8 } undef, %"struct.WTF::KeyValuePair.102"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.102"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.102"*, i8 } %85
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.140"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERjRiEENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.137"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.140"*, %"struct.WTF::KeyValuePair.140"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.140"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.140"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.137"* %0, %"struct.WTF::KeyValuePair.140"* null)
  %9 = load %"struct.WTF::KeyValuePair.140"*, %"struct.WTF::KeyValuePair.140"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.140"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.140"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.140"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.140"* %52, %"struct.WTF::KeyValuePair.140"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.140"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.140"* %59 to i64*
  store i64 0, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.140"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.140"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.137"* %0, %"struct.WTF::KeyValuePair.140"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.140"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.140"*, i8 } undef, %"struct.WTF::KeyValuePair.140"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.140"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.140"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.140"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.137"*, %"struct.WTF::KeyValuePair.140"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiiEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.140"*
  %37 = call %"struct.WTF::KeyValuePair.140"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_(%"class.WTF::HashTable.137"* %0, %"struct.WTF::KeyValuePair.140"* %36, i32 %32, %"struct.WTF::KeyValuePair.140"* %1) #8
  ret %"struct.WTF::KeyValuePair.140"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.140"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_(%"class.WTF::HashTable.137"*, %"struct.WTF::KeyValuePair.140"*, i32, %"struct.WTF::KeyValuePair.140"*) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.140"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.137"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.140"*, %"struct.WTF::KeyValuePair.140"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.140"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.137"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.140"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.137", %"class.WTF::HashTable.137"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.140"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair.140"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair.140"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.140"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.140"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.140"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.140"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.140"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.140"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.140"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.140"*
  %109 = bitcast %"struct.WTF::KeyValuePair.140"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair.140"*, %"struct.WTF::KeyValuePair.140"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.140", %"struct.WTF::KeyValuePair.140"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair.140"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair.140"* %108, %"struct.WTF::KeyValuePair.140"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair.140"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.140"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair.140"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin10SlowMatrixEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin10SlowMatrixEv"}
!6 = distinct !{!6, !7, !"_ZNK5blink26TransformPaintPropertyNode10SlowMatrixEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink26TransformPaintPropertyNode10SlowMatrixEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink26TransformPaintPropertyNode18TransformAndOrigin6OriginEv"}
!11 = distinct !{!11, !12, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink26TransformPaintPropertyNode6OriginEv"}
