; ModuleID = '../../third_party/blink/renderer/core/fetch/readable_stream_bytes_consumer.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/readable_stream_bytes_consumer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.229" }
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.28", i32, [4 x i8], %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.158", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.164", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.200", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.140", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.120", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122", %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { i64 }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { float }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.143", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.164" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.99"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.215" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__cxx_atomic_impl.202" }
%"struct.std::__1::__cxx_atomic_impl.202" = type { %"struct.std::__1::__cxx_atomic_base_impl.203" }
%"struct.std::__1::__cxx_atomic_base_impl.203" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ReadableStreamBytesConsumer" = type <{ %"class.blink::BytesConsumer", %"class.blink::Member", %"class.blink::Member.17", %"class.blink::Member.209", %"class.blink::Member.211", i64, i32, i8, [3 x i8] }>
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ReadableStreamDefaultReader"* }
%"class.blink::ReadableStreamDefaultReader" = type <{ %"class.blink::ReadableStreamGenericReader", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::HeapDeque", i8, [7 x i8] }>
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.2", %"class.blink::Member.4" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::ReadableStream"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.2"*, i32, i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::ScriptState"* }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.213" }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.204", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.26", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.206" }
%"class.blink::Persistent.206" = type { %"class.blink::PersistentBase.207" }
%"class.blink::PersistentBase.207" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.208" }
%"class.base::StrongAlias.208" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias", i8, %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::TraceWrapperV8Reference.10", %"class.std::__1::unique_ptr" }
%"class.base::StrongAlias" = type { i8 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::TraceWrapperV8Reference.10" = type { %"class.v8::TracedReference.11" }
%"class.v8::TracedReference.11" = type { %"class.v8::BasicTracedReference.12" }
%"class.v8::BasicTracedReference.12" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type opaque
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.10" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.220 }
%class.scoped_refptr.220 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.221" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i32 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.17", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.10", %class.scoped_refptr.226 }
%class.scoped_refptr.226 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ScriptFunction" = type { %"class.blink::CustomWrappableAdapter", %"class.blink::Member.17" }
%"class.blink::CustomWrappableAdapter" = type { %"class.blink::CustomWrappable", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::CustomWrappable" = type { %"class.blink::NameClient" }
%"class.v8::Function" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.262", %"class.blink::FreeList", %"class.WTF::Vector.267" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.229" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.235", [4 x i8], %"class.WTF::Vector.237", i64, %"class.WTF::Vector.240", i8, [7 x i8] }>
%"class.WTF::RefCounted.235" = type { %"class.base::RefCounted.236" }
%"class.base::RefCounted.236" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.240", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.228, i64, i64, %"class.absl::optional", %class.scoped_refptr.246 }
%class.scoped_refptr.228 = type { %"class.blink::BlobDataHandle"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.245" }
%"class.base::time_internal::TimeBase.245" = type { i64 }
%class.scoped_refptr.246 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242" }
%"class.WTF::VectorBufferBase.242" = type { i8*, i32, i32 }
%"class.mojo::ScopedHandleBase.249" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.284 }
%union.anon.284 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::ReadableStreamBytesConsumer::OnFulfilled" = type { %"class.blink::ScriptFunction", %"class.blink::Member.260" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::ReadableStreamBytesConsumer"* }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::ReadableStreamBytesConsumer::OnRejected" = type { %"class.blink::ScriptFunction", %"class.blink::Member.260" }

$_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE = comdat any

$_ZN5blink13BytesConsumer15DrainAsFormDataEv = comdat any

$_ZN5blink13BytesConsumer15DrainAsDataPipeEv = comdat any

$_ZNK5blink27ReadableStreamBytesConsumer9DebugNameEv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15CustomWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15CustomWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15CustomWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15CustomWrappableEE7GetNameEPKv = comdat any

$_ZNK5blink14ScriptFunction18NameInHeapSnapshotEv = comdat any

$_ZN5blink27ReadableStreamBytesConsumer11OnFulfilledD0Ev = comdat any

$_ZNK5blink27ReadableStreamBytesConsumer11OnFulfilled5TraceEPNS_7VisitorE = comdat any

$_ZN5blink27ReadableStreamBytesConsumer11OnFulfilled4CallENS_11ScriptValueE = comdat any

$_ZN5blink10TraceTraitINS_27ReadableStreamBytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink15CustomWrappableD2Ev = comdat any

$_ZN5blink27ReadableStreamBytesConsumer10OnRejectedD0Ev = comdat any

$_ZNK5blink27ReadableStreamBytesConsumer10OnRejected5TraceEPNS_7VisitorE = comdat any

$_ZN5blink27ReadableStreamBytesConsumer10OnRejected4CallENS_11ScriptValueE = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_27ReadableStreamDefaultReaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink27ReadableStreamBytesConsumer11OnFulfilledE = comdat any

$_ZTVN5blink27ReadableStreamBytesConsumer10OnRejectedE = comdat any

@_ZTVN5blink27ReadableStreamBytesConsumerE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZN5blink27ReadableStreamBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZN5blink27ReadableStreamBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::ReadableStreamBytesConsumer"*, i8**, i64*)* @_ZN5blink27ReadableStreamBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::ReadableStreamBytesConsumer"*, i64)* @_ZN5blink27ReadableStreamBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.249"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink27ReadableStreamBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZN5blink27ReadableStreamBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZN5blink27ReadableStreamBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZNK5blink27ReadableStreamBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZNK5blink27ReadableStreamBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZNK5blink27ReadableStreamBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink27ReadableStreamBytesConsumer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Failed to read from a ReadableStream.\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15CustomWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15CustomWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15CustomWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink27ReadableStreamBytesConsumer11OnFulfilledE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptFunction"*)* @_ZNK5blink14ScriptFunction18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CustomWrappable"*)* @_ZN5blink15CustomWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*)* @_ZN5blink27ReadableStreamBytesConsumer11OnFulfilledD0Ev to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*, %"class.blink::Visitor"*)* @_ZNK5blink27ReadableStreamBytesConsumer11OnFulfilled5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*, %"class.blink::ScriptValue"*)* @_ZN5blink27ReadableStreamBytesConsumer11OnFulfilled4CallENS_11ScriptValueE to i8*), i8* bitcast (void (%"class.blink::ScriptFunction"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN5blink14ScriptFunction7CallRawERKN2v820FunctionCallbackInfoINS1_5ValueEEE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"ScriptFunction\00", align 1
@_ZTVN5blink27ReadableStreamBytesConsumer10OnRejectedE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptFunction"*)* @_ZNK5blink14ScriptFunction18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CustomWrappable"*)* @_ZN5blink15CustomWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer::OnRejected"*)* @_ZN5blink27ReadableStreamBytesConsumer10OnRejectedD0Ev to i8*), i8* bitcast (void (%"class.blink::ReadableStreamBytesConsumer::OnRejected"*, %"class.blink::Visitor"*)* @_ZNK5blink27ReadableStreamBytesConsumer10OnRejected5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ReadableStreamBytesConsumer::OnRejected"*, %"class.blink::ScriptValue"*)* @_ZN5blink27ReadableStreamBytesConsumer10OnRejected4CallENS_11ScriptValueE to i8*), i8* bitcast (void (%"class.blink::ScriptFunction"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN5blink14ScriptFunction7CallRawERKN2v820FunctionCallbackInfoINS1_5ValueEEE to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"ReadableStreamBytesConsumer\00", align 1

@_ZN5blink27ReadableStreamBytesConsumerC1EPNS_11ScriptStateEPNS_14ReadableStreamE = hidden unnamed_addr alias void (%"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ScriptState"*, %"class.blink::ReadableStream"*), void (%"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ScriptState"*, %"class.blink::ReadableStream"*)* @_ZN5blink27ReadableStreamBytesConsumerC2EPNS_11ScriptStateEPNS_14ReadableStreamE
@_ZN5blink27ReadableStreamBytesConsumerD1Ev = hidden unnamed_addr alias void (%"class.blink::ReadableStreamBytesConsumer"*), void (%"class.blink::ReadableStreamBytesConsumer"*)* @_ZN5blink27ReadableStreamBytesConsumerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumerC2EPNS_11ScriptStateEPNS_14ReadableStreamE(%"class.blink::ReadableStreamBytesConsumer"* nocapture, %"class.blink::ScriptState"*, %"class.blink::ReadableStream"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink27ReadableStreamBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.blink::ReadableStreamDefaultReader"* @_ZN5blink14ReadableStream25GetReaderNotForAuthorCodeEPNS_11ScriptStateE(%"class.blink::ReadableStream"* %2, %"class.blink::ScriptState"* %1) #10
  %6 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ReadableStreamDefaultReader"* %5, %"class.blink::ReadableStreamDefaultReader"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = bitcast %"class.blink::BytesConsumer::Client"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 29, i1 false)
  ret void
}

declare %"class.blink::ReadableStreamDefaultReader"* @_ZN5blink14ReadableStream25GetReaderNotForAuthorCodeEPNS_11ScriptStateE(%"class.blink::ReadableStream"*, %"class.blink::ScriptState"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumerD2Ev(%"class.blink::ReadableStreamBytesConsumer"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumerD0Ev(%"class.blink::ReadableStreamBytesConsumer"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27ReadableStreamBytesConsumer9BeginReadEPPKcPm(%"class.blink::ReadableStreamBytesConsumer"*, i8** nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.blink::ScriptPromise", align 8
  %7 = alloca %"class.blink::ScriptPromise", align 8
  %8 = alloca %"class.blink::ScriptPromise", align 8
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %9 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %12 [
    i32 2, label %209
    i32 1, label %11
  ]

11:                                               ; preds = %3
  br label %209

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %13, align 8
  %15 = icmp eq %"class.blink::DOMTypedArray"* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %14, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %18, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  store i32 2, i32* %9, align 8
  %23 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %24 = bitcast %"class.blink::Member.209"* %23 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member"* %25 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %209

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %14, i64 0, i32 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8* %32, i8** %1, align 8
  %33 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %13, align 8
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %33, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %33, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %27, %39
  %43 = phi i64 [ %41, %39 ], [ 0, %27 ]
  %44 = load i64, i64* %30, align 8
  %45 = sub i64 %43, %44
  store i64 %45, i64* %2, align 8
  br label %209

46:                                               ; preds = %12
  %47 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 7
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %209

50:                                               ; preds = %46
  store i8 1, i8* %47, align 4
  %51 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #10
  %52 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 32, i1 false)
  %55 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %53, align 8
  %56 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %57 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %55, i64 0, i32 0
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %57, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %56, %"class.v8::Isolate"* %58) #10
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %55, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %50
  %63 = bitcast %"class.blink::ScriptState"* %55 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #10
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %50, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %50 ]
  store %"class.v8::Context"* %70, %"class.v8::Context"** %52, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %70) #10
  %71 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %71) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 72, i1 false)
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %53, align 8
  %73 = bitcast %"class.blink::ScriptState"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 1, i16* %76, align 8
  %77 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %77, align 2
  %78 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %79 = bitcast i8** %78 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)>, <2 x i8*>* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %80, align 8
  %81 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  %82 = bitcast %"class.v8::Isolate"** %81 to i64*
  store i64 %74, i64* %82, align 8
  %83 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %85 = bitcast %"class.WTF::StringImpl"** %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #10
  %86 = bitcast %"class.blink::ScriptPromise"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1, i32 1, i32 1, i32 0
  %88 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %89 = bitcast %"class.blink::ScriptPromise"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 32, i1 false)
  %90 = load %"class.blink::ReadableStreamDefaultReader"*, %"class.blink::ReadableStreamDefaultReader"** %88, align 8
  call void @_ZN5blink27ReadableStreamDefaultReader4readEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %6, %"class.blink::ReadableStreamDefaultReader"* %90, %"class.blink::ScriptState"* %72, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %91 = load i32, i32* %83, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %124, label %93

93:                                               ; preds = %69
  %94 = bitcast %"class.blink::ScriptPromise"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #10
  %95 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %53, align 8
  call void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %7, %"class.blink::ScriptState"* %95, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %96 = bitcast %"class.blink::ScriptPromise"* %7 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::ScriptPromise"* %6 to i64*
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %93
  %102 = inttoptr i64 %97 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #10
  br label %104

104:                                              ; preds = %93, %101
  %105 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1
  %106 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1
  %107 = bitcast %"class.blink::ScriptValue"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::ScriptValue"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1, i32 1
  %111 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1, i32 1
  %112 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %110, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %111) #10
  %113 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 0, i32 1, i32 1, i32 1, i32 0
  %114 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %113, align 8
  %115 = icmp eq %"class.blink::DOMWrapperWorld"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %114, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #10
  %118 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %114) #10
  %122 = bitcast %"class.blink::DOMWrapperWorld"* %114 to i8*
  call void @free(i8* %122) #10
  br label %123

123:                                              ; preds = %104, %116, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #10
  br label %124

124:                                              ; preds = %69, %123
  %125 = bitcast %"class.blink::ScriptPromise"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #10
  %126 = bitcast %"class.blink::ScriptState"** %53 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = ptrtoint %"class.blink::ReadableStreamBytesConsumer"* %0 to i64
  %129 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15CustomWrappableEEEPhm(i64 32) #10
  %130 = bitcast i8* %129 to i32 (...)***
  %131 = getelementptr inbounds i8, i8* %129, i64 8
  %132 = bitcast i8* %131 to i64**
  store i64* null, i64** %132, align 8
  %133 = getelementptr inbounds i8, i8* %129, i64 16
  %134 = bitcast i8* %133 to i64*
  store i64 %127, i64* %134, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink27ReadableStreamBytesConsumer11OnFulfilledE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %135 = getelementptr inbounds i8, i8* %129, i64 24
  %136 = bitcast i8* %135 to i64*
  store i64 %128, i64* %136, align 8
  %137 = getelementptr inbounds i8, i8* %129, i64 -4
  %138 = bitcast i8* %137 to i16*
  %139 = load atomic i16, i16* %138 monotonic, align 2
  %140 = or i16 %139, 1
  store atomic i16 %140, i16* %138 release, align 2
  %141 = bitcast i8* %129 to %"class.blink::ScriptFunction"*
  %142 = call %"class.v8::Function"* @_ZN5blink14ScriptFunction16BindToV8FunctionEi(%"class.blink::ScriptFunction"* %141, i32 0) #10
  %143 = load i64, i64* %126, align 8
  %144 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15CustomWrappableEEEPhm(i64 32) #10
  %145 = bitcast i8* %144 to i32 (...)***
  %146 = getelementptr inbounds i8, i8* %144, i64 8
  %147 = bitcast i8* %146 to i64**
  store i64* null, i64** %147, align 8
  %148 = getelementptr inbounds i8, i8* %144, i64 16
  %149 = bitcast i8* %148 to i64*
  store i64 %143, i64* %149, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink27ReadableStreamBytesConsumer10OnRejectedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %150 = getelementptr inbounds i8, i8* %144, i64 24
  %151 = bitcast i8* %150 to i64*
  store i64 %128, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %144, i64 -4
  %153 = bitcast i8* %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = or i16 %154, 1
  store atomic i16 %155, i16* %153 release, align 2
  %156 = bitcast i8* %144 to %"class.blink::ScriptFunction"*
  %157 = call %"class.v8::Function"* @_ZN5blink14ScriptFunction16BindToV8FunctionEi(%"class.blink::ScriptFunction"* %156, i32 0) #10
  call void @_ZN5blink13ScriptPromise4ThenEN2v85LocalINS1_8FunctionEEES4_(%"class.blink::ScriptPromise"* nonnull sret %8, %"class.blink::ScriptPromise"* nonnull %6, %"class.v8::Function"* %142, %"class.v8::Function"* %157) #10
  call void @_ZN5blink13ScriptPromise13MarkAsHandledEv(%"class.blink::ScriptPromise"* nonnull %8) #10
  %158 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %8, i64 0, i32 1, i32 1, i32 1, i32 0
  %159 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %158, align 8
  %160 = icmp eq %"class.blink::DOMWrapperWorld"* %159, null
  br i1 %160, label %168, label %161

161:                                              ; preds = %124
  %162 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %159, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %162) #10
  %163 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %161
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %159) #10
  %167 = bitcast %"class.blink::DOMWrapperWorld"* %159 to i8*
  call void @free(i8* %167) #10
  br label %168

168:                                              ; preds = %124, %161, %166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #10
  %169 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %87, align 8
  %170 = icmp eq %"class.blink::DOMWrapperWorld"* %169, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %169, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %172) #10
  %173 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %169) #10
  %177 = bitcast %"class.blink::DOMWrapperWorld"* %169 to i8*
  call void @free(i8* %177) #10
  br label %178

178:                                              ; preds = %168, %171, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %179 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %180 = load i64*, i64** %179, align 8
  %181 = icmp eq i64* %180, null
  br i1 %181, label %191, label %182

182:                                              ; preds = %178
  %183 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %81, align 8
  %184 = bitcast %"class.v8::Isolate"* %183 to %"class.v8::internal::Isolate"*
  %185 = load i64, i64* %180, align 8
  %186 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %184, i64 %185) #10
  %187 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %183) #10
  br i1 %187, label %191, label %188

188:                                              ; preds = %182
  %189 = bitcast i64* %186 to %"class.v8::Value"*
  %190 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %183, %"class.v8::Value"* %189) #10
  br label %191

191:                                              ; preds = %188, %182, %178
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #10
  br label %207

207:                                              ; preds = %191, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %71) #10
  %208 = load %"class.v8::Context"*, %"class.v8::Context"** %52, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %208) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #10
  br label %209

209:                                              ; preds = %207, %46, %3, %42, %22, %11
  %210 = phi i32 [ 2, %11 ], [ 3, %22 ], [ 0, %42 ], [ 3, %3 ], [ 1, %46 ], [ 1, %207 ]
  ret i32 %210
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer10SetErroredEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  store i32 2, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.209"* %3 to i64*
  store atomic i64 0, i64* %4 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink27ReadableStreamDefaultReader4readEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ReadableStreamDefaultReader"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink13ScriptPromise4ThenEN2v85LocalINS1_8FunctionEEES4_(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise"*, %"class.v8::Function"*, %"class.v8::Function"*) local_unnamed_addr #1

declare void @_ZN5blink13ScriptPromise13MarkAsHandledEv(%"class.blink::ScriptPromise"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink27ReadableStreamBytesConsumer7EndReadEm(%"class.blink::ReadableStreamBytesConsumer"* nocapture, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::Member.211", %"class.blink::Member.211"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  store i32 2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %14 = bitcast %"class.blink::Member.209"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  br label %31

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %1
  store i64 %20, i64* %18, align 8
  %21 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %5, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %20, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %17, %25
  %30 = bitcast %"class.blink::Member.211"* %3 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store i64 0, i64* %18, align 8
  br label %31

31:                                               ; preds = %29, %25, %11
  %32 = phi i32 [ 3, %11 ], [ 0, %25 ], [ 0, %29 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::ReadableStreamBytesConsumer"* nocapture, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::BytesConsumer::Client"* %1 to i64
  %5 = bitcast %"class.blink::Member.209"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::BytesConsumer::Client"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer11ClearClientEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::Member.209"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer6CancelEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  store i32 1, i32* %2, align 8
  %7 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %8 = bitcast %"class.blink::Member.209"* %7 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %10 = bitcast %"class.blink::Member"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink27ReadableStreamBytesConsumer14GetPublicStateEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink27ReadableStreamBytesConsumer8GetErrorEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37) #10
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %7, %22
  %27 = phi %"class.WTF::StringImpl"* [ %24, %22 ], [ %5, %7 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %26
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %26
  %37 = phi i32 [ %35, %34 ], [ %33, %26 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %40

40:                                               ; preds = %1, %22, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27ReadableStreamBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::ReadableStreamBytesConsumer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27ReadableStreamDefaultReaderEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.209"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #10, !range !4
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #10
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 4
  %86 = bitcast %"class.blink::Member.211"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %90, i8* nonnull %90, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %95

95:                                               ; preds = %84, %89
  %96 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 2
  %97 = bitcast %"class.blink::Member.17"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #10
  br label %106

106:                                              ; preds = %95, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer6OnReadEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEE(%"class.blink::ReadableStreamBytesConsumer"* nocapture, %"class.blink::DOMTypedArray"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 7
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 4
  %9 = ptrtoint %"class.blink::DOMTypedArray"* %1 to i64
  %10 = bitcast %"class.blink::Member.211"* %8 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.blink::DOMTypedArray"* %1 to i8*
  %15 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #10
  br label %16

16:                                               ; preds = %7, %13
  %17 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %17, align 8
  %19 = icmp eq %"class.blink::BytesConsumer::Client"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::BytesConsumer::Client"* %18 to void (%"class.blink::BytesConsumer::Client"*)***
  %22 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %22, i64 3
  %24 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %23, align 8
  tail call void %24(%"class.blink::BytesConsumer::Client"* nonnull %18) #10
  br label %25

25:                                               ; preds = %16, %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer10OnReadDoneEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  store i32 1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::Member"* %7 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %12 = bitcast %"class.blink::Member.209"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = icmp eq %"class.blink::BytesConsumer::Client"* %10, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::BytesConsumer::Client"* %10 to void (%"class.blink::BytesConsumer::Client"*)***
  %16 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %16, i64 3
  %18 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %17, align 8
  tail call void %18(%"class.blink::BytesConsumer::Client"* nonnull %10) #10
  br label %19

19:                                               ; preds = %14, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReadableStreamBytesConsumer10OnRejectedEv(%"class.blink::ReadableStreamBytesConsumer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %7, align 8
  store i32 2, i32* %3, align 8
  %9 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 3
  %10 = bitcast %"class.blink::Member.209"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::Member"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = icmp eq %"class.blink::BytesConsumer::Client"* %8, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::BytesConsumer::Client"* %8 to void (%"class.blink::BytesConsumer::Client"*)***
  %16 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %16, i64 3
  %18 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %17, align 8
  tail call void %18(%"class.blink::BytesConsumer::Client"* nonnull %8) #10
  br label %19

19:                                               ; preds = %14, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BlobDataHandle"* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE(%"class.blink::BytesConsumer"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::BlobDataHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EncodedFormData"* @_ZN5blink13BytesConsumer15DrainAsFormDataEv(%"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EncodedFormData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumer15DrainAsDataPipeEv(%"class.mojo::ScopedHandleBase.249"* noalias sret, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::ScopedHandleBase.249", %"class.mojo::ScopedHandleBase.249"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink27ReadableStreamBytesConsumer9DebugNameEv(%"class.blink::ReadableStreamBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i64 27) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #10
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #10
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.10"* dereferenceable(8) %3) #10
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.226* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.226, %class.scoped_refptr.226* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #10
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.10"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare %"class.v8::Function"* @_ZN5blink14ScriptFunction16BindToV8FunctionEi(%"class.blink::ScriptFunction"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15CustomWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.221"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15CustomWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.221"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CustomWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CustomWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CustomWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15CustomWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CustomWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::CustomWrappable"*)***
  %4 = load void (%"class.blink::CustomWrappable"*)**, void (%"class.blink::CustomWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CustomWrappable"*)*, void (%"class.blink::CustomWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::CustomWrappable"*)*, void (%"class.blink::CustomWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::CustomWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15CustomWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.221"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14ScriptFunction18NameInHeapSnapshotEv(%"class.blink::ScriptFunction"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ReadableStreamBytesConsumer11OnFulfilledD0Ev(%"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*) unnamed_addr #8 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink27ReadableStreamBytesConsumer11OnFulfilled5TraceEPNS_7VisitorE(%"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.260"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27ReadableStreamBytesConsumerEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %0, i64 0, i32 0
  tail call void @_ZNK5blink14ScriptFunction5TraceEPNS_7VisitorE(%"class.blink::ScriptFunction"* %14, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ReadableStreamBytesConsumer11OnFulfilled4CallENS_11ScriptValueE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"*, %"class.blink::ScriptValue"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %5 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %5) #10
  br i1 %6, label %29, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ReadableStreamBytesConsumer"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %9, i64 0, i32 7
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %9, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %9, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %15, align 8
  store i32 2, i32* %11, align 8
  %17 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %9, i64 0, i32 3
  %18 = bitcast %"class.blink::Member.209"* %17 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %9, i64 0, i32 1
  %20 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  %21 = icmp eq %"class.blink::BytesConsumer::Client"* %16, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::BytesConsumer::Client"* %16 to void (%"class.blink::BytesConsumer::Client"*)***
  %24 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %24, i64 3
  %26 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %25, align 8
  tail call void %26(%"class.blink::BytesConsumer::Client"* nonnull %16) #10
  br label %27

27:                                               ; preds = %7, %14, %22
  %28 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false)
  br label %169

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %30, align 8
  %32 = bitcast %"class.v8::Value"* %5 to %"class.v8::Object"*
  %33 = call %"class.v8::Value"* @_ZN5blink22V8UnpackIteratorResultEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPb(%"class.blink::ScriptState"* %31, %"class.v8::Object"* %32, i8* nonnull %4) #10
  %34 = icmp eq %"class.v8::Value"* %33, null
  br i1 %34, label %35, label %57

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %1, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ReadableStreamBytesConsumer"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %37, i64 0, i32 7
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %37, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %55, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %37, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %43, align 8
  store i32 2, i32* %39, align 8
  %45 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %37, i64 0, i32 3
  %46 = bitcast %"class.blink::Member.209"* %45 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %37, i64 0, i32 1
  %48 = bitcast %"class.blink::Member"* %47 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  %49 = icmp eq %"class.blink::BytesConsumer::Client"* %44, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::BytesConsumer::Client"* %44 to void (%"class.blink::BytesConsumer::Client"*)***
  %52 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %52, i64 3
  %54 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %53, align 8
  call void %54(%"class.blink::BytesConsumer::Client"* nonnull %44) #10
  br label %55

55:                                               ; preds = %35, %42, %50
  %56 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false)
  br label %169

57:                                               ; preds = %29
  %58 = load i8, i8* %4, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %100, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ReadableStreamBytesConsumer"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %62, i64 0, i32 7
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %62, i64 0, i32 6
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %80, label %67

67:                                               ; preds = %60
  store i32 1, i32* %64, align 8
  %68 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %62, i64 0, i32 1
  %69 = bitcast %"class.blink::Member"* %68 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  %70 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %62, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %62, i64 0, i32 3
  %73 = bitcast %"class.blink::Member.209"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  %74 = icmp eq %"class.blink::BytesConsumer::Client"* %71, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %67
  %76 = bitcast %"class.blink::BytesConsumer::Client"* %71 to void (%"class.blink::BytesConsumer::Client"*)***
  %77 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %77, i64 3
  %79 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %78, align 8
  call void %79(%"class.blink::BytesConsumer::Client"* nonnull %71) #10
  br label %80

80:                                               ; preds = %60, %67, %75
  %81 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::ScriptValue"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  %85 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %86, align 8
  %87 = icmp eq %"class.blink::ScriptValue"* %0, %2
  br i1 %87, label %93, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %89, i64** %86) #10
  br label %93

93:                                               ; preds = %92, %88, %80
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.10"* dereferenceable(8) %85) #10
  %94 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %95 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %95, %"class.blink::DOMWrapperWorld"** %96, align 8
  %97 = icmp eq %"class.blink::DOMWrapperWorld"* %95, null
  br i1 %97, label %169, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %95, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #10
  br label %169

100:                                              ; preds = %57
  %101 = call zeroext i1 @_ZNK2v85Value12IsUint8ArrayEv(%"class.v8::Value"* nonnull %33) #10
  %102 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnFulfilled", %"class.blink::ReadableStreamBytesConsumer::OnFulfilled"* %1, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ReadableStreamBytesConsumer"** %102, align 8
  br i1 %101, label %124, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 7
  store i8 0, i8* %105, align 4
  %106 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 6
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %110, align 8
  store i32 2, i32* %106, align 8
  %112 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 3
  %113 = bitcast %"class.blink::Member.209"* %112 to i64*
  store atomic i64 0, i64* %113 monotonic, align 8
  %114 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 1
  %115 = bitcast %"class.blink::Member"* %114 to i64*
  store atomic i64 0, i64* %115 monotonic, align 8
  %116 = icmp eq %"class.blink::BytesConsumer::Client"* %111, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %109
  %118 = bitcast %"class.blink::BytesConsumer::Client"* %111 to void (%"class.blink::BytesConsumer::Client"*)***
  %119 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %119, i64 3
  %121 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %120, align 8
  call void %121(%"class.blink::BytesConsumer::Client"* nonnull %111) #10
  br label %122

122:                                              ; preds = %104, %109, %117
  %123 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false)
  br label %169

124:                                              ; preds = %100
  %125 = bitcast %"class.v8::Value"* %33 to %"class.v8::Object"*
  %126 = call %"class.blink::DOMTypedArray"* @_ZN5blink12V8Uint8Array6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* nonnull %125) #10
  %127 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 7
  store i8 0, i8* %127, align 4
  %128 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 6
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %149, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 4
  %133 = ptrtoint %"class.blink::DOMTypedArray"* %126 to i64
  %134 = bitcast %"class.blink::Member.211"* %132 to i64*
  store atomic i64 %133, i64* %134 monotonic, align 8
  %135 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = bitcast %"class.blink::DOMTypedArray"* %126 to i8*
  %139 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %138) #10
  br label %140

140:                                              ; preds = %137, %131
  %141 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %103, i64 0, i32 3, i32 0, i32 0
  %142 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %141, align 8
  %143 = icmp eq %"class.blink::BytesConsumer::Client"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.blink::BytesConsumer::Client"* %142 to void (%"class.blink::BytesConsumer::Client"*)***
  %146 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %146, i64 3
  %148 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %147, align 8
  call void %148(%"class.blink::BytesConsumer::Client"* nonnull %142) #10
  br label %149

149:                                              ; preds = %124, %140, %144
  %150 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.blink::ScriptValue"* %0 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  %154 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %153, i64 0, i32 0
  %155 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %155, align 8
  %156 = icmp eq %"class.blink::ScriptValue"* %0, %2
  br i1 %156, label %162, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %158, i64** %155) #10
  br label %162

162:                                              ; preds = %161, %157, %149
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.10"* dereferenceable(8) %154) #10
  %163 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %164 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %164, %"class.blink::DOMWrapperWorld"** %165, align 8
  %166 = icmp eq %"class.blink::DOMWrapperWorld"* %164, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %164, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %168) #10
  br label %169

169:                                              ; preds = %55, %122, %93, %98, %162, %167, %27
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  ret void
}

declare void @_ZN5blink14ScriptFunction7CallRawERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.blink::ScriptFunction"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK5blink14ScriptFunction5TraceEPNS_7VisitorE(%"class.blink::ScriptFunction"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27ReadableStreamBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ReadableStreamBytesConsumer"*
  tail call void @_ZNK5blink27ReadableStreamBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::ReadableStreamBytesConsumer"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink22V8UnpackIteratorResultEPNS_11ScriptStateEN2v85LocalINS2_6ObjectEEEPb(%"class.blink::ScriptState"*, %"class.v8::Object"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12IsUint8ArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.blink::DOMTypedArray"* @_ZN5blink12V8Uint8Array6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CustomWrappableD2Ev(%"class.blink::CustomWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ReadableStreamBytesConsumer10OnRejectedD0Ev(%"class.blink::ReadableStreamBytesConsumer::OnRejected"*) unnamed_addr #8 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink27ReadableStreamBytesConsumer10OnRejected5TraceEPNS_7VisitorE(%"class.blink::ReadableStreamBytesConsumer::OnRejected"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnRejected", %"class.blink::ReadableStreamBytesConsumer::OnRejected"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.260"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27ReadableStreamBytesConsumerEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnRejected", %"class.blink::ReadableStreamBytesConsumer::OnRejected"* %0, i64 0, i32 0
  tail call void @_ZNK5blink14ScriptFunction5TraceEPNS_7VisitorE(%"class.blink::ScriptFunction"* %14, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ReadableStreamBytesConsumer10OnRejected4CallENS_11ScriptValueE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ReadableStreamBytesConsumer::OnRejected"*, %"class.blink::ScriptValue"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer::OnRejected", %"class.blink::ReadableStreamBytesConsumer::OnRejected"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ReadableStreamBytesConsumer"*, %"class.blink::ReadableStreamBytesConsumer"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %5, i64 0, i32 7
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %5, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %5, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %11, align 8
  store i32 2, i32* %7, align 8
  %13 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %5, i64 0, i32 3
  %14 = bitcast %"class.blink::Member.209"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::ReadableStreamBytesConsumer", %"class.blink::ReadableStreamBytesConsumer"* %5, i64 0, i32 1
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = icmp eq %"class.blink::BytesConsumer::Client"* %12, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::BytesConsumer::Client"* %12 to void (%"class.blink::BytesConsumer::Client"*)***
  %20 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %20, i64 3
  %22 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %21, align 8
  tail call void %22(%"class.blink::BytesConsumer::Client"* nonnull %12) #10
  br label %23

23:                                               ; preds = %3, %10, %18
  %24 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ScriptValue"* %0 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %29, align 8
  %30 = icmp eq %"class.blink::ScriptValue"* %0, %2
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = icmp eq i64* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %32, i64** %29) #10
  br label %36

36:                                               ; preds = %35, %31, %23
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.10"* dereferenceable(8) %28) #10
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %38 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %38, %"class.blink::DOMWrapperWorld"** %39, align 8
  %40 = icmp eq %"class.blink::DOMWrapperWorld"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  br label %43

43:                                               ; preds = %36, %41
  ret void
}

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27ReadableStreamDefaultReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ReadableStreamDefaultReader"*
  %4 = bitcast i8* %1 to void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)**, void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)*, void (%"class.blink::ReadableStreamDefaultReader"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ReadableStreamDefaultReader"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i32 24, i32 33}
