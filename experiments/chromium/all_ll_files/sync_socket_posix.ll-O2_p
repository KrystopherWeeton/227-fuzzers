; ModuleID = '../../base/sync_socket_posix.cc'
source_filename = "../../base/sync_socket_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::SyncSocket" = type { i32 (...)**, %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.0 }
%struct.anon.0 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.pollfd = type { i32, i16, i16 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::CancelableSyncSocket" = type { %"class.base::SyncSocket" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.22 }
%struct.anon.22 = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base20CancelableSyncSocketD0Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZN4base10SyncSocket14kInvalidHandleE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [5 x i8] c"Send\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"../../base/sync_socket_posix.cc\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Receive\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"ReceiveWithTimeout\00", align 1
@_ZTVN4base20CancelableSyncSocketE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SyncSocket"*)* @_ZN4base10SyncSocketD2Ev to i8*), i8* bitcast (void (%"class.base::CancelableSyncSocket"*)* @_ZN4base20CancelableSyncSocketD0Ev to i8*), i8* bitcast (void (%"class.base::SyncSocket"*)* @_ZN4base10SyncSocket5CloseEv to i8*), i8* bitcast (i64 (%"class.base::CancelableSyncSocket"*, i8*, i64)* @_ZN4base20CancelableSyncSocket4SendEPKvm to i8*), i8* bitcast (i64 (%"class.base::SyncSocket"*, i8*, i64)* @_ZN4base10SyncSocket7ReceiveEPvm to i8*), i8* bitcast (i64 (%"class.base::SyncSocket"*, i8*, i64, i64)* @_ZN4base10SyncSocket18ReceiveWithTimeoutEPvmNS_9TimeDeltaE to i8*), i8* bitcast (i64 (%"class.base::SyncSocket"*)* @_ZN4base10SyncSocket4PeekEv to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base10SyncSocket10CreatePairEPS0_S1_(%"class.base::SyncSocket"*, %"class.base::SyncSocket"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.base::ScopedGeneric"], align 16
  %4 = alloca [2 x i32], align 4
  %5 = bitcast [2 x %"class.base::ScopedGeneric"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0
  %7 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1
  %9 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1, i32 1, i32 0
  %10 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0, i32 0
  %11 = bitcast [2 x %"class.base::ScopedGeneric"]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 16
  %12 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0, i32 1, i32 0
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0, i32 2
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 16
  %15 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1, i32 1, i32 0
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1, i32 2
  store i8 0, i8* %16, align 4
  %17 = bitcast [2 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  %19 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1
  %20 = load i32, i32* @_ZN4base10SyncSocket14kInvalidHandleE, align 4
  store i32 %20, i32* %18, align 4
  store i32 %20, i32* %19, align 4
  %21 = call i32 @socketpair(i32 1, i32 1, i32 0, i32* nonnull %18) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %71

23:                                               ; preds = %2
  %24 = load i32, i32* %18, align 4
  store i32 %24, i32* %7, align 8
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %35, label %26

26:                                               ; preds = %23
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %24) #10
  %27 = load i32, i32* %9, align 8
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %19, align 4
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @abort() #11
  unreachable

33:                                               ; preds = %29
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %8, i32 %27) #10
  %34 = load i32, i32* %9, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %34) #10
  store i32 -1, i32* %9, align 8
  br label %35

35:                                               ; preds = %23, %33, %26
  %36 = load i32, i32* %19, align 4
  store i32 %36, i32* %9, align 8
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %8, i32 %36) #10
  br label %39

39:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %40 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1
  %41 = load i32, i32* %7, align 8
  store i32 -1, i32* %7, align 8
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %41) #10
  br label %44

44:                                               ; preds = %43, %39
  %45 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %46, %41
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  call void @abort() #11
  unreachable

51:                                               ; preds = %48
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %40, i32 %46) #10
  %52 = load i32, i32* %45, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %52) #10
  store i32 -1, i32* %45, align 8
  br label %53

53:                                               ; preds = %51, %44
  store i32 %41, i32* %45, align 8
  br i1 %42, label %55, label %54

54:                                               ; preds = %53
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %40, i32 %41) #10
  br label %55

55:                                               ; preds = %53, %54
  %56 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %1, i64 0, i32 1
  %57 = load i32, i32* %9, align 8
  store i32 -1, i32* %9, align 8
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %8, i32 %57) #10
  br label %60

60:                                               ; preds = %59, %55
  %61 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %1, i64 0, i32 1, i32 1, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = icmp eq i32 %62, %57
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  call void @abort() #11
  unreachable

67:                                               ; preds = %64
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %56, i32 %62) #10
  %68 = load i32, i32* %61, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %68) #10
  store i32 -1, i32* %61, align 8
  br label %69

69:                                               ; preds = %67, %60
  store i32 %57, i32* %61, align 8
  br i1 %58, label %72, label %70

70:                                               ; preds = %69
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %56, i32 %57) #10
  br label %72

71:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %72

72:                                               ; preds = %70, %69, %71
  %73 = phi i1 [ false, %71 ], [ true, %69 ], [ true, %70 ]
  %74 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 1
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %74) #10
  %75 = getelementptr inbounds [2 x %"class.base::ScopedGeneric"], [2 x %"class.base::ScopedGeneric"]* %3, i64 0, i64 0
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret i1 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @socketpair(i32, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i64 44) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #10
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #10
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10SyncSocket5CloseEv(%"class.base::SyncSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %6, i32 %3) #10
  %7 = load i32, i32* %2, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %7) #10
  store i32 -1, i32* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  store i32 -1, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base10SyncSocket4SendEPKvm(%"class.base::SyncSocket"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 94) #10
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call zeroext i1 @_ZN4base19WriteFileDescriptorEiNS_4spanIKhLm18446744073709551615EEE(i32 %9, i64 %2, i8* %1) #10
  %11 = select i1 %10, i64 %2, i64 0
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret i64 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base10SyncSocket6handleEv(%"class.base::SyncSocket"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base10SyncSocket7ReceiveEPvm(%"class.base::SyncSocket"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call zeroext i1 @_ZN4base10ReadFromFDEiPcm(i32 %9, i8* %1, i64 %2) #10
  %11 = select i1 %10, i64 %2, i64 0
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret i64 %11
}

declare zeroext i1 @_ZN4base10ReadFromFDEiPcm(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base10SyncSocket18ReceiveWithTimeoutEPvmNS_9TimeDeltaE(%"class.base::SyncSocket"*, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::ScopedBlockingCall", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.pollfd*
  %10 = alloca %"class.base::TimeDelta", align 8
  %11 = bitcast %"class.base::ScopedBlockingCall"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 80, i1 false)
  %12 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 112) #10
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %7, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  %13 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %14 = add i64 %3, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = icmp slt i64 %3, 0
  %18 = select i1 %17, i64 -9223372036854775808, i64 9223372036854775807
  %19 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 %3) #10
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 %18, i64 %21, !prof !3
  br label %31

23:                                               ; preds = %4
  %24 = add i64 %13, -9223372036854775807
  %25 = icmp ugt i64 %24, 1
  %26 = icmp eq i64 %13, %3
  %27 = or i1 %26, %25
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %16, %23, %28
  %32 = phi i64 [ %22, %16 ], [ %3, %23 ], [ %3, %28 ]
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = bitcast i64* %8 to i32*
  %35 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  store i64 7158278826, i64* %8, align 8
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %34, align 8
  %37 = icmp eq i64 %2, 0
  br i1 %37, label %82, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.base::TimeDelta"* %10 to i8*
  %40 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %10, i64 0, i32 0
  %41 = bitcast %"class.base::SyncSocket"* %0 to i64 (%"class.base::SyncSocket"*)***
  %42 = bitcast %"class.base::SyncSocket"* %0 to i64 (%"class.base::SyncSocket"*, i8*, i64)***
  br label %43

43:                                               ; preds = %38, %79
  %44 = phi i64 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  store i64 -6148914691236517206, i64* %40, align 8
  %45 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %46 = sub nsw i64 %32, %45
  store i64 %46, i64* %40, align 8
  %47 = call i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"* nonnull %10) #10
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %82

51:                                               ; preds = %43
  %52 = call i32 @poll(%struct.pollfd* nonnull %9, i64 1, i32 %48) #10
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %58

54:                                               ; preds = %51
  %55 = tail call i32* @__errno_location() #12
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %79, label %77

58:                                               ; preds = %51
  %59 = icmp slt i32 %52, 1
  br i1 %59, label %77, label %60

60:                                               ; preds = %58
  %61 = load i64 (%"class.base::SyncSocket"*)**, i64 (%"class.base::SyncSocket"*)*** %41, align 8
  %62 = getelementptr inbounds i64 (%"class.base::SyncSocket"*)*, i64 (%"class.base::SyncSocket"*)** %61, i64 6
  %63 = load i64 (%"class.base::SyncSocket"*)*, i64 (%"class.base::SyncSocket"*)** %62, align 8
  %64 = call i64 %63(%"class.base::SyncSocket"* %0) #10
  %65 = sub i64 %2, %44
  %66 = icmp ult i64 %65, %64
  %67 = select i1 %66, i64 %65, i64 %64
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds i8, i8* %1, i64 %44
  %71 = load i64 (%"class.base::SyncSocket"*, i8*, i64)**, i64 (%"class.base::SyncSocket"*, i8*, i64)*** %42, align 8
  %72 = getelementptr inbounds i64 (%"class.base::SyncSocket"*, i8*, i64)*, i64 (%"class.base::SyncSocket"*, i8*, i64)** %71, i64 4
  %73 = load i64 (%"class.base::SyncSocket"*, i8*, i64)*, i64 (%"class.base::SyncSocket"*, i8*, i64)** %72, align 8
  %74 = call i64 %73(%"class.base::SyncSocket"* %0, i8* %70, i64 %67) #10
  %75 = add i64 %74, %44
  %76 = icmp eq i64 %74, %67
  br i1 %76, label %79, label %77

77:                                               ; preds = %58, %69, %60, %54
  %78 = phi i64 [ %44, %60 ], [ %75, %69 ], [ %44, %58 ], [ %44, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %82

79:                                               ; preds = %69, %54
  %80 = phi i64 [ %44, %54 ], [ %75, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %81 = icmp ult i64 %80, %2
  br i1 %81, label %43, label %82

82:                                               ; preds = %79, %31, %50, %77
  %83 = phi i64 [ %78, %77 ], [ %44, %50 ], [ 0, %31 ], [ %80, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #10
  ret i64 %83
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

declare i32 @poll(%struct.pollfd*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base10SyncSocket4PeekEv(%"class.base::SyncSocket"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = call i32 (i32, i64, ...) @ioctl(i32 %5, i64 21531, i32* nonnull %2) #10
  %7 = icmp eq i32 %6, -1
  %8 = load i32, i32* %2, align 4
  %9 = select i1 %7, i32 0, i32 %8
  %10 = sext i32 %9 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i64 %10
}

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base10SyncSocket7IsValidEv(%"class.base::SyncSocket"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base10SyncSocket7ReleaseEv(%"class.base::SyncSocket"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  store i32 -1, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SyncSocket", %"class.base::SyncSocket"* %0, i64 0, i32 1
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %6, i32 %3) #10
  br label %7

7:                                                ; preds = %1, %5
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20CancelableSyncSocket8ShutdownEv(%"class.base::CancelableSyncSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::CancelableSyncSocket", %"class.base::CancelableSyncSocket"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  br label %3

3:                                                ; preds = %7, %1
  %4 = load i32, i32* %2, align 4
  %5 = tail call i32 @shutdown(i32 %4, i32 2) #10
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = tail call i32* @__errno_location() #12
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %3, label %11

11:                                               ; preds = %3, %7
  %12 = icmp sgt i32 %5, -1
  ret i1 %12
}

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base20CancelableSyncSocket4SendEPKvm(%"class.base::CancelableSyncSocket"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::CancelableSyncSocket", %"class.base::CancelableSyncSocket"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 (i32, i32, ...) @fcntl(i32 %5, i32 3) #10
  %7 = and i32 %6, 2048
  %8 = icmp eq i32 %7, 0
  %9 = load i32, i32* %4, align 4
  br i1 %8, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN4base19WriteFileDescriptorEiNS_4spanIKhLm18446744073709551615EEE(i32 %9, i64 %2, i8* %1) #10
  %12 = select i1 %11, i64 %2, i64 0
  br label %21

13:                                               ; preds = %3
  %14 = or i32 %6, 2048
  %15 = tail call i32 (i32, i32, ...) @fcntl(i32 %9, i32 4, i32 %14) #10
  %16 = load i32, i32* %4, align 4
  %17 = tail call zeroext i1 @_ZN4base19WriteFileDescriptorEiNS_4spanIKhLm18446744073709551615EEE(i32 %16, i64 %2, i8* %1) #10
  %18 = select i1 %17, i64 %2, i64 0
  %19 = load i32, i32* %4, align 4
  %20 = tail call i32 (i32, i32, ...) @fcntl(i32 %19, i32 4, i32 %6) #10
  br label %21

21:                                               ; preds = %10, %13
  %22 = phi i64 [ %18, %13 ], [ %12, %10 ]
  ret i64 %22
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20CancelableSyncSocket10CreatePairEPS0_S1_(%"class.base::CancelableSyncSocket"*, %"class.base::CancelableSyncSocket"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::CancelableSyncSocket", %"class.base::CancelableSyncSocket"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::CancelableSyncSocket", %"class.base::CancelableSyncSocket"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN4base10SyncSocket10CreatePairEPS0_S1_(%"class.base::SyncSocket"* %3, %"class.base::SyncSocket"* %4)
  ret i1 %5
}

; Function Attrs: nounwind
declare void @_ZN4base10SyncSocketD2Ev(%"class.base::SyncSocket"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base20CancelableSyncSocketD0Ev(%"class.base::CancelableSyncSocket"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::CancelableSyncSocket", %"class.base::CancelableSyncSocket"* %0, i64 0, i32 0
  tail call void @_ZN4base10SyncSocketD2Ev(%"class.base::SyncSocket"* %2) #10
  %3 = bitcast %"class.base::CancelableSyncSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

declare zeroext i1 @_ZN4base19WriteFileDescriptorEiNS_4spanIKhLm18446744073709551615EEE(i32, i64, i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #10
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #3

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
