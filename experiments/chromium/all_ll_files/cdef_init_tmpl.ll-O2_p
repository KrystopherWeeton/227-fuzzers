; ModuleID = '../../third_party/dav1d/libdav1d/src/x86/cdef_init_tmpl.c'
source_filename = "../../third_party/dav1d/libdav1d/src/x86/cdef_init_tmpl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Dav1dCdefDSPContext = type { i32 (i8*, i64, i32*)*, [3 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*] }

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @dav1d_cdef_dsp_init_x86_8bpc(%struct.Dav1dCdefDSPContext* nocapture) local_unnamed_addr #0 {
  %2 = tail call i32 @dav1d_get_cpu_flags() #2
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.Dav1dCdefDSPContext, %struct.Dav1dCdefDSPContext* %0, i64 0, i32 1, i64 0
  %7 = bitcast void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %6 to <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>*
  store <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*> <void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_8x8_8bpc_sse2, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x8_8bpc_sse2>, <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>* %7, align 8
  %8 = getelementptr inbounds %struct.Dav1dCdefDSPContext, %struct.Dav1dCdefDSPContext* %0, i64 0, i32 1, i64 2
  store void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x4_8bpc_sse2, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %8, align 8
  %9 = and i32 %2, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.Dav1dCdefDSPContext, %struct.Dav1dCdefDSPContext* %0, i64 0, i32 0
  store i32 (i8*, i64, i32*)* @dav1d_cdef_dir_8bpc_ssse3, i32 (i8*, i64, i32*)** %12, align 8
  %13 = bitcast void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %6 to <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>*
  store <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*> <void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_8x8_8bpc_ssse3, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x8_8bpc_ssse3>, <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>* %13, align 8
  store void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x4_8bpc_ssse3, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %8, align 8
  %14 = and i32 %2, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  store i32 (i8*, i64, i32*)* @dav1d_cdef_dir_8bpc_sse4, i32 (i8*, i64, i32*)** %12, align 8
  %17 = bitcast void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %6 to <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>*
  store <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*> <void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_8x8_8bpc_sse4, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x8_8bpc_sse4>, <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>* %17, align 8
  store void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x4_8bpc_sse4, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %8, align 8
  %18 = and i32 %2, 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  store i32 (i8*, i64, i32*)* @dav1d_cdef_dir_8bpc_avx2, i32 (i8*, i64, i32*)** %12, align 8
  %21 = bitcast void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %6 to <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>*
  store <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*> <void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_8x8_8bpc_avx2, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x8_8bpc_avx2>, <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>* %21, align 8
  store void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x4_8bpc_avx2, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %8, align 8
  %22 = and i32 %2, 16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %6 to <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>*
  store <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*> <void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_8x8_8bpc_avx512icl, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x8_8bpc_avx512icl>, <2 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*>* %25, align 8
  store void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)* @dav1d_cdef_filter_4x4_8bpc_avx512icl, void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)** %8, align 8
  br label %26

26:                                               ; preds = %20, %16, %11, %5, %1, %24
  ret void
}

declare i32 @dav1d_get_cpu_flags() local_unnamed_addr #1

declare void @dav1d_cdef_filter_8x8_8bpc_sse2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x8_8bpc_sse2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x4_8bpc_sse2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare i32 @dav1d_cdef_dir_8bpc_ssse3(i8*, i64, i32*) #1

declare void @dav1d_cdef_filter_8x8_8bpc_ssse3(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x8_8bpc_ssse3(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x4_8bpc_ssse3(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare i32 @dav1d_cdef_dir_8bpc_sse4(i8*, i64, i32*) #1

declare void @dav1d_cdef_filter_8x8_8bpc_sse4(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x8_8bpc_sse4(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x4_8bpc_sse4(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare i32 @dav1d_cdef_dir_8bpc_avx2(i8*, i64, i32*) #1

declare void @dav1d_cdef_filter_8x8_8bpc_avx2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x8_8bpc_avx2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x4_8bpc_avx2(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_8x8_8bpc_avx512icl(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x8_8bpc_avx512icl(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

declare void @dav1d_cdef_filter_4x4_8bpc_avx512icl(i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32) #1

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
