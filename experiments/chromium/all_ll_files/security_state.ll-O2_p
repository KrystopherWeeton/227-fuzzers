; ModuleID = '../../components/security_state/core/security_state.cc'
source_filename = "../../components/security_state/core/security_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.security_state::VisibleSecurityState" = type <{ %class.GURL, i32, [4 x i8], %"struct.security_state::SafetyTipInfo", i8, [7 x i8], %class.scoped_refptr, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.security_state::SafetyTipInfo" = type { i32, %class.GURL }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.10", %"class.std::__1::vector.14" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::unique_ptr.10"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1
@_ZN3url10kFtpSchemeE = external constant [0 x i8], align 1
@_ZN3url11kBlobSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN14security_state8features12kSafetyTipUIE = external global %"struct.base::Feature", align 8
@_ZN14security_state8features38kSafetyTipUIForSimplifiedDomainDisplayE = external global %"struct.base::Feature", align 8
@_ZN14security_state8features28kSafetyTipUIOnDelayedWarningE = external global %"struct.base::Feature", align 8
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"SECURE\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"SECURE_WITH_POLICY_INSTALLED_CERT\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"DANGEROUS\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"OTHER\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"SafetyTip_Unknown\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"SafetyTip_None\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"SafetyTip_BadReputation\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"SafetyTip_Lookalike\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"SafetyTip_BadReputationIgnored\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"SafetyTip_LookalikeIgnored\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"SafetyTip_DigitalAssetLinkMatch\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"SafetyTip_BadKeyword\00", align 1

@_ZN14security_state20VisibleSecurityStateC1Ev = hidden unnamed_addr alias void (%"struct.security_state::VisibleSecurityState"*), void (%"struct.security_state::VisibleSecurityState"*)* @_ZN14security_state20VisibleSecurityStateC2Ev
@_ZN14security_state20VisibleSecurityStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.security_state::VisibleSecurityState"*, %"struct.security_state::VisibleSecurityState"*), void (%"struct.security_state::VisibleSecurityState"*, %"struct.security_state::VisibleSecurityState"*)* @_ZN14security_state20VisibleSecurityStateC2ERKS0_
@_ZN14security_state20VisibleSecurityStateD1Ev = hidden unnamed_addr alias void (%"struct.security_state::VisibleSecurityState"*), void (%"struct.security_state::VisibleSecurityState"*)* @_ZN14security_state20VisibleSecurityStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14security_state16GetSecurityLevelERKNS_20VisibleSecurityStateEb(%"struct.security_state::VisibleSecurityState"* dereferenceable(296), i1 zeroext) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %104

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %104, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %11) #10
  br i1 %12, label %13, label %22

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %15 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %14, align 8
  %16 = icmp ne %"class.net::X509Certificate"* %15, null
  %17 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, -16711681
  %20 = icmp ne i32 %19, 0
  %21 = and i1 %16, %20
  br i1 %21, label %104, label %22

22:                                               ; preds = %10, %13
  %23 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0)) #10
  %24 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0), i64 %23) #10
  br i1 %24, label %104, label %25

25:                                               ; preds = %22
  %26 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i64 0, i64 0)) #10
  %27 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i64 0, i64 0), i64 %26) #10
  br i1 %27, label %104, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %104

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 13
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %104

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 15
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %104

40:                                               ; preds = %36
  %41 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %11) #10
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %44 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %43, align 8
  %45 = icmp eq %"class.net::X509Certificate"* %44, null
  br i1 %45, label %46, label %62

46:                                               ; preds = %42, %40
  %47 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 17
  %48 = load i8, i8* %47, align 2, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %104

50:                                               ; preds = %46
  %51 = tail call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120) %11) #10
  br i1 %51, label %104, label %52

52:                                               ; preds = %50
  %53 = tail call zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL* %11) #10
  br i1 %53, label %57, label %54

54:                                               ; preds = %52
  %55 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #10
  %56 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i64 %55) #10
  br i1 %56, label %57, label %104

57:                                               ; preds = %52, %54
  %58 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 20
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 6, i32 0
  br label %104

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features12kSafetyTipUIE) #10
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features38kSafetyTipUIForSimplifiedDomainDisplayE) #10
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features28kSafetyTipUIOnDelayedWarningE) #10
  br label %70

70:                                               ; preds = %68, %66, %62
  %71 = phi i1 [ true, %66 ], [ true, %62 ], [ %69, %68 ]
  %72 = icmp eq i32 %64, 2
  %73 = and i1 %72, %71
  br i1 %73, label %104, label %74

74:                                               ; preds = %70
  %75 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %43, align 8
  %76 = icmp eq %"class.net::X509Certificate"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 524288
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %104

82:                                               ; preds = %77, %74
  %83 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 11
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %104

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 12
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 21
  %92 = load i8, i8* %91, align 2, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %90, %86
  %95 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 14
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 18
  %100 = load i8, i8* %99, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %1, i32 4, i32 3
  %103 = select i1 %101, i32 %102, i32 0
  br label %104

104:                                              ; preds = %77, %82, %90, %94, %98, %70, %22, %25, %28, %36, %32, %54, %50, %46, %57, %13, %6, %2
  %105 = phi i32 [ 5, %2 ], [ 0, %6 ], [ 5, %13 ], [ 6, %22 ], [ 6, %25 ], [ 0, %28 ], [ 5, %36 ], [ 5, %32 ], [ %61, %57 ], [ 0, %46 ], [ 0, %50 ], [ 0, %54 ], [ 0, %77 ], [ 6, %82 ], [ 0, %90 ], [ 0, %94 ], [ %103, %98 ], [ 0, %70 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14security_state24HasMajorCertificateErrorERKNS_20VisibleSecurityStateE(%"struct.security_state::VisibleSecurityState"* dereferenceable(296)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %6) #10
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %10 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %9, align 8
  %11 = icmp ne %"class.net::X509Certificate"* %10, null
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i1 [ false, %5 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -16711681
  %17 = icmp ne i32 %16, 0
  %18 = and i1 %13, %17
  br label %19

19:                                               ; preds = %1, %12
  %20 = phi i1 [ %18, %12 ], [ false, %1 ]
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL*) local_unnamed_addr #2

declare zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN14security_state13IsSHA1InChainERKNS_20VisibleSecurityStateE(%"struct.security_state::VisibleSecurityState"* nocapture readonly dereferenceable(296)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %2, align 8
  %4 = icmp eq %"class.net::X509Certificate"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 524288
  %9 = icmp ne i32 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14security_state20VisibleSecurityStateC2Ev(%"struct.security_state::VisibleSecurityState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #10
  %3 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #10
  %6 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %8 = bitcast %"class.net::X509Certificate"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 31, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14security_state20VisibleSecurityStateC2ERKS0_(%"struct.security_state::VisibleSecurityState"*, %"struct.security_state::VisibleSecurityState"* dereferenceable(296)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #10
  %5 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 1
  %12 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 3, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %11, %class.GURL* dereferenceable(120) %12) #10
  %13 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 6, i32 0
  %17 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %16, align 8
  %18 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  store %"class.net::X509Certificate"* %17, %"class.net::X509Certificate"** %18, align 8
  %19 = icmp eq %"class.net::X509Certificate"* %17, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %2, %20
  %24 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 7
  %26 = bitcast i32* %24 to i8*
  %27 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 23, i1 false)
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(296) %"struct.security_state::VisibleSecurityState"* @_ZN14security_state20VisibleSecurityStateaSERKS0_(%"struct.security_state::VisibleSecurityState"* returned, %"struct.security_state::VisibleSecurityState"* dereferenceable(296)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #10
  %6 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 0
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 3, i32 1
  %14 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %13) #10
  %15 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 4
  store i8 %16, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 6, i32 0
  %20 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %19, align 8
  %21 = icmp eq %"class.net::X509Certificate"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  br label %25

25:                                               ; preds = %2, %22
  %26 = ptrtoint %"class.net::X509Certificate"* %20 to i64
  %27 = bitcast %class.scoped_refptr* %18 to i64*
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 0, i32 0
  %29 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.net::X509Certificate"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %29) #10
  %36 = bitcast %"class.net::X509Certificate"* %29 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %25, %31, %35
  %38 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 7
  %39 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %1, i64 0, i32 7
  %40 = bitcast i32* %38 to i8*
  %41 = bitcast i32* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 23, i1 false)
  ret %"struct.security_state::VisibleSecurityState"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14security_state20VisibleSecurityStateD2Ev(%"struct.security_state::VisibleSecurityState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %2, align 8
  %4 = icmp eq %"class.net::X509Certificate"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %3) #10
  %10 = bitcast %"class.net::X509Certificate"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #10
  %13 = getelementptr inbounds %"struct.security_state::VisibleSecurityState", %"struct.security_state::VisibleSecurityState"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %13) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14security_state21IsSchemeCryptographicERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %0) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14security_state23IsOriginLocalhostOrFileERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120) %0) #10
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #10
  %9 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %8) #10
  br label %10

10:                                               ; preds = %1, %5, %7
  %11 = phi i1 [ false, %1 ], [ true, %5 ], [ %9, %7 ]
  ret i1 %11
}

declare zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN14security_state21IsSslCertificateValidENS_13SecurityLevelE(i32) local_unnamed_addr #5 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 2
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14security_state29GetSecurityLevelHistogramNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_13SecurityLevelE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10, !alias.scope !3
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !3
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = zext i8 %12 to i64
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = select i1 %13, i64 %15, i64 %18
  %21 = select i1 %13, i8* %17, i8* %19
  %22 = add i64 %20, 1
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #12
  unreachable

26:                                               ; preds = %3
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %20, 17
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #11
  store i8* %31, i8** %7, align 8, !alias.scope !3
  %32 = or i64 %30, -9223372036854775808
  store i64 %32, i64* %9, align 8, !alias.scope !3
  store i64 %20, i64* %8, align 8, !alias.scope !3
  br label %38

33:                                               ; preds = %26
  %34 = trunc i64 %20 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1, !alias.scope !3
  %37 = icmp eq i64 %20, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %28, %33
  %39 = phi i8* [ %31, %28 ], [ %6, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %21, i64 %20, i1 false) #10
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %6, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %20
  store i8 0, i8* %42, align 1
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #10
  %44 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  switch i32 %2, label %71 [
    i32 3, label %45
    i32 0, label %49
    i32 6, label %54
    i32 4, label %58
    i32 5, label %65
  ]

45:                                               ; preds = %40
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 6, i8* %47, align 1, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %44, i64 6
  store i8 0, i8* %48, align 2, !alias.scope !6
  br label %75

49:                                               ; preds = %40
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 4, i8* %51, align 1, !alias.scope !6
  %52 = bitcast %"class.std::__1::basic_string"* %5 to i32*
  store i32 1162760014, i32* %52, align 8, !alias.scope !6
  %53 = getelementptr inbounds i8, i8* %44, i64 4
  store i8 0, i8* %53, align 4, !alias.scope !6
  br label %75

54:                                               ; preds = %40
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 7, i8* %56, align 1, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7, i1 false) #10
  %57 = getelementptr inbounds i8, i8* %44, i64 7
  store i8 0, i8* %57, align 1, !alias.scope !6
  br label %75

58:                                               ; preds = %40
  %59 = call i8* @_Znwm(i64 48) #11, !noalias !6
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8, !alias.scope !6
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast i64* %61 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %62, align 8, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33, i1 false) #10, !noalias !6
  %63 = getelementptr inbounds i8, i8* %59, i64 33
  store i8 0, i8* %63, align 1, !noalias !6
  %64 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %75

65:                                               ; preds = %40
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 9, i8* %67, align 1, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i64 9, i1 false) #10
  %68 = getelementptr inbounds i8, i8* %44, i64 9
  store i8 0, i8* %68, align 1, !alias.scope !6
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8, !noalias !9
  br label %75

71:                                               ; preds = %40
  %72 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 5, i8* %73, align 1, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #10
  %74 = getelementptr inbounds i8, i8* %44, i64 5
  store i8 0, i8* %74, align 1, !alias.scope !6
  br label %75

75:                                               ; preds = %45, %49, %54, %58, %65, %71
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %45 ], [ %50, %49 ], [ %55, %54 ], [ %64, %58 ], [ %66, %65 ], [ %72, %71 ]
  %77 = phi i64 [ undef, %45 ], [ undef, %49 ], [ undef, %54 ], [ 33, %58 ], [ %70, %65 ], [ undef, %71 ]
  %78 = phi i8 [ 6, %45 ], [ 4, %49 ], [ 7, %54 ], [ -128, %58 ], [ 9, %65 ], [ 5, %71 ]
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %80 = icmp slt i8 %78, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !9
  %83 = zext i8 %78 to i64
  %84 = select i1 %80, i8* %82, i8* %44
  %85 = select i1 %80, i64 %77, i64 %83
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %84, i64 %85) #10, !noalias !9
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #10, !noalias !9
  %89 = load i8, i8* %79, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %75
  %92 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %75, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14security_state25GetSafetyTipHistogramNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_15SafetyTipStatusE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10, !alias.scope !12
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !12
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = zext i8 %12 to i64
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = select i1 %13, i64 %15, i64 %18
  %21 = select i1 %13, i8* %17, i8* %19
  %22 = add i64 %20, 1
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #12
  unreachable

26:                                               ; preds = %3
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %20, 17
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #11
  store i8* %31, i8** %7, align 8, !alias.scope !12
  %32 = or i64 %30, -9223372036854775808
  store i64 %32, i64* %9, align 8, !alias.scope !12
  store i64 %20, i64* %8, align 8, !alias.scope !12
  br label %38

33:                                               ; preds = %26
  %34 = trunc i64 %20 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1, !alias.scope !12
  %37 = icmp eq i64 %20, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %28, %33
  %39 = phi i8* [ %31, %28 ], [ %6, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %21, i64 %20, i1 false) #10
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %6, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %20
  store i8 0, i8* %42, align 1
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #10
  %44 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  switch i32 %2, label %87 [
    i32 0, label %45
    i32 1, label %49
    i32 2, label %55
    i32 3, label %61
    i32 5, label %65
    i32 6, label %71
    i32 7, label %77
    i32 4, label %83
  ]

45:                                               ; preds = %40
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 17, i8* %47, align 1, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i64 17, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %44, i64 17
  store i8 0, i8* %48, align 1, !alias.scope !15
  br label %88

49:                                               ; preds = %40
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 14, i8* %51, align 1, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14, i1 false) #10
  %52 = getelementptr inbounds i8, i8* %44, i64 14
  store i8 0, i8* %52, align 2, !alias.scope !15
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !18
  br label %88

55:                                               ; preds = %40
  %56 = call i8* @_Znwm(i64 32) #11
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %57, align 8, !alias.scope !15
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast i64* %58 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %59, align 8, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i64 23, i1 false) #10
  %60 = getelementptr inbounds i8, i8* %56, i64 23
  store i8 0, i8* %60, align 1, !noalias !15
  br label %88

61:                                               ; preds = %40
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 19, i8* %63, align 1, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i64 19, i1 false) #10
  %64 = getelementptr inbounds i8, i8* %44, i64 19
  store i8 0, i8* %64, align 1, !alias.scope !15
  br label %88

65:                                               ; preds = %40
  %66 = call i8* @_Znwm(i64 32) #11
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %66, i8** %67, align 8, !alias.scope !15
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %69, align 8, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i64 0, i64 0), i64 30, i1 false) #10
  %70 = getelementptr inbounds i8, i8* %66, i64 30
  store i8 0, i8* %70, align 1, !noalias !15
  br label %88

71:                                               ; preds = %40
  %72 = call i8* @_Znwm(i64 32) #11
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %73, align 8, !alias.scope !15
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %75, align 8, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i64 26, i1 false) #10
  %76 = getelementptr inbounds i8, i8* %72, i64 26
  store i8 0, i8* %76, align 1, !noalias !15
  br label %88

77:                                               ; preds = %40
  %78 = call i8* @_Znwm(i64 32) #11
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8, !alias.scope !15
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %81, align 8, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i64 31, i1 false) #10
  %82 = getelementptr inbounds i8, i8* %78, i64 31
  store i8 0, i8* %82, align 1, !noalias !15
  br label %88

83:                                               ; preds = %40
  %84 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 20, i8* %85, align 1, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i64 20, i1 false) #10
  %86 = getelementptr inbounds i8, i8* %44, i64 20
  store i8 0, i8* %86, align 4, !alias.scope !15
  br label %88

87:                                               ; preds = %40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #10, !alias.scope !15
  br label %88

88:                                               ; preds = %45, %49, %55, %61, %65, %71, %77, %83, %87
  %89 = phi i64 [ 8606218820619951984, %45 ], [ %54, %49 ], [ 23, %55 ], [ 7809641355189968752, %61 ], [ 30, %65 ], [ 26, %71 ], [ 31, %77 ], [ 8747480745737609072, %83 ], [ 0, %87 ]
  %90 = phi i8 [ 17, %45 ], [ 14, %49 ], [ -128, %55 ], [ 19, %61 ], [ -128, %65 ], [ -128, %71 ], [ -128, %77 ], [ 20, %83 ], [ 0, %87 ]
  %91 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = icmp slt i8 %90, 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !noalias !18
  %96 = zext i8 %90 to i64
  %97 = select i1 %93, i8* %95, i8* %44
  %98 = select i1 %93, i64 %89, i64 %96
  %99 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %97, i64 %98) #10, !noalias !18
  %100 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %101 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #10, !noalias !18
  %102 = load i8, i8* %92, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %88
  %105 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %88, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %107 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %112) #11
  br label %113

113:                                              ; preds = %106, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14security_state27IsSafetyTipUIFeatureEnabledEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features12kSafetyTipUIE) #10
  br i1 %1, label %6, label %2

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features38kSafetyTipUIForSimplifiedDomainDisplayE) #10
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN14security_state8features28kSafetyTipUIOnDelayedWarningE) #10
  br label %6

6:                                                ; preds = %4, %2, %0
  %7 = phi i1 [ true, %2 ], [ true, %0 ], [ %5, %4 ]
  ret i1 %7
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN14security_state12_GLOBAL__N_134GetHistogramSuffixForSecurityLevelENS_13SecurityLevelE: argument 0"}
!8 = distinct !{!8, !"_ZN14security_state12_GLOBAL__N_134GetHistogramSuffixForSecurityLevelENS_13SecurityLevelE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN14security_state12_GLOBAL__N_136GetHistogramSuffixForSafetyTipStatusENS_15SafetyTipStatusE: argument 0"}
!17 = distinct !{!17, !"_ZN14security_state12_GLOBAL__N_136GetHistogramSuffixForSafetyTipStatusENS_15SafetyTipStatusE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
