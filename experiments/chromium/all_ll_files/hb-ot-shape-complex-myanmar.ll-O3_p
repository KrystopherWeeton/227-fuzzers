; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-myanmar.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-myanmar.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_shape_planner_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, %struct.hb_ot_map_builder_t, %struct.hb_aat_map_builder_t, i8, %struct.hb_ot_complex_shaper_t* }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.140, [2 x %struct.hb_vector_t.141] }
%struct.hb_vector_t.140 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_builder_t = type { %struct.hb_face_t*, %struct.hb_sorted_vector_t.142 }
%struct.hb_sorted_vector_t.142 = type { %struct.hb_vector_t.143 }
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_aat_map_builder_t::feature_info_t"* }
%"struct.hb_aat_map_builder_t::feature_info_t" = type { i32, i32, i8, i32 }
%struct.hb_ot_complex_shaper_t = type { {}*, {}*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 }
%struct.hb_ot_shape_normalize_context_t = type { %struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*, %struct.hb_unicode_funcs_t*, {}*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN11hb_buffer_t7messageEP9hb_font_tPKcz = comdat any

@_hb_ot_complex_shaper_myanmar = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } { void (%struct.hb_ot_shape_planner_t*)* @_ZL24collect_features_myanmarP21hb_ot_shape_planner_t, void (%struct.hb_ot_shape_planner_t*)* null, i8* (%struct.hb_ot_shape_plan_t*)* null, void (i8*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, i32 3, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)* null, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL19setup_masks_myanmarPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)* null, i32 1, i8 0 }, align 8
@_hb_ot_complex_shaper_myanmar_zawgyi = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } zeroinitializer, align 8
@_ZL36_myanmar_syllable_machine_trans_keys = internal unnamed_addr constant [105 x i8] c"\01 \03\1E\05\1D\05\08\05\1D\03\19\05\19\05\19\03\1D\03\1D\03\1D\03\1D\01\10\03\1D\03\1D\03\1D\03\1D\03\1D\03\1E\03\1D\03\1D\03\1D\03\1D\03\1D\05\1D\05\08\05\1D\03\19\05\19\05\19\03\1D\03\1D\03\1D\03\1D\01\10\03\1E\03\1D\03\1D\03\1D\03\1D\03\1D\03\1E\03\1D\03\1D\03\1D\03\1D\03\1D\03\1E\03\1D\01 \01 \08\08\00", align 16
@_ZL34_myanmar_syllable_machine_indicies = internal unnamed_addr constant [1343 x i8] c"\01\01\02\03\04\04\00\05\00\06\01\00\00\00\00\07\00\08\09\00\0A\0B\0C\0D\0E\0F\10\11\12\13\14\01\00\16\17\18\18\15\19\15\1A\15\15\15\15\15\15\15\1B\15\15\1C\1D\1E\1F !\22#$%\15\18\18\15\19\15\15\15\15\15\15\15\15\15&\15\15\15\15\15\15 \15\15\15$\15\18\18\15\19\15\18\18\15\19\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15 \15\15\15$\15'\15\18\18\15\19\15 \15\15\15\15\15\15\15(\15\15\15\15\15\15 \15\18\18\15\19\15\15\15\15\15\15\15\15\15(\15\15\15\15\15\15 \15\18\18\15\19\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15\15 \15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15)\15\15)\15\15\15 *\15\15$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 \15\15\15$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15)\15\15\15\15\15\15 *\15\15$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 *\15\15$\15\01\01\15\15\15\15\15\15\15\15\15\15\15\15\15\01\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\1B\15\15\1C\1D\1E\1F !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15+\15\15\15\15\15\15 !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 !\22\15$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 \15\22\15$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\15\15\15\15 !\22#$+\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\1C\15\1E\15 !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15+\15\15\1C\15\15\15 !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15,\15\15\1C\1D\1E\15 !\22#$\15\16\15\18\18\15\19\15\1A\15\15\15\15\15\15\15\15\15\15\1C\1D\1E\15 !\22#$\15\16\17\18\18\15\19\15\1A\15\15\15\15\15\15\15\1B\15\15\1C\1D\1E\1F !\22#$\15..-\05---------/------\0E---\12-..-\05-..-\05----------------\0E---\12-0-..-\05-\0E-------1------\0E-..-\05---------1------\0E-..-\05----------------\0E-\02-..-\05-\06-------2--2---\0E3--\12-\02-..-\05-\06--------------\0E---\12-\02-..-\05-\06-------2------\0E3--\12-\02-..-\05-\06--------------\0E3--\12-44-------------4-\02\03..-\05-\06-------\08--\0A\0B\0C\0D\0E\0F\10\11\12\13-\02-..-\05-\06-------\08--\0A\0B\0C\0D\0E\0F\10\11\12-\02-..-\05-\06-------5------\0E\0F\10\11\12-\02-..-\05-\06--------------\0E\0F\10\11\12-\02-..-\05-\06--------------\0E\0F\10-\12-\02-..-\05-\06--------------\0E-\10-\12-\02-..-\05-\06--------------\0E\0F\10\11\125-\02-..-\05-\06----------\0A-\0C-\0E\0F\10\11\12-\02-..-\05-\06-------5--\0A---\0E\0F\10\11\12-\02-..-\05-\06-------6--\0A\0B\0C-\0E\0F\10\11\12-\02-..-\05-\06----------\0A\0B\0C-\0E\0F\10\11\12-\02\03..-\05-\06-------\08--\0A\0B\0C\0D\0E\0F\10\11\12-\16\17\18\18\15\19\15\1A\15\15\15\15\15\15\157\15\15\1C\1D\1E\1F !\22#$%\15\168\18\18\15\19\15\1A\15\15\15\15\15\15\15\1B\15\15\1C\1D\1E\1F !\22#$\15\01\01\02\03..-\05-\06\01----\01-\08--\0A\0B\0C\0D\0E\0F\10\11\12\13-\01-\01\0199999999\019999\01999999999999999\019:9\00", align 16
@_ZL39_myanmar_syllable_machine_index_offsets = internal unnamed_addr constant [52 x i16] [i16 0, i16 33, i16 62, i16 88, i16 93, i16 119, i16 143, i16 165, i16 187, i16 215, i16 243, i16 271, i16 299, i16 316, i16 344, i16 372, i16 400, i16 428, i16 456, i16 485, i16 513, i16 541, i16 569, i16 597, i16 625, i16 651, i16 656, i16 682, i16 706, i16 728, i16 750, i16 778, i16 806, i16 834, i16 862, i16 879, i16 908, i16 936, i16 964, i16 992, i16 1020, i16 1048, i16 1077, i16 1105, i16 1133, i16 1161, i16 1189, i16 1217, i16 1246, i16 1274, i16 1307, i16 1340], align 16
@_ZL35_myanmar_syllable_machine_key_spans = internal unnamed_addr constant [52 x i8] c" \1C\19\04\19\17\15\15\1B\1B\1B\1B\10\1B\1B\1B\1B\1B\1C\1B\1B\1B\1B\1B\19\04\19\17\15\15\1B\1B\1B\1B\10\1C\1B\1B\1B\1B\1B\1C\1B\1B\1B\1B\1B\1C\1B  \01", align 16
@_ZL37_myanmar_syllable_machine_trans_targs = internal unnamed_addr constant [59 x i8] c"\00\01\18\22\00\19\1F/$2%*+,\1B'()\1E.3\00\02\0C\00\03\09\0D\0E\13\14\15\05\10\11\12\08\17\04\06\07\0A\0B\0F\16\00\00\1A\1C\1D !#&-01\00\00", align 16
@_ZL39_myanmar_syllable_machine_trans_actions = internal unnamed_addr constant [59 x i8] c"\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\08\00\00\00\00\00\00\00\00\00\00\09\0A", align 16
@_ZL35_myanmar_syllable_machine_eof_trans = internal unnamed_addr constant [52 x i16] [i16 0, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 22, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 22, i16 22, i16 46, i16 58, i16 58], align 16
@_ZL44_myanmar_syllable_machine_from_state_actions = internal unnamed_addr constant <{ i8, [51 x i8] }> <{ i8 2, [51 x i8] zeroinitializer }>, align 16
@_ZL42_myanmar_syllable_machine_to_state_actions = internal unnamed_addr constant <{ i8, [51 x i8] }> <{ i8 1, [51 x i8] zeroinitializer }>, align 16
@.str = private unnamed_addr constant [25 x i8] c"start reordering myanmar\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"end reordering myanmar\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24collect_features_myanmarP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL23setup_syllables_myanmarPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1819239276, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667460464, i32 1, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL15reorder_myanmarPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1919969382, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545254, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275622, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614630, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* null) #4
  tail call void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t* %2, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* nonnull @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886545267, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1633842803, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1651275635, i32 9, i32 1) #4
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1886614643, i32 9, i32 1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19setup_masks_myanmarPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly, %struct.hb_font_t* nocapture readnone) #0 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  br label %12

11:                                               ; preds = %45, %3
  ret void

12:                                               ; preds = %45, %9
  %13 = phi i64 [ 0, %9 ], [ %54, %45 ]
  %14 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i16 @_Z23hb_indic_get_categoriesj(i32 %15) #4
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 255
  %19 = lshr i32 %17, 8
  %20 = and i32 %15, -16
  %21 = icmp eq i32 %20, 65024
  %22 = select i1 %21, i32 30, i32 %18, !prof !2
  switch i32 %15, label %37 [
    i32 4174, label %45
    i32 45, label %23
    i32 160, label %23
    i32 215, label %23
    i32 8210, label %23
    i32 8211, label %23
    i32 8212, label %23
    i32 8213, label %23
    i32 8226, label %23
    i32 9676, label %23
    i32 9723, label %23
    i32 9724, label %23
    i32 9725, label %23
    i32 9726, label %23
    i32 4100, label %24
    i32 4123, label %24
    i32 4186, label %24
    i32 4146, label %25
    i32 4150, label %25
    i32 4153, label %26
    i32 4154, label %27
    i32 4161, label %28
    i32 4162, label %28
    i32 4163, label %28
    i32 4164, label %28
    i32 4165, label %28
    i32 4166, label %28
    i32 4167, label %28
    i32 4168, label %28
    i32 4169, label %28
    i32 4240, label %28
    i32 4241, label %28
    i32 4242, label %28
    i32 4243, label %28
    i32 4244, label %28
    i32 4245, label %28
    i32 4246, label %28
    i32 4247, label %28
    i32 4248, label %28
    i32 4249, label %28
    i32 4160, label %29
    i32 4158, label %30
    i32 4192, label %30
    i32 4156, label %31
    i32 4157, label %32
    i32 4226, label %32
    i32 4155, label %33
    i32 4190, label %33
    i32 4191, label %33
    i32 4195, label %34
    i32 4196, label %34
    i32 4201, label %34
    i32 4202, label %34
    i32 4203, label %34
    i32 4204, label %34
    i32 4205, label %34
    i32 43643, label %34
    i32 4152, label %35
    i32 4231, label %35
    i32 4232, label %35
    i32 4233, label %35
    i32 4234, label %35
    i32 4235, label %35
    i32 4236, label %35
    i32 4237, label %35
    i32 4239, label %35
    i32 4250, label %35
    i32 4251, label %35
    i32 4252, label %35
    i32 4170, label %36
    i32 4171, label %36
    i32 43636, label %45
    i32 43637, label %45
    i32 43638, label %45
  ]

23:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  br label %45

24:                                               ; preds = %12, %12, %12
  br label %45

25:                                               ; preds = %12, %12
  br label %45

26:                                               ; preds = %12
  br label %45

27:                                               ; preds = %12
  br label %45

28:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  br label %45

29:                                               ; preds = %12
  br label %45

30:                                               ; preds = %12, %12
  br label %45

31:                                               ; preds = %12
  br label %45

32:                                               ; preds = %12, %12
  br label %45

33:                                               ; preds = %12, %12, %12
  br label %45

34:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12
  br label %45

35:                                               ; preds = %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12, %12
  br label %45

36:                                               ; preds = %12, %12
  br label %45

37:                                               ; preds = %12
  %38 = icmp eq i32 %22, 7
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = trunc i32 %19 to i8
  switch i8 %40, label %45 [
    i8 3, label %41
    i8 6, label %42
    i8 8, label %43
    i8 11, label %44
  ]

41:                                               ; preds = %39
  br label %45

42:                                               ; preds = %39
  br label %45

43:                                               ; preds = %39
  br label %45

44:                                               ; preds = %39
  br label %45

45:                                               ; preds = %12, %12, %12, %12, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34, %35, %36, %37, %39, %41, %42, %43, %44
  %46 = phi i32 [ 7, %39 ], [ 29, %44 ], [ 27, %43 ], [ 26, %42 ], [ 28, %41 ], [ %22, %37 ], [ 11, %23 ], [ 16, %24 ], [ 10, %25 ], [ 4, %26 ], [ 18, %27 ], [ 32, %28 ], [ 32, %29 ], [ 21, %30 ], [ 22, %31 ], [ 23, %32 ], [ 24, %33 ], [ 25, %34 ], [ 8, %35 ], [ 31, %36 ], [ 1, %12 ], [ 1, %12 ], [ 1, %12 ], [ 1, %12 ]
  %47 = phi i32 [ %19, %39 ], [ %19, %44 ], [ %19, %43 ], [ %19, %42 ], [ 2, %41 ], [ %19, %37 ], [ %19, %23 ], [ %19, %24 ], [ %19, %25 ], [ %19, %26 ], [ %19, %27 ], [ %19, %28 ], [ %19, %29 ], [ %19, %30 ], [ %19, %31 ], [ %19, %32 ], [ %19, %33 ], [ %19, %34 ], [ %19, %35 ], [ %19, %36 ], [ %19, %12 ], [ %19, %12 ], [ %19, %12 ], [ %19, %12 ]
  %48 = trunc i32 %46 to i8
  %49 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %13, i32 4
  %50 = bitcast %union._hb_var_int_t* %49 to [4 x i8]*
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* %50, i64 0, i64 2
  store i8 %48, i8* %51, align 2
  %52 = trunc i32 %47 to i8
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* %50, i64 0, i64 3
  store i8 %52, i8* %53, align 1
  %54 = add nuw nsw i64 %13, 1
  %55 = icmp eq i64 %54, %10
  br i1 %55, label %11, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23setup_syllables_myanmarPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t*) #0 {
  %4 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %7 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %592, label %9

9:                                                ; preds = %582, %3
  %10 = phi i32 [ %589, %582 ], [ 0, %3 ]
  %11 = phi i32 [ %590, %582 ], [ 0, %3 ]
  %12 = phi i32 [ %56, %582 ], [ 0, %3 ]
  %13 = phi i32 [ %584, %582 ], [ 1, %3 ]
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds [52 x i8], [52 x i8]* bitcast (<{ i8, [51 x i8] }>* @_ZL44_myanmar_syllable_machine_from_state_actions to [52 x i8]*), i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 2
  %18 = select i1 %17, i32 %11, i32 %10
  %19 = shl nsw i32 %12, 1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [105 x i8], [105 x i8]* @_ZL36_myanmar_syllable_machine_trans_keys, i64 0, i64 %20
  %22 = getelementptr inbounds [52 x i16], [52 x i16]* @_ZL39_myanmar_syllable_machine_index_offsets, i64 0, i64 %14
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i64
  %25 = getelementptr inbounds [1343 x i8], [1343 x i8]* @_ZL34_myanmar_syllable_machine_indicies, i64 0, i64 %24
  %26 = getelementptr inbounds [52 x i8], [52 x i8]* @_ZL35_myanmar_syllable_machine_key_spans, i64 0, i64 %14
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i64
  %29 = load i8, i8* %21, align 2
  %30 = zext i32 %11 to i64
  %31 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %30, i32 4
  %32 = bitcast %union._hb_var_int_t* %31 to [4 x i8]*
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* %32, i64 0, i64 2
  %34 = load i8, i8* %33, align 2
  %35 = icmp ult i8 %34, %29
  br i1 %35, label %44, label %36

36:                                               ; preds = %9
  %37 = zext i8 %34 to i64
  %38 = zext i8 %29 to i64
  %39 = getelementptr inbounds i8, i8* %21, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp ugt i8 %34, %40
  %42 = sub nsw i64 %37, %38
  %43 = select i1 %41, i64 %28, i64 %42
  br label %44

44:                                               ; preds = %36, %9
  %45 = phi i64 [ %28, %9 ], [ %43, %36 ]
  %46 = getelementptr inbounds i8, i8* %25, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i64
  br label %49

49:                                               ; preds = %597, %44
  %50 = phi i32 [ %593, %597 ], [ %18, %44 ]
  %51 = phi i32 [ %5, %597 ], [ %11, %44 ]
  %52 = phi i32 [ %595, %597 ], [ %13, %44 ]
  %53 = phi i64 [ %602, %597 ], [ %48, %44 ]
  %54 = getelementptr inbounds [59 x i8], [59 x i8]* @_ZL37_myanmar_syllable_machine_trans_targs, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = lshr i64 144009634940714990, %53
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %582

60:                                               ; preds = %49
  %61 = getelementptr inbounds [59 x i8], [59 x i8]* @_ZL39_myanmar_syllable_machine_trans_actions, i64 0, i64 %53
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  switch i32 %63, label %582 [
    i32 6, label %64
    i32 4, label %128
    i32 10, label %193
    i32 8, label %258
    i32 3, label %323
    i32 5, label %388
    i32 7, label %452
    i32 9, label %517
  ]

64:                                               ; preds = %60
  %65 = add i32 %51, 1
  %66 = icmp ult i32 %50, %65
  br i1 %66, label %67, label %89

67:                                               ; preds = %64
  %68 = trunc i32 %52 to i8
  %69 = shl i8 %68, 4
  %70 = zext i32 %50 to i64
  %71 = zext i32 %65 to i64
  %72 = sub nsw i64 %71, %70
  %73 = xor i64 %70, -1
  %74 = add nsw i64 %73, %71
  %75 = and i64 %72, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %67, %77
  %78 = phi i64 [ %83, %77 ], [ %70, %67 ]
  %79 = phi i64 [ %84, %77 ], [ %75, %67 ]
  %80 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %78, i32 3
  %81 = bitcast %union._hb_var_int_t* %80 to [4 x i8]*
  %82 = getelementptr inbounds [4 x i8], [4 x i8]* %81, i64 0, i64 3
  store i8 %69, i8* %82, align 1
  %83 = add nuw nsw i64 %78, 1
  %84 = add i64 %79, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %77, !llvm.loop !3

86:                                               ; preds = %77, %67
  %87 = phi i64 [ %70, %67 ], [ %83, %77 ]
  %88 = icmp ult i64 %74, 7
  br i1 %88, label %89, label %93

89:                                               ; preds = %86, %93, %64
  %90 = add i32 %52, 1
  %91 = icmp eq i32 %90, 16
  %92 = select i1 %91, i32 1, i32 %90, !prof !2
  br label %582

93:                                               ; preds = %86, %93
  %94 = phi i64 [ %126, %93 ], [ %87, %86 ]
  %95 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %94, i32 3
  %96 = bitcast %union._hb_var_int_t* %95 to [4 x i8]*
  %97 = getelementptr inbounds [4 x i8], [4 x i8]* %96, i64 0, i64 3
  store i8 %69, i8* %97, align 1
  %98 = add nuw nsw i64 %94, 1
  %99 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %98, i32 3
  %100 = bitcast %union._hb_var_int_t* %99 to [4 x i8]*
  %101 = getelementptr inbounds [4 x i8], [4 x i8]* %100, i64 0, i64 3
  store i8 %69, i8* %101, align 1
  %102 = add nuw nsw i64 %94, 2
  %103 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %102, i32 3
  %104 = bitcast %union._hb_var_int_t* %103 to [4 x i8]*
  %105 = getelementptr inbounds [4 x i8], [4 x i8]* %104, i64 0, i64 3
  store i8 %69, i8* %105, align 1
  %106 = add nuw nsw i64 %94, 3
  %107 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %106, i32 3
  %108 = bitcast %union._hb_var_int_t* %107 to [4 x i8]*
  %109 = getelementptr inbounds [4 x i8], [4 x i8]* %108, i64 0, i64 3
  store i8 %69, i8* %109, align 1
  %110 = add nuw nsw i64 %94, 4
  %111 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %110, i32 3
  %112 = bitcast %union._hb_var_int_t* %111 to [4 x i8]*
  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %112, i64 0, i64 3
  store i8 %69, i8* %113, align 1
  %114 = add nuw nsw i64 %94, 5
  %115 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %114, i32 3
  %116 = bitcast %union._hb_var_int_t* %115 to [4 x i8]*
  %117 = getelementptr inbounds [4 x i8], [4 x i8]* %116, i64 0, i64 3
  store i8 %69, i8* %117, align 1
  %118 = add nuw nsw i64 %94, 6
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %118, i32 3
  %120 = bitcast %union._hb_var_int_t* %119 to [4 x i8]*
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 3
  store i8 %69, i8* %121, align 1
  %122 = add nuw nsw i64 %94, 7
  %123 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %122, i32 3
  %124 = bitcast %union._hb_var_int_t* %123 to [4 x i8]*
  %125 = getelementptr inbounds [4 x i8], [4 x i8]* %124, i64 0, i64 3
  store i8 %69, i8* %125, align 1
  %126 = add nuw nsw i64 %94, 8
  %127 = icmp eq i64 %126, %71
  br i1 %127, label %89, label %93

128:                                              ; preds = %60
  %129 = add i32 %51, 1
  %130 = icmp ult i32 %50, %129
  br i1 %130, label %131, label %154

131:                                              ; preds = %128
  %132 = trunc i32 %52 to i8
  %133 = shl i8 %132, 4
  %134 = or i8 %133, 3
  %135 = zext i32 %50 to i64
  %136 = zext i32 %129 to i64
  %137 = sub nsw i64 %136, %135
  %138 = xor i64 %135, -1
  %139 = add nsw i64 %138, %136
  %140 = and i64 %137, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %151, label %142

142:                                              ; preds = %131, %142
  %143 = phi i64 [ %148, %142 ], [ %135, %131 ]
  %144 = phi i64 [ %149, %142 ], [ %140, %131 ]
  %145 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %143, i32 3
  %146 = bitcast %union._hb_var_int_t* %145 to [4 x i8]*
  %147 = getelementptr inbounds [4 x i8], [4 x i8]* %146, i64 0, i64 3
  store i8 %134, i8* %147, align 1
  %148 = add nuw nsw i64 %143, 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %142, !llvm.loop !5

151:                                              ; preds = %142, %131
  %152 = phi i64 [ %135, %131 ], [ %148, %142 ]
  %153 = icmp ult i64 %139, 7
  br i1 %153, label %154, label %158

154:                                              ; preds = %151, %158, %128
  %155 = add i32 %52, 1
  %156 = icmp eq i32 %155, 16
  %157 = select i1 %156, i32 1, i32 %155, !prof !2
  br label %582

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %191, %158 ], [ %152, %151 ]
  %160 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %159, i32 3
  %161 = bitcast %union._hb_var_int_t* %160 to [4 x i8]*
  %162 = getelementptr inbounds [4 x i8], [4 x i8]* %161, i64 0, i64 3
  store i8 %134, i8* %162, align 1
  %163 = add nuw nsw i64 %159, 1
  %164 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %163, i32 3
  %165 = bitcast %union._hb_var_int_t* %164 to [4 x i8]*
  %166 = getelementptr inbounds [4 x i8], [4 x i8]* %165, i64 0, i64 3
  store i8 %134, i8* %166, align 1
  %167 = add nuw nsw i64 %159, 2
  %168 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %167, i32 3
  %169 = bitcast %union._hb_var_int_t* %168 to [4 x i8]*
  %170 = getelementptr inbounds [4 x i8], [4 x i8]* %169, i64 0, i64 3
  store i8 %134, i8* %170, align 1
  %171 = add nuw nsw i64 %159, 3
  %172 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %171, i32 3
  %173 = bitcast %union._hb_var_int_t* %172 to [4 x i8]*
  %174 = getelementptr inbounds [4 x i8], [4 x i8]* %173, i64 0, i64 3
  store i8 %134, i8* %174, align 1
  %175 = add nuw nsw i64 %159, 4
  %176 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %175, i32 3
  %177 = bitcast %union._hb_var_int_t* %176 to [4 x i8]*
  %178 = getelementptr inbounds [4 x i8], [4 x i8]* %177, i64 0, i64 3
  store i8 %134, i8* %178, align 1
  %179 = add nuw nsw i64 %159, 5
  %180 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %179, i32 3
  %181 = bitcast %union._hb_var_int_t* %180 to [4 x i8]*
  %182 = getelementptr inbounds [4 x i8], [4 x i8]* %181, i64 0, i64 3
  store i8 %134, i8* %182, align 1
  %183 = add nuw nsw i64 %159, 6
  %184 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %183, i32 3
  %185 = bitcast %union._hb_var_int_t* %184 to [4 x i8]*
  %186 = getelementptr inbounds [4 x i8], [4 x i8]* %185, i64 0, i64 3
  store i8 %134, i8* %186, align 1
  %187 = add nuw nsw i64 %159, 7
  %188 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %187, i32 3
  %189 = bitcast %union._hb_var_int_t* %188 to [4 x i8]*
  %190 = getelementptr inbounds [4 x i8], [4 x i8]* %189, i64 0, i64 3
  store i8 %134, i8* %190, align 1
  %191 = add nuw nsw i64 %159, 8
  %192 = icmp eq i64 %191, %136
  br i1 %192, label %154, label %158

193:                                              ; preds = %60
  %194 = add i32 %51, 1
  %195 = icmp ult i32 %50, %194
  br i1 %195, label %196, label %219

196:                                              ; preds = %193
  %197 = trunc i32 %52 to i8
  %198 = shl i8 %197, 4
  %199 = or i8 %198, 1
  %200 = zext i32 %50 to i64
  %201 = zext i32 %194 to i64
  %202 = sub nsw i64 %201, %200
  %203 = xor i64 %200, -1
  %204 = add nsw i64 %203, %201
  %205 = and i64 %202, 7
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %216, label %207

207:                                              ; preds = %196, %207
  %208 = phi i64 [ %213, %207 ], [ %200, %196 ]
  %209 = phi i64 [ %214, %207 ], [ %205, %196 ]
  %210 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %208, i32 3
  %211 = bitcast %union._hb_var_int_t* %210 to [4 x i8]*
  %212 = getelementptr inbounds [4 x i8], [4 x i8]* %211, i64 0, i64 3
  store i8 %199, i8* %212, align 1
  %213 = add nuw nsw i64 %208, 1
  %214 = add i64 %209, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %207, !llvm.loop !6

216:                                              ; preds = %207, %196
  %217 = phi i64 [ %200, %196 ], [ %213, %207 ]
  %218 = icmp ult i64 %204, 7
  br i1 %218, label %219, label %223

219:                                              ; preds = %216, %223, %193
  %220 = add i32 %52, 1
  %221 = icmp eq i32 %220, 16
  %222 = select i1 %221, i32 1, i32 %220, !prof !2
  br label %582

223:                                              ; preds = %216, %223
  %224 = phi i64 [ %256, %223 ], [ %217, %216 ]
  %225 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %224, i32 3
  %226 = bitcast %union._hb_var_int_t* %225 to [4 x i8]*
  %227 = getelementptr inbounds [4 x i8], [4 x i8]* %226, i64 0, i64 3
  store i8 %199, i8* %227, align 1
  %228 = add nuw nsw i64 %224, 1
  %229 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %228, i32 3
  %230 = bitcast %union._hb_var_int_t* %229 to [4 x i8]*
  %231 = getelementptr inbounds [4 x i8], [4 x i8]* %230, i64 0, i64 3
  store i8 %199, i8* %231, align 1
  %232 = add nuw nsw i64 %224, 2
  %233 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %232, i32 3
  %234 = bitcast %union._hb_var_int_t* %233 to [4 x i8]*
  %235 = getelementptr inbounds [4 x i8], [4 x i8]* %234, i64 0, i64 3
  store i8 %199, i8* %235, align 1
  %236 = add nuw nsw i64 %224, 3
  %237 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %236, i32 3
  %238 = bitcast %union._hb_var_int_t* %237 to [4 x i8]*
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* %238, i64 0, i64 3
  store i8 %199, i8* %239, align 1
  %240 = add nuw nsw i64 %224, 4
  %241 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %240, i32 3
  %242 = bitcast %union._hb_var_int_t* %241 to [4 x i8]*
  %243 = getelementptr inbounds [4 x i8], [4 x i8]* %242, i64 0, i64 3
  store i8 %199, i8* %243, align 1
  %244 = add nuw nsw i64 %224, 5
  %245 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %244, i32 3
  %246 = bitcast %union._hb_var_int_t* %245 to [4 x i8]*
  %247 = getelementptr inbounds [4 x i8], [4 x i8]* %246, i64 0, i64 3
  store i8 %199, i8* %247, align 1
  %248 = add nuw nsw i64 %224, 6
  %249 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %248, i32 3
  %250 = bitcast %union._hb_var_int_t* %249 to [4 x i8]*
  %251 = getelementptr inbounds [4 x i8], [4 x i8]* %250, i64 0, i64 3
  store i8 %199, i8* %251, align 1
  %252 = add nuw nsw i64 %224, 7
  %253 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %252, i32 3
  %254 = bitcast %union._hb_var_int_t* %253 to [4 x i8]*
  %255 = getelementptr inbounds [4 x i8], [4 x i8]* %254, i64 0, i64 3
  store i8 %199, i8* %255, align 1
  %256 = add nuw nsw i64 %224, 8
  %257 = icmp eq i64 %256, %201
  br i1 %257, label %219, label %223

258:                                              ; preds = %60
  %259 = add i32 %51, 1
  %260 = icmp ult i32 %50, %259
  br i1 %260, label %261, label %284

261:                                              ; preds = %258
  %262 = trunc i32 %52 to i8
  %263 = shl i8 %262, 4
  %264 = or i8 %263, 2
  %265 = zext i32 %50 to i64
  %266 = zext i32 %259 to i64
  %267 = sub nsw i64 %266, %265
  %268 = xor i64 %265, -1
  %269 = add nsw i64 %268, %266
  %270 = and i64 %267, 7
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %281, label %272

272:                                              ; preds = %261, %272
  %273 = phi i64 [ %278, %272 ], [ %265, %261 ]
  %274 = phi i64 [ %279, %272 ], [ %270, %261 ]
  %275 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %273, i32 3
  %276 = bitcast %union._hb_var_int_t* %275 to [4 x i8]*
  %277 = getelementptr inbounds [4 x i8], [4 x i8]* %276, i64 0, i64 3
  store i8 %264, i8* %277, align 1
  %278 = add nuw nsw i64 %273, 1
  %279 = add i64 %274, -1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %272, !llvm.loop !7

281:                                              ; preds = %272, %261
  %282 = phi i64 [ %265, %261 ], [ %278, %272 ]
  %283 = icmp ult i64 %269, 7
  br i1 %283, label %284, label %288

284:                                              ; preds = %281, %288, %258
  %285 = add i32 %52, 1
  %286 = icmp eq i32 %285, 16
  %287 = select i1 %286, i32 1, i32 %285, !prof !2
  br label %582

288:                                              ; preds = %281, %288
  %289 = phi i64 [ %321, %288 ], [ %282, %281 ]
  %290 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %289, i32 3
  %291 = bitcast %union._hb_var_int_t* %290 to [4 x i8]*
  %292 = getelementptr inbounds [4 x i8], [4 x i8]* %291, i64 0, i64 3
  store i8 %264, i8* %292, align 1
  %293 = add nuw nsw i64 %289, 1
  %294 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %293, i32 3
  %295 = bitcast %union._hb_var_int_t* %294 to [4 x i8]*
  %296 = getelementptr inbounds [4 x i8], [4 x i8]* %295, i64 0, i64 3
  store i8 %264, i8* %296, align 1
  %297 = add nuw nsw i64 %289, 2
  %298 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %297, i32 3
  %299 = bitcast %union._hb_var_int_t* %298 to [4 x i8]*
  %300 = getelementptr inbounds [4 x i8], [4 x i8]* %299, i64 0, i64 3
  store i8 %264, i8* %300, align 1
  %301 = add nuw nsw i64 %289, 3
  %302 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %301, i32 3
  %303 = bitcast %union._hb_var_int_t* %302 to [4 x i8]*
  %304 = getelementptr inbounds [4 x i8], [4 x i8]* %303, i64 0, i64 3
  store i8 %264, i8* %304, align 1
  %305 = add nuw nsw i64 %289, 4
  %306 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %305, i32 3
  %307 = bitcast %union._hb_var_int_t* %306 to [4 x i8]*
  %308 = getelementptr inbounds [4 x i8], [4 x i8]* %307, i64 0, i64 3
  store i8 %264, i8* %308, align 1
  %309 = add nuw nsw i64 %289, 5
  %310 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %309, i32 3
  %311 = bitcast %union._hb_var_int_t* %310 to [4 x i8]*
  %312 = getelementptr inbounds [4 x i8], [4 x i8]* %311, i64 0, i64 3
  store i8 %264, i8* %312, align 1
  %313 = add nuw nsw i64 %289, 6
  %314 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %313, i32 3
  %315 = bitcast %union._hb_var_int_t* %314 to [4 x i8]*
  %316 = getelementptr inbounds [4 x i8], [4 x i8]* %315, i64 0, i64 3
  store i8 %264, i8* %316, align 1
  %317 = add nuw nsw i64 %289, 7
  %318 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %317, i32 3
  %319 = bitcast %union._hb_var_int_t* %318 to [4 x i8]*
  %320 = getelementptr inbounds [4 x i8], [4 x i8]* %319, i64 0, i64 3
  store i8 %264, i8* %320, align 1
  %321 = add nuw nsw i64 %289, 8
  %322 = icmp eq i64 %321, %266
  br i1 %322, label %284, label %288

323:                                              ; preds = %60
  %324 = add i32 %51, 1
  %325 = icmp ult i32 %50, %324
  br i1 %325, label %326, label %349

326:                                              ; preds = %323
  %327 = trunc i32 %52 to i8
  %328 = shl i8 %327, 4
  %329 = or i8 %328, 3
  %330 = zext i32 %50 to i64
  %331 = zext i32 %324 to i64
  %332 = sub nsw i64 %331, %330
  %333 = xor i64 %330, -1
  %334 = add nsw i64 %333, %331
  %335 = and i64 %332, 7
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %346, label %337

337:                                              ; preds = %326, %337
  %338 = phi i64 [ %343, %337 ], [ %330, %326 ]
  %339 = phi i64 [ %344, %337 ], [ %335, %326 ]
  %340 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %338, i32 3
  %341 = bitcast %union._hb_var_int_t* %340 to [4 x i8]*
  %342 = getelementptr inbounds [4 x i8], [4 x i8]* %341, i64 0, i64 3
  store i8 %329, i8* %342, align 1
  %343 = add nuw nsw i64 %338, 1
  %344 = add i64 %339, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %337, !llvm.loop !8

346:                                              ; preds = %337, %326
  %347 = phi i64 [ %330, %326 ], [ %343, %337 ]
  %348 = icmp ult i64 %334, 7
  br i1 %348, label %349, label %353

349:                                              ; preds = %346, %353, %323
  %350 = add i32 %52, 1
  %351 = icmp eq i32 %350, 16
  %352 = select i1 %351, i32 1, i32 %350, !prof !2
  br label %582

353:                                              ; preds = %346, %353
  %354 = phi i64 [ %386, %353 ], [ %347, %346 ]
  %355 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %354, i32 3
  %356 = bitcast %union._hb_var_int_t* %355 to [4 x i8]*
  %357 = getelementptr inbounds [4 x i8], [4 x i8]* %356, i64 0, i64 3
  store i8 %329, i8* %357, align 1
  %358 = add nuw nsw i64 %354, 1
  %359 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %358, i32 3
  %360 = bitcast %union._hb_var_int_t* %359 to [4 x i8]*
  %361 = getelementptr inbounds [4 x i8], [4 x i8]* %360, i64 0, i64 3
  store i8 %329, i8* %361, align 1
  %362 = add nuw nsw i64 %354, 2
  %363 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %362, i32 3
  %364 = bitcast %union._hb_var_int_t* %363 to [4 x i8]*
  %365 = getelementptr inbounds [4 x i8], [4 x i8]* %364, i64 0, i64 3
  store i8 %329, i8* %365, align 1
  %366 = add nuw nsw i64 %354, 3
  %367 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %366, i32 3
  %368 = bitcast %union._hb_var_int_t* %367 to [4 x i8]*
  %369 = getelementptr inbounds [4 x i8], [4 x i8]* %368, i64 0, i64 3
  store i8 %329, i8* %369, align 1
  %370 = add nuw nsw i64 %354, 4
  %371 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %370, i32 3
  %372 = bitcast %union._hb_var_int_t* %371 to [4 x i8]*
  %373 = getelementptr inbounds [4 x i8], [4 x i8]* %372, i64 0, i64 3
  store i8 %329, i8* %373, align 1
  %374 = add nuw nsw i64 %354, 5
  %375 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %374, i32 3
  %376 = bitcast %union._hb_var_int_t* %375 to [4 x i8]*
  %377 = getelementptr inbounds [4 x i8], [4 x i8]* %376, i64 0, i64 3
  store i8 %329, i8* %377, align 1
  %378 = add nuw nsw i64 %354, 6
  %379 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %378, i32 3
  %380 = bitcast %union._hb_var_int_t* %379 to [4 x i8]*
  %381 = getelementptr inbounds [4 x i8], [4 x i8]* %380, i64 0, i64 3
  store i8 %329, i8* %381, align 1
  %382 = add nuw nsw i64 %354, 7
  %383 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %382, i32 3
  %384 = bitcast %union._hb_var_int_t* %383 to [4 x i8]*
  %385 = getelementptr inbounds [4 x i8], [4 x i8]* %384, i64 0, i64 3
  store i8 %329, i8* %385, align 1
  %386 = add nuw nsw i64 %354, 8
  %387 = icmp eq i64 %386, %331
  br i1 %387, label %349, label %353

388:                                              ; preds = %60
  %389 = add i32 %51, -1
  %390 = icmp ult i32 %50, %51
  br i1 %390, label %391, label %413

391:                                              ; preds = %388
  %392 = trunc i32 %52 to i8
  %393 = shl i8 %392, 4
  %394 = zext i32 %50 to i64
  %395 = zext i32 %51 to i64
  %396 = sub nsw i64 %395, %394
  %397 = xor i64 %394, -1
  %398 = add nsw i64 %397, %395
  %399 = and i64 %396, 7
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %410, label %401

401:                                              ; preds = %391, %401
  %402 = phi i64 [ %407, %401 ], [ %394, %391 ]
  %403 = phi i64 [ %408, %401 ], [ %399, %391 ]
  %404 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %402, i32 3
  %405 = bitcast %union._hb_var_int_t* %404 to [4 x i8]*
  %406 = getelementptr inbounds [4 x i8], [4 x i8]* %405, i64 0, i64 3
  store i8 %393, i8* %406, align 1
  %407 = add nuw nsw i64 %402, 1
  %408 = add i64 %403, -1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %401, !llvm.loop !9

410:                                              ; preds = %401, %391
  %411 = phi i64 [ %394, %391 ], [ %407, %401 ]
  %412 = icmp ult i64 %398, 7
  br i1 %412, label %413, label %417

413:                                              ; preds = %410, %417, %388
  %414 = add i32 %52, 1
  %415 = icmp eq i32 %414, 16
  %416 = select i1 %415, i32 1, i32 %414, !prof !2
  br label %582

417:                                              ; preds = %410, %417
  %418 = phi i64 [ %450, %417 ], [ %411, %410 ]
  %419 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %418, i32 3
  %420 = bitcast %union._hb_var_int_t* %419 to [4 x i8]*
  %421 = getelementptr inbounds [4 x i8], [4 x i8]* %420, i64 0, i64 3
  store i8 %393, i8* %421, align 1
  %422 = add nuw nsw i64 %418, 1
  %423 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %422, i32 3
  %424 = bitcast %union._hb_var_int_t* %423 to [4 x i8]*
  %425 = getelementptr inbounds [4 x i8], [4 x i8]* %424, i64 0, i64 3
  store i8 %393, i8* %425, align 1
  %426 = add nuw nsw i64 %418, 2
  %427 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %426, i32 3
  %428 = bitcast %union._hb_var_int_t* %427 to [4 x i8]*
  %429 = getelementptr inbounds [4 x i8], [4 x i8]* %428, i64 0, i64 3
  store i8 %393, i8* %429, align 1
  %430 = add nuw nsw i64 %418, 3
  %431 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %430, i32 3
  %432 = bitcast %union._hb_var_int_t* %431 to [4 x i8]*
  %433 = getelementptr inbounds [4 x i8], [4 x i8]* %432, i64 0, i64 3
  store i8 %393, i8* %433, align 1
  %434 = add nuw nsw i64 %418, 4
  %435 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %434, i32 3
  %436 = bitcast %union._hb_var_int_t* %435 to [4 x i8]*
  %437 = getelementptr inbounds [4 x i8], [4 x i8]* %436, i64 0, i64 3
  store i8 %393, i8* %437, align 1
  %438 = add nuw nsw i64 %418, 5
  %439 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %438, i32 3
  %440 = bitcast %union._hb_var_int_t* %439 to [4 x i8]*
  %441 = getelementptr inbounds [4 x i8], [4 x i8]* %440, i64 0, i64 3
  store i8 %393, i8* %441, align 1
  %442 = add nuw nsw i64 %418, 6
  %443 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %442, i32 3
  %444 = bitcast %union._hb_var_int_t* %443 to [4 x i8]*
  %445 = getelementptr inbounds [4 x i8], [4 x i8]* %444, i64 0, i64 3
  store i8 %393, i8* %445, align 1
  %446 = add nuw nsw i64 %418, 7
  %447 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %446, i32 3
  %448 = bitcast %union._hb_var_int_t* %447 to [4 x i8]*
  %449 = getelementptr inbounds [4 x i8], [4 x i8]* %448, i64 0, i64 3
  store i8 %393, i8* %449, align 1
  %450 = add nuw nsw i64 %418, 8
  %451 = icmp eq i64 %450, %395
  br i1 %451, label %413, label %417

452:                                              ; preds = %60
  %453 = add i32 %51, -1
  %454 = icmp ult i32 %50, %51
  br i1 %454, label %455, label %478

455:                                              ; preds = %452
  %456 = trunc i32 %52 to i8
  %457 = shl i8 %456, 4
  %458 = or i8 %457, 2
  %459 = zext i32 %50 to i64
  %460 = zext i32 %51 to i64
  %461 = sub nsw i64 %460, %459
  %462 = xor i64 %459, -1
  %463 = add nsw i64 %462, %460
  %464 = and i64 %461, 7
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %475, label %466

466:                                              ; preds = %455, %466
  %467 = phi i64 [ %472, %466 ], [ %459, %455 ]
  %468 = phi i64 [ %473, %466 ], [ %464, %455 ]
  %469 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %467, i32 3
  %470 = bitcast %union._hb_var_int_t* %469 to [4 x i8]*
  %471 = getelementptr inbounds [4 x i8], [4 x i8]* %470, i64 0, i64 3
  store i8 %458, i8* %471, align 1
  %472 = add nuw nsw i64 %467, 1
  %473 = add i64 %468, -1
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %466, !llvm.loop !10

475:                                              ; preds = %466, %455
  %476 = phi i64 [ %459, %455 ], [ %472, %466 ]
  %477 = icmp ult i64 %463, 7
  br i1 %477, label %478, label %482

478:                                              ; preds = %475, %482, %452
  %479 = add i32 %52, 1
  %480 = icmp eq i32 %479, 16
  %481 = select i1 %480, i32 1, i32 %479, !prof !2
  br label %582

482:                                              ; preds = %475, %482
  %483 = phi i64 [ %515, %482 ], [ %476, %475 ]
  %484 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %483, i32 3
  %485 = bitcast %union._hb_var_int_t* %484 to [4 x i8]*
  %486 = getelementptr inbounds [4 x i8], [4 x i8]* %485, i64 0, i64 3
  store i8 %458, i8* %486, align 1
  %487 = add nuw nsw i64 %483, 1
  %488 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %487, i32 3
  %489 = bitcast %union._hb_var_int_t* %488 to [4 x i8]*
  %490 = getelementptr inbounds [4 x i8], [4 x i8]* %489, i64 0, i64 3
  store i8 %458, i8* %490, align 1
  %491 = add nuw nsw i64 %483, 2
  %492 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %491, i32 3
  %493 = bitcast %union._hb_var_int_t* %492 to [4 x i8]*
  %494 = getelementptr inbounds [4 x i8], [4 x i8]* %493, i64 0, i64 3
  store i8 %458, i8* %494, align 1
  %495 = add nuw nsw i64 %483, 3
  %496 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %495, i32 3
  %497 = bitcast %union._hb_var_int_t* %496 to [4 x i8]*
  %498 = getelementptr inbounds [4 x i8], [4 x i8]* %497, i64 0, i64 3
  store i8 %458, i8* %498, align 1
  %499 = add nuw nsw i64 %483, 4
  %500 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %499, i32 3
  %501 = bitcast %union._hb_var_int_t* %500 to [4 x i8]*
  %502 = getelementptr inbounds [4 x i8], [4 x i8]* %501, i64 0, i64 3
  store i8 %458, i8* %502, align 1
  %503 = add nuw nsw i64 %483, 5
  %504 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %503, i32 3
  %505 = bitcast %union._hb_var_int_t* %504 to [4 x i8]*
  %506 = getelementptr inbounds [4 x i8], [4 x i8]* %505, i64 0, i64 3
  store i8 %458, i8* %506, align 1
  %507 = add nuw nsw i64 %483, 6
  %508 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %507, i32 3
  %509 = bitcast %union._hb_var_int_t* %508 to [4 x i8]*
  %510 = getelementptr inbounds [4 x i8], [4 x i8]* %509, i64 0, i64 3
  store i8 %458, i8* %510, align 1
  %511 = add nuw nsw i64 %483, 7
  %512 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %511, i32 3
  %513 = bitcast %union._hb_var_int_t* %512 to [4 x i8]*
  %514 = getelementptr inbounds [4 x i8], [4 x i8]* %513, i64 0, i64 3
  store i8 %458, i8* %514, align 1
  %515 = add nuw nsw i64 %483, 8
  %516 = icmp eq i64 %515, %460
  br i1 %516, label %478, label %482

517:                                              ; preds = %60
  %518 = add i32 %51, -1
  %519 = icmp ult i32 %50, %51
  br i1 %519, label %520, label %543

520:                                              ; preds = %517
  %521 = trunc i32 %52 to i8
  %522 = shl i8 %521, 4
  %523 = or i8 %522, 3
  %524 = zext i32 %50 to i64
  %525 = zext i32 %51 to i64
  %526 = sub nsw i64 %525, %524
  %527 = xor i64 %524, -1
  %528 = add nsw i64 %527, %525
  %529 = and i64 %526, 7
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %540, label %531

531:                                              ; preds = %520, %531
  %532 = phi i64 [ %537, %531 ], [ %524, %520 ]
  %533 = phi i64 [ %538, %531 ], [ %529, %520 ]
  %534 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %532, i32 3
  %535 = bitcast %union._hb_var_int_t* %534 to [4 x i8]*
  %536 = getelementptr inbounds [4 x i8], [4 x i8]* %535, i64 0, i64 3
  store i8 %523, i8* %536, align 1
  %537 = add nuw nsw i64 %532, 1
  %538 = add i64 %533, -1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %531, !llvm.loop !11

540:                                              ; preds = %531, %520
  %541 = phi i64 [ %524, %520 ], [ %537, %531 ]
  %542 = icmp ult i64 %528, 7
  br i1 %542, label %543, label %547

543:                                              ; preds = %540, %547, %517
  %544 = add i32 %52, 1
  %545 = icmp eq i32 %544, 16
  %546 = select i1 %545, i32 1, i32 %544, !prof !2
  br label %582

547:                                              ; preds = %540, %547
  %548 = phi i64 [ %580, %547 ], [ %541, %540 ]
  %549 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %548, i32 3
  %550 = bitcast %union._hb_var_int_t* %549 to [4 x i8]*
  %551 = getelementptr inbounds [4 x i8], [4 x i8]* %550, i64 0, i64 3
  store i8 %523, i8* %551, align 1
  %552 = add nuw nsw i64 %548, 1
  %553 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %552, i32 3
  %554 = bitcast %union._hb_var_int_t* %553 to [4 x i8]*
  %555 = getelementptr inbounds [4 x i8], [4 x i8]* %554, i64 0, i64 3
  store i8 %523, i8* %555, align 1
  %556 = add nuw nsw i64 %548, 2
  %557 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %556, i32 3
  %558 = bitcast %union._hb_var_int_t* %557 to [4 x i8]*
  %559 = getelementptr inbounds [4 x i8], [4 x i8]* %558, i64 0, i64 3
  store i8 %523, i8* %559, align 1
  %560 = add nuw nsw i64 %548, 3
  %561 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %560, i32 3
  %562 = bitcast %union._hb_var_int_t* %561 to [4 x i8]*
  %563 = getelementptr inbounds [4 x i8], [4 x i8]* %562, i64 0, i64 3
  store i8 %523, i8* %563, align 1
  %564 = add nuw nsw i64 %548, 4
  %565 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %564, i32 3
  %566 = bitcast %union._hb_var_int_t* %565 to [4 x i8]*
  %567 = getelementptr inbounds [4 x i8], [4 x i8]* %566, i64 0, i64 3
  store i8 %523, i8* %567, align 1
  %568 = add nuw nsw i64 %548, 5
  %569 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %568, i32 3
  %570 = bitcast %union._hb_var_int_t* %569 to [4 x i8]*
  %571 = getelementptr inbounds [4 x i8], [4 x i8]* %570, i64 0, i64 3
  store i8 %523, i8* %571, align 1
  %572 = add nuw nsw i64 %548, 6
  %573 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %572, i32 3
  %574 = bitcast %union._hb_var_int_t* %573 to [4 x i8]*
  %575 = getelementptr inbounds [4 x i8], [4 x i8]* %574, i64 0, i64 3
  store i8 %523, i8* %575, align 1
  %576 = add nuw nsw i64 %548, 7
  %577 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %7, i64 %576, i32 3
  %578 = bitcast %union._hb_var_int_t* %577 to [4 x i8]*
  %579 = getelementptr inbounds [4 x i8], [4 x i8]* %578, i64 0, i64 3
  store i8 %523, i8* %579, align 1
  %580 = add nuw nsw i64 %548, 8
  %581 = icmp eq i64 %580, %525
  br i1 %581, label %543, label %547

582:                                              ; preds = %543, %478, %413, %349, %284, %219, %154, %89, %60, %49
  %583 = phi i32 [ %51, %49 ], [ %51, %60 ], [ %518, %543 ], [ %453, %478 ], [ %389, %413 ], [ %51, %349 ], [ %51, %284 ], [ %51, %219 ], [ %51, %154 ], [ %51, %89 ]
  %584 = phi i32 [ %52, %49 ], [ %52, %60 ], [ %546, %543 ], [ %481, %478 ], [ %416, %413 ], [ %352, %349 ], [ %287, %284 ], [ %222, %219 ], [ %157, %154 ], [ %92, %89 ]
  %585 = sext i8 %55 to i64
  %586 = getelementptr inbounds [52 x i8], [52 x i8]* bitcast (<{ i8, [51 x i8] }>* @_ZL42_myanmar_syllable_machine_to_state_actions to [52 x i8]*), i64 0, i64 %585
  %587 = load i8, i8* %586, align 1
  %588 = icmp eq i8 %587, 1
  %589 = select i1 %588, i32 0, i32 %50
  %590 = add i32 %583, 1
  %591 = icmp eq i32 %590, %5
  br i1 %591, label %592, label %9

592:                                              ; preds = %582, %3
  %593 = phi i32 [ 0, %3 ], [ %589, %582 ]
  %594 = phi i32 [ 0, %3 ], [ %56, %582 ]
  %595 = phi i32 [ 1, %3 ], [ %584, %582 ]
  %596 = icmp eq i32 %594, 0
  br i1 %596, label %603, label %597

597:                                              ; preds = %592
  %598 = sext i32 %594 to i64
  %599 = getelementptr inbounds [52 x i16], [52 x i16]* @_ZL35_myanmar_syllable_machine_eof_trans, i64 0, i64 %598
  %600 = load i16, i16* %599, align 2
  %601 = sext i16 %600 to i64
  %602 = add nsw i64 %601, -1
  br label %49

603:                                              ; preds = %592
  %604 = load i32, i32* %4, align 8
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %627, label %606

606:                                              ; preds = %603
  %607 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %608 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %607, i64 0, i32 3
  %609 = bitcast %union._hb_var_int_t* %608 to [4 x i8]*
  %610 = getelementptr inbounds [4 x i8], [4 x i8]* %609, i64 0, i64 3
  %611 = load i8, i8* %610, align 1
  %612 = add i32 %604, -1
  %613 = zext i32 %612 to i64
  br label %614

614:                                              ; preds = %618, %606
  %615 = phi i64 [ %616, %618 ], [ 0, %606 ]
  %616 = add nuw nsw i64 %615, 1
  %617 = icmp eq i64 %615, %613
  br i1 %617, label %624, label %618

618:                                              ; preds = %614
  %619 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %607, i64 %616, i32 3
  %620 = bitcast %union._hb_var_int_t* %619 to [4 x i8]*
  %621 = getelementptr inbounds [4 x i8], [4 x i8]* %620, i64 0, i64 3
  %622 = load i8, i8* %621, align 1
  %623 = icmp eq i8 %611, %622
  br i1 %623, label %614, label %624

624:                                              ; preds = %618, %614
  br i1 %605, label %627, label %625

625:                                              ; preds = %624
  %626 = trunc i64 %616 to i32
  br label %628

627:                                              ; preds = %655, %603, %624
  ret void

628:                                              ; preds = %625, %655
  %629 = phi i32 [ %637, %655 ], [ %604, %625 ]
  %630 = phi i32 [ %646, %655 ], [ %626, %625 ]
  %631 = phi i32 [ %630, %655 ], [ 0, %625 ]
  %632 = sub i32 %630, %631
  %633 = icmp ult i32 %632, 2
  br i1 %633, label %636, label %634

634:                                              ; preds = %628
  tail call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %2, i32 %631, i32 %630) #4
  %635 = load i32, i32* %4, align 8
  br label %636

636:                                              ; preds = %628, %634
  %637 = phi i32 [ %629, %628 ], [ %635, %634 ]
  %638 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %6, align 8
  %639 = zext i32 %630 to i64
  %640 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %638, i64 %639, i32 3
  %641 = bitcast %union._hb_var_int_t* %640 to [4 x i8]*
  %642 = getelementptr inbounds [4 x i8], [4 x i8]* %641, i64 0, i64 3
  %643 = load i8, i8* %642, align 1
  br label %644

644:                                              ; preds = %648, %636
  %645 = phi i32 [ %630, %636 ], [ %646, %648 ]
  %646 = add i32 %645, 1
  %647 = icmp ult i32 %646, %637
  br i1 %647, label %648, label %655

648:                                              ; preds = %644
  %649 = zext i32 %646 to i64
  %650 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %638, i64 %649, i32 3
  %651 = bitcast %union._hb_var_int_t* %650 to [4 x i8]*
  %652 = getelementptr inbounds [4 x i8], [4 x i8]* %651, i64 0, i64 3
  %653 = load i8, i8* %652, align 1
  %654 = icmp eq i8 %643, %653
  br i1 %654, label %644, label %655

655:                                              ; preds = %644, %648
  %656 = icmp ult i32 %630, %604
  br i1 %656, label %628, label %627
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL15reorder_myanmarPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t*, %struct.hb_buffer_t*) #0 {
  %4 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  br i1 %4, label %5, label %301

5:                                                ; preds = %3
  tail call void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t* %1, %struct.hb_buffer_t* %2, i32 2, i32 11, i32 -1) #4
  %6 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %11 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %10, align 8
  %12 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 0, i32 3
  %13 = bitcast %union._hb_var_int_t* %12 to [4 x i8]*
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %13, i64 0, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = add i32 %7, -1
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %22, %9
  %19 = phi i64 [ %20, %22 ], [ 0, %9 ]
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp eq i64 %19, %17
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %11, i64 %20, i32 3
  %24 = bitcast %union._hb_var_int_t* %23 to [4 x i8]*
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %15, %26
  br i1 %27, label %18, label %28

28:                                               ; preds = %22, %18
  br i1 %8, label %37, label %29

29:                                               ; preds = %28
  %30 = trunc i64 %20 to i32
  %31 = getelementptr %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %32 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  %33 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %32, i64 0, i32 3
  %34 = bitcast %union._hb_var_int_t* %33 to [4 x i8]*
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 3
  %36 = load i8, i8* %35, align 1
  br label %39

37:                                               ; preds = %299, %5, %28
  %38 = tail call zeroext i1 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t* %2, %struct.hb_font_t* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  br label %301

39:                                               ; preds = %29, %299
  %40 = phi %struct.hb_glyph_info_t* [ %32, %29 ], [ %281, %299 ]
  %41 = phi i32 [ %7, %29 ], [ %282, %299 ]
  %42 = phi i8 [ %36, %29 ], [ %287, %299 ]
  %43 = phi i32 [ %30, %29 ], [ %290, %299 ]
  %44 = phi i32 [ 0, %29 ], [ %43, %299 ]
  %45 = zext i32 %44 to i64
  %46 = and i8 %42, 15
  %47 = zext i8 %46 to i32
  switch i32 %47, label %280 [
    i32 2, label %48
    i32 0, label %48
  ]

48:                                               ; preds = %39, %39
  %49 = add i32 %44, 3
  %50 = icmp ugt i32 %49, %43
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %45, i32 4
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 2
  %55 = load i8, i8* %54, align 2
  %56 = icmp eq i8 %55, 16
  br i1 %56, label %57, label %75

57:                                               ; preds = %51
  %58 = add nuw i32 %44, 1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %59, i32 4
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 2
  %63 = load i8, i8* %62, align 2
  %64 = icmp eq i8 %63, 18
  br i1 %64, label %65, label %75

65:                                               ; preds = %57
  %66 = add i32 %44, 2
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %67, i32 4
  %69 = bitcast %union._hb_var_int_t* %68 to [4 x i8]*
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %69, i64 0, i64 2
  %71 = load i8, i8* %70, align 2
  %72 = icmp eq i8 %71, 4
  %73 = select i1 %72, i32 %49, i32 %44
  %74 = select i1 %72, i32 3, i32 0
  br label %75

75:                                               ; preds = %65, %57, %51, %48
  %76 = phi i32 [ %44, %57 ], [ %44, %51 ], [ %44, %48 ], [ %73, %65 ]
  %77 = phi i32 [ 0, %57 ], [ 0, %51 ], [ 0, %48 ], [ %74, %65 ]
  %78 = icmp ult i32 %76, %43
  br i1 %78, label %79, label %105

79:                                               ; preds = %75
  %80 = zext i32 %76 to i64
  br label %81

81:                                               ; preds = %99, %79
  %82 = phi i64 [ %80, %79 ], [ %100, %99 ]
  %83 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %82, i32 3
  %84 = bitcast %union._hb_var_int_t* %83 to i16*
  %85 = load i16, i16* %84, align 4
  %86 = and i16 %85, 32
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %88, label %99

88:                                               ; preds = %81
  %89 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %82, i32 4
  %90 = bitcast %union._hb_var_int_t* %89 to [4 x i8]*
  %91 = getelementptr inbounds [4 x i8], [4 x i8]* %90, i64 0, i64 2
  %92 = load i8, i8* %91, align 2
  %93 = icmp ult i8 %92, 32
  br i1 %93, label %94, label %99

94:                                               ; preds = %88
  %95 = zext i8 %92 to i32
  %96 = shl i32 1, %95
  %97 = and i32 %96, 727046
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %94, %88, %81
  %100 = add nuw nsw i64 %82, 1
  %101 = trunc i64 %100 to i32
  %102 = icmp eq i32 %43, %101
  br i1 %102, label %105, label %81

103:                                              ; preds = %94
  %104 = trunc i64 %82 to i32
  br label %105

105:                                              ; preds = %99, %103, %75
  %106 = phi i32 [ %44, %75 ], [ %104, %103 ], [ %44, %99 ]
  %107 = add i32 %77, %44
  %108 = icmp ugt i32 %107, %44
  br i1 %108, label %109, label %128

109:                                              ; preds = %105
  %110 = zext i32 %107 to i64
  %111 = sub nsw i64 %110, %45
  %112 = xor i64 %45, -1
  %113 = add nsw i64 %112, %110
  %114 = and i64 %111, 7
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %109, %116
  %117 = phi i64 [ %122, %116 ], [ %45, %109 ]
  %118 = phi i64 [ %123, %116 ], [ %114, %109 ]
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %117, i32 4
  %120 = bitcast %union._hb_var_int_t* %119 to [4 x i8]*
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %120, i64 0, i64 3
  store i8 5, i8* %121, align 1
  %122 = add nuw nsw i64 %117, 1
  %123 = add i64 %118, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %116, !llvm.loop !12

125:                                              ; preds = %116, %109
  %126 = phi i64 [ %45, %109 ], [ %122, %116 ]
  %127 = icmp ult i64 %113, 7
  br i1 %127, label %128, label %151

128:                                              ; preds = %125, %151, %105
  %129 = phi i32 [ %44, %105 ], [ %107, %151 ], [ %107, %125 ]
  %130 = icmp ult i32 %129, %106
  br i1 %130, label %131, label %221

131:                                              ; preds = %128
  %132 = zext i32 %129 to i64
  %133 = zext i32 %106 to i64
  %134 = sub nsw i64 %133, %132
  %135 = xor i64 %132, -1
  %136 = add nsw i64 %135, %133
  %137 = and i64 %134, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %131, %139
  %140 = phi i64 [ %145, %139 ], [ %132, %131 ]
  %141 = phi i64 [ %146, %139 ], [ %137, %131 ]
  %142 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %140, i32 4
  %143 = bitcast %union._hb_var_int_t* %142 to [4 x i8]*
  %144 = getelementptr inbounds [4 x i8], [4 x i8]* %143, i64 0, i64 3
  store i8 3, i8* %144, align 1
  %145 = add nuw nsw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !13

148:                                              ; preds = %139, %131
  %149 = phi i64 [ %132, %131 ], [ %145, %139 ]
  %150 = icmp ult i64 %136, 7
  br i1 %150, label %221, label %186

151:                                              ; preds = %125, %151
  %152 = phi i64 [ %184, %151 ], [ %126, %125 ]
  %153 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %152, i32 4
  %154 = bitcast %union._hb_var_int_t* %153 to [4 x i8]*
  %155 = getelementptr inbounds [4 x i8], [4 x i8]* %154, i64 0, i64 3
  store i8 5, i8* %155, align 1
  %156 = add nuw nsw i64 %152, 1
  %157 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %156, i32 4
  %158 = bitcast %union._hb_var_int_t* %157 to [4 x i8]*
  %159 = getelementptr inbounds [4 x i8], [4 x i8]* %158, i64 0, i64 3
  store i8 5, i8* %159, align 1
  %160 = add nuw nsw i64 %152, 2
  %161 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %160, i32 4
  %162 = bitcast %union._hb_var_int_t* %161 to [4 x i8]*
  %163 = getelementptr inbounds [4 x i8], [4 x i8]* %162, i64 0, i64 3
  store i8 5, i8* %163, align 1
  %164 = add nuw nsw i64 %152, 3
  %165 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %164, i32 4
  %166 = bitcast %union._hb_var_int_t* %165 to [4 x i8]*
  %167 = getelementptr inbounds [4 x i8], [4 x i8]* %166, i64 0, i64 3
  store i8 5, i8* %167, align 1
  %168 = add nuw nsw i64 %152, 4
  %169 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %168, i32 4
  %170 = bitcast %union._hb_var_int_t* %169 to [4 x i8]*
  %171 = getelementptr inbounds [4 x i8], [4 x i8]* %170, i64 0, i64 3
  store i8 5, i8* %171, align 1
  %172 = add nuw nsw i64 %152, 5
  %173 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %172, i32 4
  %174 = bitcast %union._hb_var_int_t* %173 to [4 x i8]*
  %175 = getelementptr inbounds [4 x i8], [4 x i8]* %174, i64 0, i64 3
  store i8 5, i8* %175, align 1
  %176 = add nuw nsw i64 %152, 6
  %177 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %176, i32 4
  %178 = bitcast %union._hb_var_int_t* %177 to [4 x i8]*
  %179 = getelementptr inbounds [4 x i8], [4 x i8]* %178, i64 0, i64 3
  store i8 5, i8* %179, align 1
  %180 = add nuw nsw i64 %152, 7
  %181 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %180, i32 4
  %182 = bitcast %union._hb_var_int_t* %181 to [4 x i8]*
  %183 = getelementptr inbounds [4 x i8], [4 x i8]* %182, i64 0, i64 3
  store i8 5, i8* %183, align 1
  %184 = add nuw nsw i64 %152, 8
  %185 = icmp eq i64 %184, %110
  br i1 %185, label %128, label %151

186:                                              ; preds = %148, %186
  %187 = phi i64 [ %219, %186 ], [ %149, %148 ]
  %188 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %187, i32 4
  %189 = bitcast %union._hb_var_int_t* %188 to [4 x i8]*
  %190 = getelementptr inbounds [4 x i8], [4 x i8]* %189, i64 0, i64 3
  store i8 3, i8* %190, align 1
  %191 = add nuw nsw i64 %187, 1
  %192 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %191, i32 4
  %193 = bitcast %union._hb_var_int_t* %192 to [4 x i8]*
  %194 = getelementptr inbounds [4 x i8], [4 x i8]* %193, i64 0, i64 3
  store i8 3, i8* %194, align 1
  %195 = add nuw nsw i64 %187, 2
  %196 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %195, i32 4
  %197 = bitcast %union._hb_var_int_t* %196 to [4 x i8]*
  %198 = getelementptr inbounds [4 x i8], [4 x i8]* %197, i64 0, i64 3
  store i8 3, i8* %198, align 1
  %199 = add nuw nsw i64 %187, 3
  %200 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %199, i32 4
  %201 = bitcast %union._hb_var_int_t* %200 to [4 x i8]*
  %202 = getelementptr inbounds [4 x i8], [4 x i8]* %201, i64 0, i64 3
  store i8 3, i8* %202, align 1
  %203 = add nuw nsw i64 %187, 4
  %204 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %203, i32 4
  %205 = bitcast %union._hb_var_int_t* %204 to [4 x i8]*
  %206 = getelementptr inbounds [4 x i8], [4 x i8]* %205, i64 0, i64 3
  store i8 3, i8* %206, align 1
  %207 = add nuw nsw i64 %187, 5
  %208 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %207, i32 4
  %209 = bitcast %union._hb_var_int_t* %208 to [4 x i8]*
  %210 = getelementptr inbounds [4 x i8], [4 x i8]* %209, i64 0, i64 3
  store i8 3, i8* %210, align 1
  %211 = add nuw nsw i64 %187, 6
  %212 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %211, i32 4
  %213 = bitcast %union._hb_var_int_t* %212 to [4 x i8]*
  %214 = getelementptr inbounds [4 x i8], [4 x i8]* %213, i64 0, i64 3
  store i8 3, i8* %214, align 1
  %215 = add nuw nsw i64 %187, 7
  %216 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %215, i32 4
  %217 = bitcast %union._hb_var_int_t* %216 to [4 x i8]*
  %218 = getelementptr inbounds [4 x i8], [4 x i8]* %217, i64 0, i64 3
  store i8 3, i8* %218, align 1
  %219 = add nuw nsw i64 %187, 8
  %220 = icmp eq i64 %219, %133
  br i1 %220, label %221, label %186

221:                                              ; preds = %148, %186, %128
  %222 = phi i32 [ %129, %128 ], [ %106, %186 ], [ %106, %148 ]
  %223 = icmp ult i32 %222, %43
  br i1 %223, label %224, label %230

224:                                              ; preds = %221
  %225 = zext i32 %222 to i64
  %226 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %225, i32 4
  %227 = bitcast %union._hb_var_int_t* %226 to [4 x i8]*
  %228 = getelementptr inbounds [4 x i8], [4 x i8]* %227, i64 0, i64 3
  store i8 4, i8* %228, align 1
  %229 = add nuw i32 %222, 1
  br label %230

230:                                              ; preds = %224, %221
  %231 = phi i32 [ %229, %224 ], [ %222, %221 ]
  %232 = icmp ult i32 %231, %43
  br i1 %232, label %233, label %277

233:                                              ; preds = %230
  %234 = zext i32 %231 to i64
  %235 = zext i32 %43 to i64
  br label %236

236:                                              ; preds = %273, %233
  %237 = phi i64 [ %234, %233 ], [ %275, %273 ]
  %238 = phi i32 [ 5, %233 ], [ %274, %273 ]
  %239 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %237, i32 4
  %240 = bitcast %union._hb_var_int_t* %239 to [4 x i8]*
  %241 = getelementptr inbounds [4 x i8], [4 x i8]* %240, i64 0, i64 2
  %242 = load i8, i8* %241, align 2
  %243 = icmp eq i8 %242, 22
  %244 = getelementptr inbounds [4 x i8], [4 x i8]* %240, i64 0, i64 3
  br i1 %243, label %270, label %245

245:                                              ; preds = %236
  %246 = load i8, i8* %244, align 1
  %247 = icmp ult i8 %246, 4
  br i1 %247, label %273, label %248

248:                                              ; preds = %245
  %249 = icmp eq i8 %242, 30
  br i1 %249, label %250, label %257

250:                                              ; preds = %248
  %251 = add nuw i64 %237, 4294967295
  %252 = and i64 %251, 4294967295
  %253 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %40, i64 %252, i32 4
  %254 = bitcast %union._hb_var_int_t* %253 to [4 x i8]*
  %255 = getelementptr inbounds [4 x i8], [4 x i8]* %254, i64 0, i64 3
  %256 = load i8, i8* %255, align 1
  br label %270

257:                                              ; preds = %248
  %258 = icmp eq i32 %238, 5
  %259 = icmp eq i8 %242, 27
  %260 = and i1 %258, %259
  br i1 %260, label %270, label %261

261:                                              ; preds = %257
  %262 = icmp eq i32 %238, 8
  br i1 %262, label %263, label %268

263:                                              ; preds = %261
  %264 = icmp eq i8 %242, 10
  br i1 %264, label %270, label %265

265:                                              ; preds = %263
  %266 = select i1 %259, i8 8, i8 9
  %267 = select i1 %259, i32 8, i32 9
  br label %270

268:                                              ; preds = %261
  %269 = trunc i32 %238 to i8
  br label %270

270:                                              ; preds = %265, %263, %257, %236, %250, %268
  %271 = phi i8 [ %269, %268 ], [ %256, %250 ], [ 3, %236 ], [ 8, %257 ], [ 7, %263 ], [ %266, %265 ]
  %272 = phi i32 [ %238, %268 ], [ %238, %250 ], [ %238, %236 ], [ 8, %257 ], [ 8, %263 ], [ %267, %265 ]
  store i8 %271, i8* %244, align 1
  br label %273

273:                                              ; preds = %270, %245
  %274 = phi i32 [ %238, %245 ], [ %272, %270 ]
  %275 = add nuw nsw i64 %237, 1
  %276 = icmp eq i64 %275, %235
  br i1 %276, label %277, label %236

277:                                              ; preds = %273, %230
  tail call void @_ZN11hb_buffer_t4sortEjjPFiPK15hb_glyph_info_tS2_E(%struct.hb_buffer_t* %2, i32 %44, i32 %43, i32 (%struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*)* nonnull @_ZL21compare_myanmar_orderPK15hb_glyph_info_tS1_) #4
  %278 = load i32, i32* %6, align 8
  %279 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %31, align 8
  br label %280

280:                                              ; preds = %39, %277
  %281 = phi %struct.hb_glyph_info_t* [ %40, %39 ], [ %279, %277 ]
  %282 = phi i32 [ %41, %39 ], [ %278, %277 ]
  %283 = zext i32 %43 to i64
  %284 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %281, i64 %283, i32 3
  %285 = bitcast %union._hb_var_int_t* %284 to [4 x i8]*
  %286 = getelementptr inbounds [4 x i8], [4 x i8]* %285, i64 0, i64 3
  %287 = load i8, i8* %286, align 1
  br label %288

288:                                              ; preds = %292, %280
  %289 = phi i32 [ %43, %280 ], [ %290, %292 ]
  %290 = add i32 %289, 1
  %291 = icmp ult i32 %290, %282
  br i1 %291, label %292, label %299

292:                                              ; preds = %288
  %293 = zext i32 %290 to i64
  %294 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %281, i64 %293, i32 3
  %295 = bitcast %union._hb_var_int_t* %294 to [4 x i8]*
  %296 = getelementptr inbounds [4 x i8], [4 x i8]* %295, i64 0, i64 3
  %297 = load i8, i8* %296, align 1
  %298 = icmp eq i8 %287, %297
  br i1 %298, label %288, label %299

299:                                              ; preds = %288, %292
  %300 = icmp ult i32 %43, %7
  br i1 %300, label %39, label %37

301:                                              ; preds = %37, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL19_hb_clear_syllablesPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_font_t* nocapture readnone, %struct.hb_buffer_t* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 18
  %5 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %4, align 8
  %6 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %2, i64 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = zext i32 %7 to i64
  %11 = add nsw i64 %10, -1
  %12 = and i64 %10, 7
  %13 = icmp ult i64 %11, 7
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = sub nsw i64 %10, %12
  br label %29

16:                                               ; preds = %29, %9
  %17 = phi i64 [ 0, %9 ], [ %63, %29 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %19
  %20 = phi i64 [ %25, %19 ], [ %17, %16 ]
  %21 = phi i64 [ %26, %19 ], [ %12, %16 ]
  %22 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %20, i32 3
  %23 = bitcast %union._hb_var_int_t* %22 to [4 x i8]*
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %23, i64 0, i64 3
  store i8 0, i8* %24, align 1
  %25 = add nuw nsw i64 %20, 1
  %26 = add i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19, !llvm.loop !14

28:                                               ; preds = %16, %19, %3
  ret void

29:                                               ; preds = %29, %14
  %30 = phi i64 [ 0, %14 ], [ %63, %29 ]
  %31 = phi i64 [ %15, %14 ], [ %64, %29 ]
  %32 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %30, i32 3
  %33 = bitcast %union._hb_var_int_t* %32 to [4 x i8]*
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* %33, i64 0, i64 3
  store i8 0, i8* %34, align 1
  %35 = or i64 %30, 1
  %36 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %35, i32 3
  %37 = bitcast %union._hb_var_int_t* %36 to [4 x i8]*
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 3
  store i8 0, i8* %38, align 1
  %39 = or i64 %30, 2
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %39, i32 3
  %41 = bitcast %union._hb_var_int_t* %40 to [4 x i8]*
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %41, i64 0, i64 3
  store i8 0, i8* %42, align 1
  %43 = or i64 %30, 3
  %44 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %43, i32 3
  %45 = bitcast %union._hb_var_int_t* %44 to [4 x i8]*
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 3
  store i8 0, i8* %46, align 1
  %47 = or i64 %30, 4
  %48 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %47, i32 3
  %49 = bitcast %union._hb_var_int_t* %48 to [4 x i8]*
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %49, i64 0, i64 3
  store i8 0, i8* %50, align 1
  %51 = or i64 %30, 5
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %51, i32 3
  %53 = bitcast %union._hb_var_int_t* %52 to [4 x i8]*
  %54 = getelementptr inbounds [4 x i8], [4 x i8]* %53, i64 0, i64 3
  store i8 0, i8* %54, align 1
  %55 = or i64 %30, 6
  %56 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %55, i32 3
  %57 = bitcast %union._hb_var_int_t* %56 to [4 x i8]*
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %57, i64 0, i64 3
  store i8 0, i8* %58, align 1
  %59 = or i64 %30, 7
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %5, i64 %59, i32 3
  %61 = bitcast %union._hb_var_int_t* %60 to [4 x i8]*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %61, i64 0, i64 3
  store i8 0, i8* %62, align 1
  %63 = add nuw nsw i64 %30, 8
  %64 = add i64 %31, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %16, label %29
}

declare hidden void @_ZN19hb_ot_map_builder_t9add_pauseEjPFvPK18hb_ot_shape_plan_tP9hb_font_tP11hb_buffer_tE(%struct.hb_ot_map_builder_t*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)*) local_unnamed_addr #3

declare hidden void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #3

declare hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11hb_buffer_t7messageEP9hb_font_tPKcz(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %0, i64 0, i32 24
  %6 = load i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)** %5, align 8
  %7 = icmp eq i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #4
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %11 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %9)
  %12 = call zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t* %0, %struct.hb_font_t* %1, i8* %2, %struct.__va_list_tag* nonnull %10) #4
  call void @llvm.va_end(i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #4
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i1 [ %12, %8 ], [ true, %3 ]
  ret i1 %14
}

declare hidden void @_Z33hb_syllabic_insert_dotted_circlesP9hb_font_tP11hb_buffer_tjji(%struct.hb_font_t*, %struct.hb_buffer_t*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare hidden zeroext i1 @_ZN11hb_buffer_t12message_implEP9hb_font_tPKcP13__va_list_tag(%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

declare hidden void @_ZN11hb_buffer_t4sortEjjPFiPK15hb_glyph_info_tS2_E(%struct.hb_buffer_t*, i32, i32, i32 (%struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*)*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL21compare_myanmar_orderPK15hb_glyph_info_tS1_(%struct.hb_glyph_info_t* nocapture readonly, %struct.hb_glyph_info_t* nocapture readonly) #5 {
  %3 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %0, i64 0, i32 4
  %4 = bitcast %union._hb_var_int_t* %3 to [4 x i8]*
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1, i64 0, i32 4
  %8 = bitcast %union._hb_var_int_t* %7 to [4 x i8]*
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 3
  %10 = load i8, i8* %9, align 1
  %11 = icmp ult i8 %6, %10
  %12 = icmp ne i8 %6, %10
  %13 = zext i1 %12 to i32
  %14 = select i1 %11, i32 -1, i32 %13
  ret i32 %14
}

declare hidden zeroext i16 @_Z23hb_indic_get_categoriesj(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !4}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
!14 = distinct !{!14, !4}
