; ModuleID = '../../ui/gl/gl_surface_egl.cc'
source_filename = "../../ui/gl/gl_surface_egl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.gl::DriverEGL" = type { %"struct.gl::ProcsEGL", %"struct.gl::ExtensionsEGL" }
%"struct.gl::ProcsEGL" = type { i32 (i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i32*, i8**, i32, i32*)*, i32 (i8*, i8*, i32, i64)*, i32 (i8*, i8*, i64)*, i8* (i8*, i8*, i8*, i32*)*, i8* (i8*, i8*, i32, i8*, i32*)*, i8* (i8*, i32, i8*, i8*, i32*)*, i8* (i8*, i8*, i32*)*, i8* (i8*, i8*, i64, i32*)*, i8* (i8*, i32*)*, i32 (i8*, i8*, i64*)*, i8* (i8*, i32, i32*)*, i8* (i8*, i8*, i64, i32*)*, i32 (void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32*, i32*, i32*)*, i32 (i8*, i8*, i32*, i32*, i64*)*, i32 (i8*, i8*, i32, i32*, i64*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32, i32*)*, i32 (i8*, i8**, i32, i32*)*, i8* ()*, i8* ()*, i8* (i32)*, i8* (i64)*, i32 ()*, i32 (i8*, i8*, i64, i32, i32*, i64*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32*, i32*)*, i8* (%struct.AHardwareBuffer*)*, i32 (i8*, i8*, i64*)*, i8* (i32, i8*, i64*)*, void ()* (i8*)*, i32 (i8*, i8*, i32, i32*)*, i32 (i8*, i8*, i64*, i64*, i64*)*, void (i8*)*, i32 (i8*, i8*, i64*)*, i32 (i8*, i32*, i32*)*, i32 (i8*, i32, i8*, i8*)*, i32 (i8*, i8*, i8*, i8*)*, i32 (i8*, i8*, i32, i32, i32, i32)*, i32 ()*, i32 (i8*, i8*, i32, i32*)*, i32 (i32, i64*)*, i32 (i32, i8**, i32*)*, i8* (i8*, i32)*, i32 (i8*, i32, i64*)*, i32 (i8*, i8*, i32, i32*)*, i32 (i8*, i8*, i32, i64*)*, i8* (i8*, i32)*, i8* (i8*, i32, i32)*, i32 (i8*, i8*, i32, i32*)*, i32 (i8*, i8*, i32, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, i32 (i8*, i8*, i32)*, i32 ()*, void (i8*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*)*, i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i64*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i8*, i64*)*, i32 (i8*, i8*, i32, i32)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32*, i32)*, i32 (i8*, i32)*, i32 (i8*)*, i32 ()*, i32 ()*, i32 (i32)*, i32 (i8*, i8*, i32)* }
%struct.AHardwareBuffer = type opaque
%"struct.gl::ExtensionsEGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::EGLApi" = type { i32 (...)** }
%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver" = type { %"class.ui::GpuSwitchingObserver" }
%"class.ui::GpuSwitchingObserver" = type { i32 (...)** }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%struct.anon.204 = type { i32, i8* }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::GLSurfaceEGL" = type { %"class.gl::GLSurface", i8*, %"class.gl::GLSurfaceFormat" }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::NativeViewGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gl::EGLTimestampClient", i64, %"class.gfx::Size", i8, i8*, i8, i8, i32, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.137", %"class.std::__1::vector.143", i8, %"class.std::__1::vector.158", %"class.std::__1::vector.165", i32, i32, i32, i32, %"class.std::__1::queue", i8, %"class.std::__1::unique_ptr.172" }
%"class.gl::EGLTimestampClient" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.gfx::VSyncProvider"* }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"*, %"class.std::__1::__compressed_pair.153" }
%"class.gl::GLSurfaceOverlay" = type { i32, i32, %class.scoped_refptr.145, %"class.gfx::Rect", %"class.gfx::RectF", i8, %"class.std::__1::unique_ptr.147" }
%class.scoped_refptr.145 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.146", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.146" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.gfx::GpuFence"* }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.gl::GLSurfaceOverlay"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { i32*, i32*, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { i32* }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { i8**, i8**, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { i8** }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, i64 }
%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo" = type { i8, i64 }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.gl::GLSurfacePresentationHelper"* }
%"class.gl::GLSurfacePresentationHelper" = type { %"class.gfx::VSyncProvider"*, %class.scoped_refptr.28, %"class.gl::GLSurface"*, %class.scoped_refptr.175, %"class.base::circular_deque.176", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, %"class.gl::EGLTimestampClient"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.28 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.29", [4 x i8], %"class.base::SupportsWeakPtr.30", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.58", %"class.gl::RealGLApi"*, %class.scoped_refptr.64, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", i8, [7 x i8] }>
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.30" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.64 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.65", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.175 = type { %"class.gl::GPUTimingClient"* }
%"class.gl::GPUTimingClient" = type opaque
%"class.base::circular_deque.176" = type { %"class.base::internal::VectorBuffer.177", i64, i64 }
%"class.base::internal::VectorBuffer.177" = type { %"struct.gl::GLSurfacePresentationHelper::Frame"*, i64 }
%"struct.gl::GLSurfacePresentationHelper::Frame" = type <{ %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184", i32, [4 x i8], %"class.base::OnceCallback", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.gl::GPUTimer"* }
%"class.gl::GPUTimer" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.gl::GLFence"* }
%"class.gl::GLFence" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.191", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.191" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.gfx::VSyncProvider" = type { i32 (...)** }
%"class.gl::PbufferGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gfx::Size", i8* }
%"class.gl::SurfacelessEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gfx::Size" }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%"struct.gl::GLImplementationParts" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gl::GLDisplayEglUtil" = type { i32 (...)** }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { i64*, i64*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { i64* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.ui::ScopedUnsetDisplay" }
%"class.ui::ScopedUnsetDisplay" = type { %"class.absl::optional.118" }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.std::__1::basic_string" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.132", [4 x i8] }>
%"struct.std::__1::atomic.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__cxx_atomic_impl.135" }
%"struct.std::__1::__cxx_atomic_impl.135" = type { %"struct.std::__1::__cxx_atomic_base_impl.136" }
%"struct.std::__1::__cxx_atomic_base_impl.136" = type { i32 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.gl::GLContextEGL" = type { %"class.gl::GLContextReal.base", i8*, i8*, i8*, i32, i8, i8, %"class.std::__1::map.99" }
%"class.gl::GLContextReal.base" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.86", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8 }>
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted.29", [4 x i8], %"class.base::SupportsWeakPtr.30", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.58", %"class.gl::RealGLApi"*, %class.scoped_refptr.64, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", i8 }>
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.gl::GPUTiming"* }
%"class.gl::GPUTiming" = type opaque
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.92" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.94" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.ui::GpuSwitchingManager" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.110", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.112" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.gl::SyncControlVSyncProvider" = type { %"class.gfx::VSyncProvider", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i8, %"class.std::__1::queue.198" }
%"class.std::__1::queue.198" = type { %"class.base::circular_deque.199" }
%"class.base::circular_deque.199" = type { %"class.base::internal::VectorBuffer.200", i64, i64 }
%"class.base::internal::VectorBuffer.200" = type { %"class.base::TimeDelta"*, i64 }
%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers" = type <{ %"class.gl::GLSurfacePresentationHelper"*, i32, [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.246", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.248", i64, i64 }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.259" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.gl::(anonymous namespace)::TraceSwapEventsInitializer" = type { i8* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %struct.TimeNamePair*, %struct.TimeNamePair*, %"class.std::__1::__compressed_pair.214" }
%struct.TimeNamePair = type { %"class.base::TimeTicks", i8* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %struct.TimeNamePair* }
%"class.std::__1::vector.219" = type opaque
%"struct.ui::CARendererLayerParams" = type opaque
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::allocator" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider" = type { %"class.gl::SyncControlVSyncProvider", i8* }

$_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRiS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_ = comdat any

$_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv = comdat any

$_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE = comdat any

$_ZN2gl9GLSurface12SetFrameRateEf = comdat any

$_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE = comdat any

$_ZN2ui20GpuSwitchingObserver14OnDisplayAddedEv = comdat any

$_ZN2ui20GpuSwitchingObserver16OnDisplayRemovedEv = comdat any

$_ZN2ui20GpuSwitchingObserver23OnDisplayMetricsChangedEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm = comdat any

$_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNK4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm = comdat any

$_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZN2gl12GLSurfaceEGL12initialized_E = hidden local_unnamed_addr global i8 0, align 1
@_ZN8switches30kOverrideUseSoftwareGLForTestsE = external constant [0 x i8], align 1
@_ZN8switches33kOverrideUseSoftwareGLForHeadlessE = external constant [0 x i8], align 1
@_ZN8switches6kUseGLE = external constant [0 x i8], align 1
@_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@_ZN2gl35kANGLEImplementationSwiftShaderNameE = external constant [0 x i8], align 1
@_ZN8switches9kUseANGLEE = external constant [0 x i8], align 1
@_ZN2gl31kANGLEImplementationDefaultNameE = external constant [0 x i8], align 1
@_ZN2gl28kANGLEImplementationNullNameE = external constant [0 x i8], align 1
@_ZN8features19kDefaultANGLEOpenGLE = external global %"struct.base::Feature", align 8
@_ZN8features18kDefaultANGLEMetalE = external global %"struct.base::Feature", align 8
@_ZN8switches13kDisableD3D11E = external constant [0 x i8], align 1
@_ZN2gl29kANGLEImplementationD3D11NameE = external constant [0 x i8], align 1
@_ZN2gl28kANGLEImplementationD3D9NameE = external constant [0 x i8], align 1
@_ZN2gl33kANGLEImplementationD3D11NULLNameE = external constant [0 x i8], align 1
@_ZN2gl33kANGLEImplementationD3D11on12NameE = external constant [0 x i8], align 1
@_ZN2gl30kANGLEImplementationOpenGLNameE = external constant [0 x i8], align 1
@_ZN2gl32kANGLEImplementationOpenGLESNameE = external constant [0 x i8], align 1
@_ZN2gl34kANGLEImplementationOpenGLNULLNameE = external constant [0 x i8], align 1
@_ZN2gl36kANGLEImplementationOpenGLESNULLNameE = external constant [0 x i8], align 1
@_ZN2gl33kANGLEImplementationOpenGLEGLNameE = external constant [0 x i8], align 1
@_ZN2gl35kANGLEImplementationOpenGLESEGLNameE = external constant [0 x i8], align 1
@_ZN2gl30kANGLEImplementationVulkanNameE = external constant [0 x i8], align 1
@_ZN2gl34kANGLEImplementationVulkanNULLNameE = external constant [0 x i8], align 1
@_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE = external constant [0 x i8], align 1
@_ZN2gl29kANGLEImplementationMetalNameE = external constant [0 x i8], align 1
@_ZN2gl33kANGLEImplementationMetalNULLNameE = external constant [0 x i8], align 1
@_ZTVN2gl12GLSurfaceEGLE = hidden unnamed_addr constant { [65 x i8*] } { [65 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl9GLSurface10InitializeENS_15GLSurfaceFormatE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2gl9GLSurface6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.std::__1::vector.219"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, i32, i32, i32, i32, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)* @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD2Ev to i8*), i8* bitcast (void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD0Ev to i8*)] }, align 8
@_ZN2gl12_GLOBAL__N_113g_egl_displayE = internal unnamed_addr global i8* null, align 8
@_ZN2gl12g_driver_eglE = external global %"struct.gl::DriverEGL", align 8
@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE = internal unnamed_addr global i8* null, align 8
@_ZN2gl12_GLOBAL__N_116g_egl_extensionsE = internal unnamed_addr global i8* null, align 8
@.str = private unnamed_addr constant [34 x i8] c"EGL_EXT_create_context_robustness\00", align 1
@_ZN2gl12_GLOBAL__N_141g_egl_create_context_robustness_supportedE = internal unnamed_addr global i8 0, align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"EGL_NV_robustness_video_memory_purge\00", align 1
@_ZN2gl12_GLOBAL__N_145g_egl_robustness_video_memory_purge_supportedE = internal unnamed_addr global i8 0, align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"EGL_CHROMIUM_create_context_bind_generates_resource\00", align 1
@_ZN2gl12_GLOBAL__N_154g_egl_create_context_bind_generates_resource_supportedE = internal unnamed_addr global i8 0, align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"EGL_ANGLE_create_context_webgl_compatibility\00", align 1
@_ZN2gl12_GLOBAL__N_150g_egl_create_context_webgl_compatability_supportedE = internal unnamed_addr global i8 0, align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"EGL_CHROMIUM_sync_control\00", align 1
@_ZN2gl12_GLOBAL__N_128g_egl_sync_control_supportedE = internal unnamed_addr global i8 0, align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"EGL_ANGLE_sync_control_rate\00", align 1
@_ZN2gl12_GLOBAL__N_133g_egl_sync_control_rate_supportedE = internal unnamed_addr global i8 0, align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"EGL_ANGLE_window_fixed_size\00", align 1
@_ZN2gl12_GLOBAL__N_133g_egl_window_fixed_size_supportedE = internal unnamed_addr global i8 0, align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"EGL_ANGLE_surface_orientation\00", align 1
@_ZN2gl12_GLOBAL__N_135g_egl_surface_orientation_supportedE = internal unnamed_addr global i8 0, align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"EGL_KHR_gl_colorspace\00", align 1
@_ZN2gl12_GLOBAL__N_120g_egl_khr_colorspaceE = internal unnamed_addr global i8 0, align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"EGL_EXT_gl_colorspace_display_p3\00", align 1
@_ZN2gl12_GLOBAL__N_131g_egl_ext_colorspace_display_p3E = internal unnamed_addr global i8 0, align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"EGL_EXT_gl_colorspace_display_p3_passthrough\00", align 1
@_ZN2gl12_GLOBAL__N_143g_egl_ext_colorspace_display_p3_passthroughE = internal unnamed_addr global i8 0, align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"EGL_IMG_context_priority\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"EGL_ANDROID_front_buffer_auto_refresh\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"EGL_ANDROID_create_native_client_buffer\00", align 1
@_ZN2gl12_GLOBAL__N_132g_egl_context_priority_supportedE = internal unnamed_addr global i8 0, align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"EGL_ANGLE_display_texture_share_group\00", align 1
@_ZN2gl12_GLOBAL__N_143g_egl_display_texture_share_group_supportedE = internal unnamed_addr global i8 0, align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"EGL_ANGLE_display_semaphore_share_group\00", align 1
@_ZN2gl12_GLOBAL__N_145g_egl_display_semaphore_share_group_supportedE = internal unnamed_addr global i8 0, align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"EGL_ANGLE_create_context_client_arrays\00", align 1
@_ZN2gl12_GLOBAL__N_144g_egl_create_context_client_arrays_supportedE = internal unnamed_addr global i8 0, align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"EGL_ANGLE_robust_resource_initialization\00", align 1
@_ZN2gl12_GLOBAL__N_136g_egl_robust_resource_init_supportedE = internal unnamed_addr global i8 0, align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"EGL_KHR_surfaceless_context\00", align 1
@_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE = internal unnamed_addr global i8 0, align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"GL_OES_surfaceless_context\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"EGL_ANDROID_native_fence_sync\00", align 1
@_ZN2gl12_GLOBAL__N_141g_egl_android_native_fence_sync_supportedE = internal unnamed_addr global i8 0, align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"EGL_EXT_pixel_format_float\00", align 1
@_ZN2gl12_GLOBAL__N_138g_egl_ext_pixel_format_float_supportedE = internal unnamed_addr global i8 0, align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"EGL_ANGLE_power_preference\00", align 1
@_ZN2gl12_GLOBAL__N_138g_egl_angle_power_preference_supportedE = internal unnamed_addr global i8 0, align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"EGL_ANGLE_external_context_and_surface\00", align 1
@_ZN2gl12_GLOBAL__N_150g_egl_angle_external_context_and_surface_supportedE = internal unnamed_addr global i8 0, align 1
@_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE = internal unnamed_addr global %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* null, align 8
@_ZN2gl12_GLOBAL__N_137g_egl_angle_feature_control_supportedE = internal unnamed_addr global i8 0, align 1
@_ZN2gl12_GLOBAL__N_114g_display_typeE = internal unnamed_addr global i32 0, align 4
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"EGL_KHR_debug\00", align 1
@__const._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE.controls = private unnamed_addr constant [10 x i64] [i64 13241, i64 1, i64 13242, i64 1, i64 13243, i64 1, i64 13244, i64 1, i64 12344, i64 12344], align 16
@.str.26 = private unnamed_addr constant [25 x i8] c"EGL_ANGLE_platform_angle\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"EGL_ANGLE_platform_angle_d3d\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"EGL_ANGLE_platform_angle_opengl\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"EGL_ANGLE_platform_angle_null\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"EGL_ANGLE_platform_angle_vulkan\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"EGL_ANGLE_platform_angle_device_type_swiftshader\00", align 1
@.str.32 = private unnamed_addr constant [47 x i8] c"EGL_ANGLE_platform_angle_device_type_egl_angle\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"EGL_ANGLE_platform_angle_metal\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"EGL_ANGLE_feature_control\00", align 1
@_ZN8switches20kEnableANGLEFeaturesE = external constant [0 x i8], align 1
@_ZN8switches21kDisableANGLEFeaturesE = external constant [0 x i8], align 1
@_ZN8switches31kDisableGpuDriverBugWorkaroundsE = external constant [0 x i8], align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"../../ui/gl/gl_surface_egl.cc\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"EGL display query failed with error \00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"ANGLE Platform initialization failed.\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"eglInitialize \00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c" failed with error \00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c", trying next display type\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key = internal unnamed_addr global %"struct.base::debug::CrashKeyString"* null, align 8
@_ZGVZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key = internal global i64 0, align 8
@.str.42 = private unnamed_addr constant [17 x i8] c"egl-display-type\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"GPU.EGLDisplayType\00", align 1
@_ZTVN2gl22NativeViewGLSurfaceEGLE = hidden unnamed_addr constant { [69 x i8*], [6 x i8*] } { [69 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl22NativeViewGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2gl22NativeViewGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL11IsOffscreenEv to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback"*)* @_ZN2gl22NativeViewGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (i64 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL7GetSizeEv to i8*), i8* bitcast (i8* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL9GetHandleEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.std::__1::vector.219"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, i32, i32, %"class.base::OnceCallback"*)* @_ZN2gl22NativeViewGLSurfaceEGL13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback"*)* @_ZN2gl22NativeViewGLSurfaceEGL19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLContext"*)* @_ZN2gl22NativeViewGLSurfaceEGL13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)* @_ZN2gl22NativeViewGLSurfaceEGL15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl22NativeViewGLSurfaceEGL20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGLD2Ev to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGLD0Ev to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32)* @_ZN2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL22InitializeNativeWindowEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL27CreateVsyncProviderInternalEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZThn64_N2gl22NativeViewGLSurfaceEGLD1Ev to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZThn64_N2gl22NativeViewGLSurfaceEGLD0Ev to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZThn64_NK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32)* @_ZThn64_N2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji to i8*)] }, align 8
@.str.44 = private unnamed_addr constant [47 x i8] c"Trying to create surface with invalid display.\00", align 1
@.str.45 = private unnamed_addr constant [46 x i8] c"Error trying to initialize the native window.\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"eglCreateWindowSurface failed with error \00", align 1
@_ZZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEvE14all_timestamps = internal constant [9 x %struct.anon.204] [%struct.anon.204 { i32 13364, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0) }, %struct.anon.204 { i32 13365, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0) }, %struct.anon.204 { i32 13366, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i32 0, i32 0) }, %struct.anon.204 { i32 13367, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0) }, %struct.anon.204 { i32 13368, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0) }, %struct.anon.204 { i32 13369, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i32 0, i32 0) }, %struct.anon.204 { i32 13370, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0) }, %struct.anon.204 { i32 13371, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0) }, %struct.anon.204 { i32 13372, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0) }], align 16
@.str.47 = private unnamed_addr constant [6 x i8] c"Queue\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"WritesDone\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"LatchedForDisplay\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"1stCompositeCpu\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"NthCompositeCpu\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"GpuCompositeDone\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"ScanOutStart\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"DequeueReady\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"ReadsDone\00", align 1
@.str.56 = private unnamed_addr constant [37 x i8] c"eglDestroySurface failed with error \00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.57 = private unnamed_addr constant [39 x i8] c"NativeViewGLSurfaceEGL:RealSwapBuffers\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.60 = private unnamed_addr constant [29 x i8] c"eglGetFrameTimestamps:Failed\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"TraceSwapEvents:NoValidTimestamps\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"SwapEvents\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.64 = private unnamed_addr constant [25 x i8] c"Failed to resize window.\00", align 1
@.str.65 = private unnamed_addr constant [57 x i8] c"Failed to make current in NativeViewGLSurfaceEGL::Resize\00", align 1
@.str.66 = private unnamed_addr constant [26 x i8] c"Failed to create surface.\00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"Failed to make current in NativeViewGLSurfaceEGL::Recreate\00", align 1
@.str.68 = private unnamed_addr constant [56 x i8] c"NativeViewGLSurfaceEGL:GetFrameTimestampInfoIfAvailable\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"frame_id\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"NativeViewGLSurfaceEGL:PostSubBuffer\00", align 1
@.str.71 = private unnamed_addr constant [35 x i8] c"eglSwapInterval failed with error \00", align 1
@_ZTVN2gl19PbufferGLSurfaceEGLE = hidden unnamed_addr constant { [65 x i8*] } { [65 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl19PbufferGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE to i8*), i8* bitcast (void (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2gl19PbufferGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (i1 (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL11IsOffscreenEv to i8*), i8* bitcast (i32 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.base::OnceCallback"*)* @_ZN2gl19PbufferGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (i64 (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL7GetSizeEv to i8*), i8* bitcast (i8* (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL9GetHandleEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.std::__1::vector.219"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, i32, i32, i32, i32, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)* @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGLD2Ev to i8*), i8* bitcast (void (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGLD0Ev to i8*)] }, align 8
@.str.72 = private unnamed_addr constant [43 x i8] c"eglCreatePbufferSurface failed with error \00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"Failed to resize pbuffer.\00", align 1
@.str.74 = private unnamed_addr constant [54 x i8] c"Failed to make current in PbufferGLSurfaceEGL::Resize\00", align 1
@_ZTVN2gl14SurfacelessEGLE = hidden unnamed_addr constant { [65 x i8*] } { [65 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::SurfacelessEGL"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl14SurfacelessEGL10InitializeENS_15GLSurfaceFormatE to i8*), i8* bitcast (void (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGL7DestroyEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.gl::SurfacelessEGL"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2gl14SurfacelessEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (i1 (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGL11IsOffscreenEv to i8*), i8* bitcast (i32 (%"class.gl::SurfacelessEGL"*, %"class.base::OnceCallback"*)* @_ZN2gl14SurfacelessEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (i64 (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGL7GetSizeEv to i8*), i8* bitcast (i8* (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGL9GetHandleEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.std::__1::vector.219"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, i32, i32, i32, i32, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.base::OnceCallback"*)* @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)* @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGL14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::SurfacelessEGL"*)* @_ZNK2gl14SurfacelessEGL13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD2Ev to i8*), i8* bitcast (void (%"class.gl::SurfacelessEGL"*)* @_ZN2gl14SurfacelessEGLD0Ev to i8*)] }, align 8
@.str.75 = private unnamed_addr constant [51 x i8] c"Attempted to call SwapBuffers with SurfacelessEGL.\00", align 1
@_ZN8switches20kDisableES3GLContextE = external constant [0 x i8], align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"eglChooseConfig failed with error \00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"No suitable EGL configs found.\00", align 1
@_ZTVN2gl12_GLOBAL__N_123EGLGpuSwitchingObserverE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"*, i32)* @_ZN2gl12_GLOBAL__N_123EGLGpuSwitchingObserver13OnGpuSwitchedENS_13GpuPreferenceE to i8*), i8* bitcast (void (%"class.ui::GpuSwitchingObserver"*)* @_ZN2ui20GpuSwitchingObserver14OnDisplayAddedEv to i8*), i8* bitcast (void (%"class.ui::GpuSwitchingObserver"*)* @_ZN2ui20GpuSwitchingObserver16OnDisplayRemovedEv to i8*), i8* bitcast (void (%"class.ui::GpuSwitchingObserver"*)* @_ZN2ui20GpuSwitchingObserver23OnDisplayMetricsChangedEv to i8*)] }, align 8
@_ZN2gl12_GLOBAL__N_116g_native_displayE = internal unnamed_addr global { i64, i32, i8 } { i64 0, i32 0, i8 1 }, align 8
@.str.82 = private unnamed_addr constant [21 x i8] c"EGL Driver message (\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.84 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c" thread: \00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c" object: \00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"Critical\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"Warning\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"Info\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.92 = private unnamed_addr constant [4 x i8] c", ;\00", align 1
@_ZN8switches15kUseAdapterLuidE = external constant [0 x i8], align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"Default\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"SwiftShader\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"D3D9\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"D3D11\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"D3D11Null\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"OpenGL\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"OpenGLNull\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"OpenGLES\00", align 1
@.str.101 = private unnamed_addr constant [13 x i8] c"OpenGLESNull\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"Vulkan\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"VulkanNull\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"D3D11on12\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"SwANGLE\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"OpenGLEGL\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"OpenGLESEGL\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"Metal\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"MetalNull\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"Err\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.114 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.115 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@_ZTVN2gl12_GLOBAL__N_127EGLSyncControlVSyncProviderE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::SyncControlVSyncProvider"*)* @_ZN2gl24SyncControlVSyncProviderD2Ev to i8*), i8* bitcast (void (%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"*)* @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProviderD0Ev to i8*), i8* bitcast (void ()* @_ZN2gl24SyncControlVSyncProvider18GetVSyncParametersEN4base12OnceCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE to i8*), i8* bitcast (i1 (%"class.gl::SyncControlVSyncProvider"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*)* @_ZN2gl24SyncControlVSyncProvider29GetVSyncParametersIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaE to i8*), i8* bitcast (i1 (%"class.gl::SyncControlVSyncProvider"*)* @_ZNK2gl24SyncControlVSyncProvider36SupportGetVSyncParametersIfAvailableEv to i8*), i8* bitcast (i1 (%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"*)* @_ZNK2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider9IsHWClockEv to i8*), i8* bitcast (i1 (%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"*, i64*, i64*, i64*)* @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider13GetSyncValuesEPlS2_S2_ to i8*), i8* bitcast (i1 (%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"*, i32*, i32*)* @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider10GetMscRateEPiS2_ to i8*)] }, align 8
@.str.116 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZN2gl12_GLOBAL__N_125kSwapEventTraceCategoriesE = internal constant [4 x i8] c"gpu\00", align 1
@_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE = private unnamed_addr constant [16 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 2, i32 3, i32 4, i32 6, i32 6, i32 2, i32 7, i32 0, i32 0, i32 8, i32 8], align 4
@switch.table._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE.121 = private unnamed_addr constant [19 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110, i64 0, i64 0)], align 8
@switch.table._ZN2gl12_GLOBAL__N_118LogEGLDebugMessageEjPKciPvS3_S2_ = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i64 0, i64 0)], align 8

@_ZN2gl12GLSurfaceEGLD1Ev = hidden unnamed_addr alias void (%"class.gl::GLSurfaceEGL"*), void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD2Ev
@_ZN2gl22NativeViewGLSurfaceEGLC1ElNSt3__110unique_ptrIN3gfx13VSyncProviderENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.gl::NativeViewGLSurfaceEGL"*, i64, %"class.gfx::VSyncProvider"*), void (%"class.gl::NativeViewGLSurfaceEGL"*, i64, %"class.gfx::VSyncProvider"*)* @_ZN2gl22NativeViewGLSurfaceEGLC2ElNSt3__110unique_ptrIN3gfx13VSyncProviderENS1_14default_deleteIS4_EEEE
@_ZN2gl22NativeViewGLSurfaceEGLD1Ev = hidden unnamed_addr alias void (%"class.gl::NativeViewGLSurfaceEGL"*), void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGLD2Ev
@_ZN2gl19PbufferGLSurfaceEGLC1ERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"*), void (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"*)* @_ZN2gl19PbufferGLSurfaceEGLC2ERKN3gfx4SizeE
@_ZN2gl19PbufferGLSurfaceEGLD1Ev = hidden unnamed_addr alias void (%"class.gl::PbufferGLSurfaceEGL"*), void (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGLD2Ev
@_ZN2gl14SurfacelessEGLC1ERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.gl::SurfacelessEGL"*, %"class.gfx::Size"*), void (%"class.gl::SurfacelessEGL"*, %"class.gfx::Size"*)* @_ZN2gl14SurfacelessEGLC2ERKN3gfx4SizeE
@_ZN2gl14SurfacelessEGLD2Ev = hidden unnamed_addr alias void (%"class.gl::SurfacelessEGL"*), bitcast (void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD2Ev to void (%"class.gl::SurfacelessEGL"*)*)
@_ZN2gl14SurfacelessEGLD1Ev = hidden unnamed_addr alias void (%"class.gl::SurfacelessEGL"*), bitcast (void (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGLD2Ev to void (%"class.gl::SurfacelessEGL"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl18GetEGLInitDisplaysEbbbbbbbPKN4base11CommandLineEPNSt3__16vectorINS_11DisplayTypeENS4_9allocatorIS6_EEEE(i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %"class.base::CommandLine"*, %"class.std::__1::vector.14"*) local_unnamed_addr #0 {
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches30kOverrideUseSoftwareGLForTestsE, i64 0, i64 0)) #18
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches33kOverrideUseSoftwareGLForHeadlessE, i64 0, i64 0)) #18
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i1 [ true, %9 ], [ %14, %13 ]
  %17 = tail call dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() #18
  %18 = tail call i64 @_ZN2gl27GetSoftwareGLImplementationEv() #18
  %19 = trunc i64 %18 to i32
  %20 = lshr i64 %18, 32
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"struct.gl::GLImplementationParts", %"struct.gl::GLImplementationParts"* %17, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %19
  %25 = getelementptr inbounds %"struct.gl::GLImplementationParts", %"struct.gl::GLImplementationParts"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %21
  %28 = and i1 %24, %27
  %29 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  %30 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0)) #18
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches6kUseGLE, i64 0, i64 0), i64 %30) #18
  %31 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #18
  %32 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp eq i64 %31, %39
  br i1 %40, label %41, label %134

41:                                               ; preds = %15
  %42 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %10, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl40kGLImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %31) #18
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %33, align 1
  br label %134

46:                                               ; preds = %41
  %47 = and i1 %16, %28
  %48 = load i8, i8* %33, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #19
  br label %53

53:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  br i1 %47, label %141, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %56, %58
  %60 = ptrtoint i32* %56 to i64
  br i1 %59, label %68, label %61

61:                                               ; preds = %54, %65
  %62 = phi i32* [ %66, %65 ], [ %56, %54 ]
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds i32, i32* %62, i64 1
  %67 = icmp eq i32* %66, %58
  br i1 %67, label %71, label %61

68:                                               ; preds = %61, %54
  %69 = phi i32* [ %56, %54 ], [ %62, %61 ]
  %70 = icmp eq i32* %69, %58
  br i1 %70, label %71, label %2607

71:                                               ; preds = %65, %68
  %72 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %58, %73
  %75 = ptrtoint i32* %73 to i64
  br i1 %74, label %80, label %76

76:                                               ; preds = %71
  store i32 1, i32* %58, align 4
  %77 = getelementptr inbounds i32, i32* %58, i64 1
  %78 = ptrtoint i32* %77 to i64
  %79 = bitcast i32** %57 to i64*
  store i64 %78, i64* %79, align 8
  br label %2607

80:                                               ; preds = %71
  %81 = ptrtoint i32* %58 to i64
  %82 = bitcast i32** %57 to i64*
  %83 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %84 = sub i64 %81, %60
  %85 = ashr exact i64 %84, 2
  %86 = add nsw i64 %85, 1
  %87 = icmp ugt i64 %86, 4611686018427387903
  br i1 %87, label %88, label %90

88:                                               ; preds = %80
  %89 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #20
  unreachable

90:                                               ; preds = %80
  %91 = bitcast i32** %72 to i64*
  %92 = sub i64 %75, %60
  %93 = ashr exact i64 %92, 2
  %94 = icmp ult i64 %93, 2305843009213693951
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = ashr exact i64 %92, 1
  %97 = icmp ult i64 %96, %86
  %98 = select i1 %97, i64 %86, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 4611686018427387903
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  call void @abort() #20
  unreachable

103:                                              ; preds = %100, %90
  %104 = phi i64 [ %98, %100 ], [ 4611686018427387903, %90 ]
  %105 = shl i64 %104, 2
  %106 = call i8* @_Znwm(i64 %105) #19
  %107 = bitcast i8* %106 to i32*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi i32* [ %107, %103 ], [ null, %95 ]
  %111 = getelementptr inbounds i32, i32* %110, i64 %85
  %112 = getelementptr inbounds i32, i32* %110, i64 %109
  %113 = ptrtoint i32* %112 to i64
  store i32 1, i32* %111, align 4
  %114 = getelementptr inbounds i32, i32* %111, i64 1
  %115 = ptrtoint i32* %114 to i64
  %116 = load i32*, i32** %55, align 8
  %117 = load i64, i64* %82, align 8
  %118 = ptrtoint i32* %116 to i64
  %119 = sub i64 %117, %118
  %120 = ashr exact i64 %119, 2
  %121 = sub nsw i64 0, %120
  %122 = getelementptr inbounds i32, i32* %111, i64 %121
  %123 = ptrtoint i32* %122 to i64
  %124 = icmp sgt i64 %119, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %108
  %126 = bitcast i32* %122 to i8*
  %127 = bitcast i32* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 %119, i1 false) #18
  %128 = load i32*, i32** %55, align 8
  br label %129

129:                                              ; preds = %125, %108
  %130 = phi i32* [ %116, %108 ], [ %128, %125 ]
  store i64 %123, i64* %83, align 8
  store i64 %115, i64* %82, align 8
  store i64 %113, i64* %91, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %2607, label %132

132:                                              ; preds = %129
  %133 = bitcast i32* %130 to i8*
  call void @_ZdlPv(i8* %133) #19
  br label %2607

134:                                              ; preds = %44, %15
  %135 = phi i8 [ %45, %44 ], [ %34, %15 ]
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  br label %141

141:                                              ; preds = %53, %140
  %142 = call dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() #18
  %143 = bitcast %"struct.gl::GLImplementationParts"* %142 to i64*
  %144 = load i64, i64* %143, align 4
  %145 = call zeroext i1 @_ZN2gl26IsSoftwareGLImplementationENS_21GLImplementationPartsE(i64 %144) #18
  %146 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #18
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %150 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 24, i1 false)
  br i1 %145, label %151, label %173

151:                                              ; preds = %141
  %152 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0)) #18
  %153 = icmp ugt i64 %152, -17
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %155) #20
  unreachable

156:                                              ; preds = %151
  %157 = icmp ult i64 %152, 23
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = add nuw i64 %152, 16
  %160 = and i64 %159, -16
  %161 = call i8* @_Znwm(i64 %160) #19
  store i8* %161, i8** %147, align 8
  %162 = or i64 %160, -9223372036854775808
  store i64 %162, i64* %149, align 8
  store i64 %152, i64* %148, align 8
  br label %168

163:                                              ; preds = %156
  %164 = trunc i64 %152 to i8
  %165 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 %164, i8* %166, align 1
  %167 = icmp eq i64 %152, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163, %158
  %169 = phi i8* [ %161, %158 ], [ %146, %163 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0), i64 %152, i1 false) #18
  br label %170

170:                                              ; preds = %168, %163
  %171 = phi i8* [ %146, %163 ], [ %169, %168 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 %152
  store i8 0, i8* %172, align 1
  br label %189

173:                                              ; preds = %141
  %174 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #18
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0), i64 %174) #18
  %175 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kUseANGLEE, i64 0, i64 0)) #18
  br i1 %175, label %176, label %189

176:                                              ; preds = %173
  %177 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl31kANGLEImplementationDefaultNameE, i64 0, i64 0)) #18
  %178 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  %182 = load i64, i64* %148, align 8
  %183 = zext i8 %180 to i64
  %184 = select i1 %181, i64 %182, i64 %183
  %185 = icmp eq i64 %177, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %176
  %187 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl31kANGLEImplementationDefaultNameE, i64 0, i64 0), i64 %177) #18
  %188 = icmp eq i32 %187, 0
  br label %189

189:                                              ; preds = %186, %176, %170, %173
  %190 = phi i1 [ true, %173 ], [ false, %170 ], [ %188, %186 ], [ false, %176 ]
  br i1 %2, label %191, label %284

191:                                              ; preds = %189
  %192 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl28kANGLEImplementationNullNameE, i64 0, i64 0)) #18
  %193 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = load i64, i64* %148, align 8
  %198 = zext i8 %195 to i64
  %199 = select i1 %196, i64 %197, i64 %198
  %200 = icmp eq i64 %192, %199
  br i1 %200, label %201, label %284

201:                                              ; preds = %191
  %202 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl28kANGLEImplementationNullNameE, i64 0, i64 0), i64 %192) #18
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %284

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %208 = load i32*, i32** %207, align 8
  %209 = icmp eq i32* %206, %208
  %210 = ptrtoint i32* %206 to i64
  br i1 %209, label %218, label %211

211:                                              ; preds = %204, %215
  %212 = phi i32* [ %216, %215 ], [ %206, %204 ]
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 7
  br i1 %214, label %218, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds i32, i32* %212, i64 1
  %217 = icmp eq i32* %216, %208
  br i1 %217, label %221, label %211

218:                                              ; preds = %211, %204
  %219 = phi i32* [ %206, %204 ], [ %212, %211 ]
  %220 = icmp eq i32* %219, %208
  br i1 %220, label %221, label %2599

221:                                              ; preds = %215, %218
  %222 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %223 = load i32*, i32** %222, align 8
  %224 = icmp eq i32* %208, %223
  %225 = ptrtoint i32* %223 to i64
  br i1 %224, label %230, label %226

226:                                              ; preds = %221
  store i32 7, i32* %208, align 4
  %227 = getelementptr inbounds i32, i32* %208, i64 1
  %228 = ptrtoint i32* %227 to i64
  %229 = bitcast i32** %207 to i64*
  store i64 %228, i64* %229, align 8
  br label %2599

230:                                              ; preds = %221
  %231 = ptrtoint i32* %208 to i64
  %232 = bitcast i32** %207 to i64*
  %233 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %234 = sub i64 %231, %210
  %235 = ashr exact i64 %234, 2
  %236 = add nsw i64 %235, 1
  %237 = icmp ugt i64 %236, 4611686018427387903
  br i1 %237, label %238, label %240

238:                                              ; preds = %230
  %239 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %239) #20
  unreachable

240:                                              ; preds = %230
  %241 = bitcast i32** %222 to i64*
  %242 = sub i64 %225, %210
  %243 = ashr exact i64 %242, 2
  %244 = icmp ult i64 %243, 2305843009213693951
  br i1 %244, label %245, label %253

245:                                              ; preds = %240
  %246 = ashr exact i64 %242, 1
  %247 = icmp ult i64 %246, %236
  %248 = select i1 %247, i64 %236, i64 %246
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %258, label %250

250:                                              ; preds = %245
  %251 = icmp ugt i64 %248, 4611686018427387903
  br i1 %251, label %252, label %253

252:                                              ; preds = %250
  call void @abort() #20
  unreachable

253:                                              ; preds = %250, %240
  %254 = phi i64 [ %248, %250 ], [ 4611686018427387903, %240 ]
  %255 = shl i64 %254, 2
  %256 = call i8* @_Znwm(i64 %255) #19
  %257 = bitcast i8* %256 to i32*
  br label %258

258:                                              ; preds = %253, %245
  %259 = phi i64 [ %254, %253 ], [ 0, %245 ]
  %260 = phi i32* [ %257, %253 ], [ null, %245 ]
  %261 = getelementptr inbounds i32, i32* %260, i64 %235
  %262 = getelementptr inbounds i32, i32* %260, i64 %259
  %263 = ptrtoint i32* %262 to i64
  store i32 7, i32* %261, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 1
  %265 = ptrtoint i32* %264 to i64
  %266 = load i32*, i32** %205, align 8
  %267 = load i64, i64* %232, align 8
  %268 = ptrtoint i32* %266 to i64
  %269 = sub i64 %267, %268
  %270 = ashr exact i64 %269, 2
  %271 = sub nsw i64 0, %270
  %272 = getelementptr inbounds i32, i32* %261, i64 %271
  %273 = ptrtoint i32* %272 to i64
  %274 = icmp sgt i64 %269, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %258
  %276 = bitcast i32* %272 to i8*
  %277 = bitcast i32* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 4 %277, i64 %269, i1 false) #18
  %278 = load i32*, i32** %205, align 8
  br label %279

279:                                              ; preds = %275, %258
  %280 = phi i32* [ %266, %258 ], [ %278, %275 ]
  store i64 %273, i64* %233, align 8
  store i64 %265, i64* %232, align 8
  store i64 %263, i64* %241, align 8
  %281 = icmp eq i32* %280, null
  br i1 %281, label %2599, label %282

282:                                              ; preds = %279
  %283 = bitcast i32* %280 to i8*
  call void @_ZdlPv(i8* %283) #19
  br label %2599

284:                                              ; preds = %191, %201, %189
  %285 = xor i1 %1, true
  %286 = xor i1 %190, true
  %287 = or i1 %285, %286
  br i1 %287, label %448, label %288

288:                                              ; preds = %284
  %289 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kDefaultANGLEOpenGLE) #18
  br i1 %289, label %290, label %448

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %294 = load i32*, i32** %293, align 8
  %295 = icmp eq i32* %292, %294
  %296 = ptrtoint i32* %292 to i64
  br i1 %295, label %304, label %297

297:                                              ; preds = %290, %301
  %298 = phi i32* [ %302, %301 ], [ %292, %290 ]
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 5
  br i1 %300, label %304, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds i32, i32* %298, i64 1
  %303 = icmp eq i32* %302, %294
  br i1 %303, label %307, label %297

304:                                              ; preds = %297, %290
  %305 = phi i32* [ %292, %290 ], [ %298, %297 ]
  %306 = icmp eq i32* %305, %294
  br i1 %306, label %307, label %371

307:                                              ; preds = %301, %304
  %308 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %294, %309
  %311 = ptrtoint i32* %309 to i64
  br i1 %310, label %316, label %312

312:                                              ; preds = %307
  store i32 5, i32* %294, align 4
  %313 = getelementptr inbounds i32, i32* %294, i64 1
  %314 = ptrtoint i32* %313 to i64
  %315 = bitcast i32** %293 to i64*
  store i64 %314, i64* %315, align 8
  br label %371

316:                                              ; preds = %307
  %317 = ptrtoint i32* %294 to i64
  %318 = bitcast i32** %293 to i64*
  %319 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %320 = sub i64 %317, %296
  %321 = ashr exact i64 %320, 2
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 4611686018427387903
  br i1 %323, label %324, label %326

324:                                              ; preds = %316
  %325 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %325) #20
  unreachable

326:                                              ; preds = %316
  %327 = bitcast i32** %308 to i64*
  %328 = sub i64 %311, %296
  %329 = ashr exact i64 %328, 2
  %330 = icmp ult i64 %329, 2305843009213693951
  br i1 %330, label %331, label %339

331:                                              ; preds = %326
  %332 = ashr exact i64 %328, 1
  %333 = icmp ult i64 %332, %322
  %334 = select i1 %333, i64 %322, i64 %332
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %344, label %336

336:                                              ; preds = %331
  %337 = icmp ugt i64 %334, 4611686018427387903
  br i1 %337, label %338, label %339

338:                                              ; preds = %336
  call void @abort() #20
  unreachable

339:                                              ; preds = %336, %326
  %340 = phi i64 [ %334, %336 ], [ 4611686018427387903, %326 ]
  %341 = shl i64 %340, 2
  %342 = call i8* @_Znwm(i64 %341) #19
  %343 = bitcast i8* %342 to i32*
  br label %344

344:                                              ; preds = %339, %331
  %345 = phi i64 [ %340, %339 ], [ 0, %331 ]
  %346 = phi i32* [ %343, %339 ], [ null, %331 ]
  %347 = getelementptr inbounds i32, i32* %346, i64 %321
  %348 = getelementptr inbounds i32, i32* %346, i64 %345
  %349 = ptrtoint i32* %348 to i64
  store i32 5, i32* %347, align 4
  %350 = getelementptr inbounds i32, i32* %347, i64 1
  %351 = ptrtoint i32* %350 to i64
  %352 = load i32*, i32** %291, align 8
  %353 = load i64, i64* %318, align 8
  %354 = ptrtoint i32* %352 to i64
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 2
  %357 = sub nsw i64 0, %356
  %358 = getelementptr inbounds i32, i32* %347, i64 %357
  %359 = ptrtoint i32* %358 to i64
  %360 = icmp sgt i64 %355, 0
  br i1 %360, label %361, label %365

361:                                              ; preds = %344
  %362 = bitcast i32* %358 to i8*
  %363 = bitcast i32* %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %362, i8* align 4 %363, i64 %355, i1 false) #18
  %364 = load i32*, i32** %291, align 8
  br label %365

365:                                              ; preds = %361, %344
  %366 = phi i32* [ %352, %344 ], [ %364, %361 ]
  store i64 %359, i64* %319, align 8
  store i64 %351, i64* %318, align 8
  store i64 %349, i64* %327, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %371, label %368

368:                                              ; preds = %365
  %369 = bitcast i32* %366 to i8*
  call void @_ZdlPv(i8* %369) #19
  %370 = load i32*, i32** %293, align 8
  br label %371

371:                                              ; preds = %368, %365, %312, %304
  %372 = phi i32* [ %370, %368 ], [ %350, %365 ], [ %313, %312 ], [ %294, %304 ]
  %373 = load i32*, i32** %291, align 8
  %374 = icmp eq i32* %373, %372
  %375 = ptrtoint i32* %373 to i64
  br i1 %374, label %385, label %376

376:                                              ; preds = %371, %380
  %377 = phi i32* [ %381, %380 ], [ %373, %371 ]
  %378 = load i32, i32* %377, align 4
  %379 = icmp eq i32 %378, 6
  br i1 %379, label %383, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds i32, i32* %377, i64 1
  %382 = icmp eq i32* %381, %372
  br i1 %382, label %385, label %376

383:                                              ; preds = %376
  %384 = icmp eq i32* %377, %372
  br i1 %384, label %385, label %448

385:                                              ; preds = %380, %371, %383
  %386 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %387 = load i32*, i32** %386, align 8
  %388 = icmp eq i32* %372, %387
  %389 = ptrtoint i32* %387 to i64
  br i1 %388, label %394, label %390

390:                                              ; preds = %385
  store i32 6, i32* %372, align 4
  %391 = getelementptr inbounds i32, i32* %372, i64 1
  %392 = ptrtoint i32* %391 to i64
  %393 = bitcast i32** %293 to i64*
  store i64 %392, i64* %393, align 8
  br label %448

394:                                              ; preds = %385
  %395 = ptrtoint i32* %372 to i64
  %396 = bitcast i32** %293 to i64*
  %397 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %398 = sub i64 %395, %375
  %399 = ashr exact i64 %398, 2
  %400 = add nsw i64 %399, 1
  %401 = icmp ugt i64 %400, 4611686018427387903
  br i1 %401, label %402, label %404

402:                                              ; preds = %394
  %403 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %403) #20
  unreachable

404:                                              ; preds = %394
  %405 = bitcast i32** %386 to i64*
  %406 = sub i64 %389, %375
  %407 = ashr exact i64 %406, 2
  %408 = icmp ult i64 %407, 2305843009213693951
  br i1 %408, label %409, label %417

409:                                              ; preds = %404
  %410 = ashr exact i64 %406, 1
  %411 = icmp ult i64 %410, %400
  %412 = select i1 %411, i64 %400, i64 %410
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %422, label %414

414:                                              ; preds = %409
  %415 = icmp ugt i64 %412, 4611686018427387903
  br i1 %415, label %416, label %417

416:                                              ; preds = %414
  call void @abort() #20
  unreachable

417:                                              ; preds = %414, %404
  %418 = phi i64 [ %412, %414 ], [ 4611686018427387903, %404 ]
  %419 = shl i64 %418, 2
  %420 = call i8* @_Znwm(i64 %419) #19
  %421 = bitcast i8* %420 to i32*
  br label %422

422:                                              ; preds = %417, %409
  %423 = phi i64 [ %418, %417 ], [ 0, %409 ]
  %424 = phi i32* [ %421, %417 ], [ null, %409 ]
  %425 = getelementptr inbounds i32, i32* %424, i64 %399
  %426 = getelementptr inbounds i32, i32* %424, i64 %423
  %427 = ptrtoint i32* %426 to i64
  store i32 6, i32* %425, align 4
  %428 = getelementptr inbounds i32, i32* %425, i64 1
  %429 = ptrtoint i32* %428 to i64
  %430 = load i32*, i32** %291, align 8
  %431 = load i64, i64* %396, align 8
  %432 = ptrtoint i32* %430 to i64
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 2
  %435 = sub nsw i64 0, %434
  %436 = getelementptr inbounds i32, i32* %425, i64 %435
  %437 = ptrtoint i32* %436 to i64
  %438 = icmp sgt i64 %433, 0
  br i1 %438, label %439, label %443

439:                                              ; preds = %422
  %440 = bitcast i32* %436 to i8*
  %441 = bitcast i32* %430 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 %433, i1 false) #18
  %442 = load i32*, i32** %291, align 8
  br label %443

443:                                              ; preds = %439, %422
  %444 = phi i32* [ %430, %422 ], [ %442, %439 ]
  store i64 %437, i64* %397, align 8
  store i64 %429, i64* %396, align 8
  store i64 %427, i64* %405, align 8
  %445 = icmp eq i32* %444, null
  br i1 %445, label %448, label %446

446:                                              ; preds = %443
  %447 = bitcast i32* %444 to i8*
  call void @_ZdlPv(i8* %447) #19
  br label %448

448:                                              ; preds = %383, %390, %443, %446, %284, %288
  %449 = xor i1 %6, true
  %450 = or i1 %449, %286
  br i1 %450, label %533, label %451

451:                                              ; preds = %448
  %452 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kDefaultANGLEMetalE) #18
  br i1 %452, label %453, label %533

453:                                              ; preds = %451
  %454 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %455 = load i32*, i32** %454, align 8
  %456 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %457 = load i32*, i32** %456, align 8
  %458 = icmp eq i32* %455, %457
  %459 = ptrtoint i32* %455 to i64
  br i1 %458, label %467, label %460

460:                                              ; preds = %453, %464
  %461 = phi i32* [ %465, %464 ], [ %455, %453 ]
  %462 = load i32, i32* %461, align 4
  %463 = icmp eq i32 %462, 17
  br i1 %463, label %467, label %464

464:                                              ; preds = %460
  %465 = getelementptr inbounds i32, i32* %461, i64 1
  %466 = icmp eq i32* %465, %457
  br i1 %466, label %470, label %460

467:                                              ; preds = %460, %453
  %468 = phi i32* [ %455, %453 ], [ %461, %460 ]
  %469 = icmp eq i32* %468, %457
  br i1 %469, label %470, label %533

470:                                              ; preds = %464, %467
  %471 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %472 = load i32*, i32** %471, align 8
  %473 = icmp eq i32* %457, %472
  %474 = ptrtoint i32* %472 to i64
  br i1 %473, label %479, label %475

475:                                              ; preds = %470
  store i32 17, i32* %457, align 4
  %476 = getelementptr inbounds i32, i32* %457, i64 1
  %477 = ptrtoint i32* %476 to i64
  %478 = bitcast i32** %456 to i64*
  store i64 %477, i64* %478, align 8
  br label %533

479:                                              ; preds = %470
  %480 = ptrtoint i32* %457 to i64
  %481 = bitcast i32** %456 to i64*
  %482 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %483 = sub i64 %480, %459
  %484 = ashr exact i64 %483, 2
  %485 = add nsw i64 %484, 1
  %486 = icmp ugt i64 %485, 4611686018427387903
  br i1 %486, label %487, label %489

487:                                              ; preds = %479
  %488 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %488) #20
  unreachable

489:                                              ; preds = %479
  %490 = bitcast i32** %471 to i64*
  %491 = sub i64 %474, %459
  %492 = ashr exact i64 %491, 2
  %493 = icmp ult i64 %492, 2305843009213693951
  br i1 %493, label %494, label %502

494:                                              ; preds = %489
  %495 = ashr exact i64 %491, 1
  %496 = icmp ult i64 %495, %485
  %497 = select i1 %496, i64 %485, i64 %495
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %507, label %499

499:                                              ; preds = %494
  %500 = icmp ugt i64 %497, 4611686018427387903
  br i1 %500, label %501, label %502

501:                                              ; preds = %499
  call void @abort() #20
  unreachable

502:                                              ; preds = %499, %489
  %503 = phi i64 [ %497, %499 ], [ 4611686018427387903, %489 ]
  %504 = shl i64 %503, 2
  %505 = call i8* @_Znwm(i64 %504) #19
  %506 = bitcast i8* %505 to i32*
  br label %507

507:                                              ; preds = %502, %494
  %508 = phi i64 [ %503, %502 ], [ 0, %494 ]
  %509 = phi i32* [ %506, %502 ], [ null, %494 ]
  %510 = getelementptr inbounds i32, i32* %509, i64 %484
  %511 = getelementptr inbounds i32, i32* %509, i64 %508
  %512 = ptrtoint i32* %511 to i64
  store i32 17, i32* %510, align 4
  %513 = getelementptr inbounds i32, i32* %510, i64 1
  %514 = ptrtoint i32* %513 to i64
  %515 = load i32*, i32** %454, align 8
  %516 = load i64, i64* %481, align 8
  %517 = ptrtoint i32* %515 to i64
  %518 = sub i64 %516, %517
  %519 = ashr exact i64 %518, 2
  %520 = sub nsw i64 0, %519
  %521 = getelementptr inbounds i32, i32* %510, i64 %520
  %522 = ptrtoint i32* %521 to i64
  %523 = icmp sgt i64 %518, 0
  br i1 %523, label %524, label %528

524:                                              ; preds = %507
  %525 = bitcast i32* %521 to i8*
  %526 = bitcast i32* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %525, i8* align 4 %526, i64 %518, i1 false) #18
  %527 = load i32*, i32** %454, align 8
  br label %528

528:                                              ; preds = %524, %507
  %529 = phi i32* [ %515, %507 ], [ %527, %524 ]
  store i64 %522, i64* %482, align 8
  store i64 %514, i64* %481, align 8
  store i64 %512, i64* %490, align 8
  %530 = icmp eq i32* %529, null
  br i1 %530, label %533, label %531

531:                                              ; preds = %528
  %532 = bitcast i32* %529 to i8*
  call void @_ZdlPv(i8* %532) #19
  br label %533

533:                                              ; preds = %467, %475, %528, %531, %448, %451
  %534 = xor i1 %3, true
  %535 = or i1 %534, %286
  br i1 %535, label %618, label %536

536:                                              ; preds = %533
  %537 = call zeroext i1 @_ZN8features20IsDefaultANGLEVulkanEv() #18
  br i1 %537, label %538, label %618

538:                                              ; preds = %536
  %539 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %540 = load i32*, i32** %539, align 8
  %541 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %542 = load i32*, i32** %541, align 8
  %543 = icmp eq i32* %540, %542
  %544 = ptrtoint i32* %540 to i64
  br i1 %543, label %552, label %545

545:                                              ; preds = %538, %549
  %546 = phi i32* [ %550, %549 ], [ %540, %538 ]
  %547 = load i32, i32* %546, align 4
  %548 = icmp eq i32 %547, 11
  br i1 %548, label %552, label %549

549:                                              ; preds = %545
  %550 = getelementptr inbounds i32, i32* %546, i64 1
  %551 = icmp eq i32* %550, %542
  br i1 %551, label %555, label %545

552:                                              ; preds = %545, %538
  %553 = phi i32* [ %540, %538 ], [ %546, %545 ]
  %554 = icmp eq i32* %553, %542
  br i1 %554, label %555, label %618

555:                                              ; preds = %549, %552
  %556 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %557 = load i32*, i32** %556, align 8
  %558 = icmp eq i32* %542, %557
  %559 = ptrtoint i32* %557 to i64
  br i1 %558, label %564, label %560

560:                                              ; preds = %555
  store i32 11, i32* %542, align 4
  %561 = getelementptr inbounds i32, i32* %542, i64 1
  %562 = ptrtoint i32* %561 to i64
  %563 = bitcast i32** %541 to i64*
  store i64 %562, i64* %563, align 8
  br label %618

564:                                              ; preds = %555
  %565 = ptrtoint i32* %542 to i64
  %566 = bitcast i32** %541 to i64*
  %567 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %568 = sub i64 %565, %544
  %569 = ashr exact i64 %568, 2
  %570 = add nsw i64 %569, 1
  %571 = icmp ugt i64 %570, 4611686018427387903
  br i1 %571, label %572, label %574

572:                                              ; preds = %564
  %573 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %573) #20
  unreachable

574:                                              ; preds = %564
  %575 = bitcast i32** %556 to i64*
  %576 = sub i64 %559, %544
  %577 = ashr exact i64 %576, 2
  %578 = icmp ult i64 %577, 2305843009213693951
  br i1 %578, label %579, label %587

579:                                              ; preds = %574
  %580 = ashr exact i64 %576, 1
  %581 = icmp ult i64 %580, %570
  %582 = select i1 %581, i64 %570, i64 %580
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %592, label %584

584:                                              ; preds = %579
  %585 = icmp ugt i64 %582, 4611686018427387903
  br i1 %585, label %586, label %587

586:                                              ; preds = %584
  call void @abort() #20
  unreachable

587:                                              ; preds = %584, %574
  %588 = phi i64 [ %582, %584 ], [ 4611686018427387903, %574 ]
  %589 = shl i64 %588, 2
  %590 = call i8* @_Znwm(i64 %589) #19
  %591 = bitcast i8* %590 to i32*
  br label %592

592:                                              ; preds = %587, %579
  %593 = phi i64 [ %588, %587 ], [ 0, %579 ]
  %594 = phi i32* [ %591, %587 ], [ null, %579 ]
  %595 = getelementptr inbounds i32, i32* %594, i64 %569
  %596 = getelementptr inbounds i32, i32* %594, i64 %593
  %597 = ptrtoint i32* %596 to i64
  store i32 11, i32* %595, align 4
  %598 = getelementptr inbounds i32, i32* %595, i64 1
  %599 = ptrtoint i32* %598 to i64
  %600 = load i32*, i32** %539, align 8
  %601 = load i64, i64* %566, align 8
  %602 = ptrtoint i32* %600 to i64
  %603 = sub i64 %601, %602
  %604 = ashr exact i64 %603, 2
  %605 = sub nsw i64 0, %604
  %606 = getelementptr inbounds i32, i32* %595, i64 %605
  %607 = ptrtoint i32* %606 to i64
  %608 = icmp sgt i64 %603, 0
  br i1 %608, label %609, label %613

609:                                              ; preds = %592
  %610 = bitcast i32* %606 to i8*
  %611 = bitcast i32* %600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %610, i8* align 4 %611, i64 %603, i1 false) #18
  %612 = load i32*, i32** %539, align 8
  br label %613

613:                                              ; preds = %609, %592
  %614 = phi i32* [ %600, %592 ], [ %612, %609 ]
  store i64 %607, i64* %567, align 8
  store i64 %599, i64* %566, align 8
  store i64 %597, i64* %575, align 8
  %615 = icmp eq i32* %614, null
  br i1 %615, label %618, label %616

616:                                              ; preds = %613
  %617 = bitcast i32* %614 to i8*
  call void @_ZdlPv(i8* %617) #19
  br label %618

618:                                              ; preds = %552, %560, %613, %616, %533, %536
  br i1 %0, label %619, label %1160

619:                                              ; preds = %618
  br i1 %190, label %620, label %782

620:                                              ; preds = %619
  %621 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kDisableD3D11E, i64 0, i64 0)) #18
  br i1 %621, label %702, label %622

622:                                              ; preds = %620
  %623 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %624 = load i32*, i32** %623, align 8
  %625 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %626 = load i32*, i32** %625, align 8
  %627 = icmp eq i32* %624, %626
  %628 = ptrtoint i32* %624 to i64
  br i1 %627, label %636, label %629

629:                                              ; preds = %622, %633
  %630 = phi i32* [ %634, %633 ], [ %624, %622 ]
  %631 = load i32, i32* %630, align 4
  %632 = icmp eq i32 %631, 4
  br i1 %632, label %636, label %633

633:                                              ; preds = %629
  %634 = getelementptr inbounds i32, i32* %630, i64 1
  %635 = icmp eq i32* %634, %626
  br i1 %635, label %639, label %629

636:                                              ; preds = %629, %622
  %637 = phi i32* [ %624, %622 ], [ %630, %629 ]
  %638 = icmp eq i32* %637, %626
  br i1 %638, label %639, label %702

639:                                              ; preds = %633, %636
  %640 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %641 = load i32*, i32** %640, align 8
  %642 = icmp eq i32* %626, %641
  %643 = ptrtoint i32* %641 to i64
  br i1 %642, label %648, label %644

644:                                              ; preds = %639
  store i32 4, i32* %626, align 4
  %645 = getelementptr inbounds i32, i32* %626, i64 1
  %646 = ptrtoint i32* %645 to i64
  %647 = bitcast i32** %625 to i64*
  store i64 %646, i64* %647, align 8
  br label %702

648:                                              ; preds = %639
  %649 = ptrtoint i32* %626 to i64
  %650 = bitcast i32** %625 to i64*
  %651 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %652 = sub i64 %649, %628
  %653 = ashr exact i64 %652, 2
  %654 = add nsw i64 %653, 1
  %655 = icmp ugt i64 %654, 4611686018427387903
  br i1 %655, label %656, label %658

656:                                              ; preds = %648
  %657 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %657) #20
  unreachable

658:                                              ; preds = %648
  %659 = bitcast i32** %640 to i64*
  %660 = sub i64 %643, %628
  %661 = ashr exact i64 %660, 2
  %662 = icmp ult i64 %661, 2305843009213693951
  br i1 %662, label %663, label %671

663:                                              ; preds = %658
  %664 = ashr exact i64 %660, 1
  %665 = icmp ult i64 %664, %654
  %666 = select i1 %665, i64 %654, i64 %664
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %676, label %668

668:                                              ; preds = %663
  %669 = icmp ugt i64 %666, 4611686018427387903
  br i1 %669, label %670, label %671

670:                                              ; preds = %668
  call void @abort() #20
  unreachable

671:                                              ; preds = %668, %658
  %672 = phi i64 [ %666, %668 ], [ 4611686018427387903, %658 ]
  %673 = shl i64 %672, 2
  %674 = call i8* @_Znwm(i64 %673) #19
  %675 = bitcast i8* %674 to i32*
  br label %676

676:                                              ; preds = %671, %663
  %677 = phi i64 [ %672, %671 ], [ 0, %663 ]
  %678 = phi i32* [ %675, %671 ], [ null, %663 ]
  %679 = getelementptr inbounds i32, i32* %678, i64 %653
  %680 = getelementptr inbounds i32, i32* %678, i64 %677
  %681 = ptrtoint i32* %680 to i64
  store i32 4, i32* %679, align 4
  %682 = getelementptr inbounds i32, i32* %679, i64 1
  %683 = ptrtoint i32* %682 to i64
  %684 = load i32*, i32** %623, align 8
  %685 = load i64, i64* %650, align 8
  %686 = ptrtoint i32* %684 to i64
  %687 = sub i64 %685, %686
  %688 = ashr exact i64 %687, 2
  %689 = sub nsw i64 0, %688
  %690 = getelementptr inbounds i32, i32* %679, i64 %689
  %691 = ptrtoint i32* %690 to i64
  %692 = icmp sgt i64 %687, 0
  br i1 %692, label %693, label %697

693:                                              ; preds = %676
  %694 = bitcast i32* %690 to i8*
  %695 = bitcast i32* %684 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %687, i1 false) #18
  %696 = load i32*, i32** %623, align 8
  br label %697

697:                                              ; preds = %693, %676
  %698 = phi i32* [ %684, %676 ], [ %696, %693 ]
  store i64 %691, i64* %651, align 8
  store i64 %683, i64* %650, align 8
  store i64 %681, i64* %659, align 8
  %699 = icmp eq i32* %698, null
  br i1 %699, label %702, label %700

700:                                              ; preds = %697
  %701 = bitcast i32* %698 to i8*
  call void @_ZdlPv(i8* %701) #19
  br label %702

702:                                              ; preds = %636, %644, %697, %700, %620
  %703 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %704 = load i32*, i32** %703, align 8
  %705 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %704, %706
  %708 = ptrtoint i32* %704 to i64
  br i1 %707, label %716, label %709

709:                                              ; preds = %702, %713
  %710 = phi i32* [ %714, %713 ], [ %704, %702 ]
  %711 = load i32, i32* %710, align 4
  %712 = icmp eq i32 %711, 3
  br i1 %712, label %716, label %713

713:                                              ; preds = %709
  %714 = getelementptr inbounds i32, i32* %710, i64 1
  %715 = icmp eq i32* %714, %706
  br i1 %715, label %719, label %709

716:                                              ; preds = %709, %702
  %717 = phi i32* [ %704, %702 ], [ %710, %709 ]
  %718 = icmp eq i32* %717, %706
  br i1 %718, label %719, label %1160

719:                                              ; preds = %713, %716
  %720 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %721 = load i32*, i32** %720, align 8
  %722 = icmp eq i32* %706, %721
  %723 = ptrtoint i32* %721 to i64
  br i1 %722, label %728, label %724

724:                                              ; preds = %719
  store i32 3, i32* %706, align 4
  %725 = getelementptr inbounds i32, i32* %706, i64 1
  %726 = ptrtoint i32* %725 to i64
  %727 = bitcast i32** %705 to i64*
  store i64 %726, i64* %727, align 8
  br label %1160

728:                                              ; preds = %719
  %729 = ptrtoint i32* %706 to i64
  %730 = bitcast i32** %705 to i64*
  %731 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %732 = sub i64 %729, %708
  %733 = ashr exact i64 %732, 2
  %734 = add nsw i64 %733, 1
  %735 = icmp ugt i64 %734, 4611686018427387903
  br i1 %735, label %736, label %738

736:                                              ; preds = %728
  %737 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %737) #20
  unreachable

738:                                              ; preds = %728
  %739 = bitcast i32** %720 to i64*
  %740 = sub i64 %723, %708
  %741 = ashr exact i64 %740, 2
  %742 = icmp ult i64 %741, 2305843009213693951
  br i1 %742, label %743, label %751

743:                                              ; preds = %738
  %744 = ashr exact i64 %740, 1
  %745 = icmp ult i64 %744, %734
  %746 = select i1 %745, i64 %734, i64 %744
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %756, label %748

748:                                              ; preds = %743
  %749 = icmp ugt i64 %746, 4611686018427387903
  br i1 %749, label %750, label %751

750:                                              ; preds = %748
  call void @abort() #20
  unreachable

751:                                              ; preds = %748, %738
  %752 = phi i64 [ %746, %748 ], [ 4611686018427387903, %738 ]
  %753 = shl i64 %752, 2
  %754 = call i8* @_Znwm(i64 %753) #19
  %755 = bitcast i8* %754 to i32*
  br label %756

756:                                              ; preds = %751, %743
  %757 = phi i64 [ %752, %751 ], [ 0, %743 ]
  %758 = phi i32* [ %755, %751 ], [ null, %743 ]
  %759 = getelementptr inbounds i32, i32* %758, i64 %733
  %760 = getelementptr inbounds i32, i32* %758, i64 %757
  %761 = ptrtoint i32* %760 to i64
  store i32 3, i32* %759, align 4
  %762 = getelementptr inbounds i32, i32* %759, i64 1
  %763 = ptrtoint i32* %762 to i64
  %764 = load i32*, i32** %703, align 8
  %765 = load i64, i64* %730, align 8
  %766 = ptrtoint i32* %764 to i64
  %767 = sub i64 %765, %766
  %768 = ashr exact i64 %767, 2
  %769 = sub nsw i64 0, %768
  %770 = getelementptr inbounds i32, i32* %759, i64 %769
  %771 = ptrtoint i32* %770 to i64
  %772 = icmp sgt i64 %767, 0
  br i1 %772, label %773, label %777

773:                                              ; preds = %756
  %774 = bitcast i32* %770 to i8*
  %775 = bitcast i32* %764 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %774, i8* align 4 %775, i64 %767, i1 false) #18
  %776 = load i32*, i32** %703, align 8
  br label %777

777:                                              ; preds = %773, %756
  %778 = phi i32* [ %764, %756 ], [ %776, %773 ]
  store i64 %771, i64* %731, align 8
  store i64 %763, i64* %730, align 8
  store i64 %761, i64* %739, align 8
  %779 = icmp eq i32* %778, null
  br i1 %779, label %1160, label %780

780:                                              ; preds = %777
  %781 = bitcast i32* %778 to i8*
  call void @_ZdlPv(i8* %781) #19
  br label %1160

782:                                              ; preds = %619
  %783 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kANGLEImplementationD3D11NameE, i64 0, i64 0)) #18
  %784 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %785 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %784, i64 0, i32 1, i32 0
  %786 = load i8, i8* %785, align 1
  %787 = icmp slt i8 %786, 0
  %788 = load i64, i64* %148, align 8
  %789 = zext i8 %786 to i64
  %790 = select i1 %787, i64 %788, i64 %789
  %791 = icmp eq i64 %783, %790
  br i1 %791, label %792, label %879

792:                                              ; preds = %782
  %793 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kANGLEImplementationD3D11NameE, i64 0, i64 0), i64 %783) #18
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %799, label %795

795:                                              ; preds = %792
  %796 = load i8, i8* %785, align 1
  %797 = load i64, i64* %148, align 8
  %798 = zext i8 %796 to i64
  br label %879

799:                                              ; preds = %792
  %800 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %801 = load i32*, i32** %800, align 8
  %802 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %803 = load i32*, i32** %802, align 8
  %804 = icmp eq i32* %801, %803
  %805 = ptrtoint i32* %801 to i64
  br i1 %804, label %813, label %806

806:                                              ; preds = %799, %810
  %807 = phi i32* [ %811, %810 ], [ %801, %799 ]
  %808 = load i32, i32* %807, align 4
  %809 = icmp eq i32 %808, 4
  br i1 %809, label %813, label %810

810:                                              ; preds = %806
  %811 = getelementptr inbounds i32, i32* %807, i64 1
  %812 = icmp eq i32* %811, %803
  br i1 %812, label %816, label %806

813:                                              ; preds = %806, %799
  %814 = phi i32* [ %801, %799 ], [ %807, %806 ]
  %815 = icmp eq i32* %814, %803
  br i1 %815, label %816, label %1160

816:                                              ; preds = %810, %813
  %817 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %818 = load i32*, i32** %817, align 8
  %819 = icmp eq i32* %803, %818
  %820 = ptrtoint i32* %818 to i64
  br i1 %819, label %825, label %821

821:                                              ; preds = %816
  store i32 4, i32* %803, align 4
  %822 = getelementptr inbounds i32, i32* %803, i64 1
  %823 = ptrtoint i32* %822 to i64
  %824 = bitcast i32** %802 to i64*
  store i64 %823, i64* %824, align 8
  br label %1160

825:                                              ; preds = %816
  %826 = ptrtoint i32* %803 to i64
  %827 = bitcast i32** %802 to i64*
  %828 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %829 = sub i64 %826, %805
  %830 = ashr exact i64 %829, 2
  %831 = add nsw i64 %830, 1
  %832 = icmp ugt i64 %831, 4611686018427387903
  br i1 %832, label %833, label %835

833:                                              ; preds = %825
  %834 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %834) #20
  unreachable

835:                                              ; preds = %825
  %836 = bitcast i32** %817 to i64*
  %837 = sub i64 %820, %805
  %838 = ashr exact i64 %837, 2
  %839 = icmp ult i64 %838, 2305843009213693951
  br i1 %839, label %840, label %848

840:                                              ; preds = %835
  %841 = ashr exact i64 %837, 1
  %842 = icmp ult i64 %841, %831
  %843 = select i1 %842, i64 %831, i64 %841
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %853, label %845

845:                                              ; preds = %840
  %846 = icmp ugt i64 %843, 4611686018427387903
  br i1 %846, label %847, label %848

847:                                              ; preds = %845
  call void @abort() #20
  unreachable

848:                                              ; preds = %845, %835
  %849 = phi i64 [ %843, %845 ], [ 4611686018427387903, %835 ]
  %850 = shl i64 %849, 2
  %851 = call i8* @_Znwm(i64 %850) #19
  %852 = bitcast i8* %851 to i32*
  br label %853

853:                                              ; preds = %848, %840
  %854 = phi i64 [ %849, %848 ], [ 0, %840 ]
  %855 = phi i32* [ %852, %848 ], [ null, %840 ]
  %856 = getelementptr inbounds i32, i32* %855, i64 %830
  %857 = getelementptr inbounds i32, i32* %855, i64 %854
  %858 = ptrtoint i32* %857 to i64
  store i32 4, i32* %856, align 4
  %859 = getelementptr inbounds i32, i32* %856, i64 1
  %860 = ptrtoint i32* %859 to i64
  %861 = load i32*, i32** %800, align 8
  %862 = load i64, i64* %827, align 8
  %863 = ptrtoint i32* %861 to i64
  %864 = sub i64 %862, %863
  %865 = ashr exact i64 %864, 2
  %866 = sub nsw i64 0, %865
  %867 = getelementptr inbounds i32, i32* %856, i64 %866
  %868 = ptrtoint i32* %867 to i64
  %869 = icmp sgt i64 %864, 0
  br i1 %869, label %870, label %874

870:                                              ; preds = %853
  %871 = bitcast i32* %867 to i8*
  %872 = bitcast i32* %861 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %871, i8* align 4 %872, i64 %864, i1 false) #18
  %873 = load i32*, i32** %800, align 8
  br label %874

874:                                              ; preds = %870, %853
  %875 = phi i32* [ %861, %853 ], [ %873, %870 ]
  store i64 %868, i64* %828, align 8
  store i64 %860, i64* %827, align 8
  store i64 %858, i64* %836, align 8
  %876 = icmp eq i32* %875, null
  br i1 %876, label %1160, label %877

877:                                              ; preds = %874
  %878 = bitcast i32* %875 to i8*
  call void @_ZdlPv(i8* %878) #19
  br label %1160

879:                                              ; preds = %795, %782
  %880 = phi i64 [ %798, %795 ], [ %789, %782 ]
  %881 = phi i64 [ %797, %795 ], [ %788, %782 ]
  %882 = phi i8 [ %796, %795 ], [ %786, %782 ]
  %883 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl28kANGLEImplementationD3D9NameE, i64 0, i64 0)) #18
  %884 = icmp slt i8 %882, 0
  %885 = select i1 %884, i64 %881, i64 %880
  %886 = icmp eq i64 %883, %885
  br i1 %886, label %887, label %974

887:                                              ; preds = %879
  %888 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl28kANGLEImplementationD3D9NameE, i64 0, i64 0), i64 %883) #18
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %894, label %890

890:                                              ; preds = %887
  %891 = load i8, i8* %785, align 1
  %892 = load i64, i64* %148, align 8
  %893 = zext i8 %891 to i64
  br label %974

894:                                              ; preds = %887
  %895 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %896 = load i32*, i32** %895, align 8
  %897 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %898 = load i32*, i32** %897, align 8
  %899 = icmp eq i32* %896, %898
  %900 = ptrtoint i32* %896 to i64
  br i1 %899, label %908, label %901

901:                                              ; preds = %894, %905
  %902 = phi i32* [ %906, %905 ], [ %896, %894 ]
  %903 = load i32, i32* %902, align 4
  %904 = icmp eq i32 %903, 3
  br i1 %904, label %908, label %905

905:                                              ; preds = %901
  %906 = getelementptr inbounds i32, i32* %902, i64 1
  %907 = icmp eq i32* %906, %898
  br i1 %907, label %911, label %901

908:                                              ; preds = %901, %894
  %909 = phi i32* [ %896, %894 ], [ %902, %901 ]
  %910 = icmp eq i32* %909, %898
  br i1 %910, label %911, label %1160

911:                                              ; preds = %905, %908
  %912 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %913 = load i32*, i32** %912, align 8
  %914 = icmp eq i32* %898, %913
  %915 = ptrtoint i32* %913 to i64
  br i1 %914, label %920, label %916

916:                                              ; preds = %911
  store i32 3, i32* %898, align 4
  %917 = getelementptr inbounds i32, i32* %898, i64 1
  %918 = ptrtoint i32* %917 to i64
  %919 = bitcast i32** %897 to i64*
  store i64 %918, i64* %919, align 8
  br label %1160

920:                                              ; preds = %911
  %921 = ptrtoint i32* %898 to i64
  %922 = bitcast i32** %897 to i64*
  %923 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %924 = sub i64 %921, %900
  %925 = ashr exact i64 %924, 2
  %926 = add nsw i64 %925, 1
  %927 = icmp ugt i64 %926, 4611686018427387903
  br i1 %927, label %928, label %930

928:                                              ; preds = %920
  %929 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %929) #20
  unreachable

930:                                              ; preds = %920
  %931 = bitcast i32** %912 to i64*
  %932 = sub i64 %915, %900
  %933 = ashr exact i64 %932, 2
  %934 = icmp ult i64 %933, 2305843009213693951
  br i1 %934, label %935, label %943

935:                                              ; preds = %930
  %936 = ashr exact i64 %932, 1
  %937 = icmp ult i64 %936, %926
  %938 = select i1 %937, i64 %926, i64 %936
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %948, label %940

940:                                              ; preds = %935
  %941 = icmp ugt i64 %938, 4611686018427387903
  br i1 %941, label %942, label %943

942:                                              ; preds = %940
  call void @abort() #20
  unreachable

943:                                              ; preds = %940, %930
  %944 = phi i64 [ %938, %940 ], [ 4611686018427387903, %930 ]
  %945 = shl i64 %944, 2
  %946 = call i8* @_Znwm(i64 %945) #19
  %947 = bitcast i8* %946 to i32*
  br label %948

948:                                              ; preds = %943, %935
  %949 = phi i64 [ %944, %943 ], [ 0, %935 ]
  %950 = phi i32* [ %947, %943 ], [ null, %935 ]
  %951 = getelementptr inbounds i32, i32* %950, i64 %925
  %952 = getelementptr inbounds i32, i32* %950, i64 %949
  %953 = ptrtoint i32* %952 to i64
  store i32 3, i32* %951, align 4
  %954 = getelementptr inbounds i32, i32* %951, i64 1
  %955 = ptrtoint i32* %954 to i64
  %956 = load i32*, i32** %895, align 8
  %957 = load i64, i64* %922, align 8
  %958 = ptrtoint i32* %956 to i64
  %959 = sub i64 %957, %958
  %960 = ashr exact i64 %959, 2
  %961 = sub nsw i64 0, %960
  %962 = getelementptr inbounds i32, i32* %951, i64 %961
  %963 = ptrtoint i32* %962 to i64
  %964 = icmp sgt i64 %959, 0
  br i1 %964, label %965, label %969

965:                                              ; preds = %948
  %966 = bitcast i32* %962 to i8*
  %967 = bitcast i32* %956 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %966, i8* align 4 %967, i64 %959, i1 false) #18
  %968 = load i32*, i32** %895, align 8
  br label %969

969:                                              ; preds = %965, %948
  %970 = phi i32* [ %956, %948 ], [ %968, %965 ]
  store i64 %963, i64* %923, align 8
  store i64 %955, i64* %922, align 8
  store i64 %953, i64* %931, align 8
  %971 = icmp eq i32* %970, null
  br i1 %971, label %1160, label %972

972:                                              ; preds = %969
  %973 = bitcast i32* %970 to i8*
  call void @_ZdlPv(i8* %973) #19
  br label %1160

974:                                              ; preds = %890, %879
  %975 = phi i64 [ %893, %890 ], [ %880, %879 ]
  %976 = phi i64 [ %892, %890 ], [ %881, %879 ]
  %977 = phi i8 [ %891, %890 ], [ %882, %879 ]
  %978 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationD3D11NULLNameE, i64 0, i64 0)) #18
  %979 = icmp slt i8 %977, 0
  %980 = select i1 %979, i64 %976, i64 %975
  %981 = icmp eq i64 %978, %980
  br i1 %981, label %982, label %1069

982:                                              ; preds = %974
  %983 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationD3D11NULLNameE, i64 0, i64 0), i64 %978) #18
  %984 = icmp eq i32 %983, 0
  br i1 %984, label %989, label %985

985:                                              ; preds = %982
  %986 = load i8, i8* %785, align 1
  %987 = load i64, i64* %148, align 8
  %988 = zext i8 %986 to i64
  br label %1069

989:                                              ; preds = %982
  %990 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %991 = load i32*, i32** %990, align 8
  %992 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %993 = load i32*, i32** %992, align 8
  %994 = icmp eq i32* %991, %993
  %995 = ptrtoint i32* %991 to i64
  br i1 %994, label %1003, label %996

996:                                              ; preds = %989, %1000
  %997 = phi i32* [ %1001, %1000 ], [ %991, %989 ]
  %998 = load i32, i32* %997, align 4
  %999 = icmp eq i32 %998, 8
  br i1 %999, label %1003, label %1000

1000:                                             ; preds = %996
  %1001 = getelementptr inbounds i32, i32* %997, i64 1
  %1002 = icmp eq i32* %1001, %993
  br i1 %1002, label %1006, label %996

1003:                                             ; preds = %996, %989
  %1004 = phi i32* [ %991, %989 ], [ %997, %996 ]
  %1005 = icmp eq i32* %1004, %993
  br i1 %1005, label %1006, label %1160

1006:                                             ; preds = %1000, %1003
  %1007 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1008 = load i32*, i32** %1007, align 8
  %1009 = icmp eq i32* %993, %1008
  %1010 = ptrtoint i32* %1008 to i64
  br i1 %1009, label %1015, label %1011

1011:                                             ; preds = %1006
  store i32 8, i32* %993, align 4
  %1012 = getelementptr inbounds i32, i32* %993, i64 1
  %1013 = ptrtoint i32* %1012 to i64
  %1014 = bitcast i32** %992 to i64*
  store i64 %1013, i64* %1014, align 8
  br label %1160

1015:                                             ; preds = %1006
  %1016 = ptrtoint i32* %993 to i64
  %1017 = bitcast i32** %992 to i64*
  %1018 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1019 = sub i64 %1016, %995
  %1020 = ashr exact i64 %1019, 2
  %1021 = add nsw i64 %1020, 1
  %1022 = icmp ugt i64 %1021, 4611686018427387903
  br i1 %1022, label %1023, label %1025

1023:                                             ; preds = %1015
  %1024 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1024) #20
  unreachable

1025:                                             ; preds = %1015
  %1026 = bitcast i32** %1007 to i64*
  %1027 = sub i64 %1010, %995
  %1028 = ashr exact i64 %1027, 2
  %1029 = icmp ult i64 %1028, 2305843009213693951
  br i1 %1029, label %1030, label %1038

1030:                                             ; preds = %1025
  %1031 = ashr exact i64 %1027, 1
  %1032 = icmp ult i64 %1031, %1021
  %1033 = select i1 %1032, i64 %1021, i64 %1031
  %1034 = icmp eq i64 %1033, 0
  br i1 %1034, label %1043, label %1035

1035:                                             ; preds = %1030
  %1036 = icmp ugt i64 %1033, 4611686018427387903
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1035
  call void @abort() #20
  unreachable

1038:                                             ; preds = %1035, %1025
  %1039 = phi i64 [ %1033, %1035 ], [ 4611686018427387903, %1025 ]
  %1040 = shl i64 %1039, 2
  %1041 = call i8* @_Znwm(i64 %1040) #19
  %1042 = bitcast i8* %1041 to i32*
  br label %1043

1043:                                             ; preds = %1038, %1030
  %1044 = phi i64 [ %1039, %1038 ], [ 0, %1030 ]
  %1045 = phi i32* [ %1042, %1038 ], [ null, %1030 ]
  %1046 = getelementptr inbounds i32, i32* %1045, i64 %1020
  %1047 = getelementptr inbounds i32, i32* %1045, i64 %1044
  %1048 = ptrtoint i32* %1047 to i64
  store i32 8, i32* %1046, align 4
  %1049 = getelementptr inbounds i32, i32* %1046, i64 1
  %1050 = ptrtoint i32* %1049 to i64
  %1051 = load i32*, i32** %990, align 8
  %1052 = load i64, i64* %1017, align 8
  %1053 = ptrtoint i32* %1051 to i64
  %1054 = sub i64 %1052, %1053
  %1055 = ashr exact i64 %1054, 2
  %1056 = sub nsw i64 0, %1055
  %1057 = getelementptr inbounds i32, i32* %1046, i64 %1056
  %1058 = ptrtoint i32* %1057 to i64
  %1059 = icmp sgt i64 %1054, 0
  br i1 %1059, label %1060, label %1064

1060:                                             ; preds = %1043
  %1061 = bitcast i32* %1057 to i8*
  %1062 = bitcast i32* %1051 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1061, i8* align 4 %1062, i64 %1054, i1 false) #18
  %1063 = load i32*, i32** %990, align 8
  br label %1064

1064:                                             ; preds = %1060, %1043
  %1065 = phi i32* [ %1051, %1043 ], [ %1063, %1060 ]
  store i64 %1058, i64* %1018, align 8
  store i64 %1050, i64* %1017, align 8
  store i64 %1048, i64* %1026, align 8
  %1066 = icmp eq i32* %1065, null
  br i1 %1066, label %1160, label %1067

1067:                                             ; preds = %1064
  %1068 = bitcast i32* %1065 to i8*
  call void @_ZdlPv(i8* %1068) #19
  br label %1160

1069:                                             ; preds = %985, %974
  %1070 = phi i64 [ %988, %985 ], [ %975, %974 ]
  %1071 = phi i64 [ %987, %985 ], [ %976, %974 ]
  %1072 = phi i8 [ %986, %985 ], [ %977, %974 ]
  %1073 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationD3D11on12NameE, i64 0, i64 0)) #18
  %1074 = icmp slt i8 %1072, 0
  %1075 = select i1 %1074, i64 %1071, i64 %1070
  %1076 = icmp eq i64 %1073, %1075
  br i1 %1076, label %1077, label %1160

1077:                                             ; preds = %1069
  %1078 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationD3D11on12NameE, i64 0, i64 0), i64 %1073) #18
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1080, label %1160

1080:                                             ; preds = %1077
  %1081 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1082 = load i32*, i32** %1081, align 8
  %1083 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1084 = load i32*, i32** %1083, align 8
  %1085 = icmp eq i32* %1082, %1084
  %1086 = ptrtoint i32* %1082 to i64
  br i1 %1085, label %1094, label %1087

1087:                                             ; preds = %1080, %1091
  %1088 = phi i32* [ %1092, %1091 ], [ %1082, %1080 ]
  %1089 = load i32, i32* %1088, align 4
  %1090 = icmp eq i32 %1089, 13
  br i1 %1090, label %1094, label %1091

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds i32, i32* %1088, i64 1
  %1093 = icmp eq i32* %1092, %1084
  br i1 %1093, label %1097, label %1087

1094:                                             ; preds = %1087, %1080
  %1095 = phi i32* [ %1082, %1080 ], [ %1088, %1087 ]
  %1096 = icmp eq i32* %1095, %1084
  br i1 %1096, label %1097, label %1160

1097:                                             ; preds = %1091, %1094
  %1098 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1099 = load i32*, i32** %1098, align 8
  %1100 = icmp eq i32* %1084, %1099
  %1101 = ptrtoint i32* %1099 to i64
  br i1 %1100, label %1106, label %1102

1102:                                             ; preds = %1097
  store i32 13, i32* %1084, align 4
  %1103 = getelementptr inbounds i32, i32* %1084, i64 1
  %1104 = ptrtoint i32* %1103 to i64
  %1105 = bitcast i32** %1083 to i64*
  store i64 %1104, i64* %1105, align 8
  br label %1160

1106:                                             ; preds = %1097
  %1107 = ptrtoint i32* %1084 to i64
  %1108 = bitcast i32** %1083 to i64*
  %1109 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1110 = sub i64 %1107, %1086
  %1111 = ashr exact i64 %1110, 2
  %1112 = add nsw i64 %1111, 1
  %1113 = icmp ugt i64 %1112, 4611686018427387903
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1106
  %1115 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1115) #20
  unreachable

1116:                                             ; preds = %1106
  %1117 = bitcast i32** %1098 to i64*
  %1118 = sub i64 %1101, %1086
  %1119 = ashr exact i64 %1118, 2
  %1120 = icmp ult i64 %1119, 2305843009213693951
  br i1 %1120, label %1121, label %1129

1121:                                             ; preds = %1116
  %1122 = ashr exact i64 %1118, 1
  %1123 = icmp ult i64 %1122, %1112
  %1124 = select i1 %1123, i64 %1112, i64 %1122
  %1125 = icmp eq i64 %1124, 0
  br i1 %1125, label %1134, label %1126

1126:                                             ; preds = %1121
  %1127 = icmp ugt i64 %1124, 4611686018427387903
  br i1 %1127, label %1128, label %1129

1128:                                             ; preds = %1126
  call void @abort() #20
  unreachable

1129:                                             ; preds = %1126, %1116
  %1130 = phi i64 [ %1124, %1126 ], [ 4611686018427387903, %1116 ]
  %1131 = shl i64 %1130, 2
  %1132 = call i8* @_Znwm(i64 %1131) #19
  %1133 = bitcast i8* %1132 to i32*
  br label %1134

1134:                                             ; preds = %1129, %1121
  %1135 = phi i64 [ %1130, %1129 ], [ 0, %1121 ]
  %1136 = phi i32* [ %1133, %1129 ], [ null, %1121 ]
  %1137 = getelementptr inbounds i32, i32* %1136, i64 %1111
  %1138 = getelementptr inbounds i32, i32* %1136, i64 %1135
  %1139 = ptrtoint i32* %1138 to i64
  store i32 13, i32* %1137, align 4
  %1140 = getelementptr inbounds i32, i32* %1137, i64 1
  %1141 = ptrtoint i32* %1140 to i64
  %1142 = load i32*, i32** %1081, align 8
  %1143 = load i64, i64* %1108, align 8
  %1144 = ptrtoint i32* %1142 to i64
  %1145 = sub i64 %1143, %1144
  %1146 = ashr exact i64 %1145, 2
  %1147 = sub nsw i64 0, %1146
  %1148 = getelementptr inbounds i32, i32* %1137, i64 %1147
  %1149 = ptrtoint i32* %1148 to i64
  %1150 = icmp sgt i64 %1145, 0
  br i1 %1150, label %1151, label %1155

1151:                                             ; preds = %1134
  %1152 = bitcast i32* %1148 to i8*
  %1153 = bitcast i32* %1142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1152, i8* align 4 %1153, i64 %1145, i1 false) #18
  %1154 = load i32*, i32** %1081, align 8
  br label %1155

1155:                                             ; preds = %1151, %1134
  %1156 = phi i32* [ %1142, %1134 ], [ %1154, %1151 ]
  store i64 %1149, i64* %1109, align 8
  store i64 %1141, i64* %1108, align 8
  store i64 %1139, i64* %1117, align 8
  %1157 = icmp eq i32* %1156, null
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1155
  %1159 = bitcast i32* %1156 to i8*
  call void @_ZdlPv(i8* %1159) #19
  br label %1160

1160:                                             ; preds = %1069, %1094, %1102, %1155, %1158, %1003, %1011, %1064, %1067, %908, %916, %969, %972, %813, %821, %874, %877, %716, %724, %777, %780, %1077, %618
  br i1 %1, label %1161, label %1895

1161:                                             ; preds = %1160
  %1162 = or i1 %286, %0
  br i1 %1162, label %1321, label %1163

1163:                                             ; preds = %1161
  %1164 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1165 = load i32*, i32** %1164, align 8
  %1166 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1167 = load i32*, i32** %1166, align 8
  %1168 = icmp eq i32* %1165, %1167
  %1169 = ptrtoint i32* %1165 to i64
  br i1 %1168, label %1177, label %1170

1170:                                             ; preds = %1163, %1174
  %1171 = phi i32* [ %1175, %1174 ], [ %1165, %1163 ]
  %1172 = load i32, i32* %1171, align 4
  %1173 = icmp eq i32 %1172, 5
  br i1 %1173, label %1177, label %1174

1174:                                             ; preds = %1170
  %1175 = getelementptr inbounds i32, i32* %1171, i64 1
  %1176 = icmp eq i32* %1175, %1167
  br i1 %1176, label %1180, label %1170

1177:                                             ; preds = %1170, %1163
  %1178 = phi i32* [ %1165, %1163 ], [ %1171, %1170 ]
  %1179 = icmp eq i32* %1178, %1167
  br i1 %1179, label %1180, label %1244

1180:                                             ; preds = %1174, %1177
  %1181 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1182 = load i32*, i32** %1181, align 8
  %1183 = icmp eq i32* %1167, %1182
  %1184 = ptrtoint i32* %1182 to i64
  br i1 %1183, label %1189, label %1185

1185:                                             ; preds = %1180
  store i32 5, i32* %1167, align 4
  %1186 = getelementptr inbounds i32, i32* %1167, i64 1
  %1187 = ptrtoint i32* %1186 to i64
  %1188 = bitcast i32** %1166 to i64*
  store i64 %1187, i64* %1188, align 8
  br label %1244

1189:                                             ; preds = %1180
  %1190 = ptrtoint i32* %1167 to i64
  %1191 = bitcast i32** %1166 to i64*
  %1192 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1193 = sub i64 %1190, %1169
  %1194 = ashr exact i64 %1193, 2
  %1195 = add nsw i64 %1194, 1
  %1196 = icmp ugt i64 %1195, 4611686018427387903
  br i1 %1196, label %1197, label %1199

1197:                                             ; preds = %1189
  %1198 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1198) #20
  unreachable

1199:                                             ; preds = %1189
  %1200 = bitcast i32** %1181 to i64*
  %1201 = sub i64 %1184, %1169
  %1202 = ashr exact i64 %1201, 2
  %1203 = icmp ult i64 %1202, 2305843009213693951
  br i1 %1203, label %1204, label %1212

1204:                                             ; preds = %1199
  %1205 = ashr exact i64 %1201, 1
  %1206 = icmp ult i64 %1205, %1195
  %1207 = select i1 %1206, i64 %1195, i64 %1205
  %1208 = icmp eq i64 %1207, 0
  br i1 %1208, label %1217, label %1209

1209:                                             ; preds = %1204
  %1210 = icmp ugt i64 %1207, 4611686018427387903
  br i1 %1210, label %1211, label %1212

1211:                                             ; preds = %1209
  call void @abort() #20
  unreachable

1212:                                             ; preds = %1209, %1199
  %1213 = phi i64 [ %1207, %1209 ], [ 4611686018427387903, %1199 ]
  %1214 = shl i64 %1213, 2
  %1215 = call i8* @_Znwm(i64 %1214) #19
  %1216 = bitcast i8* %1215 to i32*
  br label %1217

1217:                                             ; preds = %1212, %1204
  %1218 = phi i64 [ %1213, %1212 ], [ 0, %1204 ]
  %1219 = phi i32* [ %1216, %1212 ], [ null, %1204 ]
  %1220 = getelementptr inbounds i32, i32* %1219, i64 %1194
  %1221 = getelementptr inbounds i32, i32* %1219, i64 %1218
  %1222 = ptrtoint i32* %1221 to i64
  store i32 5, i32* %1220, align 4
  %1223 = getelementptr inbounds i32, i32* %1220, i64 1
  %1224 = ptrtoint i32* %1223 to i64
  %1225 = load i32*, i32** %1164, align 8
  %1226 = load i64, i64* %1191, align 8
  %1227 = ptrtoint i32* %1225 to i64
  %1228 = sub i64 %1226, %1227
  %1229 = ashr exact i64 %1228, 2
  %1230 = sub nsw i64 0, %1229
  %1231 = getelementptr inbounds i32, i32* %1220, i64 %1230
  %1232 = ptrtoint i32* %1231 to i64
  %1233 = icmp sgt i64 %1228, 0
  br i1 %1233, label %1234, label %1238

1234:                                             ; preds = %1217
  %1235 = bitcast i32* %1231 to i8*
  %1236 = bitcast i32* %1225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1235, i8* align 4 %1236, i64 %1228, i1 false) #18
  %1237 = load i32*, i32** %1164, align 8
  br label %1238

1238:                                             ; preds = %1234, %1217
  %1239 = phi i32* [ %1225, %1217 ], [ %1237, %1234 ]
  store i64 %1232, i64* %1192, align 8
  store i64 %1224, i64* %1191, align 8
  store i64 %1222, i64* %1200, align 8
  %1240 = icmp eq i32* %1239, null
  br i1 %1240, label %1244, label %1241

1241:                                             ; preds = %1238
  %1242 = bitcast i32* %1239 to i8*
  call void @_ZdlPv(i8* %1242) #19
  %1243 = load i32*, i32** %1166, align 8
  br label %1244

1244:                                             ; preds = %1241, %1238, %1185, %1177
  %1245 = phi i32* [ %1243, %1241 ], [ %1223, %1238 ], [ %1186, %1185 ], [ %1167, %1177 ]
  %1246 = load i32*, i32** %1164, align 8
  %1247 = icmp eq i32* %1246, %1245
  %1248 = ptrtoint i32* %1246 to i64
  br i1 %1247, label %1258, label %1249

1249:                                             ; preds = %1244, %1253
  %1250 = phi i32* [ %1254, %1253 ], [ %1246, %1244 ]
  %1251 = load i32, i32* %1250, align 4
  %1252 = icmp eq i32 %1251, 6
  br i1 %1252, label %1256, label %1253

1253:                                             ; preds = %1249
  %1254 = getelementptr inbounds i32, i32* %1250, i64 1
  %1255 = icmp eq i32* %1254, %1245
  br i1 %1255, label %1258, label %1249

1256:                                             ; preds = %1249
  %1257 = icmp eq i32* %1250, %1245
  br i1 %1257, label %1258, label %1895

1258:                                             ; preds = %1253, %1244, %1256
  %1259 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1260 = load i32*, i32** %1259, align 8
  %1261 = icmp eq i32* %1245, %1260
  %1262 = ptrtoint i32* %1260 to i64
  br i1 %1261, label %1267, label %1263

1263:                                             ; preds = %1258
  store i32 6, i32* %1245, align 4
  %1264 = getelementptr inbounds i32, i32* %1245, i64 1
  %1265 = ptrtoint i32* %1264 to i64
  %1266 = bitcast i32** %1166 to i64*
  store i64 %1265, i64* %1266, align 8
  br label %1895

1267:                                             ; preds = %1258
  %1268 = ptrtoint i32* %1245 to i64
  %1269 = bitcast i32** %1166 to i64*
  %1270 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1271 = sub i64 %1268, %1248
  %1272 = ashr exact i64 %1271, 2
  %1273 = add nsw i64 %1272, 1
  %1274 = icmp ugt i64 %1273, 4611686018427387903
  br i1 %1274, label %1275, label %1277

1275:                                             ; preds = %1267
  %1276 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1276) #20
  unreachable

1277:                                             ; preds = %1267
  %1278 = bitcast i32** %1259 to i64*
  %1279 = sub i64 %1262, %1248
  %1280 = ashr exact i64 %1279, 2
  %1281 = icmp ult i64 %1280, 2305843009213693951
  br i1 %1281, label %1282, label %1290

1282:                                             ; preds = %1277
  %1283 = ashr exact i64 %1279, 1
  %1284 = icmp ult i64 %1283, %1273
  %1285 = select i1 %1284, i64 %1273, i64 %1283
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1295, label %1287

1287:                                             ; preds = %1282
  %1288 = icmp ugt i64 %1285, 4611686018427387903
  br i1 %1288, label %1289, label %1290

1289:                                             ; preds = %1287
  call void @abort() #20
  unreachable

1290:                                             ; preds = %1287, %1277
  %1291 = phi i64 [ %1285, %1287 ], [ 4611686018427387903, %1277 ]
  %1292 = shl i64 %1291, 2
  %1293 = call i8* @_Znwm(i64 %1292) #19
  %1294 = bitcast i8* %1293 to i32*
  br label %1295

1295:                                             ; preds = %1290, %1282
  %1296 = phi i64 [ %1291, %1290 ], [ 0, %1282 ]
  %1297 = phi i32* [ %1294, %1290 ], [ null, %1282 ]
  %1298 = getelementptr inbounds i32, i32* %1297, i64 %1272
  %1299 = getelementptr inbounds i32, i32* %1297, i64 %1296
  %1300 = ptrtoint i32* %1299 to i64
  store i32 6, i32* %1298, align 4
  %1301 = getelementptr inbounds i32, i32* %1298, i64 1
  %1302 = ptrtoint i32* %1301 to i64
  %1303 = load i32*, i32** %1164, align 8
  %1304 = load i64, i64* %1269, align 8
  %1305 = ptrtoint i32* %1303 to i64
  %1306 = sub i64 %1304, %1305
  %1307 = ashr exact i64 %1306, 2
  %1308 = sub nsw i64 0, %1307
  %1309 = getelementptr inbounds i32, i32* %1298, i64 %1308
  %1310 = ptrtoint i32* %1309 to i64
  %1311 = icmp sgt i64 %1306, 0
  br i1 %1311, label %1312, label %1316

1312:                                             ; preds = %1295
  %1313 = bitcast i32* %1309 to i8*
  %1314 = bitcast i32* %1303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1313, i8* align 4 %1314, i64 %1306, i1 false) #18
  %1315 = load i32*, i32** %1164, align 8
  br label %1316

1316:                                             ; preds = %1312, %1295
  %1317 = phi i32* [ %1303, %1295 ], [ %1315, %1312 ]
  store i64 %1310, i64* %1270, align 8
  store i64 %1302, i64* %1269, align 8
  store i64 %1300, i64* %1278, align 8
  %1318 = icmp eq i32* %1317, null
  br i1 %1318, label %1895, label %1319

1319:                                             ; preds = %1316
  %1320 = bitcast i32* %1317 to i8*
  call void @_ZdlPv(i8* %1320) #19
  br label %1895

1321:                                             ; preds = %1161
  %1322 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl30kANGLEImplementationOpenGLNameE, i64 0, i64 0)) #18
  %1323 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1323, i64 0, i32 1, i32 0
  %1325 = load i8, i8* %1324, align 1
  %1326 = icmp slt i8 %1325, 0
  %1327 = load i64, i64* %148, align 8
  %1328 = zext i8 %1325 to i64
  %1329 = select i1 %1326, i64 %1327, i64 %1328
  %1330 = icmp eq i64 %1322, %1329
  br i1 %1330, label %1331, label %1418

1331:                                             ; preds = %1321
  %1332 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl30kANGLEImplementationOpenGLNameE, i64 0, i64 0), i64 %1322) #18
  %1333 = icmp eq i32 %1332, 0
  br i1 %1333, label %1338, label %1334

1334:                                             ; preds = %1331
  %1335 = load i8, i8* %1324, align 1
  %1336 = load i64, i64* %148, align 8
  %1337 = zext i8 %1335 to i64
  br label %1418

1338:                                             ; preds = %1331
  %1339 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1340 = load i32*, i32** %1339, align 8
  %1341 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1342 = load i32*, i32** %1341, align 8
  %1343 = icmp eq i32* %1340, %1342
  %1344 = ptrtoint i32* %1340 to i64
  br i1 %1343, label %1352, label %1345

1345:                                             ; preds = %1338, %1349
  %1346 = phi i32* [ %1350, %1349 ], [ %1340, %1338 ]
  %1347 = load i32, i32* %1346, align 4
  %1348 = icmp eq i32 %1347, 5
  br i1 %1348, label %1352, label %1349

1349:                                             ; preds = %1345
  %1350 = getelementptr inbounds i32, i32* %1346, i64 1
  %1351 = icmp eq i32* %1350, %1342
  br i1 %1351, label %1355, label %1345

1352:                                             ; preds = %1345, %1338
  %1353 = phi i32* [ %1340, %1338 ], [ %1346, %1345 ]
  %1354 = icmp eq i32* %1353, %1342
  br i1 %1354, label %1355, label %1895

1355:                                             ; preds = %1349, %1352
  %1356 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1357 = load i32*, i32** %1356, align 8
  %1358 = icmp eq i32* %1342, %1357
  %1359 = ptrtoint i32* %1357 to i64
  br i1 %1358, label %1364, label %1360

1360:                                             ; preds = %1355
  store i32 5, i32* %1342, align 4
  %1361 = getelementptr inbounds i32, i32* %1342, i64 1
  %1362 = ptrtoint i32* %1361 to i64
  %1363 = bitcast i32** %1341 to i64*
  store i64 %1362, i64* %1363, align 8
  br label %1895

1364:                                             ; preds = %1355
  %1365 = ptrtoint i32* %1342 to i64
  %1366 = bitcast i32** %1341 to i64*
  %1367 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1368 = sub i64 %1365, %1344
  %1369 = ashr exact i64 %1368, 2
  %1370 = add nsw i64 %1369, 1
  %1371 = icmp ugt i64 %1370, 4611686018427387903
  br i1 %1371, label %1372, label %1374

1372:                                             ; preds = %1364
  %1373 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1373) #20
  unreachable

1374:                                             ; preds = %1364
  %1375 = bitcast i32** %1356 to i64*
  %1376 = sub i64 %1359, %1344
  %1377 = ashr exact i64 %1376, 2
  %1378 = icmp ult i64 %1377, 2305843009213693951
  br i1 %1378, label %1379, label %1387

1379:                                             ; preds = %1374
  %1380 = ashr exact i64 %1376, 1
  %1381 = icmp ult i64 %1380, %1370
  %1382 = select i1 %1381, i64 %1370, i64 %1380
  %1383 = icmp eq i64 %1382, 0
  br i1 %1383, label %1392, label %1384

1384:                                             ; preds = %1379
  %1385 = icmp ugt i64 %1382, 4611686018427387903
  br i1 %1385, label %1386, label %1387

1386:                                             ; preds = %1384
  call void @abort() #20
  unreachable

1387:                                             ; preds = %1384, %1374
  %1388 = phi i64 [ %1382, %1384 ], [ 4611686018427387903, %1374 ]
  %1389 = shl i64 %1388, 2
  %1390 = call i8* @_Znwm(i64 %1389) #19
  %1391 = bitcast i8* %1390 to i32*
  br label %1392

1392:                                             ; preds = %1387, %1379
  %1393 = phi i64 [ %1388, %1387 ], [ 0, %1379 ]
  %1394 = phi i32* [ %1391, %1387 ], [ null, %1379 ]
  %1395 = getelementptr inbounds i32, i32* %1394, i64 %1369
  %1396 = getelementptr inbounds i32, i32* %1394, i64 %1393
  %1397 = ptrtoint i32* %1396 to i64
  store i32 5, i32* %1395, align 4
  %1398 = getelementptr inbounds i32, i32* %1395, i64 1
  %1399 = ptrtoint i32* %1398 to i64
  %1400 = load i32*, i32** %1339, align 8
  %1401 = load i64, i64* %1366, align 8
  %1402 = ptrtoint i32* %1400 to i64
  %1403 = sub i64 %1401, %1402
  %1404 = ashr exact i64 %1403, 2
  %1405 = sub nsw i64 0, %1404
  %1406 = getelementptr inbounds i32, i32* %1395, i64 %1405
  %1407 = ptrtoint i32* %1406 to i64
  %1408 = icmp sgt i64 %1403, 0
  br i1 %1408, label %1409, label %1413

1409:                                             ; preds = %1392
  %1410 = bitcast i32* %1406 to i8*
  %1411 = bitcast i32* %1400 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1410, i8* align 4 %1411, i64 %1403, i1 false) #18
  %1412 = load i32*, i32** %1339, align 8
  br label %1413

1413:                                             ; preds = %1409, %1392
  %1414 = phi i32* [ %1400, %1392 ], [ %1412, %1409 ]
  store i64 %1407, i64* %1367, align 8
  store i64 %1399, i64* %1366, align 8
  store i64 %1397, i64* %1375, align 8
  %1415 = icmp eq i32* %1414, null
  br i1 %1415, label %1895, label %1416

1416:                                             ; preds = %1413
  %1417 = bitcast i32* %1414 to i8*
  call void @_ZdlPv(i8* %1417) #19
  br label %1895

1418:                                             ; preds = %1334, %1321
  %1419 = phi i64 [ %1337, %1334 ], [ %1328, %1321 ]
  %1420 = phi i64 [ %1336, %1334 ], [ %1327, %1321 ]
  %1421 = phi i8 [ %1335, %1334 ], [ %1325, %1321 ]
  %1422 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kANGLEImplementationOpenGLESNameE, i64 0, i64 0)) #18
  %1423 = icmp slt i8 %1421, 0
  %1424 = select i1 %1423, i64 %1420, i64 %1419
  %1425 = icmp eq i64 %1422, %1424
  br i1 %1425, label %1426, label %1513

1426:                                             ; preds = %1418
  %1427 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl32kANGLEImplementationOpenGLESNameE, i64 0, i64 0), i64 %1422) #18
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1433, label %1429

1429:                                             ; preds = %1426
  %1430 = load i8, i8* %1324, align 1
  %1431 = load i64, i64* %148, align 8
  %1432 = zext i8 %1430 to i64
  br label %1513

1433:                                             ; preds = %1426
  %1434 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1435 = load i32*, i32** %1434, align 8
  %1436 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1437 = load i32*, i32** %1436, align 8
  %1438 = icmp eq i32* %1435, %1437
  %1439 = ptrtoint i32* %1435 to i64
  br i1 %1438, label %1447, label %1440

1440:                                             ; preds = %1433, %1444
  %1441 = phi i32* [ %1445, %1444 ], [ %1435, %1433 ]
  %1442 = load i32, i32* %1441, align 4
  %1443 = icmp eq i32 %1442, 6
  br i1 %1443, label %1447, label %1444

1444:                                             ; preds = %1440
  %1445 = getelementptr inbounds i32, i32* %1441, i64 1
  %1446 = icmp eq i32* %1445, %1437
  br i1 %1446, label %1450, label %1440

1447:                                             ; preds = %1440, %1433
  %1448 = phi i32* [ %1435, %1433 ], [ %1441, %1440 ]
  %1449 = icmp eq i32* %1448, %1437
  br i1 %1449, label %1450, label %1895

1450:                                             ; preds = %1444, %1447
  %1451 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1452 = load i32*, i32** %1451, align 8
  %1453 = icmp eq i32* %1437, %1452
  %1454 = ptrtoint i32* %1452 to i64
  br i1 %1453, label %1459, label %1455

1455:                                             ; preds = %1450
  store i32 6, i32* %1437, align 4
  %1456 = getelementptr inbounds i32, i32* %1437, i64 1
  %1457 = ptrtoint i32* %1456 to i64
  %1458 = bitcast i32** %1436 to i64*
  store i64 %1457, i64* %1458, align 8
  br label %1895

1459:                                             ; preds = %1450
  %1460 = ptrtoint i32* %1437 to i64
  %1461 = bitcast i32** %1436 to i64*
  %1462 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1463 = sub i64 %1460, %1439
  %1464 = ashr exact i64 %1463, 2
  %1465 = add nsw i64 %1464, 1
  %1466 = icmp ugt i64 %1465, 4611686018427387903
  br i1 %1466, label %1467, label %1469

1467:                                             ; preds = %1459
  %1468 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1468) #20
  unreachable

1469:                                             ; preds = %1459
  %1470 = bitcast i32** %1451 to i64*
  %1471 = sub i64 %1454, %1439
  %1472 = ashr exact i64 %1471, 2
  %1473 = icmp ult i64 %1472, 2305843009213693951
  br i1 %1473, label %1474, label %1482

1474:                                             ; preds = %1469
  %1475 = ashr exact i64 %1471, 1
  %1476 = icmp ult i64 %1475, %1465
  %1477 = select i1 %1476, i64 %1465, i64 %1475
  %1478 = icmp eq i64 %1477, 0
  br i1 %1478, label %1487, label %1479

1479:                                             ; preds = %1474
  %1480 = icmp ugt i64 %1477, 4611686018427387903
  br i1 %1480, label %1481, label %1482

1481:                                             ; preds = %1479
  call void @abort() #20
  unreachable

1482:                                             ; preds = %1479, %1469
  %1483 = phi i64 [ %1477, %1479 ], [ 4611686018427387903, %1469 ]
  %1484 = shl i64 %1483, 2
  %1485 = call i8* @_Znwm(i64 %1484) #19
  %1486 = bitcast i8* %1485 to i32*
  br label %1487

1487:                                             ; preds = %1482, %1474
  %1488 = phi i64 [ %1483, %1482 ], [ 0, %1474 ]
  %1489 = phi i32* [ %1486, %1482 ], [ null, %1474 ]
  %1490 = getelementptr inbounds i32, i32* %1489, i64 %1464
  %1491 = getelementptr inbounds i32, i32* %1489, i64 %1488
  %1492 = ptrtoint i32* %1491 to i64
  store i32 6, i32* %1490, align 4
  %1493 = getelementptr inbounds i32, i32* %1490, i64 1
  %1494 = ptrtoint i32* %1493 to i64
  %1495 = load i32*, i32** %1434, align 8
  %1496 = load i64, i64* %1461, align 8
  %1497 = ptrtoint i32* %1495 to i64
  %1498 = sub i64 %1496, %1497
  %1499 = ashr exact i64 %1498, 2
  %1500 = sub nsw i64 0, %1499
  %1501 = getelementptr inbounds i32, i32* %1490, i64 %1500
  %1502 = ptrtoint i32* %1501 to i64
  %1503 = icmp sgt i64 %1498, 0
  br i1 %1503, label %1504, label %1508

1504:                                             ; preds = %1487
  %1505 = bitcast i32* %1501 to i8*
  %1506 = bitcast i32* %1495 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1505, i8* align 4 %1506, i64 %1498, i1 false) #18
  %1507 = load i32*, i32** %1434, align 8
  br label %1508

1508:                                             ; preds = %1504, %1487
  %1509 = phi i32* [ %1495, %1487 ], [ %1507, %1504 ]
  store i64 %1502, i64* %1462, align 8
  store i64 %1494, i64* %1461, align 8
  store i64 %1492, i64* %1470, align 8
  %1510 = icmp eq i32* %1509, null
  br i1 %1510, label %1895, label %1511

1511:                                             ; preds = %1508
  %1512 = bitcast i32* %1509 to i8*
  call void @_ZdlPv(i8* %1512) #19
  br label %1895

1513:                                             ; preds = %1429, %1418
  %1514 = phi i64 [ %1432, %1429 ], [ %1419, %1418 ]
  %1515 = phi i64 [ %1431, %1429 ], [ %1420, %1418 ]
  %1516 = phi i8 [ %1430, %1429 ], [ %1421, %1418 ]
  %1517 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl34kANGLEImplementationOpenGLNULLNameE, i64 0, i64 0)) #18
  %1518 = icmp slt i8 %1516, 0
  %1519 = select i1 %1518, i64 %1515, i64 %1514
  %1520 = icmp eq i64 %1517, %1519
  br i1 %1520, label %1521, label %1608

1521:                                             ; preds = %1513
  %1522 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl34kANGLEImplementationOpenGLNULLNameE, i64 0, i64 0), i64 %1517) #18
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %1528, label %1524

1524:                                             ; preds = %1521
  %1525 = load i8, i8* %1324, align 1
  %1526 = load i64, i64* %148, align 8
  %1527 = zext i8 %1525 to i64
  br label %1608

1528:                                             ; preds = %1521
  %1529 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1530 = load i32*, i32** %1529, align 8
  %1531 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1532 = load i32*, i32** %1531, align 8
  %1533 = icmp eq i32* %1530, %1532
  %1534 = ptrtoint i32* %1530 to i64
  br i1 %1533, label %1542, label %1535

1535:                                             ; preds = %1528, %1539
  %1536 = phi i32* [ %1540, %1539 ], [ %1530, %1528 ]
  %1537 = load i32, i32* %1536, align 4
  %1538 = icmp eq i32 %1537, 9
  br i1 %1538, label %1542, label %1539

1539:                                             ; preds = %1535
  %1540 = getelementptr inbounds i32, i32* %1536, i64 1
  %1541 = icmp eq i32* %1540, %1532
  br i1 %1541, label %1545, label %1535

1542:                                             ; preds = %1535, %1528
  %1543 = phi i32* [ %1530, %1528 ], [ %1536, %1535 ]
  %1544 = icmp eq i32* %1543, %1532
  br i1 %1544, label %1545, label %1895

1545:                                             ; preds = %1539, %1542
  %1546 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1547 = load i32*, i32** %1546, align 8
  %1548 = icmp eq i32* %1532, %1547
  %1549 = ptrtoint i32* %1547 to i64
  br i1 %1548, label %1554, label %1550

1550:                                             ; preds = %1545
  store i32 9, i32* %1532, align 4
  %1551 = getelementptr inbounds i32, i32* %1532, i64 1
  %1552 = ptrtoint i32* %1551 to i64
  %1553 = bitcast i32** %1531 to i64*
  store i64 %1552, i64* %1553, align 8
  br label %1895

1554:                                             ; preds = %1545
  %1555 = ptrtoint i32* %1532 to i64
  %1556 = bitcast i32** %1531 to i64*
  %1557 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1558 = sub i64 %1555, %1534
  %1559 = ashr exact i64 %1558, 2
  %1560 = add nsw i64 %1559, 1
  %1561 = icmp ugt i64 %1560, 4611686018427387903
  br i1 %1561, label %1562, label %1564

1562:                                             ; preds = %1554
  %1563 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1563) #20
  unreachable

1564:                                             ; preds = %1554
  %1565 = bitcast i32** %1546 to i64*
  %1566 = sub i64 %1549, %1534
  %1567 = ashr exact i64 %1566, 2
  %1568 = icmp ult i64 %1567, 2305843009213693951
  br i1 %1568, label %1569, label %1577

1569:                                             ; preds = %1564
  %1570 = ashr exact i64 %1566, 1
  %1571 = icmp ult i64 %1570, %1560
  %1572 = select i1 %1571, i64 %1560, i64 %1570
  %1573 = icmp eq i64 %1572, 0
  br i1 %1573, label %1582, label %1574

1574:                                             ; preds = %1569
  %1575 = icmp ugt i64 %1572, 4611686018427387903
  br i1 %1575, label %1576, label %1577

1576:                                             ; preds = %1574
  call void @abort() #20
  unreachable

1577:                                             ; preds = %1574, %1564
  %1578 = phi i64 [ %1572, %1574 ], [ 4611686018427387903, %1564 ]
  %1579 = shl i64 %1578, 2
  %1580 = call i8* @_Znwm(i64 %1579) #19
  %1581 = bitcast i8* %1580 to i32*
  br label %1582

1582:                                             ; preds = %1577, %1569
  %1583 = phi i64 [ %1578, %1577 ], [ 0, %1569 ]
  %1584 = phi i32* [ %1581, %1577 ], [ null, %1569 ]
  %1585 = getelementptr inbounds i32, i32* %1584, i64 %1559
  %1586 = getelementptr inbounds i32, i32* %1584, i64 %1583
  %1587 = ptrtoint i32* %1586 to i64
  store i32 9, i32* %1585, align 4
  %1588 = getelementptr inbounds i32, i32* %1585, i64 1
  %1589 = ptrtoint i32* %1588 to i64
  %1590 = load i32*, i32** %1529, align 8
  %1591 = load i64, i64* %1556, align 8
  %1592 = ptrtoint i32* %1590 to i64
  %1593 = sub i64 %1591, %1592
  %1594 = ashr exact i64 %1593, 2
  %1595 = sub nsw i64 0, %1594
  %1596 = getelementptr inbounds i32, i32* %1585, i64 %1595
  %1597 = ptrtoint i32* %1596 to i64
  %1598 = icmp sgt i64 %1593, 0
  br i1 %1598, label %1599, label %1603

1599:                                             ; preds = %1582
  %1600 = bitcast i32* %1596 to i8*
  %1601 = bitcast i32* %1590 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1600, i8* align 4 %1601, i64 %1593, i1 false) #18
  %1602 = load i32*, i32** %1529, align 8
  br label %1603

1603:                                             ; preds = %1599, %1582
  %1604 = phi i32* [ %1590, %1582 ], [ %1602, %1599 ]
  store i64 %1597, i64* %1557, align 8
  store i64 %1589, i64* %1556, align 8
  store i64 %1587, i64* %1565, align 8
  %1605 = icmp eq i32* %1604, null
  br i1 %1605, label %1895, label %1606

1606:                                             ; preds = %1603
  %1607 = bitcast i32* %1604 to i8*
  call void @_ZdlPv(i8* %1607) #19
  br label %1895

1608:                                             ; preds = %1524, %1513
  %1609 = phi i64 [ %1527, %1524 ], [ %1514, %1513 ]
  %1610 = phi i64 [ %1526, %1524 ], [ %1515, %1513 ]
  %1611 = phi i8 [ %1525, %1524 ], [ %1516, %1513 ]
  %1612 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl36kANGLEImplementationOpenGLESNULLNameE, i64 0, i64 0)) #18
  %1613 = icmp slt i8 %1611, 0
  %1614 = select i1 %1613, i64 %1610, i64 %1609
  %1615 = icmp eq i64 %1612, %1614
  br i1 %1615, label %1616, label %1703

1616:                                             ; preds = %1608
  %1617 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl36kANGLEImplementationOpenGLESNULLNameE, i64 0, i64 0), i64 %1612) #18
  %1618 = icmp eq i32 %1617, 0
  br i1 %1618, label %1623, label %1619

1619:                                             ; preds = %1616
  %1620 = load i8, i8* %1324, align 1
  %1621 = load i64, i64* %148, align 8
  %1622 = zext i8 %1620 to i64
  br label %1703

1623:                                             ; preds = %1616
  %1624 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1625 = load i32*, i32** %1624, align 8
  %1626 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1627 = load i32*, i32** %1626, align 8
  %1628 = icmp eq i32* %1625, %1627
  %1629 = ptrtoint i32* %1625 to i64
  br i1 %1628, label %1637, label %1630

1630:                                             ; preds = %1623, %1634
  %1631 = phi i32* [ %1635, %1634 ], [ %1625, %1623 ]
  %1632 = load i32, i32* %1631, align 4
  %1633 = icmp eq i32 %1632, 10
  br i1 %1633, label %1637, label %1634

1634:                                             ; preds = %1630
  %1635 = getelementptr inbounds i32, i32* %1631, i64 1
  %1636 = icmp eq i32* %1635, %1627
  br i1 %1636, label %1640, label %1630

1637:                                             ; preds = %1630, %1623
  %1638 = phi i32* [ %1625, %1623 ], [ %1631, %1630 ]
  %1639 = icmp eq i32* %1638, %1627
  br i1 %1639, label %1640, label %1895

1640:                                             ; preds = %1634, %1637
  %1641 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1642 = load i32*, i32** %1641, align 8
  %1643 = icmp eq i32* %1627, %1642
  %1644 = ptrtoint i32* %1642 to i64
  br i1 %1643, label %1649, label %1645

1645:                                             ; preds = %1640
  store i32 10, i32* %1627, align 4
  %1646 = getelementptr inbounds i32, i32* %1627, i64 1
  %1647 = ptrtoint i32* %1646 to i64
  %1648 = bitcast i32** %1626 to i64*
  store i64 %1647, i64* %1648, align 8
  br label %1895

1649:                                             ; preds = %1640
  %1650 = ptrtoint i32* %1627 to i64
  %1651 = bitcast i32** %1626 to i64*
  %1652 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1653 = sub i64 %1650, %1629
  %1654 = ashr exact i64 %1653, 2
  %1655 = add nsw i64 %1654, 1
  %1656 = icmp ugt i64 %1655, 4611686018427387903
  br i1 %1656, label %1657, label %1659

1657:                                             ; preds = %1649
  %1658 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1658) #20
  unreachable

1659:                                             ; preds = %1649
  %1660 = bitcast i32** %1641 to i64*
  %1661 = sub i64 %1644, %1629
  %1662 = ashr exact i64 %1661, 2
  %1663 = icmp ult i64 %1662, 2305843009213693951
  br i1 %1663, label %1664, label %1672

1664:                                             ; preds = %1659
  %1665 = ashr exact i64 %1661, 1
  %1666 = icmp ult i64 %1665, %1655
  %1667 = select i1 %1666, i64 %1655, i64 %1665
  %1668 = icmp eq i64 %1667, 0
  br i1 %1668, label %1677, label %1669

1669:                                             ; preds = %1664
  %1670 = icmp ugt i64 %1667, 4611686018427387903
  br i1 %1670, label %1671, label %1672

1671:                                             ; preds = %1669
  call void @abort() #20
  unreachable

1672:                                             ; preds = %1669, %1659
  %1673 = phi i64 [ %1667, %1669 ], [ 4611686018427387903, %1659 ]
  %1674 = shl i64 %1673, 2
  %1675 = call i8* @_Znwm(i64 %1674) #19
  %1676 = bitcast i8* %1675 to i32*
  br label %1677

1677:                                             ; preds = %1672, %1664
  %1678 = phi i64 [ %1673, %1672 ], [ 0, %1664 ]
  %1679 = phi i32* [ %1676, %1672 ], [ null, %1664 ]
  %1680 = getelementptr inbounds i32, i32* %1679, i64 %1654
  %1681 = getelementptr inbounds i32, i32* %1679, i64 %1678
  %1682 = ptrtoint i32* %1681 to i64
  store i32 10, i32* %1680, align 4
  %1683 = getelementptr inbounds i32, i32* %1680, i64 1
  %1684 = ptrtoint i32* %1683 to i64
  %1685 = load i32*, i32** %1624, align 8
  %1686 = load i64, i64* %1651, align 8
  %1687 = ptrtoint i32* %1685 to i64
  %1688 = sub i64 %1686, %1687
  %1689 = ashr exact i64 %1688, 2
  %1690 = sub nsw i64 0, %1689
  %1691 = getelementptr inbounds i32, i32* %1680, i64 %1690
  %1692 = ptrtoint i32* %1691 to i64
  %1693 = icmp sgt i64 %1688, 0
  br i1 %1693, label %1694, label %1698

1694:                                             ; preds = %1677
  %1695 = bitcast i32* %1691 to i8*
  %1696 = bitcast i32* %1685 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1695, i8* align 4 %1696, i64 %1688, i1 false) #18
  %1697 = load i32*, i32** %1624, align 8
  br label %1698

1698:                                             ; preds = %1694, %1677
  %1699 = phi i32* [ %1685, %1677 ], [ %1697, %1694 ]
  store i64 %1692, i64* %1652, align 8
  store i64 %1684, i64* %1651, align 8
  store i64 %1682, i64* %1660, align 8
  %1700 = icmp eq i32* %1699, null
  br i1 %1700, label %1895, label %1701

1701:                                             ; preds = %1698
  %1702 = bitcast i32* %1699 to i8*
  call void @_ZdlPv(i8* %1702) #19
  br label %1895

1703:                                             ; preds = %1619, %1608
  %1704 = phi i64 [ %1622, %1619 ], [ %1609, %1608 ]
  %1705 = phi i64 [ %1621, %1619 ], [ %1610, %1608 ]
  %1706 = phi i8 [ %1620, %1619 ], [ %1611, %1608 ]
  %1707 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationOpenGLEGLNameE, i64 0, i64 0)) #18
  %1708 = icmp slt i8 %1706, 0
  %1709 = select i1 %1708, i64 %1705, i64 %1704
  %1710 = icmp eq i64 %1707, %1709
  br i1 %1710, label %1713, label %1711

1711:                                             ; preds = %1703
  %1712 = xor i1 %5, true
  br label %1802

1713:                                             ; preds = %1703
  %1714 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationOpenGLEGLNameE, i64 0, i64 0), i64 %1707) #18
  %1715 = icmp ne i32 %1714, 0
  %1716 = xor i1 %5, true
  %1717 = or i1 %1715, %1716
  br i1 %1717, label %1718, label %1722

1718:                                             ; preds = %1713
  %1719 = load i8, i8* %1324, align 1
  %1720 = load i64, i64* %148, align 8
  %1721 = zext i8 %1719 to i64
  br label %1802

1722:                                             ; preds = %1713
  %1723 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1724 = load i32*, i32** %1723, align 8
  %1725 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1726 = load i32*, i32** %1725, align 8
  %1727 = icmp eq i32* %1724, %1726
  %1728 = ptrtoint i32* %1724 to i64
  br i1 %1727, label %1736, label %1729

1729:                                             ; preds = %1722, %1733
  %1730 = phi i32* [ %1734, %1733 ], [ %1724, %1722 ]
  %1731 = load i32, i32* %1730, align 4
  %1732 = icmp eq i32 %1731, 15
  br i1 %1732, label %1736, label %1733

1733:                                             ; preds = %1729
  %1734 = getelementptr inbounds i32, i32* %1730, i64 1
  %1735 = icmp eq i32* %1734, %1726
  br i1 %1735, label %1739, label %1729

1736:                                             ; preds = %1729, %1722
  %1737 = phi i32* [ %1724, %1722 ], [ %1730, %1729 ]
  %1738 = icmp eq i32* %1737, %1726
  br i1 %1738, label %1739, label %1895

1739:                                             ; preds = %1733, %1736
  %1740 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1741 = load i32*, i32** %1740, align 8
  %1742 = icmp eq i32* %1726, %1741
  %1743 = ptrtoint i32* %1741 to i64
  br i1 %1742, label %1748, label %1744

1744:                                             ; preds = %1739
  store i32 15, i32* %1726, align 4
  %1745 = getelementptr inbounds i32, i32* %1726, i64 1
  %1746 = ptrtoint i32* %1745 to i64
  %1747 = bitcast i32** %1725 to i64*
  store i64 %1746, i64* %1747, align 8
  br label %1895

1748:                                             ; preds = %1739
  %1749 = ptrtoint i32* %1726 to i64
  %1750 = bitcast i32** %1725 to i64*
  %1751 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1752 = sub i64 %1749, %1728
  %1753 = ashr exact i64 %1752, 2
  %1754 = add nsw i64 %1753, 1
  %1755 = icmp ugt i64 %1754, 4611686018427387903
  br i1 %1755, label %1756, label %1758

1756:                                             ; preds = %1748
  %1757 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1757) #20
  unreachable

1758:                                             ; preds = %1748
  %1759 = bitcast i32** %1740 to i64*
  %1760 = sub i64 %1743, %1728
  %1761 = ashr exact i64 %1760, 2
  %1762 = icmp ult i64 %1761, 2305843009213693951
  br i1 %1762, label %1763, label %1771

1763:                                             ; preds = %1758
  %1764 = ashr exact i64 %1760, 1
  %1765 = icmp ult i64 %1764, %1754
  %1766 = select i1 %1765, i64 %1754, i64 %1764
  %1767 = icmp eq i64 %1766, 0
  br i1 %1767, label %1776, label %1768

1768:                                             ; preds = %1763
  %1769 = icmp ugt i64 %1766, 4611686018427387903
  br i1 %1769, label %1770, label %1771

1770:                                             ; preds = %1768
  call void @abort() #20
  unreachable

1771:                                             ; preds = %1768, %1758
  %1772 = phi i64 [ %1766, %1768 ], [ 4611686018427387903, %1758 ]
  %1773 = shl i64 %1772, 2
  %1774 = call i8* @_Znwm(i64 %1773) #19
  %1775 = bitcast i8* %1774 to i32*
  br label %1776

1776:                                             ; preds = %1771, %1763
  %1777 = phi i64 [ %1772, %1771 ], [ 0, %1763 ]
  %1778 = phi i32* [ %1775, %1771 ], [ null, %1763 ]
  %1779 = getelementptr inbounds i32, i32* %1778, i64 %1753
  %1780 = getelementptr inbounds i32, i32* %1778, i64 %1777
  %1781 = ptrtoint i32* %1780 to i64
  store i32 15, i32* %1779, align 4
  %1782 = getelementptr inbounds i32, i32* %1779, i64 1
  %1783 = ptrtoint i32* %1782 to i64
  %1784 = load i32*, i32** %1723, align 8
  %1785 = load i64, i64* %1750, align 8
  %1786 = ptrtoint i32* %1784 to i64
  %1787 = sub i64 %1785, %1786
  %1788 = ashr exact i64 %1787, 2
  %1789 = sub nsw i64 0, %1788
  %1790 = getelementptr inbounds i32, i32* %1779, i64 %1789
  %1791 = ptrtoint i32* %1790 to i64
  %1792 = icmp sgt i64 %1787, 0
  br i1 %1792, label %1793, label %1797

1793:                                             ; preds = %1776
  %1794 = bitcast i32* %1790 to i8*
  %1795 = bitcast i32* %1784 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1794, i8* align 4 %1795, i64 %1787, i1 false) #18
  %1796 = load i32*, i32** %1723, align 8
  br label %1797

1797:                                             ; preds = %1793, %1776
  %1798 = phi i32* [ %1784, %1776 ], [ %1796, %1793 ]
  store i64 %1791, i64* %1751, align 8
  store i64 %1783, i64* %1750, align 8
  store i64 %1781, i64* %1759, align 8
  %1799 = icmp eq i32* %1798, null
  br i1 %1799, label %1895, label %1800

1800:                                             ; preds = %1797
  %1801 = bitcast i32* %1798 to i8*
  call void @_ZdlPv(i8* %1801) #19
  br label %1895

1802:                                             ; preds = %1718, %1711
  %1803 = phi i64 [ %1721, %1718 ], [ %1704, %1711 ]
  %1804 = phi i64 [ %1720, %1718 ], [ %1705, %1711 ]
  %1805 = phi i8 [ %1719, %1718 ], [ %1706, %1711 ]
  %1806 = phi i1 [ %1716, %1718 ], [ %1712, %1711 ]
  %1807 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationOpenGLESEGLNameE, i64 0, i64 0)) #18
  %1808 = icmp slt i8 %1805, 0
  %1809 = select i1 %1808, i64 %1804, i64 %1803
  %1810 = icmp eq i64 %1807, %1809
  br i1 %1810, label %1811, label %1895

1811:                                             ; preds = %1802
  %1812 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationOpenGLESEGLNameE, i64 0, i64 0), i64 %1807) #18
  %1813 = icmp ne i32 %1812, 0
  %1814 = or i1 %1806, %1813
  br i1 %1814, label %1895, label %1815

1815:                                             ; preds = %1811
  %1816 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1817 = load i32*, i32** %1816, align 8
  %1818 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1819 = load i32*, i32** %1818, align 8
  %1820 = icmp eq i32* %1817, %1819
  %1821 = ptrtoint i32* %1817 to i64
  br i1 %1820, label %1829, label %1822

1822:                                             ; preds = %1815, %1826
  %1823 = phi i32* [ %1827, %1826 ], [ %1817, %1815 ]
  %1824 = load i32, i32* %1823, align 4
  %1825 = icmp eq i32 %1824, 16
  br i1 %1825, label %1829, label %1826

1826:                                             ; preds = %1822
  %1827 = getelementptr inbounds i32, i32* %1823, i64 1
  %1828 = icmp eq i32* %1827, %1819
  br i1 %1828, label %1832, label %1822

1829:                                             ; preds = %1822, %1815
  %1830 = phi i32* [ %1817, %1815 ], [ %1823, %1822 ]
  %1831 = icmp eq i32* %1830, %1819
  br i1 %1831, label %1832, label %1895

1832:                                             ; preds = %1826, %1829
  %1833 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1834 = load i32*, i32** %1833, align 8
  %1835 = icmp eq i32* %1819, %1834
  %1836 = ptrtoint i32* %1834 to i64
  br i1 %1835, label %1841, label %1837

1837:                                             ; preds = %1832
  store i32 16, i32* %1819, align 4
  %1838 = getelementptr inbounds i32, i32* %1819, i64 1
  %1839 = ptrtoint i32* %1838 to i64
  %1840 = bitcast i32** %1818 to i64*
  store i64 %1839, i64* %1840, align 8
  br label %1895

1841:                                             ; preds = %1832
  %1842 = ptrtoint i32* %1819 to i64
  %1843 = bitcast i32** %1818 to i64*
  %1844 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1845 = sub i64 %1842, %1821
  %1846 = ashr exact i64 %1845, 2
  %1847 = add nsw i64 %1846, 1
  %1848 = icmp ugt i64 %1847, 4611686018427387903
  br i1 %1848, label %1849, label %1851

1849:                                             ; preds = %1841
  %1850 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1850) #20
  unreachable

1851:                                             ; preds = %1841
  %1852 = bitcast i32** %1833 to i64*
  %1853 = sub i64 %1836, %1821
  %1854 = ashr exact i64 %1853, 2
  %1855 = icmp ult i64 %1854, 2305843009213693951
  br i1 %1855, label %1856, label %1864

1856:                                             ; preds = %1851
  %1857 = ashr exact i64 %1853, 1
  %1858 = icmp ult i64 %1857, %1847
  %1859 = select i1 %1858, i64 %1847, i64 %1857
  %1860 = icmp eq i64 %1859, 0
  br i1 %1860, label %1869, label %1861

1861:                                             ; preds = %1856
  %1862 = icmp ugt i64 %1859, 4611686018427387903
  br i1 %1862, label %1863, label %1864

1863:                                             ; preds = %1861
  call void @abort() #20
  unreachable

1864:                                             ; preds = %1861, %1851
  %1865 = phi i64 [ %1859, %1861 ], [ 4611686018427387903, %1851 ]
  %1866 = shl i64 %1865, 2
  %1867 = call i8* @_Znwm(i64 %1866) #19
  %1868 = bitcast i8* %1867 to i32*
  br label %1869

1869:                                             ; preds = %1864, %1856
  %1870 = phi i64 [ %1865, %1864 ], [ 0, %1856 ]
  %1871 = phi i32* [ %1868, %1864 ], [ null, %1856 ]
  %1872 = getelementptr inbounds i32, i32* %1871, i64 %1846
  %1873 = getelementptr inbounds i32, i32* %1871, i64 %1870
  %1874 = ptrtoint i32* %1873 to i64
  store i32 16, i32* %1872, align 4
  %1875 = getelementptr inbounds i32, i32* %1872, i64 1
  %1876 = ptrtoint i32* %1875 to i64
  %1877 = load i32*, i32** %1816, align 8
  %1878 = load i64, i64* %1843, align 8
  %1879 = ptrtoint i32* %1877 to i64
  %1880 = sub i64 %1878, %1879
  %1881 = ashr exact i64 %1880, 2
  %1882 = sub nsw i64 0, %1881
  %1883 = getelementptr inbounds i32, i32* %1872, i64 %1882
  %1884 = ptrtoint i32* %1883 to i64
  %1885 = icmp sgt i64 %1880, 0
  br i1 %1885, label %1886, label %1890

1886:                                             ; preds = %1869
  %1887 = bitcast i32* %1883 to i8*
  %1888 = bitcast i32* %1877 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1887, i8* align 4 %1888, i64 %1880, i1 false) #18
  %1889 = load i32*, i32** %1816, align 8
  br label %1890

1890:                                             ; preds = %1886, %1869
  %1891 = phi i32* [ %1877, %1869 ], [ %1889, %1886 ]
  store i64 %1884, i64* %1844, align 8
  store i64 %1876, i64* %1843, align 8
  store i64 %1874, i64* %1852, align 8
  %1892 = icmp eq i32* %1891, null
  br i1 %1892, label %1895, label %1893

1893:                                             ; preds = %1890
  %1894 = bitcast i32* %1891 to i8*
  call void @_ZdlPv(i8* %1894) #19
  br label %1895

1895:                                             ; preds = %1802, %1829, %1837, %1890, %1893, %1736, %1744, %1797, %1800, %1637, %1645, %1698, %1701, %1542, %1550, %1603, %1606, %1447, %1455, %1508, %1511, %1352, %1360, %1413, %1416, %1256, %1263, %1316, %1319, %1811, %1160
  br i1 %3, label %1896, label %2167

1896:                                             ; preds = %1895
  br i1 %190, label %1897, label %1979

1897:                                             ; preds = %1896
  %1898 = or i1 %0, %1
  br i1 %1898, label %2167, label %1899

1899:                                             ; preds = %1897
  %1900 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1901 = load i32*, i32** %1900, align 8
  %1902 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %1903 = load i32*, i32** %1902, align 8
  %1904 = icmp eq i32* %1901, %1903
  %1905 = ptrtoint i32* %1901 to i64
  br i1 %1904, label %1913, label %1906

1906:                                             ; preds = %1899, %1910
  %1907 = phi i32* [ %1911, %1910 ], [ %1901, %1899 ]
  %1908 = load i32, i32* %1907, align 4
  %1909 = icmp eq i32 %1908, 11
  br i1 %1909, label %1913, label %1910

1910:                                             ; preds = %1906
  %1911 = getelementptr inbounds i32, i32* %1907, i64 1
  %1912 = icmp eq i32* %1911, %1903
  br i1 %1912, label %1916, label %1906

1913:                                             ; preds = %1906, %1899
  %1914 = phi i32* [ %1901, %1899 ], [ %1907, %1906 ]
  %1915 = icmp eq i32* %1914, %1903
  br i1 %1915, label %1916, label %2167

1916:                                             ; preds = %1910, %1913
  %1917 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %1918 = load i32*, i32** %1917, align 8
  %1919 = icmp eq i32* %1903, %1918
  %1920 = ptrtoint i32* %1918 to i64
  br i1 %1919, label %1925, label %1921

1921:                                             ; preds = %1916
  store i32 11, i32* %1903, align 4
  %1922 = getelementptr inbounds i32, i32* %1903, i64 1
  %1923 = ptrtoint i32* %1922 to i64
  %1924 = bitcast i32** %1902 to i64*
  store i64 %1923, i64* %1924, align 8
  br label %2167

1925:                                             ; preds = %1916
  %1926 = ptrtoint i32* %1903 to i64
  %1927 = bitcast i32** %1902 to i64*
  %1928 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %1929 = sub i64 %1926, %1905
  %1930 = ashr exact i64 %1929, 2
  %1931 = add nsw i64 %1930, 1
  %1932 = icmp ugt i64 %1931, 4611686018427387903
  br i1 %1932, label %1933, label %1935

1933:                                             ; preds = %1925
  %1934 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1934) #20
  unreachable

1935:                                             ; preds = %1925
  %1936 = bitcast i32** %1917 to i64*
  %1937 = sub i64 %1920, %1905
  %1938 = ashr exact i64 %1937, 2
  %1939 = icmp ult i64 %1938, 2305843009213693951
  br i1 %1939, label %1940, label %1948

1940:                                             ; preds = %1935
  %1941 = ashr exact i64 %1937, 1
  %1942 = icmp ult i64 %1941, %1931
  %1943 = select i1 %1942, i64 %1931, i64 %1941
  %1944 = icmp eq i64 %1943, 0
  br i1 %1944, label %1953, label %1945

1945:                                             ; preds = %1940
  %1946 = icmp ugt i64 %1943, 4611686018427387903
  br i1 %1946, label %1947, label %1948

1947:                                             ; preds = %1945
  call void @abort() #20
  unreachable

1948:                                             ; preds = %1945, %1935
  %1949 = phi i64 [ %1943, %1945 ], [ 4611686018427387903, %1935 ]
  %1950 = shl i64 %1949, 2
  %1951 = call i8* @_Znwm(i64 %1950) #19
  %1952 = bitcast i8* %1951 to i32*
  br label %1953

1953:                                             ; preds = %1948, %1940
  %1954 = phi i64 [ %1949, %1948 ], [ 0, %1940 ]
  %1955 = phi i32* [ %1952, %1948 ], [ null, %1940 ]
  %1956 = getelementptr inbounds i32, i32* %1955, i64 %1930
  %1957 = getelementptr inbounds i32, i32* %1955, i64 %1954
  %1958 = ptrtoint i32* %1957 to i64
  store i32 11, i32* %1956, align 4
  %1959 = getelementptr inbounds i32, i32* %1956, i64 1
  %1960 = ptrtoint i32* %1959 to i64
  %1961 = load i32*, i32** %1900, align 8
  %1962 = load i64, i64* %1927, align 8
  %1963 = ptrtoint i32* %1961 to i64
  %1964 = sub i64 %1962, %1963
  %1965 = ashr exact i64 %1964, 2
  %1966 = sub nsw i64 0, %1965
  %1967 = getelementptr inbounds i32, i32* %1956, i64 %1966
  %1968 = ptrtoint i32* %1967 to i64
  %1969 = icmp sgt i64 %1964, 0
  br i1 %1969, label %1970, label %1974

1970:                                             ; preds = %1953
  %1971 = bitcast i32* %1967 to i8*
  %1972 = bitcast i32* %1961 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1971, i8* align 4 %1972, i64 %1964, i1 false) #18
  %1973 = load i32*, i32** %1900, align 8
  br label %1974

1974:                                             ; preds = %1970, %1953
  %1975 = phi i32* [ %1961, %1953 ], [ %1973, %1970 ]
  store i64 %1968, i64* %1928, align 8
  store i64 %1960, i64* %1927, align 8
  store i64 %1958, i64* %1936, align 8
  %1976 = icmp eq i32* %1975, null
  br i1 %1976, label %2167, label %1977

1977:                                             ; preds = %1974
  %1978 = bitcast i32* %1975 to i8*
  call void @_ZdlPv(i8* %1978) #19
  br label %2167

1979:                                             ; preds = %1896
  %1980 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl30kANGLEImplementationVulkanNameE, i64 0, i64 0)) #18
  %1981 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1982 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1981, i64 0, i32 1, i32 0
  %1983 = load i8, i8* %1982, align 1
  %1984 = icmp slt i8 %1983, 0
  %1985 = load i64, i64* %148, align 8
  %1986 = zext i8 %1983 to i64
  %1987 = select i1 %1984, i64 %1985, i64 %1986
  %1988 = icmp eq i64 %1980, %1987
  br i1 %1988, label %1989, label %2076

1989:                                             ; preds = %1979
  %1990 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl30kANGLEImplementationVulkanNameE, i64 0, i64 0), i64 %1980) #18
  %1991 = icmp eq i32 %1990, 0
  br i1 %1991, label %1996, label %1992

1992:                                             ; preds = %1989
  %1993 = load i8, i8* %1982, align 1
  %1994 = load i64, i64* %148, align 8
  %1995 = zext i8 %1993 to i64
  br label %2076

1996:                                             ; preds = %1989
  %1997 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %1998 = load i32*, i32** %1997, align 8
  %1999 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2000 = load i32*, i32** %1999, align 8
  %2001 = icmp eq i32* %1998, %2000
  %2002 = ptrtoint i32* %1998 to i64
  br i1 %2001, label %2010, label %2003

2003:                                             ; preds = %1996, %2007
  %2004 = phi i32* [ %2008, %2007 ], [ %1998, %1996 ]
  %2005 = load i32, i32* %2004, align 4
  %2006 = icmp eq i32 %2005, 11
  br i1 %2006, label %2010, label %2007

2007:                                             ; preds = %2003
  %2008 = getelementptr inbounds i32, i32* %2004, i64 1
  %2009 = icmp eq i32* %2008, %2000
  br i1 %2009, label %2013, label %2003

2010:                                             ; preds = %2003, %1996
  %2011 = phi i32* [ %1998, %1996 ], [ %2004, %2003 ]
  %2012 = icmp eq i32* %2011, %2000
  br i1 %2012, label %2013, label %2167

2013:                                             ; preds = %2007, %2010
  %2014 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2015 = load i32*, i32** %2014, align 8
  %2016 = icmp eq i32* %2000, %2015
  %2017 = ptrtoint i32* %2015 to i64
  br i1 %2016, label %2022, label %2018

2018:                                             ; preds = %2013
  store i32 11, i32* %2000, align 4
  %2019 = getelementptr inbounds i32, i32* %2000, i64 1
  %2020 = ptrtoint i32* %2019 to i64
  %2021 = bitcast i32** %1999 to i64*
  store i64 %2020, i64* %2021, align 8
  br label %2167

2022:                                             ; preds = %2013
  %2023 = ptrtoint i32* %2000 to i64
  %2024 = bitcast i32** %1999 to i64*
  %2025 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2026 = sub i64 %2023, %2002
  %2027 = ashr exact i64 %2026, 2
  %2028 = add nsw i64 %2027, 1
  %2029 = icmp ugt i64 %2028, 4611686018427387903
  br i1 %2029, label %2030, label %2032

2030:                                             ; preds = %2022
  %2031 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2031) #20
  unreachable

2032:                                             ; preds = %2022
  %2033 = bitcast i32** %2014 to i64*
  %2034 = sub i64 %2017, %2002
  %2035 = ashr exact i64 %2034, 2
  %2036 = icmp ult i64 %2035, 2305843009213693951
  br i1 %2036, label %2037, label %2045

2037:                                             ; preds = %2032
  %2038 = ashr exact i64 %2034, 1
  %2039 = icmp ult i64 %2038, %2028
  %2040 = select i1 %2039, i64 %2028, i64 %2038
  %2041 = icmp eq i64 %2040, 0
  br i1 %2041, label %2050, label %2042

2042:                                             ; preds = %2037
  %2043 = icmp ugt i64 %2040, 4611686018427387903
  br i1 %2043, label %2044, label %2045

2044:                                             ; preds = %2042
  call void @abort() #20
  unreachable

2045:                                             ; preds = %2042, %2032
  %2046 = phi i64 [ %2040, %2042 ], [ 4611686018427387903, %2032 ]
  %2047 = shl i64 %2046, 2
  %2048 = call i8* @_Znwm(i64 %2047) #19
  %2049 = bitcast i8* %2048 to i32*
  br label %2050

2050:                                             ; preds = %2045, %2037
  %2051 = phi i64 [ %2046, %2045 ], [ 0, %2037 ]
  %2052 = phi i32* [ %2049, %2045 ], [ null, %2037 ]
  %2053 = getelementptr inbounds i32, i32* %2052, i64 %2027
  %2054 = getelementptr inbounds i32, i32* %2052, i64 %2051
  %2055 = ptrtoint i32* %2054 to i64
  store i32 11, i32* %2053, align 4
  %2056 = getelementptr inbounds i32, i32* %2053, i64 1
  %2057 = ptrtoint i32* %2056 to i64
  %2058 = load i32*, i32** %1997, align 8
  %2059 = load i64, i64* %2024, align 8
  %2060 = ptrtoint i32* %2058 to i64
  %2061 = sub i64 %2059, %2060
  %2062 = ashr exact i64 %2061, 2
  %2063 = sub nsw i64 0, %2062
  %2064 = getelementptr inbounds i32, i32* %2053, i64 %2063
  %2065 = ptrtoint i32* %2064 to i64
  %2066 = icmp sgt i64 %2061, 0
  br i1 %2066, label %2067, label %2071

2067:                                             ; preds = %2050
  %2068 = bitcast i32* %2064 to i8*
  %2069 = bitcast i32* %2058 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2068, i8* align 4 %2069, i64 %2061, i1 false) #18
  %2070 = load i32*, i32** %1997, align 8
  br label %2071

2071:                                             ; preds = %2067, %2050
  %2072 = phi i32* [ %2058, %2050 ], [ %2070, %2067 ]
  store i64 %2065, i64* %2025, align 8
  store i64 %2057, i64* %2024, align 8
  store i64 %2055, i64* %2033, align 8
  %2073 = icmp eq i32* %2072, null
  br i1 %2073, label %2167, label %2074

2074:                                             ; preds = %2071
  %2075 = bitcast i32* %2072 to i8*
  call void @_ZdlPv(i8* %2075) #19
  br label %2167

2076:                                             ; preds = %1992, %1979
  %2077 = phi i64 [ %1995, %1992 ], [ %1986, %1979 ]
  %2078 = phi i64 [ %1994, %1992 ], [ %1985, %1979 ]
  %2079 = phi i8 [ %1993, %1992 ], [ %1983, %1979 ]
  %2080 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl34kANGLEImplementationVulkanNULLNameE, i64 0, i64 0)) #18
  %2081 = icmp slt i8 %2079, 0
  %2082 = select i1 %2081, i64 %2078, i64 %2077
  %2083 = icmp eq i64 %2080, %2082
  br i1 %2083, label %2084, label %2167

2084:                                             ; preds = %2076
  %2085 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl34kANGLEImplementationVulkanNULLNameE, i64 0, i64 0), i64 %2080) #18
  %2086 = icmp eq i32 %2085, 0
  br i1 %2086, label %2087, label %2167

2087:                                             ; preds = %2084
  %2088 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2089 = load i32*, i32** %2088, align 8
  %2090 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2091 = load i32*, i32** %2090, align 8
  %2092 = icmp eq i32* %2089, %2091
  %2093 = ptrtoint i32* %2089 to i64
  br i1 %2092, label %2101, label %2094

2094:                                             ; preds = %2087, %2098
  %2095 = phi i32* [ %2099, %2098 ], [ %2089, %2087 ]
  %2096 = load i32, i32* %2095, align 4
  %2097 = icmp eq i32 %2096, 12
  br i1 %2097, label %2101, label %2098

2098:                                             ; preds = %2094
  %2099 = getelementptr inbounds i32, i32* %2095, i64 1
  %2100 = icmp eq i32* %2099, %2091
  br i1 %2100, label %2104, label %2094

2101:                                             ; preds = %2094, %2087
  %2102 = phi i32* [ %2089, %2087 ], [ %2095, %2094 ]
  %2103 = icmp eq i32* %2102, %2091
  br i1 %2103, label %2104, label %2167

2104:                                             ; preds = %2098, %2101
  %2105 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2106 = load i32*, i32** %2105, align 8
  %2107 = icmp eq i32* %2091, %2106
  %2108 = ptrtoint i32* %2106 to i64
  br i1 %2107, label %2113, label %2109

2109:                                             ; preds = %2104
  store i32 12, i32* %2091, align 4
  %2110 = getelementptr inbounds i32, i32* %2091, i64 1
  %2111 = ptrtoint i32* %2110 to i64
  %2112 = bitcast i32** %2090 to i64*
  store i64 %2111, i64* %2112, align 8
  br label %2167

2113:                                             ; preds = %2104
  %2114 = ptrtoint i32* %2091 to i64
  %2115 = bitcast i32** %2090 to i64*
  %2116 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2117 = sub i64 %2114, %2093
  %2118 = ashr exact i64 %2117, 2
  %2119 = add nsw i64 %2118, 1
  %2120 = icmp ugt i64 %2119, 4611686018427387903
  br i1 %2120, label %2121, label %2123

2121:                                             ; preds = %2113
  %2122 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2122) #20
  unreachable

2123:                                             ; preds = %2113
  %2124 = bitcast i32** %2105 to i64*
  %2125 = sub i64 %2108, %2093
  %2126 = ashr exact i64 %2125, 2
  %2127 = icmp ult i64 %2126, 2305843009213693951
  br i1 %2127, label %2128, label %2136

2128:                                             ; preds = %2123
  %2129 = ashr exact i64 %2125, 1
  %2130 = icmp ult i64 %2129, %2119
  %2131 = select i1 %2130, i64 %2119, i64 %2129
  %2132 = icmp eq i64 %2131, 0
  br i1 %2132, label %2141, label %2133

2133:                                             ; preds = %2128
  %2134 = icmp ugt i64 %2131, 4611686018427387903
  br i1 %2134, label %2135, label %2136

2135:                                             ; preds = %2133
  call void @abort() #20
  unreachable

2136:                                             ; preds = %2133, %2123
  %2137 = phi i64 [ %2131, %2133 ], [ 4611686018427387903, %2123 ]
  %2138 = shl i64 %2137, 2
  %2139 = call i8* @_Znwm(i64 %2138) #19
  %2140 = bitcast i8* %2139 to i32*
  br label %2141

2141:                                             ; preds = %2136, %2128
  %2142 = phi i64 [ %2137, %2136 ], [ 0, %2128 ]
  %2143 = phi i32* [ %2140, %2136 ], [ null, %2128 ]
  %2144 = getelementptr inbounds i32, i32* %2143, i64 %2118
  %2145 = getelementptr inbounds i32, i32* %2143, i64 %2142
  %2146 = ptrtoint i32* %2145 to i64
  store i32 12, i32* %2144, align 4
  %2147 = getelementptr inbounds i32, i32* %2144, i64 1
  %2148 = ptrtoint i32* %2147 to i64
  %2149 = load i32*, i32** %2088, align 8
  %2150 = load i64, i64* %2115, align 8
  %2151 = ptrtoint i32* %2149 to i64
  %2152 = sub i64 %2150, %2151
  %2153 = ashr exact i64 %2152, 2
  %2154 = sub nsw i64 0, %2153
  %2155 = getelementptr inbounds i32, i32* %2144, i64 %2154
  %2156 = ptrtoint i32* %2155 to i64
  %2157 = icmp sgt i64 %2152, 0
  br i1 %2157, label %2158, label %2162

2158:                                             ; preds = %2141
  %2159 = bitcast i32* %2155 to i8*
  %2160 = bitcast i32* %2149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2159, i8* align 4 %2160, i64 %2152, i1 false) #18
  %2161 = load i32*, i32** %2088, align 8
  br label %2162

2162:                                             ; preds = %2158, %2141
  %2163 = phi i32* [ %2149, %2141 ], [ %2161, %2158 ]
  store i64 %2156, i64* %2116, align 8
  store i64 %2148, i64* %2115, align 8
  store i64 %2146, i64* %2124, align 8
  %2164 = icmp eq i32* %2163, null
  br i1 %2164, label %2167, label %2165

2165:                                             ; preds = %2162
  %2166 = bitcast i32* %2163 to i8*
  call void @_ZdlPv(i8* %2166) #19
  br label %2167

2167:                                             ; preds = %2076, %2101, %2109, %2162, %2165, %2010, %2018, %2071, %2074, %1913, %1921, %1974, %1977, %1897, %2084, %1895
  br i1 %4, label %2168, label %2276

2168:                                             ; preds = %2167
  %2169 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0)) #18
  %2170 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2170, i64 0, i32 1, i32 0
  %2172 = load i8, i8* %2171, align 1
  %2173 = icmp slt i8 %2172, 0
  %2174 = load i64, i64* %148, align 8
  %2175 = zext i8 %2172 to i64
  %2176 = select i1 %2173, i64 %2174, i64 %2175
  %2177 = icmp eq i64 %2169, %2176
  br i1 %2177, label %2178, label %2185

2178:                                             ; preds = %2168
  %2179 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl35kANGLEImplementationSwiftShaderNameE, i64 0, i64 0), i64 %2169) #18
  %2180 = icmp eq i32 %2179, 0
  br i1 %2180, label %2196, label %2181

2181:                                             ; preds = %2178
  %2182 = load i8, i8* %2171, align 1
  %2183 = load i64, i64* %148, align 8
  %2184 = zext i8 %2182 to i64
  br label %2185

2185:                                             ; preds = %2181, %2168
  %2186 = phi i64 [ %2184, %2181 ], [ %2175, %2168 ]
  %2187 = phi i64 [ %2183, %2181 ], [ %2174, %2168 ]
  %2188 = phi i8 [ %2182, %2181 ], [ %2172, %2168 ]
  %2189 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0)) #18
  %2190 = icmp slt i8 %2188, 0
  %2191 = select i1 %2190, i64 %2187, i64 %2186
  %2192 = icmp eq i64 %2189, %2191
  br i1 %2192, label %2193, label %2276

2193:                                             ; preds = %2185
  %2194 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl43kANGLEImplementationSwiftShaderForWebGLNameE, i64 0, i64 0), i64 %2189) #18
  %2195 = icmp eq i32 %2194, 0
  br i1 %2195, label %2196, label %2276

2196:                                             ; preds = %2193, %2178
  %2197 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2198 = load i32*, i32** %2197, align 8
  %2199 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2200 = load i32*, i32** %2199, align 8
  %2201 = icmp eq i32* %2198, %2200
  %2202 = ptrtoint i32* %2198 to i64
  br i1 %2201, label %2210, label %2203

2203:                                             ; preds = %2196, %2207
  %2204 = phi i32* [ %2208, %2207 ], [ %2198, %2196 ]
  %2205 = load i32, i32* %2204, align 4
  %2206 = icmp eq i32 %2205, 14
  br i1 %2206, label %2210, label %2207

2207:                                             ; preds = %2203
  %2208 = getelementptr inbounds i32, i32* %2204, i64 1
  %2209 = icmp eq i32* %2208, %2200
  br i1 %2209, label %2213, label %2203

2210:                                             ; preds = %2203, %2196
  %2211 = phi i32* [ %2198, %2196 ], [ %2204, %2203 ]
  %2212 = icmp eq i32* %2211, %2200
  br i1 %2212, label %2213, label %2276

2213:                                             ; preds = %2207, %2210
  %2214 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2215 = load i32*, i32** %2214, align 8
  %2216 = icmp eq i32* %2200, %2215
  %2217 = ptrtoint i32* %2215 to i64
  br i1 %2216, label %2222, label %2218

2218:                                             ; preds = %2213
  store i32 14, i32* %2200, align 4
  %2219 = getelementptr inbounds i32, i32* %2200, i64 1
  %2220 = ptrtoint i32* %2219 to i64
  %2221 = bitcast i32** %2199 to i64*
  store i64 %2220, i64* %2221, align 8
  br label %2276

2222:                                             ; preds = %2213
  %2223 = ptrtoint i32* %2200 to i64
  %2224 = bitcast i32** %2199 to i64*
  %2225 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2226 = sub i64 %2223, %2202
  %2227 = ashr exact i64 %2226, 2
  %2228 = add nsw i64 %2227, 1
  %2229 = icmp ugt i64 %2228, 4611686018427387903
  br i1 %2229, label %2230, label %2232

2230:                                             ; preds = %2222
  %2231 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2231) #20
  unreachable

2232:                                             ; preds = %2222
  %2233 = bitcast i32** %2214 to i64*
  %2234 = sub i64 %2217, %2202
  %2235 = ashr exact i64 %2234, 2
  %2236 = icmp ult i64 %2235, 2305843009213693951
  br i1 %2236, label %2237, label %2245

2237:                                             ; preds = %2232
  %2238 = ashr exact i64 %2234, 1
  %2239 = icmp ult i64 %2238, %2228
  %2240 = select i1 %2239, i64 %2228, i64 %2238
  %2241 = icmp eq i64 %2240, 0
  br i1 %2241, label %2250, label %2242

2242:                                             ; preds = %2237
  %2243 = icmp ugt i64 %2240, 4611686018427387903
  br i1 %2243, label %2244, label %2245

2244:                                             ; preds = %2242
  call void @abort() #20
  unreachable

2245:                                             ; preds = %2242, %2232
  %2246 = phi i64 [ %2240, %2242 ], [ 4611686018427387903, %2232 ]
  %2247 = shl i64 %2246, 2
  %2248 = call i8* @_Znwm(i64 %2247) #19
  %2249 = bitcast i8* %2248 to i32*
  br label %2250

2250:                                             ; preds = %2245, %2237
  %2251 = phi i64 [ %2246, %2245 ], [ 0, %2237 ]
  %2252 = phi i32* [ %2249, %2245 ], [ null, %2237 ]
  %2253 = getelementptr inbounds i32, i32* %2252, i64 %2227
  %2254 = getelementptr inbounds i32, i32* %2252, i64 %2251
  %2255 = ptrtoint i32* %2254 to i64
  store i32 14, i32* %2253, align 4
  %2256 = getelementptr inbounds i32, i32* %2253, i64 1
  %2257 = ptrtoint i32* %2256 to i64
  %2258 = load i32*, i32** %2197, align 8
  %2259 = load i64, i64* %2224, align 8
  %2260 = ptrtoint i32* %2258 to i64
  %2261 = sub i64 %2259, %2260
  %2262 = ashr exact i64 %2261, 2
  %2263 = sub nsw i64 0, %2262
  %2264 = getelementptr inbounds i32, i32* %2253, i64 %2263
  %2265 = ptrtoint i32* %2264 to i64
  %2266 = icmp sgt i64 %2261, 0
  br i1 %2266, label %2267, label %2271

2267:                                             ; preds = %2250
  %2268 = bitcast i32* %2264 to i8*
  %2269 = bitcast i32* %2258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2268, i8* align 4 %2269, i64 %2261, i1 false) #18
  %2270 = load i32*, i32** %2197, align 8
  br label %2271

2271:                                             ; preds = %2267, %2250
  %2272 = phi i32* [ %2258, %2250 ], [ %2270, %2267 ]
  store i64 %2265, i64* %2225, align 8
  store i64 %2257, i64* %2224, align 8
  store i64 %2255, i64* %2233, align 8
  %2273 = icmp eq i32* %2272, null
  br i1 %2273, label %2276, label %2274

2274:                                             ; preds = %2271
  %2275 = bitcast i32* %2272 to i8*
  call void @_ZdlPv(i8* %2275) #19
  br label %2276

2276:                                             ; preds = %2185, %2210, %2218, %2271, %2274, %2193, %2167
  br i1 %6, label %2277, label %2547

2277:                                             ; preds = %2276
  br i1 %190, label %2278, label %2359

2278:                                             ; preds = %2277
  br i1 %1, label %2547, label %2279

2279:                                             ; preds = %2278
  %2280 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2281 = load i32*, i32** %2280, align 8
  %2282 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2283 = load i32*, i32** %2282, align 8
  %2284 = icmp eq i32* %2281, %2283
  %2285 = ptrtoint i32* %2281 to i64
  br i1 %2284, label %2293, label %2286

2286:                                             ; preds = %2279, %2290
  %2287 = phi i32* [ %2291, %2290 ], [ %2281, %2279 ]
  %2288 = load i32, i32* %2287, align 4
  %2289 = icmp eq i32 %2288, 17
  br i1 %2289, label %2293, label %2290

2290:                                             ; preds = %2286
  %2291 = getelementptr inbounds i32, i32* %2287, i64 1
  %2292 = icmp eq i32* %2291, %2283
  br i1 %2292, label %2296, label %2286

2293:                                             ; preds = %2286, %2279
  %2294 = phi i32* [ %2281, %2279 ], [ %2287, %2286 ]
  %2295 = icmp eq i32* %2294, %2283
  br i1 %2295, label %2296, label %2547

2296:                                             ; preds = %2290, %2293
  %2297 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2298 = load i32*, i32** %2297, align 8
  %2299 = icmp eq i32* %2283, %2298
  %2300 = ptrtoint i32* %2298 to i64
  br i1 %2299, label %2305, label %2301

2301:                                             ; preds = %2296
  store i32 17, i32* %2283, align 4
  %2302 = getelementptr inbounds i32, i32* %2283, i64 1
  %2303 = ptrtoint i32* %2302 to i64
  %2304 = bitcast i32** %2282 to i64*
  store i64 %2303, i64* %2304, align 8
  br label %2547

2305:                                             ; preds = %2296
  %2306 = ptrtoint i32* %2283 to i64
  %2307 = bitcast i32** %2282 to i64*
  %2308 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2309 = sub i64 %2306, %2285
  %2310 = ashr exact i64 %2309, 2
  %2311 = add nsw i64 %2310, 1
  %2312 = icmp ugt i64 %2311, 4611686018427387903
  br i1 %2312, label %2313, label %2315

2313:                                             ; preds = %2305
  %2314 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2314) #20
  unreachable

2315:                                             ; preds = %2305
  %2316 = bitcast i32** %2297 to i64*
  %2317 = sub i64 %2300, %2285
  %2318 = ashr exact i64 %2317, 2
  %2319 = icmp ult i64 %2318, 2305843009213693951
  br i1 %2319, label %2320, label %2328

2320:                                             ; preds = %2315
  %2321 = ashr exact i64 %2317, 1
  %2322 = icmp ult i64 %2321, %2311
  %2323 = select i1 %2322, i64 %2311, i64 %2321
  %2324 = icmp eq i64 %2323, 0
  br i1 %2324, label %2333, label %2325

2325:                                             ; preds = %2320
  %2326 = icmp ugt i64 %2323, 4611686018427387903
  br i1 %2326, label %2327, label %2328

2327:                                             ; preds = %2325
  call void @abort() #20
  unreachable

2328:                                             ; preds = %2325, %2315
  %2329 = phi i64 [ %2323, %2325 ], [ 4611686018427387903, %2315 ]
  %2330 = shl i64 %2329, 2
  %2331 = call i8* @_Znwm(i64 %2330) #19
  %2332 = bitcast i8* %2331 to i32*
  br label %2333

2333:                                             ; preds = %2328, %2320
  %2334 = phi i64 [ %2329, %2328 ], [ 0, %2320 ]
  %2335 = phi i32* [ %2332, %2328 ], [ null, %2320 ]
  %2336 = getelementptr inbounds i32, i32* %2335, i64 %2310
  %2337 = getelementptr inbounds i32, i32* %2335, i64 %2334
  %2338 = ptrtoint i32* %2337 to i64
  store i32 17, i32* %2336, align 4
  %2339 = getelementptr inbounds i32, i32* %2336, i64 1
  %2340 = ptrtoint i32* %2339 to i64
  %2341 = load i32*, i32** %2280, align 8
  %2342 = load i64, i64* %2307, align 8
  %2343 = ptrtoint i32* %2341 to i64
  %2344 = sub i64 %2342, %2343
  %2345 = ashr exact i64 %2344, 2
  %2346 = sub nsw i64 0, %2345
  %2347 = getelementptr inbounds i32, i32* %2336, i64 %2346
  %2348 = ptrtoint i32* %2347 to i64
  %2349 = icmp sgt i64 %2344, 0
  br i1 %2349, label %2350, label %2354

2350:                                             ; preds = %2333
  %2351 = bitcast i32* %2347 to i8*
  %2352 = bitcast i32* %2341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2351, i8* align 4 %2352, i64 %2344, i1 false) #18
  %2353 = load i32*, i32** %2280, align 8
  br label %2354

2354:                                             ; preds = %2350, %2333
  %2355 = phi i32* [ %2341, %2333 ], [ %2353, %2350 ]
  store i64 %2348, i64* %2308, align 8
  store i64 %2340, i64* %2307, align 8
  store i64 %2338, i64* %2316, align 8
  %2356 = icmp eq i32* %2355, null
  br i1 %2356, label %2547, label %2357

2357:                                             ; preds = %2354
  %2358 = bitcast i32* %2355 to i8*
  call void @_ZdlPv(i8* %2358) #19
  br label %2547

2359:                                             ; preds = %2277
  %2360 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kANGLEImplementationMetalNameE, i64 0, i64 0)) #18
  %2361 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2362 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2361, i64 0, i32 1, i32 0
  %2363 = load i8, i8* %2362, align 1
  %2364 = icmp slt i8 %2363, 0
  %2365 = load i64, i64* %148, align 8
  %2366 = zext i8 %2363 to i64
  %2367 = select i1 %2364, i64 %2365, i64 %2366
  %2368 = icmp eq i64 %2360, %2367
  br i1 %2368, label %2369, label %2456

2369:                                             ; preds = %2359
  %2370 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl29kANGLEImplementationMetalNameE, i64 0, i64 0), i64 %2360) #18
  %2371 = icmp eq i32 %2370, 0
  br i1 %2371, label %2376, label %2372

2372:                                             ; preds = %2369
  %2373 = load i8, i8* %2362, align 1
  %2374 = load i64, i64* %148, align 8
  %2375 = zext i8 %2373 to i64
  br label %2456

2376:                                             ; preds = %2369
  %2377 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2378 = load i32*, i32** %2377, align 8
  %2379 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2380 = load i32*, i32** %2379, align 8
  %2381 = icmp eq i32* %2378, %2380
  %2382 = ptrtoint i32* %2378 to i64
  br i1 %2381, label %2390, label %2383

2383:                                             ; preds = %2376, %2387
  %2384 = phi i32* [ %2388, %2387 ], [ %2378, %2376 ]
  %2385 = load i32, i32* %2384, align 4
  %2386 = icmp eq i32 %2385, 17
  br i1 %2386, label %2390, label %2387

2387:                                             ; preds = %2383
  %2388 = getelementptr inbounds i32, i32* %2384, i64 1
  %2389 = icmp eq i32* %2388, %2380
  br i1 %2389, label %2393, label %2383

2390:                                             ; preds = %2383, %2376
  %2391 = phi i32* [ %2378, %2376 ], [ %2384, %2383 ]
  %2392 = icmp eq i32* %2391, %2380
  br i1 %2392, label %2393, label %2547

2393:                                             ; preds = %2387, %2390
  %2394 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2395 = load i32*, i32** %2394, align 8
  %2396 = icmp eq i32* %2380, %2395
  %2397 = ptrtoint i32* %2395 to i64
  br i1 %2396, label %2402, label %2398

2398:                                             ; preds = %2393
  store i32 17, i32* %2380, align 4
  %2399 = getelementptr inbounds i32, i32* %2380, i64 1
  %2400 = ptrtoint i32* %2399 to i64
  %2401 = bitcast i32** %2379 to i64*
  store i64 %2400, i64* %2401, align 8
  br label %2547

2402:                                             ; preds = %2393
  %2403 = ptrtoint i32* %2380 to i64
  %2404 = bitcast i32** %2379 to i64*
  %2405 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2406 = sub i64 %2403, %2382
  %2407 = ashr exact i64 %2406, 2
  %2408 = add nsw i64 %2407, 1
  %2409 = icmp ugt i64 %2408, 4611686018427387903
  br i1 %2409, label %2410, label %2412

2410:                                             ; preds = %2402
  %2411 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2411) #20
  unreachable

2412:                                             ; preds = %2402
  %2413 = bitcast i32** %2394 to i64*
  %2414 = sub i64 %2397, %2382
  %2415 = ashr exact i64 %2414, 2
  %2416 = icmp ult i64 %2415, 2305843009213693951
  br i1 %2416, label %2417, label %2425

2417:                                             ; preds = %2412
  %2418 = ashr exact i64 %2414, 1
  %2419 = icmp ult i64 %2418, %2408
  %2420 = select i1 %2419, i64 %2408, i64 %2418
  %2421 = icmp eq i64 %2420, 0
  br i1 %2421, label %2430, label %2422

2422:                                             ; preds = %2417
  %2423 = icmp ugt i64 %2420, 4611686018427387903
  br i1 %2423, label %2424, label %2425

2424:                                             ; preds = %2422
  call void @abort() #20
  unreachable

2425:                                             ; preds = %2422, %2412
  %2426 = phi i64 [ %2420, %2422 ], [ 4611686018427387903, %2412 ]
  %2427 = shl i64 %2426, 2
  %2428 = call i8* @_Znwm(i64 %2427) #19
  %2429 = bitcast i8* %2428 to i32*
  br label %2430

2430:                                             ; preds = %2425, %2417
  %2431 = phi i64 [ %2426, %2425 ], [ 0, %2417 ]
  %2432 = phi i32* [ %2429, %2425 ], [ null, %2417 ]
  %2433 = getelementptr inbounds i32, i32* %2432, i64 %2407
  %2434 = getelementptr inbounds i32, i32* %2432, i64 %2431
  %2435 = ptrtoint i32* %2434 to i64
  store i32 17, i32* %2433, align 4
  %2436 = getelementptr inbounds i32, i32* %2433, i64 1
  %2437 = ptrtoint i32* %2436 to i64
  %2438 = load i32*, i32** %2377, align 8
  %2439 = load i64, i64* %2404, align 8
  %2440 = ptrtoint i32* %2438 to i64
  %2441 = sub i64 %2439, %2440
  %2442 = ashr exact i64 %2441, 2
  %2443 = sub nsw i64 0, %2442
  %2444 = getelementptr inbounds i32, i32* %2433, i64 %2443
  %2445 = ptrtoint i32* %2444 to i64
  %2446 = icmp sgt i64 %2441, 0
  br i1 %2446, label %2447, label %2451

2447:                                             ; preds = %2430
  %2448 = bitcast i32* %2444 to i8*
  %2449 = bitcast i32* %2438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2448, i8* align 4 %2449, i64 %2441, i1 false) #18
  %2450 = load i32*, i32** %2377, align 8
  br label %2451

2451:                                             ; preds = %2447, %2430
  %2452 = phi i32* [ %2438, %2430 ], [ %2450, %2447 ]
  store i64 %2445, i64* %2405, align 8
  store i64 %2437, i64* %2404, align 8
  store i64 %2435, i64* %2413, align 8
  %2453 = icmp eq i32* %2452, null
  br i1 %2453, label %2547, label %2454

2454:                                             ; preds = %2451
  %2455 = bitcast i32* %2452 to i8*
  call void @_ZdlPv(i8* %2455) #19
  br label %2547

2456:                                             ; preds = %2372, %2359
  %2457 = phi i64 [ %2375, %2372 ], [ %2366, %2359 ]
  %2458 = phi i64 [ %2374, %2372 ], [ %2365, %2359 ]
  %2459 = phi i8 [ %2373, %2372 ], [ %2363, %2359 ]
  %2460 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationMetalNULLNameE, i64 0, i64 0)) #18
  %2461 = icmp slt i8 %2459, 0
  %2462 = select i1 %2461, i64 %2458, i64 %2457
  %2463 = icmp eq i64 %2460, %2462
  br i1 %2463, label %2464, label %2547

2464:                                             ; preds = %2456
  %2465 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2gl33kANGLEImplementationMetalNULLNameE, i64 0, i64 0), i64 %2460) #18
  %2466 = icmp eq i32 %2465, 0
  br i1 %2466, label %2467, label %2547

2467:                                             ; preds = %2464
  %2468 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2471 = load i32*, i32** %2470, align 8
  %2472 = icmp eq i32* %2469, %2471
  %2473 = ptrtoint i32* %2469 to i64
  br i1 %2472, label %2481, label %2474

2474:                                             ; preds = %2467, %2478
  %2475 = phi i32* [ %2479, %2478 ], [ %2469, %2467 ]
  %2476 = load i32, i32* %2475, align 4
  %2477 = icmp eq i32 %2476, 18
  br i1 %2477, label %2481, label %2478

2478:                                             ; preds = %2474
  %2479 = getelementptr inbounds i32, i32* %2475, i64 1
  %2480 = icmp eq i32* %2479, %2471
  br i1 %2480, label %2484, label %2474

2481:                                             ; preds = %2474, %2467
  %2482 = phi i32* [ %2469, %2467 ], [ %2475, %2474 ]
  %2483 = icmp eq i32* %2482, %2471
  br i1 %2483, label %2484, label %2547

2484:                                             ; preds = %2478, %2481
  %2485 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2486 = load i32*, i32** %2485, align 8
  %2487 = icmp eq i32* %2471, %2486
  %2488 = ptrtoint i32* %2486 to i64
  br i1 %2487, label %2493, label %2489

2489:                                             ; preds = %2484
  store i32 18, i32* %2471, align 4
  %2490 = getelementptr inbounds i32, i32* %2471, i64 1
  %2491 = ptrtoint i32* %2490 to i64
  %2492 = bitcast i32** %2470 to i64*
  store i64 %2491, i64* %2492, align 8
  br label %2547

2493:                                             ; preds = %2484
  %2494 = ptrtoint i32* %2471 to i64
  %2495 = bitcast i32** %2470 to i64*
  %2496 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2497 = sub i64 %2494, %2473
  %2498 = ashr exact i64 %2497, 2
  %2499 = add nsw i64 %2498, 1
  %2500 = icmp ugt i64 %2499, 4611686018427387903
  br i1 %2500, label %2501, label %2503

2501:                                             ; preds = %2493
  %2502 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2502) #20
  unreachable

2503:                                             ; preds = %2493
  %2504 = bitcast i32** %2485 to i64*
  %2505 = sub i64 %2488, %2473
  %2506 = ashr exact i64 %2505, 2
  %2507 = icmp ult i64 %2506, 2305843009213693951
  br i1 %2507, label %2508, label %2516

2508:                                             ; preds = %2503
  %2509 = ashr exact i64 %2505, 1
  %2510 = icmp ult i64 %2509, %2499
  %2511 = select i1 %2510, i64 %2499, i64 %2509
  %2512 = icmp eq i64 %2511, 0
  br i1 %2512, label %2521, label %2513

2513:                                             ; preds = %2508
  %2514 = icmp ugt i64 %2511, 4611686018427387903
  br i1 %2514, label %2515, label %2516

2515:                                             ; preds = %2513
  call void @abort() #20
  unreachable

2516:                                             ; preds = %2513, %2503
  %2517 = phi i64 [ %2511, %2513 ], [ 4611686018427387903, %2503 ]
  %2518 = shl i64 %2517, 2
  %2519 = call i8* @_Znwm(i64 %2518) #19
  %2520 = bitcast i8* %2519 to i32*
  br label %2521

2521:                                             ; preds = %2516, %2508
  %2522 = phi i64 [ %2517, %2516 ], [ 0, %2508 ]
  %2523 = phi i32* [ %2520, %2516 ], [ null, %2508 ]
  %2524 = getelementptr inbounds i32, i32* %2523, i64 %2498
  %2525 = getelementptr inbounds i32, i32* %2523, i64 %2522
  %2526 = ptrtoint i32* %2525 to i64
  store i32 18, i32* %2524, align 4
  %2527 = getelementptr inbounds i32, i32* %2524, i64 1
  %2528 = ptrtoint i32* %2527 to i64
  %2529 = load i32*, i32** %2468, align 8
  %2530 = load i64, i64* %2495, align 8
  %2531 = ptrtoint i32* %2529 to i64
  %2532 = sub i64 %2530, %2531
  %2533 = ashr exact i64 %2532, 2
  %2534 = sub nsw i64 0, %2533
  %2535 = getelementptr inbounds i32, i32* %2524, i64 %2534
  %2536 = ptrtoint i32* %2535 to i64
  %2537 = icmp sgt i64 %2532, 0
  br i1 %2537, label %2538, label %2542

2538:                                             ; preds = %2521
  %2539 = bitcast i32* %2535 to i8*
  %2540 = bitcast i32* %2529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2539, i8* align 4 %2540, i64 %2532, i1 false) #18
  %2541 = load i32*, i32** %2468, align 8
  br label %2542

2542:                                             ; preds = %2538, %2521
  %2543 = phi i32* [ %2529, %2521 ], [ %2541, %2538 ]
  store i64 %2536, i64* %2496, align 8
  store i64 %2528, i64* %2495, align 8
  store i64 %2526, i64* %2504, align 8
  %2544 = icmp eq i32* %2543, null
  br i1 %2544, label %2547, label %2545

2545:                                             ; preds = %2542
  %2546 = bitcast i32* %2543 to i8*
  call void @_ZdlPv(i8* %2546) #19
  br label %2547

2547:                                             ; preds = %2456, %2481, %2489, %2542, %2545, %2390, %2398, %2451, %2454, %2293, %2301, %2354, %2357, %2278, %2464, %2276
  %2548 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %2549 = load i32*, i32** %2548, align 8
  %2550 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %2551 = load i32*, i32** %2550, align 8
  %2552 = icmp eq i32* %2549, %2551
  %2553 = ptrtoint i32* %2549 to i64
  %2554 = ptrtoint i32* %2551 to i64
  br i1 %2552, label %2555, label %2599

2555:                                             ; preds = %2547
  %2556 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %2557 = load i32*, i32** %2556, align 8
  %2558 = icmp ult i32* %2549, %2557
  br i1 %2558, label %2559, label %2563

2559:                                             ; preds = %2555
  store i32 0, i32* %2549, align 4
  %2560 = getelementptr inbounds i32, i32* %2549, i64 1
  %2561 = ptrtoint i32* %2560 to i64
  %2562 = bitcast i32** %2550 to i64*
  store i64 %2561, i64* %2562, align 8
  br label %2599

2563:                                             ; preds = %2555
  %2564 = ptrtoint i32* %2557 to i64
  %2565 = bitcast i32** %2550 to i64*
  %2566 = bitcast %"class.std::__1::vector.14"* %8 to i64*
  %2567 = bitcast i32** %2556 to i64*
  %2568 = sub i64 %2564, %2553
  %2569 = ashr exact i64 %2568, 2
  %2570 = icmp ult i64 %2569, 2305843009213693951
  br i1 %2570, label %2571, label %2577

2571:                                             ; preds = %2563
  %2572 = ashr exact i64 %2568, 1
  %2573 = icmp eq i64 %2568, 0
  %2574 = select i1 %2573, i64 1, i64 %2572
  %2575 = icmp ugt i64 %2574, 4611686018427387903
  br i1 %2575, label %2576, label %2577

2576:                                             ; preds = %2571
  call void @abort() #20
  unreachable

2577:                                             ; preds = %2563, %2571
  %2578 = phi i64 [ %2574, %2571 ], [ 4611686018427387903, %2563 ]
  %2579 = shl i64 %2578, 2
  %2580 = call i8* @_Znwm(i64 %2579) #19
  %2581 = bitcast i8* %2580 to i32*
  %2582 = getelementptr inbounds i32, i32* %2581, i64 %2578
  %2583 = ptrtoint i32* %2582 to i64
  store i32 0, i32* %2581, align 4
  %2584 = getelementptr inbounds i8, i8* %2580, i64 4
  %2585 = ptrtoint i8* %2584 to i64
  %2586 = sub i64 %2554, %2553
  %2587 = ashr exact i64 %2586, 2
  %2588 = sub nsw i64 0, %2587
  %2589 = getelementptr inbounds i32, i32* %2581, i64 %2588
  %2590 = ptrtoint i32* %2589 to i64
  %2591 = icmp sgt i64 %2586, 0
  br i1 %2591, label %2592, label %2595

2592:                                             ; preds = %2577
  %2593 = bitcast i32* %2589 to i8*
  %2594 = bitcast i32* %2549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2593, i8* align 4 %2594, i64 %2586, i1 false) #18
  br label %2595

2595:                                             ; preds = %2592, %2577
  store i64 %2590, i64* %2566, align 8
  store i64 %2585, i64* %2565, align 8
  store i64 %2583, i64* %2567, align 8
  %2596 = icmp eq i32* %2549, null
  br i1 %2596, label %2599, label %2597

2597:                                             ; preds = %2595
  %2598 = bitcast i32* %2549 to i8*
  call void @_ZdlPv(i8* %2598) #19
  br label %2599

2599:                                             ; preds = %2597, %2595, %2559, %218, %226, %279, %282, %2547
  %2600 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2601 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2600, i64 0, i32 1, i32 0
  %2602 = load i8, i8* %2601, align 1
  %2603 = icmp slt i8 %2602, 0
  br i1 %2603, label %2604, label %2606

2604:                                             ; preds = %2599
  %2605 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %2605) #19
  br label %2606

2606:                                             ; preds = %2599, %2604
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #18
  br label %2607

2607:                                             ; preds = %68, %76, %129, %132, %2606
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() local_unnamed_addr #2

declare i64 @_ZN2gl27GetSoftwareGLImplementationEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl26IsSoftwareGLImplementationENS_21GLImplementationPartsE(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN8features20IsDefaultANGLEVulkanEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLSurfaceEGLC2Ev(%"class.gl::GLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 0
  tail call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* %2) #18
  %3 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 1
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* %5) #18
  ret void
}

declare void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLSurfaceEGL9GetFormatEv(%"class.gl::GLSurfaceFormat"* noalias sret, %"class.gl::GLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %1, i64 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* %0, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %3) #18
  ret void
}

declare void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL10GetDisplayEv(%"class.gl::GLSurfaceEGL"* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL9GetConfigEv(%"class.gl::GLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.158", align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [21 x i32], align 16
  %6 = alloca [19 x i32], align 16
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.logging::LogMessage", align 8
  %16 = alloca %"class.gl::GLSurfaceFormat", align 4
  %17 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %319

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 2
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %16, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %21) #18
  %22 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 0
  %23 = bitcast %"class.gl::GLSurfaceEGL"* %0 to i1 (%"class.gl::GLSurface"*)***
  %24 = load i1 (%"class.gl::GLSurface"*)**, i1 (%"class.gl::GLSurface"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %24, i64 36
  %26 = load i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %25, align 8
  %27 = call zeroext i1 %26(%"class.gl::GLSurface"* %22) #18
  %28 = bitcast %"class.std::__1::vector.158"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #18
  %29 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %2, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %2, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #18
  %32 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #18
  %33 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %32, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kDisableES3GLContextE, i64 0, i64 0)) #18
  %34 = bitcast i32** %30 to i64*
  %35 = bitcast %"class.std::__1::vector.158"* %2 to i64*
  br i1 %33, label %43, label %36

36:                                               ; preds = %20
  %37 = bitcast i32** %31 to i64*
  %38 = call i8* @_Znwm(i64 4) #19
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds i8, i8* %38, i64 4
  %41 = ptrtoint i8* %40 to i64
  store i32 64, i32* %39, align 4
  %42 = ptrtoint i8* %38 to i64
  store i64 %42, i64* %35, align 8
  store i64 %41, i64* %34, align 8
  store i64 %41, i64* %37, align 8
  br label %43

43:                                               ; preds = %20, %36
  %44 = phi i64 [ %41, %36 ], [ 0, %20 ]
  %45 = phi i8* [ %38, %36 ], [ null, %20 ]
  %46 = phi i32* [ %39, %36 ], [ null, %20 ]
  %47 = phi i64 [ %42, %36 ], [ 0, %20 ]
  %48 = sub i64 %44, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = bitcast %"class.std::__1::vector.158"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %53) #20
  unreachable

54:                                               ; preds = %43
  %55 = bitcast i32** %31 to i64*
  %56 = icmp ult i64 %49, 2305843009213693951
  br i1 %56, label %57, label %65

57:                                               ; preds = %54
  %58 = ashr exact i64 %48, 1
  %59 = icmp ult i64 %58, %50
  %60 = select i1 %59, i64 %50, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 4611686018427387903
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  call void @abort() #20
  unreachable

65:                                               ; preds = %62, %54
  %66 = phi i64 [ %60, %62 ], [ 4611686018427387903, %54 ]
  %67 = shl i64 %66, 2
  %68 = call i8* @_Znwm(i64 %67) #19
  %69 = bitcast i8* %68 to i32*
  br label %70

70:                                               ; preds = %65, %57
  %71 = phi i64 [ %66, %65 ], [ 0, %57 ]
  %72 = phi i32* [ %69, %65 ], [ null, %57 ]
  %73 = getelementptr inbounds i32, i32* %72, i64 %49
  %74 = getelementptr inbounds i32, i32* %72, i64 %71
  %75 = ptrtoint i32* %74 to i64
  store i32 4, i32* %73, align 4
  %76 = getelementptr inbounds i32, i32* %73, i64 1
  %77 = ptrtoint i32* %76 to i64
  %78 = ptrtoint i32* %46 to i64
  %79 = sub i64 %44, %78
  %80 = ashr exact i64 %79, 2
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i32, i32* %73, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %70
  %86 = bitcast i32* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %45, i64 %79, i1 false) #18
  br label %87

87:                                               ; preds = %85, %70
  store i64 %83, i64* %35, align 8
  store i64 %77, i64* %34, align 8
  store i64 %75, i64* %55, align 8
  %88 = icmp eq i32* %46, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  call void @_ZdlPv(i8* %45) #19
  br label %90

90:                                               ; preds = %89, %87
  %91 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #18
  %92 = call i32 @_ZNK2gl15GLSurfaceFormat13GetBufferSizeEv(%"class.gl::GLSurfaceFormat"* nonnull %16) #18
  store i32 %92, i32* %3, align 4
  %93 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #18
  store i32 8, i32* %4, align 4
  %94 = icmp eq i32 %92, 16
  %95 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %16, i64 0, i32 5
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %16, i64 0, i32 7
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %16, i64 0, i32 6
  %100 = load i32, i32* %99, align 4
  %101 = call %"class.gl::GLDisplayEglUtil"* @_ZN2gl16GLDisplayEglUtil11GetInstanceEv() #18
  %102 = bitcast %"class.gl::GLDisplayEglUtil"* %101 to void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)***
  %103 = load void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)**, void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)*, void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)** %103, i64 1
  %105 = load void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)*, void (%"class.gl::GLDisplayEglUtil"*, i32*, i32*)** %104, align 8
  call void %105(%"class.gl::GLDisplayEglUtil"* %101, i32* nonnull %4, i32* nonnull %3) #18
  %106 = select i1 %27, i32 -1, i32 5
  %107 = load i32*, i32** %29, align 8
  %108 = load i32*, i32** %30, align 8
  %109 = icmp eq i32* %107, %108
  br i1 %109, label %303, label %110

110:                                              ; preds = %90
  %111 = bitcast [21 x i32]* %5 to i8*
  %112 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 0
  %113 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 1
  %114 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 2
  %115 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 3
  %116 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 4
  %117 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 8
  %118 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 9
  %119 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 10
  %120 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 11
  %121 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 12
  %122 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 13
  %123 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 14
  %124 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 15
  %125 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 16
  %126 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 17
  %127 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 18
  %128 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 19
  %129 = getelementptr inbounds [21 x i32], [21 x i32]* %5, i64 0, i64 20
  %130 = bitcast [19 x i32]* %6 to i8*
  %131 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 0
  %132 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 4
  %133 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 8
  %134 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 9
  %135 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 10
  %136 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 11
  %137 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 12
  %138 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 13
  %139 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 14
  %140 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 15
  %141 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 16
  %142 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 17
  %143 = getelementptr inbounds [19 x i32], [19 x i32]* %6, i64 0, i64 18
  %144 = select i1 %94, i32* %131, i32* %112
  %145 = bitcast i32* %7 to i8*
  %146 = bitcast i8** %8 to i8*
  %147 = bitcast i32* %10 to i8*
  %148 = bitcast i32* %11 to i8*
  %149 = bitcast i32* %12 to i8*
  %150 = bitcast i32* %13 to i8*
  %151 = bitcast i8** %8 to i64*
  %152 = bitcast %"class.logging::LogMessage"* %14 to i8*
  %153 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %154 = bitcast %"class.std::__1::basic_ostringstream"* %153 to %"class.std::__1::basic_ostream"*
  %155 = bitcast %"class.logging::LogMessage"* %9 to i8*
  %156 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %157 = bitcast %"class.std::__1::basic_ostringstream"* %156 to %"class.std::__1::basic_ostream"*
  %158 = bitcast i32* %116 to <4 x i32>*
  %159 = bitcast [19 x i32]* %6 to <4 x i32>*
  %160 = bitcast i32* %132 to <4 x i32>*
  br label %163

161:                                              ; preds = %298
  %162 = icmp eq i32* %302, %108
  br i1 %162, label %303, label %163

163:                                              ; preds = %161, %110
  %164 = phi i8* [ undef, %110 ], [ %300, %161 ]
  %165 = phi i32* [ %107, %110 ], [ %302, %161 ]
  %166 = load i32, i32* %165, align 4
  call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %111) #18
  store i32 12320, i32* %112, align 16
  %167 = load i32, i32* %3, align 4
  store i32 %167, i32* %113, align 4
  store i32 12321, i32* %114, align 8
  %168 = load i32, i32* %4, align 4
  store i32 %168, i32* %115, align 4
  store <4 x i32> <i32 12322, i32 8, i32 12323, i32 8>, <4 x i32>* %158, align 16
  store i32 12324, i32* %117, align 16
  store i32 8, i32* %118, align 4
  store i32 12337, i32* %119, align 8
  store i32 %100, i32* %120, align 4
  store i32 12325, i32* %121, align 16
  store i32 %96, i32* %122, align 4
  store i32 12326, i32* %123, align 8
  store i32 %98, i32* %124, align 4
  store i32 12352, i32* %125, align 16
  store i32 %166, i32* %126, align 4
  store i32 12339, i32* %127, align 8
  store i32 %106, i32* %128, align 4
  store i32 12344, i32* %129, align 16
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %130) #18
  store <4 x i32> <i32 12320, i32 16, i32 12322, i32 5>, <4 x i32>* %159, align 16
  store <4 x i32> <i32 12323, i32 6, i32 12324, i32 5>, <4 x i32>* %160, align 16
  store i32 12337, i32* %133, align 16
  store i32 %100, i32* %134, align 4
  store i32 12325, i32* %135, align 8
  store i32 %96, i32* %136, align 4
  store i32 12326, i32* %137, align 16
  store i32 %98, i32* %138, align 4
  store i32 12352, i32* %139, align 8
  store i32 %166, i32* %140, align 4
  store i32 12339, i32* %141, align 16
  store i32 %106, i32* %142, align 4
  store i32 12344, i32* %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #18
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #18
  store i8* null, i8** %8, align 8
  %169 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %170 = call fastcc zeroext i1 @_ZN2gl12_GLOBAL__N_117ValidateEglConfigEPvPKiPi(i8* %169, i32* %144, i32* nonnull %7) #18
  br i1 %170, label %171, label %298

171:                                              ; preds = %163
  %172 = load i32, i32* %7, align 4
  %173 = sext i32 %172 to i64
  %174 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %173, i64 8) #18
  %175 = extractvalue { i64, i1 } %174, 1
  %176 = extractvalue { i64, i1 } %174, 0
  %177 = select i1 %175, i64 -1, i64 %176
  %178 = call i8* @_Znam(i64 %177) #19
  %179 = bitcast i8* %178 to i8**
  %180 = select i1 %94, i32 %172, i32 1
  %181 = select i1 %94, i8** %179, i8** %8
  %182 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %183 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %184 = bitcast %"class.gl::EGLApi"* %182 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)***
  %185 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*** %184, align 8
  %186 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %185, i64 5
  %187 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %186, align 8
  %188 = call i32 %187(%"class.gl::EGLApi"* %182, i8* %183, i32* %144, i8** nonnull %181, i32 %180, i32* nonnull %7) #18
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %199

190:                                              ; preds = %171
  %191 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %191, label %192, label %197

192:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %155) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 686, i32 2) #18
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i64 34) #18
  %194 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %195 = call i64 @strlen(i8* %194) #18
  %196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* %194, i64 %195) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %155) #18
  br label %197

197:                                              ; preds = %192, %190
  %198 = load i8*, i8** %8, align 8
  br label %295

199:                                              ; preds = %171
  br i1 %94, label %200, label %293

200:                                              ; preds = %199
  %201 = load i32, i32* %7, align 4
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %207, label %272

203:                                              ; preds = %265
  %204 = load i32, i32* %7, align 4
  %205 = sext i32 %204 to i64
  %206 = icmp slt i64 %268, %205
  br i1 %206, label %207, label %269

207:                                              ; preds = %200, %203
  %208 = phi i64 [ %268, %203 ], [ 0, %200 ]
  %209 = phi i8 [ %267, %203 ], [ 0, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #18
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #18
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #18
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #18
  store i32 -1431655766, i32* %13, align 4
  %210 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %211 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %212 = getelementptr inbounds i8*, i8** %179, i64 %208
  %213 = load i8*, i8** %212, align 8
  %214 = bitcast %"class.gl::EGLApi"* %210 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %215 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %214, align 8
  %216 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %215, i64 28
  %217 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %216, align 8
  %218 = call i32 %217(%"class.gl::EGLApi"* %210, i8* %211, i8* %213, i32 12324, i32* nonnull %10) #18
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %265, label %220

220:                                              ; preds = %207
  %221 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %222 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %223 = load i8*, i8** %212, align 8
  %224 = bitcast %"class.gl::EGLApi"* %221 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %225 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %224, align 8
  %226 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %225, i64 28
  %227 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %226, align 8
  %228 = call i32 %227(%"class.gl::EGLApi"* %221, i8* %222, i8* %223, i32 12322, i32* nonnull %12) #18
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %265, label %230

230:                                              ; preds = %220
  %231 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %232 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %233 = load i8*, i8** %212, align 8
  %234 = bitcast %"class.gl::EGLApi"* %231 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %235 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %234, align 8
  %236 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %235, i64 28
  %237 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %236, align 8
  %238 = call i32 %237(%"class.gl::EGLApi"* %231, i8* %232, i8* %233, i32 12323, i32* nonnull %11) #18
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %265, label %240

240:                                              ; preds = %230
  %241 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %242 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %243 = load i8*, i8** %212, align 8
  %244 = bitcast %"class.gl::EGLApi"* %241 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %245 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %244, align 8
  %246 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %245, i64 28
  %247 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %246, align 8
  %248 = call i32 %247(%"class.gl::EGLApi"* %241, i8* %242, i8* %243, i32 12321, i32* nonnull %13) #18
  %249 = icmp ne i32 %248, 0
  %250 = load i32, i32* %13, align 4
  %251 = icmp eq i32 %250, 0
  %252 = and i1 %249, %251
  %253 = load i32, i32* %10, align 4
  %254 = icmp eq i32 %253, 5
  %255 = and i1 %252, %254
  %256 = load i32, i32* %11, align 4
  %257 = icmp eq i32 %256, 6
  %258 = and i1 %255, %257
  %259 = load i32, i32* %12, align 4
  %260 = icmp eq i32 %259, 5
  %261 = and i1 %258, %260
  br i1 %261, label %262, label %265

262:                                              ; preds = %240
  %263 = bitcast i8** %212 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %151, align 8
  br label %265

265:                                              ; preds = %262, %240, %230, %220, %207
  %266 = phi i1 [ false, %262 ], [ true, %230 ], [ true, %220 ], [ true, %207 ], [ true, %240 ]
  %267 = phi i8 [ 1, %262 ], [ %209, %230 ], [ %209, %220 ], [ %209, %207 ], [ %209, %240 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #18
  %268 = add nuw nsw i64 %208, 1
  br i1 %266, label %203, label %269

269:                                              ; preds = %265, %203
  %270 = and i8 %267, 1
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %293

272:                                              ; preds = %269, %200
  %273 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %274 = call fastcc zeroext i1 @_ZN2gl12_GLOBAL__N_117ValidateEglConfigEPvPKiPi(i8* %273, i32* nonnull %112, i32* nonnull %7) #18
  br i1 %274, label %275, label %295

275:                                              ; preds = %272
  %276 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %277 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %278 = bitcast %"class.gl::EGLApi"* %276 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)***
  %279 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*** %278, align 8
  %280 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %279, i64 5
  %281 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %280, align 8
  %282 = call i32 %281(%"class.gl::EGLApi"* %276, i8* %277, i32* nonnull %112, i8** nonnull %8, i32 1, i32* nonnull %7) #18
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %293

284:                                              ; preds = %275
  %285 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %285, label %286, label %291

286:                                              ; preds = %284
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %152) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 723, i32 2) #18
  %287 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %154, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i64 34) #18
  %288 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %289 = call i64 @strlen(i8* %288) #18
  %290 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %287, i8* %288, i64 %289) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %152) #18
  br label %291

291:                                              ; preds = %286, %284
  %292 = load i8*, i8** %8, align 8
  br label %295

293:                                              ; preds = %275, %269, %199
  %294 = load i8*, i8** %8, align 8
  br label %295

295:                                              ; preds = %293, %291, %272, %197
  %296 = phi i32 [ 1, %293 ], [ 1, %197 ], [ 1, %291 ], [ 3, %272 ]
  %297 = phi i8* [ %294, %293 ], [ %198, %197 ], [ %292, %291 ], [ %164, %272 ]
  call void @_ZdaPv(i8* nonnull %178) #19
  br label %298

298:                                              ; preds = %295, %163
  %299 = phi i32 [ %296, %295 ], [ 3, %163 ]
  %300 = phi i8* [ %297, %295 ], [ %164, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #18
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %130) #18
  call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %111) #18
  %301 = icmp eq i32 %299, 3
  %302 = getelementptr inbounds i32, i32* %165, i64 1
  br i1 %301, label %161, label %310

303:                                              ; preds = %161, %90
  %304 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %304, label %305, label %310

305:                                              ; preds = %303
  %306 = bitcast %"class.logging::LogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %306) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %15, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 732, i32 2) #18
  %307 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %15, i64 0, i32 2
  %308 = bitcast %"class.std::__1::basic_ostringstream"* %307 to %"class.std::__1::basic_ostream"*
  %309 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %308, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0), i64 30) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %306) #18
  br label %310

310:                                              ; preds = %298, %305, %303
  %311 = phi i8* [ null, %303 ], [ null, %305 ], [ %300, %298 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #18
  %312 = load i32*, i32** %29, align 8
  %313 = icmp eq i32* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310
  %315 = ptrtoint i32* %312 to i64
  store i64 %315, i64* %34, align 8
  %316 = bitcast i32* %312 to i8*
  call void @_ZdlPv(i8* %316) #19
  br label %317

317:                                              ; preds = %310, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #18
  store i8* %311, i8** %17, align 8
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %16) #18
  %318 = load i8*, i8** %17, align 8
  br label %319

319:                                              ; preds = %1, %317
  %320 = phi i8* [ %18, %1 ], [ %318, %317 ]
  ret i8* %320
}

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL16InitializeOneOffENS_18EGLDisplayPlatformE(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2gl12GLSurfaceEGL12initialized_E, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  tail call void @_ZN2gl9DriverEGL33InitializeClientExtensionBindingsEv(%"struct.gl::DriverEGL"* nonnull @_ZN2gl12g_driver_eglE) #18
  %6 = tail call i8* @_ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE(i64 %0, i64 %1)
  %7 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2gl9DriverEGL27InitializeExtensionBindingsEv(%"struct.gl::DriverEGL"* nonnull @_ZN2gl12g_driver_eglE) #18
  %10 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL22InitializeOneOffCommonEv()
  br label %11

11:                                               ; preds = %5, %2, %9
  %12 = phi i1 [ true, %9 ], [ true, %2 ], [ false, %5 ]
  ret i1 %12
}

declare void @_ZN2gl9DriverEGL33InitializeClientExtensionBindingsEv(%"struct.gl::DriverEGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.205", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [10 x i64], align 16
  %7 = alloca %"class.std::__1::vector.14", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.absl::optional", align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = alloca %"class.std::__1::basic_ostringstream", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %1323

18:                                               ; preds = %2
  store i64 %0, i64* getelementptr inbounds ({ i64, i32, i8 }, { i64, i32, i8 }* @_ZN2gl12_GLOBAL__N_116g_native_displayE, i64 0, i32 0), align 8
  %19 = trunc i64 %1 to i40
  store i40 %19, i40* bitcast (i32* getelementptr inbounds ({ i64, i32, i8 }, { i64, i32, i8 }* @_ZN2gl12_GLOBAL__N_116g_native_displayE, i64 0, i32 1) to i40*), align 8
  %20 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %21 = bitcast %"class.gl::EGLApi"* %20 to i8* (%"class.gl::EGLApi"*, i8*, i32)***
  %22 = load i8* (%"class.gl::EGLApi"*, i8*, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32)*** %21, align 8
  %23 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %22, i64 58
  %24 = load i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %23, align 8
  %25 = tail call i8* %24(%"class.gl::EGLApi"* %20, i8* null, i32 12373) #18
  store i8* %25, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %26 = icmp eq i8* %25, null
  %27 = select i1 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %25
  %28 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0)) #18
  br i1 %28, label %29, label %38

29:                                               ; preds = %18
  %30 = bitcast [10 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* align 16 bitcast ([10 x i64]* @__const._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE.controls to i8*), i64 80, i1 false)
  %31 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %32 = getelementptr inbounds [10 x i64], [10 x i64]* %6, i64 0, i64 0
  %33 = bitcast %"class.gl::EGLApi"* %31 to i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)***
  %34 = load i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)**, i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)*, i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)** %34, i64 17
  %36 = load i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)*, i32 (%"class.gl::EGLApi"*, void (i32, i8*, i32, i8*, i8*, i8*)*, i64*)** %35, align 8
  %37 = call i32 %36(%"class.gl::EGLApi"* %31, void (i32, i8*, i32, i8*, i8*, i8*)* nonnull @_ZN2gl12_GLOBAL__N_118LogEGLDebugMessageEjPKciPvS3_S2_, i64* nonnull %32) #18
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #18
  br label %38

38:                                               ; preds = %29, %18
  %39 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %40 = icmp eq i8* %39, null
  %41 = select i1 %40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %39
  %42 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)) #18
  br i1 %42, label %43, label %77

43:                                               ; preds = %38
  %44 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %45 = icmp eq i8* %44, null
  %46 = select i1 %45, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %44
  %47 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %46, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0)) #18
  %48 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %49 = icmp eq i8* %48, null
  %50 = select i1 %49, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %48
  %51 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %50, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0)) #18
  %52 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %53 = icmp eq i8* %52, null
  %54 = select i1 %53, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %52
  %55 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %54, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i64 0, i64 0)) #18
  %56 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %57 = icmp eq i8* %56, null
  %58 = select i1 %57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %56
  %59 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %58, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0)) #18
  %60 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %61 = icmp eq i8* %60, null
  %62 = select i1 %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %60
  %63 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %62, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i64 0, i64 0)) #18
  %64 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %65 = icmp eq i8* %64, null
  %66 = select i1 %65, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %64
  %67 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.32, i64 0, i64 0)) #18
  %68 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %69 = icmp eq i8* %68, null
  %70 = select i1 %69, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %68
  %71 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %70, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i64 0, i64 0)) #18
  %72 = or i1 %47, %51
  %73 = or i1 %72, %55
  %74 = or i1 %73, %59
  %75 = or i1 %63, %71
  %76 = or i1 %74, %75
  br label %77

77:                                               ; preds = %43, %38
  %78 = phi i1 [ false, %38 ], [ %67, %43 ]
  %79 = phi i1 [ false, %38 ], [ %71, %43 ]
  %80 = phi i1 [ false, %38 ], [ %63, %43 ]
  %81 = phi i1 [ false, %38 ], [ %59, %43 ]
  %82 = phi i1 [ false, %38 ], [ %55, %43 ]
  %83 = phi i1 [ false, %38 ], [ %51, %43 ]
  %84 = phi i1 [ false, %38 ], [ %47, %43 ]
  %85 = phi i1 [ false, %38 ], [ %76, %43 ]
  %86 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %87 = icmp eq i8* %86, null
  %88 = select i1 %87, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %86
  %89 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %88, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0)) #18
  %90 = zext i1 %89 to i8
  store i8 %90, i8* @_ZN2gl12_GLOBAL__N_137g_egl_angle_feature_control_supportedE, align 1
  %91 = bitcast %"class.std::__1::vector.14"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #18
  %92 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %7, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #18
  %94 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #18
  call void @_ZN2gl18GetEGLInitDisplaysEbbbbbbbPKN4base11CommandLineEPNSt3__16vectorINS_11DisplayTypeENS4_9allocatorIS6_EEEE(i1 zeroext %84, i1 zeroext %83, i1 zeroext %82, i1 zeroext %81, i1 zeroext %80, i1 zeroext %78, i1 zeroext %79, %"class.base::CommandLine"* %94, %"class.std::__1::vector.14"* nonnull %7)
  %95 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #18
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %99 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #18, !noalias !3
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #18, !noalias !3
  %102 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kEnableANGLEFeaturesE, i64 0, i64 0)) #18, !noalias !3
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::CommandLine"* %94, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kEnableANGLEFeaturesE, i64 0, i64 0), i64 %102) #18, !noalias !3
  %103 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1, !noalias !3
  %106 = icmp slt i8 %105, 0
  %107 = load i8*, i8** %100, align 8, !noalias !3
  %108 = select i1 %106, i8* %107, i8* %98
  %109 = load i64, i64* %101, align 8, !noalias !3
  %110 = zext i8 %105 to i64
  %111 = select i1 %106, i64 %109, i64 %110
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %8, i8* %108, i64 %111, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i64 0, i64 0), i64 3, i32 1, i32 1) #18
  %112 = load i8, i8* %104, align 1, !noalias !3
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %77
  %115 = load i8*, i8** %100, align 8, !noalias !3
  call void @_ZdlPv(i8* %115) #19
  br label %116

116:                                              ; preds = %77, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #18, !noalias !3
  %117 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #18
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %120 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %121 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #18, !noalias !6
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 24, i1 false) #18, !noalias !6
  %124 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kDisableANGLEFeaturesE, i64 0, i64 0)) #18, !noalias !6
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %94, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kDisableANGLEFeaturesE, i64 0, i64 0), i64 %124) #18, !noalias !6
  %125 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1, !noalias !6
  %128 = icmp slt i8 %127, 0
  %129 = load i8*, i8** %122, align 8, !noalias !6
  %130 = select i1 %128, i8* %129, i8* %120
  %131 = load i64, i64* %123, align 8, !noalias !6
  %132 = zext i8 %127 to i64
  %133 = select i1 %128, i64 %131, i64 %132
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %9, i8* %130, i64 %133, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i64 0, i64 0), i64 3, i32 1, i32 1) #18
  %134 = load i8, i8* %126, align 1, !noalias !6
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %116
  %137 = load i8*, i8** %122, align 8, !noalias !6
  call void @_ZdlPv(i8* %137) #19
  br label %138

138:                                              ; preds = %116, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #18, !noalias !6
  %139 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %94, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches31kDisableGpuDriverBugWorkaroundsE, i64 0, i64 0)) #18
  %140 = bitcast i32** %93 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.14"* %7 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %141, %143
  br i1 %144, label %1267, label %145

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::vector.205"* %3 to i8*
  %147 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %3, i64 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %3, i64 0, i32 0, i32 1
  %149 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast i64** %148 to i64*
  %151 = bitcast %"class.std::__1::vector.205"* %3 to i64*
  %152 = bitcast i64** %149 to i64*
  %153 = bitcast %"class.logging::LogMessage"* %10 to i8*
  %154 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %155 = bitcast %"class.std::__1::basic_ostringstream"* %154 to %"class.std::__1::basic_ostream"*
  %156 = bitcast %"class.logging::LogMessage"* %11 to i8*
  %157 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %158 = bitcast %"class.std::__1::basic_ostringstream"* %157 to %"class.std::__1::basic_ostream"*
  %159 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %162 = bitcast i8* %160 to %"class.ui::ScopedUnsetDisplay"*
  %163 = bitcast %"class.logging::LogMessage"* %13 to i8*
  %164 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %165 = bitcast %"class.std::__1::basic_ostringstream"* %164 to %"class.std::__1::basic_ostream"*
  %166 = bitcast %"class.absl::optional"* %12 to i64*
  br label %167

167:                                              ; preds = %145, %1141
  %168 = phi i64 [ %143, %145 ], [ %1144, %1141 ]
  %169 = phi i64 [ 0, %145 ], [ %1142, %1141 ]
  %170 = inttoptr i64 %168 to i32*
  %171 = getelementptr inbounds i32, i32* %170, i64 %169
  %172 = load i32, i32* %171, align 4
  %173 = load i64, i64* getelementptr inbounds ({ i64, i32, i8 }, { i64, i32, i8 }* @_ZN2gl12_GLOBAL__N_116g_native_displayE, i64 0, i32 0), align 8
  %174 = load i64, i64* bitcast (i32* getelementptr inbounds ({ i64, i32, i8 }, { i64, i32, i8 }* @_ZN2gl12_GLOBAL__N_116g_native_displayE, i64 0, i32 1) to i64*), align 8
  %175 = trunc i64 %174 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 0, i64 24, i1 false) #18
  br i1 %139, label %176, label %183

176:                                              ; preds = %167
  %177 = call i8* @_Znwm(i64 16) #19
  %178 = getelementptr inbounds i8, i8* %177, i64 16
  %179 = bitcast i8* %178 to i64*
  %180 = ptrtoint i8* %178 to i64
  %181 = ptrtoint i8* %177 to i64
  %182 = bitcast i8* %177 to <2 x i64>*
  store <2 x i64> <i64 13417, i64 1>, <2 x i64>* %182, align 8
  store i64 %181, i64* %151, align 8
  store i64 %180, i64* %150, align 8
  store i64 %180, i64* %152, align 8
  br label %183

183:                                              ; preds = %176, %167
  %184 = phi i64* [ %179, %176 ], [ null, %167 ]
  %185 = phi i64 [ %180, %176 ], [ 0, %167 ]
  switch i32 %172, label %1062 [
    i32 0, label %186
    i32 1, label %186
    i32 3, label %202
    i32 4, label %204
    i32 8, label %206
    i32 5, label %300
    i32 15, label %302
    i32 9, label %396
    i32 6, label %490
    i32 16, label %492
    i32 10, label %586
    i32 7, label %680
    i32 11, label %682
    i32 12, label %684
    i32 13, label %778
    i32 14, label %872
    i32 17, label %966
    i32 18, label %968
  ]

186:                                              ; preds = %183, %183
  %187 = icmp eq i32 %175, 0
  %188 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  br i1 %187, label %196, label %189

189:                                              ; preds = %186
  %190 = inttoptr i64 %173 to i8*
  %191 = bitcast %"class.gl::EGLApi"* %188 to i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)***
  %192 = load i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)**, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*** %191, align 8
  %193 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)** %192, i64 40
  %194 = load i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)** %193, align 8
  %195 = call i8* %194(%"class.gl::EGLApi"* %188, i32 %175, i8* %190, i64* null) #18
  br label %1062

196:                                              ; preds = %186
  %197 = bitcast %"class.gl::EGLApi"* %188 to i8* (%"class.gl::EGLApi"*, i64)***
  %198 = load i8* (%"class.gl::EGLApi"*, i64)**, i8* (%"class.gl::EGLApi"*, i64)*** %197, align 8
  %199 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i64)*, i8* (%"class.gl::EGLApi"*, i64)** %198, i64 33
  %200 = load i8* (%"class.gl::EGLApi"*, i64)*, i8* (%"class.gl::EGLApi"*, i64)** %199, align 8
  %201 = call i8* %200(%"class.gl::EGLApi"* %188, i64 %173) #18
  br label %1062

202:                                              ; preds = %183
  %203 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12807, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

204:                                              ; preds = %183
  %205 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12808, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

206:                                              ; preds = %183
  %207 = ptrtoint i64* %184 to i64
  %208 = load i64, i64* %151, align 8
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 3
  %211 = add nsw i64 %210, 1
  %212 = icmp ugt i64 %211, 2305843009213693951
  br i1 %212, label %213, label %215

213:                                              ; preds = %206
  %214 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %214) #20
  unreachable

215:                                              ; preds = %206
  %216 = icmp ult i64 %210, 1152921504606846975
  br i1 %216, label %217, label %225

217:                                              ; preds = %215
  %218 = ashr exact i64 %209, 2
  %219 = icmp ult i64 %218, %211
  %220 = select i1 %219, i64 %211, i64 %218
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %217
  %223 = icmp ugt i64 %220, 2305843009213693951
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  call void @abort() #20
  unreachable

225:                                              ; preds = %222, %215
  %226 = phi i64 [ %220, %222 ], [ 2305843009213693951, %215 ]
  %227 = shl i64 %226, 3
  %228 = call i8* @_Znwm(i64 %227) #19
  %229 = bitcast i8* %228 to i64*
  br label %230

230:                                              ; preds = %225, %217
  %231 = phi i64 [ %226, %225 ], [ 0, %217 ]
  %232 = phi i64* [ %229, %225 ], [ null, %217 ]
  %233 = getelementptr inbounds i64, i64* %232, i64 %210
  %234 = getelementptr inbounds i64, i64* %232, i64 %231
  %235 = ptrtoint i64* %234 to i64
  store i64 12809, i64* %233, align 8
  %236 = getelementptr inbounds i64, i64* %233, i64 1
  %237 = ptrtoint i64* %236 to i64
  %238 = sub i64 %185, %208
  %239 = ashr exact i64 %238, 3
  %240 = sub nsw i64 0, %239
  %241 = getelementptr inbounds i64, i64* %233, i64 %240
  %242 = ptrtoint i64* %241 to i64
  %243 = icmp sgt i64 %238, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %230
  %245 = bitcast i64* %241 to i8*
  %246 = inttoptr i64 %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %246, i64 %238, i1 false) #18
  br label %247

247:                                              ; preds = %244, %230
  store i64 %242, i64* %151, align 8
  store i64 %237, i64* %150, align 8
  store i64 %235, i64* %152, align 8
  %248 = icmp eq i64 %208, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %247
  %250 = inttoptr i64 %208 to i8*
  call void @_ZdlPv(i8* %250) #19
  br label %251

251:                                              ; preds = %249, %247
  %252 = icmp ult i64* %236, %234
  br i1 %252, label %253, label %256

253:                                              ; preds = %251
  store i64 13406, i64* %236, align 8
  %254 = getelementptr inbounds i64, i64* %236, i64 1
  %255 = ptrtoint i64* %254 to i64
  store i64 %255, i64* %150, align 8
  br label %298

256:                                              ; preds = %251
  %257 = load i64, i64* %151, align 8
  %258 = sub i64 %237, %257
  %259 = ashr exact i64 %258, 3
  %260 = add nsw i64 %259, 1
  %261 = icmp ugt i64 %260, 2305843009213693951
  br i1 %261, label %262, label %264

262:                                              ; preds = %256
  %263 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %263) #20
  unreachable

264:                                              ; preds = %256
  %265 = sub i64 %235, %257
  %266 = ashr exact i64 %265, 3
  %267 = icmp ult i64 %266, 1152921504606846975
  br i1 %267, label %268, label %276

268:                                              ; preds = %264
  %269 = ashr exact i64 %265, 2
  %270 = icmp ult i64 %269, %260
  %271 = select i1 %270, i64 %260, i64 %269
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %281, label %273

273:                                              ; preds = %268
  %274 = icmp ugt i64 %271, 2305843009213693951
  br i1 %274, label %275, label %276

275:                                              ; preds = %273
  call void @abort() #20
  unreachable

276:                                              ; preds = %273, %264
  %277 = phi i64 [ %271, %273 ], [ 2305843009213693951, %264 ]
  %278 = shl i64 %277, 3
  %279 = call i8* @_Znwm(i64 %278) #19
  %280 = bitcast i8* %279 to i64*
  br label %281

281:                                              ; preds = %276, %268
  %282 = phi i64 [ %277, %276 ], [ 0, %268 ]
  %283 = phi i8* [ %279, %276 ], [ null, %268 ]
  %284 = phi i64* [ %280, %276 ], [ null, %268 ]
  %285 = getelementptr inbounds i64, i64* %284, i64 %259
  %286 = getelementptr inbounds i64, i64* %284, i64 %282
  %287 = ptrtoint i64* %286 to i64
  store i64 13406, i64* %285, align 8
  %288 = getelementptr inbounds i64, i64* %285, i64 1
  %289 = ptrtoint i64* %288 to i64
  %290 = ptrtoint i64* %284 to i64
  %291 = icmp sgt i64 %258, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %281
  %293 = inttoptr i64 %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %293, i64 %258, i1 false) #18
  br label %294

294:                                              ; preds = %292, %281
  store i64 %290, i64* %151, align 8
  store i64 %289, i64* %150, align 8
  store i64 %287, i64* %152, align 8
  %295 = icmp eq i64 %257, 0
  br i1 %295, label %298, label %296

296:                                              ; preds = %294
  %297 = inttoptr i64 %257 to i8*
  call void @_ZdlPv(i8* %297) #19
  br label %298

298:                                              ; preds = %296, %294, %253
  %299 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12808, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

300:                                              ; preds = %183
  %301 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12813, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

302:                                              ; preds = %183
  %303 = ptrtoint i64* %184 to i64
  %304 = load i64, i64* %151, align 8
  %305 = sub i64 %303, %304
  %306 = ashr exact i64 %305, 3
  %307 = add nsw i64 %306, 1
  %308 = icmp ugt i64 %307, 2305843009213693951
  br i1 %308, label %309, label %311

309:                                              ; preds = %302
  %310 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %310) #20
  unreachable

311:                                              ; preds = %302
  %312 = icmp ult i64 %306, 1152921504606846975
  br i1 %312, label %313, label %321

313:                                              ; preds = %311
  %314 = ashr exact i64 %305, 2
  %315 = icmp ult i64 %314, %307
  %316 = select i1 %315, i64 %307, i64 %314
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %326, label %318

318:                                              ; preds = %313
  %319 = icmp ugt i64 %316, 2305843009213693951
  br i1 %319, label %320, label %321

320:                                              ; preds = %318
  call void @abort() #20
  unreachable

321:                                              ; preds = %318, %311
  %322 = phi i64 [ %316, %318 ], [ 2305843009213693951, %311 ]
  %323 = shl i64 %322, 3
  %324 = call i8* @_Znwm(i64 %323) #19
  %325 = bitcast i8* %324 to i64*
  br label %326

326:                                              ; preds = %321, %313
  %327 = phi i64 [ %322, %321 ], [ 0, %313 ]
  %328 = phi i64* [ %325, %321 ], [ null, %313 ]
  %329 = getelementptr inbounds i64, i64* %328, i64 %306
  %330 = getelementptr inbounds i64, i64* %328, i64 %327
  %331 = ptrtoint i64* %330 to i64
  store i64 12809, i64* %329, align 8
  %332 = getelementptr inbounds i64, i64* %329, i64 1
  %333 = ptrtoint i64* %332 to i64
  %334 = sub i64 %185, %304
  %335 = ashr exact i64 %334, 3
  %336 = sub nsw i64 0, %335
  %337 = getelementptr inbounds i64, i64* %329, i64 %336
  %338 = ptrtoint i64* %337 to i64
  %339 = icmp sgt i64 %334, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %326
  %341 = bitcast i64* %337 to i8*
  %342 = inttoptr i64 %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 8 %342, i64 %334, i1 false) #18
  br label %343

343:                                              ; preds = %340, %326
  store i64 %338, i64* %151, align 8
  store i64 %333, i64* %150, align 8
  store i64 %331, i64* %152, align 8
  %344 = icmp eq i64 %304, 0
  br i1 %344, label %347, label %345

345:                                              ; preds = %343
  %346 = inttoptr i64 %304 to i8*
  call void @_ZdlPv(i8* %346) #19
  br label %347

347:                                              ; preds = %345, %343
  %348 = icmp ult i64* %332, %330
  br i1 %348, label %349, label %352

349:                                              ; preds = %347
  store i64 13454, i64* %332, align 8
  %350 = getelementptr inbounds i64, i64* %332, i64 1
  %351 = ptrtoint i64* %350 to i64
  store i64 %351, i64* %150, align 8
  br label %394

352:                                              ; preds = %347
  %353 = load i64, i64* %151, align 8
  %354 = sub i64 %333, %353
  %355 = ashr exact i64 %354, 3
  %356 = add nsw i64 %355, 1
  %357 = icmp ugt i64 %356, 2305843009213693951
  br i1 %357, label %358, label %360

358:                                              ; preds = %352
  %359 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %359) #20
  unreachable

360:                                              ; preds = %352
  %361 = sub i64 %331, %353
  %362 = ashr exact i64 %361, 3
  %363 = icmp ult i64 %362, 1152921504606846975
  br i1 %363, label %364, label %372

364:                                              ; preds = %360
  %365 = ashr exact i64 %361, 2
  %366 = icmp ult i64 %365, %356
  %367 = select i1 %366, i64 %356, i64 %365
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %377, label %369

369:                                              ; preds = %364
  %370 = icmp ugt i64 %367, 2305843009213693951
  br i1 %370, label %371, label %372

371:                                              ; preds = %369
  call void @abort() #20
  unreachable

372:                                              ; preds = %369, %360
  %373 = phi i64 [ %367, %369 ], [ 2305843009213693951, %360 ]
  %374 = shl i64 %373, 3
  %375 = call i8* @_Znwm(i64 %374) #19
  %376 = bitcast i8* %375 to i64*
  br label %377

377:                                              ; preds = %372, %364
  %378 = phi i64 [ %373, %372 ], [ 0, %364 ]
  %379 = phi i8* [ %375, %372 ], [ null, %364 ]
  %380 = phi i64* [ %376, %372 ], [ null, %364 ]
  %381 = getelementptr inbounds i64, i64* %380, i64 %355
  %382 = getelementptr inbounds i64, i64* %380, i64 %378
  %383 = ptrtoint i64* %382 to i64
  store i64 13454, i64* %381, align 8
  %384 = getelementptr inbounds i64, i64* %381, i64 1
  %385 = ptrtoint i64* %384 to i64
  %386 = ptrtoint i64* %380 to i64
  %387 = icmp sgt i64 %354, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %377
  %389 = inttoptr i64 %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %379, i8* align 8 %389, i64 %354, i1 false) #18
  br label %390

390:                                              ; preds = %388, %377
  store i64 %386, i64* %151, align 8
  store i64 %385, i64* %150, align 8
  store i64 %383, i64* %152, align 8
  %391 = icmp eq i64 %353, 0
  br i1 %391, label %394, label %392

392:                                              ; preds = %390
  %393 = inttoptr i64 %353 to i8*
  call void @_ZdlPv(i8* %393) #19
  br label %394

394:                                              ; preds = %392, %390, %349
  %395 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12813, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

396:                                              ; preds = %183
  %397 = ptrtoint i64* %184 to i64
  %398 = load i64, i64* %151, align 8
  %399 = sub i64 %397, %398
  %400 = ashr exact i64 %399, 3
  %401 = add nsw i64 %400, 1
  %402 = icmp ugt i64 %401, 2305843009213693951
  br i1 %402, label %403, label %405

403:                                              ; preds = %396
  %404 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %404) #20
  unreachable

405:                                              ; preds = %396
  %406 = icmp ult i64 %400, 1152921504606846975
  br i1 %406, label %407, label %415

407:                                              ; preds = %405
  %408 = ashr exact i64 %399, 2
  %409 = icmp ult i64 %408, %401
  %410 = select i1 %409, i64 %401, i64 %408
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %407
  %413 = icmp ugt i64 %410, 2305843009213693951
  br i1 %413, label %414, label %415

414:                                              ; preds = %412
  call void @abort() #20
  unreachable

415:                                              ; preds = %412, %405
  %416 = phi i64 [ %410, %412 ], [ 2305843009213693951, %405 ]
  %417 = shl i64 %416, 3
  %418 = call i8* @_Znwm(i64 %417) #19
  %419 = bitcast i8* %418 to i64*
  br label %420

420:                                              ; preds = %415, %407
  %421 = phi i64 [ %416, %415 ], [ 0, %407 ]
  %422 = phi i64* [ %419, %415 ], [ null, %407 ]
  %423 = getelementptr inbounds i64, i64* %422, i64 %400
  %424 = getelementptr inbounds i64, i64* %422, i64 %421
  %425 = ptrtoint i64* %424 to i64
  store i64 12809, i64* %423, align 8
  %426 = getelementptr inbounds i64, i64* %423, i64 1
  %427 = ptrtoint i64* %426 to i64
  %428 = sub i64 %185, %398
  %429 = ashr exact i64 %428, 3
  %430 = sub nsw i64 0, %429
  %431 = getelementptr inbounds i64, i64* %423, i64 %430
  %432 = ptrtoint i64* %431 to i64
  %433 = icmp sgt i64 %428, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %420
  %435 = bitcast i64* %431 to i8*
  %436 = inttoptr i64 %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %435, i8* align 8 %436, i64 %428, i1 false) #18
  br label %437

437:                                              ; preds = %434, %420
  store i64 %432, i64* %151, align 8
  store i64 %427, i64* %150, align 8
  store i64 %425, i64* %152, align 8
  %438 = icmp eq i64 %398, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %437
  %440 = inttoptr i64 %398 to i8*
  call void @_ZdlPv(i8* %440) #19
  br label %441

441:                                              ; preds = %439, %437
  %442 = icmp ult i64* %426, %424
  br i1 %442, label %443, label %446

443:                                              ; preds = %441
  store i64 13406, i64* %426, align 8
  %444 = getelementptr inbounds i64, i64* %426, i64 1
  %445 = ptrtoint i64* %444 to i64
  store i64 %445, i64* %150, align 8
  br label %488

446:                                              ; preds = %441
  %447 = load i64, i64* %151, align 8
  %448 = sub i64 %427, %447
  %449 = ashr exact i64 %448, 3
  %450 = add nsw i64 %449, 1
  %451 = icmp ugt i64 %450, 2305843009213693951
  br i1 %451, label %452, label %454

452:                                              ; preds = %446
  %453 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %453) #20
  unreachable

454:                                              ; preds = %446
  %455 = sub i64 %425, %447
  %456 = ashr exact i64 %455, 3
  %457 = icmp ult i64 %456, 1152921504606846975
  br i1 %457, label %458, label %466

458:                                              ; preds = %454
  %459 = ashr exact i64 %455, 2
  %460 = icmp ult i64 %459, %450
  %461 = select i1 %460, i64 %450, i64 %459
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %471, label %463

463:                                              ; preds = %458
  %464 = icmp ugt i64 %461, 2305843009213693951
  br i1 %464, label %465, label %466

465:                                              ; preds = %463
  call void @abort() #20
  unreachable

466:                                              ; preds = %463, %454
  %467 = phi i64 [ %461, %463 ], [ 2305843009213693951, %454 ]
  %468 = shl i64 %467, 3
  %469 = call i8* @_Znwm(i64 %468) #19
  %470 = bitcast i8* %469 to i64*
  br label %471

471:                                              ; preds = %466, %458
  %472 = phi i64 [ %467, %466 ], [ 0, %458 ]
  %473 = phi i8* [ %469, %466 ], [ null, %458 ]
  %474 = phi i64* [ %470, %466 ], [ null, %458 ]
  %475 = getelementptr inbounds i64, i64* %474, i64 %449
  %476 = getelementptr inbounds i64, i64* %474, i64 %472
  %477 = ptrtoint i64* %476 to i64
  store i64 13406, i64* %475, align 8
  %478 = getelementptr inbounds i64, i64* %475, i64 1
  %479 = ptrtoint i64* %478 to i64
  %480 = ptrtoint i64* %474 to i64
  %481 = icmp sgt i64 %448, 0
  br i1 %481, label %482, label %484

482:                                              ; preds = %471
  %483 = inttoptr i64 %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %483, i64 %448, i1 false) #18
  br label %484

484:                                              ; preds = %482, %471
  store i64 %480, i64* %151, align 8
  store i64 %479, i64* %150, align 8
  store i64 %477, i64* %152, align 8
  %485 = icmp eq i64 %447, 0
  br i1 %485, label %488, label %486

486:                                              ; preds = %484
  %487 = inttoptr i64 %447 to i8*
  call void @_ZdlPv(i8* %487) #19
  br label %488

488:                                              ; preds = %486, %484, %443
  %489 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12813, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

490:                                              ; preds = %183
  %491 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12814, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

492:                                              ; preds = %183
  %493 = ptrtoint i64* %184 to i64
  %494 = load i64, i64* %151, align 8
  %495 = sub i64 %493, %494
  %496 = ashr exact i64 %495, 3
  %497 = add nsw i64 %496, 1
  %498 = icmp ugt i64 %497, 2305843009213693951
  br i1 %498, label %499, label %501

499:                                              ; preds = %492
  %500 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %500) #20
  unreachable

501:                                              ; preds = %492
  %502 = icmp ult i64 %496, 1152921504606846975
  br i1 %502, label %503, label %511

503:                                              ; preds = %501
  %504 = ashr exact i64 %495, 2
  %505 = icmp ult i64 %504, %497
  %506 = select i1 %505, i64 %497, i64 %504
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %516, label %508

508:                                              ; preds = %503
  %509 = icmp ugt i64 %506, 2305843009213693951
  br i1 %509, label %510, label %511

510:                                              ; preds = %508
  call void @abort() #20
  unreachable

511:                                              ; preds = %508, %501
  %512 = phi i64 [ %506, %508 ], [ 2305843009213693951, %501 ]
  %513 = shl i64 %512, 3
  %514 = call i8* @_Znwm(i64 %513) #19
  %515 = bitcast i8* %514 to i64*
  br label %516

516:                                              ; preds = %511, %503
  %517 = phi i64 [ %512, %511 ], [ 0, %503 ]
  %518 = phi i64* [ %515, %511 ], [ null, %503 ]
  %519 = getelementptr inbounds i64, i64* %518, i64 %496
  %520 = getelementptr inbounds i64, i64* %518, i64 %517
  %521 = ptrtoint i64* %520 to i64
  store i64 12809, i64* %519, align 8
  %522 = getelementptr inbounds i64, i64* %519, i64 1
  %523 = ptrtoint i64* %522 to i64
  %524 = sub i64 %185, %494
  %525 = ashr exact i64 %524, 3
  %526 = sub nsw i64 0, %525
  %527 = getelementptr inbounds i64, i64* %519, i64 %526
  %528 = ptrtoint i64* %527 to i64
  %529 = icmp sgt i64 %524, 0
  br i1 %529, label %530, label %533

530:                                              ; preds = %516
  %531 = bitcast i64* %527 to i8*
  %532 = inttoptr i64 %494 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %531, i8* align 8 %532, i64 %524, i1 false) #18
  br label %533

533:                                              ; preds = %530, %516
  store i64 %528, i64* %151, align 8
  store i64 %523, i64* %150, align 8
  store i64 %521, i64* %152, align 8
  %534 = icmp eq i64 %494, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %533
  %536 = inttoptr i64 %494 to i8*
  call void @_ZdlPv(i8* %536) #19
  br label %537

537:                                              ; preds = %535, %533
  %538 = icmp ult i64* %522, %520
  br i1 %538, label %539, label %542

539:                                              ; preds = %537
  store i64 13454, i64* %522, align 8
  %540 = getelementptr inbounds i64, i64* %522, i64 1
  %541 = ptrtoint i64* %540 to i64
  store i64 %541, i64* %150, align 8
  br label %584

542:                                              ; preds = %537
  %543 = load i64, i64* %151, align 8
  %544 = sub i64 %523, %543
  %545 = ashr exact i64 %544, 3
  %546 = add nsw i64 %545, 1
  %547 = icmp ugt i64 %546, 2305843009213693951
  br i1 %547, label %548, label %550

548:                                              ; preds = %542
  %549 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %549) #20
  unreachable

550:                                              ; preds = %542
  %551 = sub i64 %521, %543
  %552 = ashr exact i64 %551, 3
  %553 = icmp ult i64 %552, 1152921504606846975
  br i1 %553, label %554, label %562

554:                                              ; preds = %550
  %555 = ashr exact i64 %551, 2
  %556 = icmp ult i64 %555, %546
  %557 = select i1 %556, i64 %546, i64 %555
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %567, label %559

559:                                              ; preds = %554
  %560 = icmp ugt i64 %557, 2305843009213693951
  br i1 %560, label %561, label %562

561:                                              ; preds = %559
  call void @abort() #20
  unreachable

562:                                              ; preds = %559, %550
  %563 = phi i64 [ %557, %559 ], [ 2305843009213693951, %550 ]
  %564 = shl i64 %563, 3
  %565 = call i8* @_Znwm(i64 %564) #19
  %566 = bitcast i8* %565 to i64*
  br label %567

567:                                              ; preds = %562, %554
  %568 = phi i64 [ %563, %562 ], [ 0, %554 ]
  %569 = phi i8* [ %565, %562 ], [ null, %554 ]
  %570 = phi i64* [ %566, %562 ], [ null, %554 ]
  %571 = getelementptr inbounds i64, i64* %570, i64 %545
  %572 = getelementptr inbounds i64, i64* %570, i64 %568
  %573 = ptrtoint i64* %572 to i64
  store i64 13454, i64* %571, align 8
  %574 = getelementptr inbounds i64, i64* %571, i64 1
  %575 = ptrtoint i64* %574 to i64
  %576 = ptrtoint i64* %570 to i64
  %577 = icmp sgt i64 %544, 0
  br i1 %577, label %578, label %580

578:                                              ; preds = %567
  %579 = inttoptr i64 %543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %569, i8* align 8 %579, i64 %544, i1 false) #18
  br label %580

580:                                              ; preds = %578, %567
  store i64 %576, i64* %151, align 8
  store i64 %575, i64* %150, align 8
  store i64 %573, i64* %152, align 8
  %581 = icmp eq i64 %543, 0
  br i1 %581, label %584, label %582

582:                                              ; preds = %580
  %583 = inttoptr i64 %543 to i8*
  call void @_ZdlPv(i8* %583) #19
  br label %584

584:                                              ; preds = %582, %580, %539
  %585 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12814, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

586:                                              ; preds = %183
  %587 = ptrtoint i64* %184 to i64
  %588 = load i64, i64* %151, align 8
  %589 = sub i64 %587, %588
  %590 = ashr exact i64 %589, 3
  %591 = add nsw i64 %590, 1
  %592 = icmp ugt i64 %591, 2305843009213693951
  br i1 %592, label %593, label %595

593:                                              ; preds = %586
  %594 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %594) #20
  unreachable

595:                                              ; preds = %586
  %596 = icmp ult i64 %590, 1152921504606846975
  br i1 %596, label %597, label %605

597:                                              ; preds = %595
  %598 = ashr exact i64 %589, 2
  %599 = icmp ult i64 %598, %591
  %600 = select i1 %599, i64 %591, i64 %598
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %610, label %602

602:                                              ; preds = %597
  %603 = icmp ugt i64 %600, 2305843009213693951
  br i1 %603, label %604, label %605

604:                                              ; preds = %602
  call void @abort() #20
  unreachable

605:                                              ; preds = %602, %595
  %606 = phi i64 [ %600, %602 ], [ 2305843009213693951, %595 ]
  %607 = shl i64 %606, 3
  %608 = call i8* @_Znwm(i64 %607) #19
  %609 = bitcast i8* %608 to i64*
  br label %610

610:                                              ; preds = %605, %597
  %611 = phi i64 [ %606, %605 ], [ 0, %597 ]
  %612 = phi i64* [ %609, %605 ], [ null, %597 ]
  %613 = getelementptr inbounds i64, i64* %612, i64 %590
  %614 = getelementptr inbounds i64, i64* %612, i64 %611
  %615 = ptrtoint i64* %614 to i64
  store i64 12809, i64* %613, align 8
  %616 = getelementptr inbounds i64, i64* %613, i64 1
  %617 = ptrtoint i64* %616 to i64
  %618 = sub i64 %185, %588
  %619 = ashr exact i64 %618, 3
  %620 = sub nsw i64 0, %619
  %621 = getelementptr inbounds i64, i64* %613, i64 %620
  %622 = ptrtoint i64* %621 to i64
  %623 = icmp sgt i64 %618, 0
  br i1 %623, label %624, label %627

624:                                              ; preds = %610
  %625 = bitcast i64* %621 to i8*
  %626 = inttoptr i64 %588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %625, i8* align 8 %626, i64 %618, i1 false) #18
  br label %627

627:                                              ; preds = %624, %610
  store i64 %622, i64* %151, align 8
  store i64 %617, i64* %150, align 8
  store i64 %615, i64* %152, align 8
  %628 = icmp eq i64 %588, 0
  br i1 %628, label %631, label %629

629:                                              ; preds = %627
  %630 = inttoptr i64 %588 to i8*
  call void @_ZdlPv(i8* %630) #19
  br label %631

631:                                              ; preds = %629, %627
  %632 = icmp ult i64* %616, %614
  br i1 %632, label %633, label %636

633:                                              ; preds = %631
  store i64 13406, i64* %616, align 8
  %634 = getelementptr inbounds i64, i64* %616, i64 1
  %635 = ptrtoint i64* %634 to i64
  store i64 %635, i64* %150, align 8
  br label %678

636:                                              ; preds = %631
  %637 = load i64, i64* %151, align 8
  %638 = sub i64 %617, %637
  %639 = ashr exact i64 %638, 3
  %640 = add nsw i64 %639, 1
  %641 = icmp ugt i64 %640, 2305843009213693951
  br i1 %641, label %642, label %644

642:                                              ; preds = %636
  %643 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %643) #20
  unreachable

644:                                              ; preds = %636
  %645 = sub i64 %615, %637
  %646 = ashr exact i64 %645, 3
  %647 = icmp ult i64 %646, 1152921504606846975
  br i1 %647, label %648, label %656

648:                                              ; preds = %644
  %649 = ashr exact i64 %645, 2
  %650 = icmp ult i64 %649, %640
  %651 = select i1 %650, i64 %640, i64 %649
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %661, label %653

653:                                              ; preds = %648
  %654 = icmp ugt i64 %651, 2305843009213693951
  br i1 %654, label %655, label %656

655:                                              ; preds = %653
  call void @abort() #20
  unreachable

656:                                              ; preds = %653, %644
  %657 = phi i64 [ %651, %653 ], [ 2305843009213693951, %644 ]
  %658 = shl i64 %657, 3
  %659 = call i8* @_Znwm(i64 %658) #19
  %660 = bitcast i8* %659 to i64*
  br label %661

661:                                              ; preds = %656, %648
  %662 = phi i64 [ %657, %656 ], [ 0, %648 ]
  %663 = phi i8* [ %659, %656 ], [ null, %648 ]
  %664 = phi i64* [ %660, %656 ], [ null, %648 ]
  %665 = getelementptr inbounds i64, i64* %664, i64 %639
  %666 = getelementptr inbounds i64, i64* %664, i64 %662
  %667 = ptrtoint i64* %666 to i64
  store i64 13406, i64* %665, align 8
  %668 = getelementptr inbounds i64, i64* %665, i64 1
  %669 = ptrtoint i64* %668 to i64
  %670 = ptrtoint i64* %664 to i64
  %671 = icmp sgt i64 %638, 0
  br i1 %671, label %672, label %674

672:                                              ; preds = %661
  %673 = inttoptr i64 %637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %663, i8* align 8 %673, i64 %638, i1 false) #18
  br label %674

674:                                              ; preds = %672, %661
  store i64 %670, i64* %151, align 8
  store i64 %669, i64* %150, align 8
  store i64 %667, i64* %152, align 8
  %675 = icmp eq i64 %637, 0
  br i1 %675, label %678, label %676

676:                                              ; preds = %674
  %677 = inttoptr i64 %637 to i8*
  call void @_ZdlPv(i8* %677) #19
  br label %678

678:                                              ; preds = %676, %674, %633
  %679 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12814, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

680:                                              ; preds = %183
  %681 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13230, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

682:                                              ; preds = %183
  %683 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13392, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

684:                                              ; preds = %183
  %685 = ptrtoint i64* %184 to i64
  %686 = load i64, i64* %151, align 8
  %687 = sub i64 %685, %686
  %688 = ashr exact i64 %687, 3
  %689 = add nsw i64 %688, 1
  %690 = icmp ugt i64 %689, 2305843009213693951
  br i1 %690, label %691, label %693

691:                                              ; preds = %684
  %692 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %692) #20
  unreachable

693:                                              ; preds = %684
  %694 = icmp ult i64 %688, 1152921504606846975
  br i1 %694, label %695, label %703

695:                                              ; preds = %693
  %696 = ashr exact i64 %687, 2
  %697 = icmp ult i64 %696, %689
  %698 = select i1 %697, i64 %689, i64 %696
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %708, label %700

700:                                              ; preds = %695
  %701 = icmp ugt i64 %698, 2305843009213693951
  br i1 %701, label %702, label %703

702:                                              ; preds = %700
  call void @abort() #20
  unreachable

703:                                              ; preds = %700, %693
  %704 = phi i64 [ %698, %700 ], [ 2305843009213693951, %693 ]
  %705 = shl i64 %704, 3
  %706 = call i8* @_Znwm(i64 %705) #19
  %707 = bitcast i8* %706 to i64*
  br label %708

708:                                              ; preds = %703, %695
  %709 = phi i64 [ %704, %703 ], [ 0, %695 ]
  %710 = phi i64* [ %707, %703 ], [ null, %695 ]
  %711 = getelementptr inbounds i64, i64* %710, i64 %688
  %712 = getelementptr inbounds i64, i64* %710, i64 %709
  %713 = ptrtoint i64* %712 to i64
  store i64 12809, i64* %711, align 8
  %714 = getelementptr inbounds i64, i64* %711, i64 1
  %715 = ptrtoint i64* %714 to i64
  %716 = sub i64 %185, %686
  %717 = ashr exact i64 %716, 3
  %718 = sub nsw i64 0, %717
  %719 = getelementptr inbounds i64, i64* %711, i64 %718
  %720 = ptrtoint i64* %719 to i64
  %721 = icmp sgt i64 %716, 0
  br i1 %721, label %722, label %725

722:                                              ; preds = %708
  %723 = bitcast i64* %719 to i8*
  %724 = inttoptr i64 %686 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %723, i8* align 8 %724, i64 %716, i1 false) #18
  br label %725

725:                                              ; preds = %722, %708
  store i64 %720, i64* %151, align 8
  store i64 %715, i64* %150, align 8
  store i64 %713, i64* %152, align 8
  %726 = icmp eq i64 %686, 0
  br i1 %726, label %729, label %727

727:                                              ; preds = %725
  %728 = inttoptr i64 %686 to i8*
  call void @_ZdlPv(i8* %728) #19
  br label %729

729:                                              ; preds = %727, %725
  %730 = icmp ult i64* %714, %712
  br i1 %730, label %731, label %734

731:                                              ; preds = %729
  store i64 13406, i64* %714, align 8
  %732 = getelementptr inbounds i64, i64* %714, i64 1
  %733 = ptrtoint i64* %732 to i64
  store i64 %733, i64* %150, align 8
  br label %776

734:                                              ; preds = %729
  %735 = load i64, i64* %151, align 8
  %736 = sub i64 %715, %735
  %737 = ashr exact i64 %736, 3
  %738 = add nsw i64 %737, 1
  %739 = icmp ugt i64 %738, 2305843009213693951
  br i1 %739, label %740, label %742

740:                                              ; preds = %734
  %741 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %741) #20
  unreachable

742:                                              ; preds = %734
  %743 = sub i64 %713, %735
  %744 = ashr exact i64 %743, 3
  %745 = icmp ult i64 %744, 1152921504606846975
  br i1 %745, label %746, label %754

746:                                              ; preds = %742
  %747 = ashr exact i64 %743, 2
  %748 = icmp ult i64 %747, %738
  %749 = select i1 %748, i64 %738, i64 %747
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %759, label %751

751:                                              ; preds = %746
  %752 = icmp ugt i64 %749, 2305843009213693951
  br i1 %752, label %753, label %754

753:                                              ; preds = %751
  call void @abort() #20
  unreachable

754:                                              ; preds = %751, %742
  %755 = phi i64 [ %749, %751 ], [ 2305843009213693951, %742 ]
  %756 = shl i64 %755, 3
  %757 = call i8* @_Znwm(i64 %756) #19
  %758 = bitcast i8* %757 to i64*
  br label %759

759:                                              ; preds = %754, %746
  %760 = phi i64 [ %755, %754 ], [ 0, %746 ]
  %761 = phi i8* [ %757, %754 ], [ null, %746 ]
  %762 = phi i64* [ %758, %754 ], [ null, %746 ]
  %763 = getelementptr inbounds i64, i64* %762, i64 %737
  %764 = getelementptr inbounds i64, i64* %762, i64 %760
  %765 = ptrtoint i64* %764 to i64
  store i64 13406, i64* %763, align 8
  %766 = getelementptr inbounds i64, i64* %763, i64 1
  %767 = ptrtoint i64* %766 to i64
  %768 = ptrtoint i64* %762 to i64
  %769 = icmp sgt i64 %736, 0
  br i1 %769, label %770, label %772

770:                                              ; preds = %759
  %771 = inttoptr i64 %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %761, i8* align 8 %771, i64 %736, i1 false) #18
  br label %772

772:                                              ; preds = %770, %759
  store i64 %768, i64* %151, align 8
  store i64 %767, i64* %150, align 8
  store i64 %765, i64* %152, align 8
  %773 = icmp eq i64 %735, 0
  br i1 %773, label %776, label %774

774:                                              ; preds = %772
  %775 = inttoptr i64 %735 to i8*
  call void @_ZdlPv(i8* %775) #19
  br label %776

776:                                              ; preds = %774, %772, %731
  %777 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13392, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

778:                                              ; preds = %183
  %779 = ptrtoint i64* %184 to i64
  %780 = load i64, i64* %151, align 8
  %781 = sub i64 %779, %780
  %782 = ashr exact i64 %781, 3
  %783 = add nsw i64 %782, 1
  %784 = icmp ugt i64 %783, 2305843009213693951
  br i1 %784, label %785, label %787

785:                                              ; preds = %778
  %786 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %786) #20
  unreachable

787:                                              ; preds = %778
  %788 = icmp ult i64 %782, 1152921504606846975
  br i1 %788, label %789, label %797

789:                                              ; preds = %787
  %790 = ashr exact i64 %781, 2
  %791 = icmp ult i64 %790, %783
  %792 = select i1 %791, i64 %783, i64 %790
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %802, label %794

794:                                              ; preds = %789
  %795 = icmp ugt i64 %792, 2305843009213693951
  br i1 %795, label %796, label %797

796:                                              ; preds = %794
  call void @abort() #20
  unreachable

797:                                              ; preds = %794, %787
  %798 = phi i64 [ %792, %794 ], [ 2305843009213693951, %787 ]
  %799 = shl i64 %798, 3
  %800 = call i8* @_Znwm(i64 %799) #19
  %801 = bitcast i8* %800 to i64*
  br label %802

802:                                              ; preds = %797, %789
  %803 = phi i64 [ %798, %797 ], [ 0, %789 ]
  %804 = phi i64* [ %801, %797 ], [ null, %789 ]
  %805 = getelementptr inbounds i64, i64* %804, i64 %782
  %806 = getelementptr inbounds i64, i64* %804, i64 %803
  %807 = ptrtoint i64* %806 to i64
  store i64 13448, i64* %805, align 8
  %808 = getelementptr inbounds i64, i64* %805, i64 1
  %809 = ptrtoint i64* %808 to i64
  %810 = sub i64 %185, %780
  %811 = ashr exact i64 %810, 3
  %812 = sub nsw i64 0, %811
  %813 = getelementptr inbounds i64, i64* %805, i64 %812
  %814 = ptrtoint i64* %813 to i64
  %815 = icmp sgt i64 %810, 0
  br i1 %815, label %816, label %819

816:                                              ; preds = %802
  %817 = bitcast i64* %813 to i8*
  %818 = inttoptr i64 %780 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %817, i8* align 8 %818, i64 %810, i1 false) #18
  br label %819

819:                                              ; preds = %816, %802
  store i64 %814, i64* %151, align 8
  store i64 %809, i64* %150, align 8
  store i64 %807, i64* %152, align 8
  %820 = icmp eq i64 %780, 0
  br i1 %820, label %823, label %821

821:                                              ; preds = %819
  %822 = inttoptr i64 %780 to i8*
  call void @_ZdlPv(i8* %822) #19
  br label %823

823:                                              ; preds = %821, %819
  %824 = icmp ult i64* %808, %806
  br i1 %824, label %825, label %828

825:                                              ; preds = %823
  store i64 1, i64* %808, align 8
  %826 = getelementptr inbounds i64, i64* %808, i64 1
  %827 = ptrtoint i64* %826 to i64
  store i64 %827, i64* %150, align 8
  br label %870

828:                                              ; preds = %823
  %829 = load i64, i64* %151, align 8
  %830 = sub i64 %809, %829
  %831 = ashr exact i64 %830, 3
  %832 = add nsw i64 %831, 1
  %833 = icmp ugt i64 %832, 2305843009213693951
  br i1 %833, label %834, label %836

834:                                              ; preds = %828
  %835 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %835) #20
  unreachable

836:                                              ; preds = %828
  %837 = sub i64 %807, %829
  %838 = ashr exact i64 %837, 3
  %839 = icmp ult i64 %838, 1152921504606846975
  br i1 %839, label %840, label %848

840:                                              ; preds = %836
  %841 = ashr exact i64 %837, 2
  %842 = icmp ult i64 %841, %832
  %843 = select i1 %842, i64 %832, i64 %841
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %853, label %845

845:                                              ; preds = %840
  %846 = icmp ugt i64 %843, 2305843009213693951
  br i1 %846, label %847, label %848

847:                                              ; preds = %845
  call void @abort() #20
  unreachable

848:                                              ; preds = %845, %836
  %849 = phi i64 [ %843, %845 ], [ 2305843009213693951, %836 ]
  %850 = shl i64 %849, 3
  %851 = call i8* @_Znwm(i64 %850) #19
  %852 = bitcast i8* %851 to i64*
  br label %853

853:                                              ; preds = %848, %840
  %854 = phi i64 [ %849, %848 ], [ 0, %840 ]
  %855 = phi i8* [ %851, %848 ], [ null, %840 ]
  %856 = phi i64* [ %852, %848 ], [ null, %840 ]
  %857 = getelementptr inbounds i64, i64* %856, i64 %831
  %858 = getelementptr inbounds i64, i64* %856, i64 %854
  %859 = ptrtoint i64* %858 to i64
  store i64 1, i64* %857, align 8
  %860 = getelementptr inbounds i64, i64* %857, i64 1
  %861 = ptrtoint i64* %860 to i64
  %862 = ptrtoint i64* %856 to i64
  %863 = icmp sgt i64 %830, 0
  br i1 %863, label %864, label %866

864:                                              ; preds = %853
  %865 = inttoptr i64 %829 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %855, i8* align 8 %865, i64 %830, i1 false) #18
  br label %866

866:                                              ; preds = %864, %853
  store i64 %862, i64* %151, align 8
  store i64 %861, i64* %150, align 8
  store i64 %859, i64* %152, align 8
  %867 = icmp eq i64 %829, 0
  br i1 %867, label %870, label %868

868:                                              ; preds = %866
  %869 = inttoptr i64 %829 to i8*
  call void @_ZdlPv(i8* %869) #19
  br label %870

870:                                              ; preds = %868, %866, %825
  %871 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 12808, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

872:                                              ; preds = %183
  %873 = ptrtoint i64* %184 to i64
  %874 = load i64, i64* %151, align 8
  %875 = sub i64 %873, %874
  %876 = ashr exact i64 %875, 3
  %877 = add nsw i64 %876, 1
  %878 = icmp ugt i64 %877, 2305843009213693951
  br i1 %878, label %879, label %881

879:                                              ; preds = %872
  %880 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %880) #20
  unreachable

881:                                              ; preds = %872
  %882 = icmp ult i64 %876, 1152921504606846975
  br i1 %882, label %883, label %891

883:                                              ; preds = %881
  %884 = ashr exact i64 %875, 2
  %885 = icmp ult i64 %884, %877
  %886 = select i1 %885, i64 %877, i64 %884
  %887 = icmp eq i64 %886, 0
  br i1 %887, label %896, label %888

888:                                              ; preds = %883
  %889 = icmp ugt i64 %886, 2305843009213693951
  br i1 %889, label %890, label %891

890:                                              ; preds = %888
  call void @abort() #20
  unreachable

891:                                              ; preds = %888, %881
  %892 = phi i64 [ %886, %888 ], [ 2305843009213693951, %881 ]
  %893 = shl i64 %892, 3
  %894 = call i8* @_Znwm(i64 %893) #19
  %895 = bitcast i8* %894 to i64*
  br label %896

896:                                              ; preds = %891, %883
  %897 = phi i64 [ %892, %891 ], [ 0, %883 ]
  %898 = phi i64* [ %895, %891 ], [ null, %883 ]
  %899 = getelementptr inbounds i64, i64* %898, i64 %876
  %900 = getelementptr inbounds i64, i64* %898, i64 %897
  %901 = ptrtoint i64* %900 to i64
  store i64 12809, i64* %899, align 8
  %902 = getelementptr inbounds i64, i64* %899, i64 1
  %903 = ptrtoint i64* %902 to i64
  %904 = sub i64 %185, %874
  %905 = ashr exact i64 %904, 3
  %906 = sub nsw i64 0, %905
  %907 = getelementptr inbounds i64, i64* %899, i64 %906
  %908 = ptrtoint i64* %907 to i64
  %909 = icmp sgt i64 %904, 0
  br i1 %909, label %910, label %913

910:                                              ; preds = %896
  %911 = bitcast i64* %907 to i8*
  %912 = inttoptr i64 %874 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %911, i8* align 8 %912, i64 %904, i1 false) #18
  br label %913

913:                                              ; preds = %910, %896
  store i64 %908, i64* %151, align 8
  store i64 %903, i64* %150, align 8
  store i64 %901, i64* %152, align 8
  %914 = icmp eq i64 %874, 0
  br i1 %914, label %917, label %915

915:                                              ; preds = %913
  %916 = inttoptr i64 %874 to i8*
  call void @_ZdlPv(i8* %916) #19
  br label %917

917:                                              ; preds = %915, %913
  %918 = icmp ult i64* %902, %900
  br i1 %918, label %919, label %922

919:                                              ; preds = %917
  store i64 13447, i64* %902, align 8
  %920 = getelementptr inbounds i64, i64* %902, i64 1
  %921 = ptrtoint i64* %920 to i64
  store i64 %921, i64* %150, align 8
  br label %964

922:                                              ; preds = %917
  %923 = load i64, i64* %151, align 8
  %924 = sub i64 %903, %923
  %925 = ashr exact i64 %924, 3
  %926 = add nsw i64 %925, 1
  %927 = icmp ugt i64 %926, 2305843009213693951
  br i1 %927, label %928, label %930

928:                                              ; preds = %922
  %929 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %929) #20
  unreachable

930:                                              ; preds = %922
  %931 = sub i64 %901, %923
  %932 = ashr exact i64 %931, 3
  %933 = icmp ult i64 %932, 1152921504606846975
  br i1 %933, label %934, label %942

934:                                              ; preds = %930
  %935 = ashr exact i64 %931, 2
  %936 = icmp ult i64 %935, %926
  %937 = select i1 %936, i64 %926, i64 %935
  %938 = icmp eq i64 %937, 0
  br i1 %938, label %947, label %939

939:                                              ; preds = %934
  %940 = icmp ugt i64 %937, 2305843009213693951
  br i1 %940, label %941, label %942

941:                                              ; preds = %939
  call void @abort() #20
  unreachable

942:                                              ; preds = %939, %930
  %943 = phi i64 [ %937, %939 ], [ 2305843009213693951, %930 ]
  %944 = shl i64 %943, 3
  %945 = call i8* @_Znwm(i64 %944) #19
  %946 = bitcast i8* %945 to i64*
  br label %947

947:                                              ; preds = %942, %934
  %948 = phi i64 [ %943, %942 ], [ 0, %934 ]
  %949 = phi i8* [ %945, %942 ], [ null, %934 ]
  %950 = phi i64* [ %946, %942 ], [ null, %934 ]
  %951 = getelementptr inbounds i64, i64* %950, i64 %925
  %952 = getelementptr inbounds i64, i64* %950, i64 %948
  %953 = ptrtoint i64* %952 to i64
  store i64 13447, i64* %951, align 8
  %954 = getelementptr inbounds i64, i64* %951, i64 1
  %955 = ptrtoint i64* %954 to i64
  %956 = ptrtoint i64* %950 to i64
  %957 = icmp sgt i64 %924, 0
  br i1 %957, label %958, label %960

958:                                              ; preds = %947
  %959 = inttoptr i64 %923 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %949, i8* align 8 %959, i64 %924, i1 false) #18
  br label %960

960:                                              ; preds = %958, %947
  store i64 %956, i64* %151, align 8
  store i64 %955, i64* %150, align 8
  store i64 %953, i64* %152, align 8
  %961 = icmp eq i64 %923, 0
  br i1 %961, label %964, label %962

962:                                              ; preds = %960
  %963 = inttoptr i64 %923 to i8*
  call void @_ZdlPv(i8* %963) #19
  br label %964

964:                                              ; preds = %962, %960, %919
  %965 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13392, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

966:                                              ; preds = %183
  %967 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13449, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

968:                                              ; preds = %183
  %969 = ptrtoint i64* %184 to i64
  %970 = load i64, i64* %151, align 8
  %971 = sub i64 %969, %970
  %972 = ashr exact i64 %971, 3
  %973 = add nsw i64 %972, 1
  %974 = icmp ugt i64 %973, 2305843009213693951
  br i1 %974, label %975, label %977

975:                                              ; preds = %968
  %976 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %976) #20
  unreachable

977:                                              ; preds = %968
  %978 = icmp ult i64 %972, 1152921504606846975
  br i1 %978, label %979, label %987

979:                                              ; preds = %977
  %980 = ashr exact i64 %971, 2
  %981 = icmp ult i64 %980, %973
  %982 = select i1 %981, i64 %973, i64 %980
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %992, label %984

984:                                              ; preds = %979
  %985 = icmp ugt i64 %982, 2305843009213693951
  br i1 %985, label %986, label %987

986:                                              ; preds = %984
  call void @abort() #20
  unreachable

987:                                              ; preds = %984, %977
  %988 = phi i64 [ %982, %984 ], [ 2305843009213693951, %977 ]
  %989 = shl i64 %988, 3
  %990 = call i8* @_Znwm(i64 %989) #19
  %991 = bitcast i8* %990 to i64*
  br label %992

992:                                              ; preds = %987, %979
  %993 = phi i64 [ %988, %987 ], [ 0, %979 ]
  %994 = phi i64* [ %991, %987 ], [ null, %979 ]
  %995 = getelementptr inbounds i64, i64* %994, i64 %972
  %996 = getelementptr inbounds i64, i64* %994, i64 %993
  %997 = ptrtoint i64* %996 to i64
  store i64 12809, i64* %995, align 8
  %998 = getelementptr inbounds i64, i64* %995, i64 1
  %999 = ptrtoint i64* %998 to i64
  %1000 = sub i64 %185, %970
  %1001 = ashr exact i64 %1000, 3
  %1002 = sub nsw i64 0, %1001
  %1003 = getelementptr inbounds i64, i64* %995, i64 %1002
  %1004 = ptrtoint i64* %1003 to i64
  %1005 = icmp sgt i64 %1000, 0
  br i1 %1005, label %1006, label %1009

1006:                                             ; preds = %992
  %1007 = bitcast i64* %1003 to i8*
  %1008 = inttoptr i64 %970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1007, i8* align 8 %1008, i64 %1000, i1 false) #18
  br label %1009

1009:                                             ; preds = %1006, %992
  store i64 %1004, i64* %151, align 8
  store i64 %999, i64* %150, align 8
  store i64 %997, i64* %152, align 8
  %1010 = icmp eq i64 %970, 0
  br i1 %1010, label %1013, label %1011

1011:                                             ; preds = %1009
  %1012 = inttoptr i64 %970 to i8*
  call void @_ZdlPv(i8* %1012) #19
  br label %1013

1013:                                             ; preds = %1011, %1009
  %1014 = icmp ult i64* %998, %996
  br i1 %1014, label %1015, label %1018

1015:                                             ; preds = %1013
  store i64 13406, i64* %998, align 8
  %1016 = getelementptr inbounds i64, i64* %998, i64 1
  %1017 = ptrtoint i64* %1016 to i64
  store i64 %1017, i64* %150, align 8
  br label %1060

1018:                                             ; preds = %1013
  %1019 = load i64, i64* %151, align 8
  %1020 = sub i64 %999, %1019
  %1021 = ashr exact i64 %1020, 3
  %1022 = add nsw i64 %1021, 1
  %1023 = icmp ugt i64 %1022, 2305843009213693951
  br i1 %1023, label %1024, label %1026

1024:                                             ; preds = %1018
  %1025 = bitcast %"class.std::__1::vector.205"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1025) #20
  unreachable

1026:                                             ; preds = %1018
  %1027 = sub i64 %997, %1019
  %1028 = ashr exact i64 %1027, 3
  %1029 = icmp ult i64 %1028, 1152921504606846975
  br i1 %1029, label %1030, label %1038

1030:                                             ; preds = %1026
  %1031 = ashr exact i64 %1027, 2
  %1032 = icmp ult i64 %1031, %1022
  %1033 = select i1 %1032, i64 %1022, i64 %1031
  %1034 = icmp eq i64 %1033, 0
  br i1 %1034, label %1043, label %1035

1035:                                             ; preds = %1030
  %1036 = icmp ugt i64 %1033, 2305843009213693951
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1035
  call void @abort() #20
  unreachable

1038:                                             ; preds = %1035, %1026
  %1039 = phi i64 [ %1033, %1035 ], [ 2305843009213693951, %1026 ]
  %1040 = shl i64 %1039, 3
  %1041 = call i8* @_Znwm(i64 %1040) #19
  %1042 = bitcast i8* %1041 to i64*
  br label %1043

1043:                                             ; preds = %1038, %1030
  %1044 = phi i64 [ %1039, %1038 ], [ 0, %1030 ]
  %1045 = phi i8* [ %1041, %1038 ], [ null, %1030 ]
  %1046 = phi i64* [ %1042, %1038 ], [ null, %1030 ]
  %1047 = getelementptr inbounds i64, i64* %1046, i64 %1021
  %1048 = getelementptr inbounds i64, i64* %1046, i64 %1044
  %1049 = ptrtoint i64* %1048 to i64
  store i64 13406, i64* %1047, align 8
  %1050 = getelementptr inbounds i64, i64* %1047, i64 1
  %1051 = ptrtoint i64* %1050 to i64
  %1052 = ptrtoint i64* %1046 to i64
  %1053 = icmp sgt i64 %1020, 0
  br i1 %1053, label %1054, label %1056

1054:                                             ; preds = %1043
  %1055 = inttoptr i64 %1019 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1045, i8* align 8 %1055, i64 %1020, i1 false) #18
  br label %1056

1056:                                             ; preds = %1054, %1043
  store i64 %1052, i64* %151, align 8
  store i64 %1051, i64* %150, align 8
  store i64 %1049, i64* %152, align 8
  %1057 = icmp eq i64 %1019, 0
  br i1 %1057, label %1060, label %1058

1058:                                             ; preds = %1056
  %1059 = inttoptr i64 %1019 to i8*
  call void @_ZdlPv(i8* %1059) #19
  br label %1060

1060:                                             ; preds = %1058, %1056, %1015
  %1061 = call fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64 %173, i64 %174, i32 13449, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.205"* nonnull dereferenceable(24) %3) #18
  br label %1062

1062:                                             ; preds = %1060, %966, %964, %870, %776, %682, %680, %678, %584, %490, %488, %394, %300, %298, %204, %202, %196, %189, %183
  %1063 = phi i8* [ %1061, %1060 ], [ %967, %966 ], [ %965, %964 ], [ %871, %870 ], [ %777, %776 ], [ %683, %682 ], [ %681, %680 ], [ %679, %678 ], [ %585, %584 ], [ %491, %490 ], [ %489, %488 ], [ %395, %394 ], [ %301, %300 ], [ %299, %298 ], [ %205, %204 ], [ %203, %202 ], [ %195, %189 ], [ %201, %196 ], [ null, %183 ]
  %1064 = load i64*, i64** %147, align 8
  %1065 = icmp eq i64* %1064, null
  br i1 %1065, label %1069, label %1066

1066:                                             ; preds = %1062
  %1067 = ptrtoint i64* %1064 to i64
  store i64 %1067, i64* %150, align 8
  %1068 = bitcast i64* %1064 to i8*
  call void @_ZdlPv(i8* %1068) #19
  br label %1069

1069:                                             ; preds = %1062, %1066
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #18
  %1070 = icmp eq i8* %1063, null
  br i1 %1070, label %1071, label %1078

1071:                                             ; preds = %1069
  %1072 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %1072, label %1073, label %1078

1073:                                             ; preds = %1071
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %153) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1350, i32 2) #18
  %1074 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %155, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i64 0, i64 0), i64 36) #18
  %1075 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %1076 = call i64 @strlen(i8* %1075) #18
  %1077 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1074, i8* %1075, i64 %1076) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %153) #18
  br label %1078

1078:                                             ; preds = %1073, %1071, %1069
  br i1 %85, label %1079, label %1094

1079:                                             ; preds = %1078
  %1080 = call zeroext i1 @_ZN5angle18InitializePlatformEPv(i8* %1063) #18
  br i1 %1080, label %1085, label %1081

1081:                                             ; preds = %1079
  %1082 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %1082, label %1083, label %1085

1083:                                             ; preds = %1081
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %156) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1357, i32 2) #18
  %1084 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %158, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i64 37) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %156) #18
  br label %1085

1085:                                             ; preds = %1083, %1081, %1079
  %1086 = add i32 %172, -3
  %1087 = icmp ult i32 %1086, 16
  br i1 %1087, label %1088, label %1092

1088:                                             ; preds = %1085
  %1089 = sext i32 %1086 to i64
  %1090 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE, i64 0, i64 %1089
  %1091 = load i32, i32* %1090, align 4
  br label %1092

1092:                                             ; preds = %1085, %1088
  %1093 = phi i32 [ %1091, %1088 ], [ 0, %1085 ]
  call void @_ZN2gl22SetANGLEImplementationENS_19ANGLEImplementationE(i32 %1093) #18
  br label %1094

1094:                                             ; preds = %1092, %1078
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #18
  store i64 -6148914691236517206, i64* %166, align 8
  store i8 0, i8* %159, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 32, i1 false) #18
  %1095 = icmp eq i32 %172, 11
  br i1 %1095, label %1096, label %1103

1096:                                             ; preds = %1094
  %1097 = call zeroext i1 @_ZN2ui24IsVulkanSurfaceSupportedEv() #18
  br i1 %1097, label %1103, label %1098

1098:                                             ; preds = %1096
  %1099 = load i8, i8* %159, align 8, !range !2
  %1100 = icmp eq i8 %1099, 0
  br i1 %1100, label %1102, label %1101

1101:                                             ; preds = %1098
  call void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"* %161) #18
  store i8 0, i8* %159, align 8
  br label %1102

1102:                                             ; preds = %1098, %1101
  call void @_ZN2ui18ScopedUnsetDisplayC1Ev(%"class.ui::ScopedUnsetDisplay"* %162) #18
  store i8 1, i8* %159, align 8
  br label %1103

1103:                                             ; preds = %1102, %1096, %1094
  %1104 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %1105 = bitcast %"class.gl::EGLApi"* %1104 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)***
  %1106 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*** %1105, align 8
  %1107 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)** %1106, i64 46
  %1108 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i32*)** %1107, align 8
  %1109 = call i32 %1108(%"class.gl::EGLApi"* %1104, i8* %1063, i32* null, i32* null) #18
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1148

1111:                                             ; preds = %1103
  %1112 = load i64, i64* %140, align 8
  %1113 = load i64, i64* %142, align 8
  %1114 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %1114, label %1115, label %1137

1115:                                             ; preds = %1111
  %1116 = sub i64 %1112, %1113
  %1117 = ashr exact i64 %1116, 2
  %1118 = add nsw i64 %1117, -1
  %1119 = icmp eq i64 %169, %1118
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %163) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1375, i32 2) #18
  %1120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %165, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0), i64 14) #18
  %1121 = icmp ult i32 %172, 19
  br i1 %1121, label %1122, label %1126

1122:                                             ; preds = %1115
  %1123 = sext i32 %172 to i64
  %1124 = getelementptr inbounds [19 x i8*], [19 x i8*]* @switch.table._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE.121, i64 0, i64 %1123
  %1125 = load i8*, i8** %1124, align 8
  br label %1126

1126:                                             ; preds = %1115, %1122
  %1127 = phi i8* [ %1125, %1122 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i64 0, i64 0), %1115 ]
  %1128 = call i64 @strlen(i8* nonnull %1127) #18
  %1129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1120, i8* nonnull %1127, i64 %1128) #18
  %1130 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1129, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0), i64 19) #18
  %1131 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %1132 = call i64 @strlen(i8* %1131) #18
  %1133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1130, i8* %1131, i64 %1132) #18
  %1134 = select i1 %1119, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0)
  %1135 = select i1 %1119, i64 0, i64 26
  %1136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1133, i8* %1134, i64 %1135) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %163) #18
  br label %1137

1137:                                             ; preds = %1111, %1126
  %1138 = load i8, i8* %159, align 8, !range !2
  %1139 = icmp eq i8 %1138, 0
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1137
  call void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"* %161) #18
  store i8 0, i8* %159, align 8
  br label %1141

1141:                                             ; preds = %1137, %1140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #18
  %1142 = add nuw i64 %169, 1
  %1143 = load i64, i64* %140, align 8
  %1144 = load i64, i64* %142, align 8
  %1145 = sub i64 %1143, %1144
  %1146 = ashr exact i64 %1145, 2
  %1147 = icmp ult i64 %1142, %1146
  br i1 %1147, label %167, label %1267

1148:                                             ; preds = %1103
  %1149 = bitcast %"class.std::__1::basic_ostringstream"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %1149) #18
  %1150 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 1
  %1151 = bitcast %"class.std::__1::basic_stringbuf"* %1150 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1151, i8 -86, i64 256, i1 false)
  %1152 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 2, i32 0, i32 0
  %1153 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %1152, align 8
  %1154 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 1
  %1155 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %1154, i64 0, i32 0
  %1156 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %1157 = bitcast %"class.std::__1::basic_ostringstream"* %14 to i64*
  store i64 %1156, i64* %1157, align 8
  %1158 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %1159 = bitcast %"class.std::__1::basic_ostringstream"* %14 to i8**
  %1160 = inttoptr i64 %1156 to i8*
  %1161 = getelementptr i8, i8* %1160, i64 -24
  %1162 = bitcast i8* %1161 to i64*
  %1163 = load i64, i64* %1162, align 8
  %1164 = getelementptr inbounds i8, i8* %1149, i64 %1163
  %1165 = bitcast i8* %1164 to i64*
  store i64 %1158, i64* %1165, align 8
  %1166 = load i8*, i8** %1159, align 8
  %1167 = getelementptr i8, i8* %1166, i64 -24
  %1168 = bitcast i8* %1167 to i64*
  %1169 = load i64, i64* %1168, align 8
  %1170 = getelementptr inbounds i8, i8* %1149, i64 %1169
  %1171 = bitcast i8* %1170 to %"class.std::__1::ios_base"*
  %1172 = bitcast %"class.std::__1::basic_stringbuf"* %1154 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %1171, i8* %1172) #18
  %1173 = getelementptr inbounds i8, i8* %1170, i64 136
  %1174 = bitcast i8* %1173 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %1174, align 8
  %1175 = getelementptr inbounds i8, i8* %1170, i64 144
  %1176 = bitcast i8* %1175 to i32*
  store i32 -1, i32* %1176, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %1153, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %1152, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %1155) #18
  %1177 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %1154, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1177, align 8
  %1178 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 1, i32 1
  %1179 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 1, i32 3
  %1180 = bitcast %"class.std::__1::basic_string"* %1178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1180, i8 0, i64 32, i1 false) #18
  store i32 16, i32* %1179, align 8
  %1181 = call dereferenceable(8) %"struct.gl::GLImplementationParts"* @_ZN2gl24GetGLImplementationPartsEv() #18
  %1182 = getelementptr inbounds %"struct.gl::GLImplementationParts", %"struct.gl::GLImplementationParts"* %1181, i64 0, i32 0
  %1183 = load i32, i32* %1182, align 4
  %1184 = getelementptr inbounds %"struct.gl::GLImplementationParts", %"struct.gl::GLImplementationParts"* %1181, i64 0, i32 1
  %1185 = load i32, i32* %1184, align 4
  %1186 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %1187 = zext i32 %1185 to i64
  %1188 = shl nuw i64 %1187, 32
  %1189 = zext i32 %1183 to i64
  %1190 = or i64 %1188, %1189
  %1191 = call i8* @_ZN2gl25GetGLImplementationGLNameENS_21GLImplementationPartsE(i64 %1190) #18
  %1192 = call i64 @strlen(i8* %1191) #18
  %1193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %1186, i8* %1191, i64 %1192) #18
  %1194 = icmp eq i32 %1183, 9
  br i1 %1194, label %1195, label %1206

1195:                                             ; preds = %1148
  %1196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %1186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1) #18
  %1197 = icmp ult i32 %172, 19
  br i1 %1197, label %1198, label %1202

1198:                                             ; preds = %1195
  %1199 = sext i32 %172 to i64
  %1200 = getelementptr inbounds [19 x i8*], [19 x i8*]* @switch.table._ZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformE.121, i64 0, i64 %1199
  %1201 = load i8*, i8** %1200, align 8
  br label %1202

1202:                                             ; preds = %1195, %1198
  %1203 = phi i8* [ %1201, %1198 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i64 0, i64 0), %1195 ]
  %1204 = call i64 @strlen(i8* nonnull %1203) #18
  %1205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1196, i8* nonnull %1203, i64 %1204) #18
  br label %1206

1206:                                             ; preds = %1202, %1148
  %1207 = load atomic i8, i8* bitcast (i64* @_ZGVZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key to i8*) acquire, align 8
  %1208 = icmp eq i8 %1207, 0
  br i1 %1208, label %1209, label %1214, !prof !9

1209:                                             ; preds = %1206
  %1210 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key) #18
  %1211 = icmp eq i32 %1210, 0
  br i1 %1211, label %1214, label %1212

1212:                                             ; preds = %1209
  %1213 = call %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0), i32 32) #18
  store %"struct.base::debug::CrashKeyString"* %1213, %"struct.base::debug::CrashKeyString"** @_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key) #18
  br label %1214

1214:                                             ; preds = %1209, %1212, %1206
  %1215 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE20egl_display_type_key, align 8
  %1216 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1216) #18
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.std::__1::basic_stringbuf"* %1154) #18
  %1217 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1217, i64 0, i32 1, i32 0
  %1219 = load i8, i8* %1218, align 1
  %1220 = icmp slt i8 %1219, 0
  %1221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1222 = load i8*, i8** %1221, align 8
  %1223 = select i1 %1220, i8* %1222, i8* %1216
  %1224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1225 = load i64, i64* %1224, align 8
  %1226 = zext i8 %1219 to i64
  %1227 = select i1 %1220, i64 %1225, i64 %1226
  call void @_ZN4base5debug17SetCrashKeyStringEPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.base::debug::CrashKeyString"* %1215, i8* %1223, i64 %1227) #18
  %1228 = load i8, i8* %1218, align 1
  %1229 = icmp slt i8 %1228, 0
  br i1 %1229, label %1230, label %1232

1230:                                             ; preds = %1214
  %1231 = load i8*, i8** %1221, align 8
  call void @_ZdlPv(i8* %1231) #19
  br label %1232

1232:                                             ; preds = %1214, %1230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1216) #18
  %1233 = load atomic i64, i64* @_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %1234 = inttoptr i64 %1233 to %"class.base::HistogramBase"*
  %1235 = icmp eq i64 %1233, 0
  br i1 %1235, label %1236, label %1239

1236:                                             ; preds = %1232
  %1237 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0), i32 1, i32 19, i32 20, i32 1) #18
  %1238 = ptrtoint %"class.base::HistogramBase"* %1237 to i64
  store atomic i64 %1238, i64* @_ZZN2gl12GLSurfaceEGL17InitializeDisplayENS_18EGLDisplayPlatformEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %1239

1239:                                             ; preds = %1232, %1236
  %1240 = phi %"class.base::HistogramBase"* [ %1234, %1232 ], [ %1237, %1236 ]
  %1241 = bitcast %"class.base::HistogramBase"* %1240 to void (%"class.base::HistogramBase"*, i32)***
  %1242 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %1241, align 8
  %1243 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1242, i64 6
  %1244 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %1243, align 8
  call void %1244(%"class.base::HistogramBase"* %1240, i32 %172) #18
  store i8* %1063, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  store i32 %172, i32* @_ZN2gl12_GLOBAL__N_114g_display_typeE, align 4
  %1245 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %1245, i64* %1157, align 8
  %1246 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %1247 = inttoptr i64 %1245 to i8*
  %1248 = getelementptr i8, i8* %1247, i64 -24
  %1249 = bitcast i8* %1248 to i64*
  %1250 = load i64, i64* %1249, align 8
  %1251 = getelementptr inbounds i8, i8* %1149, i64 %1250
  %1252 = bitcast i8* %1251 to i64*
  store i64 %1246, i64* %1252, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1177, align 8
  %1253 = bitcast %"class.std::__1::basic_string"* %1178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1253, i64 0, i32 1, i32 0
  %1255 = load i8, i8* %1254, align 1
  %1256 = icmp slt i8 %1255, 0
  br i1 %1256, label %1257, label %1260

1257:                                             ; preds = %1239
  %1258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1259 = load i8*, i8** %1258, align 8
  call void @_ZdlPv(i8* %1259) #19
  br label %1260

1260:                                             ; preds = %1239, %1257
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %1155) #18
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %1186, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #18
  %1261 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %14, i64 0, i32 2
  %1262 = bitcast %"class.std::__1::basic_ios.base"* %1261 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %1262) #18
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %1149) #18
  %1263 = load i8, i8* %159, align 8, !range !2
  %1264 = icmp eq i8 %1263, 0
  br i1 %1264, label %1266, label %1265

1265:                                             ; preds = %1260
  call void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"* %161) #18
  store i8 0, i8* %159, align 8
  br label %1266

1266:                                             ; preds = %1260, %1265
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #18
  br label %1267

1267:                                             ; preds = %1141, %138, %1266
  %1268 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %1269 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8
  %1270 = icmp eq %"class.std::__1::basic_string"* %1269, null
  br i1 %1270, label %1292, label %1271

1271:                                             ; preds = %1267
  %1272 = bitcast %"class.std::__1::basic_string"* %1269 to i8*
  %1273 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %119, align 8
  %1274 = icmp eq %"class.std::__1::basic_string"* %1273, %1269
  br i1 %1274, label %1290, label %1275

1275:                                             ; preds = %1271, %1285
  %1276 = phi %"class.std::__1::basic_string"* [ %1277, %1285 ], [ %1273, %1271 ]
  %1277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1276, i64 -1
  %1278 = bitcast %"class.std::__1::basic_string"* %1277 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1278, i64 0, i32 1, i32 0
  %1280 = load i8, i8* %1279, align 1
  %1281 = icmp slt i8 %1280, 0
  br i1 %1281, label %1282, label %1285

1282:                                             ; preds = %1275
  %1283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load i8*, i8** %1283, align 8
  call void @_ZdlPv(i8* %1284) #19
  br label %1285

1285:                                             ; preds = %1282, %1275
  %1286 = icmp eq %"class.std::__1::basic_string"* %1277, %1269
  br i1 %1286, label %1287, label %1275

1287:                                             ; preds = %1285
  %1288 = bitcast %"class.std::__1::vector"* %9 to i8**
  %1289 = load i8*, i8** %1288, align 8
  br label %1290

1290:                                             ; preds = %1287, %1271
  %1291 = phi i8* [ %1289, %1287 ], [ %1272, %1271 ]
  store %"class.std::__1::basic_string"* %1269, %"class.std::__1::basic_string"** %119, align 8
  call void @_ZdlPv(i8* %1291) #19
  br label %1292

1292:                                             ; preds = %1267, %1290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #18
  %1293 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %96, align 8
  %1294 = icmp eq %"class.std::__1::basic_string"* %1293, null
  br i1 %1294, label %1316, label %1295

1295:                                             ; preds = %1292
  %1296 = bitcast %"class.std::__1::basic_string"* %1293 to i8*
  %1297 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  %1298 = icmp eq %"class.std::__1::basic_string"* %1297, %1293
  br i1 %1298, label %1314, label %1299

1299:                                             ; preds = %1295, %1309
  %1300 = phi %"class.std::__1::basic_string"* [ %1301, %1309 ], [ %1297, %1295 ]
  %1301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1300, i64 -1
  %1302 = bitcast %"class.std::__1::basic_string"* %1301 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1302, i64 0, i32 1, i32 0
  %1304 = load i8, i8* %1303, align 1
  %1305 = icmp slt i8 %1304, 0
  br i1 %1305, label %1306, label %1309

1306:                                             ; preds = %1299
  %1307 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1308 = load i8*, i8** %1307, align 8
  call void @_ZdlPv(i8* %1308) #19
  br label %1309

1309:                                             ; preds = %1306, %1299
  %1310 = icmp eq %"class.std::__1::basic_string"* %1301, %1293
  br i1 %1310, label %1311, label %1299

1311:                                             ; preds = %1309
  %1312 = bitcast %"class.std::__1::vector"* %8 to i8**
  %1313 = load i8*, i8** %1312, align 8
  br label %1314

1314:                                             ; preds = %1311, %1295
  %1315 = phi i8* [ %1313, %1311 ], [ %1296, %1295 ]
  store %"class.std::__1::basic_string"* %1293, %"class.std::__1::basic_string"** %97, align 8
  call void @_ZdlPv(i8* %1315) #19
  br label %1316

1316:                                             ; preds = %1292, %1314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #18
  %1317 = load i32*, i32** %92, align 8
  %1318 = icmp eq i32* %1317, null
  br i1 %1318, label %1322, label %1319

1319:                                             ; preds = %1316
  %1320 = ptrtoint i32* %1317 to i64
  store i64 %1320, i64* %140, align 8
  %1321 = bitcast i32* %1317 to i8*
  call void @_ZdlPv(i8* %1321) #19
  br label %1322

1322:                                             ; preds = %1316, %1319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #18
  br label %1323

1323:                                             ; preds = %2, %1322
  %1324 = phi i8* [ %1268, %1322 ], [ %16, %2 ]
  ret i8* %1324
}

declare void @_ZN2gl9DriverEGL27InitializeExtensionBindingsEv(%"struct.gl::DriverEGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL22InitializeOneOffCommonEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.gl::GLContextAttribs", align 4
  %2 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %3 = bitcast %"class.gl::EGLApi"* %2 to i8* (%"class.gl::EGLApi"*, i8*, i32)***
  %4 = load i8* (%"class.gl::EGLApi"*, i8*, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32)*** %3, align 8
  %5 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %4, i64 58
  %6 = load i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %5, align 8
  %7 = tail call i8* %6(%"class.gl::EGLApi"* %2, i8* null, i32 12373) #18
  store i8* %7, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %8 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %9 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %10 = bitcast %"class.gl::EGLApi"* %8 to i8* (%"class.gl::EGLApi"*, i8*, i32)***
  %11 = load i8* (%"class.gl::EGLApi"*, i8*, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %11, i64 58
  %13 = load i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %12, align 8
  %14 = tail call i8* %13(%"class.gl::EGLApi"* %8, i8* %9, i32 12373) #18
  store i8* %14, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %15 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #18
  %16 = zext i1 %15 to i8
  store i8 %16, i8* @_ZN2gl12_GLOBAL__N_141g_egl_create_context_robustness_supportedE, align 1
  %17 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %18 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #18
  %19 = zext i1 %18 to i8
  store i8 %19, i8* @_ZN2gl12_GLOBAL__N_145g_egl_robustness_video_memory_purge_supportedE, align 1
  %20 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %21 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %20, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0)) #18
  %22 = zext i1 %21 to i8
  store i8 %22, i8* @_ZN2gl12_GLOBAL__N_154g_egl_create_context_bind_generates_resource_supportedE, align 1
  %23 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %24 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %23, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0)) #18
  %25 = zext i1 %24 to i8
  store i8 %25, i8* @_ZN2gl12_GLOBAL__N_150g_egl_create_context_webgl_compatability_supportedE, align 1
  %26 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %27 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %26, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #18
  %28 = zext i1 %27 to i8
  store i8 %28, i8* @_ZN2gl12_GLOBAL__N_128g_egl_sync_control_supportedE, align 1
  %29 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %30 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #18
  %31 = zext i1 %30 to i8
  store i8 %31, i8* @_ZN2gl12_GLOBAL__N_133g_egl_sync_control_rate_supportedE, align 1
  %32 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %33 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #18
  %34 = zext i1 %33 to i8
  store i8 %34, i8* @_ZN2gl12_GLOBAL__N_133g_egl_window_fixed_size_supportedE, align 1
  %35 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %36 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %35, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #18
  %37 = zext i1 %36 to i8
  store i8 %37, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surface_orientation_supportedE, align 1
  %38 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %39 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #18
  %40 = zext i1 %39 to i8
  store i8 %40, i8* @_ZN2gl12_GLOBAL__N_120g_egl_khr_colorspaceE, align 1
  %41 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %42 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %41, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #18
  %43 = zext i1 %42 to i8
  store i8 %43, i8* @_ZN2gl12_GLOBAL__N_131g_egl_ext_colorspace_display_p3E, align 1
  %44 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %45 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %44, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #18
  %46 = zext i1 %45 to i8
  store i8 %46, i8* @_ZN2gl12_GLOBAL__N_143g_egl_ext_colorspace_display_p3_passthroughE, align 1
  %47 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %48 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %47, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0)) #18
  br i1 %48, label %56, label %49

49:                                               ; preds = %0
  %50 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %51 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %50, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0)) #18
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %54 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %53, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #18
  %55 = zext i1 %54 to i8
  br label %56

56:                                               ; preds = %49, %52, %0
  %57 = phi i8 [ 1, %0 ], [ 0, %49 ], [ %55, %52 ]
  store i8 %57, i8* @_ZN2gl12_GLOBAL__N_132g_egl_context_priority_supportedE, align 1
  %58 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %59 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %58, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #18
  %60 = zext i1 %59 to i8
  store i8 %60, i8* @_ZN2gl12_GLOBAL__N_143g_egl_display_texture_share_group_supportedE, align 1
  %61 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %62 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %61, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0)) #18
  %63 = zext i1 %62 to i8
  store i8 %63, i8* @_ZN2gl12_GLOBAL__N_145g_egl_display_semaphore_share_group_supportedE, align 1
  %64 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %65 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %64, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0)) #18
  %66 = zext i1 %65 to i8
  store i8 %66, i8* @_ZN2gl12_GLOBAL__N_144g_egl_create_context_client_arrays_supportedE, align 1
  %67 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %68 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %67, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0)) #18
  %69 = zext i1 %68 to i8
  store i8 %69, i8* @_ZN2gl12_GLOBAL__N_136g_egl_robust_resource_init_supportedE, align 1
  %70 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %71 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %70, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)) #18
  %72 = zext i1 %71 to i8
  store i8 %72, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  br i1 %71, label %73, label %129

73:                                               ; preds = %56
  %74 = tail call i8* @_Znwm(i64 72) #19
  %75 = bitcast i8* %74 to %"class.gl::GLSurface"*
  tail call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* nonnull %75) #18
  %76 = bitcast i8* %74 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 24
  %78 = bitcast i8* %77 to i8**
  store i8* null, i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %74, i64 32
  %80 = bitcast i8* %79 to %"class.gl::GLSurfaceFormat"*
  tail call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* %80) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl14SurfacelessEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %81 = getelementptr inbounds i8, i8* %74, i64 64
  %82 = bitcast i8* %81 to i64*
  store i64 4294967297, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %74, i64 8
  %84 = bitcast i8* %83 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %84) #18
  %85 = tail call i8* @_Znwm(i64 264) #19
  %86 = bitcast i8* %85 to %"class.gl::GLContextEGL"*
  tail call void @_ZN2gl12GLContextEGLC1EPNS_12GLShareGroupE(%"class.gl::GLContextEGL"* nonnull %86, %"class.gl::GLShareGroup"* null) #18
  %87 = bitcast i8* %85 to %"class.gl::GLContext"*
  %88 = getelementptr inbounds i8, i8* %85, i64 8
  %89 = bitcast i8* %88 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #18
  %90 = bitcast %"struct.gl::GLContextAttribs"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %90) #18
  call void @_ZN2gl16GLContextAttribsC1Ev(%"struct.gl::GLContextAttribs"* nonnull %1) #18
  %91 = call %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"* nonnull %87, %"class.gl::GLSurface"* nonnull %75, %"struct.gl::GLContextAttribs"* nonnull dereferenceable(28) %1) #18
  call void @_ZN2gl16GLContextAttribsD1Ev(%"struct.gl::GLContextAttribs"* nonnull %1) #18
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %90) #18
  %92 = icmp eq %"class.gl::GLContext"* %91, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %73
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  br label %120

94:                                               ; preds = %73
  %95 = call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* nonnull %91, %"class.gl::GLSurface"* nonnull %75) #18
  br i1 %95, label %96, label %106

96:                                               ; preds = %94
  %97 = load i8, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %96
  %100 = call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* nonnull %91, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #18
  %101 = zext i1 %100 to i8
  store i8 %101, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  %102 = bitcast %"class.gl::GLContext"* %91 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %103 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %103, i64 1
  %105 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %104, align 8
  call void %105(%"class.gl::GLContext"* nonnull %91, %"class.gl::GLSurface"* nonnull %75) #18
  br label %107

106:                                              ; preds = %94
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  br label %107

107:                                              ; preds = %99, %96, %106
  %108 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %91, i64 0, i32 1
  %109 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %108, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %109) #18
  %110 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %108, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.base::RefCounted.29", %"class.base::RefCounted.29"* %108, i64 -2
  %115 = bitcast %"class.base::RefCounted.29"* %114 to %"class.gl::GLContext"*
  %116 = bitcast %"class.base::RefCounted.29"* %114 to void (%"class.gl::GLContext"*)***
  %117 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %117, i64 15
  %119 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %118, align 8
  call void %119(%"class.gl::GLContext"* nonnull %115) #18
  br label %120

120:                                              ; preds = %113, %107, %93
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #18
  %121 = bitcast i8* %83 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %129

124:                                              ; preds = %120
  %125 = bitcast i8* %74 to void (%"class.gl::GLSurface"*)***
  %126 = load void (%"class.gl::GLSurface"*)**, void (%"class.gl::GLSurface"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %126, i64 62
  %128 = load void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %127, align 8
  call void %128(%"class.gl::GLSurface"* nonnull %75) #18
  br label %129

129:                                              ; preds = %124, %120, %56
  %130 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %131 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %130, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i64 0, i64 0)) #18
  %132 = zext i1 %131 to i8
  store i8 %132, i8* @_ZN2gl12_GLOBAL__N_141g_egl_android_native_fence_sync_supportedE, align 1
  %133 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %134 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %133, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0)) #18
  %135 = zext i1 %134 to i8
  store i8 %135, i8* @_ZN2gl12_GLOBAL__N_138g_egl_ext_pixel_format_float_supportedE, align 1
  %136 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %137 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %136, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0)) #18
  %138 = zext i1 %137 to i8
  store i8 %138, i8* @_ZN2gl12_GLOBAL__N_138g_egl_angle_power_preference_supportedE, align 1
  %139 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %140 = call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %139, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #18
  %141 = zext i1 %140 to i8
  store i8 %141, i8* @_ZN2gl12_GLOBAL__N_150g_egl_angle_external_context_and_surface_supportedE, align 1
  %142 = load i8, i8* @_ZN2gl12_GLOBAL__N_138g_egl_angle_power_preference_supportedE, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %129
  %145 = call i8* @_Znwm(i64 8) #19
  %146 = bitcast i8* %145 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl12_GLOBAL__N_123EGLGpuSwitchingObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %146, align 8
  store i8* %145, i8** bitcast (%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE to i8**), align 8
  %147 = call %"class.ui::GpuSwitchingManager"* @_ZN2ui19GpuSwitchingManager11GetInstanceEv() #18
  %148 = load %"class.ui::GpuSwitchingObserver"*, %"class.ui::GpuSwitchingObserver"** bitcast (%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE to %"class.ui::GpuSwitchingObserver"**), align 8
  call void @_ZN2ui19GpuSwitchingManager11AddObserverEPNS_20GpuSwitchingObserverE(%"class.ui::GpuSwitchingManager"* %147, %"class.ui::GpuSwitchingObserver"* %148) #18
  br label %149

149:                                              ; preds = %129, %144
  store i8 1, i8* @_ZN2gl12GLSurfaceEGL12initialized_E, align 1
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL26InitializeOneOffForTestingEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN2gl9DriverEGL33InitializeClientExtensionBindingsEv(%"struct.gl::DriverEGL"* nonnull @_ZN2gl12g_driver_eglE) #18
  %1 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %2 = bitcast %"class.gl::EGLApi"* %1 to i8* (%"class.gl::EGLApi"*)***
  %3 = load i8* (%"class.gl::EGLApi"*)**, i8* (%"class.gl::EGLApi"*)*** %2, align 8
  %4 = getelementptr inbounds i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %3, i64 31
  %5 = load i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %4, align 8
  %6 = tail call i8* %5(%"class.gl::EGLApi"* %1) #18
  store i8* %6, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  tail call void @_ZN2gl9DriverEGL27InitializeExtensionBindingsEv(%"struct.gl::DriverEGL"* nonnull @_ZN2gl12g_driver_eglE) #18
  %7 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL22InitializeOneOffCommonEv()
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  %3 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %2, i8* %0) #18
  ret i1 %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* dereferenceable(28)) local_unnamed_addr #2

declare void @_ZN2gl12GLContextEGLC1EPNS_12GLShareGroupE(%"class.gl::GLContextEGL"*, %"class.gl::GLShareGroup"*) unnamed_addr #2

declare void @_ZN2gl16GLContextAttribsC1Ev(%"struct.gl::GLContextAttribs"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl16GLContextAttribsD1Ev(%"struct.gl::GLContextAttribs"*) unnamed_addr #4

declare zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.ui::GpuSwitchingManager"* @_ZN2ui19GpuSwitchingManager11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN2ui19GpuSwitchingManager11AddObserverEPNS_20GpuSwitchingObserverE(%"class.ui::GpuSwitchingManager"*, %"class.ui::GpuSwitchingObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL33InitializeExtensionSettingsOneOffEv() local_unnamed_addr #0 align 2 {
  %1 = load i8, i8* @_ZN2gl12GLSurfaceEGL12initialized_E, align 1, !range !2
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %17, label %3

3:                                                ; preds = %0
  tail call void @_ZN2gl9DriverEGL34UpdateConditionalExtensionBindingsEv(%"struct.gl::DriverEGL"* nonnull @_ZN2gl12g_driver_eglE) #18
  %4 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %5 = bitcast %"class.gl::EGLApi"* %4 to i8* (%"class.gl::EGLApi"*, i8*, i32)***
  %6 = load i8* (%"class.gl::EGLApi"*, i8*, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32)*** %5, align 8
  %7 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %6, i64 58
  %8 = load i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %7, align 8
  %9 = tail call i8* %8(%"class.gl::EGLApi"* %4, i8* null, i32 12373) #18
  store i8* %9, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %10 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %11 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %12 = bitcast %"class.gl::EGLApi"* %10 to i8* (%"class.gl::EGLApi"*, i8*, i32)***
  %13 = load i8* (%"class.gl::EGLApi"*, i8*, i32)**, i8* (%"class.gl::EGLApi"*, i8*, i32)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %13, i64 58
  %15 = load i8* (%"class.gl::EGLApi"*, i8*, i32)*, i8* (%"class.gl::EGLApi"*, i8*, i32)** %14, align 8
  %16 = tail call i8* %15(%"class.gl::EGLApi"* %10, i8* %11, i32 12373) #18
  store i8* %16, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  br label %17

17:                                               ; preds = %0, %3
  %18 = phi i1 [ true, %3 ], [ false, %0 ]
  ret i1 %18
}

declare void @_ZN2gl9DriverEGL34UpdateConditionalExtensionBindingsEv(%"struct.gl::DriverEGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLSurfaceEGL14ShutdownOneOffEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"*, %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE, align 8
  %2 = icmp eq %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* %1, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = tail call %"class.ui::GpuSwitchingManager"* @_ZN2ui19GpuSwitchingManager11GetInstanceEv() #18
  %5 = load %"class.ui::GpuSwitchingObserver"*, %"class.ui::GpuSwitchingObserver"** bitcast (%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE to %"class.ui::GpuSwitchingObserver"**), align 8
  tail call void @_ZN2ui19GpuSwitchingManager14RemoveObserverEPNS_20GpuSwitchingObserverE(%"class.ui::GpuSwitchingManager"* %4, %"class.ui::GpuSwitchingObserver"* %5) #18
  %6 = load %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"*, %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE, align 8
  %7 = icmp eq %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #19
  br label %10

10:                                               ; preds = %8, %3
  store %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* null, %"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"** @_ZN2gl12_GLOBAL__N_128g_egl_gpu_switching_observerE, align 8
  br label %11

11:                                               ; preds = %0, %10
  %12 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  tail call void @_ZN5angle13ResetPlatformEPv(i8* %12) #18
  %13 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %17 = bitcast %"class.gl::EGLApi"* %16 to i32 (%"class.gl::EGLApi"*, i8*)***
  %18 = load i32 (%"class.gl::EGLApi"*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*)** %18, i64 77
  %20 = load i32 (%"class.gl::EGLApi"*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*)** %19, align 8
  %21 = tail call i32 %20(%"class.gl::EGLApi"* %16, i8* nonnull %13) #18
  br label %22

22:                                               ; preds = %11, %15
  store i8* null, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  store i8* null, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  store i8* null, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_141g_egl_create_context_robustness_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_145g_egl_robustness_video_memory_purge_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_154g_egl_create_context_bind_generates_resource_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_150g_egl_create_context_webgl_compatability_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_128g_egl_sync_control_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_133g_egl_sync_control_rate_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_133g_egl_window_fixed_size_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surface_orientation_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_136g_egl_robust_resource_init_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_143g_egl_display_texture_share_group_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_144g_egl_create_context_client_arrays_supportedE, align 1
  store i8 0, i8* @_ZN2gl12_GLOBAL__N_137g_egl_angle_feature_control_supportedE, align 1
  store i8 0, i8* @_ZN2gl12GLSurfaceEGL12initialized_E, align 1
  ret void
}

declare void @_ZN2ui19GpuSwitchingManager14RemoveObserverEPNS_20GpuSwitchingObserverE(%"class.ui::GpuSwitchingManager"*, %"class.ui::GpuSwitchingObserver"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN5angle13ResetPlatformEPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() local_unnamed_addr #3 align 2 {
  %1 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  ret i8* %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl12GLSurfaceEGL16GetNativeDisplayEv() local_unnamed_addr #3 align 2 {
  %1 = load i64, i64* getelementptr inbounds ({ i64, i32, i8 }, { i64, i32, i8 }* @_ZN2gl12_GLOBAL__N_116g_native_displayE, i64 0, i32 0), align 8
  ret i64 %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2gl12GLSurfaceEGL14GetDisplayTypeEv() local_unnamed_addr #3 align 2 {
  %1 = load i32, i32* @_ZN2gl12_GLOBAL__N_114g_display_typeE, align 4
  ret i32 %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL22GetEGLClientExtensionsEv() local_unnamed_addr #3 align 2 {
  %1 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %2 = icmp eq i8* %1, null
  %3 = select i1 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %1
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl12GLSurfaceEGL16GetEGLExtensionsEv() local_unnamed_addr #3 align 2 {
  %1 = load i8*, i8** @_ZN2gl12_GLOBAL__N_116g_egl_extensionsE, align 8
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL21HasEGLClientExtensionEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = load i8*, i8** @_ZN2gl12_GLOBAL__N_123g_egl_client_extensionsE, align 8
  %3 = icmp eq i8* %2, null
  %4 = select i1 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8* %2
  %5 = tail call zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8* %4, i8* %0) #18
  ret i1 %5
}

declare zeroext i1 @_ZN2gl9GLSurface17ExtensionsContainEPKcS2_(i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL34IsCreateContextRobustnessSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_141g_egl_create_context_robustness_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL37IsRobustnessVideoMemoryPurgeSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_145g_egl_robustness_video_memory_purge_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL45IsCreateContextBindGeneratesResourceSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_154g_egl_create_context_bind_generates_resource_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL42IsCreateContextWebGLCompatabilitySupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_150g_egl_create_context_webgl_compatability_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL32IsEGLSurfacelessContextSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surfaceless_context_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL29IsEGLContextPrioritySupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_132g_egl_context_priority_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL42IsEGLFlexibleSurfaceCompatibilitySupportedEv() local_unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL29IsRobustResourceInitSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_136g_egl_robust_resource_init_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL35IsDisplayTextureShareGroupSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_143g_egl_display_texture_share_group_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL37IsDisplaySemaphoreShareGroupSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_145g_egl_display_semaphore_share_group_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL36IsCreateContextClientArraysSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_144g_egl_create_context_client_arrays_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL33IsAndroidNativeFenceSyncSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_141g_egl_android_native_fence_sync_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL27IsPixelFormatFloatSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_138g_egl_ext_pixel_format_float_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL30IsANGLEFeatureControlSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_137g_egl_angle_feature_control_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL31IsANGLEPowerPreferenceSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_138g_egl_angle_power_preference_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl12GLSurfaceEGL41IsANGLEExternalContextAndSurfaceSupportedEv() local_unnamed_addr #3 align 2 {
  %1 = load i8, i8* @_ZN2gl12_GLOBAL__N_150g_egl_angle_external_context_and_surface_supportedE, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12GLSurfaceEGLD2Ev(%"class.gl::GLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %3) #18
  %4 = getelementptr inbounds %"class.gl::GLSurfaceEGL", %"class.gl::GLSurfaceEGL"* %0, i64 0, i32 0
  tail call void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"* %4) #18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"*) unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl12GLSurfaceEGLD0Ev(%"class.gl::GLSurfaceEGL"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_118LogEGLDebugMessageEjPKciPvS3_S2_(i32, i8*, i32, i8*, i8*, i8*) #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #18
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #18
  %20 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #18
  %21 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #18
  %22 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  %23 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 20, i8* %24, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i64 0, i64 0), i64 20, i1 false) #18
  %25 = getelementptr inbounds i8, i8* %22, i64 20
  store i8 0, i8* %25, align 4
  %26 = add i32 %2, -13241
  %27 = icmp ult i32 %26, 4
  br i1 %27, label %28, label %32

28:                                               ; preds = %6
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN2gl12_GLOBAL__N_118LogEGLDebugMessageEjPKciPvS3_S2_, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %6, %28
  %33 = phi i8* [ %31, %28 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), %6 ]
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* nonnull %33) #18, !noalias !10
  %35 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %35, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #18, !noalias !10
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0)) #18, !noalias !13
  %37 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %37, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #18, !noalias !13
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* %1) #18, !noalias !16
  %39 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %39, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #18, !noalias !16
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84, i64 0, i64 0)) #18, !noalias !19
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %41, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #18, !noalias !19
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* %5) #18, !noalias !22
  %43 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %43, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #18, !noalias !22
  %44 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #19
  br label %51

51:                                               ; preds = %32, %48
  %52 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #19
  br label %59

59:                                               ; preds = %51, %56
  %60 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #19
  br label %67

67:                                               ; preds = %59, %64
  %68 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #19
  br label %75

75:                                               ; preds = %67, %72
  %76 = load i8, i8* %24, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #19
  br label %81

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #18
  %82 = icmp eq i8* %3, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  %84 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i64 0, i64 0)) #18
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* nonnull %3) #18
  br label %86

86:                                               ; preds = %81, %83
  %87 = icmp eq i8* %4, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i64 0, i64 0)) #18
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* nonnull %4) #18
  br label %91

91:                                               ; preds = %86, %88
  %92 = add i32 %2, -13241
  %93 = icmp ult i32 %92, 2
  br i1 %93, label %94, label %110

94:                                               ; preds = %91
  %95 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %95, label %96, label %110

96:                                               ; preds = %94
  %97 = bitcast %"class.logging::LogMessage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %97) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 780, i32 2) #18
  %98 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %99 = bitcast %"class.std::__1::basic_ostringstream"* %98 to %"class.std::__1::basic_ostream"*
  %100 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i8*, i8** %15, align 8
  %105 = load i64, i64* %16, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i8* %104, i8* %14
  %108 = select i1 %103, i64 %105, i64 %106
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %99, i8* %107, i64 %108) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %97) #18
  br label %110

110:                                              ; preds = %96, %94, %91
  %111 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  %116 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %116) #19
  br label %117

117:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #18
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare i8* @_ZN2ui21GetLastEGLErrorStringEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare zeroext i1 @_ZN5angle18InitializePlatformEPv(i8*) local_unnamed_addr #2

declare void @_ZN2gl22SetANGLEImplementationENS_19ANGLEImplementationE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2ui24IsVulkanSurfaceSupportedEv() local_unnamed_addr #2

declare i8* @_ZN2gl25GetGLImplementationGLNameENS_21GLImplementationPartsE(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

declare %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN4base5debug17SetCrashKeyStringEPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.base::debug::CrashKeyString"*, i8*, i64) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGLC2ElNSt3__110unique_ptrIN3gfx13VSyncProviderENS1_14default_deleteIS4_EEEE(%"class.gl::NativeViewGLSurfaceEGL"*, i64, %"class.gfx::VSyncProvider"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.gfx::VSyncProvider"* %2 to i64
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* %5) #18
  %6 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* %8) #18
  %9 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*], [6 x i8*] }, { [69 x i8*], [6 x i8*] }* @_ZTVN2gl22NativeViewGLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*], [6 x i8*] }, { [69 x i8*], [6 x i8*] }* @_ZTVN2gl22NativeViewGLSurfaceEGLE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 2
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 3, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 3, i32 1
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 4
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 6
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 7
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 8
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 9
  %19 = bitcast %"class.std::__1::unique_ptr.137"* %18 to i64*
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10
  %21 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13
  %22 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 15
  %23 = bitcast %"class.std::__1::unique_ptr.137"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 33, i1 false)
  %24 = bitcast %"class.std::__1::vector.158"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 48, i1 false)
  store i32 -1, i32* %22, align 8
  %25 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 16
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 17
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 18
  %28 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 20
  %29 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 36, i1 false)
  store i8 1, i8* %28, align 8
  %30 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21
  %31 = bitcast %"class.std::__1::unique_ptr.172"* %30 to i64*
  store i64 0, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::vector.158", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  %11 = bitcast %"class.gl::GLSurfaceFormat"* %10 to i8*
  %12 = bitcast %"class.gl::GLSurfaceFormat"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 32, i1 false)
  %13 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %14 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %14, i64 26
  %16 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %15, align 8
  %17 = tail call i8* %16(%"class.gl::GLSurfaceEGL"* %9) #18
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %20, label %21, label %1070

21:                                               ; preds = %19
  %22 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %22) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1424, i32 2) #18
  %23 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %23 to %"class.std::__1::basic_ostream"*
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.44, i64 0, i64 0), i64 46) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %22) #18
  br label %1070

26:                                               ; preds = %2
  %27 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i1 (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %28 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*)**, i1 (%"class.gl::NativeViewGLSurfaceEGL"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i1 (%"class.gl::NativeViewGLSurfaceEGL"*)** %28, i64 65
  %30 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i1 (%"class.gl::NativeViewGLSurfaceEGL"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %33, label %34, label %1070

34:                                               ; preds = %32
  %35 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %35) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1431, i32 2) #18
  %36 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %36 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45, i64 0, i64 0), i64 45) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %35) #18
  br label %1070

39:                                               ; preds = %26
  %40 = bitcast %"class.std::__1::vector.158"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #18
  %41 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %5, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %5, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #18
  %44 = load i8, i8* @_ZN2gl12_GLOBAL__N_133g_egl_window_fixed_size_supportedE, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %306, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 4
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %306, label %50

50:                                               ; preds = %46
  %51 = bitcast i32** %42 to i64*
  %52 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %53 = bitcast i32** %43 to i64*
  %54 = tail call i8* @_Znwm(i64 4) #19
  %55 = bitcast i8* %54 to i32*
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = ptrtoint i8* %56 to i64
  store i32 12801, i32* %55, align 4
  %58 = ptrtoint i8* %54 to i64
  store i64 %58, i64* %52, align 8
  store i64 %57, i64* %51, align 8
  store i64 %57, i64* %53, align 8
  %59 = bitcast i32** %42 to i64*
  %60 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %61 = bitcast i32** %43 to i64*
  %62 = tail call i8* @_Znwm(i64 8) #19
  %63 = getelementptr inbounds i8, i8* %62, i64 4
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds i8, i8* %62, i64 8
  %66 = ptrtoint i8* %65 to i64
  store i32 1, i32* %64, align 4
  %67 = getelementptr inbounds i8, i8* %62, i64 8
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %62 to i64
  %70 = bitcast i8* %54 to i32*
  %71 = bitcast i8* %62 to i32*
  %72 = load i32, i32* %70, align 4
  store i32 %72, i32* %71, align 4
  store i64 %69, i64* %60, align 8
  store i64 %68, i64* %59, align 8
  store i64 %66, i64* %61, align 8
  tail call void @_ZdlPv(i8* nonnull %54) #19
  %73 = ptrtoint i8* %67 to i64
  %74 = bitcast i32** %42 to i64*
  %75 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = ashr exact i64 %77, 2
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 4611686018427387903
  br i1 %80, label %81, label %83

81:                                               ; preds = %50
  %82 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %82) #20
  unreachable

83:                                               ; preds = %50
  %84 = bitcast i32** %43 to i64*
  %85 = sub i64 %66, %76
  %86 = ashr exact i64 %85, 2
  %87 = icmp ult i64 %86, 2305843009213693951
  br i1 %87, label %88, label %96

88:                                               ; preds = %83
  %89 = ashr exact i64 %85, 1
  %90 = icmp ult i64 %89, %79
  %91 = select i1 %90, i64 %79, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 4611686018427387903
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @abort() #20
  unreachable

96:                                               ; preds = %93, %83
  %97 = phi i64 [ %91, %93 ], [ 4611686018427387903, %83 ]
  %98 = shl i64 %97, 2
  %99 = tail call i8* @_Znwm(i64 %98) #19
  %100 = bitcast i8* %99 to i32*
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi i32* [ %100, %96 ], [ null, %88 ]
  %104 = getelementptr inbounds i32, i32* %103, i64 %78
  %105 = getelementptr inbounds i32, i32* %103, i64 %102
  %106 = ptrtoint i32* %105 to i64
  store i32 12375, i32* %104, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 1
  %108 = ptrtoint i32* %107 to i64
  %109 = sub i64 %68, %76
  %110 = ashr exact i64 %109, 2
  %111 = sub nsw i64 0, %110
  %112 = getelementptr inbounds i32, i32* %104, i64 %111
  %113 = ptrtoint i32* %112 to i64
  %114 = icmp sgt i64 %109, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %101
  %116 = bitcast i32* %112 to i8*
  %117 = inttoptr i64 %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 %109, i1 false) #18
  br label %118

118:                                              ; preds = %115, %101
  store i64 %113, i64* %75, align 8
  store i64 %108, i64* %74, align 8
  store i64 %106, i64* %84, align 8
  %119 = icmp eq i64 %76, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %76 to i8*
  tail call void @_ZdlPv(i8* %121) #19
  br label %122

122:                                              ; preds = %118, %120
  %123 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 3, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp ult i32* %107, %105
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  store i32 %124, i32* %107, align 4
  %127 = getelementptr inbounds i32, i32* %107, i64 1
  %128 = ptrtoint i32* %127 to i64
  %129 = bitcast i32** %42 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load i32*, i32** %43, align 8
  %131 = ptrtoint i32* %130 to i64
  br label %182

132:                                              ; preds = %122
  %133 = ptrtoint i32* %107 to i64
  %134 = bitcast i32** %42 to i64*
  %135 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %133, %136
  %138 = ashr exact i64 %137, 2
  %139 = add nsw i64 %138, 1
  %140 = icmp ugt i64 %139, 4611686018427387903
  br i1 %140, label %141, label %143

141:                                              ; preds = %132
  %142 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %142) #20
  unreachable

143:                                              ; preds = %132
  %144 = bitcast i32** %43 to i64*
  %145 = sub i64 %106, %136
  %146 = ashr exact i64 %145, 2
  %147 = icmp ult i64 %146, 2305843009213693951
  br i1 %147, label %148, label %156

148:                                              ; preds = %143
  %149 = ashr exact i64 %145, 1
  %150 = icmp ult i64 %149, %139
  %151 = select i1 %150, i64 %139, i64 %149
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %148
  %154 = icmp ugt i64 %151, 4611686018427387903
  br i1 %154, label %155, label %156

155:                                              ; preds = %153
  tail call void @abort() #20
  unreachable

156:                                              ; preds = %153, %143
  %157 = phi i64 [ %151, %153 ], [ 4611686018427387903, %143 ]
  %158 = shl i64 %157, 2
  %159 = tail call i8* @_Znwm(i64 %158) #19
  %160 = bitcast i8* %159 to i32*
  br label %161

161:                                              ; preds = %156, %148
  %162 = phi i64 [ %157, %156 ], [ 0, %148 ]
  %163 = phi i32* [ %160, %156 ], [ null, %148 ]
  %164 = getelementptr inbounds i32, i32* %163, i64 %138
  %165 = getelementptr inbounds i32, i32* %163, i64 %162
  %166 = ptrtoint i32* %165 to i64
  store i32 %124, i32* %164, align 4
  %167 = getelementptr inbounds i32, i32* %164, i64 1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %108, %136
  %170 = ashr exact i64 %169, 2
  %171 = sub nsw i64 0, %170
  %172 = getelementptr inbounds i32, i32* %164, i64 %171
  %173 = ptrtoint i32* %172 to i64
  %174 = icmp sgt i64 %169, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %161
  %176 = bitcast i32* %172 to i8*
  %177 = inttoptr i64 %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %169, i1 false) #18
  br label %178

178:                                              ; preds = %175, %161
  store i64 %173, i64* %135, align 8
  store i64 %168, i64* %134, align 8
  store i64 %166, i64* %144, align 8
  %179 = icmp eq i64 %136, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %181) #19
  br label %182

182:                                              ; preds = %126, %178, %180
  %183 = phi i64 [ %131, %126 ], [ %166, %178 ], [ %166, %180 ]
  %184 = phi i64 [ %128, %126 ], [ %168, %178 ], [ %168, %180 ]
  %185 = phi i32* [ %130, %126 ], [ %165, %178 ], [ %165, %180 ]
  %186 = phi i32* [ %127, %126 ], [ %167, %178 ], [ %167, %180 ]
  %187 = icmp ult i32* %186, %185
  br i1 %187, label %188, label %194

188:                                              ; preds = %182
  store i32 12374, i32* %186, align 4
  %189 = getelementptr inbounds i32, i32* %186, i64 1
  %190 = ptrtoint i32* %189 to i64
  %191 = bitcast i32** %42 to i64*
  store i64 %190, i64* %191, align 8
  %192 = load i32*, i32** %43, align 8
  %193 = ptrtoint i32* %192 to i64
  br label %244

194:                                              ; preds = %182
  %195 = ptrtoint i32* %186 to i64
  %196 = bitcast i32** %42 to i64*
  %197 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %195, %198
  %200 = ashr exact i64 %199, 2
  %201 = add nsw i64 %200, 1
  %202 = icmp ugt i64 %201, 4611686018427387903
  br i1 %202, label %203, label %205

203:                                              ; preds = %194
  %204 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %204) #20
  unreachable

205:                                              ; preds = %194
  %206 = bitcast i32** %43 to i64*
  %207 = sub i64 %183, %198
  %208 = ashr exact i64 %207, 2
  %209 = icmp ult i64 %208, 2305843009213693951
  br i1 %209, label %210, label %218

210:                                              ; preds = %205
  %211 = ashr exact i64 %207, 1
  %212 = icmp ult i64 %211, %201
  %213 = select i1 %212, i64 %201, i64 %211
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %210
  %216 = icmp ugt i64 %213, 4611686018427387903
  br i1 %216, label %217, label %218

217:                                              ; preds = %215
  tail call void @abort() #20
  unreachable

218:                                              ; preds = %215, %205
  %219 = phi i64 [ %213, %215 ], [ 4611686018427387903, %205 ]
  %220 = shl i64 %219, 2
  %221 = tail call i8* @_Znwm(i64 %220) #19
  %222 = bitcast i8* %221 to i32*
  br label %223

223:                                              ; preds = %218, %210
  %224 = phi i64 [ %219, %218 ], [ 0, %210 ]
  %225 = phi i32* [ %222, %218 ], [ null, %210 ]
  %226 = getelementptr inbounds i32, i32* %225, i64 %200
  %227 = getelementptr inbounds i32, i32* %225, i64 %224
  %228 = ptrtoint i32* %227 to i64
  store i32 12374, i32* %226, align 4
  %229 = getelementptr inbounds i32, i32* %226, i64 1
  %230 = ptrtoint i32* %229 to i64
  %231 = sub i64 %184, %198
  %232 = ashr exact i64 %231, 2
  %233 = sub nsw i64 0, %232
  %234 = getelementptr inbounds i32, i32* %226, i64 %233
  %235 = ptrtoint i32* %234 to i64
  %236 = icmp sgt i64 %231, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %223
  %238 = bitcast i32* %234 to i8*
  %239 = inttoptr i64 %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* align 4 %239, i64 %231, i1 false) #18
  br label %240

240:                                              ; preds = %237, %223
  store i64 %235, i64* %197, align 8
  store i64 %230, i64* %196, align 8
  store i64 %228, i64* %206, align 8
  %241 = icmp eq i64 %198, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = inttoptr i64 %198 to i8*
  tail call void @_ZdlPv(i8* %243) #19
  br label %244

244:                                              ; preds = %188, %240, %242
  %245 = phi i64 [ %193, %188 ], [ %228, %240 ], [ %228, %242 ]
  %246 = phi i64 [ %190, %188 ], [ %230, %240 ], [ %230, %242 ]
  %247 = phi i32* [ %192, %188 ], [ %227, %240 ], [ %227, %242 ]
  %248 = phi i32* [ %189, %188 ], [ %229, %240 ], [ %229, %242 ]
  %249 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 3, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = icmp ult i32* %248, %247
  br i1 %251, label %252, label %256

252:                                              ; preds = %244
  store i32 %250, i32* %248, align 4
  %253 = getelementptr inbounds i32, i32* %248, i64 1
  %254 = ptrtoint i32* %253 to i64
  %255 = bitcast i32** %42 to i64*
  store i64 %254, i64* %255, align 8
  br label %306

256:                                              ; preds = %244
  %257 = ptrtoint i32* %248 to i64
  %258 = bitcast i32** %42 to i64*
  %259 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = ashr exact i64 %261, 2
  %263 = add nsw i64 %262, 1
  %264 = icmp ugt i64 %263, 4611686018427387903
  br i1 %264, label %265, label %267

265:                                              ; preds = %256
  %266 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %266) #20
  unreachable

267:                                              ; preds = %256
  %268 = bitcast i32** %43 to i64*
  %269 = sub i64 %245, %260
  %270 = ashr exact i64 %269, 2
  %271 = icmp ult i64 %270, 2305843009213693951
  br i1 %271, label %272, label %280

272:                                              ; preds = %267
  %273 = ashr exact i64 %269, 1
  %274 = icmp ult i64 %273, %263
  %275 = select i1 %274, i64 %263, i64 %273
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %285, label %277

277:                                              ; preds = %272
  %278 = icmp ugt i64 %275, 4611686018427387903
  br i1 %278, label %279, label %280

279:                                              ; preds = %277
  tail call void @abort() #20
  unreachable

280:                                              ; preds = %277, %267
  %281 = phi i64 [ %275, %277 ], [ 4611686018427387903, %267 ]
  %282 = shl i64 %281, 2
  %283 = tail call i8* @_Znwm(i64 %282) #19
  %284 = bitcast i8* %283 to i32*
  br label %285

285:                                              ; preds = %280, %272
  %286 = phi i64 [ %281, %280 ], [ 0, %272 ]
  %287 = phi i32* [ %284, %280 ], [ null, %272 ]
  %288 = getelementptr inbounds i32, i32* %287, i64 %262
  %289 = getelementptr inbounds i32, i32* %287, i64 %286
  %290 = ptrtoint i32* %289 to i64
  store i32 %250, i32* %288, align 4
  %291 = getelementptr inbounds i32, i32* %288, i64 1
  %292 = ptrtoint i32* %291 to i64
  %293 = sub i64 %246, %260
  %294 = ashr exact i64 %293, 2
  %295 = sub nsw i64 0, %294
  %296 = getelementptr inbounds i32, i32* %288, i64 %295
  %297 = ptrtoint i32* %296 to i64
  %298 = icmp sgt i64 %293, 0
  br i1 %298, label %299, label %302

299:                                              ; preds = %285
  %300 = bitcast i32* %296 to i8*
  %301 = inttoptr i64 %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %300, i8* align 4 %301, i64 %293, i1 false) #18
  br label %302

302:                                              ; preds = %299, %285
  store i64 %297, i64* %259, align 8
  store i64 %292, i64* %258, align 8
  store i64 %290, i64* %268, align 8
  %303 = icmp eq i64 %260, 0
  br i1 %303, label %306, label %304

304:                                              ; preds = %302
  %305 = inttoptr i64 %260 to i8*
  tail call void @_ZdlPv(i8* %305) #19
  br label %306

306:                                              ; preds = %304, %302, %252, %46, %39
  %307 = phi i64 [ %292, %304 ], [ %292, %302 ], [ %254, %252 ], [ 0, %46 ], [ 0, %39 ]
  %308 = phi i32* [ %291, %304 ], [ %291, %302 ], [ %253, %252 ], [ null, %46 ], [ null, %39 ]
  %309 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 26), align 2, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %431, label %311

311:                                              ; preds = %306
  %312 = load i32*, i32** %43, align 8
  %313 = icmp ult i32* %308, %312
  %314 = ptrtoint i32* %312 to i64
  br i1 %313, label %315, label %321

315:                                              ; preds = %311
  store i32 12478, i32* %308, align 4
  %316 = getelementptr inbounds i32, i32* %308, i64 1
  %317 = ptrtoint i32* %316 to i64
  %318 = bitcast i32** %42 to i64*
  store i64 %317, i64* %318, align 8
  %319 = load i32*, i32** %43, align 8
  %320 = ptrtoint i32* %319 to i64
  br label %371

321:                                              ; preds = %311
  %322 = ptrtoint i32* %308 to i64
  %323 = bitcast i32** %42 to i64*
  %324 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %322, %325
  %327 = ashr exact i64 %326, 2
  %328 = add nsw i64 %327, 1
  %329 = icmp ugt i64 %328, 4611686018427387903
  br i1 %329, label %330, label %332

330:                                              ; preds = %321
  %331 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %331) #20
  unreachable

332:                                              ; preds = %321
  %333 = bitcast i32** %43 to i64*
  %334 = sub i64 %314, %325
  %335 = ashr exact i64 %334, 2
  %336 = icmp ult i64 %335, 2305843009213693951
  br i1 %336, label %337, label %345

337:                                              ; preds = %332
  %338 = ashr exact i64 %334, 1
  %339 = icmp ult i64 %338, %328
  %340 = select i1 %339, i64 %328, i64 %338
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %350, label %342

342:                                              ; preds = %337
  %343 = icmp ugt i64 %340, 4611686018427387903
  br i1 %343, label %344, label %345

344:                                              ; preds = %342
  tail call void @abort() #20
  unreachable

345:                                              ; preds = %342, %332
  %346 = phi i64 [ %340, %342 ], [ 4611686018427387903, %332 ]
  %347 = shl i64 %346, 2
  %348 = tail call i8* @_Znwm(i64 %347) #19
  %349 = bitcast i8* %348 to i32*
  br label %350

350:                                              ; preds = %345, %337
  %351 = phi i64 [ %346, %345 ], [ 0, %337 ]
  %352 = phi i32* [ %349, %345 ], [ null, %337 ]
  %353 = getelementptr inbounds i32, i32* %352, i64 %327
  %354 = getelementptr inbounds i32, i32* %352, i64 %351
  %355 = ptrtoint i32* %354 to i64
  store i32 12478, i32* %353, align 4
  %356 = getelementptr inbounds i32, i32* %353, i64 1
  %357 = ptrtoint i32* %356 to i64
  %358 = sub i64 %307, %325
  %359 = ashr exact i64 %358, 2
  %360 = sub nsw i64 0, %359
  %361 = getelementptr inbounds i32, i32* %353, i64 %360
  %362 = ptrtoint i32* %361 to i64
  %363 = icmp sgt i64 %358, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %350
  %365 = bitcast i32* %361 to i8*
  %366 = inttoptr i64 %325 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 %358, i1 false) #18
  br label %367

367:                                              ; preds = %364, %350
  store i64 %362, i64* %324, align 8
  store i64 %357, i64* %323, align 8
  store i64 %355, i64* %333, align 8
  %368 = icmp eq i64 %325, 0
  br i1 %368, label %371, label %369

369:                                              ; preds = %367
  %370 = inttoptr i64 %325 to i8*
  tail call void @_ZdlPv(i8* %370) #19
  br label %371

371:                                              ; preds = %315, %367, %369
  %372 = phi i64 [ %320, %315 ], [ %355, %367 ], [ %355, %369 ]
  %373 = phi i64 [ %317, %315 ], [ %357, %367 ], [ %357, %369 ]
  %374 = phi i32* [ %319, %315 ], [ %354, %367 ], [ %354, %369 ]
  %375 = phi i32* [ %316, %315 ], [ %356, %367 ], [ %356, %369 ]
  %376 = icmp ult i32* %375, %374
  br i1 %376, label %377, label %381

377:                                              ; preds = %371
  store i32 1, i32* %375, align 4
  %378 = getelementptr inbounds i32, i32* %375, i64 1
  %379 = ptrtoint i32* %378 to i64
  %380 = bitcast i32** %42 to i64*
  store i64 %379, i64* %380, align 8
  br label %431

381:                                              ; preds = %371
  %382 = ptrtoint i32* %375 to i64
  %383 = bitcast i32** %42 to i64*
  %384 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = sub i64 %382, %385
  %387 = ashr exact i64 %386, 2
  %388 = add nsw i64 %387, 1
  %389 = icmp ugt i64 %388, 4611686018427387903
  br i1 %389, label %390, label %392

390:                                              ; preds = %381
  %391 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %391) #20
  unreachable

392:                                              ; preds = %381
  %393 = bitcast i32** %43 to i64*
  %394 = sub i64 %372, %385
  %395 = ashr exact i64 %394, 2
  %396 = icmp ult i64 %395, 2305843009213693951
  br i1 %396, label %397, label %405

397:                                              ; preds = %392
  %398 = ashr exact i64 %394, 1
  %399 = icmp ult i64 %398, %388
  %400 = select i1 %399, i64 %388, i64 %398
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %397
  %403 = icmp ugt i64 %400, 4611686018427387903
  br i1 %403, label %404, label %405

404:                                              ; preds = %402
  tail call void @abort() #20
  unreachable

405:                                              ; preds = %402, %392
  %406 = phi i64 [ %400, %402 ], [ 4611686018427387903, %392 ]
  %407 = shl i64 %406, 2
  %408 = tail call i8* @_Znwm(i64 %407) #19
  %409 = bitcast i8* %408 to i32*
  br label %410

410:                                              ; preds = %405, %397
  %411 = phi i64 [ %406, %405 ], [ 0, %397 ]
  %412 = phi i32* [ %409, %405 ], [ null, %397 ]
  %413 = getelementptr inbounds i32, i32* %412, i64 %387
  %414 = getelementptr inbounds i32, i32* %412, i64 %411
  %415 = ptrtoint i32* %414 to i64
  store i32 1, i32* %413, align 4
  %416 = getelementptr inbounds i32, i32* %413, i64 1
  %417 = ptrtoint i32* %416 to i64
  %418 = sub i64 %373, %385
  %419 = ashr exact i64 %418, 2
  %420 = sub nsw i64 0, %419
  %421 = getelementptr inbounds i32, i32* %413, i64 %420
  %422 = ptrtoint i32* %421 to i64
  %423 = icmp sgt i64 %418, 0
  br i1 %423, label %424, label %427

424:                                              ; preds = %410
  %425 = bitcast i32* %421 to i8*
  %426 = inttoptr i64 %385 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %425, i8* align 4 %426, i64 %418, i1 false) #18
  br label %427

427:                                              ; preds = %424, %410
  store i64 %422, i64* %384, align 8
  store i64 %417, i64* %383, align 8
  store i64 %415, i64* %393, align 8
  %428 = icmp eq i64 %385, 0
  br i1 %428, label %431, label %429

429:                                              ; preds = %427
  %430 = inttoptr i64 %385 to i8*
  tail call void @_ZdlPv(i8* %430) #19
  br label %431

431:                                              ; preds = %429, %427, %377, %306
  %432 = load i8, i8* @_ZN2gl12_GLOBAL__N_135g_egl_surface_orientation_supportedE, align 1, !range !2
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %431
  %435 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 8
  %436 = load i32, i32* %435, align 4
  br label %457

437:                                              ; preds = %431
  %438 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %438) #18
  store i32 -1431655766, i32* %6, align 4
  %439 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %440 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %441 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %440, i64 26
  %442 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %441, align 8
  %443 = tail call i8* %442(%"class.gl::GLSurfaceEGL"* %9) #18
  %444 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %445 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %444, i64 27
  %446 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %445, align 8
  %447 = tail call i8* %446(%"class.gl::GLSurfaceEGL"* %9) #18
  %448 = bitcast %"class.gl::EGLApi"* %439 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %449 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %448, align 8
  %450 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %449, i64 28
  %451 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %450, align 8
  %452 = call i32 %451(%"class.gl::EGLApi"* %439, i8* %443, i8* %447, i32 13223, i32* nonnull %6) #18
  %453 = load i32, i32* %6, align 4
  %454 = icmp ne i32 %453, 2
  %455 = zext i1 %454 to i32
  %456 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 8
  store i32 %455, i32* %456, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %438) #18
  br label %457

457:                                              ; preds = %434, %437
  %458 = phi i32 [ %436, %434 ], [ %455, %437 ]
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %577

460:                                              ; preds = %457
  %461 = load i32*, i32** %42, align 8
  %462 = load i32*, i32** %43, align 8
  %463 = icmp ult i32* %461, %462
  %464 = ptrtoint i32* %462 to i64
  br i1 %463, label %465, label %469

465:                                              ; preds = %460
  store i32 13224, i32* %461, align 4
  %466 = getelementptr inbounds i32, i32* %461, i64 1
  %467 = ptrtoint i32* %466 to i64
  %468 = bitcast i32** %42 to i64*
  store i64 %467, i64* %468, align 8
  br label %517

469:                                              ; preds = %460
  %470 = ptrtoint i32* %461 to i64
  %471 = bitcast i32** %42 to i64*
  %472 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = sub i64 %470, %473
  %475 = ashr exact i64 %474, 2
  %476 = add nsw i64 %475, 1
  %477 = icmp ugt i64 %476, 4611686018427387903
  br i1 %477, label %478, label %480

478:                                              ; preds = %469
  %479 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %479) #20
  unreachable

480:                                              ; preds = %469
  %481 = bitcast i32** %43 to i64*
  %482 = sub i64 %464, %473
  %483 = ashr exact i64 %482, 2
  %484 = icmp ult i64 %483, 2305843009213693951
  br i1 %484, label %485, label %493

485:                                              ; preds = %480
  %486 = ashr exact i64 %482, 1
  %487 = icmp ult i64 %486, %476
  %488 = select i1 %487, i64 %476, i64 %486
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %498, label %490

490:                                              ; preds = %485
  %491 = icmp ugt i64 %488, 4611686018427387903
  br i1 %491, label %492, label %493

492:                                              ; preds = %490
  call void @abort() #20
  unreachable

493:                                              ; preds = %490, %480
  %494 = phi i64 [ %488, %490 ], [ 4611686018427387903, %480 ]
  %495 = shl i64 %494, 2
  %496 = call i8* @_Znwm(i64 %495) #19
  %497 = bitcast i8* %496 to i32*
  br label %498

498:                                              ; preds = %493, %485
  %499 = phi i64 [ %494, %493 ], [ 0, %485 ]
  %500 = phi i8* [ %496, %493 ], [ null, %485 ]
  %501 = phi i32* [ %497, %493 ], [ null, %485 ]
  %502 = getelementptr inbounds i32, i32* %501, i64 %475
  %503 = getelementptr inbounds i32, i32* %501, i64 %499
  %504 = ptrtoint i32* %503 to i64
  store i32 13224, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = ptrtoint i32* %505 to i64
  %507 = ptrtoint i32* %501 to i64
  %508 = icmp sgt i64 %474, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %498
  %510 = inttoptr i64 %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %500, i8* align 4 %510, i64 %474, i1 false) #18
  br label %511

511:                                              ; preds = %509, %498
  store i64 %507, i64* %472, align 8
  store i64 %506, i64* %471, align 8
  store i64 %504, i64* %481, align 8
  %512 = icmp eq i64 %473, 0
  br i1 %512, label %517, label %513

513:                                              ; preds = %511
  %514 = inttoptr i64 %473 to i8*
  call void @_ZdlPv(i8* %514) #19
  %515 = load i32*, i32** %42, align 8
  %516 = ptrtoint i32* %515 to i64
  br label %517

517:                                              ; preds = %465, %511, %513
  %518 = phi i64 [ %467, %465 ], [ %506, %511 ], [ %516, %513 ]
  %519 = phi i32* [ %466, %465 ], [ %505, %511 ], [ %515, %513 ]
  %520 = load i32*, i32** %43, align 8
  %521 = icmp ult i32* %519, %520
  %522 = ptrtoint i32* %520 to i64
  br i1 %521, label %523, label %527

523:                                              ; preds = %517
  store i32 2, i32* %519, align 4
  %524 = getelementptr inbounds i32, i32* %519, i64 1
  %525 = ptrtoint i32* %524 to i64
  %526 = bitcast i32** %42 to i64*
  store i64 %525, i64* %526, align 8
  br label %577

527:                                              ; preds = %517
  %528 = ptrtoint i32* %519 to i64
  %529 = bitcast i32** %42 to i64*
  %530 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = sub i64 %528, %531
  %533 = ashr exact i64 %532, 2
  %534 = add nsw i64 %533, 1
  %535 = icmp ugt i64 %534, 4611686018427387903
  br i1 %535, label %536, label %538

536:                                              ; preds = %527
  %537 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %537) #20
  unreachable

538:                                              ; preds = %527
  %539 = bitcast i32** %43 to i64*
  %540 = sub i64 %522, %531
  %541 = ashr exact i64 %540, 2
  %542 = icmp ult i64 %541, 2305843009213693951
  br i1 %542, label %543, label %551

543:                                              ; preds = %538
  %544 = ashr exact i64 %540, 1
  %545 = icmp ult i64 %544, %534
  %546 = select i1 %545, i64 %534, i64 %544
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %556, label %548

548:                                              ; preds = %543
  %549 = icmp ugt i64 %546, 4611686018427387903
  br i1 %549, label %550, label %551

550:                                              ; preds = %548
  call void @abort() #20
  unreachable

551:                                              ; preds = %548, %538
  %552 = phi i64 [ %546, %548 ], [ 4611686018427387903, %538 ]
  %553 = shl i64 %552, 2
  %554 = call i8* @_Znwm(i64 %553) #19
  %555 = bitcast i8* %554 to i32*
  br label %556

556:                                              ; preds = %551, %543
  %557 = phi i64 [ %552, %551 ], [ 0, %543 ]
  %558 = phi i32* [ %555, %551 ], [ null, %543 ]
  %559 = getelementptr inbounds i32, i32* %558, i64 %533
  %560 = getelementptr inbounds i32, i32* %558, i64 %557
  %561 = ptrtoint i32* %560 to i64
  store i32 2, i32* %559, align 4
  %562 = getelementptr inbounds i32, i32* %559, i64 1
  %563 = ptrtoint i32* %562 to i64
  %564 = sub i64 %518, %531
  %565 = ashr exact i64 %564, 2
  %566 = sub nsw i64 0, %565
  %567 = getelementptr inbounds i32, i32* %559, i64 %566
  %568 = ptrtoint i32* %567 to i64
  %569 = icmp sgt i64 %564, 0
  br i1 %569, label %570, label %573

570:                                              ; preds = %556
  %571 = bitcast i32* %567 to i8*
  %572 = inttoptr i64 %531 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %571, i8* align 4 %572, i64 %564, i1 false) #18
  br label %573

573:                                              ; preds = %570, %556
  store i64 %568, i64* %530, align 8
  store i64 %563, i64* %529, align 8
  store i64 %561, i64* %539, align 8
  %574 = icmp eq i64 %531, 0
  br i1 %574, label %577, label %575

575:                                              ; preds = %573
  %576 = inttoptr i64 %531 to i8*
  call void @_ZdlPv(i8* %576) #19
  br label %577

577:                                              ; preds = %575, %573, %523, %457
  %578 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %10, i64 0, i32 0
  %579 = load i32, i32* %578, align 4
  switch i32 %579, label %884 [
    i32 1, label %700
    i32 0, label %580
  ]

580:                                              ; preds = %577
  %581 = load i8, i8* @_ZN2gl12_GLOBAL__N_120g_egl_khr_colorspaceE, align 1, !range !2
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %884, label %583

583:                                              ; preds = %580
  %584 = load i32*, i32** %42, align 8
  %585 = load i32*, i32** %43, align 8
  %586 = icmp ult i32* %584, %585
  %587 = ptrtoint i32* %585 to i64
  br i1 %586, label %588, label %592

588:                                              ; preds = %583
  store i32 12445, i32* %584, align 4
  %589 = getelementptr inbounds i32, i32* %584, i64 1
  %590 = ptrtoint i32* %589 to i64
  %591 = bitcast i32** %42 to i64*
  store i64 %590, i64* %591, align 8
  br label %640

592:                                              ; preds = %583
  %593 = ptrtoint i32* %584 to i64
  %594 = bitcast i32** %42 to i64*
  %595 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = sub i64 %593, %596
  %598 = ashr exact i64 %597, 2
  %599 = add nsw i64 %598, 1
  %600 = icmp ugt i64 %599, 4611686018427387903
  br i1 %600, label %601, label %603

601:                                              ; preds = %592
  %602 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %602) #20
  unreachable

603:                                              ; preds = %592
  %604 = bitcast i32** %43 to i64*
  %605 = sub i64 %587, %596
  %606 = ashr exact i64 %605, 2
  %607 = icmp ult i64 %606, 2305843009213693951
  br i1 %607, label %608, label %616

608:                                              ; preds = %603
  %609 = ashr exact i64 %605, 1
  %610 = icmp ult i64 %609, %599
  %611 = select i1 %610, i64 %599, i64 %609
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %621, label %613

613:                                              ; preds = %608
  %614 = icmp ugt i64 %611, 4611686018427387903
  br i1 %614, label %615, label %616

615:                                              ; preds = %613
  call void @abort() #20
  unreachable

616:                                              ; preds = %613, %603
  %617 = phi i64 [ %611, %613 ], [ 4611686018427387903, %603 ]
  %618 = shl i64 %617, 2
  %619 = call i8* @_Znwm(i64 %618) #19
  %620 = bitcast i8* %619 to i32*
  br label %621

621:                                              ; preds = %616, %608
  %622 = phi i64 [ %617, %616 ], [ 0, %608 ]
  %623 = phi i8* [ %619, %616 ], [ null, %608 ]
  %624 = phi i32* [ %620, %616 ], [ null, %608 ]
  %625 = getelementptr inbounds i32, i32* %624, i64 %598
  %626 = getelementptr inbounds i32, i32* %624, i64 %622
  %627 = ptrtoint i32* %626 to i64
  store i32 12445, i32* %625, align 4
  %628 = getelementptr inbounds i32, i32* %625, i64 1
  %629 = ptrtoint i32* %628 to i64
  %630 = ptrtoint i32* %624 to i64
  %631 = icmp sgt i64 %597, 0
  br i1 %631, label %632, label %634

632:                                              ; preds = %621
  %633 = inttoptr i64 %596 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %623, i8* align 4 %633, i64 %597, i1 false) #18
  br label %634

634:                                              ; preds = %632, %621
  store i64 %630, i64* %595, align 8
  store i64 %629, i64* %594, align 8
  store i64 %627, i64* %604, align 8
  %635 = icmp eq i64 %596, 0
  br i1 %635, label %640, label %636

636:                                              ; preds = %634
  %637 = inttoptr i64 %596 to i8*
  call void @_ZdlPv(i8* %637) #19
  %638 = load i32*, i32** %42, align 8
  %639 = ptrtoint i32* %638 to i64
  br label %640

640:                                              ; preds = %588, %634, %636
  %641 = phi i64 [ %590, %588 ], [ %629, %634 ], [ %639, %636 ]
  %642 = phi i32* [ %589, %588 ], [ %628, %634 ], [ %638, %636 ]
  %643 = load i32*, i32** %43, align 8
  %644 = icmp ult i32* %642, %643
  %645 = ptrtoint i32* %643 to i64
  br i1 %644, label %646, label %650

646:                                              ; preds = %640
  store i32 12426, i32* %642, align 4
  %647 = getelementptr inbounds i32, i32* %642, i64 1
  %648 = ptrtoint i32* %647 to i64
  %649 = bitcast i32** %42 to i64*
  store i64 %648, i64* %649, align 8
  br label %884

650:                                              ; preds = %640
  %651 = ptrtoint i32* %642 to i64
  %652 = bitcast i32** %42 to i64*
  %653 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %654 = load i64, i64* %653, align 8
  %655 = sub i64 %651, %654
  %656 = ashr exact i64 %655, 2
  %657 = add nsw i64 %656, 1
  %658 = icmp ugt i64 %657, 4611686018427387903
  br i1 %658, label %659, label %661

659:                                              ; preds = %650
  %660 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %660) #20
  unreachable

661:                                              ; preds = %650
  %662 = bitcast i32** %43 to i64*
  %663 = sub i64 %645, %654
  %664 = ashr exact i64 %663, 2
  %665 = icmp ult i64 %664, 2305843009213693951
  br i1 %665, label %666, label %674

666:                                              ; preds = %661
  %667 = ashr exact i64 %663, 1
  %668 = icmp ult i64 %667, %657
  %669 = select i1 %668, i64 %657, i64 %667
  %670 = icmp eq i64 %669, 0
  br i1 %670, label %679, label %671

671:                                              ; preds = %666
  %672 = icmp ugt i64 %669, 4611686018427387903
  br i1 %672, label %673, label %674

673:                                              ; preds = %671
  call void @abort() #20
  unreachable

674:                                              ; preds = %671, %661
  %675 = phi i64 [ %669, %671 ], [ 4611686018427387903, %661 ]
  %676 = shl i64 %675, 2
  %677 = call i8* @_Znwm(i64 %676) #19
  %678 = bitcast i8* %677 to i32*
  br label %679

679:                                              ; preds = %674, %666
  %680 = phi i64 [ %675, %674 ], [ 0, %666 ]
  %681 = phi i32* [ %678, %674 ], [ null, %666 ]
  %682 = getelementptr inbounds i32, i32* %681, i64 %656
  %683 = getelementptr inbounds i32, i32* %681, i64 %680
  %684 = ptrtoint i32* %683 to i64
  store i32 12426, i32* %682, align 4
  %685 = getelementptr inbounds i32, i32* %682, i64 1
  %686 = ptrtoint i32* %685 to i64
  %687 = sub i64 %641, %654
  %688 = ashr exact i64 %687, 2
  %689 = sub nsw i64 0, %688
  %690 = getelementptr inbounds i32, i32* %682, i64 %689
  %691 = ptrtoint i32* %690 to i64
  %692 = icmp sgt i64 %687, 0
  br i1 %692, label %693, label %696

693:                                              ; preds = %679
  %694 = bitcast i32* %690 to i8*
  %695 = inttoptr i64 %654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %687, i1 false) #18
  br label %696

696:                                              ; preds = %693, %679
  store i64 %691, i64* %653, align 8
  store i64 %686, i64* %652, align 8
  store i64 %684, i64* %662, align 8
  %697 = icmp eq i64 %654, 0
  br i1 %697, label %884, label %698

698:                                              ; preds = %696
  %699 = inttoptr i64 %654 to i8*
  call void @_ZdlPv(i8* %699) #19
  br label %884

700:                                              ; preds = %577
  %701 = load i8, i8* @_ZN2gl12_GLOBAL__N_120g_egl_khr_colorspaceE, align 1, !range !2
  %702 = icmp eq i8 %701, 0
  br i1 %702, label %884, label %703

703:                                              ; preds = %700
  %704 = load i8, i8* @_ZN2gl12_GLOBAL__N_131g_egl_ext_colorspace_display_p3E, align 1, !range !2
  %705 = load i8, i8* @_ZN2gl12_GLOBAL__N_143g_egl_ext_colorspace_display_p3_passthroughE, align 1
  %706 = and i8 %705, 1
  %707 = or i8 %706, %704
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %884, label %709

709:                                              ; preds = %703
  %710 = load i32*, i32** %42, align 8
  %711 = load i32*, i32** %43, align 8
  %712 = icmp ult i32* %710, %711
  %713 = ptrtoint i32* %711 to i64
  br i1 %712, label %714, label %718

714:                                              ; preds = %709
  store i32 12445, i32* %710, align 4
  %715 = getelementptr inbounds i32, i32* %710, i64 1
  %716 = ptrtoint i32* %715 to i64
  %717 = bitcast i32** %42 to i64*
  store i64 %716, i64* %717, align 8
  br label %766

718:                                              ; preds = %709
  %719 = ptrtoint i32* %710 to i64
  %720 = bitcast i32** %42 to i64*
  %721 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %722 = load i64, i64* %721, align 8
  %723 = sub i64 %719, %722
  %724 = ashr exact i64 %723, 2
  %725 = add nsw i64 %724, 1
  %726 = icmp ugt i64 %725, 4611686018427387903
  br i1 %726, label %727, label %729

727:                                              ; preds = %718
  %728 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %728) #20
  unreachable

729:                                              ; preds = %718
  %730 = bitcast i32** %43 to i64*
  %731 = sub i64 %713, %722
  %732 = ashr exact i64 %731, 2
  %733 = icmp ult i64 %732, 2305843009213693951
  br i1 %733, label %734, label %742

734:                                              ; preds = %729
  %735 = ashr exact i64 %731, 1
  %736 = icmp ult i64 %735, %725
  %737 = select i1 %736, i64 %725, i64 %735
  %738 = icmp eq i64 %737, 0
  br i1 %738, label %747, label %739

739:                                              ; preds = %734
  %740 = icmp ugt i64 %737, 4611686018427387903
  br i1 %740, label %741, label %742

741:                                              ; preds = %739
  call void @abort() #20
  unreachable

742:                                              ; preds = %739, %729
  %743 = phi i64 [ %737, %739 ], [ 4611686018427387903, %729 ]
  %744 = shl i64 %743, 2
  %745 = call i8* @_Znwm(i64 %744) #19
  %746 = bitcast i8* %745 to i32*
  br label %747

747:                                              ; preds = %742, %734
  %748 = phi i64 [ %743, %742 ], [ 0, %734 ]
  %749 = phi i8* [ %745, %742 ], [ null, %734 ]
  %750 = phi i32* [ %746, %742 ], [ null, %734 ]
  %751 = getelementptr inbounds i32, i32* %750, i64 %724
  %752 = getelementptr inbounds i32, i32* %750, i64 %748
  %753 = ptrtoint i32* %752 to i64
  store i32 12445, i32* %751, align 4
  %754 = getelementptr inbounds i32, i32* %751, i64 1
  %755 = ptrtoint i32* %754 to i64
  %756 = ptrtoint i32* %750 to i64
  %757 = icmp sgt i64 %723, 0
  br i1 %757, label %758, label %760

758:                                              ; preds = %747
  %759 = inttoptr i64 %722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %749, i8* align 4 %759, i64 %723, i1 false) #18
  br label %760

760:                                              ; preds = %758, %747
  store i64 %756, i64* %721, align 8
  store i64 %755, i64* %720, align 8
  store i64 %753, i64* %730, align 8
  %761 = icmp eq i64 %722, 0
  br i1 %761, label %766, label %762

762:                                              ; preds = %760
  %763 = inttoptr i64 %722 to i8*
  call void @_ZdlPv(i8* %763) #19
  %764 = load i32*, i32** %42, align 8
  %765 = ptrtoint i32* %764 to i64
  br label %766

766:                                              ; preds = %714, %760, %762
  %767 = phi i64 [ %716, %714 ], [ %755, %760 ], [ %765, %762 ]
  %768 = phi i32* [ %715, %714 ], [ %754, %760 ], [ %764, %762 ]
  %769 = load i8, i8* @_ZN2gl12_GLOBAL__N_143g_egl_ext_colorspace_display_p3_passthroughE, align 1, !range !2
  %770 = icmp eq i8 %769, 0
  %771 = load i32*, i32** %43, align 8
  %772 = icmp ult i32* %768, %771
  %773 = ptrtoint i32* %771 to i64
  br i1 %770, label %829, label %774

774:                                              ; preds = %766
  br i1 %772, label %775, label %779

775:                                              ; preds = %774
  store i32 13456, i32* %768, align 4
  %776 = getelementptr inbounds i32, i32* %768, i64 1
  %777 = ptrtoint i32* %776 to i64
  %778 = bitcast i32** %42 to i64*
  store i64 %777, i64* %778, align 8
  br label %884

779:                                              ; preds = %774
  %780 = ptrtoint i32* %768 to i64
  %781 = bitcast i32** %42 to i64*
  %782 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = sub i64 %780, %783
  %785 = ashr exact i64 %784, 2
  %786 = add nsw i64 %785, 1
  %787 = icmp ugt i64 %786, 4611686018427387903
  br i1 %787, label %788, label %790

788:                                              ; preds = %779
  %789 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %789) #20
  unreachable

790:                                              ; preds = %779
  %791 = bitcast i32** %43 to i64*
  %792 = sub i64 %773, %783
  %793 = ashr exact i64 %792, 2
  %794 = icmp ult i64 %793, 2305843009213693951
  br i1 %794, label %795, label %803

795:                                              ; preds = %790
  %796 = ashr exact i64 %792, 1
  %797 = icmp ult i64 %796, %786
  %798 = select i1 %797, i64 %786, i64 %796
  %799 = icmp eq i64 %798, 0
  br i1 %799, label %808, label %800

800:                                              ; preds = %795
  %801 = icmp ugt i64 %798, 4611686018427387903
  br i1 %801, label %802, label %803

802:                                              ; preds = %800
  call void @abort() #20
  unreachable

803:                                              ; preds = %800, %790
  %804 = phi i64 [ %798, %800 ], [ 4611686018427387903, %790 ]
  %805 = shl i64 %804, 2
  %806 = call i8* @_Znwm(i64 %805) #19
  %807 = bitcast i8* %806 to i32*
  br label %808

808:                                              ; preds = %803, %795
  %809 = phi i64 [ %804, %803 ], [ 0, %795 ]
  %810 = phi i32* [ %807, %803 ], [ null, %795 ]
  %811 = getelementptr inbounds i32, i32* %810, i64 %785
  %812 = getelementptr inbounds i32, i32* %810, i64 %809
  %813 = ptrtoint i32* %812 to i64
  store i32 13456, i32* %811, align 4
  %814 = getelementptr inbounds i32, i32* %811, i64 1
  %815 = ptrtoint i32* %814 to i64
  %816 = sub i64 %767, %783
  %817 = ashr exact i64 %816, 2
  %818 = sub nsw i64 0, %817
  %819 = getelementptr inbounds i32, i32* %811, i64 %818
  %820 = ptrtoint i32* %819 to i64
  %821 = icmp sgt i64 %816, 0
  br i1 %821, label %822, label %825

822:                                              ; preds = %808
  %823 = bitcast i32* %819 to i8*
  %824 = inttoptr i64 %783 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %823, i8* align 4 %824, i64 %816, i1 false) #18
  br label %825

825:                                              ; preds = %822, %808
  store i64 %820, i64* %782, align 8
  store i64 %815, i64* %781, align 8
  store i64 %813, i64* %791, align 8
  %826 = icmp eq i64 %783, 0
  br i1 %826, label %884, label %827

827:                                              ; preds = %825
  %828 = inttoptr i64 %783 to i8*
  call void @_ZdlPv(i8* %828) #19
  br label %884

829:                                              ; preds = %766
  br i1 %772, label %830, label %834

830:                                              ; preds = %829
  store i32 13155, i32* %768, align 4
  %831 = getelementptr inbounds i32, i32* %768, i64 1
  %832 = ptrtoint i32* %831 to i64
  %833 = bitcast i32** %42 to i64*
  store i64 %832, i64* %833, align 8
  br label %884

834:                                              ; preds = %829
  %835 = ptrtoint i32* %768 to i64
  %836 = bitcast i32** %42 to i64*
  %837 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %838 = load i64, i64* %837, align 8
  %839 = sub i64 %835, %838
  %840 = ashr exact i64 %839, 2
  %841 = add nsw i64 %840, 1
  %842 = icmp ugt i64 %841, 4611686018427387903
  br i1 %842, label %843, label %845

843:                                              ; preds = %834
  %844 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %844) #20
  unreachable

845:                                              ; preds = %834
  %846 = bitcast i32** %43 to i64*
  %847 = sub i64 %773, %838
  %848 = ashr exact i64 %847, 2
  %849 = icmp ult i64 %848, 2305843009213693951
  br i1 %849, label %850, label %858

850:                                              ; preds = %845
  %851 = ashr exact i64 %847, 1
  %852 = icmp ult i64 %851, %841
  %853 = select i1 %852, i64 %841, i64 %851
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %863, label %855

855:                                              ; preds = %850
  %856 = icmp ugt i64 %853, 4611686018427387903
  br i1 %856, label %857, label %858

857:                                              ; preds = %855
  call void @abort() #20
  unreachable

858:                                              ; preds = %855, %845
  %859 = phi i64 [ %853, %855 ], [ 4611686018427387903, %845 ]
  %860 = shl i64 %859, 2
  %861 = call i8* @_Znwm(i64 %860) #19
  %862 = bitcast i8* %861 to i32*
  br label %863

863:                                              ; preds = %858, %850
  %864 = phi i64 [ %859, %858 ], [ 0, %850 ]
  %865 = phi i32* [ %862, %858 ], [ null, %850 ]
  %866 = getelementptr inbounds i32, i32* %865, i64 %840
  %867 = getelementptr inbounds i32, i32* %865, i64 %864
  %868 = ptrtoint i32* %867 to i64
  store i32 13155, i32* %866, align 4
  %869 = getelementptr inbounds i32, i32* %866, i64 1
  %870 = ptrtoint i32* %869 to i64
  %871 = sub i64 %767, %838
  %872 = ashr exact i64 %871, 2
  %873 = sub nsw i64 0, %872
  %874 = getelementptr inbounds i32, i32* %866, i64 %873
  %875 = ptrtoint i32* %874 to i64
  %876 = icmp sgt i64 %871, 0
  br i1 %876, label %877, label %880

877:                                              ; preds = %863
  %878 = bitcast i32* %874 to i8*
  %879 = inttoptr i64 %838 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %878, i8* align 4 %879, i64 %871, i1 false) #18
  br label %880

880:                                              ; preds = %877, %863
  store i64 %875, i64* %837, align 8
  store i64 %870, i64* %836, align 8
  store i64 %868, i64* %846, align 8
  %881 = icmp eq i64 %838, 0
  br i1 %881, label %884, label %882

882:                                              ; preds = %880
  %883 = inttoptr i64 %838 to i8*
  call void @_ZdlPv(i8* %883) #19
  br label %884

884:                                              ; preds = %882, %880, %830, %827, %825, %775, %698, %696, %646, %700, %703, %580, %577
  %885 = load i32*, i32** %42, align 8
  %886 = load i32*, i32** %43, align 8
  %887 = icmp ult i32* %885, %886
  %888 = ptrtoint i32* %886 to i64
  br i1 %887, label %889, label %893

889:                                              ; preds = %884
  store i32 12344, i32* %885, align 4
  %890 = getelementptr inbounds i32, i32* %885, i64 1
  %891 = ptrtoint i32* %890 to i64
  %892 = bitcast i32** %42 to i64*
  store i64 %891, i64* %892, align 8
  br label %939

893:                                              ; preds = %884
  %894 = ptrtoint i32* %885 to i64
  %895 = bitcast i32** %42 to i64*
  %896 = bitcast %"class.std::__1::vector.158"* %5 to i64*
  %897 = load i64, i64* %896, align 8
  %898 = sub i64 %894, %897
  %899 = ashr exact i64 %898, 2
  %900 = add nsw i64 %899, 1
  %901 = icmp ugt i64 %900, 4611686018427387903
  br i1 %901, label %902, label %904

902:                                              ; preds = %893
  %903 = bitcast %"class.std::__1::vector.158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %903) #20
  unreachable

904:                                              ; preds = %893
  %905 = bitcast i32** %43 to i64*
  %906 = sub i64 %888, %897
  %907 = ashr exact i64 %906, 2
  %908 = icmp ult i64 %907, 2305843009213693951
  br i1 %908, label %909, label %917

909:                                              ; preds = %904
  %910 = ashr exact i64 %906, 1
  %911 = icmp ult i64 %910, %900
  %912 = select i1 %911, i64 %900, i64 %910
  %913 = icmp eq i64 %912, 0
  br i1 %913, label %922, label %914

914:                                              ; preds = %909
  %915 = icmp ugt i64 %912, 4611686018427387903
  br i1 %915, label %916, label %917

916:                                              ; preds = %914
  call void @abort() #20
  unreachable

917:                                              ; preds = %914, %904
  %918 = phi i64 [ %912, %914 ], [ 4611686018427387903, %904 ]
  %919 = shl i64 %918, 2
  %920 = call i8* @_Znwm(i64 %919) #19
  %921 = bitcast i8* %920 to i32*
  br label %922

922:                                              ; preds = %917, %909
  %923 = phi i64 [ %918, %917 ], [ 0, %909 ]
  %924 = phi i8* [ %920, %917 ], [ null, %909 ]
  %925 = phi i32* [ %921, %917 ], [ null, %909 ]
  %926 = getelementptr inbounds i32, i32* %925, i64 %899
  %927 = getelementptr inbounds i32, i32* %925, i64 %923
  %928 = ptrtoint i32* %927 to i64
  store i32 12344, i32* %926, align 4
  %929 = getelementptr inbounds i32, i32* %926, i64 1
  %930 = ptrtoint i32* %929 to i64
  %931 = ptrtoint i32* %925 to i64
  %932 = icmp sgt i64 %898, 0
  br i1 %932, label %933, label %935

933:                                              ; preds = %922
  %934 = inttoptr i64 %897 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %924, i8* align 4 %934, i64 %898, i1 false) #18
  br label %935

935:                                              ; preds = %933, %922
  store i64 %931, i64* %896, align 8
  store i64 %930, i64* %895, align 8
  store i64 %928, i64* %905, align 8
  %936 = icmp eq i64 %897, 0
  br i1 %936, label %939, label %937

937:                                              ; preds = %935
  %938 = inttoptr i64 %897 to i8*
  call void @_ZdlPv(i8* %938) #19
  br label %939

939:                                              ; preds = %889, %935, %937
  %940 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %941 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %942 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %941, i64 26
  %943 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %942, align 8
  %944 = call i8* %943(%"class.gl::GLSurfaceEGL"* %9) #18
  %945 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %946 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %945, i64 27
  %947 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %946, align 8
  %948 = call i8* %947(%"class.gl::GLSurfaceEGL"* %9) #18
  %949 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 2
  %950 = load i64, i64* %949, align 8
  %951 = load i32*, i32** %41, align 8
  %952 = bitcast %"class.gl::EGLApi"* %940 to i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)***
  %953 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)**, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*** %952, align 8
  %954 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)** %953, i64 16
  %955 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i64, i32*)** %954, align 8
  %956 = call i8* %955(%"class.gl::EGLApi"* %940, i8* %944, i8* %948, i64 %950, i32* %951) #18
  %957 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  store i8* %956, i8** %957, align 8
  %958 = icmp eq i8* %956, null
  br i1 %958, label %959, label %974

959:                                              ; preds = %939
  %960 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %960, label %961, label %969

961:                                              ; preds = %959
  %962 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %962) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1510, i32 2) #18
  %963 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %964 = bitcast %"class.std::__1::basic_ostringstream"* %963 to %"class.std::__1::basic_ostream"*
  %965 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %964, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0), i64 41) #18
  %966 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %967 = call i64 @strlen(i8* %966) #18
  %968 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %965, i8* %966, i64 %967) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %962) #18
  br label %969

969:                                              ; preds = %959, %961
  %970 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to void (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %971 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)**, void (%"class.gl::NativeViewGLSurfaceEGL"*)*** %970, align 8
  %972 = getelementptr inbounds void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %971, i64 1
  %973 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %972, align 8
  call void %973(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  br label %1061

974:                                              ; preds = %939
  %975 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 26), align 2, !range !2
  %976 = icmp eq i8 %975, 0
  br i1 %976, label %996, label %977

977:                                              ; preds = %974
  %978 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %978) #18
  store i32 -1431655766, i32* %8, align 4
  %979 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %980 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %13, align 8
  %981 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %980, i64 26
  %982 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %981, align 8
  %983 = call i8* %982(%"class.gl::GLSurfaceEGL"* %9) #18
  %984 = load i8*, i8** %957, align 8
  %985 = bitcast %"class.gl::EGLApi"* %979 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %986 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %985, align 8
  %987 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %986, i64 60
  %988 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %987, align 8
  %989 = call i32 %988(%"class.gl::EGLApi"* %979, i8* %983, i8* %984, i32 12478, i32* nonnull %8) #18
  %990 = load i32, i32* %8, align 4
  %991 = icmp ne i32 %990, 0
  %992 = icmp ne i32 %989, 0
  %993 = and i1 %992, %991
  %994 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 6
  %995 = zext i1 %993 to i8
  store i8 %995, i8* %994, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %978) #18
  br label %996

996:                                              ; preds = %974, %977
  %997 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 23), align 1, !range !2
  %998 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 7
  store i8 %997, i8* %998, align 1
  %999 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %1000 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %999, align 8
  %1001 = icmp eq %"class.gfx::VSyncProvider"* %1000, null
  br i1 %1001, label %1002, label %1045

1002:                                             ; preds = %996
  %1003 = load i8, i8* @_ZN2gl12_GLOBAL__N_128g_egl_sync_control_supportedE, align 1, !range !2
  %1004 = icmp eq i8 %1003, 0
  br i1 %1004, label %1025, label %1005

1005:                                             ; preds = %1002
  %1006 = call i8* @_Znwm(i64 80) #19
  %1007 = bitcast i8** %957 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = bitcast i8* %1006 to %"class.gl::SyncControlVSyncProvider"*
  call void @_ZN2gl24SyncControlVSyncProviderC2Ev(%"class.gl::SyncControlVSyncProvider"* nonnull %1009) #18
  %1010 = bitcast i8* %1006 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2gl12_GLOBAL__N_127EGLSyncControlVSyncProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1010, align 8
  %1011 = getelementptr inbounds i8, i8* %1006, i64 72
  %1012 = bitcast i8* %1011 to i64*
  store i64 %1008, i64* %1012, align 8
  %1013 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %1014 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %1013, align 8
  %1015 = bitcast %"class.gfx::VSyncProvider"** %1013 to i8**
  store i8* %1006, i8** %1015, align 8
  %1016 = icmp eq %"class.gfx::VSyncProvider"* %1014, null
  br i1 %1016, label %1022, label %1017

1017:                                             ; preds = %1005
  %1018 = bitcast %"class.gfx::VSyncProvider"* %1014 to void (%"class.gfx::VSyncProvider"*)***
  %1019 = load void (%"class.gfx::VSyncProvider"*)**, void (%"class.gfx::VSyncProvider"*)*** %1018, align 8
  %1020 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %1019, i64 1
  %1021 = load void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %1020, align 8
  call void %1021(%"class.gfx::VSyncProvider"* nonnull %1014) #18
  br label %1022

1022:                                             ; preds = %1005, %1017
  %1023 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %999, align 8
  %1024 = icmp eq %"class.gfx::VSyncProvider"* %1023, null
  br i1 %1024, label %1025, label %1045

1025:                                             ; preds = %1022, %1002
  %1026 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10
  %1027 = getelementptr inbounds %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.137"* %1026, i64 0, i32 0, i32 0, i32 0
  %1028 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %1027, align 8
  %1029 = icmp eq %"class.gfx::VSyncProvider"* %1028, null
  br i1 %1029, label %1030, label %1045

1030:                                             ; preds = %1025
  %1031 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %1032 = load %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)**, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*** %1031, align 8
  %1033 = getelementptr inbounds %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)** %1032, i64 66
  %1034 = load %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)** %1033, align 8
  %1035 = call %"class.gfx::VSyncProvider"* %1034(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %1036 = ptrtoint %"class.gfx::VSyncProvider"* %1035 to i64
  %1037 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %1027, align 8
  %1038 = bitcast %"class.std::__1::unique_ptr.137"* %1026 to i64*
  store i64 %1036, i64* %1038, align 8
  %1039 = icmp eq %"class.gfx::VSyncProvider"* %1037, null
  br i1 %1039, label %1045, label %1040

1040:                                             ; preds = %1030
  %1041 = bitcast %"class.gfx::VSyncProvider"* %1037 to void (%"class.gfx::VSyncProvider"*)***
  %1042 = load void (%"class.gfx::VSyncProvider"*)**, void (%"class.gfx::VSyncProvider"*)*** %1041, align 8
  %1043 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %1042, i64 1
  %1044 = load void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %1043, align 8
  call void %1044(%"class.gfx::VSyncProvider"* nonnull %1037) #18
  br label %1045

1045:                                             ; preds = %1022, %1025, %996, %1030, %1040
  %1046 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %1047 = load %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)**, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*** %1046, align 8
  %1048 = getelementptr inbounds %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)** %1047, i64 29
  %1049 = load %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)*, %"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)** %1048, align 8
  %1050 = call %"class.gfx::VSyncProvider"* %1049(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %1051 = call i8* @_Znwm(i64 120) #19
  %1052 = bitcast i8* %1051 to %"class.gl::GLSurfacePresentationHelper"*
  call void @_ZN2gl27GLSurfacePresentationHelperC1EPN3gfx13VSyncProviderE(%"class.gl::GLSurfacePresentationHelper"* nonnull %1052, %"class.gfx::VSyncProvider"* %1050) #18
  %1053 = ptrtoint i8* %1051 to i64
  %1054 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21
  %1055 = getelementptr inbounds %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172"* %1054, i64 0, i32 0, i32 0, i32 0
  %1056 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %1055, align 8
  %1057 = bitcast %"class.std::__1::unique_ptr.172"* %1054 to i64*
  store i64 %1053, i64* %1057, align 8
  %1058 = icmp eq %"class.gl::GLSurfacePresentationHelper"* %1056, null
  br i1 %1058, label %1061, label %1059

1059:                                             ; preds = %1045
  call void @_ZN2gl27GLSurfacePresentationHelperD1Ev(%"class.gl::GLSurfacePresentationHelper"* nonnull %1056) #18
  %1060 = bitcast %"class.gl::GLSurfacePresentationHelper"* %1056 to i8*
  call void @_ZdlPv(i8* %1060) #19
  br label %1061

1061:                                             ; preds = %1045, %1059, %969
  %1062 = phi i1 [ false, %969 ], [ true, %1059 ], [ true, %1045 ]
  %1063 = load i32*, i32** %41, align 8
  %1064 = icmp eq i32* %1063, null
  br i1 %1064, label %1069, label %1065

1065:                                             ; preds = %1061
  %1066 = ptrtoint i32* %1063 to i64
  %1067 = bitcast i32** %42 to i64*
  store i64 %1066, i64* %1067, align 8
  %1068 = bitcast i32* %1063 to i8*
  call void @_ZdlPv(i8* %1068) #19
  br label %1069

1069:                                             ; preds = %1061, %1065
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #18
  br label %1070

1070:                                             ; preds = %34, %32, %21, %19, %1069
  %1071 = phi i1 [ %1062, %1069 ], [ false, %19 ], [ false, %21 ], [ false, %32 ], [ false, %34 ]
  ret i1 %1071
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl22NativeViewGLSurfaceEGL22SupportsSwapTimestampsEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 6), align 2, !range !2
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13
  %3 = bitcast %"class.std::__1::vector.158"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14
  %8 = bitcast %"class.std::__1::vector.165"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14, i32 0, i32 1
  %11 = bitcast i8*** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 15
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 16
  store i32 -1, i32* %13, align 4
  %14 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %15 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %16 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %17 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %16, align 8
  %18 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %17, i64 26
  %19 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %18, align 8
  %20 = tail call i8* %19(%"class.gl::GLSurfaceEGL"* %15) #18
  %21 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.gl::EGLApi"* %14 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)***
  %24 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)** %24, i64 73
  %26 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32)** %25, align 8
  %27 = tail call i32 %26(%"class.gl::EGLApi"* %14, i8* %20, i8* %22, i32 13360, i32 1) #18
  %28 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %29 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %16, align 8
  %30 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %29, i64 26
  %31 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %30, align 8
  %32 = tail call i8* %31(%"class.gl::GLSurfaceEGL"* %15) #18
  %33 = load i8*, i8** %21, align 8
  %34 = bitcast %"class.gl::EGLApi"* %28 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)***
  %35 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %35, i64 27
  %37 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %36, align 8
  %38 = tail call i32 %37(%"class.gl::EGLApi"* %28, i8* %32, i8* %33, i32 13362) #18
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %273, label %40

40:                                               ; preds = %1
  %41 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %3, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = icmp ult i64 %46, 9
  br i1 %47, label %48, label %66

48:                                               ; preds = %40
  %49 = load i64, i64* %6, align 8
  %50 = sub i64 %49, %44
  %51 = ashr exact i64 %50, 2
  %52 = tail call i8* @_Znwm(i64 36) #19
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds i32, i32* %53, i64 %51
  %55 = ptrtoint i32* %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 36
  %57 = ptrtoint i8* %56 to i64
  %58 = ptrtoint i8* %52 to i64
  %59 = icmp sgt i64 %50, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %48
  %61 = inttoptr i64 %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %61, i64 %50, i1 false) #18
  br label %62

62:                                               ; preds = %60, %48
  store i64 %58, i64* %3, align 8
  store i64 %55, i64* %6, align 8
  store i64 %57, i64* %42, align 8
  %63 = icmp eq i64 %44, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = inttoptr i64 %44 to i8*
  tail call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %40, %62, %64
  %67 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast i8*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %8, align 8
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = icmp ult i64 %72, 9
  br i1 %73, label %74, label %92

74:                                               ; preds = %66
  %75 = load i64, i64* %11, align 8
  %76 = sub i64 %75, %70
  %77 = ashr exact i64 %76, 3
  %78 = tail call i8* @_Znwm(i64 72) #19
  %79 = bitcast i8* %78 to i8**
  %80 = getelementptr inbounds i8*, i8** %79, i64 %77
  %81 = ptrtoint i8** %80 to i64
  %82 = getelementptr inbounds i8, i8* %78, i64 72
  %83 = ptrtoint i8* %82 to i64
  %84 = ptrtoint i8* %78 to i64
  %85 = icmp sgt i64 %76, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %74
  %87 = inttoptr i64 %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 %87, i64 %76, i1 false) #18
  br label %88

88:                                               ; preds = %86, %74
  store i64 %84, i64* %8, align 8
  store i64 %81, i64* %11, align 8
  store i64 %83, i64* %68, align 8
  %89 = icmp eq i64 %70, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* %91) #19
  br label %92

92:                                               ; preds = %66, %88, %90
  %93 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 17
  %94 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 18
  %95 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %2, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %7, i64 0, i32 0, i32 0
  br label %103

97:                                               ; preds = %270
  %98 = load i32*, i32** %95, align 8
  %99 = load i32*, i32** %5, align 8
  %100 = icmp ne i32* %98, %99
  %101 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 12
  %102 = zext i1 %100 to i8
  store i8 %102, i8* %101, align 8
  br label %273

103:                                              ; preds = %92, %270
  %104 = phi %struct.anon.204* [ getelementptr inbounds ([9 x %struct.anon.204], [9 x %struct.anon.204]* @_ZZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEvE14all_timestamps, i64 0, i64 0), %92 ], [ %271, %270 ]
  %105 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %106 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %16, align 8
  %107 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %106, i64 26
  %108 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %107, align 8
  %109 = tail call i8* %108(%"class.gl::GLSurfaceEGL"* %15) #18
  %110 = load i8*, i8** %21, align 8
  %111 = getelementptr inbounds %struct.anon.204, %struct.anon.204* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = bitcast %"class.gl::EGLApi"* %105 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)***
  %114 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %114, i64 36
  %116 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32)** %115, align 8
  %117 = tail call i32 %116(%"class.gl::EGLApi"* %105, i8* %109, i8* %110, i32 %112) #18
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %270, label %119

119:                                              ; preds = %103
  %120 = load i32, i32* %111, align 8
  switch i32 %120, label %121 [
    i32 13367, label %123
    i32 13370, label %130
    i32 13365, label %137
  ]

121:                                              ; preds = %119
  %122 = load i32*, i32** %5, align 8
  br label %144

123:                                              ; preds = %119
  %124 = load i64, i64* %6, align 8
  %125 = load i64, i64* %3, align 8
  %126 = sub i64 %124, %125
  %127 = lshr exact i64 %126, 2
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %12, align 8
  store i32 %128, i32* %13, align 4
  store i32 0, i32* %94, align 4
  %129 = inttoptr i64 %124 to i32*
  br label %144

130:                                              ; preds = %119
  %131 = load i64, i64* %6, align 8
  %132 = load i64, i64* %3, align 8
  %133 = sub i64 %131, %132
  %134 = lshr exact i64 %133, 2
  %135 = trunc i64 %134 to i32
  store i32 %135, i32* %12, align 8
  store i32 5, i32* %94, align 4
  %136 = inttoptr i64 %131 to i32*
  br label %144

137:                                              ; preds = %119
  %138 = load i64, i64* %6, align 8
  %139 = load i64, i64* %3, align 8
  %140 = sub i64 %138, %139
  %141 = lshr exact i64 %140, 2
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %93, align 8
  %143 = inttoptr i64 %138 to i32*
  br label %144

144:                                              ; preds = %121, %137, %130, %123
  %145 = phi i32* [ %122, %121 ], [ %143, %137 ], [ %136, %130 ], [ %129, %123 ]
  %146 = load i32*, i32** %41, align 8
  %147 = icmp eq i32* %145, %146
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = load i32, i32* %111, align 4
  store i32 %149, i32* %145, align 4
  %150 = getelementptr inbounds i32, i32* %145, i64 1
  %151 = ptrtoint i32* %150 to i64
  store i64 %151, i64* %6, align 8
  br label %203

152:                                              ; preds = %144
  %153 = ptrtoint i32* %146 to i64
  %154 = load i64, i64* %3, align 8
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 4611686018427387903
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  %160 = bitcast %"class.std::__1::vector.158"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #20
  unreachable

161:                                              ; preds = %152
  %162 = icmp ult i64 %156, 2305843009213693951
  br i1 %162, label %163, label %171

163:                                              ; preds = %161
  %164 = ashr exact i64 %155, 1
  %165 = icmp ult i64 %164, %157
  %166 = select i1 %165, i64 %157, i64 %164
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %176, label %168

168:                                              ; preds = %163
  %169 = icmp ugt i64 %166, 4611686018427387903
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  tail call void @abort() #20
  unreachable

171:                                              ; preds = %168, %161
  %172 = phi i64 [ %166, %168 ], [ 4611686018427387903, %161 ]
  %173 = shl i64 %172, 2
  %174 = tail call i8* @_Znwm(i64 %173) #19
  %175 = bitcast i8* %174 to i32*
  br label %176

176:                                              ; preds = %171, %163
  %177 = phi i64 [ %172, %171 ], [ 0, %163 ]
  %178 = phi i32* [ %175, %171 ], [ null, %163 ]
  %179 = getelementptr inbounds i32, i32* %178, i64 %156
  %180 = getelementptr inbounds i32, i32* %178, i64 %177
  %181 = ptrtoint i32* %180 to i64
  %182 = load i32, i32* %111, align 4
  store i32 %182, i32* %179, align 4
  %183 = getelementptr inbounds i32, i32* %179, i64 1
  %184 = ptrtoint i32* %183 to i64
  %185 = load i32*, i32** %95, align 8
  %186 = load i64, i64* %6, align 8
  %187 = ptrtoint i32* %185 to i64
  %188 = sub i64 %186, %187
  %189 = ashr exact i64 %188, 2
  %190 = sub nsw i64 0, %189
  %191 = getelementptr inbounds i32, i32* %179, i64 %190
  %192 = ptrtoint i32* %191 to i64
  %193 = icmp sgt i64 %188, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %176
  %195 = bitcast i32* %191 to i8*
  %196 = bitcast i32* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %195, i8* align 4 %196, i64 %188, i1 false) #18
  %197 = load i32*, i32** %95, align 8
  br label %198

198:                                              ; preds = %194, %176
  %199 = phi i32* [ %185, %176 ], [ %197, %194 ]
  store i64 %192, i64* %3, align 8
  store i64 %184, i64* %6, align 8
  store i64 %181, i64* %42, align 8
  %200 = icmp eq i32* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %198
  %202 = bitcast i32* %199 to i8*
  tail call void @_ZdlPv(i8* %202) #19
  br label %203

203:                                              ; preds = %148, %198, %201
  %204 = getelementptr inbounds %struct.anon.204, %struct.anon.204* %104, i64 0, i32 1
  %205 = load i8**, i8*** %10, align 8
  %206 = load i8**, i8*** %67, align 8
  %207 = icmp eq i8** %205, %206
  %208 = ptrtoint i8** %206 to i64
  br i1 %207, label %215, label %209

209:                                              ; preds = %203
  %210 = bitcast i8** %204 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast i8** %205 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds i8*, i8** %205, i64 1
  %214 = ptrtoint i8** %213 to i64
  store i64 %214, i64* %11, align 8
  br label %270

215:                                              ; preds = %203
  %216 = ptrtoint i8** %205 to i64
  %217 = load i64, i64* %8, align 8
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 3
  %220 = add nsw i64 %219, 1
  %221 = icmp ugt i64 %220, 2305843009213693951
  br i1 %221, label %222, label %224

222:                                              ; preds = %215
  %223 = bitcast %"class.std::__1::vector.165"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %223) #20
  unreachable

224:                                              ; preds = %215
  %225 = sub i64 %208, %217
  %226 = ashr exact i64 %225, 3
  %227 = icmp ult i64 %226, 1152921504606846975
  br i1 %227, label %228, label %236

228:                                              ; preds = %224
  %229 = ashr exact i64 %225, 2
  %230 = icmp ult i64 %229, %220
  %231 = select i1 %230, i64 %220, i64 %229
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %241, label %233

233:                                              ; preds = %228
  %234 = icmp ugt i64 %231, 2305843009213693951
  br i1 %234, label %235, label %236

235:                                              ; preds = %233
  tail call void @abort() #20
  unreachable

236:                                              ; preds = %233, %224
  %237 = phi i64 [ %231, %233 ], [ 2305843009213693951, %224 ]
  %238 = shl i64 %237, 3
  %239 = tail call i8* @_Znwm(i64 %238) #19
  %240 = bitcast i8* %239 to i8**
  br label %241

241:                                              ; preds = %236, %228
  %242 = phi i64 [ %237, %236 ], [ 0, %228 ]
  %243 = phi i8** [ %240, %236 ], [ null, %228 ]
  %244 = getelementptr inbounds i8*, i8** %243, i64 %219
  %245 = getelementptr inbounds i8*, i8** %243, i64 %242
  %246 = ptrtoint i8** %245 to i64
  %247 = bitcast i8** %204 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast i8** %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds i8*, i8** %244, i64 1
  %251 = ptrtoint i8** %250 to i64
  %252 = load i8**, i8*** %96, align 8
  %253 = load i64, i64* %11, align 8
  %254 = ptrtoint i8** %252 to i64
  %255 = sub i64 %253, %254
  %256 = ashr exact i64 %255, 3
  %257 = sub nsw i64 0, %256
  %258 = getelementptr inbounds i8*, i8** %244, i64 %257
  %259 = ptrtoint i8** %258 to i64
  %260 = icmp sgt i64 %255, 0
  br i1 %260, label %261, label %265

261:                                              ; preds = %241
  %262 = bitcast i8** %258 to i8*
  %263 = bitcast i8** %252 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 %255, i1 false) #18
  %264 = load i8**, i8*** %96, align 8
  br label %265

265:                                              ; preds = %261, %241
  %266 = phi i8** [ %252, %241 ], [ %264, %261 ]
  store i64 %259, i64* %8, align 8
  store i64 %251, i64* %11, align 8
  store i64 %246, i64* %68, align 8
  %267 = icmp eq i8** %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = bitcast i8** %266 to i8*
  tail call void @_ZdlPv(i8* %269) #19
  br label %270

270:                                              ; preds = %268, %265, %209, %103
  %271 = getelementptr inbounds %struct.anon.204, %struct.anon.204* %104, i64 1
  %272 = icmp eq %struct.anon.204* %271, getelementptr inbounds ([9 x %struct.anon.204], [9 x %struct.anon.204]* @_ZZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEvE14all_timestamps, i64 1, i64 0)
  br i1 %272, label %97, label %103

273:                                              ; preds = %1, %97
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL22InitializeNativeWindowEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %3, align 8
  store %"class.gl::GLSurfacePresentationHelper"* null, %"class.gl::GLSurfacePresentationHelper"** %3, align 8
  %5 = icmp eq %"class.gl::GLSurfacePresentationHelper"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2gl27GLSurfacePresentationHelperD1Ev(%"class.gl::GLSurfacePresentationHelper"* nonnull %4) #18
  %7 = bitcast %"class.gl::GLSurfacePresentationHelper"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #19
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %9, align 8
  store %"class.gfx::VSyncProvider"* null, %"class.gfx::VSyncProvider"** %9, align 8
  %11 = icmp eq %"class.gfx::VSyncProvider"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.gfx::VSyncProvider"* %10 to void (%"class.gfx::VSyncProvider"*)***
  %14 = load void (%"class.gfx::VSyncProvider"*)**, void (%"class.gfx::VSyncProvider"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %14, i64 1
  %16 = load void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %15, align 8
  tail call void %16(%"class.gfx::VSyncProvider"* nonnull %10) #18
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %17
  %22 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %23 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %24 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %25 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %25, i64 26
  %27 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %26, align 8
  %28 = tail call i8* %27(%"class.gl::GLSurfaceEGL"* %23) #18
  %29 = load i8*, i8** %18, align 8
  %30 = bitcast %"class.gl::EGLApi"* %22 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %31 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %31, i64 21
  %33 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %32, align 8
  %34 = tail call i32 %33(%"class.gl::EGLApi"* %22, i8* %28, i8* %29) #18
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %21
  %37 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %37, label %38, label %46

38:                                               ; preds = %36
  %39 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1633, i32 2) #18
  %40 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56, i64 0, i64 0), i64 36) #18
  %43 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %44 = call i64 @strlen(i8* %43) #18
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* %43, i64 %44) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #18
  br label %46

46:                                               ; preds = %38, %36, %21
  store i8* null, i8** %18, align 8
  br label %47

47:                                               ; preds = %17, %46
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL11IsOffscreenEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl22NativeViewGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11, !prof !25

11:                                               ; preds = %2
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #18
  %13 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i64 (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %14 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)**, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %14, i64 8
  %16 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %15, align 8
  %17 = tail call i64 %16(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %3, align 4
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #18
  %20 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)**, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*** %13, align 8
  %21 = getelementptr inbounds i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %20, i64 8
  %22 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %21, align 8
  %23 = tail call i64 %22(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %24 = lshr i64 %23, 32
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %4, align 4
  %26 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #18
  br label %27

27:                                               ; preds = %2, %11
  %28 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %11 ]
  %29 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57, i64 0, i64 0), %11 ]
  %30 = phi i64 [ -6148914691236517206, %2 ], [ %26, %11 ]
  %31 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  store i64 0, i64* %5, align 8
  %32 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 12
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  br label %57

37:                                               ; preds = %27
  %38 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %39 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %40 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %41 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %40, align 8
  %42 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %41, i64 26
  %43 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %42, align 8
  %44 = call i8* %43(%"class.gl::GLSurfaceEGL"* %39) #18
  %45 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.gl::EGLApi"* %38 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)***
  %48 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)** %48, i64 39
  %50 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)** %49, align 8
  %51 = call i32 %50(%"class.gl::EGLApi"* %38, i8* %44, i8* %46, i64* nonnull %5) #18
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %37
  %54 = load i64, i64* %5, align 8
  %55 = trunc i64 %54 to i32
  br label %57

56:                                               ; preds = %37
  store i64 -1, i64* %5, align 8
  br label %57

57:                                               ; preds = %35, %53, %56
  %58 = phi i8* (%"class.gl::GLSurfaceEGL"*)*** [ %36, %35 ], [ %40, %53 ], [ %40, %56 ]
  %59 = phi i32 [ 0, %35 ], [ %55, %53 ], [ -1, %56 ]
  %60 = phi i1 [ true, %35 ], [ true, %53 ], [ false, %56 ]
  %61 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #18
  %62 = getelementptr inbounds %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %64 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 16, i1 false)
  %65 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %63, align 8
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEEi(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %6, %"class.gl::GLSurfacePresentationHelper"* %65, %"class.base::OnceCallback"* nonnull %7, i32 %59) #18
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %70) #18
  %71 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %72 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %73 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %58, align 8
  %74 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %73, i64 26
  %75 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %74, align 8
  %76 = call i8* %75(%"class.gl::GLSurfaceEGL"* %72) #18
  %77 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.gl::EGLApi"* %71 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %80 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %79, align 8
  %81 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %80, i64 74
  %82 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %81, align 8
  %83 = call i32 %82(%"class.gl::EGLApi"* %71, i8* %76, i8* %78) #18
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %57
  store i32 1, i32* %62, align 8
  br label %91

86:                                               ; preds = %57
  %87 = load i8, i8* %32, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %5, align 8
  call void @_ZN2gl22NativeViewGLSurfaceEGL16UpdateSwapEventsEmb(%"class.gl::NativeViewGLSurfaceEGL"* %0, i64 %90, i1 zeroext %60)
  br label %91

91:                                               ; preds = %86, %89, %85
  %92 = load i32, i32* %62, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersD1Ev(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  %93 = icmp eq i8* %28, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %91
  %95 = load i8, i8* %28, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %28, i8* %29, i64 %30) #18
  br label %98

98:                                               ; preds = %91, %94, %97
  ret i32 %92
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #18
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #18
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #18
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #18
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #18
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #18
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  ret i64 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL29CommitAndClearPendingOverlaysEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) local_unnamed_addr #3 align 2 {
  ret i1 true
}

declare void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEEi(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"*, %"class.gl::GLSurfacePresentationHelper"*, %"class.base::OnceCallback"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGL16UpdateSwapEventsEmb(%"class.gl::NativeViewGLSurfaceEGL"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 19
  %6 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %6, i64 1) #18
  %7 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 19, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %9) #18
  %11 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %10, i64 0, i32 0
  store i8 %4, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %10, i64 0, i32 1
  store i64 %1, i64* %12, align 8
  %13 = load i64, i64* %8, align 8
  %14 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  store i64 0, i64* %8, align 8
  br label %22

19:                                               ; preds = %3
  %20 = add i64 %13, 1
  store i64 %20, i64* %8, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %18
  br label %23

23:                                               ; preds = %19, %22
  %24 = phi i64 [ %16, %22 ], [ %13, %19 ]
  %25 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZNK4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %24) #18
  %26 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 19, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %8, align 8
  %29 = icmp ult i64 %28, %27
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = sub i64 %28, %27
  br label %36

32:                                               ; preds = %23
  %33 = load i64, i64* %14, align 8
  %34 = sub i64 %28, %27
  %35 = add i64 %34, %33
  br label %36

36:                                               ; preds = %30, %32
  %37 = phi i64 [ %31, %30 ], [ %35, %32 ]
  %38 = icmp ult i64 %37, 5
  br i1 %38, label %74, label %39

39:                                               ; preds = %36
  %40 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %27) #18
  %41 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %40, i64 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %39
  %45 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 0) acquire, align 8
  %46 = icmp ugt i64 %45, 1
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 0)) #18
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN2gl12_GLOBAL__N_125kSwapEventTraceCategoriesE, i64 0, i64 0)) #18
  store i8* %50, i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE to i8*)) #18
  br label %53

51:                                               ; preds = %47
  %52 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 0) acquire, align 8
  br label %53

53:                                               ; preds = %44, %49, %51
  %54 = phi i64 [ %45, %44 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_120g_trace_swap_enabledE, i64 0, i32 1, i64 0) to i64), %49 ], [ %52, %51 ]
  %55 = inttoptr i64 %54 to %"struct.gl::(anonymous namespace)::TraceSwapEventsInitializer"*
  %56 = getelementptr inbounds %"struct.gl::(anonymous namespace)::TraceSwapEventsInitializer", %"struct.gl::(anonymous namespace)::TraceSwapEventsInitializer"* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %40, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEm(%"class.gl::NativeViewGLSurfaceEGL"* %0, i64 %62)
  br label %63

63:                                               ; preds = %53, %39, %60
  %64 = load i64, i64* %26, align 8
  %65 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %64) #18
  %66 = load i64, i64* %26, align 8
  %67 = add i64 %66, 1
  %68 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %67) #18
  %69 = load i64, i64* %26, align 8
  %70 = add i64 %69, 1
  %71 = load i64, i64* %14, align 8
  %72 = icmp eq i64 %70, %71
  %73 = select i1 %72, i64 0, i64 %70
  store i64 %73, i64* %26, align 8
  tail call void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %6) #18
  br label %74

74:                                               ; preds = %36, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersD1Ev(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEm(%"class.gl::NativeViewGLSurfaceEGL"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TraceArguments", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.std::__1::vector.205", align 8
  %7 = alloca %"class.std::__1::vector.212", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::vector.205"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.158"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #18
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %21, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.205"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #20
  unreachable

27:                                               ; preds = %23
  %28 = shl i64 %20, 1
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast %"class.std::__1::vector.205"* %6 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i64, i64* %30, i64 %21
  store i64* %32, i64** %13, align 8
  %33 = shl nsw i64 %20, 1
  %34 = and i64 %33, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -1, i64 %34, i1 false)
  %35 = bitcast i64** %12 to i64*
  %36 = ptrtoint i64* %32 to i64
  store i64 %36, i64* %35, align 8
  %37 = ptrtoint i8* %29 to i64
  br label %38

38:                                               ; preds = %2, %27
  %39 = phi i64 [ 0, %2 ], [ %37, %27 ]
  %40 = phi i64* [ null, %2 ], [ %30, %27 ]
  %41 = phi i64 [ 0, %2 ], [ %36, %27 ]
  %42 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %43 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %44 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %45 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %44, align 8
  %46 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %45, i64 26
  %47 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %46, align 8
  %48 = tail call i8* %47(%"class.gl::GLSurfaceEGL"* %43) #18
  %49 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %50 = load i8*, i8** %49, align 8
  %51 = load i64, i64* %16, align 8
  %52 = load i64, i64* %18, align 8
  %53 = sub i64 %51, %52
  %54 = lshr exact i64 %53, 2
  %55 = trunc i64 %54 to i32
  %56 = inttoptr i64 %52 to i32*
  %57 = bitcast %"class.gl::EGLApi"* %42 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)***
  %58 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)** %58, i64 35
  %60 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)** %59, align 8
  %61 = tail call i32 %60(%"class.gl::EGLApi"* %42, i8* %48, i8* %50, i64 %1, i32 %55, i32* %56, i64* %40) #18
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %38
  %64 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %65 = and i8 %64, 25
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %427, label %67, !prof !25

67:                                               ; preds = %63
  %68 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %69 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #18
  %70 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %71 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %71, i64* %70, align 8
  %72 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %68, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #18
  br label %427

73:                                               ; preds = %38
  %74 = bitcast %"class.std::__1::vector.212"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #18
  %75 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %7, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %7, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #18
  %78 = load i64, i64* %16, align 8
  %79 = load i64, i64* %18, align 8
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 2
  %82 = bitcast %struct.TimeNamePair** %77 to i64*
  %83 = bitcast %"class.std::__1::vector.212"* %7 to i64*
  %84 = icmp eq i64 %80, 0
  br i1 %84, label %98, label %85

85:                                               ; preds = %73
  %86 = icmp ugt i64 %81, 1152921504606846975
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @abort() #20
  unreachable

88:                                               ; preds = %85
  %89 = bitcast %struct.TimeNamePair** %76 to i64*
  %90 = shl i64 %80, 2
  %91 = tail call i8* @_Znwm(i64 %90) #19
  %92 = bitcast i8* %91 to %struct.TimeNamePair*
  %93 = ptrtoint i8* %91 to i64
  %94 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %92, i64 %81
  %95 = ptrtoint %struct.TimeNamePair* %94 to i64
  %96 = ptrtoint i8* %91 to i64
  store i64 %96, i64* %83, align 8
  store i64 %93, i64* %89, align 8
  store i64 %95, i64* %82, align 8
  %97 = bitcast i8* %91 to %struct.TimeNamePair*
  br label %98

98:                                               ; preds = %88, %73
  %99 = phi i64 [ 0, %73 ], [ %96, %88 ]
  %100 = phi %struct.TimeNamePair* [ null, %73 ], [ %92, %88 ]
  %101 = phi %struct.TimeNamePair* [ null, %73 ], [ %97, %88 ]
  %102 = phi i64 [ 0, %73 ], [ %93, %88 ]
  %103 = icmp eq i64 %41, %39
  br i1 %103, label %110, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14, i32 0, i32 0
  %106 = bitcast %struct.TimeNamePair** %76 to i64*
  %107 = sub i64 %41, %39
  %108 = ashr exact i64 %107, 3
  %109 = inttoptr i64 %39 to i64*
  br label %116

110:                                              ; preds = %192, %98
  %111 = phi %struct.TimeNamePair* [ %100, %98 ], [ %194, %192 ]
  %112 = phi %struct.TimeNamePair* [ %101, %98 ], [ %195, %192 ]
  %113 = phi %struct.TimeNamePair* [ %100, %98 ], [ %196, %192 ]
  %114 = phi %struct.TimeNamePair* [ %101, %98 ], [ %197, %192 ]
  %115 = icmp eq %struct.TimeNamePair* %114, %113
  br i1 %115, label %202, label %212

116:                                              ; preds = %104, %192
  %117 = phi i64 [ %99, %104 ], [ %193, %192 ]
  %118 = phi %struct.TimeNamePair* [ %100, %104 ], [ %194, %192 ]
  %119 = phi %struct.TimeNamePair* [ %101, %104 ], [ %195, %192 ]
  %120 = phi %struct.TimeNamePair* [ %100, %104 ], [ %196, %192 ]
  %121 = phi %struct.TimeNamePair* [ %101, %104 ], [ %197, %192 ]
  %122 = phi i64 [ %102, %104 ], [ %198, %192 ]
  %123 = phi %struct.TimeNamePair* [ %100, %104 ], [ %199, %192 ]
  %124 = phi i64* [ %40, %104 ], [ %109, %192 ]
  %125 = phi i64 [ 0, %104 ], [ %200, %192 ]
  %126 = getelementptr inbounds i64, i64* %124, i64 %125
  %127 = load i64, i64* %126, align 8
  switch i64 %127, label %128 [
    i64 0, label %192
    i64 -1, label %192
    i64 -2, label %192
  ]

128:                                              ; preds = %116
  %129 = sdiv i64 %127, 1000
  %130 = load i8**, i8*** %105, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 %125
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = load %struct.TimeNamePair*, %struct.TimeNamePair** %77, align 8
  %135 = icmp ult %struct.TimeNamePair* %123, %134
  %136 = ptrtoint %struct.TimeNamePair* %134 to i64
  br i1 %135, label %137, label %143

137:                                              ; preds = %128
  %138 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %123, i64 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %138, align 8
  %139 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %123, i64 0, i32 1
  %140 = bitcast i8** %139 to i64*
  store i64 %133, i64* %140, align 8
  %141 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %123, i64 1
  %142 = ptrtoint %struct.TimeNamePair* %141 to i64
  store i64 %142, i64* %106, align 8
  br label %192

143:                                              ; preds = %128
  %144 = ptrtoint %struct.TimeNamePair* %123 to i64
  %145 = sub i64 %144, %117
  %146 = ashr exact i64 %145, 4
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 1152921504606846975
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = bitcast %"class.std::__1::vector.212"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %150) #20
  unreachable

151:                                              ; preds = %143
  %152 = sub i64 %136, %117
  %153 = ashr exact i64 %152, 4
  %154 = icmp ult i64 %153, 576460752303423487
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 3
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 1152921504606846975
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  tail call void @abort() #20
  unreachable

163:                                              ; preds = %160, %151
  %164 = phi i64 [ %158, %160 ], [ 1152921504606846975, %151 ]
  %165 = shl i64 %164, 4
  %166 = tail call i8* @_Znwm(i64 %165) #19
  %167 = bitcast i8* %166 to %struct.TimeNamePair*
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi %struct.TimeNamePair* [ %167, %163 ], [ null, %155 ]
  %171 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %170, i64 %146
  %172 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %170, i64 %169
  %173 = ptrtoint %struct.TimeNamePair* %172 to i64
  %174 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %174, align 8
  %175 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %170, i64 %146, i32 1
  %176 = bitcast i8** %175 to i64*
  store i64 %133, i64* %176, align 8
  %177 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 1
  %178 = ptrtoint %struct.TimeNamePair* %177 to i64
  %179 = sub i64 %122, %117
  %180 = ashr exact i64 %179, 4
  %181 = sub nsw i64 0, %180
  %182 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 %181
  %183 = ptrtoint %struct.TimeNamePair* %182 to i64
  %184 = icmp sgt i64 %179, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %168
  %186 = bitcast %struct.TimeNamePair* %182 to i8*
  %187 = inttoptr i64 %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 %179, i1 false) #18
  br label %188

188:                                              ; preds = %185, %168
  store i64 %183, i64* %83, align 8
  store i64 %178, i64* %106, align 8
  store i64 %173, i64* %82, align 8
  %189 = icmp eq i64 %117, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = inttoptr i64 %117 to i8*
  tail call void @_ZdlPv(i8* %191) #19
  br label %192

192:                                              ; preds = %116, %116, %116, %190, %188, %137
  %193 = phi i64 [ %117, %116 ], [ %117, %116 ], [ %117, %116 ], [ %183, %190 ], [ %183, %188 ], [ %117, %137 ]
  %194 = phi %struct.TimeNamePair* [ %118, %116 ], [ %118, %116 ], [ %118, %116 ], [ %177, %190 ], [ %177, %188 ], [ %141, %137 ]
  %195 = phi %struct.TimeNamePair* [ %119, %116 ], [ %119, %116 ], [ %119, %116 ], [ %182, %190 ], [ %182, %188 ], [ %119, %137 ]
  %196 = phi %struct.TimeNamePair* [ %120, %116 ], [ %120, %116 ], [ %120, %116 ], [ %177, %190 ], [ %177, %188 ], [ %141, %137 ]
  %197 = phi %struct.TimeNamePair* [ %121, %116 ], [ %121, %116 ], [ %121, %116 ], [ %182, %190 ], [ %182, %188 ], [ %121, %137 ]
  %198 = phi i64 [ %122, %116 ], [ %122, %116 ], [ %122, %116 ], [ %178, %190 ], [ %178, %188 ], [ %142, %137 ]
  %199 = phi %struct.TimeNamePair* [ %123, %116 ], [ %123, %116 ], [ %123, %116 ], [ %177, %190 ], [ %177, %188 ], [ %141, %137 ]
  %200 = add nuw i64 %125, 1
  %201 = icmp ult i64 %200, %108
  br i1 %201, label %116, label %110

202:                                              ; preds = %110
  %203 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %204 = and i8 %203, 25
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %419, label %206, !prof !25

206:                                              ; preds = %202
  %207 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %208 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #18
  %209 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %210 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %210, i64* %209, align 8
  %211 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %207, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #18
  br label %419

212:                                              ; preds = %110
  tail call fastcc void @"_ZNSt3__16__sortIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEvT0_S7_T_"(%struct.TimeNamePair* %114, %struct.TimeNamePair* %113) #18
  %213 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %214 = and i8 %213, 25
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %286, label %216, !prof !25

216:                                              ; preds = %212
  %217 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %218 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %112, i64 0, i32 0
  %219 = tail call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* null, i64 %1, i64 0, i32 %217, %"class.base::TimeTicks"* dereferenceable(8) %218, %"class.base::trace_event::TraceArguments"* null, i32 18) #18
  %220 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %221 = and i8 %220, 25
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %286, label %223, !prof !25

223:                                              ; preds = %216
  %224 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %225 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #18
  %226 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %111, i64 -1, i32 0, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %227, i64 1) #18
  %229 = extractvalue { i64, i1 } %228, 1
  %230 = extractvalue { i64, i1 } %228, 0
  %231 = select i1 %229, i64 9223372036854775807, i64 %230, !prof !26
  %232 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %233) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 40, i1 false) #18
  store i8 1, i8* %233, align 8
  %234 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 1, i64 0
  store i8 3, i8* %234, align 1
  %235 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0), i8** %235, align 8
  %236 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 3, i64 0, i32 0
  store i64 %1, i64* %236, align 8
  %237 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* null, i64 %1, i64 0, i32 %224, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* nonnull %3, i32 18) #18
  %238 = load i8, i8* %233, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %274, label %240

240:                                              ; preds = %223, %269
  %241 = phi i64 [ %270, %269 ], [ 0, %223 ]
  %242 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 1, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 8
  br i1 %244, label %245, label %256

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 3, i64 %241
  %247 = bitcast %"union.base::trace_event::TraceValue"* %246 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %248 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %247, align 8
  %249 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %248, null
  br i1 %249, label %269, label %250

250:                                              ; preds = %245
  %251 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %248 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %252 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %252, i64 1
  %254 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %253, align 8
  call void %254(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %248) #18
  %255 = load i8, i8* %242, align 1
  br label %256

256:                                              ; preds = %250, %240
  %257 = phi i8 [ %243, %240 ], [ %255, %250 ]
  %258 = icmp eq i8 %257, 9
  br i1 %258, label %259, label %269

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %3, i64 0, i32 3, i64 %241
  %261 = bitcast %"union.base::trace_event::TraceValue"* %260 to %"class.protozero::HeapBuffered"**
  %262 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %261, align 8
  %263 = icmp eq %"class.protozero::HeapBuffered"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %262, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %265) #18
  %266 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %262, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %266) #18
  %267 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %262, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %267) #18
  %268 = bitcast %"class.protozero::HeapBuffered"* %262 to i8*
  call void @_ZdlPv(i8* %268) #19
  br label %269

269:                                              ; preds = %264, %259, %256, %245
  %270 = add nuw nsw i64 %241, 1
  %271 = load i8, i8* %233, align 8
  %272 = zext i8 %271 to i64
  %273 = icmp ult i64 %270, %272
  br i1 %273, label %240, label %274

274:                                              ; preds = %269, %223
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %233) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #18
  %275 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %276 = and i8 %275, 25
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %286, label %278, !prof !25

278:                                              ; preds = %274
  %279 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %280 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %279, i64 0, i32 1
  %281 = load i8*, i8** %280, align 8
  %282 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %283 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %284 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %283, i64 0, i32 0
  %285 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 110, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* %281, i8* null, i64 %1, i64 0, i32 %282, %"class.base::TimeTicks"* dereferenceable(8) %284, %"class.base::trace_event::TraceArguments"* null, i32 18) #18
  br label %286

286:                                              ; preds = %212, %216, %274, %278
  %287 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %287) #18
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %291 = bitcast %struct.TimeNamePair** %76 to i64*
  %292 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 -86, i64 24, i1 false)
  %293 = load i64, i64* %291, align 8
  %294 = load i64, i64* %83, align 8
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 4
  %297 = icmp ugt i64 %296, -17
  %298 = inttoptr i64 %294 to %struct.TimeNamePair*
  br i1 %297, label %299, label %301

299:                                              ; preds = %286
  %300 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %300) #20
  unreachable

301:                                              ; preds = %286
  %302 = icmp ult i64 %296, 23
  br i1 %302, label %309, label %303

303:                                              ; preds = %301
  %304 = add nuw nsw i64 %296, 16
  %305 = and i64 %304, -16
  %306 = call i8* @_Znwm(i64 %305) #19
  store i8* %306, i8** %288, align 8
  %307 = or i64 %305, -9223372036854775808
  store i64 %307, i64* %290, align 8
  store i64 %296, i64* %289, align 8
  %308 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %314

309:                                              ; preds = %301
  %310 = trunc i64 %296 to i8
  %311 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %311, i64 0, i32 1, i32 0
  store i8 %310, i8* %312, align 1
  %313 = icmp eq i64 %295, 0
  br i1 %313, label %317, label %314

314:                                              ; preds = %309, %303
  %315 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %311, %309 ], [ %308, %303 ]
  %316 = phi i8* [ %287, %309 ], [ %306, %303 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %316, i8 0, i64 %296, i1 false) #18
  br label %317

317:                                              ; preds = %309, %314
  %318 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %311, %309 ], [ %315, %314 ]
  %319 = phi i8* [ %287, %309 ], [ %316, %314 ]
  %320 = getelementptr inbounds i8, i8* %319, i64 %296
  store i8 0, i8* %320, align 1
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %322 = load i8, i8* %321, align 1
  %323 = icmp slt i8 %322, 0
  %324 = load i64, i64* %289, align 8
  %325 = zext i8 %322 to i64
  %326 = select i1 %323, i64 %324, i64 %325
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %347, label %328

328:                                              ; preds = %317
  %329 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %298, i64 0, i32 1
  %330 = load i8*, i8** %329, align 8
  %331 = load i8, i8* %330, align 1
  %332 = load i8*, i8** %288, align 8
  %333 = select i1 %323, i8* %332, i8* %287
  store i8 %331, i8* %333, align 1
  %334 = load i8, i8* %321, align 1
  %335 = icmp slt i8 %334, 0
  %336 = load i64, i64* %289, align 8
  %337 = zext i8 %334 to i64
  %338 = select i1 %335, i64 %336, i64 %337
  %339 = icmp ugt i64 %338, 1
  br i1 %339, label %355, label %340

340:                                              ; preds = %355, %328
  %341 = phi i8 [ %334, %328 ], [ %366, %355 ]
  %342 = phi i1 [ %335, %328 ], [ %367, %355 ]
  %343 = load i64, i64* %291, align 8
  %344 = load i64, i64* %83, align 8
  %345 = sub i64 %343, %344
  %346 = ashr exact i64 %345, 4
  br label %347

347:                                              ; preds = %340, %317
  %348 = phi i64 [ %346, %340 ], [ %296, %317 ]
  %349 = phi i8 [ %341, %340 ], [ %322, %317 ]
  %350 = phi i1 [ %342, %340 ], [ %323, %317 ]
  %351 = icmp ugt i64 %348, 1
  br i1 %351, label %352, label %374

352:                                              ; preds = %347
  %353 = load i8*, i8** %288, align 8
  %354 = select i1 %350, i8* %353, i8* %287
  br label %380

355:                                              ; preds = %328, %355
  %356 = phi i1 [ %367, %355 ], [ %335, %328 ]
  %357 = phi i64 [ %365, %355 ], [ 1, %328 ]
  %358 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %359 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %358, i64 %357, i32 1
  %360 = load i8*, i8** %359, align 8
  %361 = load i8, i8* %360, align 1
  %362 = load i8*, i8** %288, align 8
  %363 = select i1 %356, i8* %362, i8* %287
  %364 = getelementptr inbounds i8, i8* %363, i64 %357
  store i8 %361, i8* %364, align 1
  %365 = add nuw i64 %357, 1
  %366 = load i8, i8* %321, align 1
  %367 = icmp slt i8 %366, 0
  %368 = load i64, i64* %289, align 8
  %369 = zext i8 %366 to i64
  %370 = select i1 %367, i64 %368, i64 %369
  %371 = icmp ult i64 %365, %370
  br i1 %371, label %355, label %340

372:                                              ; preds = %412
  %373 = load i8, i8* %321, align 1
  br label %374

374:                                              ; preds = %372, %347
  %375 = phi i8 [ %373, %372 ], [ %349, %347 ]
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %374
  %378 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %378) #19
  br label %379

379:                                              ; preds = %374, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %287) #18
  br label %419

380:                                              ; preds = %352, %412
  %381 = phi i64 [ %413, %412 ], [ 1, %352 ]
  %382 = phi i8* [ %383, %412 ], [ %354, %352 ]
  %383 = getelementptr inbounds i8, i8* %382, i64 1
  %384 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %385 = and i8 %384, 25
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %412, label %387, !prof !25

387:                                              ; preds = %380
  %388 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %389 = add i64 %381, -1
  %390 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %391 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %390, i64 %389, i32 0
  %392 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* %383, i8* null, i64 %1, i64 0, i32 %388, %"class.base::TimeTicks"* dereferenceable(8) %391, %"class.base::trace_event::TraceArguments"* null, i32 19) #18
  %393 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %394 = and i8 %393, 25
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %412, label %396, !prof !25

396:                                              ; preds = %387
  %397 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %398 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %399 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %398, i64 %381, i32 0
  %400 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* %383, i8* null, i64 %1, i64 0, i32 %397, %"class.base::TimeTicks"* dereferenceable(8) %399, %"class.base::trace_event::TraceArguments"* null, i32 19) #18
  %401 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %402 = and i8 %401, 25
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %412, label %404, !prof !25

404:                                              ; preds = %396
  %405 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %406 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %405, i64 %381, i32 1
  %407 = load i8*, i8** %406, align 8
  %408 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %409 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %410 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %409, i64 %381, i32 0
  %411 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 110, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* %407, i8* null, i64 %1, i64 0, i32 %408, %"class.base::TimeTicks"* dereferenceable(8) %410, %"class.base::trace_event::TraceArguments"* null, i32 18) #18
  br label %412

412:                                              ; preds = %380, %387, %396, %404
  %413 = add nuw i64 %381, 1
  %414 = load i64, i64* %291, align 8
  %415 = load i64, i64* %83, align 8
  %416 = sub i64 %414, %415
  %417 = ashr exact i64 %416, 4
  %418 = icmp ult i64 %413, %417
  br i1 %418, label %380, label %372

419:                                              ; preds = %206, %202, %379
  %420 = load %struct.TimeNamePair*, %struct.TimeNamePair** %75, align 8
  %421 = icmp eq %struct.TimeNamePair* %420, null
  br i1 %421, label %426, label %422

422:                                              ; preds = %419
  %423 = ptrtoint %struct.TimeNamePair* %420 to i64
  %424 = bitcast %struct.TimeNamePair** %76 to i64*
  store i64 %423, i64* %424, align 8
  %425 = bitcast %struct.TimeNamePair* %420 to i8*
  call void @_ZdlPv(i8* %425) #19
  br label %426

426:                                              ; preds = %419, %422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #18
  br label %427

427:                                              ; preds = %67, %63, %426
  %428 = load i64*, i64** %11, align 8
  %429 = icmp eq i64* %428, null
  br i1 %429, label %434, label %430

430:                                              ; preds = %427
  %431 = ptrtoint i64* %428 to i64
  %432 = bitcast i64** %12 to i64*
  store i64 %431, i64* %432, align 8
  %433 = bitcast i64* %428 to i8*
  call void @_ZdlPv(i8* %433) #19
  br label %434

434:                                              ; preds = %427, %430
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gfx::VSyncProvider"* @_ZN2gl22NativeViewGLSurfaceEGL27CreateVsyncProviderInternalEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %"class.gfx::VSyncProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2gl22NativeViewGLSurfaceEGL7GetSizeEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #18
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #18
  store i32 -1431655766, i32* %3, align 4
  %6 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %8 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %9 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %8, align 8
  %10 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %9, i64 26
  %11 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %10, align 8
  %12 = tail call i8* %11(%"class.gl::GLSurfaceEGL"* %7) #18
  %13 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.gl::EGLApi"* %6 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %16 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %16, i64 60
  %18 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %17, align 8
  %19 = call i32 %18(%"class.gl::EGLApi"* %6, i8* %12, i8* %14, i32 12375, i32* nonnull %2) #18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %44, label %21

21:                                               ; preds = %1
  %22 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %23 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %8, align 8
  %24 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %23, i64 26
  %25 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %24, align 8
  %26 = call i8* %25(%"class.gl::GLSurfaceEGL"* %7) #18
  %27 = load i8*, i8** %13, align 8
  %28 = bitcast %"class.gl::EGLApi"* %22 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)***
  %29 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %29, i64 60
  %31 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*)** %30, align 8
  %32 = call i32 %31(%"class.gl::EGLApi"* %22, i8* %26, i8* %27, i32 12374, i32* nonnull %3) #18
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %21
  %35 = load i32, i32* %2, align 4
  %36 = load i32, i32* %3, align 4
  %37 = icmp sgt i32 %35, 0
  %38 = select i1 %37, i32 %35, i32 0
  %39 = icmp sgt i32 %36, 0
  %40 = select i1 %39, i32 %36, i32 0
  %41 = zext i32 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = zext i32 %38 to i64
  br label %44

44:                                               ; preds = %1, %21, %34
  %45 = phi i64 [ %42, %34 ], [ 0, %21 ], [ 0, %1 ]
  %46 = phi i64 [ %43, %34 ], [ 0, %21 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #18
  %47 = or i64 %46, %45
  ret i64 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.gl::GLSurfaceFormat", align 4
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i64 (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %10 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)**, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %10, i64 8
  %12 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %11, align 8
  %13 = tail call i64 %12(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %14
  br i1 %17, label %18, label %24

18:                                               ; preds = %5
  %19 = lshr i64 %13, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, %20
  br i1 %23, label %68, label %24

24:                                               ; preds = %5, %18
  %25 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 3
  %26 = bitcast %"class.gfx::Size"* %1 to i64*
  %27 = bitcast %"class.gfx::Size"* %25 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 8
  %29 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #18
  %30 = tail call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #18
  %31 = bitcast %"class.gl::GLContext"* %29 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %32 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %32, i64 1
  %34 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %33, align 8
  tail call void %34(%"class.gl::GLContext"* %29, %"class.gl::GLSurface"* %30) #18
  %35 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to void (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %36 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)**, void (%"class.gl::NativeViewGLSurfaceEGL"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %36, i64 1
  %38 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %37, align 8
  tail call void %38(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %39 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %6, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %39) #18
  %40 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)***
  %41 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)**, i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*** %40, align 8
  %42 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*, i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.gl::NativeViewGLSurfaceEGL"* %0, %"class.gl::GLSurfaceFormat"* nonnull %6) #18
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %6) #18
  br i1 %43, label %51, label %44

44:                                               ; preds = %24
  %45 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %45, label %46, label %68

46:                                               ; preds = %44
  %47 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %47) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1828, i32 2) #18
  %48 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_ostringstream"* %48 to %"class.std::__1::basic_ostream"*
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64, i64 0, i64 0), i64 24) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %47) #18
  br label %68

51:                                               ; preds = %24
  %52 = call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* %29, %"class.gl::GLSurface"* %30) #18
  br i1 %52, label %60, label %53

53:                                               ; preds = %51
  %54 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %54, label %55, label %68

55:                                               ; preds = %53
  %56 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %56) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1832, i32 2) #18
  %57 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_ostringstream"* %57 to %"class.std::__1::basic_ostream"*
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.65, i64 0, i64 0), i64 56) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %56) #18
  br label %68

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 20
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp ne i8 %62, 0
  %64 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)***
  %65 = load void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)**, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)** %65, i64 30
  %67 = load void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)** %66, align 8
  call void %67(%"class.gl::NativeViewGLSurfaceEGL"* %0, i1 zeroext %63) #18
  br label %68

68:                                               ; preds = %55, %53, %46, %44, %60, %18
  %69 = phi i1 [ true, %18 ], [ true, %60 ], [ false, %44 ], [ false, %46 ], [ false, %53 ], [ false, %55 ]
  ret i1 %69
}

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #2

declare %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL8RecreateEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gl::GLSurfaceFormat", align 4
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #18
  %6 = tail call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #18
  %7 = bitcast %"class.gl::GLContext"* %5 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %8 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %8, i64 1
  %10 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %9, align 8
  tail call void %10(%"class.gl::GLContext"* %5, %"class.gl::GLSurface"* %6) #18
  %11 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to void (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %12 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)**, void (%"class.gl::NativeViewGLSurfaceEGL"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %12, i64 1
  %14 = load void (%"class.gl::NativeViewGLSurfaceEGL"*)*, void (%"class.gl::NativeViewGLSurfaceEGL"*)** %13, align 8
  tail call void %14(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %15 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %2, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %15) #18
  %16 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)***
  %17 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)**, i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*** %16, align 8
  %18 = load i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*, i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.gl::NativeViewGLSurfaceEGL"* %0, %"class.gl::GLSurfaceFormat"* nonnull %2) #18
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %2) #18
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %21, label %22, label %44

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1850, i32 2) #18
  %24 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.66, i64 0, i64 0), i64 25) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #18
  br label %44

27:                                               ; preds = %1
  %28 = call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* %5, %"class.gl::GLSurface"* %6) #18
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %32) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 1854, i32 2) #18
  %33 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ostringstream"* %33 to %"class.std::__1::basic_ostream"*
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i64 58) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %32) #18
  br label %44

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 20
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp ne i8 %38, 0
  %40 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)***
  %41 = load void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)**, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)** %41, i64 30
  %43 = load void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)*, void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)** %42, align 8
  call void %43(%"class.gl::NativeViewGLSurfaceEGL"* %0, i1 zeroext %39) #18
  br label %44

44:                                               ; preds = %31, %29, %22, %20, %36
  %45 = phi i1 [ true, %36 ], [ false, %20 ], [ false, %22 ], [ false, %29 ], [ false, %31 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl22NativeViewGLSurfaceEGL9GetHandleEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL21SupportsPostSubBufferEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl22NativeViewGLSurfaceEGL9GetOriginEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gl::EGLTimestampClient"* @_ZN2gl22NativeViewGLSurfaceEGL21GetEGLTimestampClientEv(%"class.gl::NativeViewGLSurfaceEGL"* readnone) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 1
  ret %"class.gl::EGLTimestampClient"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn64_NK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 -1, i32 15
  %3 = getelementptr inbounds i32, i32* %2, i64 38
  %4 = bitcast i32* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"* nocapture, %"class.base::TimeDelta"* nocapture, %"class.base::TimeTicks"* nocapture, i32* nocapture, i32) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__1::vector.205", align 8
  store i32 %5, i32* %7, align 4
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14, !prof !25

14:                                               ; preds = %6
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.68, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i32* nonnull dereferenceable(4) %7)
  br label %16

16:                                               ; preds = %6, %14
  %17 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %14 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.68, i64 0, i64 0), %14 ]
  %19 = phi i64 [ -6148914691236517206, %6 ], [ %15, %14 ]
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #18
  store i32 13362, i32* %8, align 4
  %21 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  store i64 0, i64* %9, align 8
  store i32 0, i32* %4, align 4
  %22 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %23 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %24 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %25 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %25, i64 26
  %27 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %26, align 8
  %28 = call i8* %27(%"class.gl::GLSurfaceEGL"* %23) #18
  %29 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.gl::EGLApi"* %22 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)***
  %32 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)** %32, i64 26
  %34 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32*, i64*)** %33, align 8
  %35 = call i32 %34(%"class.gl::EGLApi"* %22, i8* %28, i8* %30, i32 1, i32* nonnull %8, i64* nonnull %9) #18
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 16666, i64* %38, align 8
  %39 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %40 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  br label %151

41:                                               ; preds = %16
  %42 = load i64, i64* %9, align 8
  %43 = icmp eq i64 %42, -2
  br i1 %43, label %151, label %44

44:                                               ; preds = %41
  %45 = sdiv i64 %42, 1000
  %46 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = bitcast %"class.std::__1::vector.205"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #18
  %48 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %10, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %10, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13
  %52 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.158"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #18
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %44
  %61 = icmp ugt i64 %58, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.205"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %63) #20
  unreachable

64:                                               ; preds = %60
  %65 = shl i64 %57, 1
  %66 = call i8* @_Znwm(i64 %65) #19
  %67 = bitcast i8* %66 to i64*
  %68 = bitcast %"class.std::__1::vector.205"* %10 to i8**
  store i8* %66, i8** %68, align 8
  %69 = getelementptr inbounds i64, i64* %67, i64 %58
  store i64* %69, i64** %50, align 8
  %70 = shl nsw i64 %57, 1
  %71 = and i64 %70, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -1, i64 %71, i1 false)
  %72 = bitcast i64** %49 to i64*
  %73 = ptrtoint i64* %69 to i64
  store i64 %73, i64* %72, align 8
  br label %74

74:                                               ; preds = %44, %64
  %75 = load i32, i32* %7, align 4
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %99, label %77

77:                                               ; preds = %74
  %78 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %79 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %24, align 8
  %80 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %79, i64 26
  %81 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %80, align 8
  %82 = call i8* %81(%"class.gl::GLSurfaceEGL"* %23) #18
  %83 = load i8*, i8** %29, align 8
  %84 = load i32, i32* %7, align 4
  %85 = sext i32 %84 to i64
  %86 = load i64, i64* %53, align 8
  %87 = load i64, i64* %55, align 8
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  %91 = inttoptr i64 %87 to i32*
  %92 = load i64*, i64** %48, align 8
  %93 = bitcast %"class.gl::EGLApi"* %78 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)***
  %94 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)** %94, i64 35
  %96 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64, i32, i32*, i64*)** %95, align 8
  %97 = call i32 %96(%"class.gl::EGLApi"* %78, i8* %82, i8* %83, i64 %85, i32 %90, i32* %91, i64* %92) #18
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %77, %74
  %100 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %101 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  store i64 %100, i64* %101, align 8
  %102 = load i64*, i64** %48, align 8
  br label %142

103:                                              ; preds = %77
  %104 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 15
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = load i64*, i64** %48, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %106
  %109 = load i64, i64* %108, align 8
  switch i64 %109, label %124 [
    i64 -2, label %142
    i64 -1, label %110
  ]

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 16
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i64, i64* %107, i64 %113
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, -3
  br i1 %116, label %117, label %121

117:                                              ; preds = %110
  %118 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %119 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  %120 = load i64*, i64** %48, align 8
  br label %129

121:                                              ; preds = %110
  %122 = sdiv i64 %115, 1000
  %123 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  store i64 %122, i64* %123, align 8
  br label %129

124:                                              ; preds = %103
  %125 = sdiv i64 %109, 1000
  %126 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 18
  %128 = load i32, i32* %127, align 4
  store i32 %128, i32* %4, align 4
  br label %129

129:                                              ; preds = %117, %121, %124
  %130 = phi i64* [ %120, %117 ], [ %107, %121 ], [ %107, %124 ]
  %131 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 17
  %132 = load i32, i32* %131, align 8
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i64, i64* %130, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = icmp ugt i64 %135, -3
  br i1 %136, label %137, label %139

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  store i64 0, i64* %138, align 8
  br label %142

139:                                              ; preds = %129
  %140 = sdiv i64 %135, 1000
  %141 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  store i64 %140, i64* %141, align 8
  br label %142

142:                                              ; preds = %139, %137, %99, %103
  %143 = phi i64* [ %107, %103 ], [ %102, %99 ], [ %130, %137 ], [ %130, %139 ]
  %144 = phi i1 [ false, %103 ], [ true, %99 ], [ true, %137 ], [ true, %139 ]
  %145 = icmp eq i64* %143, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %142
  %147 = ptrtoint i64* %143 to i64
  %148 = bitcast i64** %49 to i64*
  store i64 %147, i64* %148, align 8
  %149 = bitcast i64* %143 to i8*
  call void @_ZdlPv(i8* %149) #19
  br label %150

150:                                              ; preds = %142, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #18
  br label %151

151:                                              ; preds = %41, %150, %37
  %152 = phi i1 [ %144, %150 ], [ true, %37 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #18
  %153 = icmp eq i8* %17, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %151
  %155 = load i8, i8* %17, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #18
  br label %158

158:                                              ; preds = %151, %154, %157
  ret i1 %152
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #18
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #18
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #18
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #18
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #18
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #18
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #19
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18
  ret i64 %22
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn64_N2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"* nocapture, %"class.base::TimeDelta"* nocapture, %"class.base::TimeTicks"* nocapture, i32* nocapture, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 -1, i32 15
  %8 = bitcast i32* %7 to %"class.gl::NativeViewGLSurfaceEGL"*
  %9 = tail call zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji(%"class.gl::NativeViewGLSurfaceEGL"* %8, %"class.base::TimeTicks"* %1, %"class.base::TimeDelta"* %2, %"class.base::TimeTicks"* %3, i32* %4, i32 %5)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl22NativeViewGLSurfaceEGL21SwapBuffersWithDamageERKNSt3__16vectorIiNS1_9allocatorIiEEEEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.std::__1::vector.158"* nocapture readonly dereferenceable(24), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %9 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %8, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %4, %"class.gl::GLSurfacePresentationHelper"* %10, %"class.base::OnceCallback"* nonnull %5) #18
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #18
  %16 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %17 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %18 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %19 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %18, align 8
  %20 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %19, i64 26
  %21 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %20, align 8
  %22 = call i8* %21(%"class.gl::GLSurfaceEGL"* %17) #18
  %23 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %1, i64 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint i32* %26 to i64
  %31 = sub i64 %29, %30
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i32
  %34 = bitcast %"class.gl::EGLApi"* %16 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)***
  %35 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)** %35, i64 75
  %37 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32)** %36, align 8
  %38 = call i32 %37(%"class.gl::EGLApi"* %16, i8* %22, i8* %24, i32* %26, i32 %33) #18
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %3
  %41 = load i32, i32* %7, align 8
  br label %43

42:                                               ; preds = %3
  store i32 1, i32* %7, align 8
  br label %43

43:                                               ; preds = %40, %42
  %44 = phi i32 [ %41, %40 ], [ 1, %42 ]
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersD1Ev(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret i32 %44
}

declare void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"*, %"class.gl::GLSurfacePresentationHelper"*, %"class.base::OnceCallback"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl22NativeViewGLSurfaceEGL13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, i32, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  store i32 %3, i32* %7, align 4
  store i32 %4, i32* %8, align 4
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14, !prof !25

14:                                               ; preds = %6
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventIRiS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i32* nonnull dereferenceable(4) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i32* nonnull dereferenceable(4) %8)
  br label %16

16:                                               ; preds = %6, %14
  %17 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %14 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), %14 ]
  %19 = phi i64 [ -6148914691236517206, %6 ], [ %15, %14 ]
  %20 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %16
  %24 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i64 (%"class.gl::NativeViewGLSurfaceEGL"*)***
  %25 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)**, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %25, i64 8
  %27 = load i64 (%"class.gl::NativeViewGLSurfaceEGL"*)*, i64 (%"class.gl::NativeViewGLSurfaceEGL"*)** %26, align 8
  %28 = call i64 %27(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %29 = lshr i64 %28, 32
  %30 = trunc i64 %29 to i32
  %31 = load i32, i32* %8, align 4
  %32 = add i32 %31, %2
  %33 = sub i32 %30, %32
  br label %34

34:                                               ; preds = %23, %16
  %35 = phi i32 [ %33, %23 ], [ %2, %16 ]
  %36 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #18
  %37 = getelementptr inbounds %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %9, i64 0, i32 1
  %38 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %39 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  %40 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %38, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %9, %"class.gl::GLSurfacePresentationHelper"* %40, %"class.base::OnceCallback"* nonnull %10) #18
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #18
  %46 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %47 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %48 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %49 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %48, align 8
  %50 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %49, i64 26
  %51 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %50, align 8
  %52 = call i8* %51(%"class.gl::GLSurfaceEGL"* %47) #18
  %53 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 5
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %8, align 4
  %57 = bitcast %"class.gl::EGLApi"* %46 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)***
  %58 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)** %58, i64 49
  %60 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i32, i32, i32)** %59, align 8
  %61 = call i32 %60(%"class.gl::EGLApi"* %46, i8* %52, i8* %54, i32 %1, i32 %35, i32 %55, i32 %56) #18
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %34
  %64 = load i32, i32* %37, align 8
  br label %66

65:                                               ; preds = %34
  store i32 1, i32* %37, align 8
  br label %66

66:                                               ; preds = %63, %65
  %67 = phi i32 [ %64, %63 ], [ 1, %65 ]
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersD1Ev(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #18
  %68 = icmp eq i8* %17, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = load i8, i8* %17, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %18, i64 %19) #18
  br label %73

73:                                               ; preds = %66, %69, %72
  ret i32 %67
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRiS1_EEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #18
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #18
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #18
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #18
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #18
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #18
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  ret i64 %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL27SupportsCommitOverlayPlanesEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl22NativeViewGLSurfaceEGL19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers", %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %8 = bitcast %"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %7, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersC1EPS0_N4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %3, %"class.gl::GLSurfacePresentationHelper"* %9, %"class.base::OnceCallback"* nonnull %4) #18
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #18
  %15 = load i32, i32* %6, align 8
  call void @_ZN2gl27GLSurfacePresentationHelper17ScopedSwapBuffersD1Ev(%"class.gl::GLSurfacePresentationHelper::ScopedSwapBuffers"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL13OnMakeCurrentEPNS_9GLContextE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %3, align 8
  %5 = icmp eq %"class.gl::GLSurfacePresentationHelper"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl27GLSurfacePresentationHelper13OnMakeCurrentEPNS_9GLContextEPNS_9GLSurfaceE(%"class.gl::GLSurfacePresentationHelper"* nonnull %4, %"class.gl::GLContext"* %1, %"class.gl::GLSurface"* %7) #18
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE(%"class.gl::GLSurface"* %9, %"class.gl::GLContext"* %1) #18
  ret i1 %10
}

declare void @_ZN2gl27GLSurfacePresentationHelper13OnMakeCurrentEPNS_9GLContextEPNS_9GLSurfaceE(%"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE(%"class.gl::GLSurface"*, %"class.gl::GLContext"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gfx::VSyncProvider"* @_ZN2gl22NativeViewGLSurfaceEGL16GetVSyncProviderEv(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %2, align 8
  %4 = icmp eq %"class.gfx::VSyncProvider"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.gfx::VSyncProvider"* [ %7, %5 ], [ %3, %1 ]
  ret %"class.gfx::VSyncProvider"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGL15SetVSyncEnabledEb(%"class.gl::NativeViewGLSurfaceEGL"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 20
  store i8 %4, i8* %5, align 8
  %6 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0
  %8 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %9 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %8, align 8
  %10 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %9, i64 26
  %11 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %10, align 8
  %12 = tail call i8* %11(%"class.gl::GLSurfaceEGL"* %7) #18
  %13 = zext i1 %1 to i32
  %14 = bitcast %"class.gl::EGLApi"* %6 to i32 (%"class.gl::EGLApi"*, i8*, i32)***
  %15 = load i32 (%"class.gl::EGLApi"*, i8*, i32)**, i32 (%"class.gl::EGLApi"*, i8*, i32)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i32)** %15, i64 76
  %17 = load i32 (%"class.gl::EGLApi"*, i8*, i32)*, i32 (%"class.gl::EGLApi"*, i8*, i32)** %16, align 8
  %18 = tail call i32 %17(%"class.gl::EGLApi"* %6, i8* %12, i32 %13) #18
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %21, label %22, label %30

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2071, i32 2) #18
  %24 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.71, i64 0, i64 0), i64 34) #18
  %27 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %28 = call i64 @strlen(i8* %27) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* %27, i64 %28) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #18
  br label %30

30:                                               ; preds = %22, %20, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE(%"class.gl::NativeViewGLSurfaceEGL"* nocapture readnone, i32, i32, %"class.gl::GLImage"* nocapture readnone, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::RectF"* nocapture readnone dereferenceable(16), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = inttoptr i64 %7 to %"class.gfx::GpuFence"*
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %11) #18
  %12 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %12) #19
  br label %13

13:                                               ; preds = %8, %10
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*], [6 x i8*] }, { [69 x i8*], [6 x i8*] }* @_ZTVN2gl22NativeViewGLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*], [6 x i8*] }, { [69 x i8*], [6 x i8*] }* @_ZTVN2gl22NativeViewGLSurfaceEGLE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %0)
  %4 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %5 = load %"class.gl::GLSurfacePresentationHelper"*, %"class.gl::GLSurfacePresentationHelper"** %4, align 8
  store %"class.gl::GLSurfacePresentationHelper"* null, %"class.gl::GLSurfacePresentationHelper"** %4, align 8
  %6 = icmp eq %"class.gl::GLSurfacePresentationHelper"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2gl27GLSurfacePresentationHelperD1Ev(%"class.gl::GLSurfacePresentationHelper"* nonnull %5) #18
  %8 = bitcast %"class.gl::GLSurfacePresentationHelper"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #19
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 19, i32 0
  tail call void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEED2Ev(%"class.base::circular_deque"* %10) #18
  %11 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = ptrtoint i8** %12 to i64
  %16 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 14, i32 0, i32 1
  %17 = bitcast i8*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i8** %12 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %9, %14
  %20 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 13, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #19
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 11
  %30 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"** %30, align 8
  %32 = icmp eq %"class.gl::GLSurfaceOverlay"* %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.gl::GLSurfaceOverlay"* %31 to i8*
  %35 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 11, i32 0, i32 1
  %36 = load %"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"** %35, align 8
  %37 = icmp eq %"class.gl::GLSurfaceOverlay"* %36, %31
  br i1 %37, label %45, label %38

38:                                               ; preds = %33, %38
  %39 = phi %"class.gl::GLSurfaceOverlay"* [ %40, %38 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %39, i64 -1
  tail call void @_ZN2gl16GLSurfaceOverlayD1Ev(%"class.gl::GLSurfaceOverlay"* %40) #18
  %41 = icmp eq %"class.gl::GLSurfaceOverlay"* %40, %31
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::vector.143"* %29 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i8* [ %44, %42 ], [ %34, %33 ]
  store %"class.gl::GLSurfaceOverlay"* %31, %"class.gl::GLSurfaceOverlay"** %35, align 8
  tail call void @_ZdlPv(i8* %46) #19
  br label %47

47:                                               ; preds = %28, %45
  %48 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %49 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %48, align 8
  store %"class.gfx::VSyncProvider"* null, %"class.gfx::VSyncProvider"** %48, align 8
  %50 = icmp eq %"class.gfx::VSyncProvider"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.gfx::VSyncProvider"* %49 to void (%"class.gfx::VSyncProvider"*)***
  %53 = load void (%"class.gfx::VSyncProvider"*)**, void (%"class.gfx::VSyncProvider"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %53, i64 1
  %55 = load void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %54, align 8
  tail call void %55(%"class.gfx::VSyncProvider"* nonnull %49) #18
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %58 = load %"class.gfx::VSyncProvider"*, %"class.gfx::VSyncProvider"** %57, align 8
  store %"class.gfx::VSyncProvider"* null, %"class.gfx::VSyncProvider"** %57, align 8
  %59 = icmp eq %"class.gfx::VSyncProvider"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.gfx::VSyncProvider"* %58 to void (%"class.gfx::VSyncProvider"*)***
  %62 = load void (%"class.gfx::VSyncProvider"*)**, void (%"class.gfx::VSyncProvider"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %62, i64 1
  %64 = load void (%"class.gfx::VSyncProvider"*)*, void (%"class.gfx::VSyncProvider"*)** %63, align 8
  tail call void %64(%"class.gfx::VSyncProvider"* nonnull %58) #18
  br label %65

65:                                               ; preds = %56, %60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %66 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %66) #18
  %67 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"* %67) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2gl22NativeViewGLSurfaceEGLD1Ev(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 -1, i32 15
  %3 = bitcast i32* %2 to %"class.gl::NativeViewGLSurfaceEGL"*
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl22NativeViewGLSurfaceEGLD0Ev(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %0) #18
  %2 = bitcast %"class.gl::NativeViewGLSurfaceEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2gl22NativeViewGLSurfaceEGLD0Ev(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGL", %"class.gl::NativeViewGLSurfaceEGL"* %0, i64 -1, i32 15
  %3 = bitcast i32* %2 to %"class.gl::NativeViewGLSurfaceEGL"*
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %3) #18
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19PbufferGLSurfaceEGLC2ERKN3gfx4SizeE(%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* %3) #18
  %4 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* %6) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl19PbufferGLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %1 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 2
  store i8* null, i8** %11, align 8
  %12 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %7) #18
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 0
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1, i32 1
  store i32 1, i32* %16, align 4
  br label %17

17:                                               ; preds = %14, %2
  ret void
}

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19PbufferGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca [5 x i32], align 16
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  %10 = bitcast %"class.gl::GLSurfaceFormat"* %9 to i8*
  %11 = bitcast %"class.gl::GLSurfaceFormat"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 32, i1 false)
  %12 = bitcast %"class.gl::PbufferGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %13 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %13, i64 26
  %15 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %14, align 8
  %16 = tail call i8* %15(%"class.gl::GLSurfaceEGL"* %8) #18
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %2
  %19 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %19, label %20, label %69

20:                                               ; preds = %18
  %21 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %21) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2143, i32 2) #18
  %22 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %22 to %"class.std::__1::basic_ostream"*
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.44, i64 0, i64 0), i64 46) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %21) #18
  br label %69

25:                                               ; preds = %2
  %26 = bitcast [5 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #18
  %27 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 0
  %28 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 1
  %29 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 2
  %30 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 3
  %31 = getelementptr inbounds [5 x i32], [5 x i32]* %4, i64 0, i64 4
  store i32 12375, i32* %27, align 16
  %32 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %28, align 4
  store i32 12374, i32* %29, align 8
  %34 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %30, align 4
  store i32 12344, i32* %31, align 16
  %36 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %37 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %12, align 8
  %38 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %37, i64 27
  %39 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %38, align 8
  %40 = tail call i8* %39(%"class.gl::GLSurfaceEGL"* %8) #18
  %41 = bitcast %"class.gl::EGLApi"* %36 to i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)***
  %42 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)**, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)*** %41, align 8
  %43 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)** %42, i64 11
  %44 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32*)** %43, align 8
  %45 = call i8* %44(%"class.gl::EGLApi"* %36, i8* nonnull %16, i8* %40, i32* nonnull %27) #18
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %57

47:                                               ; preds = %25
  %48 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %48, label %49, label %67

49:                                               ; preds = %47
  %50 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %50) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2158, i32 2) #18
  %51 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_ostringstream"* %51 to %"class.std::__1::basic_ostream"*
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0), i64 42) #18
  %54 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %55 = call i64 @strlen(i8* %54) #18
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* %54, i64 %55) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %50) #18
  br label %67

57:                                               ; preds = %25
  %58 = icmp eq i8* %7, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %57
  %60 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %61 = bitcast %"class.gl::EGLApi"* %60 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %62 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %62, i64 21
  %64 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %63, align 8
  %65 = call i32 %64(%"class.gl::EGLApi"* %60, i8* nonnull %16, i8* nonnull %7) #18
  br label %66

66:                                               ; preds = %57, %59
  store i8* %45, i8** %6, align 8
  br label %67

67:                                               ; preds = %49, %47, %66
  %68 = phi i1 [ true, %66 ], [ false, %47 ], [ false, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #18
  br label %69

69:                                               ; preds = %20, %18, %67
  %70 = phi i1 [ %68, %67 ], [ false, %18 ], [ false, %20 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0
  %9 = bitcast %"class.gl::PbufferGLSurfaceEGL"* %0 to i8* (%"class.gl::GLSurfaceEGL"*)***
  %10 = load i8* (%"class.gl::GLSurfaceEGL"*)**, i8* (%"class.gl::GLSurfaceEGL"*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %10, i64 26
  %12 = load i8* (%"class.gl::GLSurfaceEGL"*)*, i8* (%"class.gl::GLSurfaceEGL"*)** %11, align 8
  %13 = tail call i8* %12(%"class.gl::GLSurfaceEGL"* %8) #18
  %14 = load i8*, i8** %3, align 8
  %15 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %16 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %16, i64 21
  %18 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %17, align 8
  %19 = tail call i32 %18(%"class.gl::EGLApi"* %7, i8* %13, i8* %14) #18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %6
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %22, label %23, label %31

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2173, i32 2) #18
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56, i64 0, i64 0), i64 36) #18
  %28 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %29 = call i64 @strlen(i8* %28) #18
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* %28, i64 %29) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #18
  br label %31

31:                                               ; preds = %23, %21, %6
  store i8* null, i8** %3, align 8
  br label %32

32:                                               ; preds = %1, %31
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl19PbufferGLSurfaceEGL11IsOffscreenEv(%"class.gl::PbufferGLSurfaceEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl19PbufferGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::PbufferGLSurfaceEGL"* nocapture readnone, %"class.base::OnceCallback"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl19PbufferGLSurfaceEGL7GetSizeEv(%"class.gl::PbufferGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19PbufferGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.gl::PbufferGLSurfaceEGL"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.gl::GLSurfaceFormat", align 4
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %52, label %21

21:                                               ; preds = %5, %15
  %22 = bitcast %"class.gfx::Size"* %1 to i64*
  %23 = bitcast %"class.gfx::Size"* %9 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 8
  %25 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #18
  %26 = tail call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #18
  %27 = bitcast %"class.gl::GLContext"* %25 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %28 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %28, i64 1
  %30 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %29, align 8
  tail call void %30(%"class.gl::GLContext"* %25, %"class.gl::GLSurface"* %26) #18
  %31 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %6, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %31) #18
  %32 = bitcast %"class.gl::PbufferGLSurfaceEGL"* %0 to i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)***
  %33 = load i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)**, i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*** %32, align 8
  %34 = load i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)*, i1 (%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.gl::PbufferGLSurfaceEGL"* %0, %"class.gl::GLSurfaceFormat"* nonnull %6) #18
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %6) #18
  br i1 %35, label %43, label %36

36:                                               ; preds = %21
  %37 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %37, label %38, label %52

38:                                               ; preds = %36
  %39 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2213, i32 2) #18
  %40 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i64 0, i64 0), i64 25) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #18
  br label %52

43:                                               ; preds = %21
  %44 = call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* %25, %"class.gl::GLSurface"* %26) #18
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %46, label %47, label %52

47:                                               ; preds = %45
  %48 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %48) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2218, i32 2) #18
  %49 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ostringstream"* %49 to %"class.std::__1::basic_ostream"*
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.74, i64 0, i64 0), i64 53) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %48) #18
  br label %52

52:                                               ; preds = %47, %45, %38, %36, %43, %15
  %53 = phi i1 [ true, %15 ], [ true, %43 ], [ false, %36 ], [ false, %38 ], [ false, %45 ], [ false, %47 ]
  ret i1 %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN2gl19PbufferGLSurfaceEGL9GetHandleEv(%"class.gl::PbufferGLSurfaceEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2gl19PbufferGLSurfaceEGL14GetShareHandleEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 11), align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = load i8, i8* getelementptr inbounds (%"struct.gl::DriverEGL", %"struct.gl::DriverEGL"* @_ZN2gl12g_driver_eglE, i64 0, i32 1, i32 13), align 1
  %6 = icmp eq i8 %5, 0
  %7 = or i1 %4, %6
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %10 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %11 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %12 = bitcast %"class.gl::PbufferGLSurfaceEGL"* %0 to i8* (%"class.gl::PbufferGLSurfaceEGL"*)***
  %13 = load i8* (%"class.gl::PbufferGLSurfaceEGL"*)**, i8* (%"class.gl::PbufferGLSurfaceEGL"*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.gl::PbufferGLSurfaceEGL"*)*, i8* (%"class.gl::PbufferGLSurfaceEGL"*)** %13, i64 9
  %15 = load i8* (%"class.gl::PbufferGLSurfaceEGL"*)*, i8* (%"class.gl::PbufferGLSurfaceEGL"*)** %14, align 8
  %16 = tail call i8* %15(%"class.gl::PbufferGLSurfaceEGL"* %0) #18
  %17 = bitcast %"class.gl::EGLApi"* %10 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)***
  %18 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)** %18, i64 61
  %20 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32, i8**)** %19, align 8
  %21 = call i32 %20(%"class.gl::EGLApi"* %10, i8* %11, i8* %16, i32 12800, i8** nonnull %2) #18
  %22 = icmp eq i32 %21, 0
  %23 = load i8*, i8** %2, align 8
  %24 = select i1 %22, i8* null, i8* %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  br label %25

25:                                               ; preds = %1, %8
  %26 = phi i8* [ %24, %8 ], [ null, %1 ]
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19PbufferGLSurfaceEGLD2Ev(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl19PbufferGLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"* %0)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %3) #18
  %4 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19PbufferGLSurfaceEGLD0Ev(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl19PbufferGLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"* %0) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %3) #18
  %4 = getelementptr inbounds %"class.gl::PbufferGLSurfaceEGL", %"class.gl::PbufferGLSurfaceEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"* %4) #18
  %5 = bitcast %"class.gl::PbufferGLSurfaceEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14SurfacelessEGLC2ERKN3gfx4SizeE(%"class.gl::SurfacelessEGL"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceC2Ev(%"class.gl::GLSurface"* %3) #18
  %4 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 1
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatC1Ev(%"class.gl::GLSurfaceFormat"* %6) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl14SurfacelessEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %1 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl14SurfacelessEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::SurfacelessEGL"* nocapture, %"class.gl::GLSurfaceFormat"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.gl::GLSurfaceFormat"* %3 to i8*
  %5 = bitcast %"class.gl::GLSurfaceFormat"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 32, i1 false)
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl14SurfacelessEGL7DestroyEv(%"class.gl::SurfacelessEGL"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl14SurfacelessEGL11IsOffscreenEv(%"class.gl::SurfacelessEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2gl14SurfacelessEGL13IsSurfacelessEv(%"class.gl::SurfacelessEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl14SurfacelessEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::SurfacelessEGL"* nocapture readnone, %"class.base::OnceCallback"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 2274, i32 2) #18
  %7 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.75, i64 0, i64 0), i64 50) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #18
  br label %10

10:                                               ; preds = %2, %5
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl14SurfacelessEGL7GetSizeEv(%"class.gl::SurfacelessEGL"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl14SurfacelessEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.gl::SurfacelessEGL"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i1 zeroext) unnamed_addr #12 align 2 {
  %6 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 1
  %7 = bitcast %"class.gfx::Size"* %1 to i64*
  %8 = bitcast %"class.gfx::Size"* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @_ZN2gl14SurfacelessEGL9GetHandleEv(%"class.gl::SurfacelessEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @_ZN2gl14SurfacelessEGL14GetShareHandleEv(%"class.gl::SurfacelessEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl14SurfacelessEGLD0Ev(%"class.gl::SurfacelessEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [65 x i8*] }, { [65 x i8*] }* @_ZTVN2gl12GLSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %3) #18
  %4 = getelementptr inbounds %"class.gl::SurfacelessEGL", %"class.gl::SurfacelessEGL"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl9GLSurfaceD2Ev(%"class.gl::GLSurface"* %4) #18
  %5 = bitcast %"class.gl::SurfacelessEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #19
  ret void
}

declare zeroext i1 @_ZN2gl9GLSurface10InitializeENS_15GLSurfaceFormatE(%"class.gl::GLSurface"*, %"class.gl::GLSurfaceFormat"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN2gl9GLSurface16PrepareToDestroyEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.gl::GLSurface"*, %"class.gfx::Size"* dereferenceable(8), float, %"class.gfx::ColorSpace"* dereferenceable(68), i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface8RecreateEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface10DeferDrawsEv(%"class.gl::GLSurface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv(%"class.gl::GLSurface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface21SupportsPostSubBufferEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface17SupportsAsyncSwapEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare i32 @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare i32 @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE(%"class.gl::GLSurface"*, %"class.std::__1::vector.219"*, %"class.base::OnceCallback"*) unnamed_addr #2

declare i32 @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurface"*, i32, i32, i32, i32, %"class.base::OnceCallback"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare i32 @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::GLSurface"*, %"class.base::OnceCallback"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare zeroext i1 @_ZN2gl9GLSurface23SetBackbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2gl9GLSurface24SetFrontbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

declare i8* @_ZN2gl9GLSurface14GetShareHandleEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare %"class.gfx::VSyncProvider"* @_ZN2gl9GLSurface16GetVSyncProviderEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface15SetVSyncEnabledEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE(%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), i1 zeroext, i64) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE(%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE() unnamed_addr

declare void @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE() unnamed_addr

declare zeroext i1 @_ZN2gl9GLSurface17SetEnableDCLayersEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface13IsSurfacelessEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface18SupportsViewporterEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare i32 @_ZNK2gl9GLSurface9GetOriginEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface14BuffersFlippedEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsDCLayersEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsProtectedVideoEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE(%"class.gl::GLSurface"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare i64 @_ZNK2gl9GLSurface13GetDrawOffsetEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare i32 @_ZNK2gl9GLSurface14GetBufferCountEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare %"class.gl::EGLTimestampClient"* @_ZN2gl9GLSurface21GetEGLTimestampClientEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsGpuVSyncEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare void @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE(%"class.gl::GLSurface"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface12SetFrameRateEf(%"class.gl::GLSurface"*, float) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl9GLSurface10SetCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface9IsCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLSurface20SupportsDelegatedInkEv(%"class.gl::GLSurface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE(%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.gfx::DelegatedInkMetadata"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gfx::DelegatedInkMetadata"* %1 to i8*
  tail call void @_ZdlPv(i8* %5) #19
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE() unnamed_addr

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare i32 @_ZNK2gl15GLSurfaceFormat13GetBufferSizeEv(%"class.gl::GLSurfaceFormat"*) local_unnamed_addr #2

declare %"class.gl::GLDisplayEglUtil"* @_ZN2gl16GLDisplayEglUtil11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2gl12_GLOBAL__N_117ValidateEglConfigEPvPKiPi(i8*, i32*, i32*) unnamed_addr #0 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %6 = bitcast %"class.gl::EGLApi"* %5 to i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)***
  %7 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %7, i64 5
  %9 = load i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i32*, i8**, i32, i32*)** %8, align 8
  %10 = tail call i32 %9(%"class.gl::EGLApi"* %5, i8* %0, i32* %1, i8** null, i32 0, i32* %2) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #18
  br i1 %13, label %14, label %25

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %15) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i32 584, i32 2) #18
  %16 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i64 34) #18
  %19 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #18
  %20 = call i64 @strlen(i8* %19) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* %19, i64 %20) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %15) #18
  br label %25

22:                                               ; preds = %3
  %23 = load i32, i32* %2, align 4
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %14, %12, %22
  %26 = phi i1 [ %24, %22 ], [ false, %12 ], [ false, %14 ]
  ret i1 %26
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_123EGLGpuSwitchingObserver13OnGpuSwitchedENS_13GpuPreferenceE(%"class.gl::(anonymous namespace)::EGLGpuSwitchingObserver"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %4 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %5 = bitcast %"class.gl::EGLApi"* %3 to void (%"class.gl::EGLApi"*, i8*)***
  %6 = load void (%"class.gl::EGLApi"*, i8*)**, void (%"class.gl::EGLApi"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gl::EGLApi"*, i8*)*, void (%"class.gl::EGLApi"*, i8*)** %6, i64 44
  %8 = load void (%"class.gl::EGLApi"*, i8*)*, void (%"class.gl::EGLApi"*, i8*)** %7, align 8
  tail call void %8(%"class.gl::EGLApi"* %3, i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui20GpuSwitchingObserver14OnDisplayAddedEv(%"class.ui::GpuSwitchingObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui20GpuSwitchingObserver16OnDisplayRemovedEv(%"class.ui::GpuSwitchingObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui20GpuSwitchingObserver23OnDisplayMetricsChangedEv(%"class.ui::GpuSwitchingObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #18
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #18
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #18
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #18
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #18
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #18
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #18
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #18
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #18
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN2gl12_GLOBAL__N_123GetPlatformANGLEDisplayENS_18EGLDisplayPlatformEjRKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEESD_RKNS3_IlNS7_IlEEEE(i64, i64, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.205"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::vector.205", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::vector.165", align 8
  %14 = alloca %"class.std::__1::vector.165", align 8
  %15 = bitcast %"class.std::__1::vector.205"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %7, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %7, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #18
  %19 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %5, i64 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.205"* %5 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %56, label %27

27:                                               ; preds = %6
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %30) #20
  unreachable

31:                                               ; preds = %27
  %32 = tail call i8* @_Znwm(i64 %24) #19
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i64** %17 to i8**
  store i8* %32, i8** %34, align 8
  %35 = bitcast %"class.std::__1::vector.205"* %7 to i8**
  store i8* %32, i8** %35, align 8
  %36 = getelementptr inbounds i64, i64* %33, i64 %25
  store i64* %36, i64** %18, align 8
  %37 = bitcast i64** %17 to i64*
  %38 = ptrtoint i8* %32 to i64
  %39 = icmp sgt i64 %24, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = lshr exact i64 %24, 3
  %42 = inttoptr i64 %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %42, i64 %24, i1 false) #18
  %43 = getelementptr inbounds i64, i64* %33, i64 %41
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %31, %40
  %46 = phi i64 [ %44, %40 ], [ %38, %31 ]
  store i64 %46, i64* %37, align 8
  %47 = inttoptr i64 %46 to i64*
  %48 = icmp ugt i64* %36, %47
  %49 = ptrtoint i64* %36 to i64
  br i1 %48, label %50, label %56

50:                                               ; preds = %45
  store i64 12803, i64* %47, align 8
  %51 = getelementptr inbounds i64, i64* %47, i64 1
  %52 = ptrtoint i64* %51 to i64
  %53 = bitcast i64** %17 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i64*, i64** %18, align 8
  %55 = ptrtoint i64* %54 to i64
  br label %110

56:                                               ; preds = %6, %45
  %57 = phi i64 [ %49, %45 ], [ 0, %6 ]
  %58 = phi i64* [ %47, %45 ], [ null, %6 ]
  %59 = phi i64 [ %38, %45 ], [ 0, %6 ]
  %60 = phi i64* [ %33, %45 ], [ null, %6 ]
  %61 = phi i8* [ %32, %45 ], [ null, %6 ]
  %62 = phi i64 [ %46, %45 ], [ 0, %6 ]
  %63 = ptrtoint i64* %58 to i64
  %64 = bitcast i64** %17 to i64*
  %65 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %66 = sub i64 %63, %59
  %67 = ashr exact i64 %66, 3
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %56
  %71 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %71) #20
  unreachable

72:                                               ; preds = %56
  %73 = bitcast i64** %18 to i64*
  %74 = sub i64 %57, %59
  %75 = ashr exact i64 %74, 3
  %76 = icmp ult i64 %75, 1152921504606846975
  br i1 %76, label %77, label %85

77:                                               ; preds = %72
  %78 = ashr exact i64 %74, 2
  %79 = icmp ult i64 %78, %68
  %80 = select i1 %79, i64 %68, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 2305843009213693951
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @abort() #20
  unreachable

85:                                               ; preds = %82, %72
  %86 = phi i64 [ %80, %82 ], [ 2305843009213693951, %72 ]
  %87 = shl i64 %86, 3
  %88 = tail call i8* @_Znwm(i64 %87) #19
  %89 = bitcast i8* %88 to i64*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi i64* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds i64, i64* %92, i64 %67
  %94 = getelementptr inbounds i64, i64* %92, i64 %91
  %95 = ptrtoint i64* %94 to i64
  store i64 12803, i64* %93, align 8
  %96 = getelementptr inbounds i64, i64* %93, i64 1
  %97 = ptrtoint i64* %96 to i64
  %98 = ptrtoint i64* %60 to i64
  %99 = sub i64 %62, %98
  %100 = ashr exact i64 %99, 3
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds i64, i64* %93, i64 %101
  %103 = ptrtoint i64* %102 to i64
  %104 = icmp sgt i64 %99, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %90
  %106 = bitcast i64* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %61, i64 %99, i1 false) #18
  br label %107

107:                                              ; preds = %105, %90
  store i64 %103, i64* %65, align 8
  store i64 %97, i64* %64, align 8
  store i64 %95, i64* %73, align 8
  %108 = icmp eq i64* %60, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  tail call void @_ZdlPv(i8* %61) #19
  br label %110

110:                                              ; preds = %50, %107, %109
  %111 = phi i64 [ %55, %50 ], [ %95, %107 ], [ %95, %109 ]
  %112 = phi i64 [ %52, %50 ], [ %97, %107 ], [ %97, %109 ]
  %113 = phi i64* [ %54, %50 ], [ %94, %107 ], [ %94, %109 ]
  %114 = phi i64* [ %51, %50 ], [ %96, %107 ], [ %96, %109 ]
  %115 = zext i32 %2 to i64
  %116 = icmp ult i64* %114, %113
  br i1 %116, label %117, label %121

117:                                              ; preds = %110
  store i64 %115, i64* %114, align 8
  %118 = getelementptr inbounds i64, i64* %114, i64 1
  %119 = ptrtoint i64* %118 to i64
  %120 = bitcast i64** %17 to i64*
  store i64 %119, i64* %120, align 8
  br label %171

121:                                              ; preds = %110
  %122 = ptrtoint i64* %114 to i64
  %123 = bitcast i64** %17 to i64*
  %124 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %122, %125
  %127 = ashr exact i64 %126, 3
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 2305843009213693951
  br i1 %129, label %130, label %132

130:                                              ; preds = %121
  %131 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %131) #20
  unreachable

132:                                              ; preds = %121
  %133 = bitcast i64** %18 to i64*
  %134 = sub i64 %111, %125
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, 1152921504606846975
  br i1 %136, label %137, label %145

137:                                              ; preds = %132
  %138 = ashr exact i64 %134, 2
  %139 = icmp ult i64 %138, %128
  %140 = select i1 %139, i64 %128, i64 %138
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %137
  %143 = icmp ugt i64 %140, 2305843009213693951
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  tail call void @abort() #20
  unreachable

145:                                              ; preds = %142, %132
  %146 = phi i64 [ %140, %142 ], [ 2305843009213693951, %132 ]
  %147 = shl i64 %146, 3
  %148 = tail call i8* @_Znwm(i64 %147) #19
  %149 = bitcast i8* %148 to i64*
  br label %150

150:                                              ; preds = %145, %137
  %151 = phi i64 [ %146, %145 ], [ 0, %137 ]
  %152 = phi i64* [ %149, %145 ], [ null, %137 ]
  %153 = getelementptr inbounds i64, i64* %152, i64 %127
  %154 = getelementptr inbounds i64, i64* %152, i64 %151
  %155 = ptrtoint i64* %154 to i64
  store i64 %115, i64* %153, align 8
  %156 = getelementptr inbounds i64, i64* %153, i64 1
  %157 = ptrtoint i64* %156 to i64
  %158 = sub i64 %112, %125
  %159 = ashr exact i64 %158, 3
  %160 = sub nsw i64 0, %159
  %161 = getelementptr inbounds i64, i64* %153, i64 %160
  %162 = ptrtoint i64* %161 to i64
  %163 = icmp sgt i64 %158, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %150
  %165 = bitcast i64* %161 to i8*
  %166 = inttoptr i64 %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 %158, i1 false) #18
  br label %167

167:                                              ; preds = %164, %150
  store i64 %162, i64* %124, align 8
  store i64 %157, i64* %123, align 8
  store i64 %155, i64* %133, align 8
  %168 = icmp eq i64 %125, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %170) #19
  br label %171

171:                                              ; preds = %117, %167, %169
  %172 = icmp eq i32 %2, 12808
  br i1 %172, label %173, label %485

173:                                              ; preds = %171
  %174 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #18
  %175 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %174, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUseAdapterLuidE, i64 0, i64 0)) #18
  br i1 %175, label %176, label %485

176:                                              ; preds = %173
  %177 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #18
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -86, i64 24, i1 false)
  %180 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUseAdapterLuidE, i64 0, i64 0)) #18
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.base::CommandLine"* %174, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUseAdapterLuidE, i64 0, i64 0), i64 %180) #18
  %181 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %8, i8 signext 44, i64 0) #18
  %182 = icmp eq i64 %181, -1
  br i1 %182, label %475, label %183

183:                                              ; preds = %176
  %184 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %184) #18
  store i32 -1431655766, i32* %9, align 4
  %185 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #18
  store i32 -1431655766, i32* %10, align 4
  %186 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #18
  %187 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 0, i64 %181, %"class.std::__1::allocator"* nonnull dereferenceable(1) %187) #18
  %188 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = select i1 %191, i8* %193, i8* %186
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = zext i8 %190 to i64
  %198 = select i1 %191, i64 %196, i64 %197
  %199 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %194, i64 %198, i32* nonnull %9) #18
  br i1 %199, label %200, label %221

200:                                              ; preds = %183
  %201 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #18
  %202 = add nuw i64 %181, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 %202, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %187) #18
  %203 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = select i1 %206, i8* %208, i8* %201
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = zext i8 %205 to i64
  %213 = select i1 %206, i64 %211, i64 %212
  %214 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %209, i64 %213, i32* nonnull %10) #18
  %215 = xor i1 %214, true
  %216 = load i8, i8* %204, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %200
  %219 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %219) #19
  br label %220

220:                                              ; preds = %200, %218
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #18
  br label %221

221:                                              ; preds = %183, %220
  %222 = phi i1 [ %215, %220 ], [ true, %183 ]
  %223 = load i8, i8* %189, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %221
  %226 = load i8*, i8** %192, align 8
  call void @_ZdlPv(i8* %226) #19
  br label %227

227:                                              ; preds = %221, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #18
  br i1 %222, label %473, label %228

228:                                              ; preds = %227
  %229 = load i64*, i64** %17, align 8
  %230 = load i64*, i64** %18, align 8
  %231 = icmp ult i64* %229, %230
  %232 = ptrtoint i64* %230 to i64
  br i1 %231, label %233, label %237

233:                                              ; preds = %228
  store i64 13472, i64* %229, align 8
  %234 = getelementptr inbounds i64, i64* %229, i64 1
  %235 = ptrtoint i64* %234 to i64
  %236 = bitcast i64** %17 to i64*
  store i64 %235, i64* %236, align 8
  br label %285

237:                                              ; preds = %228
  %238 = ptrtoint i64* %229 to i64
  %239 = bitcast i64** %17 to i64*
  %240 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %238, %241
  %243 = ashr exact i64 %242, 3
  %244 = add nsw i64 %243, 1
  %245 = icmp ugt i64 %244, 2305843009213693951
  br i1 %245, label %246, label %248

246:                                              ; preds = %237
  %247 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %247) #20
  unreachable

248:                                              ; preds = %237
  %249 = bitcast i64** %18 to i64*
  %250 = sub i64 %232, %241
  %251 = ashr exact i64 %250, 3
  %252 = icmp ult i64 %251, 1152921504606846975
  br i1 %252, label %253, label %261

253:                                              ; preds = %248
  %254 = ashr exact i64 %250, 2
  %255 = icmp ult i64 %254, %244
  %256 = select i1 %255, i64 %244, i64 %254
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %266, label %258

258:                                              ; preds = %253
  %259 = icmp ugt i64 %256, 2305843009213693951
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  call void @abort() #20
  unreachable

261:                                              ; preds = %258, %248
  %262 = phi i64 [ %256, %258 ], [ 2305843009213693951, %248 ]
  %263 = shl i64 %262, 3
  %264 = call i8* @_Znwm(i64 %263) #19
  %265 = bitcast i8* %264 to i64*
  br label %266

266:                                              ; preds = %261, %253
  %267 = phi i64 [ %262, %261 ], [ 0, %253 ]
  %268 = phi i8* [ %264, %261 ], [ null, %253 ]
  %269 = phi i64* [ %265, %261 ], [ null, %253 ]
  %270 = getelementptr inbounds i64, i64* %269, i64 %243
  %271 = getelementptr inbounds i64, i64* %269, i64 %267
  %272 = ptrtoint i64* %271 to i64
  store i64 13472, i64* %270, align 8
  %273 = getelementptr inbounds i64, i64* %270, i64 1
  %274 = ptrtoint i64* %273 to i64
  %275 = ptrtoint i64* %269 to i64
  %276 = icmp sgt i64 %242, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %266
  %278 = inttoptr i64 %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %278, i64 %242, i1 false) #18
  br label %279

279:                                              ; preds = %277, %266
  store i64 %275, i64* %240, align 8
  store i64 %274, i64* %239, align 8
  store i64 %272, i64* %249, align 8
  %280 = icmp eq i64 %241, 0
  br i1 %280, label %285, label %281

281:                                              ; preds = %279
  %282 = inttoptr i64 %241 to i8*
  call void @_ZdlPv(i8* %282) #19
  %283 = load i64*, i64** %17, align 8
  %284 = ptrtoint i64* %283 to i64
  br label %285

285:                                              ; preds = %233, %279, %281
  %286 = phi i64 [ %235, %233 ], [ %274, %279 ], [ %284, %281 ]
  %287 = phi i64* [ %234, %233 ], [ %273, %279 ], [ %283, %281 ]
  %288 = load i32, i32* %9, align 4
  %289 = sext i32 %288 to i64
  %290 = load i64*, i64** %18, align 8
  %291 = icmp ult i64* %287, %290
  %292 = ptrtoint i64* %290 to i64
  br i1 %291, label %293, label %297

293:                                              ; preds = %285
  store i64 %289, i64* %287, align 8
  %294 = getelementptr inbounds i64, i64* %287, i64 1
  %295 = ptrtoint i64* %294 to i64
  %296 = bitcast i64** %17 to i64*
  store i64 %295, i64* %296, align 8
  br label %349

297:                                              ; preds = %285
  %298 = ptrtoint i64* %287 to i64
  %299 = bitcast i64** %17 to i64*
  %300 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %298, %301
  %303 = ashr exact i64 %302, 3
  %304 = add nsw i64 %303, 1
  %305 = icmp ugt i64 %304, 2305843009213693951
  br i1 %305, label %306, label %308

306:                                              ; preds = %297
  %307 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %307) #20
  unreachable

308:                                              ; preds = %297
  %309 = bitcast i64** %18 to i64*
  %310 = sub i64 %292, %301
  %311 = ashr exact i64 %310, 3
  %312 = icmp ult i64 %311, 1152921504606846975
  br i1 %312, label %313, label %321

313:                                              ; preds = %308
  %314 = ashr exact i64 %310, 2
  %315 = icmp ult i64 %314, %304
  %316 = select i1 %315, i64 %304, i64 %314
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %326, label %318

318:                                              ; preds = %313
  %319 = icmp ugt i64 %316, 2305843009213693951
  br i1 %319, label %320, label %321

320:                                              ; preds = %318
  call void @abort() #20
  unreachable

321:                                              ; preds = %318, %308
  %322 = phi i64 [ %316, %318 ], [ 2305843009213693951, %308 ]
  %323 = shl i64 %322, 3
  %324 = call i8* @_Znwm(i64 %323) #19
  %325 = bitcast i8* %324 to i64*
  br label %326

326:                                              ; preds = %321, %313
  %327 = phi i64 [ %322, %321 ], [ 0, %313 ]
  %328 = phi i64* [ %325, %321 ], [ null, %313 ]
  %329 = getelementptr inbounds i64, i64* %328, i64 %303
  %330 = getelementptr inbounds i64, i64* %328, i64 %327
  %331 = ptrtoint i64* %330 to i64
  store i64 %289, i64* %329, align 8
  %332 = getelementptr inbounds i64, i64* %329, i64 1
  %333 = ptrtoint i64* %332 to i64
  %334 = sub i64 %286, %301
  %335 = ashr exact i64 %334, 3
  %336 = sub nsw i64 0, %335
  %337 = getelementptr inbounds i64, i64* %329, i64 %336
  %338 = ptrtoint i64* %337 to i64
  %339 = icmp sgt i64 %334, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %326
  %341 = bitcast i64* %337 to i8*
  %342 = inttoptr i64 %301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 8 %342, i64 %334, i1 false) #18
  br label %343

343:                                              ; preds = %340, %326
  store i64 %338, i64* %300, align 8
  store i64 %333, i64* %299, align 8
  store i64 %331, i64* %309, align 8
  %344 = icmp eq i64 %301, 0
  br i1 %344, label %349, label %345

345:                                              ; preds = %343
  %346 = inttoptr i64 %301 to i8*
  call void @_ZdlPv(i8* %346) #19
  %347 = load i64*, i64** %17, align 8
  %348 = ptrtoint i64* %347 to i64
  br label %349

349:                                              ; preds = %293, %343, %345
  %350 = phi i64 [ %295, %293 ], [ %333, %343 ], [ %348, %345 ]
  %351 = phi i64* [ %294, %293 ], [ %332, %343 ], [ %347, %345 ]
  %352 = load i64*, i64** %18, align 8
  %353 = icmp ult i64* %351, %352
  %354 = ptrtoint i64* %352 to i64
  br i1 %353, label %355, label %359

355:                                              ; preds = %349
  store i64 13473, i64* %351, align 8
  %356 = getelementptr inbounds i64, i64* %351, i64 1
  %357 = ptrtoint i64* %356 to i64
  %358 = bitcast i64** %17 to i64*
  store i64 %357, i64* %358, align 8
  br label %411

359:                                              ; preds = %349
  %360 = ptrtoint i64* %351 to i64
  %361 = bitcast i64** %17 to i64*
  %362 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = sub i64 %360, %363
  %365 = ashr exact i64 %364, 3
  %366 = add nsw i64 %365, 1
  %367 = icmp ugt i64 %366, 2305843009213693951
  br i1 %367, label %368, label %370

368:                                              ; preds = %359
  %369 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %369) #20
  unreachable

370:                                              ; preds = %359
  %371 = bitcast i64** %18 to i64*
  %372 = sub i64 %354, %363
  %373 = ashr exact i64 %372, 3
  %374 = icmp ult i64 %373, 1152921504606846975
  br i1 %374, label %375, label %383

375:                                              ; preds = %370
  %376 = ashr exact i64 %372, 2
  %377 = icmp ult i64 %376, %366
  %378 = select i1 %377, i64 %366, i64 %376
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %388, label %380

380:                                              ; preds = %375
  %381 = icmp ugt i64 %378, 2305843009213693951
  br i1 %381, label %382, label %383

382:                                              ; preds = %380
  call void @abort() #20
  unreachable

383:                                              ; preds = %380, %370
  %384 = phi i64 [ %378, %380 ], [ 2305843009213693951, %370 ]
  %385 = shl i64 %384, 3
  %386 = call i8* @_Znwm(i64 %385) #19
  %387 = bitcast i8* %386 to i64*
  br label %388

388:                                              ; preds = %383, %375
  %389 = phi i64 [ %384, %383 ], [ 0, %375 ]
  %390 = phi i64* [ %387, %383 ], [ null, %375 ]
  %391 = getelementptr inbounds i64, i64* %390, i64 %365
  %392 = getelementptr inbounds i64, i64* %390, i64 %389
  %393 = ptrtoint i64* %392 to i64
  store i64 13473, i64* %391, align 8
  %394 = getelementptr inbounds i64, i64* %391, i64 1
  %395 = ptrtoint i64* %394 to i64
  %396 = sub i64 %350, %363
  %397 = ashr exact i64 %396, 3
  %398 = sub nsw i64 0, %397
  %399 = getelementptr inbounds i64, i64* %391, i64 %398
  %400 = ptrtoint i64* %399 to i64
  %401 = icmp sgt i64 %396, 0
  br i1 %401, label %402, label %405

402:                                              ; preds = %388
  %403 = bitcast i64* %399 to i8*
  %404 = inttoptr i64 %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 %396, i1 false) #18
  br label %405

405:                                              ; preds = %402, %388
  store i64 %400, i64* %362, align 8
  store i64 %395, i64* %361, align 8
  store i64 %393, i64* %371, align 8
  %406 = icmp eq i64 %363, 0
  br i1 %406, label %411, label %407

407:                                              ; preds = %405
  %408 = inttoptr i64 %363 to i8*
  call void @_ZdlPv(i8* %408) #19
  %409 = load i64*, i64** %17, align 8
  %410 = ptrtoint i64* %409 to i64
  br label %411

411:                                              ; preds = %355, %405, %407
  %412 = phi i64 [ %357, %355 ], [ %395, %405 ], [ %410, %407 ]
  %413 = phi i64* [ %356, %355 ], [ %394, %405 ], [ %409, %407 ]
  %414 = load i32, i32* %10, align 4
  %415 = zext i32 %414 to i64
  %416 = load i64*, i64** %18, align 8
  %417 = icmp ult i64* %413, %416
  %418 = ptrtoint i64* %416 to i64
  br i1 %417, label %419, label %423

419:                                              ; preds = %411
  store i64 %415, i64* %413, align 8
  %420 = getelementptr inbounds i64, i64* %413, i64 1
  %421 = ptrtoint i64* %420 to i64
  %422 = bitcast i64** %17 to i64*
  store i64 %421, i64* %422, align 8
  br label %473

423:                                              ; preds = %411
  %424 = ptrtoint i64* %413 to i64
  %425 = bitcast i64** %17 to i64*
  %426 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = sub i64 %424, %427
  %429 = ashr exact i64 %428, 3
  %430 = add nsw i64 %429, 1
  %431 = icmp ugt i64 %430, 2305843009213693951
  br i1 %431, label %432, label %434

432:                                              ; preds = %423
  %433 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %433) #20
  unreachable

434:                                              ; preds = %423
  %435 = bitcast i64** %18 to i64*
  %436 = sub i64 %418, %427
  %437 = ashr exact i64 %436, 3
  %438 = icmp ult i64 %437, 1152921504606846975
  br i1 %438, label %439, label %447

439:                                              ; preds = %434
  %440 = ashr exact i64 %436, 2
  %441 = icmp ult i64 %440, %430
  %442 = select i1 %441, i64 %430, i64 %440
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %452, label %444

444:                                              ; preds = %439
  %445 = icmp ugt i64 %442, 2305843009213693951
  br i1 %445, label %446, label %447

446:                                              ; preds = %444
  call void @abort() #20
  unreachable

447:                                              ; preds = %444, %434
  %448 = phi i64 [ %442, %444 ], [ 2305843009213693951, %434 ]
  %449 = shl i64 %448, 3
  %450 = call i8* @_Znwm(i64 %449) #19
  %451 = bitcast i8* %450 to i64*
  br label %452

452:                                              ; preds = %447, %439
  %453 = phi i64 [ %448, %447 ], [ 0, %439 ]
  %454 = phi i64* [ %451, %447 ], [ null, %439 ]
  %455 = getelementptr inbounds i64, i64* %454, i64 %429
  %456 = getelementptr inbounds i64, i64* %454, i64 %453
  %457 = ptrtoint i64* %456 to i64
  store i64 %415, i64* %455, align 8
  %458 = getelementptr inbounds i64, i64* %455, i64 1
  %459 = ptrtoint i64* %458 to i64
  %460 = sub i64 %412, %427
  %461 = ashr exact i64 %460, 3
  %462 = sub nsw i64 0, %461
  %463 = getelementptr inbounds i64, i64* %455, i64 %462
  %464 = ptrtoint i64* %463 to i64
  %465 = icmp sgt i64 %460, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %452
  %467 = bitcast i64* %463 to i8*
  %468 = inttoptr i64 %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %467, i8* align 8 %468, i64 %460, i1 false) #18
  br label %469

469:                                              ; preds = %466, %452
  store i64 %464, i64* %426, align 8
  store i64 %459, i64* %425, align 8
  store i64 %457, i64* %435, align 8
  %470 = icmp eq i64 %427, 0
  br i1 %470, label %473, label %471

471:                                              ; preds = %469
  %472 = inttoptr i64 %427 to i8*
  call void @_ZdlPv(i8* %472) #19
  br label %473

473:                                              ; preds = %227, %471, %469, %419
  %474 = phi i32 [ 0, %419 ], [ 0, %469 ], [ 0, %471 ], [ 1, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %184) #18
  br label %475

475:                                              ; preds = %473, %176
  %476 = phi i32 [ 0, %176 ], [ %474, %473 ]
  %477 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %478 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %477, i64 0, i32 1, i32 0
  %479 = load i8, i8* %478, align 1
  %480 = icmp slt i8 %479, 0
  br i1 %480, label %481, label %483

481:                                              ; preds = %475
  %482 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %482) #19
  br label %483

483:                                              ; preds = %475, %481
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #18
  %484 = icmp eq i32 %476, 0
  br i1 %484, label %485, label %824

485:                                              ; preds = %483, %173, %171
  %486 = call %"class.gl::GLDisplayEglUtil"* @_ZN2gl16GLDisplayEglUtil11GetInstanceEv() #18
  %487 = bitcast %"class.gl::GLDisplayEglUtil"* %486 to void (%"class.gl::GLDisplayEglUtil"*, i32, %"class.std::__1::vector.205"*)***
  %488 = load void (%"class.gl::GLDisplayEglUtil"*, i32, %"class.std::__1::vector.205"*)**, void (%"class.gl::GLDisplayEglUtil"*, i32, %"class.std::__1::vector.205"*)*** %487, align 8
  %489 = load void (%"class.gl::GLDisplayEglUtil"*, i32, %"class.std::__1::vector.205"*)*, void (%"class.gl::GLDisplayEglUtil"*, i32, %"class.std::__1::vector.205"*)** %488, align 8
  call void %489(%"class.gl::GLDisplayEglUtil"* %486, i32 %2, %"class.std::__1::vector.205"* nonnull %7) #18
  %490 = bitcast %"class.std::__1::vector.165"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %490) #18
  %491 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %13, i64 0, i32 0, i32 0
  %492 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %13, i64 0, i32 0, i32 1
  %493 = bitcast %"class.std::__1::vector.165"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %493, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN2gl12_GLOBAL__N_130GetAttribArrayFromStringVectorERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.165"* nonnull sret %13, %"class.std::__1::vector"* dereferenceable(24) %3)
  %494 = bitcast %"class.std::__1::vector.165"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %494) #18
  %495 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %14, i64 0, i32 0, i32 0
  %496 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %14, i64 0, i32 0, i32 1
  %497 = bitcast %"class.std::__1::vector.165"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %497, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN2gl12_GLOBAL__N_130GetAttribArrayFromStringVectorERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.165"* nonnull sret %14, %"class.std::__1::vector"* dereferenceable(24) %4)
  %498 = load i8, i8* @_ZN2gl12_GLOBAL__N_137g_egl_angle_feature_control_supportedE, align 1, !range !2
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %746, label %500

500:                                              ; preds = %485
  %501 = load i8**, i8*** %491, align 8
  %502 = load i8**, i8*** %492, align 8
  %503 = icmp eq i8** %501, %502
  br i1 %503, label %623, label %504

504:                                              ; preds = %500
  %505 = load i64*, i64** %17, align 8
  %506 = load i64*, i64** %18, align 8
  %507 = icmp ult i64* %505, %506
  %508 = ptrtoint i64* %506 to i64
  br i1 %507, label %509, label %513

509:                                              ; preds = %504
  store i64 13414, i64* %505, align 8
  %510 = getelementptr inbounds i64, i64* %505, i64 1
  %511 = ptrtoint i64* %510 to i64
  %512 = bitcast i64** %17 to i64*
  store i64 %511, i64* %512, align 8
  br label %561

513:                                              ; preds = %504
  %514 = ptrtoint i64* %505 to i64
  %515 = bitcast i64** %17 to i64*
  %516 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = sub i64 %514, %517
  %519 = ashr exact i64 %518, 3
  %520 = add nsw i64 %519, 1
  %521 = icmp ugt i64 %520, 2305843009213693951
  br i1 %521, label %522, label %524

522:                                              ; preds = %513
  %523 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %523) #20
  unreachable

524:                                              ; preds = %513
  %525 = bitcast i64** %18 to i64*
  %526 = sub i64 %508, %517
  %527 = ashr exact i64 %526, 3
  %528 = icmp ult i64 %527, 1152921504606846975
  br i1 %528, label %529, label %537

529:                                              ; preds = %524
  %530 = ashr exact i64 %526, 2
  %531 = icmp ult i64 %530, %520
  %532 = select i1 %531, i64 %520, i64 %530
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %542, label %534

534:                                              ; preds = %529
  %535 = icmp ugt i64 %532, 2305843009213693951
  br i1 %535, label %536, label %537

536:                                              ; preds = %534
  call void @abort() #20
  unreachable

537:                                              ; preds = %534, %524
  %538 = phi i64 [ %532, %534 ], [ 2305843009213693951, %524 ]
  %539 = shl i64 %538, 3
  %540 = call i8* @_Znwm(i64 %539) #19
  %541 = bitcast i8* %540 to i64*
  br label %542

542:                                              ; preds = %537, %529
  %543 = phi i64 [ %538, %537 ], [ 0, %529 ]
  %544 = phi i8* [ %540, %537 ], [ null, %529 ]
  %545 = phi i64* [ %541, %537 ], [ null, %529 ]
  %546 = getelementptr inbounds i64, i64* %545, i64 %519
  %547 = getelementptr inbounds i64, i64* %545, i64 %543
  %548 = ptrtoint i64* %547 to i64
  store i64 13414, i64* %546, align 8
  %549 = getelementptr inbounds i64, i64* %546, i64 1
  %550 = ptrtoint i64* %549 to i64
  %551 = ptrtoint i64* %545 to i64
  %552 = icmp sgt i64 %518, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %542
  %554 = inttoptr i64 %517 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %544, i8* align 8 %554, i64 %518, i1 false) #18
  br label %555

555:                                              ; preds = %553, %542
  store i64 %551, i64* %516, align 8
  store i64 %550, i64* %515, align 8
  store i64 %548, i64* %525, align 8
  %556 = icmp eq i64 %517, 0
  br i1 %556, label %561, label %557

557:                                              ; preds = %555
  %558 = inttoptr i64 %517 to i8*
  call void @_ZdlPv(i8* %558) #19
  %559 = load i64*, i64** %17, align 8
  %560 = ptrtoint i64* %559 to i64
  br label %561

561:                                              ; preds = %509, %555, %557
  %562 = phi i64 [ %511, %509 ], [ %550, %555 ], [ %560, %557 ]
  %563 = phi i64* [ %510, %509 ], [ %549, %555 ], [ %559, %557 ]
  %564 = bitcast %"class.std::__1::vector.165"* %13 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = load i64*, i64** %18, align 8
  %567 = icmp ult i64* %563, %566
  %568 = ptrtoint i64* %566 to i64
  br i1 %567, label %569, label %573

569:                                              ; preds = %561
  store i64 %565, i64* %563, align 8
  %570 = getelementptr inbounds i64, i64* %563, i64 1
  %571 = ptrtoint i64* %570 to i64
  %572 = bitcast i64** %17 to i64*
  store i64 %571, i64* %572, align 8
  br label %623

573:                                              ; preds = %561
  %574 = ptrtoint i64* %563 to i64
  %575 = bitcast i64** %17 to i64*
  %576 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = sub i64 %574, %577
  %579 = ashr exact i64 %578, 3
  %580 = add nsw i64 %579, 1
  %581 = icmp ugt i64 %580, 2305843009213693951
  br i1 %581, label %582, label %584

582:                                              ; preds = %573
  %583 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %583) #20
  unreachable

584:                                              ; preds = %573
  %585 = bitcast i64** %18 to i64*
  %586 = sub i64 %568, %577
  %587 = ashr exact i64 %586, 3
  %588 = icmp ult i64 %587, 1152921504606846975
  br i1 %588, label %589, label %597

589:                                              ; preds = %584
  %590 = ashr exact i64 %586, 2
  %591 = icmp ult i64 %590, %580
  %592 = select i1 %591, i64 %580, i64 %590
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %602, label %594

594:                                              ; preds = %589
  %595 = icmp ugt i64 %592, 2305843009213693951
  br i1 %595, label %596, label %597

596:                                              ; preds = %594
  call void @abort() #20
  unreachable

597:                                              ; preds = %594, %584
  %598 = phi i64 [ %592, %594 ], [ 2305843009213693951, %584 ]
  %599 = shl i64 %598, 3
  %600 = call i8* @_Znwm(i64 %599) #19
  %601 = bitcast i8* %600 to i64*
  br label %602

602:                                              ; preds = %597, %589
  %603 = phi i64 [ %598, %597 ], [ 0, %589 ]
  %604 = phi i64* [ %601, %597 ], [ null, %589 ]
  %605 = getelementptr inbounds i64, i64* %604, i64 %579
  %606 = getelementptr inbounds i64, i64* %604, i64 %603
  %607 = ptrtoint i64* %606 to i64
  store i64 %565, i64* %605, align 8
  %608 = getelementptr inbounds i64, i64* %605, i64 1
  %609 = ptrtoint i64* %608 to i64
  %610 = sub i64 %562, %577
  %611 = ashr exact i64 %610, 3
  %612 = sub nsw i64 0, %611
  %613 = getelementptr inbounds i64, i64* %605, i64 %612
  %614 = ptrtoint i64* %613 to i64
  %615 = icmp sgt i64 %610, 0
  br i1 %615, label %616, label %619

616:                                              ; preds = %602
  %617 = bitcast i64* %613 to i8*
  %618 = inttoptr i64 %577 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %617, i8* align 8 %618, i64 %610, i1 false) #18
  br label %619

619:                                              ; preds = %616, %602
  store i64 %614, i64* %576, align 8
  store i64 %609, i64* %575, align 8
  store i64 %607, i64* %585, align 8
  %620 = icmp eq i64 %577, 0
  br i1 %620, label %623, label %621

621:                                              ; preds = %619
  %622 = inttoptr i64 %577 to i8*
  call void @_ZdlPv(i8* %622) #19
  br label %623

623:                                              ; preds = %621, %619, %569, %500
  %624 = load i8**, i8*** %495, align 8
  %625 = load i8**, i8*** %496, align 8
  %626 = icmp eq i8** %624, %625
  br i1 %626, label %746, label %627

627:                                              ; preds = %623
  %628 = load i64*, i64** %17, align 8
  %629 = load i64*, i64** %18, align 8
  %630 = icmp ult i64* %628, %629
  %631 = ptrtoint i64* %629 to i64
  br i1 %630, label %632, label %636

632:                                              ; preds = %627
  store i64 13415, i64* %628, align 8
  %633 = getelementptr inbounds i64, i64* %628, i64 1
  %634 = ptrtoint i64* %633 to i64
  %635 = bitcast i64** %17 to i64*
  store i64 %634, i64* %635, align 8
  br label %684

636:                                              ; preds = %627
  %637 = ptrtoint i64* %628 to i64
  %638 = bitcast i64** %17 to i64*
  %639 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = sub i64 %637, %640
  %642 = ashr exact i64 %641, 3
  %643 = add nsw i64 %642, 1
  %644 = icmp ugt i64 %643, 2305843009213693951
  br i1 %644, label %645, label %647

645:                                              ; preds = %636
  %646 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %646) #20
  unreachable

647:                                              ; preds = %636
  %648 = bitcast i64** %18 to i64*
  %649 = sub i64 %631, %640
  %650 = ashr exact i64 %649, 3
  %651 = icmp ult i64 %650, 1152921504606846975
  br i1 %651, label %652, label %660

652:                                              ; preds = %647
  %653 = ashr exact i64 %649, 2
  %654 = icmp ult i64 %653, %643
  %655 = select i1 %654, i64 %643, i64 %653
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %665, label %657

657:                                              ; preds = %652
  %658 = icmp ugt i64 %655, 2305843009213693951
  br i1 %658, label %659, label %660

659:                                              ; preds = %657
  call void @abort() #20
  unreachable

660:                                              ; preds = %657, %647
  %661 = phi i64 [ %655, %657 ], [ 2305843009213693951, %647 ]
  %662 = shl i64 %661, 3
  %663 = call i8* @_Znwm(i64 %662) #19
  %664 = bitcast i8* %663 to i64*
  br label %665

665:                                              ; preds = %660, %652
  %666 = phi i64 [ %661, %660 ], [ 0, %652 ]
  %667 = phi i8* [ %663, %660 ], [ null, %652 ]
  %668 = phi i64* [ %664, %660 ], [ null, %652 ]
  %669 = getelementptr inbounds i64, i64* %668, i64 %642
  %670 = getelementptr inbounds i64, i64* %668, i64 %666
  %671 = ptrtoint i64* %670 to i64
  store i64 13415, i64* %669, align 8
  %672 = getelementptr inbounds i64, i64* %669, i64 1
  %673 = ptrtoint i64* %672 to i64
  %674 = ptrtoint i64* %668 to i64
  %675 = icmp sgt i64 %641, 0
  br i1 %675, label %676, label %678

676:                                              ; preds = %665
  %677 = inttoptr i64 %640 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %667, i8* align 8 %677, i64 %641, i1 false) #18
  br label %678

678:                                              ; preds = %676, %665
  store i64 %674, i64* %639, align 8
  store i64 %673, i64* %638, align 8
  store i64 %671, i64* %648, align 8
  %679 = icmp eq i64 %640, 0
  br i1 %679, label %684, label %680

680:                                              ; preds = %678
  %681 = inttoptr i64 %640 to i8*
  call void @_ZdlPv(i8* %681) #19
  %682 = load i64*, i64** %17, align 8
  %683 = ptrtoint i64* %682 to i64
  br label %684

684:                                              ; preds = %632, %678, %680
  %685 = phi i64 [ %634, %632 ], [ %673, %678 ], [ %683, %680 ]
  %686 = phi i64* [ %633, %632 ], [ %672, %678 ], [ %682, %680 ]
  %687 = bitcast %"class.std::__1::vector.165"* %14 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = load i64*, i64** %18, align 8
  %690 = icmp ult i64* %686, %689
  %691 = ptrtoint i64* %689 to i64
  br i1 %690, label %692, label %696

692:                                              ; preds = %684
  store i64 %688, i64* %686, align 8
  %693 = getelementptr inbounds i64, i64* %686, i64 1
  %694 = ptrtoint i64* %693 to i64
  %695 = bitcast i64** %17 to i64*
  store i64 %694, i64* %695, align 8
  br label %746

696:                                              ; preds = %684
  %697 = ptrtoint i64* %686 to i64
  %698 = bitcast i64** %17 to i64*
  %699 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %700 = load i64, i64* %699, align 8
  %701 = sub i64 %697, %700
  %702 = ashr exact i64 %701, 3
  %703 = add nsw i64 %702, 1
  %704 = icmp ugt i64 %703, 2305843009213693951
  br i1 %704, label %705, label %707

705:                                              ; preds = %696
  %706 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %706) #20
  unreachable

707:                                              ; preds = %696
  %708 = bitcast i64** %18 to i64*
  %709 = sub i64 %691, %700
  %710 = ashr exact i64 %709, 3
  %711 = icmp ult i64 %710, 1152921504606846975
  br i1 %711, label %712, label %720

712:                                              ; preds = %707
  %713 = ashr exact i64 %709, 2
  %714 = icmp ult i64 %713, %703
  %715 = select i1 %714, i64 %703, i64 %713
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %725, label %717

717:                                              ; preds = %712
  %718 = icmp ugt i64 %715, 2305843009213693951
  br i1 %718, label %719, label %720

719:                                              ; preds = %717
  call void @abort() #20
  unreachable

720:                                              ; preds = %717, %707
  %721 = phi i64 [ %715, %717 ], [ 2305843009213693951, %707 ]
  %722 = shl i64 %721, 3
  %723 = call i8* @_Znwm(i64 %722) #19
  %724 = bitcast i8* %723 to i64*
  br label %725

725:                                              ; preds = %720, %712
  %726 = phi i64 [ %721, %720 ], [ 0, %712 ]
  %727 = phi i64* [ %724, %720 ], [ null, %712 ]
  %728 = getelementptr inbounds i64, i64* %727, i64 %702
  %729 = getelementptr inbounds i64, i64* %727, i64 %726
  %730 = ptrtoint i64* %729 to i64
  store i64 %688, i64* %728, align 8
  %731 = getelementptr inbounds i64, i64* %728, i64 1
  %732 = ptrtoint i64* %731 to i64
  %733 = sub i64 %685, %700
  %734 = ashr exact i64 %733, 3
  %735 = sub nsw i64 0, %734
  %736 = getelementptr inbounds i64, i64* %728, i64 %735
  %737 = ptrtoint i64* %736 to i64
  %738 = icmp sgt i64 %733, 0
  br i1 %738, label %739, label %742

739:                                              ; preds = %725
  %740 = bitcast i64* %736 to i8*
  %741 = inttoptr i64 %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %740, i8* align 8 %741, i64 %733, i1 false) #18
  br label %742

742:                                              ; preds = %739, %725
  store i64 %737, i64* %699, align 8
  store i64 %732, i64* %698, align 8
  store i64 %730, i64* %708, align 8
  %743 = icmp eq i64 %700, 0
  br i1 %743, label %746, label %744

744:                                              ; preds = %742
  %745 = inttoptr i64 %700 to i8*
  call void @_ZdlPv(i8* %745) #19
  br label %746

746:                                              ; preds = %744, %742, %692, %485, %623
  %747 = load i64*, i64** %17, align 8
  %748 = load i64*, i64** %18, align 8
  %749 = icmp ult i64* %747, %748
  %750 = ptrtoint i64* %748 to i64
  br i1 %749, label %751, label %755

751:                                              ; preds = %746
  store i64 12344, i64* %747, align 8
  %752 = getelementptr inbounds i64, i64* %747, i64 1
  %753 = ptrtoint i64* %752 to i64
  %754 = bitcast i64** %17 to i64*
  store i64 %753, i64* %754, align 8
  br label %801

755:                                              ; preds = %746
  %756 = ptrtoint i64* %747 to i64
  %757 = bitcast i64** %17 to i64*
  %758 = bitcast %"class.std::__1::vector.205"* %7 to i64*
  %759 = load i64, i64* %758, align 8
  %760 = sub i64 %756, %759
  %761 = ashr exact i64 %760, 3
  %762 = add nsw i64 %761, 1
  %763 = icmp ugt i64 %762, 2305843009213693951
  br i1 %763, label %764, label %766

764:                                              ; preds = %755
  %765 = bitcast %"class.std::__1::vector.205"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %765) #20
  unreachable

766:                                              ; preds = %755
  %767 = bitcast i64** %18 to i64*
  %768 = sub i64 %750, %759
  %769 = ashr exact i64 %768, 3
  %770 = icmp ult i64 %769, 1152921504606846975
  br i1 %770, label %771, label %779

771:                                              ; preds = %766
  %772 = ashr exact i64 %768, 2
  %773 = icmp ult i64 %772, %762
  %774 = select i1 %773, i64 %762, i64 %772
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %784, label %776

776:                                              ; preds = %771
  %777 = icmp ugt i64 %774, 2305843009213693951
  br i1 %777, label %778, label %779

778:                                              ; preds = %776
  call void @abort() #20
  unreachable

779:                                              ; preds = %776, %766
  %780 = phi i64 [ %774, %776 ], [ 2305843009213693951, %766 ]
  %781 = shl i64 %780, 3
  %782 = call i8* @_Znwm(i64 %781) #19
  %783 = bitcast i8* %782 to i64*
  br label %784

784:                                              ; preds = %779, %771
  %785 = phi i64 [ %780, %779 ], [ 0, %771 ]
  %786 = phi i8* [ %782, %779 ], [ null, %771 ]
  %787 = phi i64* [ %783, %779 ], [ null, %771 ]
  %788 = getelementptr inbounds i64, i64* %787, i64 %761
  %789 = getelementptr inbounds i64, i64* %787, i64 %785
  %790 = ptrtoint i64* %789 to i64
  store i64 12344, i64* %788, align 8
  %791 = getelementptr inbounds i64, i64* %788, i64 1
  %792 = ptrtoint i64* %791 to i64
  %793 = ptrtoint i64* %787 to i64
  %794 = icmp sgt i64 %760, 0
  br i1 %794, label %795, label %797

795:                                              ; preds = %784
  %796 = inttoptr i64 %759 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %786, i8* align 8 %796, i64 %760, i1 false) #18
  br label %797

797:                                              ; preds = %795, %784
  store i64 %793, i64* %758, align 8
  store i64 %792, i64* %757, align 8
  store i64 %790, i64* %767, align 8
  %798 = icmp eq i64 %759, 0
  br i1 %798, label %801, label %799

799:                                              ; preds = %797
  %800 = inttoptr i64 %759 to i8*
  call void @_ZdlPv(i8* %800) #19
  br label %801

801:                                              ; preds = %751, %797, %799
  %802 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %803 = inttoptr i64 %0 to i8*
  %804 = load i64*, i64** %16, align 8
  %805 = bitcast %"class.gl::EGLApi"* %802 to i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)***
  %806 = load i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)**, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*** %805, align 8
  %807 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)** %806, i64 40
  %808 = load i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)*, i8* (%"class.gl::EGLApi"*, i32, i8*, i64*)** %807, align 8
  %809 = call i8* %808(%"class.gl::EGLApi"* %802, i32 12802, i8* %803, i64* %804) #18
  %810 = load i8**, i8*** %495, align 8
  %811 = icmp eq i8** %810, null
  br i1 %811, label %816, label %812

812:                                              ; preds = %801
  %813 = ptrtoint i8** %810 to i64
  %814 = bitcast i8*** %496 to i64*
  store i64 %813, i64* %814, align 8
  %815 = bitcast i8** %810 to i8*
  call void @_ZdlPv(i8* %815) #19
  br label %816

816:                                              ; preds = %801, %812
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %494) #18
  %817 = load i8**, i8*** %491, align 8
  %818 = icmp eq i8** %817, null
  br i1 %818, label %823, label %819

819:                                              ; preds = %816
  %820 = ptrtoint i8** %817 to i64
  %821 = bitcast i8*** %492 to i64*
  store i64 %820, i64* %821, align 8
  %822 = bitcast i8** %817 to i8*
  call void @_ZdlPv(i8* %822) #19
  br label %823

823:                                              ; preds = %816, %819
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %490) #18
  br label %824

824:                                              ; preds = %483, %823
  %825 = phi i8* [ %809, %823 ], [ null, %483 ]
  %826 = load i64*, i64** %16, align 8
  %827 = icmp eq i64* %826, null
  br i1 %827, label %832, label %828

828:                                              ; preds = %824
  %829 = ptrtoint i64* %826 to i64
  %830 = bitcast i64** %17 to i64*
  store i64 %829, i64* %830, align 8
  %831 = bitcast i64* %826 to i8*
  call void @_ZdlPv(i8* %831) #19
  br label %832

832:                                              ; preds = %824, %828
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  ret i8* %825
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2gl12_GLOBAL__N_130GetAttribArrayFromStringVectorERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.165"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.165", %"class.std::__1::vector.165"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.165"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #18
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %26, label %11

11:                                               ; preds = %2
  %12 = bitcast i8*** %3 to i64*
  %13 = bitcast %"class.std::__1::vector.165"* %0 to i64*
  %14 = bitcast i8*** %4 to i64*
  br label %81

15:                                               ; preds = %147
  %16 = load i8**, i8*** %3, align 8
  %17 = load i8**, i8*** %4, align 8
  %18 = ptrtoint i8** %16 to i64
  %19 = icmp ult i8** %16, %17
  %20 = ptrtoint i8** %17 to i64
  br i1 %19, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast i8** %16 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8*, i8** %16, i64 1
  %24 = ptrtoint i8** %23 to i64
  %25 = bitcast i8*** %3 to i64*
  store i64 %24, i64* %25, align 8
  br label %80

26:                                               ; preds = %2, %15
  %27 = phi i64 [ %20, %15 ], [ 0, %2 ]
  %28 = phi i8** [ %16, %15 ], [ null, %2 ]
  %29 = phi i64 [ %18, %15 ], [ 0, %2 ]
  %30 = ptrtoint i8** %28 to i64
  %31 = bitcast i8*** %3 to i64*
  %32 = bitcast %"class.std::__1::vector.165"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = ashr exact i64 %34, 3
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 2305843009213693951
  br i1 %37, label %38, label %40

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::vector.165"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #20
  unreachable

40:                                               ; preds = %26
  %41 = bitcast i8*** %4 to i64*
  %42 = sub i64 %27, %33
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, 1152921504606846975
  br i1 %44, label %45, label %53

45:                                               ; preds = %40
  %46 = ashr exact i64 %42, 2
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = icmp ugt i64 %48, 2305843009213693951
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @abort() #20
  unreachable

53:                                               ; preds = %50, %40
  %54 = phi i64 [ %48, %50 ], [ 2305843009213693951, %40 ]
  %55 = shl i64 %54, 3
  %56 = tail call i8* @_Znwm(i64 %55) #19
  %57 = bitcast i8* %56 to i8**
  br label %58

58:                                               ; preds = %53, %45
  %59 = phi i64 [ %54, %53 ], [ 0, %45 ]
  %60 = phi i8** [ %57, %53 ], [ null, %45 ]
  %61 = getelementptr inbounds i8*, i8** %60, i64 %35
  %62 = getelementptr inbounds i8*, i8** %60, i64 %59
  %63 = ptrtoint i8** %62 to i64
  %64 = bitcast i8** %61 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds i8*, i8** %61, i64 1
  %66 = ptrtoint i8** %65 to i64
  %67 = sub i64 %29, %33
  %68 = ashr exact i64 %67, 3
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i8*, i8** %61, i64 %69
  %71 = ptrtoint i8** %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %58
  %74 = bitcast i8** %70 to i8*
  %75 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %67, i1 false) #18
  br label %76

76:                                               ; preds = %73, %58
  store i64 %71, i64* %32, align 8
  store i64 %66, i64* %31, align 8
  store i64 %63, i64* %41, align 8
  %77 = icmp eq i64 %33, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %79) #19
  br label %80

80:                                               ; preds = %21, %76, %78
  ret void

81:                                               ; preds = %11, %147
  %82 = phi %"class.std::__1::basic_string"* [ %7, %11 ], [ %148, %147 ]
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  br label %92

90:                                               ; preds = %81
  %91 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i8* [ %89, %87 ], [ %91, %90 ]
  %94 = ptrtoint i8* %93 to i64
  %95 = load i8**, i8*** %3, align 8
  %96 = load i8**, i8*** %4, align 8
  %97 = icmp ult i8** %95, %96
  %98 = ptrtoint i8** %96 to i64
  br i1 %97, label %99, label %103

99:                                               ; preds = %92
  %100 = bitcast i8** %95 to i64*
  store i64 %94, i64* %100, align 8
  %101 = getelementptr inbounds i8*, i8** %95, i64 1
  %102 = ptrtoint i8** %101 to i64
  store i64 %102, i64* %12, align 8
  br label %147

103:                                              ; preds = %92
  %104 = ptrtoint i8** %95 to i64
  %105 = load i64, i64* %13, align 8
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = add nsw i64 %107, 1
  %109 = icmp ugt i64 %108, 2305843009213693951
  br i1 %109, label %110, label %112

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::vector.165"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #20
  unreachable

112:                                              ; preds = %103
  %113 = sub i64 %98, %105
  %114 = ashr exact i64 %113, 3
  %115 = icmp ult i64 %114, 1152921504606846975
  br i1 %115, label %116, label %124

116:                                              ; preds = %112
  %117 = ashr exact i64 %113, 2
  %118 = icmp ult i64 %117, %108
  %119 = select i1 %118, i64 %108, i64 %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = icmp ugt i64 %119, 2305843009213693951
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  tail call void @abort() #20
  unreachable

124:                                              ; preds = %121, %112
  %125 = phi i64 [ %119, %121 ], [ 2305843009213693951, %112 ]
  %126 = shl i64 %125, 3
  %127 = tail call i8* @_Znwm(i64 %126) #19
  %128 = bitcast i8* %127 to i8**
  br label %129

129:                                              ; preds = %124, %116
  %130 = phi i64 [ %125, %124 ], [ 0, %116 ]
  %131 = phi i8* [ %127, %124 ], [ null, %116 ]
  %132 = phi i8** [ %128, %124 ], [ null, %116 ]
  %133 = getelementptr inbounds i8*, i8** %132, i64 %107
  %134 = getelementptr inbounds i8*, i8** %132, i64 %130
  %135 = ptrtoint i8** %134 to i64
  %136 = bitcast i8** %133 to i64*
  store i64 %94, i64* %136, align 8
  %137 = getelementptr inbounds i8*, i8** %133, i64 1
  %138 = ptrtoint i8** %137 to i64
  %139 = ptrtoint i8** %132 to i64
  %140 = icmp sgt i64 %106, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %129
  %142 = inttoptr i64 %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %142, i64 %106, i1 false) #18
  br label %143

143:                                              ; preds = %141, %129
  store i64 %139, i64* %13, align 8
  store i64 %138, i64* %12, align 8
  store i64 %135, i64* %14, align 8
  %144 = icmp eq i64 %105, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = inttoptr i64 %105 to i8*
  tail call void @_ZdlPv(i8* %146) #19
  br label %147

147:                                              ; preds = %99, %143, %145
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 1
  %149 = icmp eq %"class.std::__1::basic_string"* %148, %9
  br i1 %149, label %15, label %81
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"*) unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #18
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #18
  %15 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #18
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #18
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.114, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.115, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"** %23, align 8
  %25 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %24, i64 %1
  ret %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN2ui18ScopedUnsetDisplayC1Ev(%"class.ui::ScopedUnsetDisplay"*) unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl16GLSurfaceOverlayD1Ev(%"class.gl::GLSurfaceOverlay"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2gl27GLSurfacePresentationHelperD1Ev(%"class.gl::GLSurfacePresentationHelper"*) unnamed_addr #4

declare void @_ZN2gl24SyncControlVSyncProviderC2Ev(%"class.gl::SyncControlVSyncProvider"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl24SyncControlVSyncProviderD2Ev(%"class.gl::SyncControlVSyncProvider"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProviderD0Ev(%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider", %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* %0, i64 0, i32 0
  tail call void @_ZN2gl24SyncControlVSyncProviderD2Ev(%"class.gl::SyncControlVSyncProvider"* %2) #18
  %3 = bitcast %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #19
  ret void
}

declare void @_ZN2gl24SyncControlVSyncProvider18GetVSyncParametersEN4base12OnceCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE() unnamed_addr

declare zeroext i1 @_ZN2gl24SyncControlVSyncProvider29GetVSyncParametersIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaE(%"class.gl::SyncControlVSyncProvider"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl24SyncControlVSyncProvider36SupportGetVSyncParametersIfAvailableEv(%"class.gl::SyncControlVSyncProvider"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider9IsHWClockEv(%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider13GetSyncValuesEPlS2_S2_(%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* nocapture readonly, i64* nocapture, i64* nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  store i64 -6148914691236517206, i64* %5, align 8
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  store i64 -6148914691236517206, i64* %6, align 8
  %10 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  store i64 -6148914691236517206, i64* %7, align 8
  %11 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %12 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %13 = getelementptr inbounds %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider", %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* %0, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.gl::EGLApi"* %11 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)***
  %16 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)** %16, i64 43
  %18 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*, i64*, i64*)** %17, align 8
  %19 = call i32 %18(%"class.gl::EGLApi"* %11, i8* %12, i8* %14, i64* nonnull %5, i64* nonnull %6, i64* nonnull %7) #18
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %4
  %22 = load i64, i64* %5, align 8
  store i64 %22, i64* %1, align 8
  %23 = load i64, i64* %6, align 8
  store i64 %23, i64* %2, align 8
  %24 = load i64, i64* %7, align 8
  store i64 %24, i64* %3, align 8
  br label %25

25:                                               ; preds = %21, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2gl12_GLOBAL__N_127EGLSyncControlVSyncProvider10GetMscRateEPiS2_(%"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* nocapture readonly, i32*, i32*) unnamed_addr #0 align 2 {
  %4 = load i8, i8* @_ZN2gl12_GLOBAL__N_133g_egl_sync_control_rate_supportedE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %3
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = load i8*, i8** @_ZN2gl12_GLOBAL__N_113g_egl_displayE, align 8
  %9 = getelementptr inbounds %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider", %"class.gl::(anonymous namespace)::EGLSyncControlVSyncProvider"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)***
  %12 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)** %12, i64 37
  %14 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*)** %13, align 8
  %15 = tail call i32 %14(%"class.gl::EGLApi"* %7, i8* %8, i8* %10, i32* %1, i32* %2) #18
  %16 = icmp eq i32 %15, 1
  br label %17

17:                                               ; preds = %3, %6
  %18 = phi i1 [ %16, %6 ], [ false, %3 ]
  ret i1 %18
}

declare void @_ZN2gl27GLSurfacePresentationHelperC1EPN3gfx13VSyncProviderE(%"class.gl::GLSurfacePresentationHelper"*, %"class.gfx::VSyncProvider"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #18
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #18
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #18
  br i1 %37, label %38, label %39, !prof !26

38:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #18
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #18
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #18
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #18
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %11, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %12, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %19, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %20, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %24, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %25, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %0 to i64
  %6 = icmp ult %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %2 to i64
  %9 = ptrtoint %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #18
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #18
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !26

16:                                               ; preds = %7
  tail call void @llvm.trap() #18
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.115, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.116, i64 0, i64 0)) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0), i64 14) #18
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i64 0, i64 0), i64 14) #18
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i64 0, i64 0), i64 8) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #18
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !26

45:                                               ; preds = %41
  call void @llvm.trap() #18
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %0, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* @_ZNK4base8internal12VectorBufferIN2gl22NativeViewGLSurfaceEGL8SwapInfoEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.114, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.115, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"** %23, align 8
  %25 = getelementptr inbounds %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo", %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %24, i64 %1
  ret %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"* %25
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #18
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #18
  br i1 %31, label %32, label %33, !prof !26

32:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #18
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN2gl22NativeViewGLSurfaceEGL8SwapInfoEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #18
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #18
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEvT0_S7_T_"(%struct.TimeNamePair*, %struct.TimeNamePair*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %456, %2
  %4 = phi %struct.TimeNamePair* [ %1, %2 ], [ %431, %456 ]
  %5 = phi %struct.TimeNamePair* [ %0, %2 ], [ %30, %456 ]
  %6 = ptrtoint %struct.TimeNamePair* %4 to i64
  %7 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1
  %8 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %struct.TimeNamePair* %7 to i8*
  %10 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = bitcast %struct.TimeNamePair* %7 to i8*
  %13 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = bitcast %struct.TimeNamePair* %7 to i8*
  %16 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %7, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %struct.TimeNamePair* %7 to i8*
  %20 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %7, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %struct.TimeNamePair* %7 to i8*
  %24 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = ptrtoint %struct.TimeNamePair* %4 to i64
  br label %27

27:                                               ; preds = %465, %3
  %28 = phi %struct.TimeNamePair* [ %5, %3 ], [ %466, %465 ]
  br label %29

29:                                               ; preds = %364, %27
  %30 = phi %struct.TimeNamePair* [ %28, %27 ], [ %353, %364 ]
  %31 = ptrtoint %struct.TimeNamePair* %30 to i64
  %32 = sub i64 %6, %31
  %33 = ashr exact i64 %32, 4
  switch i64 %33, label %147 [
    i64 0, label %469
    i64 1, label %469
    i64 2, label %34
    i64 3, label %49
    i64 4, label %96
    i64 5, label %101
  ]

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1
  %36 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %35, i64 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %39, %37
  br i1 %40, label %41, label %469

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %struct.TimeNamePair* %30 to i8*
  %46 = bitcast %struct.TimeNamePair* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #18
  store i64 %37, i64* %38, align 8
  %47 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %44, i64* %48, align 8
  br label %469

49:                                               ; preds = %29
  %50 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %51 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1
  %52 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %50, i64 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 %55, %53
  %57 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %51, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp slt i64 %58, %55
  br i1 %56, label %77, label %60

60:                                               ; preds = %49
  br i1 %59, label %61, label %469

61:                                               ; preds = %60
  %62 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1, i32 1
  %63 = bitcast i8** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %struct.TimeNamePair* %50 to i8*
  %66 = bitcast %struct.TimeNamePair* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false) #18
  store i64 %55, i64* %57, align 8
  %67 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %68 = bitcast i8** %67 to i64*
  store i64 %64, i64* %68, align 8
  %69 = load i64, i64* %52, align 8
  %70 = load i64, i64* %54, align 8
  %71 = icmp slt i64 %70, %69
  br i1 %71, label %72, label %469

72:                                               ; preds = %61
  %73 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %struct.TimeNamePair* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %65, i64 16, i1 false) #18
  store i64 %69, i64* %54, align 8
  store i64 %75, i64* %63, align 8
  br label %469

77:                                               ; preds = %49
  %78 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %79 = bitcast i8** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %struct.TimeNamePair* %30 to i8*
  br i1 %59, label %82, label %86

82:                                               ; preds = %77
  %83 = bitcast %struct.TimeNamePair* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %83, i64 16, i1 false) #18
  store i64 %53, i64* %57, align 8
  %84 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %85 = bitcast i8** %84 to i64*
  store i64 %80, i64* %85, align 8
  br label %469

86:                                               ; preds = %77
  %87 = bitcast %struct.TimeNamePair* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %87, i64 16, i1 false) #18
  store i64 %53, i64* %54, align 8
  %88 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1, i32 1
  %89 = bitcast i8** %88 to i64*
  store i64 %80, i64* %89, align 8
  %90 = load i64, i64* %57, align 8
  %91 = icmp slt i64 %90, %53
  br i1 %91, label %92, label %469

92:                                               ; preds = %86
  %93 = bitcast %struct.TimeNamePair* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %93, i64 16, i1 false) #18
  store i64 %53, i64* %57, align 8
  %94 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %95 = bitcast i8** %94 to i64*
  store i64 %80, i64* %95, align 8
  br label %469

96:                                               ; preds = %29
  %97 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %98 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2
  %99 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1
  %100 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* %30, %struct.TimeNamePair* %97, %struct.TimeNamePair* %98, %struct.TimeNamePair* %99)
  br label %469

101:                                              ; preds = %29
  %102 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %103 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2
  %104 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 3
  %105 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1
  %106 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* %30, %struct.TimeNamePair* %102, %struct.TimeNamePair* %103, %struct.TimeNamePair* %104) #18
  %107 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %104, i64 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %105, i64 0, i32 0, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp slt i64 %110, %108
  br i1 %111, label %112, label %469

112:                                              ; preds = %101
  %113 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 3, i32 1
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %struct.TimeNamePair* %104 to i8*
  %117 = bitcast %struct.TimeNamePair* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #18
  store i64 %108, i64* %109, align 8
  %118 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %4, i64 -1, i32 1
  %119 = bitcast i8** %118 to i64*
  store i64 %115, i64* %119, align 8
  %120 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %103, i64 0, i32 0, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %107, align 8
  %123 = icmp slt i64 %122, %121
  br i1 %123, label %124, label %469

124:                                              ; preds = %112
  %125 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2, i32 1
  %126 = bitcast i8** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %struct.TimeNamePair* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %116, i64 16, i1 false) #18
  store i64 %121, i64* %107, align 8
  store i64 %127, i64* %114, align 8
  %129 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %102, i64 0, i32 0, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = load i64, i64* %120, align 8
  %132 = icmp slt i64 %131, %130
  br i1 %132, label %133, label %469

133:                                              ; preds = %124
  %134 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1, i32 1
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %struct.TimeNamePair* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %128, i64 16, i1 false) #18
  store i64 %130, i64* %120, align 8
  store i64 %136, i64* %126, align 8
  %138 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = load i64, i64* %129, align 8
  %141 = icmp slt i64 %140, %139
  br i1 %141, label %142, label %469

142:                                              ; preds = %133
  %143 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct.TimeNamePair* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %137, i64 16, i1 false) #18
  store i64 %139, i64* %129, align 8
  store i64 %145, i64* %135, align 8
  br label %469

147:                                              ; preds = %29
  %148 = icmp slt i64 %32, 496
  br i1 %148, label %149, label %230

149:                                              ; preds = %147
  %150 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2
  %151 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %152 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %151, i64 0, i32 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp slt i64 %155, %153
  %157 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %150, i64 0, i32 0, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp slt i64 %158, %155
  br i1 %156, label %176, label %160

160:                                              ; preds = %149
  br i1 %159, label %161, label %194

161:                                              ; preds = %160
  %162 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1, i32 1
  %163 = bitcast i8** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %struct.TimeNamePair* %151 to i8*
  %166 = bitcast %struct.TimeNamePair* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #18
  store i64 %155, i64* %157, align 8
  %167 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2, i32 1
  %168 = bitcast i8** %167 to i64*
  store i64 %164, i64* %168, align 8
  %169 = load i64, i64* %154, align 8
  %170 = icmp slt i64 %169, %153
  br i1 %170, label %171, label %194

171:                                              ; preds = %161
  %172 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %173 = bitcast i8** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %struct.TimeNamePair* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %165, i64 16, i1 false) #18
  store i64 %153, i64* %154, align 8
  store i64 %174, i64* %163, align 8
  br label %194

176:                                              ; preds = %149
  %177 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %178 = bitcast i8** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %struct.TimeNamePair* %30 to i8*
  br i1 %159, label %181, label %185

181:                                              ; preds = %176
  %182 = bitcast %struct.TimeNamePair* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %182, i64 16, i1 false) #18
  store i64 %153, i64* %157, align 8
  %183 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2, i32 1
  %184 = bitcast i8** %183 to i64*
  store i64 %179, i64* %184, align 8
  br label %194

185:                                              ; preds = %176
  %186 = bitcast %struct.TimeNamePair* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %186, i64 16, i1 false) #18
  store i64 %153, i64* %154, align 8
  %187 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1, i32 1
  %188 = bitcast i8** %187 to i64*
  store i64 %179, i64* %188, align 8
  %189 = icmp slt i64 %158, %153
  br i1 %189, label %190, label %194

190:                                              ; preds = %185
  %191 = bitcast %struct.TimeNamePair* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %191, i64 16, i1 false) #18
  store i64 %153, i64* %157, align 8
  %192 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 2, i32 1
  %193 = bitcast i8** %192 to i64*
  store i64 %179, i64* %193, align 8
  br label %194

194:                                              ; preds = %190, %185, %181, %171, %161, %160
  %195 = phi i64 [ %158, %160 ], [ %155, %161 ], [ %155, %171 ], [ %153, %181 ], [ %158, %185 ], [ %153, %190 ]
  %196 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 3
  %197 = icmp eq %struct.TimeNamePair* %196, %4
  br i1 %197, label %469, label %198

198:                                              ; preds = %194, %228
  %199 = phi i64 [ %229, %228 ], [ %195, %194 ]
  %200 = phi %struct.TimeNamePair* [ %226, %228 ], [ %196, %194 ]
  %201 = phi %struct.TimeNamePair* [ %200, %228 ], [ %150, %194 ]
  %202 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %200, i64 0, i32 0, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = icmp slt i64 %203, %199
  br i1 %204, label %205, label %225

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %200, i64 0, i32 1
  %207 = bitcast i8** %206 to i64*
  %208 = load i64, i64* %207, align 8
  br label %209

209:                                              ; preds = %215, %205
  %210 = phi %struct.TimeNamePair* [ %200, %205 ], [ %211, %215 ]
  %211 = phi %struct.TimeNamePair* [ %201, %205 ], [ %216, %215 ]
  %212 = bitcast %struct.TimeNamePair* %210 to i8*
  %213 = bitcast %struct.TimeNamePair* %211 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 16, i1 false) #18
  %214 = icmp eq %struct.TimeNamePair* %211, %30
  br i1 %214, label %220, label %215

215:                                              ; preds = %209
  %216 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %211, i64 -1
  %217 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %216, i64 0, i32 0, i32 0, i32 0
  %218 = load i64, i64* %217, align 8
  %219 = icmp slt i64 %203, %218
  br i1 %219, label %209, label %220

220:                                              ; preds = %215, %209
  %221 = phi %struct.TimeNamePair* [ %30, %209 ], [ %211, %215 ]
  %222 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %221, i64 0, i32 0, i32 0, i32 0
  store i64 %203, i64* %222, align 8
  %223 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %221, i64 0, i32 1
  %224 = bitcast i8** %223 to i64*
  store i64 %208, i64* %224, align 8
  br label %225

225:                                              ; preds = %220, %198
  %226 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %200, i64 1
  %227 = icmp eq %struct.TimeNamePair* %226, %4
  br i1 %227, label %469, label %228

228:                                              ; preds = %225
  %229 = load i64, i64* %202, align 8
  br label %198

230:                                              ; preds = %147
  %231 = icmp sgt i64 %32, 15984
  %232 = sdiv i64 %33, 2
  %233 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %232
  br i1 %231, label %234, label %279

234:                                              ; preds = %230
  %235 = sdiv i64 %33, 4
  %236 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %235
  %237 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %233, i64 %235
  %238 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* %30, %struct.TimeNamePair* %236, %struct.TimeNamePair* %233, %struct.TimeNamePair* %237) #18
  %239 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %237, i64 0, i32 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = load i64, i64* %18, align 8
  %242 = icmp slt i64 %241, %240
  br i1 %242, label %243, label %314

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %237, i64 0, i32 1
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %struct.TimeNamePair* %237 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %19, i64 16, i1 false) #18
  store i64 %240, i64* %18, align 8
  store i64 %246, i64* %21, align 8
  %248 = add i32 %238, 1
  %249 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %233, i64 0, i32 0, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = load i64, i64* %239, align 8
  %252 = icmp slt i64 %251, %250
  br i1 %252, label %253, label %314

253:                                              ; preds = %243
  %254 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %232, i32 1
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %struct.TimeNamePair* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %247, i64 16, i1 false) #18
  store i64 %250, i64* %239, align 8
  store i64 %256, i64* %245, align 8
  %258 = add i32 %238, 2
  %259 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %236, i64 0, i32 0, i32 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = load i64, i64* %249, align 8
  %262 = icmp slt i64 %261, %260
  br i1 %262, label %263, label %314

263:                                              ; preds = %253
  %264 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %235, i32 1
  %265 = bitcast i8** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %struct.TimeNamePair* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %257, i64 16, i1 false) #18
  store i64 %260, i64* %249, align 8
  store i64 %266, i64* %255, align 8
  %268 = add i32 %238, 3
  %269 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = load i64, i64* %259, align 8
  %272 = icmp slt i64 %271, %270
  br i1 %272, label %273, label %314

273:                                              ; preds = %263
  %274 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %275 = bitcast i8** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %struct.TimeNamePair* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %267, i64 16, i1 false) #18
  store i64 %270, i64* %259, align 8
  store i64 %276, i64* %265, align 8
  %278 = add i32 %238, 4
  br label %314

279:                                              ; preds = %230
  %280 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %233, i64 0, i32 0, i32 0, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = icmp slt i64 %283, %281
  %285 = load i64, i64* %8, align 8
  %286 = icmp slt i64 %285, %283
  br i1 %284, label %301, label %287

287:                                              ; preds = %279
  br i1 %286, label %288, label %314

288:                                              ; preds = %287
  %289 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %232, i32 1
  %290 = bitcast i8** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %struct.TimeNamePair* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %9, i64 16, i1 false) #18
  store i64 %283, i64* %8, align 8
  store i64 %291, i64* %11, align 8
  %293 = load i64, i64* %280, align 8
  %294 = load i64, i64* %282, align 8
  %295 = icmp slt i64 %294, %293
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  %297 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %298 = bitcast i8** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %struct.TimeNamePair* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %292, i64 16, i1 false) #18
  store i64 %293, i64* %282, align 8
  store i64 %299, i64* %290, align 8
  br label %314

301:                                              ; preds = %279
  %302 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %303 = bitcast i8** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %struct.TimeNamePair* %30 to i8*
  br i1 %286, label %306, label %307

306:                                              ; preds = %301
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* align 8 %15, i64 16, i1 false) #18
  store i64 %281, i64* %8, align 8
  store i64 %304, i64* %17, align 8
  br label %314

307:                                              ; preds = %301
  %308 = bitcast %struct.TimeNamePair* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* align 8 %308, i64 16, i1 false) #18
  store i64 %281, i64* %282, align 8
  %309 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 %232, i32 1
  %310 = bitcast i8** %309 to i64*
  store i64 %304, i64* %310, align 8
  %311 = load i64, i64* %8, align 8
  %312 = icmp slt i64 %311, %281
  br i1 %312, label %313, label %314

313:                                              ; preds = %307
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %12, i64 16, i1 false) #18
  store i64 %281, i64* %8, align 8
  store i64 %304, i64* %14, align 8
  br label %314

314:                                              ; preds = %313, %307, %306, %296, %288, %287, %273, %263, %253, %243, %234
  %315 = phi i32 [ %278, %273 ], [ %268, %263 ], [ %258, %253 ], [ %248, %243 ], [ %238, %234 ], [ 1, %306 ], [ 0, %287 ], [ 2, %296 ], [ 1, %288 ], [ 2, %313 ], [ 1, %307 ]
  %316 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %233, i64 0, i32 0, i32 0, i32 0
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 0, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = icmp slt i64 %319, %317
  br i1 %320, label %389, label %321

321:                                              ; preds = %314, %375
  %322 = phi %struct.TimeNamePair* [ %323, %375 ], [ %7, %314 ]
  %323 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %322, i64 -1
  %324 = icmp eq %struct.TimeNamePair* %30, %323
  br i1 %324, label %325, label %375

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %327 = load i64, i64* %22, align 8
  %328 = icmp slt i64 %319, %327
  br i1 %328, label %345, label %329

329:                                              ; preds = %325
  %330 = icmp eq %struct.TimeNamePair* %326, %7
  br i1 %330, label %469, label %331

331:                                              ; preds = %329, %342
  %332 = phi %struct.TimeNamePair* [ %343, %342 ], [ %326, %329 ]
  %333 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %332, i64 0, i32 0, i32 0, i32 0
  %334 = load i64, i64* %333, align 8
  %335 = icmp slt i64 %319, %334
  br i1 %335, label %336, label %342

336:                                              ; preds = %331
  %337 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %332, i64 0, i32 1
  %338 = bitcast i8** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %struct.TimeNamePair* %332 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %340, i8* align 8 %23, i64 16, i1 false) #18
  store i64 %334, i64* %22, align 8
  store i64 %339, i64* %25, align 8
  %341 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %332, i64 1
  br label %345

342:                                              ; preds = %331
  %343 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %332, i64 1
  %344 = icmp eq %struct.TimeNamePair* %343, %7
  br i1 %344, label %469, label %331

345:                                              ; preds = %336, %325
  %346 = phi %struct.TimeNamePair* [ %326, %325 ], [ %341, %336 ]
  %347 = icmp eq %struct.TimeNamePair* %346, %7
  br i1 %347, label %469, label %348

348:                                              ; preds = %345, %366
  %349 = phi %struct.TimeNamePair* [ %357, %366 ], [ %346, %345 ]
  %350 = phi %struct.TimeNamePair* [ %360, %366 ], [ %7, %345 ]
  %351 = load i64, i64* %318, align 8
  br label %352

352:                                              ; preds = %352, %348
  %353 = phi %struct.TimeNamePair* [ %349, %348 ], [ %357, %352 ]
  %354 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load i64, i64* %354, align 8
  %356 = icmp slt i64 %351, %355
  %357 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %353, i64 1
  br i1 %356, label %358, label %352

358:                                              ; preds = %352, %358
  %359 = phi %struct.TimeNamePair* [ %360, %358 ], [ %350, %352 ]
  %360 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %359, i64 -1
  %361 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %360, i64 0, i32 0, i32 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = icmp slt i64 %351, %362
  br i1 %363, label %358, label %364

364:                                              ; preds = %358
  %365 = icmp ult %struct.TimeNamePair* %353, %360
  br i1 %365, label %366, label %29

366:                                              ; preds = %364
  %367 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %360, i64 0, i32 0, i32 0, i32 0
  %368 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %353, i64 0, i32 1
  %369 = bitcast i8** %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %struct.TimeNamePair* %353 to i8*
  %372 = bitcast %struct.TimeNamePair* %360 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %371, i8* align 8 %372, i64 16, i1 false) #18
  store i64 %355, i64* %367, align 8
  %373 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %359, i64 -1, i32 1
  %374 = bitcast i8** %373 to i64*
  store i64 %370, i64* %374, align 8
  br label %348

375:                                              ; preds = %321
  %376 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %323, i64 0, i32 0, i32 0, i32 0
  %377 = load i64, i64* %376, align 8
  %378 = icmp slt i64 %377, %317
  br i1 %378, label %379, label %321

379:                                              ; preds = %375
  %380 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %323, i64 0, i32 0, i32 0, i32 0
  %381 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 0, i32 1
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %struct.TimeNamePair* %30 to i8*
  %385 = bitcast %struct.TimeNamePair* %323 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %384, i8* align 8 %385, i64 16, i1 false) #18
  store i64 %319, i64* %380, align 8
  %386 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %322, i64 -1, i32 1
  %387 = bitcast i8** %386 to i64*
  store i64 %383, i64* %387, align 8
  %388 = add i32 %315, 1
  br label %389

389:                                              ; preds = %314, %379
  %390 = phi i32 [ %388, %379 ], [ %315, %314 ]
  %391 = phi %struct.TimeNamePair* [ %323, %379 ], [ %7, %314 ]
  %392 = ptrtoint %struct.TimeNamePair* %30 to i64
  %393 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %30, i64 1
  %394 = icmp ult %struct.TimeNamePair* %393, %391
  br i1 %394, label %395, label %428

395:                                              ; preds = %389, %416
  %396 = phi %struct.TimeNamePair* [ %427, %416 ], [ %233, %389 ]
  %397 = phi i32 [ %425, %416 ], [ %390, %389 ]
  %398 = phi %struct.TimeNamePair* [ %407, %416 ], [ %393, %389 ]
  %399 = phi %struct.TimeNamePair* [ %410, %416 ], [ %391, %389 ]
  %400 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %396, i64 0, i32 0, i32 0, i32 0
  %401 = load i64, i64* %400, align 8
  br label %402

402:                                              ; preds = %402, %395
  %403 = phi %struct.TimeNamePair* [ %398, %395 ], [ %407, %402 ]
  %404 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %403, i64 0, i32 0, i32 0, i32 0
  %405 = load i64, i64* %404, align 8
  %406 = icmp slt i64 %405, %401
  %407 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %403, i64 1
  br i1 %406, label %402, label %408

408:                                              ; preds = %402, %408
  %409 = phi %struct.TimeNamePair* [ %410, %408 ], [ %399, %402 ]
  %410 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %409, i64 -1
  %411 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %410, i64 0, i32 0, i32 0, i32 0
  %412 = load i64, i64* %411, align 8
  %413 = icmp slt i64 %412, %401
  br i1 %413, label %414, label %408

414:                                              ; preds = %408
  %415 = icmp ugt %struct.TimeNamePair* %403, %410
  br i1 %415, label %428, label %416

416:                                              ; preds = %414
  %417 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %410, i64 0, i32 0, i32 0, i32 0
  %418 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %403, i64 0, i32 1
  %419 = bitcast i8** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %struct.TimeNamePair* %403 to i8*
  %422 = bitcast %struct.TimeNamePair* %410 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %421, i8* align 8 %422, i64 16, i1 false) #18
  store i64 %405, i64* %417, align 8
  %423 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %409, i64 -1, i32 1
  %424 = bitcast i8** %423 to i64*
  store i64 %420, i64* %424, align 8
  %425 = add i32 %397, 1
  %426 = icmp eq %struct.TimeNamePair* %396, %403
  %427 = select i1 %426, %struct.TimeNamePair* %410, %struct.TimeNamePair* %396
  br label %395

428:                                              ; preds = %414, %389
  %429 = phi %struct.TimeNamePair* [ %233, %389 ], [ %396, %414 ]
  %430 = phi i32 [ %390, %389 ], [ %397, %414 ]
  %431 = phi %struct.TimeNamePair* [ %393, %389 ], [ %403, %414 ]
  %432 = icmp eq %struct.TimeNamePair* %431, %429
  br i1 %432, label %448, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %431, i64 0, i32 0, i32 0, i32 0
  %435 = load i64, i64* %434, align 8
  %436 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %429, i64 0, i32 0, i32 0, i32 0
  %437 = load i64, i64* %436, align 8
  %438 = icmp slt i64 %437, %435
  br i1 %438, label %439, label %448

439:                                              ; preds = %433
  %440 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %431, i64 0, i32 1
  %441 = bitcast i8** %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = bitcast %struct.TimeNamePair* %431 to i8*
  %444 = bitcast %struct.TimeNamePair* %429 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %443, i8* align 8 %444, i64 16, i1 false) #18
  store i64 %435, i64* %436, align 8
  %445 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %429, i64 0, i32 1
  %446 = bitcast i8** %445 to i64*
  store i64 %442, i64* %446, align 8
  %447 = add i32 %430, 1
  br label %448

448:                                              ; preds = %428, %439, %433
  %449 = phi i32 [ %447, %439 ], [ %430, %433 ], [ %430, %428 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %458

451:                                              ; preds = %448
  %452 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEbT0_S7_T_"(%struct.TimeNamePair* %30, %struct.TimeNamePair* %431)
  %453 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %431, i64 1
  %454 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEbT0_S7_T_"(%struct.TimeNamePair* %453, %struct.TimeNamePair* %4)
  br i1 %454, label %455, label %457

455:                                              ; preds = %451
  br i1 %452, label %469, label %456

456:                                              ; preds = %455, %467
  br label %3

457:                                              ; preds = %451
  br i1 %452, label %465, label %458

458:                                              ; preds = %457, %448
  %459 = ptrtoint %struct.TimeNamePair* %431 to i64
  %460 = sub i64 %459, %392
  %461 = sub i64 %26, %459
  %462 = icmp slt i64 %460, %461
  br i1 %462, label %463, label %467

463:                                              ; preds = %458
  tail call fastcc void @"_ZNSt3__16__sortIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEvT0_S7_T_"(%struct.TimeNamePair* %30, %struct.TimeNamePair* %431)
  %464 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %431, i64 1
  br label %465

465:                                              ; preds = %463, %457
  %466 = phi %struct.TimeNamePair* [ %453, %457 ], [ %464, %463 ]
  br label %27

467:                                              ; preds = %458
  %468 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %431, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEvT0_S7_T_"(%struct.TimeNamePair* %468, %struct.TimeNamePair* %4)
  br label %456

469:                                              ; preds = %455, %345, %29, %29, %329, %342, %225, %194, %142, %133, %124, %112, %101, %92, %86, %82, %72, %61, %60, %34, %41, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* nocapture, %struct.TimeNamePair* nocapture, %struct.TimeNamePair* nocapture, %struct.TimeNamePair* nocapture) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %8, %6
  %10 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %11, %8
  br i1 %9, label %31, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %50

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.TimeNamePair* %1 to i8*
  %19 = bitcast %struct.TimeNamePair* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false) #18
  store i64 %8, i64* %10, align 8
  %20 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %2, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = load i64, i64* %5, align 8
  %23 = load i64, i64* %7, align 8
  %24 = icmp slt i64 %23, %22
  br i1 %24, label %25, label %50

25:                                               ; preds = %14
  %26 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.TimeNamePair* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %18, i64 16, i1 false) #18
  store i64 %22, i64* %7, align 8
  store i64 %28, i64* %16, align 8
  %30 = load i64, i64* %10, align 8
  br label %50

31:                                               ; preds = %4
  %32 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %struct.TimeNamePair* %0 to i8*
  br i1 %12, label %36, label %40

36:                                               ; preds = %31
  %37 = bitcast %struct.TimeNamePair* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 16, i1 false) #18
  store i64 %6, i64* %10, align 8
  %38 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %2, i64 0, i32 1
  %39 = bitcast i8** %38 to i64*
  store i64 %34, i64* %39, align 8
  br label %50

40:                                               ; preds = %31
  %41 = bitcast %struct.TimeNamePair* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %41, i64 16, i1 false) #18
  store i64 %6, i64* %7, align 8
  %42 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 0, i32 1
  %43 = bitcast i8** %42 to i64*
  store i64 %34, i64* %43, align 8
  %44 = load i64, i64* %10, align 8
  %45 = icmp slt i64 %44, %6
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = bitcast %struct.TimeNamePair* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %47, i64 16, i1 false) #18
  store i64 %6, i64* %10, align 8
  %48 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %2, i64 0, i32 1
  %49 = bitcast i8** %48 to i64*
  store i64 %34, i64* %49, align 8
  br label %50

50:                                               ; preds = %13, %14, %25, %36, %40, %46
  %51 = phi i64 [ %6, %36 ], [ %11, %13 ], [ %30, %25 ], [ %8, %14 ], [ %6, %46 ], [ %44, %40 ]
  %52 = phi i32 [ 1, %36 ], [ 0, %13 ], [ 2, %25 ], [ 1, %14 ], [ 2, %46 ], [ 1, %40 ]
  %53 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %3, i64 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %51
  br i1 %55, label %56, label %83

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %2, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.TimeNamePair* %2 to i8*
  %61 = bitcast %struct.TimeNamePair* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #18
  store i64 %51, i64* %53, align 8
  %62 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %3, i64 0, i32 1
  %63 = bitcast i8** %62 to i64*
  store i64 %59, i64* %63, align 8
  %64 = add nuw nsw i32 %52, 1
  %65 = load i64, i64* %7, align 8
  %66 = load i64, i64* %10, align 8
  %67 = icmp slt i64 %66, %65
  br i1 %67, label %68, label %83

68:                                               ; preds = %56
  %69 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %struct.TimeNamePair* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %60, i64 16, i1 false) #18
  store i64 %65, i64* %10, align 8
  store i64 %71, i64* %58, align 8
  %73 = add nuw nsw i32 %52, 2
  %74 = load i64, i64* %5, align 8
  %75 = load i64, i64* %7, align 8
  %76 = icmp slt i64 %75, %74
  br i1 %76, label %77, label %83

77:                                               ; preds = %68
  %78 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %79 = bitcast i8** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %struct.TimeNamePair* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %72, i64 16, i1 false) #18
  store i64 %74, i64* %7, align 8
  store i64 %80, i64* %70, align 8
  %82 = add nuw nsw i32 %52, 3
  br label %83

83:                                               ; preds = %56, %77, %68, %50
  %84 = phi i32 [ %82, %77 ], [ %73, %68 ], [ %64, %56 ], [ %52, %50 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEbT0_S7_T_"(%struct.TimeNamePair*, %struct.TimeNamePair*) unnamed_addr #0 {
  %3 = ptrtoint %struct.TimeNamePair* %1 to i64
  %4 = ptrtoint %struct.TimeNamePair* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %120 [
    i64 0, label %209
    i64 1, label %209
    i64 2, label %7
    i64 3, label %22
    i64 4, label %69
    i64 5, label %74
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1
  %9 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %10
  br i1 %13, label %14, label %209

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.TimeNamePair* %0 to i8*
  %19 = bitcast %struct.TimeNamePair* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false) #18
  store i64 %10, i64* %11, align 8
  %20 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1, i32 1
  %21 = bitcast i8** %20 to i64*
  store i64 %17, i64* %21, align 8
  br label %209

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1
  %24 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1
  %25 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %23, i64 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %28, %26
  %30 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %24, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %31, %28
  br i1 %29, label %50, label %33

33:                                               ; preds = %22
  br i1 %32, label %34, label %209

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct.TimeNamePair* %23 to i8*
  %39 = bitcast %struct.TimeNamePair* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #18
  store i64 %28, i64* %30, align 8
  %40 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = load i64, i64* %25, align 8
  %43 = load i64, i64* %27, align 8
  %44 = icmp slt i64 %43, %42
  br i1 %44, label %45, label %209

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %struct.TimeNamePair* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %38, i64 16, i1 false) #18
  store i64 %42, i64* %27, align 8
  store i64 %48, i64* %36, align 8
  br label %209

50:                                               ; preds = %22
  %51 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %struct.TimeNamePair* %0 to i8*
  br i1 %32, label %55, label %59

55:                                               ; preds = %50
  %56 = bitcast %struct.TimeNamePair* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 16, i1 false) #18
  store i64 %26, i64* %30, align 8
  %57 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1, i32 1
  %58 = bitcast i8** %57 to i64*
  store i64 %53, i64* %58, align 8
  br label %209

59:                                               ; preds = %50
  %60 = bitcast %struct.TimeNamePair* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %60, i64 16, i1 false) #18
  store i64 %26, i64* %27, align 8
  %61 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1, i32 1
  %62 = bitcast i8** %61 to i64*
  store i64 %53, i64* %62, align 8
  %63 = load i64, i64* %30, align 8
  %64 = icmp slt i64 %63, %26
  br i1 %64, label %65, label %209

65:                                               ; preds = %59
  %66 = bitcast %struct.TimeNamePair* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %66, i64 16, i1 false) #18
  store i64 %26, i64* %30, align 8
  %67 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1, i32 1
  %68 = bitcast i8** %67 to i64*
  store i64 %53, i64* %68, align 8
  br label %209

69:                                               ; preds = %2
  %70 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1
  %71 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2
  %72 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1
  %73 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* %0, %struct.TimeNamePair* %70, %struct.TimeNamePair* %71, %struct.TimeNamePair* %72)
  br label %209

74:                                               ; preds = %2
  %75 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1
  %76 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2
  %77 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 3
  %78 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1
  %79 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2gl22NativeViewGLSurfaceEGL15TraceSwapEventsEmE3$_0PZNS2_15TraceSwapEventsEmE12TimeNamePairEEjT0_S7_S7_S7_T_"(%struct.TimeNamePair* %0, %struct.TimeNamePair* %75, %struct.TimeNamePair* %76, %struct.TimeNamePair* %77) #18
  %80 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %77, i64 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %78, i64 0, i32 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp slt i64 %83, %81
  br i1 %84, label %85, label %209

85:                                               ; preds = %74
  %86 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 3, i32 1
  %87 = bitcast i8** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %struct.TimeNamePair* %77 to i8*
  %90 = bitcast %struct.TimeNamePair* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #18
  store i64 %81, i64* %82, align 8
  %91 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %1, i64 -1, i32 1
  %92 = bitcast i8** %91 to i64*
  store i64 %88, i64* %92, align 8
  %93 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %76, i64 0, i32 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = load i64, i64* %80, align 8
  %96 = icmp slt i64 %95, %94
  br i1 %96, label %97, label %209

97:                                               ; preds = %85
  %98 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2, i32 1
  %99 = bitcast i8** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %struct.TimeNamePair* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %89, i64 16, i1 false) #18
  store i64 %94, i64* %80, align 8
  store i64 %100, i64* %87, align 8
  %102 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %75, i64 0, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %93, align 8
  %105 = icmp slt i64 %104, %103
  br i1 %105, label %106, label %209

106:                                              ; preds = %97
  %107 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1, i32 1
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.TimeNamePair* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %101, i64 16, i1 false) #18
  store i64 %103, i64* %93, align 8
  store i64 %109, i64* %99, align 8
  %111 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = load i64, i64* %102, align 8
  %114 = icmp slt i64 %113, %112
  br i1 %114, label %115, label %209

115:                                              ; preds = %106
  %116 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %struct.TimeNamePair* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %110, i64 16, i1 false) #18
  store i64 %112, i64* %102, align 8
  store i64 %118, i64* %108, align 8
  br label %209

120:                                              ; preds = %2
  %121 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2
  %122 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1
  %123 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %122, i64 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp slt i64 %126, %124
  %128 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %121, i64 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp slt i64 %129, %126
  br i1 %127, label %147, label %131

131:                                              ; preds = %120
  br i1 %130, label %132, label %165

132:                                              ; preds = %131
  %133 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1, i32 1
  %134 = bitcast i8** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %struct.TimeNamePair* %122 to i8*
  %137 = bitcast %struct.TimeNamePair* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #18
  store i64 %126, i64* %128, align 8
  %138 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2, i32 1
  %139 = bitcast i8** %138 to i64*
  store i64 %135, i64* %139, align 8
  %140 = load i64, i64* %125, align 8
  %141 = icmp slt i64 %140, %124
  br i1 %141, label %142, label %165

142:                                              ; preds = %132
  %143 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %144 = bitcast i8** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct.TimeNamePair* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %136, i64 16, i1 false) #18
  store i64 %124, i64* %125, align 8
  store i64 %145, i64* %134, align 8
  br label %165

147:                                              ; preds = %120
  %148 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 0, i32 1
  %149 = bitcast i8** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %struct.TimeNamePair* %0 to i8*
  br i1 %130, label %152, label %156

152:                                              ; preds = %147
  %153 = bitcast %struct.TimeNamePair* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %153, i64 16, i1 false) #18
  store i64 %124, i64* %128, align 8
  %154 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2, i32 1
  %155 = bitcast i8** %154 to i64*
  store i64 %150, i64* %155, align 8
  br label %165

156:                                              ; preds = %147
  %157 = bitcast %struct.TimeNamePair* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %157, i64 16, i1 false) #18
  store i64 %124, i64* %125, align 8
  %158 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 1, i32 1
  %159 = bitcast i8** %158 to i64*
  store i64 %150, i64* %159, align 8
  %160 = icmp slt i64 %129, %124
  br i1 %160, label %161, label %165

161:                                              ; preds = %156
  %162 = bitcast %struct.TimeNamePair* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %162, i64 16, i1 false) #18
  store i64 %124, i64* %128, align 8
  %163 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 2, i32 1
  %164 = bitcast i8** %163 to i64*
  store i64 %150, i64* %164, align 8
  br label %165

165:                                              ; preds = %131, %132, %142, %152, %156, %161
  %166 = phi i64 [ %129, %131 ], [ %126, %132 ], [ %126, %142 ], [ %124, %152 ], [ %129, %156 ], [ %124, %161 ]
  %167 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %0, i64 3
  %168 = icmp eq %struct.TimeNamePair* %167, %1
  br i1 %168, label %209, label %169

169:                                              ; preds = %165, %203
  %170 = phi i64 [ %205, %203 ], [ %166, %165 ]
  %171 = phi %struct.TimeNamePair* [ %201, %203 ], [ %167, %165 ]
  %172 = phi i32 [ %200, %203 ], [ 0, %165 ]
  %173 = phi %struct.TimeNamePair* [ %171, %203 ], [ %121, %165 ]
  %174 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 0, i32 0, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = icmp slt i64 %175, %170
  br i1 %176, label %177, label %199

177:                                              ; preds = %169
  %178 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 0, i32 1
  %179 = bitcast i8** %178 to i64*
  %180 = load i64, i64* %179, align 8
  br label %181

181:                                              ; preds = %187, %177
  %182 = phi %struct.TimeNamePair* [ %171, %177 ], [ %183, %187 ]
  %183 = phi %struct.TimeNamePair* [ %173, %177 ], [ %188, %187 ]
  %184 = bitcast %struct.TimeNamePair* %182 to i8*
  %185 = bitcast %struct.TimeNamePair* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 16, i1 false)
  %186 = icmp eq %struct.TimeNamePair* %183, %0
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %183, i64 -1
  %189 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = icmp slt i64 %175, %190
  br i1 %191, label %181, label %192

192:                                              ; preds = %181, %187
  %193 = phi %struct.TimeNamePair* [ %0, %181 ], [ %183, %187 ]
  %194 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %193, i64 0, i32 0, i32 0, i32 0
  store i64 %175, i64* %194, align 8
  %195 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %193, i64 0, i32 1
  %196 = bitcast i8** %195 to i64*
  store i64 %180, i64* %196, align 8
  %197 = add i32 %172, 1
  %198 = icmp eq i32 %197, 8
  br i1 %198, label %206, label %199

199:                                              ; preds = %192, %169
  %200 = phi i32 [ %197, %192 ], [ %172, %169 ]
  %201 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 1
  %202 = icmp eq %struct.TimeNamePair* %201, %1
  br i1 %202, label %209, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 0, i32 0, i32 0, i32 0
  %205 = load i64, i64* %204, align 8
  br label %169

206:                                              ; preds = %192
  %207 = getelementptr inbounds %struct.TimeNamePair, %struct.TimeNamePair* %171, i64 1
  %208 = icmp eq %struct.TimeNamePair* %207, %1
  br label %209

209:                                              ; preds = %199, %206, %165, %115, %106, %97, %85, %74, %65, %59, %55, %45, %34, %33, %7, %14, %2, %2, %69
  %210 = phi i1 [ true, %69 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %33 ], [ true, %34 ], [ true, %45 ], [ true, %55 ], [ true, %59 ], [ true, %65 ], [ true, %74 ], [ true, %85 ], [ true, %97 ], [ true, %106 ], [ true, %115 ], [ true, %165 ], [ %208, %206 ], [ true, %199 ]
  ret i1 %210
}

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2gl12_GLOBAL__N_130GetStringVectorFromCommandLineEPKN4base11CommandLineEPKc: argument 0"}
!5 = distinct !{!5, !"_ZN2gl12_GLOBAL__N_130GetStringVectorFromCommandLineEPKN4base11CommandLineEPKc"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2gl12_GLOBAL__N_130GetStringVectorFromCommandLineEPKN4base11CommandLineEPKc: argument 0"}
!8 = distinct !{!8, !"_ZN2gl12_GLOBAL__N_130GetStringVectorFromCommandLineEPKN4base11CommandLineEPKc"}
!9 = !{!"branch_weights", i32 1, i32 1048575}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!25 = !{!"branch_weights", i32 2000, i32 1}
!26 = !{!"branch_weights", i32 1, i32 2000}
