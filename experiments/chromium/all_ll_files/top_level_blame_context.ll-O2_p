; ModuleID = '../../content/renderer/top_level_blame_context.cc'
source_filename = "../../content/renderer/top_level_blame_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::TopLevelBlameContext" = type { %"class.base::trace_event::BlameContext" }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::trace_event::TracedValue" = type opaque

$_ZN7content20TopLevelBlameContextD0Ev = comdat any

$_ZTVN7content20TopLevelBlameContextE = comdat any

@_ZN7contentL29kTopLevelBlameContextCategoryE = internal constant [6 x i8] c"blink\00", align 1
@_ZN7contentL25kTopLevelBlameContextNameE = internal constant [18 x i8] c"FrameBlameContext\00", align 16
@_ZN7contentL25kTopLevelBlameContextTypeE = internal constant [9 x i8] c"TopLevel\00", align 1
@_ZN7contentL26kTopLevelBlameContextScopeE = internal constant [15 x i8] c"PlatformThread\00", align 1
@_ZTVN7content20TopLevelBlameContextE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContextD2Ev to i8*), i8* bitcast (void (%"class.content::TopLevelBlameContext"*)* @_ZN7content20TopLevelBlameContextD0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContext17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*)* @_ZN4base11trace_event12BlameContext18OnTraceLogDisabledEv to i8*), i8* bitcast (void (%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event12BlameContext11AsValueIntoEPNS0_11TracedValueE to i8*)] }, comdat, align 8

@_ZN7content20TopLevelBlameContextC1Ev = hidden unnamed_addr alias void (%"class.content::TopLevelBlameContext"*), void (%"class.content::TopLevelBlameContext"*)* @_ZN7content20TopLevelBlameContextC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20TopLevelBlameContextC2Ev(%"class.content::TopLevelBlameContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TopLevelBlameContext", %"class.content::TopLevelBlameContext"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #5
  %4 = sext i32 %3 to i64
  tail call void @_ZN4base11trace_event12BlameContextC2EPKcS3_S3_S3_lPKS1_(%"class.base::trace_event::BlameContext"* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN7contentL29kTopLevelBlameContextCategoryE, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN7contentL25kTopLevelBlameContextNameE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN7contentL25kTopLevelBlameContextTypeE, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN7contentL26kTopLevelBlameContextScopeE, i64 0, i64 0), i64 %4, %"class.base::trace_event::BlameContext"* null) #5
  %5 = getelementptr inbounds %"class.content::TopLevelBlameContext", %"class.content::TopLevelBlameContext"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content20TopLevelBlameContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event12BlameContextC2EPKcS3_S3_S3_lPKS1_(%"class.base::trace_event::BlameContext"*, i8*, i8*, i8*, i8*, i64, %"class.base::trace_event::BlameContext"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11trace_event12BlameContextD2Ev(%"class.base::trace_event::BlameContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content20TopLevelBlameContextD0Ev(%"class.content::TopLevelBlameContext"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.content::TopLevelBlameContext", %"class.content::TopLevelBlameContext"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event12BlameContextD2Ev(%"class.base::trace_event::BlameContext"* %2) #5
  %3 = bitcast %"class.content::TopLevelBlameContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

declare void @_ZN4base11trace_event12BlameContext17OnTraceLogEnabledEv(%"class.base::trace_event::BlameContext"*) unnamed_addr #1

declare void @_ZN4base11trace_event12BlameContext18OnTraceLogDisabledEv(%"class.base::trace_event::BlameContext"*) unnamed_addr #1

declare void @_ZN4base11trace_event12BlameContext11AsValueIntoEPNS0_11TracedValueE(%"class.base::trace_event::BlameContext"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
