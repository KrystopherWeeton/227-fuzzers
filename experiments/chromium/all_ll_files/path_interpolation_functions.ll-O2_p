; ModuleID = '../../third_party/blink/renderer/core/animation/path_interpolation_functions.cc'
source_filename = "../../third_party/blink/renderer/core/animation/path_interpolation_functions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::PathCoordinates" = type { double, double, double, double }
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector" }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { i32*, i32, i32 }
%"class.blink::InterpolatedSVGPathSource" = type { %"struct.blink::PathCoordinates", i32, %"class.blink::InterpolableList"*, %"class.WTF::Vector.1"* }
%"struct.blink::PathSegmentData" = type <{ i32, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, i8, [2 x i8] }>
%"class.blink::FloatPoint" = type { float, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.63 }
%union.anon.63 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.23", [4 x i8] }>
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.17", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector.9" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::SVGPathByteStreamSource" = type { i8*, i8* }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.std::__1::unique_ptr.41"*, i32, i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::UnderlyingPathSegTypesChecker"* }
%"class.blink::UnderlyingPathSegTypesChecker" = type <{ %"class.blink::InterpolationType::ConversionChecker", %"class.WTF::Vector.1", i32, [4 x i8] }>
%"class.blink::SVGPathNonInterpolableValue" = type <{ %"class.blink::NonInterpolableValue.base", [4 x i8], %"class.WTF::Vector.1", i32, [4 x i8] }>
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.23" }>
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::InterpolableNumber" = type { %"class.blink::InterpolableValue", double }
%"class.blink::SVGPathByteStreamBuilder" = type { %"class.blink::SVGPathConsumer", %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathConsumer" = type { i32 (...)** }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }

$_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink27SVGPathNonInterpolableValueD2Ev = comdat any

$_ZN5blink27SVGPathNonInterpolableValueD0Ev = comdat any

$_ZNK5blink27SVGPathNonInterpolableValue7GetTypeEv = comdat any

$_ZN5blink29UnderlyingPathSegTypesCheckerD2Ev = comdat any

$_ZN5blink29UnderlyingPathSegTypesCheckerD0Ev = comdat any

$_ZNK5blink29UnderlyingPathSegTypesChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGPathSegTypeEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29UnderlyingPathSegTypesCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZTVN5blink27SVGPathNonInterpolableValueE = comdat any

$_ZTVN5blink29UnderlyingPathSegTypesCheckerE = comdat any

@_ZN5blink27SVGPathNonInterpolableValue12static_type_E = hidden global i8* bitcast (i8** @_ZN5blink27SVGPathNonInterpolableValue12static_type_E to i8*), align 8
@__const._ZN5blink26PathInterpolationFunctions12AppliedValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueE.source = private unnamed_addr constant { %"struct.blink::PathCoordinates", i32, [4 x i8], %"class.blink::InterpolableList"*, %"class.WTF::Vector.1"* } { %"struct.blink::PathCoordinates" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::InterpolableList"* inttoptr (i64 -6148914691236517206 to %"class.blink::InterpolableList"*), %"class.WTF::Vector.1"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.1"*) }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink27SVGPathNonInterpolableValueE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPathNonInterpolableValue"*)* @_ZN5blink27SVGPathNonInterpolableValueD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGPathNonInterpolableValue"*)* @_ZN5blink27SVGPathNonInterpolableValueD0Ev to i8*), i8* bitcast (i8* (%"class.blink::SVGPathNonInterpolableValue"*)* @_ZNK5blink27SVGPathNonInterpolableValue7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink29UnderlyingPathSegTypesCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UnderlyingPathSegTypesChecker"*)* @_ZN5blink29UnderlyingPathSegTypesCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::UnderlyingPathSegTypesChecker"*)* @_ZN5blink29UnderlyingPathSegTypesCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::UnderlyingPathSegTypesChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink29UnderlyingPathSegTypesChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGPathSegTypeEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPathSegType]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink25InterpolatedSVGPathSource11HasMoreDataEv(%"class.blink::InterpolatedSVGPathSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %0, i64 0, i32 2
  %5 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %3, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InterpolatedSVGPathSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* noalias sret, %"class.blink::InterpolatedSVGPathSource"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %0, i64 0, i32 0
  store i32 -1431655766, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %0, i64 0, i32 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 -1, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %1, i64 0, i32 2
  %8 = bitcast i8* %5 to i32*
  store i32 -1431655766, i32* %8, align 4
  %9 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %9, i64 0, i32 1
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 %11) #8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %1, i64 0, i32 3
  %17 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %16, align 8
  %18 = load i32, i32* %10, align 8
  %19 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %17, i32 %18)
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %1, i64 0, i32 0
  tail call void @_ZN5blink32SVGPathSegInterpolationFunctions26ConsumeInterpolablePathSegERKNS_17InterpolableValueENS_14SVGPathSegTypeERNS_15PathCoordinatesE(%"struct.blink::PathSegmentData"* sret %0, %"class.blink::InterpolableValue"* dereferenceable(8) %15, i32 %20, %"struct.blink::PathCoordinates"* dereferenceable(32) %21) #8
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, 1
  store i32 %23, i32* %10, align 8
  ret void
}

declare void @_ZN5blink32SVGPathSegInterpolationFunctions26ConsumeInterpolablePathSegERKNS_17InterpolableValueENS_14SVGPathSegTypeERNS_15PathCoordinatesE(%"struct.blink::PathSegmentData"* sret, %"class.blink::InterpolableValue"* dereferenceable(8), i32, %"struct.blink::PathCoordinates"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PathInterpolationFunctions12ConvertValueEPKNS_9StylePathENS0_20CoordinateConversionE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::StylePath"* readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %5 = alloca %"struct.blink::PathCoordinates", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::Vector.1", align 8
  %8 = alloca %"struct.blink::PathSegmentData", align 4
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca i32, align 4
  %11 = icmp eq %"class.blink::StylePath"* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #8
  br label %239

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::SVGPathByteStreamSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %4, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::SVGPathByteStreamSource"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %18, align 8
  %21 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::SVGPathByteStream"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::SVGPathByteStreamSource"* %4 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load i8*, i8** %21, align 8
  %26 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  store i8* %29, i8** %17, align 8
  %30 = bitcast %"struct.blink::PathCoordinates"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false) #8
  %31 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #8
  %35 = bitcast %"class.WTF::Vector.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #8
  %39 = inttoptr i64 %23 to i8*
  %40 = icmp ugt i8* %29, %39
  br i1 %40, label %41, label %98

41:                                               ; preds = %14
  %42 = bitcast %"struct.blink::PathSegmentData"* %8 to i8*
  %43 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %8, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %8, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %8, i64 0, i32 4
  %46 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast i32* %10 to i8*
  %49 = icmp eq i32 %2, 1
  %50 = bitcast float* %44 to i8*
  %51 = bitcast i8* %45 to i32*
  br label %52

52:                                               ; preds = %41, %93
  %53 = phi i32 [ 0, %41 ], [ %94, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  store i32 -1431655766, i32* %43, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 -1, i64 24, i1 false)
  store i32 -1431655766, i32* %51, align 4
  call void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* nonnull sret %8, %"class.blink::SVGPathByteStreamSource"* nonnull %4) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  %54 = call %"class.blink::InterpolableValue"* @_ZN5blink32SVGPathSegInterpolationFunctions14ConsumePathSegERKNS_15PathSegmentDataERNS_15PathCoordinatesE(%"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %8, %"struct.blink::PathCoordinates"* nonnull dereferenceable(32) %5) #8
  store %"class.blink::InterpolableValue"* %54, %"class.blink::InterpolableValue"** %47, align 8
  %55 = load i32, i32* %34, align 4
  %56 = load i32, i32* %33, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %66, label %58, !prof !2

58:                                               ; preds = %52
  %59 = ptrtoint %"class.blink::InterpolableValue"* %54 to i64
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %61 = zext i32 %55 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %61
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %47, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  store i64 %59, i64* %63, align 8
  %64 = load i32, i32* %34, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %34, align 4
  br label %67

66:                                               ; preds = %52
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* nonnull %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #8
  br label %67

67:                                               ; preds = %58, %66
  %68 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %47, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %47, align 8
  %69 = icmp eq %"class.blink::InterpolableValue"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.blink::InterpolableValue"* %68 to void (%"class.blink::InterpolableValue"*)***
  %72 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %72, i64 1
  %74 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %73, align 8
  call void %74(%"class.blink::InterpolableValue"* nonnull %68) #8
  br label %75

75:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #8
  store i32 -1431655766, i32* %10, align 4
  %76 = load i32, i32* %43, align 4
  br i1 %49, label %77, label %81

77:                                               ; preds = %75
  %78 = icmp sgt i32 %76, 1
  %79 = and i32 %76, -2
  %80 = select i1 %78, i32 %79, i32 %76
  br label %81

81:                                               ; preds = %77, %75
  %82 = phi i32 [ %80, %77 ], [ %76, %75 ]
  store i32 %82, i32* %10, align 4
  %83 = load i32, i32* %38, align 4
  %84 = load i32, i32* %37, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %92, label %86, !prof !2

86:                                               ; preds = %81
  %87 = load i32*, i32** %36, align 8
  %88 = zext i32 %83 to i64
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  store i32 %82, i32* %89, align 4
  %90 = load i32, i32* %38, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %38, align 4
  br label %93

92:                                               ; preds = %81
  call void @_ZN3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1"* nonnull %7, i32* nonnull dereferenceable(4) %10) #8
  br label %93

93:                                               ; preds = %86, %92
  %94 = add i32 %53, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %95 = load i8*, i8** %16, align 8
  %96 = load i8*, i8** %17, align 8
  %97 = icmp ult i8* %95, %96
  br i1 %97, label %52, label %98

98:                                               ; preds = %93, %14
  %99 = phi i32 [ 0, %14 ], [ %94, %93 ]
  %100 = call noalias i8* @malloc(i64 24) #8
  %101 = bitcast i8* %100 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 8
  %103 = bitcast i8* %102 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to i32*
  store i32 0, i32* %105, align 8
  %106 = icmp eq i32 %99, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %98
  %108 = zext i32 %99 to i64
  %109 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %108) #8
  %110 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %109, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %111 = ptrtoint i8* %110 to i64
  %112 = bitcast i8* %102 to i64*
  store atomic i64 %111, i64* %112 monotonic, align 8
  %113 = lshr i64 %109, 3
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %105, align 8
  %115 = shl nuw nsw i64 %108, 3
  br label %116

116:                                              ; preds = %98, %107
  %117 = phi i64 [ %115, %107 ], [ 0, %98 ]
  %118 = phi i8* [ %110, %107 ], [ null, %98 ]
  %119 = getelementptr inbounds i8, i8* %100, i64 20
  %120 = bitcast i8* %119 to i32*
  store i32 %99, i32* %120, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 %117, i1 false) #8
  %121 = ptrtoint i8* %100 to i64
  %122 = load i32, i32* %34, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %116
  %125 = bitcast i8* %102 to %"class.WTF::Vector"*
  br label %219

126:                                              ; preds = %235, %116
  %127 = call noalias i8* @malloc(i64 24) #8
  %128 = bitcast i8* %127 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 8
  %130 = getelementptr inbounds i8, i8* %127, i64 16
  %131 = bitcast i8* %130 to i32*
  %132 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 2) #8
  %133 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %132, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %134 = ptrtoint i8* %133 to i64
  %135 = bitcast i8* %129 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = lshr i64 %132, 3
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %131, align 8
  %138 = getelementptr inbounds i8, i8* %127, i64 20
  %139 = bitcast i8* %138 to i32*
  store i32 2, i32* %139, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #8
  %140 = ptrtoint i8* %127 to i64
  %141 = bitcast i8* %129 to %"class.WTF::Vector"*
  %142 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %141, i32 0) #8
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %143, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  store i64 %121, i64* %145, align 8
  %146 = icmp eq %"class.blink::InterpolableValue"* %144, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %126
  %148 = bitcast %"class.blink::InterpolableValue"* %144 to void (%"class.blink::InterpolableValue"*)***
  %149 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %149, i64 1
  %151 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %150, align 8
  call void %151(%"class.blink::InterpolableValue"* nonnull %144) #8
  br label %152

152:                                              ; preds = %126, %147
  %153 = call noalias i8* @malloc(i64 16) #8
  %154 = bitcast i8* %153 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = bitcast i8* %155 to double*
  store double 0.000000e+00, double* %156, align 8
  %157 = ptrtoint i8* %153 to i64
  %158 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %141, i32 1) #8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %159, align 8
  %161 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  store i64 %157, i64* %161, align 8
  %162 = icmp eq %"class.blink::InterpolableValue"* %160, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %152
  %164 = bitcast %"class.blink::InterpolableValue"* %160 to void (%"class.blink::InterpolableValue"*)***
  %165 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %165, i64 1
  %167 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %166, align 8
  call void %167(%"class.blink::InterpolableValue"* nonnull %160) #8
  br label %168

168:                                              ; preds = %152, %163
  %169 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %1, i64 0, i32 4
  %170 = load i32, i32* %169, align 4
  %171 = call noalias i8* @malloc(i64 40) #8
  %172 = getelementptr inbounds i8, i8* %171, i64 8
  %173 = bitcast i8* %172 to i32*
  store i32 1, i32* %173, align 4
  %174 = bitcast i8* %171 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27SVGPathNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  %175 = getelementptr inbounds i8, i8* %171, i64 16
  %176 = bitcast i8* %175 to i64*
  store i64 0, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %171, i64 32
  %178 = bitcast i8* %177 to i32*
  store i32 %170, i32* %178, align 8
  %179 = bitcast %"class.WTF::Vector.1"* %7 to i64*
  %180 = load i64, i64* %179, align 8
  store atomic i64 0, i64* %179 monotonic, align 8
  store atomic i64 %180, i64* %176 monotonic, align 8
  %181 = getelementptr inbounds i8, i8* %171, i64 24
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %37, align 8
  store i32 %183, i32* %182, align 4
  store i32 0, i32* %37, align 8
  %184 = getelementptr inbounds i8, i8* %171, i64 28
  %185 = bitcast i8* %184 to i32*
  %186 = load i32, i32* %38, align 4
  store i32 %186, i32* %185, align 4
  %187 = ptrtoint i8* %171 to i64
  %188 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %140, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %190 = bitcast %class.scoped_refptr* %189 to i64*
  store i64 %187, i64* %190, align 8
  %191 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  %192 = icmp eq %"class.std::__1::unique_ptr"* %191, null
  br i1 %192, label %218, label %193, !prof !3

193:                                              ; preds = %168
  %194 = bitcast %"class.std::__1::unique_ptr"* %191 to i8*
  %195 = load i32, i32* %34, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %216, label %197, !prof !2

197:                                              ; preds = %193
  %198 = zext i32 %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 %198
  br label %200

200:                                              ; preds = %210, %197
  %201 = phi %"class.std::__1::unique_ptr"* [ %211, %210 ], [ %191, %197 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %202, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %202, align 8
  %204 = icmp eq %"class.blink::InterpolableValue"* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %200
  %206 = bitcast %"class.blink::InterpolableValue"* %203 to void (%"class.blink::InterpolableValue"*)***
  %207 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %207, i64 1
  %209 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %208, align 8
  call void %209(%"class.blink::InterpolableValue"* nonnull %203) #8
  br label %210

210:                                              ; preds = %205, %200
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 1
  %212 = icmp eq %"class.std::__1::unique_ptr"* %211, %199
  br i1 %212, label %213, label %200

213:                                              ; preds = %210
  store i32 0, i32* %34, align 4
  %214 = bitcast %"class.WTF::Vector"* %6 to i8**
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %213, %193
  %217 = phi i8* [ %215, %213 ], [ %194, %193 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %217) #8
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %32, align 8
  br label %218

218:                                              ; preds = %168, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  br label %239

219:                                              ; preds = %124, %235
  %220 = phi i32 [ 0, %124 ], [ %236, %235 ]
  %221 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %6, i32 %220) #8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 0, i32 0, i32 0, i32 0
  %223 = bitcast %"class.std::__1::unique_ptr"* %221 to i64*
  %224 = load i64, i64* %223, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %222, align 8
  %225 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %125, i32 %220) #8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %225, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %226, align 8
  %228 = bitcast %"class.std::__1::unique_ptr"* %225 to i64*
  store i64 %224, i64* %228, align 8
  %229 = icmp eq %"class.blink::InterpolableValue"* %227, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %219
  %231 = bitcast %"class.blink::InterpolableValue"* %227 to void (%"class.blink::InterpolableValue"*)***
  %232 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %232, i64 1
  %234 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %233, align 8
  call void %234(%"class.blink::InterpolableValue"* nonnull %227) #8
  br label %235

235:                                              ; preds = %219, %230
  %236 = add nuw i32 %220, 1
  %237 = load i32, i32* %34, align 4
  %238 = icmp ult i32 %236, %237
  br i1 %238, label %219, label %126

239:                                              ; preds = %218, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* sret, %"class.blink::SVGPathByteStreamSource"*) local_unnamed_addr #2

declare %"class.blink::InterpolableValue"* @_ZN5blink32SVGPathSegInterpolationFunctions14ConsumePathSegERKNS_15PathSegmentDataERNS_15PathCoordinatesE(%"struct.blink::PathSegmentData"* dereferenceable(32), %"struct.blink::PathCoordinates"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PathInterpolationFunctions19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.38"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.44", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.44"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = tail call noalias i8* @malloc(i64 40) #8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %1, i64 0, i32 1, i32 0
  %8 = bitcast %"class.blink::NonInterpolableValue"** %7 to %"class.blink::SVGPathNonInterpolableValue"**
  %9 = load %"class.blink::SVGPathNonInterpolableValue"*, %"class.blink::SVGPathNonInterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i8* %6 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29UnderlyingPathSegTypesCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 16
  %16 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %9, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast i8* %15 to i32**
  store i32* null, i32** %18, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 24
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %3
  %23 = zext i32 %17 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGPathSegTypeEEEmm(i64 %23) #8
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGPathSegTypeEEEPKcv, i64 0, i64 0)) #8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast i8* %15 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = lshr i64 %24, 2
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %20, align 8
  %30 = icmp ne i8* %25, null
  br label %31

31:                                               ; preds = %22, %3
  %32 = phi i8* [ null, %3 ], [ %25, %22 ]
  %33 = phi i1 [ false, %3 ], [ %30, %22 ]
  %34 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i8, i8* %6, i64 28
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp ne i32* %39, null
  %41 = and i1 %33, %40
  br i1 %41, label %42, label %46, !prof !3

42:                                               ; preds = %31
  %43 = zext i32 %35 to i64
  %44 = bitcast i32* %39 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #8
  br label %46

46:                                               ; preds = %31, %42
  %47 = getelementptr inbounds i8, i8* %6, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %11, i32* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.44"* %4 to i8**
  store i8* %6, i8** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %2, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %2, i64 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %65, label %56, !prof !2

56:                                               ; preds = %46
  %57 = ptrtoint i8* %6 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %2, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %58, align 8
  %60 = zext i32 %52 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 %60
  store %"class.blink::UnderlyingPathSegTypesChecker"* null, %"class.blink::UnderlyingPathSegTypesChecker"** %49, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.41"* %61 to i64*
  store i64 %57, i64* %62, align 8
  %63 = load i32, i32* %51, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %51, align 4
  br label %66

65:                                               ; preds = %46
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29UnderlyingPathSegTypesCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.38"* %2, %"class.std::__1::unique_ptr.44"* nonnull dereferenceable(8) %4) #8
  br label %66

66:                                               ; preds = %56, %65
  %67 = load %"class.blink::UnderlyingPathSegTypesChecker"*, %"class.blink::UnderlyingPathSegTypesChecker"** %49, align 8
  store %"class.blink::UnderlyingPathSegTypesChecker"* null, %"class.blink::UnderlyingPathSegTypesChecker"** %49, align 8
  %68 = icmp eq %"class.blink::UnderlyingPathSegTypesChecker"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::UnderlyingPathSegTypesChecker"* %67 to void (%"class.blink::UnderlyingPathSegTypesChecker"*)***
  %71 = load void (%"class.blink::UnderlyingPathSegTypesChecker"*)**, void (%"class.blink::UnderlyingPathSegTypesChecker"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::UnderlyingPathSegTypesChecker"*)*, void (%"class.blink::UnderlyingPathSegTypesChecker"*)** %71, i64 1
  %73 = load void (%"class.blink::UnderlyingPathSegTypesChecker"*)*, void (%"class.blink::UnderlyingPathSegTypesChecker"*)** %72, align 8
  call void %73(%"class.blink::UnderlyingPathSegTypesChecker"* nonnull %67) #8
  br label %74

74:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %75 = call noalias i8* @malloc(i64 24) #8
  %76 = bitcast i8* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 8
  %78 = getelementptr inbounds i8, i8* %75, i64 16
  %79 = bitcast i8* %78 to i32*
  %80 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 2) #8
  %81 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %80, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %82 = ptrtoint i8* %81 to i64
  %83 = bitcast i8* %77 to i64*
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = lshr i64 %80, 3
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %79, align 8
  %86 = getelementptr inbounds i8, i8* %75, i64 20
  %87 = bitcast i8* %86 to i32*
  store i32 2, i32* %87, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #8
  %88 = ptrtoint i8* %75 to i64
  %89 = bitcast %"struct.blink::InterpolationValue"* %1 to %"class.blink::InterpolableList"**
  %90 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %90, i64 0, i32 1
  %92 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %91, i32 0) #8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %93, align 8
  %95 = bitcast %"class.blink::InterpolableValue"* %94 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %96 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %96, i64 17
  %98 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %97, align 8
  %99 = call %"class.blink::InterpolableValue"* %98(%"class.blink::InterpolableValue"* %94) #8
  %100 = ptrtoint %"class.blink::InterpolableValue"* %99 to i64
  %101 = bitcast i8* %77 to %"class.WTF::Vector"*
  %102 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %101, i32 0) #8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr"* %102 to i64*
  store i64 %100, i64* %105, align 8
  %106 = icmp eq %"class.blink::InterpolableValue"* %104, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %74
  %108 = bitcast %"class.blink::InterpolableValue"* %104 to void (%"class.blink::InterpolableValue"*)***
  %109 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %109, i64 1
  %111 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %110, align 8
  call void %111(%"class.blink::InterpolableValue"* nonnull %104) #8
  br label %112

112:                                              ; preds = %74, %107
  %113 = call noalias i8* @malloc(i64 16) #8
  %114 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds i8, i8* %113, i64 8
  %116 = bitcast i8* %115 to double*
  store double 1.000000e+00, double* %116, align 8
  %117 = ptrtoint i8* %113 to i64
  %118 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %101, i32 1) #8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %119, align 8
  %121 = bitcast %"class.std::__1::unique_ptr"* %118 to i64*
  store i64 %117, i64* %121, align 8
  %122 = icmp eq %"class.blink::InterpolableValue"* %120, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %112
  %124 = bitcast %"class.blink::InterpolableValue"* %120 to void (%"class.blink::InterpolableValue"*)***
  %125 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %125, i64 1
  %127 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %126, align 8
  call void %127(%"class.blink::InterpolableValue"* nonnull %120) #8
  br label %128

128:                                              ; preds = %123, %112
  %129 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %130 = icmp eq %"class.blink::NonInterpolableValue"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %129, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %132) #8
  br label %133

133:                                              ; preds = %131, %128
  %134 = ptrtoint %"class.blink::NonInterpolableValue"* %129 to i64
  %135 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %88, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %137 = bitcast %class.scoped_refptr* %136 to i64*
  store i64 %134, i64* %137, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PathInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %1, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::NonInterpolableValue"** %4 to %"class.blink::SVGPathNonInterpolableValue"**
  %6 = load %"class.blink::SVGPathNonInterpolableValue"*, %"class.blink::SVGPathNonInterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr* %7 to %"class.blink::SVGPathNonInterpolableValue"**
  %10 = load %"class.blink::SVGPathNonInterpolableValue"*, %"class.blink::SVGPathNonInterpolableValue"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %6, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %10, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #8
  br label %57

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %6, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %10, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %10, i64 0, i32 2, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %22, %26
  br i1 %27, label %31, label %45

28:                                               ; preds = %31
  %29 = load i32, i32* %21, align 4
  %30 = icmp ult i32 %44, %29
  br i1 %30, label %31, label %47

31:                                               ; preds = %24, %28
  %32 = phi i32 [ %44, %28 ], [ 0, %24 ]
  %33 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %19, i32 %32) #8
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 1
  %36 = and i32 %34, -2
  %37 = select i1 %35, i32 %36, i32 %34
  %38 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %20, i32 %32) #8
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 1
  %41 = and i32 %39, -2
  %42 = select i1 %40, i32 %41, i32 %39
  %43 = icmp eq i32 %37, %42
  %44 = add nuw i32 %32, 1
  br i1 %43, label %28, label %45

45:                                               ; preds = %31, %24, %18
  %46 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #8
  br label %57

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"struct.blink::InterpolationValue"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %48, align 8
  %51 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %51, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %8, align 8
  %54 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %56 = bitcast %"class.std::__1::unique_ptr"* %55 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %56, align 8
  br label %57

57:                                               ; preds = %45, %47, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PathInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %3 to %"class.blink::InterpolableList"**
  %6 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %6, i64 0, i32 1
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 1) #8
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to %"class.blink::InterpolableNumber"**
  %10 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %10, i64 0, i32 1
  %12 = load double, double* %11, align 8
  %13 = fcmp oeq double %12, 0.000000e+00
  br i1 %13, label %14, label %15

14:                                               ; preds = %4
  tail call void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* %0, %"class.blink::InterpolationType"* dereferenceable(32) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %0) #8
  %18 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %18, align 8
  %20 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %16, align 8
  %21 = bitcast %"class.blink::InterpolableValue"* %19 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %22 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %22, i64 14
  %24 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %23, align 8
  tail call void %24(%"class.blink::InterpolableValue"* %19, double %12, %"class.blink::InterpolableValue"* dereferenceable(8) %20) #8
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %26 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %27 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %0) #8
  %28 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %27, i64 0, i32 1
  %29 = icmp eq %"class.blink::NonInterpolableValue"* %26, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %26, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  br label %32

32:                                               ; preds = %30, %15
  %33 = ptrtoint %"class.blink::NonInterpolableValue"* %26 to i64
  %34 = bitcast %class.scoped_refptr* %28 to i64*
  %35 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %36 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %35, align 8
  store i64 %33, i64* %34, align 8
  %37 = icmp eq %"class.blink::NonInterpolableValue"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %39, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #8
  %41 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %39, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %39, i64 -2
  %46 = bitcast %"class.base::RefCounted.24"* %45 to %"class.blink::NonInterpolableValue"*
  %47 = bitcast %"class.base::RefCounted.24"* %45 to void (%"class.blink::NonInterpolableValue"*)***
  %48 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %48, i64 1
  %50 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %49, align 8
  tail call void %50(%"class.blink::NonInterpolableValue"* nonnull %46) #8
  br label %51

51:                                               ; preds = %44, %38, %32, %14
  ret void
}

declare void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StylePath"* @_ZN5blink26PathInterpolationFunctions12AppliedValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueE(%"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.blink::PathSegmentData", align 4
  %4 = alloca %"class.blink::InterpolatedSVGPathSource", align 8
  %5 = alloca %"class.blink::SVGPathByteStreamBuilder", align 8
  %6 = tail call noalias i8* @malloc(i64 16) #8
  %7 = bitcast i8* %6 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  %8 = bitcast %"class.blink::InterpolatedSVGPathSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"struct.blink::PathCoordinates", i32, [4 x i8], %"class.blink::InterpolableList"*, %"class.WTF::Vector.1"* }* @__const._ZN5blink26PathInterpolationFunctions12AppliedValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueE.source to i8*), i64 56, i1 false)
  %9 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %0, i64 1
  %10 = bitcast %"class.blink::InterpolableValue"* %9 to %"class.WTF::Vector"*
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 0) #8
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 1
  %15 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 36, i1 false) #8
  %16 = bitcast %"class.blink::InterpolableList"** %15 to i64*
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %4, i64 0, i32 3
  %18 = bitcast %"class.WTF::Vector.1"** %17 to %"class.blink::NonInterpolableValue"**
  store %"class.blink::NonInterpolableValue"* %14, %"class.blink::NonInterpolableValue"** %18, align 8
  %19 = bitcast %"class.blink::SVGPathByteStreamBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = bitcast %"class.blink::SVGPathByteStreamBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"* nonnull %5, %"class.blink::SVGPathByteStream"* dereferenceable(16) %7) #8
  %21 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %4, i64 0, i32 1
  %22 = inttoptr i64 %13 to %"class.blink::InterpolableList"*
  %23 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %2
  %27 = bitcast %"struct.blink::PathSegmentData"* %3 to i8*
  %28 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 4
  %31 = bitcast float* %29 to i8*
  %32 = bitcast i8* %30 to i32*
  %33 = getelementptr inbounds %"class.blink::InterpolatedSVGPathSource", %"class.blink::InterpolatedSVGPathSource"* %4, i64 0, i32 0
  br label %34

34:                                               ; preds = %49, %26
  %35 = phi %"class.blink::InterpolableList"* [ %22, %26 ], [ %51, %49 ]
  %36 = phi i32 [ 0, %26 ], [ %50, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #8
  store i32 -1431655766, i32* %28, align 4, !alias.scope !4
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 -1, i64 24, i1 false) #8, !alias.scope !4
  store i32 -1431655766, i32* %32, align 4, !alias.scope !4
  %37 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %35, i64 0, i32 1
  %38 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %37, i32 %36) #8, !noalias !4
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %39, align 8, !noalias !4
  %41 = load %"class.WTF::Vector.1"*, %"class.WTF::Vector.1"** %17, align 8, !noalias !4
  %42 = load i32, i32* %21, align 8, !noalias !4
  %43 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1"* %41, i32 %42) #8, !noalias !4
  %44 = load i32, i32* %43, align 4, !noalias !4
  call void @_ZN5blink32SVGPathSegInterpolationFunctions26ConsumeInterpolablePathSegERKNS_17InterpolableValueENS_14SVGPathSegTypeERNS_15PathCoordinatesE(%"struct.blink::PathSegmentData"* nonnull sret %3, %"class.blink::InterpolableValue"* dereferenceable(8) %40, i32 %44, %"struct.blink::PathCoordinates"* nonnull dereferenceable(32) %33) #8
  %45 = load i32, i32* %21, align 8, !noalias !4
  %46 = add i32 %45, 1
  store i32 %46, i32* %21, align 8, !noalias !4
  %47 = load i32, i32* %28, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %34
  call void @_ZN5blink24SVGPathByteStreamBuilder11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathByteStreamBuilder"* nonnull %5, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8
  %50 = load i32, i32* %21, align 8
  %51 = load %"class.blink::InterpolableList"*, %"class.blink::InterpolableList"** %15, align 8
  %52 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %51, i64 0, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp ult i32 %50, %53
  br i1 %54, label %34, label %56

55:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8
  br label %56

56:                                               ; preds = %49, %2, %55
  %57 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 2
  %58 = bitcast %"class.blink::NonInterpolableValue"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = call %"class.blink::StylePath"* @_ZN5blink9StylePath6CreateENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE(%"class.blink::SVGPathByteStream"* %7, i32 %59) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #8
  ret %"class.blink::StylePath"* %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"*, %"class.blink::SVGPathByteStream"* dereferenceable(16)) unnamed_addr #2

declare %"class.blink::StylePath"* @_ZN5blink9StylePath6CreateENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE(%"class.blink::SVGPathByteStream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27SVGPathNonInterpolableValueD2Ev(%"class.blink::SVGPathNonInterpolableValue"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27SVGPathNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  store i32* null, i32** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27SVGPathNonInterpolableValueD0Ev(%"class.blink::SVGPathNonInterpolableValue"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27SVGPathNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  br label %13

13:                                               ; preds = %1, %12
  %14 = bitcast %"class.blink::SVGPathNonInterpolableValue"* %0 to i8*
  tail call void @free(i8* %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink27SVGPathNonInterpolableValue7GetTypeEv(%"class.blink::SVGPathNonInterpolableValue"*) unnamed_addr #1 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink27SVGPathNonInterpolableValue12static_type_E, align 8
  ret i8* %2
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29UnderlyingPathSegTypesCheckerD2Ev(%"class.blink::UnderlyingPathSegTypesChecker"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29UnderlyingPathSegTypesCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  store i32* null, i32** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29UnderlyingPathSegTypesCheckerD0Ev(%"class.blink::UnderlyingPathSegTypesChecker"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29UnderlyingPathSegTypesCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  br label %13

13:                                               ; preds = %1, %12
  %14 = bitcast %"class.blink::UnderlyingPathSegTypesChecker"* %0 to i8*
  tail call void @free(i8* %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink29UnderlyingPathSegTypesChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::UnderlyingPathSegTypesChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %6 = bitcast %"class.blink::NonInterpolableValue"** %5 to %"class.blink::SVGPathNonInterpolableValue"**
  %7 = load %"class.blink::SVGPathNonInterpolableValue"*, %"class.blink::SVGPathNonInterpolableValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %7, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %7, i64 0, i32 2, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %31

14:                                               ; preds = %3
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.WTF::Vector.1"* %4 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.WTF::Vector.1"* %8 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = zext i32 %10 to i64
  %22 = shl nuw nsw i64 %21, 2
  %23 = tail call i32 @bcmp(i8* %18, i8* %20, i64 %22) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %14, %16
  %26 = getelementptr inbounds %"class.blink::UnderlyingPathSegTypesChecker", %"class.blink::UnderlyingPathSegTypesChecker"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.blink::SVGPathNonInterpolableValue", %"class.blink::SVGPathNonInterpolableValue"* %7, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br label %31

31:                                               ; preds = %3, %25, %16
  %32 = phi i1 [ false, %16 ], [ %30, %25 ], [ false, %3 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGPathSegTypeEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SVGPathSegTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGPathSegTypeEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGPathSegTypeEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGPathSegTypeEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGPathSegTypeEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29UnderlyingPathSegTypesCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.38"*, %"class.std::__1::unique_ptr.44"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.41"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.38"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.41"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.41"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector.38"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector.38"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.41"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.41"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.44"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::UnderlyingPathSegTypesChecker"* null, %"class.blink::UnderlyingPathSegTypesChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.41"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink24SVGPathByteStreamBuilder11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathByteStreamBuilder"*, %"struct.blink::PathSegmentData"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink25InterpolatedSVGPathSource12ParseSegmentEv: argument 0"}
!6 = distinct !{!6, !"_ZN5blink25InterpolatedSVGPathSource12ParseSegmentEv"}
