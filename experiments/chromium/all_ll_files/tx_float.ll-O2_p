; ModuleID = '../../third_party/ffmpeg/libavutil/tx_float.c'
source_filename = "../../third_party/ffmpeg/libavutil/tx_float.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVComplexFloat = type { float, float }
%struct.CosTabsInitOnce = type { void ()*, i32 }
%struct.AVTXContext = type { i32, i32, i32, i32, i64, double, %struct.AVComplexFloat*, %struct.AVComplexFloat*, i32*, i32*, i32* }

@ff_cos_16_float = common hidden local_unnamed_addr global [8 x float] zeroinitializer, align 32
@ff_cos_32_float = common hidden global [16 x float] zeroinitializer, align 32
@ff_cos_64_float = common hidden global [32 x float] zeroinitializer, align 32
@ff_cos_128_float = common hidden global [64 x float] zeroinitializer, align 32
@ff_cos_256_float = common hidden global [128 x float] zeroinitializer, align 32
@ff_cos_512_float = common hidden global [256 x float] zeroinitializer, align 32
@ff_cos_1024_float = common hidden global [512 x float] zeroinitializer, align 32
@ff_cos_2048_float = common hidden global [1024 x float] zeroinitializer, align 32
@ff_cos_4096_float = common hidden global [2048 x float] zeroinitializer, align 32
@ff_cos_8192_float = common hidden global [4096 x float] zeroinitializer, align 32
@ff_cos_16384_float = common hidden global [8192 x float] zeroinitializer, align 32
@ff_cos_32768_float = common hidden global [16384 x float] zeroinitializer, align 32
@ff_cos_65536_float = common hidden global [32768 x float] zeroinitializer, align 32
@ff_cos_131072_float = common hidden global [65536 x float] zeroinitializer, align 32
@ff_cos_53_float = common hidden local_unnamed_addr global [4 x %struct.AVComplexFloat] zeroinitializer, align 32
@fft_dispatch = internal unnamed_addr constant [18 x void (%struct.AVComplexFloat*)*] [void (%struct.AVComplexFloat*)* null, void (%struct.AVComplexFloat*)* @fft2, void (%struct.AVComplexFloat*)* @fft4, void (%struct.AVComplexFloat*)* @fft8, void (%struct.AVComplexFloat*)* @fft16, void (%struct.AVComplexFloat*)* @fft32, void (%struct.AVComplexFloat*)* @fft64, void (%struct.AVComplexFloat*)* @fft128, void (%struct.AVComplexFloat*)* @fft256, void (%struct.AVComplexFloat*)* @fft512, void (%struct.AVComplexFloat*)* @fft1024, void (%struct.AVComplexFloat*)* @fft2048, void (%struct.AVComplexFloat*)* @fft4096, void (%struct.AVComplexFloat*)* @fft8192, void (%struct.AVComplexFloat*)* @fft16384, void (%struct.AVComplexFloat*)* @fft32768, void (%struct.AVComplexFloat*)* @fft65536, void (%struct.AVComplexFloat*)* @fft131072], align 16
@cos_tabs_init_once = internal global [18 x %struct.CosTabsInitOnce] [%struct.CosTabsInitOnce { void ()* @ff_init_53_tabs, i32 0 }, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_16, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_32, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_64, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_128, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_256, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_512, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_1024, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_2048, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_4096, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_8192, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_16384, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_32768, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_65536, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_131072, i32 0 }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_tx_init_mdct_fft_float(%struct.AVTXContext*, void (%struct.AVTXContext*, i8*, i8*, i64)** nocapture, i32, i32, i32, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %8 = tail call i32 @ff_tx_type_is_mdct(i32 %2) #8
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i32
  %11 = ashr i32 %4, %10
  %12 = srem i32 %11, 15
  %13 = icmp eq i32 %12, 0
  %14 = sdiv i32 %11, 15
  %15 = select i1 %13, i32 %14, i32 %11
  br i1 %13, label %26, label %16

16:                                               ; preds = %7
  %17 = srem i32 %15, 5
  %18 = sdiv i32 %15, 5
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = srem i32 %15, 3
  %22 = sdiv i32 %15, 3
  %23 = icmp eq i32 %21, 0
  %24 = select i1 %23, i32 %22, i32 %11
  %25 = select i1 %23, i32 3, i32 1
  br label %26

26:                                               ; preds = %20, %16, %7
  %27 = phi i32 [ %14, %7 ], [ %18, %16 ], [ %24, %20 ]
  %28 = phi i32 [ 15, %7 ], [ 5, %16 ], [ %25, %20 ]
  %29 = tail call i32 @llvm.ctpop.i32(i32 %27), !range !2
  %30 = icmp ult i32 %29, 2
  %31 = add i32 %27, -2
  %32 = icmp ult i32 %31, 131071
  %33 = and i1 %32, %30
  %34 = select i1 %33, i32 %27, i32 1
  %35 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  store i32 %28, i32* %35, align 8
  %36 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 2
  store i32 %3, i32* %37, align 8
  %38 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 3
  store i32 %2, i32* %38, align 4
  %39 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 4
  store i64 %6, i64* %39, align 8
  %40 = icmp sgt i32 %27, 1
  %41 = and i1 %32, %30
  %42 = xor i1 %41, true
  %43 = and i1 %40, %42
  %44 = icmp eq i32 %34, 1
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %62

46:                                               ; preds = %26
  %47 = xor i1 %9, true
  %48 = and i32 %11, 1
  %49 = icmp eq i32 %48, 0
  %50 = or i1 %49, %47
  %51 = and i64 %6, 1
  %52 = icmp eq i64 %51, 0
  %53 = and i1 %52, %50
  br i1 %53, label %54, label %176

54:                                               ; preds = %46
  store i32 %11, i32* %35, align 8
  store i32 1, i32* %36, align 4
  store void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_fft, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br i1 %9, label %55, label %176

55:                                               ; preds = %54
  %56 = bitcast i8* %5 to float*
  %57 = load float, float* %56, align 4
  %58 = fpext float %57 to double
  %59 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  store double %58, double* %59, align 8
  %60 = icmp eq i32 %3, 0
  %61 = select i1 %60, void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_mdct, void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_imdct
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %61, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br label %176

62:                                               ; preds = %26
  %63 = icmp ne i32 %28, 1
  %64 = icmp sgt i32 %34, 1
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %93

66:                                               ; preds = %62
  %67 = tail call i32 @ff_tx_gen_compound_mapping(%struct.AVTXContext* %0) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %176

69:                                               ; preds = %66
  %70 = mul nsw i32 %34, %28
  %71 = sext i32 %70 to i64
  %72 = shl nsw i64 %71, 3
  %73 = tail call noalias i8* @av_malloc(i64 %72) #8
  %74 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %75 = bitcast %struct.AVComplexFloat** %74 to i8**
  store i8* %73, i8** %75, align 8
  %76 = icmp eq i8* %73, null
  br i1 %76, label %176, label %77

77:                                               ; preds = %69
  %78 = icmp eq i32 %28, 3
  %79 = icmp eq i32 %28, 5
  %80 = select i1 %79, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_5xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_15xM
  %81 = select i1 %78, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_3xM, void (%struct.AVTXContext*, i8*, i8*, i64)* %80
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %81, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br i1 %9, label %82, label %98

82:                                               ; preds = %77
  br i1 %78, label %83, label %86

83:                                               ; preds = %82
  %84 = icmp eq i32 %3, 0
  %85 = select i1 %84, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_3xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_3xM
  br label %91

86:                                               ; preds = %82
  %87 = icmp ne i32 %3, 0
  %88 = select i1 %87, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_5xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_5xM
  %89 = select i1 %87, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_15xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_15xM
  %90 = select i1 %79, void (%struct.AVTXContext*, i8*, i8*, i64)* %88, void (%struct.AVTXContext*, i8*, i8*, i64)* %89
  br label %91

91:                                               ; preds = %86, %83
  %92 = phi void (%struct.AVTXContext*, i8*, i8*, i64)* [ %85, %83 ], [ %90, %86 ]
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %92, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br label %98

93:                                               ; preds = %62
  %94 = icmp eq i32 %3, 0
  %95 = select i1 %94, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_mdct, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_imdct
  %96 = select i1 %9, void (%struct.AVTXContext*, i8*, i8*, i64)* %95, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_fft
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %96, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  %97 = icmp eq i32 %28, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %93, %91, %77
  %99 = load void ()*, void ()** getelementptr inbounds ([18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 0, i32 0), align 16
  %100 = tail call i32 @pthread_once(i32* getelementptr inbounds ([18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 0, i32 1), void ()* %99) #8
  br label %101

101:                                              ; preds = %93, %98
  %102 = phi i1 [ true, %98 ], [ false, %93 ]
  %103 = or i1 %9, %102
  %104 = trunc i64 %6 to i32
  %105 = and i32 %104, 1
  %106 = xor i32 %105, 1
  %107 = select i1 %103, i32 0, i32 %106
  %108 = tail call i32 @ff_tx_gen_ptwo_revtab(%struct.AVTXContext* %0, i32 %107) #8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %176

110:                                              ; preds = %101
  %111 = and i64 %6, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  br i1 %9, label %176, label %114

114:                                              ; preds = %113
  %115 = tail call i32 @ff_tx_gen_ptwo_inplace_revtab_idx(%struct.AVTXContext* %0) #8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %176

117:                                              ; preds = %114, %110
  %118 = or i32 %34, 1
  %119 = tail call i32 @llvm.ctlz.i32(i32 %118, i1 true), !range !3
  %120 = xor i32 %119, 31
  %121 = icmp ult i32 %120, 4
  br i1 %121, label %133, label %122

122:                                              ; preds = %117
  %123 = add nuw nsw i32 %120, 1
  %124 = zext i32 %123 to i64
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ 4, %122 ], [ %131, %125 ]
  %127 = getelementptr inbounds [18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 %126, i32 1
  %128 = getelementptr inbounds [18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 %126, i32 0
  %129 = load void ()*, void ()** %128, align 16
  %130 = tail call i32 @pthread_once(i32* %127, void ()* %129) #8
  %131 = add nuw nsw i64 %126, 1
  %132 = icmp eq i64 %131, %124
  br i1 %132, label %133, label %125

133:                                              ; preds = %125, %117
  br i1 %9, label %134, label %176

134:                                              ; preds = %133
  %135 = mul nsw i32 %34, %28
  %136 = bitcast i8* %5 to float*
  %137 = load float, float* %136, align 4
  %138 = fcmp nsz olt float %137, 0.000000e+00
  %139 = sitofp i32 %135 to double
  %140 = fadd nsz double %139, 1.250000e-01
  %141 = select i1 %138, double %140, double 1.250000e-01
  %142 = sext i32 %135 to i64
  %143 = tail call i8* @av_malloc_array(i64 %142, i64 8) #8
  %144 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %145 = bitcast %struct.AVComplexFloat** %144 to i8**
  store i8* %143, i8** %145, align 8
  %146 = icmp eq i8* %143, null
  %147 = bitcast i8* %143 to %struct.AVComplexFloat*
  br i1 %146, label %176, label %148

148:                                              ; preds = %134
  %149 = tail call nsz float @llvm.fabs.f32(float %137)
  %150 = fpext float %149 to double
  %151 = tail call nsz double @llvm.sqrt.f64(double %150) #8
  %152 = icmp sgt i32 %135, 0
  br i1 %152, label %153, label %176

153:                                              ; preds = %148
  %154 = zext i32 %135 to i64
  br label %155

155:                                              ; preds = %174, %153
  %156 = phi %struct.AVComplexFloat* [ %147, %153 ], [ %175, %174 ]
  %157 = phi i64 [ 0, %153 ], [ %172, %174 ]
  %158 = trunc i64 %157 to i32
  %159 = sitofp i32 %158 to double
  %160 = fadd nsz double %141, %159
  %161 = fmul nsz double %160, 0x3FF921FB54442D18
  %162 = fdiv nsz double %161, %139
  %163 = tail call nsz double @llvm.cos.f64(double %162) #8
  %164 = fmul nsz double %151, %163
  %165 = fptrunc double %164 to float
  %166 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %156, i64 %157, i32 0
  store float %165, float* %166, align 4
  %167 = tail call nsz double @llvm.sin.f64(double %162) #8
  %168 = fmul nsz double %151, %167
  %169 = fptrunc double %168 to float
  %170 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %144, align 8
  %171 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %170, i64 %157, i32 1
  store float %169, float* %171, align 4
  %172 = add nuw nsw i64 %157, 1
  %173 = icmp eq i64 %172, %154
  br i1 %173, label %176, label %174

174:                                              ; preds = %155
  %175 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %144, align 8
  br label %155

176:                                              ; preds = %155, %148, %134, %133, %114, %113, %101, %69, %66, %54, %55, %46
  %177 = phi i32 [ -38, %46 ], [ 0, %55 ], [ 0, %54 ], [ %67, %66 ], [ -12, %69 ], [ %108, %101 ], [ -38, %113 ], [ %115, %114 ], [ 0, %133 ], [ -12, %134 ], [ 0, %148 ], [ 0, %155 ]
  ret i32 %177
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ff_tx_type_is_mdct(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_fft(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = bitcast i8* %2 to %struct.AVComplexFloat*
  %6 = bitcast i8* %1 to %struct.AVComplexFloat*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = sitofp i32 %8 to double
  %13 = select i1 %11, double 0xC01921FB54442D18, double 0x401921FB54442D18
  %14 = fdiv nsz double %13, %12
  %15 = icmp sgt i32 %8, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %4
  %17 = zext i32 %8 to i64
  br label %18

18:                                               ; preds = %16, %24
  %19 = phi i64 [ 0, %16 ], [ %27, %24 ]
  %20 = trunc i64 %19 to i32
  %21 = sitofp i32 %20 to double
  %22 = fmul nsz double %14, %21
  br label %29

23:                                               ; preds = %24, %4
  ret void

24:                                               ; preds = %29
  %25 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %19, i32 0
  store float %50, float* %25, align 4
  %26 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %19, i32 1
  store float %51, float* %26, align 4
  %27 = add nuw nsw i64 %19, 1
  %28 = icmp eq i64 %27, %17
  br i1 %28, label %23, label %18

29:                                               ; preds = %29, %18
  %30 = phi i64 [ 0, %18 ], [ %52, %29 ]
  %31 = phi float [ 0.000000e+00, %18 ], [ %51, %29 ]
  %32 = phi float [ 0.000000e+00, %18 ], [ %50, %29 ]
  %33 = trunc i64 %30 to i32
  %34 = sitofp i32 %33 to double
  %35 = fmul nsz double %22, %34
  %36 = tail call nsz double @llvm.cos.f64(double %35)
  %37 = fptrunc double %36 to float
  %38 = tail call nsz double @llvm.sin.f64(double %35)
  %39 = fptrunc double %38 to float
  %40 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %30, i32 0
  %41 = load float, float* %40, align 4
  %42 = fmul nsz float %41, %37
  %43 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %30, i32 1
  %44 = load float, float* %43, align 4
  %45 = fmul nsz float %44, %39
  %46 = fsub nsz float %42, %45
  %47 = fmul nsz float %41, %39
  %48 = fmul nsz float %44, %37
  %49 = fadd nsz float %47, %48
  %50 = fadd nsz float %32, %46
  %51 = fadd nsz float %31, %49
  %52 = add nuw nsw i64 %30, 1
  %53 = icmp eq i64 %52, %17
  br i1 %53, label %24, label %29
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_imdct(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 1
  %8 = bitcast i8* %2 to float*
  %9 = bitcast i8* %1 to float*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  %11 = load double, double* %10, align 8
  %12 = sitofp i32 %7 to double
  %13 = fmul nsz double %12, 4.000000e+00
  %14 = fdiv nsz double 0x400921FB54442D18, %13
  %15 = lshr i64 %3, 2
  %16 = icmp sgt i32 %6, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %4
  %18 = shl i32 %6, 2
  %19 = mul nsw i32 %6, 6
  %20 = sext i32 %7 to i64
  %21 = sext i32 %6 to i64
  %22 = zext i32 %6 to i64
  br label %24

23:                                               ; preds = %38, %4
  ret void

24:                                               ; preds = %17, %38
  %25 = phi i64 [ 0, %17 ], [ %47, %38 ]
  %26 = phi i32 [ 0, %17 ], [ %48, %38 ]
  %27 = shl nuw nsw i32 %26, 1
  %28 = xor i32 %27, -1
  %29 = add i32 %18, %28
  %30 = sitofp i32 %29 to double
  %31 = fmul nsz double %14, %30
  %32 = trunc i64 %25 to i32
  %33 = shl i32 %32, 1
  %34 = add nsw i32 %33, %19
  %35 = or i32 %34, 1
  %36 = sitofp i32 %35 to double
  %37 = fmul nsz double %14, %36
  br label %50

38:                                               ; preds = %50
  %39 = fmul nsz double %11, %67
  %40 = fptrunc double %39 to float
  %41 = getelementptr inbounds float, float* %9, i64 %25
  store float %40, float* %41, align 4
  %42 = fmul nsz double %11, %69
  %43 = fptrunc double %42 to float
  %44 = fsub nsz float -0.000000e+00, %43
  %45 = add nsw i64 %25, %21
  %46 = getelementptr inbounds float, float* %9, i64 %45
  store float %44, float* %46, align 4
  %47 = add nuw nsw i64 %25, 1
  %48 = add nuw nsw i32 %26, 1
  %49 = icmp eq i64 %47, %22
  br i1 %49, label %23, label %24

50:                                               ; preds = %24, %50
  %51 = phi i64 [ 0, %24 ], [ %70, %50 ]
  %52 = phi double [ 0.000000e+00, %24 ], [ %69, %50 ]
  %53 = phi double [ 0.000000e+00, %24 ], [ %67, %50 ]
  %54 = trunc i64 %51 to i32
  %55 = shl i32 %54, 1
  %56 = or i32 %55, 1
  %57 = sitofp i32 %56 to double
  %58 = fmul nsz double %31, %57
  %59 = tail call nsz double @llvm.cos.f64(double %58)
  %60 = fmul nsz double %37, %57
  %61 = tail call nsz double @llvm.cos.f64(double %60)
  %62 = mul nuw nsw i64 %15, %51
  %63 = getelementptr inbounds float, float* %8, i64 %62
  %64 = load float, float* %63, align 4
  %65 = fpext float %64 to double
  %66 = fmul nsz double %59, %65
  %67 = fadd nsz double %53, %66
  %68 = fmul nsz double %61, %65
  %69 = fadd nsz double %52, %68
  %70 = add nuw nsw i64 %51, 1
  %71 = icmp slt i64 %70, %20
  br i1 %71, label %50, label %38
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_mdct(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 1
  %8 = bitcast i8* %2 to float*
  %9 = bitcast i8* %1 to float*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  %11 = load double, double* %10, align 8
  %12 = sitofp i32 %7 to double
  %13 = fmul nsz double %12, 4.000000e+00
  %14 = fdiv nsz double 0x400921FB54442D18, %13
  %15 = lshr i64 %3, 2
  %16 = icmp sgt i32 %6, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %4
  %18 = shl nsw i32 %6, 2
  %19 = sext i32 %18 to i64
  %20 = sext i32 %7 to i64
  br label %21

21:                                               ; preds = %27, %17
  %22 = phi i64 [ 0, %17 ], [ %32, %27 ]
  %23 = trunc i64 %22 to i32
  %24 = shl i32 %23, 1
  %25 = or i32 %24, 1
  br label %34

26:                                               ; preds = %27, %4
  ret void

27:                                               ; preds = %34
  %28 = fmul nsz double %11, %49
  %29 = fptrunc double %28 to float
  %30 = mul nsw i64 %15, %22
  %31 = getelementptr inbounds float, float* %9, i64 %30
  store float %29, float* %31, align 4
  %32 = add nuw nsw i64 %22, 1
  %33 = icmp slt i64 %32, %20
  br i1 %33, label %21, label %26

34:                                               ; preds = %21, %34
  %35 = phi i64 [ 0, %21 ], [ %50, %34 ]
  %36 = phi double [ 0.000000e+00, %21 ], [ %49, %34 ]
  %37 = trunc i64 %35 to i32
  %38 = shl i32 %37, 1
  %39 = or i32 %38, 1
  %40 = add nsw i32 %39, %7
  %41 = mul nsw i32 %40, %25
  %42 = getelementptr inbounds float, float* %8, i64 %35
  %43 = load float, float* %42, align 4
  %44 = fpext float %43 to double
  %45 = sitofp i32 %41 to double
  %46 = fmul nsz double %14, %45
  %47 = tail call nsz double @llvm.cos.f64(double %46)
  %48 = fmul nsz double %47, %44
  %49 = fadd nsz double %36, %48
  %50 = add nuw nsw i64 %35, 1
  %51 = icmp slt i64 %50, %19
  br i1 %51, label %34, label %27
}

declare i32 @ff_tx_gen_compound_mapping(%struct.AVTXContext*) local_unnamed_addr #2

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %8 = load i32*, i32** %7, align 8
  %9 = mul nsw i32 %6, 3
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = bitcast i8* %2 to %struct.AVComplexFloat*
  %13 = bitcast i8* %1 to %struct.AVComplexFloat*
  %14 = or i32 %6, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %18, align 8
  %20 = icmp sgt i32 %6, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = sext i32 %6 to i64
  br label %101

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %26 = sext i32 %6 to i64
  %27 = shl nsw i64 %26, 1
  %28 = zext i32 %6 to i64
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ 0, %23 ], [ %99, %29 ]
  %31 = mul i64 %30, 3
  %32 = and i64 %31, 4294967295
  %33 = getelementptr inbounds i32, i32* %8, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %35
  %37 = bitcast %struct.AVComplexFloat* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = add nuw nsw i64 %32, 1
  %40 = getelementptr inbounds i32, i32* %8, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %42
  %44 = bitcast %struct.AVComplexFloat* %43 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = add nuw nsw i64 %32, 2
  %47 = getelementptr inbounds i32, i32* %8, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %49
  %51 = bitcast %struct.AVComplexFloat* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %24, align 8
  %54 = load i32*, i32** %25, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %30
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %53, i64 %57
  %59 = lshr i64 %45, 32
  %60 = trunc i64 %59 to i32
  %61 = bitcast i32 %60 to float
  %62 = lshr i64 %52, 32
  %63 = trunc i64 %62 to i32
  %64 = bitcast i32 %63 to float
  %65 = fsub nsz float %61, %64
  %66 = fadd nsz float %61, %64
  %67 = trunc i64 %45 to i32
  %68 = bitcast i32 %67 to float
  %69 = trunc i64 %52 to i32
  %70 = bitcast i32 %69 to float
  %71 = fsub nsz float %68, %70
  %72 = fadd nsz float %68, %70
  %73 = trunc i64 %38 to i32
  %74 = bitcast i32 %73 to float
  %75 = fadd nsz float %72, %74
  %76 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %58, i64 0, i32 0
  store float %75, float* %76, align 4
  %77 = lshr i64 %38, 32
  %78 = trunc i64 %77 to i32
  %79 = bitcast i32 %78 to float
  %80 = fadd nsz float %66, %79
  %81 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %53, i64 %57, i32 1
  store float %80, float* %81, align 4
  %82 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %83 = fmul nsz float %65, %82
  %84 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %85 = fmul nsz float %71, %84
  %86 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %87 = fmul nsz float %72, %86
  %88 = fmul nsz float %66, %86
  %89 = fsub nsz float %74, %87
  %90 = fadd nsz float %83, %89
  %91 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %58, i64 %26, i32 0
  store float %90, float* %91, align 4
  %92 = fsub nsz float %79, %88
  %93 = fsub nsz float %92, %85
  %94 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %58, i64 %26, i32 1
  store float %93, float* %94, align 4
  %95 = fsub nsz float %89, %83
  %96 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %58, i64 %27, i32 0
  store float %95, float* %96, align 4
  %97 = fadd nsz float %85, %92
  %98 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %58, i64 %27, i32 1
  store float %97, float* %98, align 4
  %99 = add nuw nsw i64 %30, 1
  %100 = icmp eq i64 %99, %28
  br i1 %100, label %101, label %29

101:                                              ; preds = %29, %21
  %102 = phi i64 [ %22, %21 ], [ %26, %29 ]
  %103 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %104 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %103, align 8
  tail call void %19(%struct.AVComplexFloat* %104) #8
  %105 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %103, align 8
  %106 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %105, i64 %102
  tail call void %19(%struct.AVComplexFloat* %106) #8
  %107 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %103, align 8
  %108 = shl nsw i64 %102, 1
  %109 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %107, i64 %108
  tail call void %19(%struct.AVComplexFloat* %109) #8
  br i1 %20, label %111, label %110

110:                                              ; preds = %111, %101
  ret void

111:                                              ; preds = %101, %111
  %112 = phi i64 [ %122, %111 ], [ 0, %101 ]
  %113 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %112
  %114 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %103, align 8
  %115 = getelementptr inbounds i32, i32* %11, i64 %112
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %114, i64 %117
  %119 = bitcast %struct.AVComplexFloat* %118 to i64*
  %120 = bitcast %struct.AVComplexFloat* %113 to i64*
  %121 = load i64, i64* %119, align 4
  store i64 %121, i64* %120, align 4
  %122 = add nuw nsw i64 %112, 1
  %123 = icmp slt i64 %122, %10
  br i1 %123, label %111, label %110
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %8 = load i32*, i32** %7, align 8
  %9 = mul nsw i32 %6, 5
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = bitcast i8* %2 to %struct.AVComplexFloat*
  %13 = bitcast i8* %1 to %struct.AVComplexFloat*
  %14 = or i32 %6, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %18, align 8
  %20 = icmp sgt i32 %6, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %4
  %22 = sext i32 %6 to i64
  %23 = mul nsw i64 %22, 3
  br label %169

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %26 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %27 = sext i32 %6 to i64
  %28 = shl nsw i64 %27, 1
  %29 = mul nsw i64 %27, 3
  %30 = shl nsw i64 %27, 2
  %31 = zext i32 %6 to i64
  br label %32

32:                                               ; preds = %32, %24
  %33 = phi i64 [ 0, %24 ], [ %167, %32 ]
  %34 = mul i64 %33, 5
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds i32, i32* %8, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %38
  %40 = bitcast %struct.AVComplexFloat* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = add nuw nsw i64 %35, 1
  %43 = getelementptr inbounds i32, i32* %8, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %45
  %47 = bitcast %struct.AVComplexFloat* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = add nuw nsw i64 %35, 2
  %50 = getelementptr inbounds i32, i32* %8, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %52
  %54 = bitcast %struct.AVComplexFloat* %53 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = add nuw nsw i64 %35, 3
  %57 = getelementptr inbounds i32, i32* %8, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %59
  %61 = bitcast %struct.AVComplexFloat* %60 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = add nuw nsw i64 %35, 4
  %64 = getelementptr inbounds i32, i32* %8, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %12, i64 %66
  %68 = bitcast %struct.AVComplexFloat* %67 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %25, align 8
  %71 = load i32*, i32** %26, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %33
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %70, i64 %74
  %76 = trunc i64 %48 to i32
  %77 = bitcast i32 %76 to float
  %78 = trunc i64 %69 to i32
  %79 = bitcast i32 %78 to float
  %80 = fsub nsz float %77, %79
  %81 = fadd nsz float %77, %79
  %82 = lshr i64 %48, 32
  %83 = trunc i64 %82 to i32
  %84 = bitcast i32 %83 to float
  %85 = lshr i64 %69, 32
  %86 = trunc i64 %85 to i32
  %87 = bitcast i32 %86 to float
  %88 = fsub nsz float %84, %87
  %89 = fadd nsz float %84, %87
  %90 = trunc i64 %55 to i32
  %91 = bitcast i32 %90 to float
  %92 = trunc i64 %62 to i32
  %93 = bitcast i32 %92 to float
  %94 = fsub nsz float %91, %93
  %95 = fadd nsz float %91, %93
  %96 = lshr i64 %55, 32
  %97 = trunc i64 %96 to i32
  %98 = bitcast i32 %97 to float
  %99 = lshr i64 %62, 32
  %100 = trunc i64 %99 to i32
  %101 = bitcast i32 %100 to float
  %102 = fsub nsz float %98, %101
  %103 = fadd nsz float %98, %101
  %104 = trunc i64 %41 to i32
  %105 = bitcast i32 %104 to float
  %106 = fadd nsz float %81, %105
  %107 = fadd nsz float %95, %106
  %108 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 0, i32 0
  store float %107, float* %108, align 4
  %109 = lshr i64 %41, 32
  %110 = trunc i64 %109 to i32
  %111 = bitcast i32 %110 to float
  %112 = fadd nsz float %89, %111
  %113 = fadd nsz float %103, %112
  %114 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %70, i64 %74, i32 1
  store float %113, float* %114, align 4
  %115 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %116 = fmul nsz float %95, %115
  %117 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %118 = fmul nsz float %81, %117
  %119 = fsub nsz float %116, %118
  %120 = fmul nsz float %81, %115
  %121 = fmul nsz float %95, %117
  %122 = fsub nsz float %120, %121
  %123 = fmul nsz float %103, %115
  %124 = fmul nsz float %89, %117
  %125 = fsub nsz float %123, %124
  %126 = fmul nsz float %89, %115
  %127 = fmul nsz float %103, %117
  %128 = fsub nsz float %126, %127
  %129 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %130 = fmul nsz float %102, %129
  %131 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %132 = fmul nsz float %88, %131
  %133 = fsub nsz float %130, %132
  %134 = fmul nsz float %88, %129
  %135 = fmul nsz float %102, %131
  %136 = fadd nsz float %134, %135
  %137 = fmul nsz float %94, %129
  %138 = fmul nsz float %80, %131
  %139 = fsub nsz float %137, %138
  %140 = fmul nsz float %80, %129
  %141 = fmul nsz float %94, %131
  %142 = fadd nsz float %140, %141
  %143 = fsub nsz float %122, %136
  %144 = fadd nsz float %122, %136
  %145 = fsub nsz float %128, %142
  %146 = fadd nsz float %128, %142
  %147 = fsub nsz float %119, %133
  %148 = fadd nsz float %119, %133
  %149 = fsub nsz float %125, %139
  %150 = fadd nsz float %125, %139
  %151 = fadd nsz float %144, %105
  %152 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %27, i32 0
  store float %151, float* %152, align 4
  %153 = fadd nsz float %145, %111
  %154 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %27, i32 1
  store float %153, float* %154, align 4
  %155 = fadd nsz float %147, %105
  %156 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %28, i32 0
  store float %155, float* %156, align 4
  %157 = fadd nsz float %150, %111
  %158 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %28, i32 1
  store float %157, float* %158, align 4
  %159 = fadd nsz float %148, %105
  %160 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %29, i32 0
  store float %159, float* %160, align 4
  %161 = fadd nsz float %149, %111
  %162 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %29, i32 1
  store float %161, float* %162, align 4
  %163 = fadd nsz float %143, %105
  %164 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %30, i32 0
  store float %163, float* %164, align 4
  %165 = fadd nsz float %146, %111
  %166 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %75, i64 %30, i32 1
  store float %165, float* %166, align 4
  %167 = add nuw nsw i64 %33, 1
  %168 = icmp eq i64 %167, %31
  br i1 %168, label %169, label %32

169:                                              ; preds = %32, %21
  %170 = phi i64 [ %23, %21 ], [ %29, %32 ]
  %171 = phi i64 [ %22, %21 ], [ %27, %32 ]
  %172 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %173 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  tail call void %19(%struct.AVComplexFloat* %173) #8
  %174 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  %175 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %174, i64 %171
  tail call void %19(%struct.AVComplexFloat* %175) #8
  %176 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  %177 = shl nsw i64 %171, 1
  %178 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %176, i64 %177
  tail call void %19(%struct.AVComplexFloat* %178) #8
  %179 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  %180 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %179, i64 %170
  tail call void %19(%struct.AVComplexFloat* %180) #8
  %181 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  %182 = shl nsw i64 %171, 2
  %183 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %181, i64 %182
  tail call void %19(%struct.AVComplexFloat* %183) #8
  br i1 %20, label %185, label %184

184:                                              ; preds = %185, %169
  ret void

185:                                              ; preds = %169, %185
  %186 = phi i64 [ %196, %185 ], [ 0, %169 ]
  %187 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %186
  %188 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %172, align 8
  %189 = getelementptr inbounds i32, i32* %11, i64 %186
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %188, i64 %191
  %193 = bitcast %struct.AVComplexFloat* %192 to i64*
  %194 = bitcast %struct.AVComplexFloat* %187 to i64*
  %195 = load i64, i64* %193, align 4
  store i64 %195, i64* %194, align 4
  %196 = add nuw nsw i64 %186, 1
  %197 = icmp slt i64 %196, %10
  br i1 %197, label %185, label %184
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexFloat], align 16
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %9 = load i32*, i32** %8, align 8
  %10 = mul nsw i32 %7, 15
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = bitcast i8* %2 to %struct.AVComplexFloat*
  %14 = bitcast i8* %1 to %struct.AVComplexFloat*
  %15 = bitcast [15 x %struct.AVComplexFloat]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 120, i1 false)
  %16 = or i32 %7, 1
  %17 = tail call i32 @llvm.ctlz.i32(i32 %16, i1 true), !range !3
  %18 = xor i32 %17, 31
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %19
  %21 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %20, align 8
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %4
  %24 = sext i32 %7 to i64
  %25 = mul nsw i64 %24, 3
  %26 = mul nsw i64 %24, 5
  %27 = mul nsw i64 %24, 6
  %28 = mul nsw i64 %24, 7
  %29 = mul nsw i64 %24, 9
  %30 = mul nsw i64 %24, 10
  %31 = mul nsw i64 %24, 11
  %32 = mul nsw i64 %24, 12
  %33 = mul nsw i64 %24, 13
  %34 = mul nsw i64 %24, 14
  br label %540

35:                                               ; preds = %4
  %36 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %37 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %38 = sext i32 %7 to i64
  %39 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 1
  %40 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 1
  %41 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 0
  %42 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 0
  %43 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 0
  %44 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 1
  %45 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 1
  %46 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 1
  %47 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 0
  %48 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 0
  %49 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 0
  %50 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 1
  %51 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 1
  %52 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 1
  %53 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 0
  %54 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 0
  %55 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 0
  %56 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 1
  %57 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 1
  %58 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 1
  %59 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 0
  %60 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 0
  %61 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 0
  %62 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 1
  %63 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 1
  %64 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 0
  %65 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14, i32 0
  %66 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 0
  %67 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 1
  %68 = mul nsw i64 %38, 6
  %69 = mul nsw i64 %38, 12
  %70 = mul nsw i64 %38, 3
  %71 = mul nsw i64 %38, 9
  %72 = mul nsw i64 %38, 10
  %73 = mul nsw i64 %38, 7
  %74 = mul nsw i64 %38, 13
  %75 = shl nsw i64 %38, 2
  %76 = mul nsw i64 %38, 5
  %77 = mul nsw i64 %38, 11
  %78 = shl nsw i64 %38, 1
  %79 = shl nsw i64 %38, 3
  %80 = mul nsw i64 %38, 14
  %81 = zext i32 %7 to i64
  %82 = bitcast [15 x %struct.AVComplexFloat]* %5 to i64*
  %83 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1
  %84 = bitcast %struct.AVComplexFloat* %83 to i64*
  %85 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2
  %86 = bitcast %struct.AVComplexFloat* %85 to i64*
  %87 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3
  %88 = bitcast %struct.AVComplexFloat* %87 to i64*
  %89 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4
  %90 = bitcast %struct.AVComplexFloat* %89 to i64*
  %91 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5
  %92 = bitcast %struct.AVComplexFloat* %91 to i64*
  %93 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6
  %94 = bitcast %struct.AVComplexFloat* %93 to i64*
  %95 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7
  %96 = bitcast %struct.AVComplexFloat* %95 to i64*
  %97 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8
  %98 = bitcast %struct.AVComplexFloat* %97 to i64*
  %99 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9
  %100 = bitcast %struct.AVComplexFloat* %99 to i64*
  %101 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10
  %102 = bitcast %struct.AVComplexFloat* %101 to i64*
  %103 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11
  %104 = bitcast %struct.AVComplexFloat* %103 to i64*
  %105 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12
  %106 = bitcast %struct.AVComplexFloat* %105 to i64*
  %107 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13
  %108 = bitcast %struct.AVComplexFloat* %107 to i64*
  %109 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14
  %110 = bitcast %struct.AVComplexFloat* %109 to i64*
  br label %111

111:                                              ; preds = %111, %35
  %112 = phi i64 [ 0, %35 ], [ %538, %111 ]
  %113 = mul i64 %112, 15
  %114 = and i64 %113, 4294967295
  %115 = getelementptr inbounds i32, i32* %9, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %117
  %119 = bitcast %struct.AVComplexFloat* %118 to i64*
  %120 = load i64, i64* %119, align 4
  store i64 %120, i64* %82, align 16
  %121 = add nuw nsw i64 %114, 1
  %122 = getelementptr inbounds i32, i32* %9, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %124
  %126 = bitcast %struct.AVComplexFloat* %125 to i64*
  %127 = load i64, i64* %126, align 4
  store i64 %127, i64* %84, align 8
  %128 = add nuw nsw i64 %114, 2
  %129 = getelementptr inbounds i32, i32* %9, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %131
  %133 = bitcast %struct.AVComplexFloat* %132 to i64*
  %134 = load i64, i64* %133, align 4
  store i64 %134, i64* %86, align 16
  %135 = add nuw nsw i64 %114, 3
  %136 = getelementptr inbounds i32, i32* %9, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %138
  %140 = bitcast %struct.AVComplexFloat* %139 to i64*
  %141 = load i64, i64* %140, align 4
  store i64 %141, i64* %88, align 8
  %142 = add nuw nsw i64 %114, 4
  %143 = getelementptr inbounds i32, i32* %9, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %145
  %147 = bitcast %struct.AVComplexFloat* %146 to i64*
  %148 = load i64, i64* %147, align 4
  store i64 %148, i64* %90, align 16
  %149 = add nuw nsw i64 %114, 5
  %150 = getelementptr inbounds i32, i32* %9, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %152
  %154 = bitcast %struct.AVComplexFloat* %153 to i64*
  %155 = load i64, i64* %154, align 4
  store i64 %155, i64* %92, align 8
  %156 = add nuw nsw i64 %114, 6
  %157 = getelementptr inbounds i32, i32* %9, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %159
  %161 = bitcast %struct.AVComplexFloat* %160 to i64*
  %162 = load i64, i64* %161, align 4
  store i64 %162, i64* %94, align 16
  %163 = add nuw nsw i64 %114, 7
  %164 = getelementptr inbounds i32, i32* %9, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %166
  %168 = bitcast %struct.AVComplexFloat* %167 to i64*
  %169 = load i64, i64* %168, align 4
  store i64 %169, i64* %96, align 8
  %170 = add nuw nsw i64 %114, 8
  %171 = getelementptr inbounds i32, i32* %9, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %173
  %175 = bitcast %struct.AVComplexFloat* %174 to i64*
  %176 = load i64, i64* %175, align 4
  store i64 %176, i64* %98, align 16
  %177 = add nuw nsw i64 %114, 9
  %178 = getelementptr inbounds i32, i32* %9, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %180
  %182 = bitcast %struct.AVComplexFloat* %181 to i64*
  %183 = load i64, i64* %182, align 4
  store i64 %183, i64* %100, align 8
  %184 = add nuw nsw i64 %114, 10
  %185 = getelementptr inbounds i32, i32* %9, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %187
  %189 = bitcast %struct.AVComplexFloat* %188 to i64*
  %190 = load i64, i64* %189, align 4
  store i64 %190, i64* %102, align 16
  %191 = add nuw nsw i64 %114, 11
  %192 = getelementptr inbounds i32, i32* %9, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %194
  %196 = bitcast %struct.AVComplexFloat* %195 to i64*
  %197 = load i64, i64* %196, align 4
  store i64 %197, i64* %104, align 8
  %198 = add nuw nsw i64 %114, 12
  %199 = getelementptr inbounds i32, i32* %9, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %201
  %203 = bitcast %struct.AVComplexFloat* %202 to i64*
  %204 = load i64, i64* %203, align 4
  store i64 %204, i64* %106, align 16
  %205 = add nuw nsw i64 %114, 13
  %206 = getelementptr inbounds i32, i32* %9, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %208
  %210 = bitcast %struct.AVComplexFloat* %209 to i64*
  %211 = load i64, i64* %210, align 4
  store i64 %211, i64* %108, align 8
  %212 = add nuw nsw i64 %114, 14
  %213 = getelementptr inbounds i32, i32* %9, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %13, i64 %215
  %217 = bitcast %struct.AVComplexFloat* %216 to i64*
  %218 = load i64, i64* %217, align 4
  store i64 %218, i64* %110, align 16
  %219 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %36, align 8
  %220 = load i32*, i32** %37, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 %112
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %219, i64 %223
  %225 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %226 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %227 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %228 = load float, float* %39, align 4
  %229 = load float, float* %40, align 4
  %230 = fsub nsz float %228, %229
  %231 = fadd nsz float %228, %229
  %232 = load float, float* %41, align 8
  %233 = load float, float* %42, align 16
  %234 = fsub nsz float %232, %233
  %235 = fadd nsz float %232, %233
  %236 = load float, float* %43, align 16
  %237 = fadd nsz float %236, %235
  %238 = load float, float* %44, align 4
  %239 = fadd nsz float %231, %238
  %240 = fmul nsz float %225, %230
  %241 = fmul nsz float %226, %234
  %242 = fmul nsz float %227, %235
  %243 = fmul nsz float %227, %231
  %244 = fsub nsz float %236, %242
  %245 = fadd nsz float %240, %244
  %246 = fsub nsz float %238, %243
  %247 = fsub nsz float %246, %241
  %248 = fsub nsz float %244, %240
  %249 = fadd nsz float %241, %246
  %250 = load float, float* %45, align 4
  %251 = load float, float* %46, align 4
  %252 = fsub nsz float %250, %251
  %253 = fadd nsz float %250, %251
  %254 = load float, float* %47, align 16
  %255 = load float, float* %48, align 8
  %256 = fsub nsz float %254, %255
  %257 = fadd nsz float %254, %255
  %258 = load float, float* %49, align 8
  %259 = fadd nsz float %258, %257
  %260 = load float, float* %50, align 4
  %261 = fadd nsz float %253, %260
  %262 = fmul nsz float %225, %252
  %263 = fmul nsz float %226, %256
  %264 = fmul nsz float %227, %257
  %265 = fmul nsz float %227, %253
  %266 = fsub nsz float %258, %264
  %267 = fadd nsz float %262, %266
  %268 = fsub nsz float %260, %265
  %269 = fsub nsz float %268, %263
  %270 = fsub nsz float %266, %262
  %271 = fadd nsz float %263, %268
  %272 = load float, float* %51, align 4
  %273 = load float, float* %52, align 4
  %274 = fsub nsz float %272, %273
  %275 = fadd nsz float %272, %273
  %276 = load float, float* %53, align 8
  %277 = load float, float* %54, align 16
  %278 = fsub nsz float %276, %277
  %279 = fadd nsz float %276, %277
  %280 = load float, float* %55, align 16
  %281 = fadd nsz float %280, %279
  %282 = load float, float* %56, align 4
  %283 = fadd nsz float %275, %282
  %284 = fmul nsz float %225, %274
  %285 = fmul nsz float %226, %278
  %286 = fmul nsz float %227, %279
  %287 = fmul nsz float %227, %275
  %288 = fsub nsz float %280, %286
  %289 = fadd nsz float %284, %288
  %290 = fsub nsz float %282, %287
  %291 = fsub nsz float %290, %285
  %292 = fsub nsz float %288, %284
  %293 = fadd nsz float %285, %290
  %294 = load float, float* %57, align 4
  %295 = load float, float* %58, align 4
  %296 = fsub nsz float %294, %295
  %297 = fadd nsz float %294, %295
  %298 = load float, float* %59, align 16
  %299 = load float, float* %60, align 8
  %300 = fsub nsz float %298, %299
  %301 = fadd nsz float %298, %299
  %302 = load float, float* %61, align 8
  %303 = fadd nsz float %302, %301
  %304 = load float, float* %62, align 4
  %305 = fadd nsz float %297, %304
  %306 = fmul nsz float %225, %296
  %307 = fmul nsz float %226, %300
  %308 = fmul nsz float %227, %301
  %309 = fmul nsz float %227, %297
  %310 = fsub nsz float %302, %308
  %311 = fadd nsz float %306, %310
  %312 = fsub nsz float %304, %309
  %313 = fsub nsz float %312, %307
  %314 = fsub nsz float %310, %306
  %315 = fadd nsz float %307, %312
  %316 = load float, float* %63, align 4
  %317 = lshr i64 %218, 32
  %318 = trunc i64 %317 to i32
  %319 = bitcast i32 %318 to float
  %320 = fsub nsz float %316, %319
  %321 = fadd nsz float %316, %319
  %322 = load float, float* %64, align 8
  %323 = load float, float* %65, align 16
  %324 = fsub nsz float %322, %323
  %325 = fadd nsz float %322, %323
  %326 = load float, float* %66, align 16
  %327 = fadd nsz float %326, %325
  %328 = load float, float* %67, align 4
  %329 = fadd nsz float %321, %328
  %330 = fmul nsz float %225, %320
  %331 = fmul nsz float %226, %324
  %332 = fmul nsz float %227, %325
  %333 = fmul nsz float %227, %321
  %334 = fsub nsz float %326, %332
  %335 = fadd nsz float %330, %334
  %336 = fsub nsz float %328, %333
  %337 = fsub nsz float %336, %331
  %338 = fsub nsz float %334, %330
  %339 = fadd nsz float %331, %336
  %340 = fsub nsz float %259, %327
  %341 = fadd nsz float %259, %327
  %342 = fsub nsz float %261, %329
  %343 = fadd nsz float %261, %329
  %344 = fsub nsz float %281, %303
  %345 = fadd nsz float %281, %303
  %346 = fsub nsz float %283, %305
  %347 = fadd nsz float %283, %305
  %348 = fadd nsz float %237, %341
  %349 = fadd nsz float %345, %348
  %350 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 0, i32 0
  store float %349, float* %350, align 4
  %351 = fadd nsz float %239, %343
  %352 = fadd nsz float %347, %351
  %353 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %219, i64 %223, i32 1
  store float %352, float* %353, align 4
  %354 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %355 = fmul nsz float %345, %354
  %356 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %357 = fmul nsz float %341, %356
  %358 = fsub nsz float %355, %357
  %359 = fmul nsz float %341, %354
  %360 = fmul nsz float %345, %356
  %361 = fsub nsz float %359, %360
  %362 = fmul nsz float %347, %354
  %363 = fmul nsz float %343, %356
  %364 = fsub nsz float %362, %363
  %365 = fmul nsz float %343, %354
  %366 = fmul nsz float %347, %356
  %367 = fsub nsz float %365, %366
  %368 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %369 = fmul nsz float %346, %368
  %370 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %371 = fmul nsz float %342, %370
  %372 = fsub nsz float %369, %371
  %373 = fmul nsz float %342, %368
  %374 = fmul nsz float %346, %370
  %375 = fadd nsz float %373, %374
  %376 = fmul nsz float %344, %368
  %377 = fmul nsz float %340, %370
  %378 = fsub nsz float %376, %377
  %379 = fmul nsz float %340, %368
  %380 = fmul nsz float %344, %370
  %381 = fadd nsz float %379, %380
  %382 = fsub nsz float %361, %375
  %383 = fadd nsz float %361, %375
  %384 = fsub nsz float %367, %381
  %385 = fadd nsz float %367, %381
  %386 = fsub nsz float %358, %372
  %387 = fadd nsz float %358, %372
  %388 = fsub nsz float %364, %378
  %389 = fadd nsz float %364, %378
  %390 = fadd nsz float %237, %383
  %391 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %68, i32 0
  store float %390, float* %391, align 4
  %392 = fadd nsz float %239, %384
  %393 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %68, i32 1
  store float %392, float* %393, align 4
  %394 = fadd nsz float %237, %386
  %395 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %69, i32 0
  store float %394, float* %395, align 4
  %396 = fadd nsz float %239, %389
  %397 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %69, i32 1
  store float %396, float* %397, align 4
  %398 = fadd nsz float %237, %387
  %399 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %70, i32 0
  store float %398, float* %399, align 4
  %400 = fadd nsz float %239, %388
  %401 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %70, i32 1
  store float %400, float* %401, align 4
  %402 = fadd nsz float %237, %382
  %403 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %71, i32 0
  store float %402, float* %403, align 4
  %404 = fadd nsz float %239, %385
  %405 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %71, i32 1
  store float %404, float* %405, align 4
  %406 = fsub nsz float %267, %335
  %407 = fadd nsz float %267, %335
  %408 = fsub nsz float %269, %337
  %409 = fadd nsz float %269, %337
  %410 = fsub nsz float %289, %311
  %411 = fadd nsz float %289, %311
  %412 = fsub nsz float %291, %313
  %413 = fadd nsz float %291, %313
  %414 = fadd nsz float %245, %407
  %415 = fadd nsz float %411, %414
  %416 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %72, i32 0
  store float %415, float* %416, align 4
  %417 = fadd nsz float %247, %409
  %418 = fadd nsz float %413, %417
  %419 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %72, i32 1
  store float %418, float* %419, align 4
  %420 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %421 = fmul nsz float %411, %420
  %422 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %423 = fmul nsz float %407, %422
  %424 = fsub nsz float %421, %423
  %425 = fmul nsz float %407, %420
  %426 = fmul nsz float %411, %422
  %427 = fsub nsz float %425, %426
  %428 = fmul nsz float %413, %420
  %429 = fmul nsz float %409, %422
  %430 = fsub nsz float %428, %429
  %431 = fmul nsz float %409, %420
  %432 = fmul nsz float %413, %422
  %433 = fsub nsz float %431, %432
  %434 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %435 = fmul nsz float %412, %434
  %436 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %437 = fmul nsz float %408, %436
  %438 = fsub nsz float %435, %437
  %439 = fmul nsz float %408, %434
  %440 = fmul nsz float %412, %436
  %441 = fadd nsz float %439, %440
  %442 = fmul nsz float %410, %434
  %443 = fmul nsz float %406, %436
  %444 = fsub nsz float %442, %443
  %445 = fmul nsz float %406, %434
  %446 = fmul nsz float %410, %436
  %447 = fadd nsz float %445, %446
  %448 = fsub nsz float %427, %441
  %449 = fadd nsz float %427, %441
  %450 = fsub nsz float %433, %447
  %451 = fadd nsz float %433, %447
  %452 = fsub nsz float %424, %438
  %453 = fadd nsz float %424, %438
  %454 = fsub nsz float %430, %444
  %455 = fadd nsz float %430, %444
  %456 = fadd nsz float %245, %449
  %457 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %38, i32 0
  store float %456, float* %457, align 4
  %458 = fadd nsz float %247, %450
  %459 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %38, i32 1
  store float %458, float* %459, align 4
  %460 = fadd nsz float %245, %452
  %461 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %73, i32 0
  store float %460, float* %461, align 4
  %462 = fadd nsz float %247, %455
  %463 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %73, i32 1
  store float %462, float* %463, align 4
  %464 = fadd nsz float %245, %453
  %465 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %74, i32 0
  store float %464, float* %465, align 4
  %466 = fadd nsz float %247, %454
  %467 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %74, i32 1
  store float %466, float* %467, align 4
  %468 = fadd nsz float %245, %448
  %469 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %75, i32 0
  store float %468, float* %469, align 4
  %470 = fadd nsz float %247, %451
  %471 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %75, i32 1
  store float %470, float* %471, align 4
  %472 = fsub nsz float %270, %338
  %473 = fadd nsz float %270, %338
  %474 = fsub nsz float %271, %339
  %475 = fadd nsz float %271, %339
  %476 = fsub nsz float %292, %314
  %477 = fadd nsz float %292, %314
  %478 = fsub nsz float %293, %315
  %479 = fadd nsz float %293, %315
  %480 = fadd nsz float %248, %473
  %481 = fadd nsz float %477, %480
  %482 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %76, i32 0
  store float %481, float* %482, align 4
  %483 = fadd nsz float %249, %475
  %484 = fadd nsz float %479, %483
  %485 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %76, i32 1
  store float %484, float* %485, align 4
  %486 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %487 = fmul nsz float %477, %486
  %488 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %489 = fmul nsz float %473, %488
  %490 = fsub nsz float %487, %489
  %491 = fmul nsz float %473, %486
  %492 = fmul nsz float %477, %488
  %493 = fsub nsz float %491, %492
  %494 = fmul nsz float %479, %486
  %495 = fmul nsz float %475, %488
  %496 = fsub nsz float %494, %495
  %497 = fmul nsz float %475, %486
  %498 = fmul nsz float %479, %488
  %499 = fsub nsz float %497, %498
  %500 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %501 = fmul nsz float %478, %500
  %502 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %503 = fmul nsz float %474, %502
  %504 = fsub nsz float %501, %503
  %505 = fmul nsz float %474, %500
  %506 = fmul nsz float %478, %502
  %507 = fadd nsz float %505, %506
  %508 = fmul nsz float %476, %500
  %509 = fmul nsz float %472, %502
  %510 = fsub nsz float %508, %509
  %511 = fmul nsz float %472, %500
  %512 = fmul nsz float %476, %502
  %513 = fadd nsz float %511, %512
  %514 = fsub nsz float %493, %507
  %515 = fadd nsz float %493, %507
  %516 = fsub nsz float %499, %513
  %517 = fadd nsz float %499, %513
  %518 = fsub nsz float %490, %504
  %519 = fadd nsz float %490, %504
  %520 = fsub nsz float %496, %510
  %521 = fadd nsz float %496, %510
  %522 = fadd nsz float %248, %515
  %523 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %77, i32 0
  store float %522, float* %523, align 4
  %524 = fadd nsz float %249, %516
  %525 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %77, i32 1
  store float %524, float* %525, align 4
  %526 = fadd nsz float %248, %518
  %527 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %78, i32 0
  store float %526, float* %527, align 4
  %528 = fadd nsz float %249, %521
  %529 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %78, i32 1
  store float %528, float* %529, align 4
  %530 = fadd nsz float %248, %519
  %531 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %79, i32 0
  store float %530, float* %531, align 4
  %532 = fadd nsz float %249, %520
  %533 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %79, i32 1
  store float %532, float* %533, align 4
  %534 = fadd nsz float %248, %514
  %535 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %80, i32 0
  store float %534, float* %535, align 4
  %536 = fadd nsz float %249, %517
  %537 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %224, i64 %80, i32 1
  store float %536, float* %537, align 4
  %538 = add nuw nsw i64 %112, 1
  %539 = icmp eq i64 %538, %81
  br i1 %539, label %540, label %111

540:                                              ; preds = %111, %23
  %541 = phi i64 [ %34, %23 ], [ %80, %111 ]
  %542 = phi i64 [ %33, %23 ], [ %74, %111 ]
  %543 = phi i64 [ %32, %23 ], [ %69, %111 ]
  %544 = phi i64 [ %31, %23 ], [ %77, %111 ]
  %545 = phi i64 [ %30, %23 ], [ %72, %111 ]
  %546 = phi i64 [ %29, %23 ], [ %71, %111 ]
  %547 = phi i64 [ %28, %23 ], [ %73, %111 ]
  %548 = phi i64 [ %27, %23 ], [ %68, %111 ]
  %549 = phi i64 [ %26, %23 ], [ %76, %111 ]
  %550 = phi i64 [ %25, %23 ], [ %70, %111 ]
  %551 = phi i64 [ %24, %23 ], [ %38, %111 ]
  %552 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %553 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  tail call void %21(%struct.AVComplexFloat* %553) #8
  %554 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %555 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %554, i64 %551
  tail call void %21(%struct.AVComplexFloat* %555) #8
  %556 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %557 = shl nsw i64 %551, 1
  %558 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %556, i64 %557
  tail call void %21(%struct.AVComplexFloat* %558) #8
  %559 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %560 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %559, i64 %550
  tail call void %21(%struct.AVComplexFloat* %560) #8
  %561 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %562 = shl nsw i64 %551, 2
  %563 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %561, i64 %562
  tail call void %21(%struct.AVComplexFloat* %563) #8
  %564 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %565 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %564, i64 %549
  tail call void %21(%struct.AVComplexFloat* %565) #8
  %566 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %567 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %566, i64 %548
  tail call void %21(%struct.AVComplexFloat* %567) #8
  %568 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %569 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %568, i64 %547
  tail call void %21(%struct.AVComplexFloat* %569) #8
  %570 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %571 = shl nsw i64 %551, 3
  %572 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %570, i64 %571
  tail call void %21(%struct.AVComplexFloat* %572) #8
  %573 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %574 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %573, i64 %546
  tail call void %21(%struct.AVComplexFloat* %574) #8
  %575 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %576 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %575, i64 %545
  tail call void %21(%struct.AVComplexFloat* %576) #8
  %577 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %578 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %577, i64 %544
  tail call void %21(%struct.AVComplexFloat* %578) #8
  %579 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %580 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %579, i64 %543
  tail call void %21(%struct.AVComplexFloat* %580) #8
  %581 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %582 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %581, i64 %542
  tail call void %21(%struct.AVComplexFloat* %582) #8
  %583 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %584 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %583, i64 %541
  tail call void %21(%struct.AVComplexFloat* %584) #8
  br i1 %22, label %586, label %585

585:                                              ; preds = %586, %540
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %15) #8
  ret void

586:                                              ; preds = %540, %586
  %587 = phi i64 [ %597, %586 ], [ 0, %540 ]
  %588 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %14, i64 %587
  %589 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %552, align 8
  %590 = getelementptr inbounds i32, i32* %12, i64 %587
  %591 = load i32, i32* %590, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %589, i64 %592
  %594 = bitcast %struct.AVComplexFloat* %593 to i64*
  %595 = bitcast %struct.AVComplexFloat* %588 to i64*
  %596 = load i64, i64* %594, align 4
  store i64 %596, i64* %595, align 4
  %597 = add nuw nsw i64 %587, 1
  %598 = icmp slt i64 %597, %11
  br i1 %598, label %586, label %585
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexFloat*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = bitcast i8* %2 to float*
  %17 = or i32 %9, 1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true), !range !3
  %19 = xor i32 %18, 31
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %20
  %22 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %21, align 8
  %23 = lshr i64 %3, 2
  %24 = mul i32 %9, 6
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %23, %26
  %28 = getelementptr inbounds float, float* %16, i64 %27
  %29 = icmp sgt i32 %9, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  %31 = sext i32 %9 to i64
  br label %146

32:                                               ; preds = %4
  %33 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %35 = sext i32 %9 to i64
  %36 = shl nsw i64 %35, 1
  %37 = zext i32 %9 to i64
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %144, %38 ]
  %40 = mul i64 %39, 3
  %41 = and i64 %40, 4294967295
  %42 = getelementptr inbounds i32, i32* %13, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 0, %43
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %23, %45
  %47 = getelementptr inbounds float, float* %28, i64 %46
  %48 = load float, float* %47, align 4
  %49 = sext i32 %43 to i64
  %50 = mul nsw i64 %23, %49
  %51 = getelementptr inbounds float, float* %16, i64 %50
  %52 = load float, float* %51, align 4
  %53 = ashr i32 %43, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %54, i32 0
  %56 = load float, float* %55, align 4
  %57 = fmul nsz float %48, %56
  %58 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %54, i32 1
  %59 = load float, float* %58, align 4
  %60 = fmul nsz float %52, %59
  %61 = fsub nsz float %57, %60
  %62 = fmul nsz float %48, %59
  %63 = fmul nsz float %52, %56
  %64 = fadd nsz float %63, %62
  %65 = add nuw nsw i64 %41, 1
  %66 = getelementptr inbounds i32, i32* %13, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub nsw i32 0, %67
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %23, %69
  %71 = getelementptr inbounds float, float* %28, i64 %70
  %72 = load float, float* %71, align 4
  %73 = sext i32 %67 to i64
  %74 = mul nsw i64 %23, %73
  %75 = getelementptr inbounds float, float* %16, i64 %74
  %76 = load float, float* %75, align 4
  %77 = ashr i32 %67, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %78, i32 0
  %80 = load float, float* %79, align 4
  %81 = fmul nsz float %72, %80
  %82 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %78, i32 1
  %83 = load float, float* %82, align 4
  %84 = fmul nsz float %76, %83
  %85 = fsub nsz float %81, %84
  %86 = fmul nsz float %72, %83
  %87 = fmul nsz float %76, %80
  %88 = fadd nsz float %87, %86
  %89 = add nuw nsw i64 %41, 2
  %90 = getelementptr inbounds i32, i32* %13, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = sub nsw i32 0, %91
  %93 = sext i32 %92 to i64
  %94 = mul nsw i64 %23, %93
  %95 = getelementptr inbounds float, float* %28, i64 %94
  %96 = load float, float* %95, align 4
  %97 = sext i32 %91 to i64
  %98 = mul nsw i64 %23, %97
  %99 = getelementptr inbounds float, float* %16, i64 %98
  %100 = load float, float* %99, align 4
  %101 = ashr i32 %91, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %102, i32 0
  %104 = load float, float* %103, align 4
  %105 = fmul nsz float %96, %104
  %106 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %102, i32 1
  %107 = load float, float* %106, align 4
  %108 = fmul nsz float %100, %107
  %109 = fsub nsz float %105, %108
  %110 = fmul nsz float %96, %107
  %111 = fmul nsz float %100, %104
  %112 = fadd nsz float %111, %110
  %113 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %33, align 8
  %114 = load i32*, i32** %34, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %39
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %113, i64 %117
  %119 = fsub nsz float %88, %112
  %120 = fadd nsz float %88, %112
  %121 = fsub nsz float %85, %109
  %122 = fadd nsz float %85, %109
  %123 = fadd nsz float %61, %122
  %124 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %118, i64 0, i32 0
  store float %123, float* %124, align 4
  %125 = fadd nsz float %120, %64
  %126 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %113, i64 %117, i32 1
  store float %125, float* %126, align 4
  %127 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %128 = fmul nsz float %119, %127
  %129 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %130 = fmul nsz float %121, %129
  %131 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %132 = fmul nsz float %122, %131
  %133 = fmul nsz float %120, %131
  %134 = fsub nsz float %61, %132
  %135 = fadd nsz float %128, %134
  %136 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %118, i64 %35, i32 0
  store float %135, float* %136, align 4
  %137 = fsub nsz float %64, %133
  %138 = fsub nsz float %137, %130
  %139 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %118, i64 %35, i32 1
  store float %138, float* %139, align 4
  %140 = fsub nsz float %134, %128
  %141 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %118, i64 %36, i32 0
  store float %140, float* %141, align 4
  %142 = fadd nsz float %130, %137
  %143 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %118, i64 %36, i32 1
  store float %142, float* %143, align 4
  %144 = add nuw nsw i64 %39, 1
  %145 = icmp eq i64 %144, %37
  br i1 %145, label %146, label %38

146:                                              ; preds = %38, %30
  %147 = phi i64 [ %31, %30 ], [ %35, %38 ]
  %148 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %149 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %148, align 8
  tail call void %22(%struct.AVComplexFloat* %149) #8
  %150 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %148, align 8
  %151 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %150, i64 %147
  tail call void %22(%struct.AVComplexFloat* %151) #8
  %152 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %148, align 8
  %153 = shl nsw i64 %147, 1
  %154 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %152, i64 %153
  tail call void %22(%struct.AVComplexFloat* %154) #8
  %155 = icmp sgt i32 %10, 1
  br i1 %155, label %156, label %158

156:                                              ; preds = %146
  %157 = sext i32 %11 to i64
  br label %159

158:                                              ; preds = %159, %146
  ret void

159:                                              ; preds = %156, %159
  %160 = phi i64 [ 0, %156 ], [ %207, %159 ]
  %161 = add nsw i64 %160, %157
  %162 = xor i64 %160, -1
  %163 = add nsw i64 %157, %162
  %164 = getelementptr inbounds i32, i32* %15, i64 %161
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %15, i64 %163
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %148, align 8
  %169 = sext i32 %167 to i64
  %170 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %168, i64 %169, i32 1
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %168, i64 %169, i32 0
  %173 = load float, float* %172, align 4
  %174 = sext i32 %165 to i64
  %175 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %168, i64 %174, i32 1
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %168, i64 %174, i32 0
  %178 = load float, float* %177, align 4
  %179 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %163, i32 1
  %180 = load float, float* %179, align 4
  %181 = fmul nsz float %171, %180
  %182 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %163, i32 0
  %183 = load float, float* %182, align 4
  %184 = fmul nsz float %173, %183
  %185 = fsub nsz float %181, %184
  %186 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %163, i32 0
  store float %185, float* %186, align 4
  %187 = load float, float* %182, align 4
  %188 = fmul nsz float %171, %187
  %189 = load float, float* %179, align 4
  %190 = fmul nsz float %173, %189
  %191 = fadd nsz float %188, %190
  %192 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %161, i32 1
  store float %191, float* %192, align 4
  %193 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %161, i32 1
  %194 = load float, float* %193, align 4
  %195 = fmul nsz float %176, %194
  %196 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %161, i32 0
  %197 = load float, float* %196, align 4
  %198 = fmul nsz float %178, %197
  %199 = fsub nsz float %195, %198
  %200 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %161, i32 0
  store float %199, float* %200, align 4
  %201 = load float, float* %196, align 4
  %202 = fmul nsz float %176, %201
  %203 = load float, float* %193, align 4
  %204 = fmul nsz float %178, %203
  %205 = fadd nsz float %202, %204
  %206 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %163, i32 1
  store float %205, float* %206, align 4
  %207 = add nuw nsw i64 %160, 1
  %208 = icmp slt i64 %207, %157
  br i1 %208, label %159, label %158
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to float*
  %6 = bitcast i8* %1 to float*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %8 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %7, align 8
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = mul nsw i32 %10, 3
  %12 = mul i32 %10, 9
  %13 = ashr i32 %11, 1
  %14 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %15 = load i32*, i32** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  %18 = or i32 %10, 1
  %19 = tail call i32 @llvm.ctlz.i32(i32 %18, i1 true), !range !3
  %20 = xor i32 %19, 31
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %21
  %23 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %22, align 8
  %24 = lshr i64 %3, 2
  %25 = icmp sgt i32 %10, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %4
  %27 = sext i32 %10 to i64
  br label %47

28:                                               ; preds = %4
  %29 = mul i32 %10, 15
  %30 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %31 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %32 = sext i32 %10 to i64
  %33 = shl nsw i64 %32, 1
  %34 = zext i32 %10 to i64
  br label %35

35:                                               ; preds = %263, %28
  %36 = phi i64 [ 0, %28 ], [ %310, %263 ]
  %37 = mul i64 %36, 3
  %38 = and i64 %37, 4294967295
  %39 = getelementptr inbounds i32, i32* %15, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, %11
  %42 = add nsw i32 %40, %11
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float* %5, i64 %43
  %45 = load float, float* %44, align 4
  %46 = xor i32 %40, -1
  br i1 %41, label %57, label %72

47:                                               ; preds = %263, %26
  %48 = phi i64 [ %27, %26 ], [ %32, %263 ]
  %49 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %50 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %49, align 8
  tail call void %23(%struct.AVComplexFloat* %50) #8
  %51 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %49, align 8
  %52 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %51, i64 %48
  tail call void %23(%struct.AVComplexFloat* %52) #8
  %53 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %49, align 8
  %54 = shl nsw i64 %48, 1
  %55 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %53, i64 %54
  tail call void %23(%struct.AVComplexFloat* %55) #8
  %56 = icmp sgt i32 %11, 1
  br i1 %56, label %112, label %114

57:                                               ; preds = %35
  %58 = add i32 %11, %46
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float, float* %5, i64 %59
  %61 = load float, float* %60, align 4
  %62 = add nsw i32 %40, %12
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, float* %5, i64 %63
  %65 = load float, float* %64, align 4
  %66 = add i32 %12, %46
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %5, i64 %67
  %69 = load float, float* %68, align 4
  %70 = fsub nsz float -0.000000e+00, %69
  %71 = fsub nsz float %70, %65
  br label %87

72:                                               ; preds = %35
  %73 = add i32 %29, %46
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, float* %5, i64 %74
  %76 = load float, float* %75, align 4
  %77 = fsub nsz float -0.000000e+00, %76
  %78 = sub i32 %40, %11
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = load float, float* %80, align 4
  %82 = add i32 %12, %46
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float, float* %5, i64 %83
  %85 = load float, float* %84, align 4
  %86 = fsub nsz float %81, %85
  br label %87

87:                                               ; preds = %57, %72
  %88 = phi float [ %61, %57 ], [ %77, %72 ]
  %89 = phi float [ %71, %57 ], [ %86, %72 ]
  %90 = fsub nsz float %88, %45
  %91 = ashr i32 %40, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %92, i32 0
  %94 = load float, float* %93, align 4
  %95 = fmul nsz float %90, %94
  %96 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %92, i32 1
  %97 = load float, float* %96, align 4
  %98 = fmul nsz float %89, %97
  %99 = fsub nsz float %95, %98
  %100 = fmul nsz float %90, %97
  %101 = fmul nsz float %89, %94
  %102 = fadd nsz float %101, %100
  %103 = add nuw nsw i64 %38, 1
  %104 = getelementptr inbounds i32, i32* %15, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %105, %11
  %107 = add nsw i32 %105, %11
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds float, float* %5, i64 %108
  %110 = load float, float* %109, align 4
  %111 = xor i32 %105, -1
  br i1 %106, label %193, label %178

112:                                              ; preds = %47
  %113 = sext i32 %13 to i64
  br label %115

114:                                              ; preds = %115, %47
  ret void

115:                                              ; preds = %112, %115
  %116 = phi i64 [ 0, %112 ], [ %175, %115 ]
  %117 = phi i32 [ 0, %112 ], [ %176, %115 ]
  %118 = add nsw i64 %116, %113
  %119 = add nsw i32 %117, %13
  %120 = xor i64 %116, -1
  %121 = xor i32 %117, -1
  %122 = add nsw i64 %113, %120
  %123 = add nsw i32 %13, %121
  %124 = getelementptr inbounds i32, i32* %17, i64 %118
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %17, i64 %122
  %127 = load i32, i32* %126, align 4
  %128 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %49, align 8
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 %129, i32 0
  %131 = load float, float* %130, align 4
  %132 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 %129, i32 1
  %133 = load float, float* %132, align 4
  %134 = sext i32 %125 to i64
  %135 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 %134, i32 0
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 %134, i32 1
  %138 = load float, float* %137, align 4
  %139 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %118, i32 1
  %140 = load float, float* %139, align 4
  %141 = fmul nsz float %136, %140
  %142 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %118, i32 0
  %143 = load float, float* %142, align 4
  %144 = fmul nsz float %138, %143
  %145 = fsub nsz float %141, %144
  %146 = shl nsw i32 %123, 1
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %24, %147
  %149 = add nsw i64 %148, %24
  %150 = getelementptr inbounds float, float* %6, i64 %149
  store float %145, float* %150, align 4
  %151 = load float, float* %142, align 4
  %152 = fmul nsz float %136, %151
  %153 = load float, float* %139, align 4
  %154 = fmul nsz float %138, %153
  %155 = fadd nsz float %152, %154
  %156 = shl nsw i32 %119, 1
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %24, %157
  %159 = getelementptr inbounds float, float* %6, i64 %158
  store float %155, float* %159, align 4
  %160 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %122, i32 1
  %161 = load float, float* %160, align 4
  %162 = fmul nsz float %131, %161
  %163 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %122, i32 0
  %164 = load float, float* %163, align 4
  %165 = fmul nsz float %133, %164
  %166 = fsub nsz float %162, %165
  %167 = add nsw i64 %158, %24
  %168 = getelementptr inbounds float, float* %6, i64 %167
  store float %166, float* %168, align 4
  %169 = load float, float* %163, align 4
  %170 = fmul nsz float %131, %169
  %171 = load float, float* %160, align 4
  %172 = fmul nsz float %133, %171
  %173 = fadd nsz float %170, %172
  %174 = getelementptr inbounds float, float* %6, i64 %148
  store float %173, float* %174, align 4
  %175 = add nuw nsw i64 %116, 1
  %176 = add nuw nsw i32 %117, 1
  %177 = icmp slt i64 %175, %113
  br i1 %177, label %115, label %114

178:                                              ; preds = %87
  %179 = add i32 %29, %111
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float, float* %5, i64 %180
  %182 = load float, float* %181, align 4
  %183 = fsub nsz float -0.000000e+00, %182
  %184 = sub i32 %105, %11
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %5, i64 %185
  %187 = load float, float* %186, align 4
  %188 = add i32 %12, %111
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %5, i64 %189
  %191 = load float, float* %190, align 4
  %192 = fsub nsz float %187, %191
  br label %208

193:                                              ; preds = %87
  %194 = add i32 %11, %111
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %5, i64 %195
  %197 = load float, float* %196, align 4
  %198 = add nsw i32 %105, %12
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %5, i64 %199
  %201 = load float, float* %200, align 4
  %202 = add i32 %12, %111
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %5, i64 %203
  %205 = load float, float* %204, align 4
  %206 = fsub nsz float -0.000000e+00, %205
  %207 = fsub nsz float %206, %201
  br label %208

208:                                              ; preds = %193, %178
  %209 = phi float [ %197, %193 ], [ %183, %178 ]
  %210 = phi float [ %207, %193 ], [ %192, %178 ]
  %211 = fsub nsz float %209, %110
  %212 = ashr i32 %105, 1
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %213, i32 0
  %215 = load float, float* %214, align 4
  %216 = fmul nsz float %211, %215
  %217 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %213, i32 1
  %218 = load float, float* %217, align 4
  %219 = fmul nsz float %210, %218
  %220 = fsub nsz float %216, %219
  %221 = fmul nsz float %211, %218
  %222 = fmul nsz float %210, %215
  %223 = fadd nsz float %222, %221
  %224 = add nuw nsw i64 %38, 2
  %225 = getelementptr inbounds i32, i32* %15, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = icmp slt i32 %226, %11
  %228 = add nsw i32 %226, %11
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %5, i64 %229
  %231 = load float, float* %230, align 4
  %232 = xor i32 %226, -1
  br i1 %227, label %248, label %233

233:                                              ; preds = %208
  %234 = add i32 %29, %232
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds float, float* %5, i64 %235
  %237 = load float, float* %236, align 4
  %238 = fsub nsz float -0.000000e+00, %237
  %239 = sub i32 %226, %11
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds float, float* %5, i64 %240
  %242 = load float, float* %241, align 4
  %243 = add i32 %12, %232
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %5, i64 %244
  %246 = load float, float* %245, align 4
  %247 = fsub nsz float %242, %246
  br label %263

248:                                              ; preds = %208
  %249 = add i32 %11, %232
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds float, float* %5, i64 %250
  %252 = load float, float* %251, align 4
  %253 = add nsw i32 %226, %12
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %5, i64 %254
  %256 = load float, float* %255, align 4
  %257 = add i32 %12, %232
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds float, float* %5, i64 %258
  %260 = load float, float* %259, align 4
  %261 = fsub nsz float -0.000000e+00, %260
  %262 = fsub nsz float %261, %256
  br label %263

263:                                              ; preds = %248, %233
  %264 = phi float [ %252, %248 ], [ %238, %233 ]
  %265 = phi float [ %262, %248 ], [ %247, %233 ]
  %266 = fsub nsz float %264, %231
  %267 = ashr i32 %226, 1
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %268, i32 0
  %270 = load float, float* %269, align 4
  %271 = fmul nsz float %266, %270
  %272 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %268, i32 1
  %273 = load float, float* %272, align 4
  %274 = fmul nsz float %265, %273
  %275 = fsub nsz float %271, %274
  %276 = fmul nsz float %266, %273
  %277 = fmul nsz float %265, %270
  %278 = fadd nsz float %277, %276
  %279 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %30, align 8
  %280 = load i32*, i32** %31, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %36
  %282 = load i32, i32* %281, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %279, i64 %283
  %285 = fsub nsz float %220, %275
  %286 = fadd nsz float %220, %275
  %287 = fsub nsz float %223, %278
  %288 = fadd nsz float %223, %278
  %289 = fadd nsz float %102, %288
  %290 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %284, i64 0, i32 0
  store float %289, float* %290, align 4
  %291 = fadd nsz float %286, %99
  %292 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %279, i64 %283, i32 1
  store float %291, float* %292, align 4
  %293 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %294 = fmul nsz float %285, %293
  %295 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %296 = fmul nsz float %287, %295
  %297 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %298 = fmul nsz float %288, %297
  %299 = fmul nsz float %286, %297
  %300 = fsub nsz float %102, %298
  %301 = fadd nsz float %294, %300
  %302 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %284, i64 %32, i32 0
  store float %301, float* %302, align 4
  %303 = fsub nsz float %99, %299
  %304 = fsub nsz float %303, %296
  %305 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %284, i64 %32, i32 1
  store float %304, float* %305, align 4
  %306 = fsub nsz float %300, %294
  %307 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %284, i64 %33, i32 0
  store float %306, float* %307, align 4
  %308 = fadd nsz float %296, %303
  %309 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %284, i64 %33, i32 1
  store float %308, float* %309, align 4
  %310 = add nuw nsw i64 %36, 1
  %311 = icmp eq i64 %310, %34
  br i1 %311, label %47, label %35
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexFloat*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 5
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = bitcast i8* %2 to float*
  %17 = or i32 %9, 1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true), !range !3
  %19 = xor i32 %18, 31
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %20
  %22 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %21, align 8
  %23 = lshr i64 %3, 2
  %24 = mul i32 %9, 10
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %23, %26
  %28 = getelementptr inbounds float, float* %16, i64 %27
  %29 = icmp sgt i32 %9, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %4
  %31 = sext i32 %9 to i64
  %32 = mul nsw i64 %31, 3
  br label %238

33:                                               ; preds = %4
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %35 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %36 = sext i32 %9 to i64
  %37 = shl nsw i64 %36, 1
  %38 = mul nsw i64 %36, 3
  %39 = shl nsw i64 %36, 2
  %40 = zext i32 %9 to i64
  br label %41

41:                                               ; preds = %41, %33
  %42 = phi i64 [ 0, %33 ], [ %236, %41 ]
  %43 = mul i64 %42, 5
  %44 = and i64 %43, 4294967295
  %45 = getelementptr inbounds i32, i32* %13, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 0, %46
  %48 = sext i32 %47 to i64
  %49 = mul nsw i64 %23, %48
  %50 = getelementptr inbounds float, float* %28, i64 %49
  %51 = load float, float* %50, align 4
  %52 = sext i32 %46 to i64
  %53 = mul nsw i64 %23, %52
  %54 = getelementptr inbounds float, float* %16, i64 %53
  %55 = load float, float* %54, align 4
  %56 = ashr i32 %46, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %57, i32 0
  %59 = load float, float* %58, align 4
  %60 = fmul nsz float %51, %59
  %61 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %57, i32 1
  %62 = load float, float* %61, align 4
  %63 = fmul nsz float %55, %62
  %64 = fsub nsz float %60, %63
  %65 = fmul nsz float %51, %62
  %66 = fmul nsz float %55, %59
  %67 = fadd nsz float %66, %65
  %68 = add nuw nsw i64 %44, 1
  %69 = getelementptr inbounds i32, i32* %13, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sub nsw i32 0, %70
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %23, %72
  %74 = getelementptr inbounds float, float* %28, i64 %73
  %75 = load float, float* %74, align 4
  %76 = sext i32 %70 to i64
  %77 = mul nsw i64 %23, %76
  %78 = getelementptr inbounds float, float* %16, i64 %77
  %79 = load float, float* %78, align 4
  %80 = ashr i32 %70, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %81, i32 0
  %83 = load float, float* %82, align 4
  %84 = fmul nsz float %75, %83
  %85 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %81, i32 1
  %86 = load float, float* %85, align 4
  %87 = fmul nsz float %79, %86
  %88 = fsub nsz float %84, %87
  %89 = fmul nsz float %75, %86
  %90 = fmul nsz float %79, %83
  %91 = fadd nsz float %90, %89
  %92 = add nuw nsw i64 %44, 2
  %93 = getelementptr inbounds i32, i32* %13, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sub nsw i32 0, %94
  %96 = sext i32 %95 to i64
  %97 = mul nsw i64 %23, %96
  %98 = getelementptr inbounds float, float* %28, i64 %97
  %99 = load float, float* %98, align 4
  %100 = sext i32 %94 to i64
  %101 = mul nsw i64 %23, %100
  %102 = getelementptr inbounds float, float* %16, i64 %101
  %103 = load float, float* %102, align 4
  %104 = ashr i32 %94, 1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %105, i32 0
  %107 = load float, float* %106, align 4
  %108 = fmul nsz float %99, %107
  %109 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %105, i32 1
  %110 = load float, float* %109, align 4
  %111 = fmul nsz float %103, %110
  %112 = fsub nsz float %108, %111
  %113 = fmul nsz float %99, %110
  %114 = fmul nsz float %103, %107
  %115 = fadd nsz float %114, %113
  %116 = add nuw nsw i64 %44, 3
  %117 = getelementptr inbounds i32, i32* %13, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 0, %118
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %23, %120
  %122 = getelementptr inbounds float, float* %28, i64 %121
  %123 = load float, float* %122, align 4
  %124 = sext i32 %118 to i64
  %125 = mul nsw i64 %23, %124
  %126 = getelementptr inbounds float, float* %16, i64 %125
  %127 = load float, float* %126, align 4
  %128 = ashr i32 %118, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %129, i32 0
  %131 = load float, float* %130, align 4
  %132 = fmul nsz float %123, %131
  %133 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %129, i32 1
  %134 = load float, float* %133, align 4
  %135 = fmul nsz float %127, %134
  %136 = fsub nsz float %132, %135
  %137 = fmul nsz float %123, %134
  %138 = fmul nsz float %127, %131
  %139 = fadd nsz float %138, %137
  %140 = add nuw nsw i64 %44, 4
  %141 = getelementptr inbounds i32, i32* %13, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = sub nsw i32 0, %142
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %23, %144
  %146 = getelementptr inbounds float, float* %28, i64 %145
  %147 = load float, float* %146, align 4
  %148 = sext i32 %142 to i64
  %149 = mul nsw i64 %23, %148
  %150 = getelementptr inbounds float, float* %16, i64 %149
  %151 = load float, float* %150, align 4
  %152 = ashr i32 %142, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %153, i32 0
  %155 = load float, float* %154, align 4
  %156 = fmul nsz float %147, %155
  %157 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %153, i32 1
  %158 = load float, float* %157, align 4
  %159 = fmul nsz float %151, %158
  %160 = fsub nsz float %156, %159
  %161 = fmul nsz float %147, %158
  %162 = fmul nsz float %151, %155
  %163 = fadd nsz float %162, %161
  %164 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %34, align 8
  %165 = load i32*, i32** %35, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %42
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %164, i64 %168
  %170 = fsub nsz float %88, %160
  %171 = fadd nsz float %88, %160
  %172 = fsub nsz float %91, %163
  %173 = fadd nsz float %91, %163
  %174 = fsub nsz float %112, %136
  %175 = fadd nsz float %112, %136
  %176 = fsub nsz float %115, %139
  %177 = fadd nsz float %115, %139
  %178 = fadd nsz float %171, %64
  %179 = fadd nsz float %175, %178
  %180 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 0, i32 0
  store float %179, float* %180, align 4
  %181 = fadd nsz float %173, %67
  %182 = fadd nsz float %177, %181
  %183 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %164, i64 %168, i32 1
  store float %182, float* %183, align 4
  %184 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %185 = fmul nsz float %175, %184
  %186 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %187 = fmul nsz float %171, %186
  %188 = fsub nsz float %185, %187
  %189 = fmul nsz float %171, %184
  %190 = fmul nsz float %175, %186
  %191 = fsub nsz float %189, %190
  %192 = fmul nsz float %177, %184
  %193 = fmul nsz float %173, %186
  %194 = fsub nsz float %192, %193
  %195 = fmul nsz float %173, %184
  %196 = fmul nsz float %177, %186
  %197 = fsub nsz float %195, %196
  %198 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %199 = fmul nsz float %176, %198
  %200 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %201 = fmul nsz float %172, %200
  %202 = fsub nsz float %199, %201
  %203 = fmul nsz float %172, %198
  %204 = fmul nsz float %176, %200
  %205 = fadd nsz float %203, %204
  %206 = fmul nsz float %174, %198
  %207 = fmul nsz float %170, %200
  %208 = fsub nsz float %206, %207
  %209 = fmul nsz float %170, %198
  %210 = fmul nsz float %174, %200
  %211 = fadd nsz float %209, %210
  %212 = fsub nsz float %191, %205
  %213 = fadd nsz float %191, %205
  %214 = fsub nsz float %197, %211
  %215 = fadd nsz float %197, %211
  %216 = fsub nsz float %188, %202
  %217 = fadd nsz float %188, %202
  %218 = fsub nsz float %194, %208
  %219 = fadd nsz float %194, %208
  %220 = fadd nsz float %64, %213
  %221 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %36, i32 0
  store float %220, float* %221, align 4
  %222 = fadd nsz float %67, %214
  %223 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %36, i32 1
  store float %222, float* %223, align 4
  %224 = fadd nsz float %64, %216
  %225 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %37, i32 0
  store float %224, float* %225, align 4
  %226 = fadd nsz float %67, %219
  %227 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %37, i32 1
  store float %226, float* %227, align 4
  %228 = fadd nsz float %64, %217
  %229 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %38, i32 0
  store float %228, float* %229, align 4
  %230 = fadd nsz float %67, %218
  %231 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %38, i32 1
  store float %230, float* %231, align 4
  %232 = fadd nsz float %64, %212
  %233 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %39, i32 0
  store float %232, float* %233, align 4
  %234 = fadd nsz float %67, %215
  %235 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %169, i64 %39, i32 1
  store float %234, float* %235, align 4
  %236 = add nuw nsw i64 %42, 1
  %237 = icmp eq i64 %236, %40
  br i1 %237, label %238, label %41

238:                                              ; preds = %41, %30
  %239 = phi i64 [ %32, %30 ], [ %38, %41 ]
  %240 = phi i64 [ %31, %30 ], [ %36, %41 ]
  %241 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %242 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  tail call void %22(%struct.AVComplexFloat* %242) #8
  %243 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  %244 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %243, i64 %240
  tail call void %22(%struct.AVComplexFloat* %244) #8
  %245 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  %246 = shl nsw i64 %240, 1
  %247 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %245, i64 %246
  tail call void %22(%struct.AVComplexFloat* %247) #8
  %248 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  %249 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %248, i64 %239
  tail call void %22(%struct.AVComplexFloat* %249) #8
  %250 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  %251 = shl nsw i64 %240, 2
  %252 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %250, i64 %251
  tail call void %22(%struct.AVComplexFloat* %252) #8
  %253 = icmp sgt i32 %10, 1
  br i1 %253, label %254, label %256

254:                                              ; preds = %238
  %255 = sext i32 %11 to i64
  br label %257

256:                                              ; preds = %257, %238
  ret void

257:                                              ; preds = %254, %257
  %258 = phi i64 [ 0, %254 ], [ %305, %257 ]
  %259 = add nsw i64 %258, %255
  %260 = xor i64 %258, -1
  %261 = add nsw i64 %255, %260
  %262 = getelementptr inbounds i32, i32* %15, i64 %259
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %15, i64 %261
  %265 = load i32, i32* %264, align 4
  %266 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %241, align 8
  %267 = sext i32 %265 to i64
  %268 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %266, i64 %267, i32 1
  %269 = load float, float* %268, align 4
  %270 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %266, i64 %267, i32 0
  %271 = load float, float* %270, align 4
  %272 = sext i32 %263 to i64
  %273 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %266, i64 %272, i32 1
  %274 = load float, float* %273, align 4
  %275 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %266, i64 %272, i32 0
  %276 = load float, float* %275, align 4
  %277 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %261, i32 1
  %278 = load float, float* %277, align 4
  %279 = fmul nsz float %269, %278
  %280 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %261, i32 0
  %281 = load float, float* %280, align 4
  %282 = fmul nsz float %271, %281
  %283 = fsub nsz float %279, %282
  %284 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %261, i32 0
  store float %283, float* %284, align 4
  %285 = load float, float* %280, align 4
  %286 = fmul nsz float %269, %285
  %287 = load float, float* %277, align 4
  %288 = fmul nsz float %271, %287
  %289 = fadd nsz float %286, %288
  %290 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %259, i32 1
  store float %289, float* %290, align 4
  %291 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %259, i32 1
  %292 = load float, float* %291, align 4
  %293 = fmul nsz float %274, %292
  %294 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %259, i32 0
  %295 = load float, float* %294, align 4
  %296 = fmul nsz float %276, %295
  %297 = fsub nsz float %293, %296
  %298 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %259, i32 0
  store float %297, float* %298, align 4
  %299 = load float, float* %294, align 4
  %300 = fmul nsz float %274, %299
  %301 = load float, float* %291, align 4
  %302 = fmul nsz float %276, %301
  %303 = fadd nsz float %300, %302
  %304 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %261, i32 1
  store float %303, float* %304, align 4
  %305 = add nuw nsw i64 %258, 1
  %306 = icmp slt i64 %305, %255
  br i1 %306, label %257, label %256
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [5 x %struct.AVComplexFloat], align 16
  %6 = bitcast i8* %2 to float*
  %7 = bitcast i8* %1 to float*
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %9 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %8, align 8
  %10 = bitcast [5 x %struct.AVComplexFloat]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 40, i1 false)
  %11 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 5
  %14 = mul i32 %12, 15
  %15 = ashr i32 %13, 1
  %16 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = or i32 %12, 1
  %21 = tail call i32 @llvm.ctlz.i32(i32 %20, i1 true), !range !3
  %22 = xor i32 %21, 31
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %23
  %25 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %24, align 8
  %26 = lshr i64 %3, 2
  %27 = icmp sgt i32 %12, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %4
  %29 = sext i32 %12 to i64
  %30 = mul nsw i64 %29, 3
  br label %54

31:                                               ; preds = %4
  %32 = mul i32 %12, 25
  %33 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %35 = sext i32 %12 to i64
  %36 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 0
  %37 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 0
  %38 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 1
  %39 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 1
  %40 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 0
  %41 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 0
  %42 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 1
  %43 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 1
  %44 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 0
  %45 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 1
  %46 = shl nsw i64 %35, 1
  %47 = mul nsw i64 %35, 3
  %48 = shl nsw i64 %35, 2
  %49 = zext i32 %12 to i64
  br label %50

50:                                               ; preds = %70, %31
  %51 = phi i64 [ 0, %31 ], [ %153, %70 ]
  %52 = mul i64 %51, 5
  %53 = and i64 %52, 4294967295
  br label %155

54:                                               ; preds = %70, %28
  %55 = phi i64 [ %30, %28 ], [ %47, %70 ]
  %56 = phi i64 [ %29, %28 ], [ %35, %70 ]
  %57 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %58 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  tail call void %25(%struct.AVComplexFloat* %58) #8
  %59 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  %60 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %59, i64 %56
  tail call void %25(%struct.AVComplexFloat* %60) #8
  %61 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  %62 = shl nsw i64 %56, 1
  %63 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %61, i64 %62
  tail call void %25(%struct.AVComplexFloat* %63) #8
  %64 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  %65 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %64, i64 %55
  tail call void %25(%struct.AVComplexFloat* %65) #8
  %66 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  %67 = shl nsw i64 %56, 2
  %68 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %66, i64 %67
  tail call void %25(%struct.AVComplexFloat* %68) #8
  %69 = icmp sgt i32 %13, 1
  br i1 %69, label %216, label %218

70:                                               ; preds = %196
  %71 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %33, align 8
  %72 = load i32*, i32** %34, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %51
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %71, i64 %75
  %77 = load float, float* %36, align 8
  %78 = load float, float* %37, align 16
  %79 = fsub nsz float %77, %78
  %80 = fadd nsz float %77, %78
  %81 = load float, float* %38, align 4
  %82 = load float, float* %39, align 4
  %83 = fsub nsz float %81, %82
  %84 = fadd nsz float %81, %82
  %85 = load float, float* %40, align 16
  %86 = load float, float* %41, align 8
  %87 = fsub nsz float %85, %86
  %88 = fadd nsz float %85, %86
  %89 = load float, float* %42, align 4
  %90 = load float, float* %43, align 4
  %91 = fsub nsz float %89, %90
  %92 = fadd nsz float %89, %90
  %93 = load float, float* %44, align 16
  %94 = fadd nsz float %80, %93
  %95 = fadd nsz float %88, %94
  %96 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 0, i32 0
  store float %95, float* %96, align 4
  %97 = load float, float* %45, align 4
  %98 = fadd nsz float %84, %97
  %99 = fadd nsz float %92, %98
  %100 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %71, i64 %75, i32 1
  store float %99, float* %100, align 4
  %101 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %102 = fmul nsz float %88, %101
  %103 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %104 = fmul nsz float %80, %103
  %105 = fsub nsz float %102, %104
  %106 = fmul nsz float %80, %101
  %107 = fmul nsz float %88, %103
  %108 = fsub nsz float %106, %107
  %109 = fmul nsz float %92, %101
  %110 = fmul nsz float %84, %103
  %111 = fsub nsz float %109, %110
  %112 = fmul nsz float %84, %101
  %113 = fmul nsz float %92, %103
  %114 = fsub nsz float %112, %113
  %115 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %116 = fmul nsz float %91, %115
  %117 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %118 = fmul nsz float %83, %117
  %119 = fsub nsz float %116, %118
  %120 = fmul nsz float %83, %115
  %121 = fmul nsz float %91, %117
  %122 = fadd nsz float %120, %121
  %123 = fmul nsz float %87, %115
  %124 = fmul nsz float %79, %117
  %125 = fsub nsz float %123, %124
  %126 = fmul nsz float %79, %115
  %127 = fmul nsz float %87, %117
  %128 = fadd nsz float %126, %127
  %129 = fsub nsz float %108, %122
  %130 = fadd nsz float %108, %122
  %131 = fsub nsz float %114, %128
  %132 = fadd nsz float %114, %128
  %133 = fsub nsz float %105, %119
  %134 = fadd nsz float %105, %119
  %135 = fsub nsz float %111, %125
  %136 = fadd nsz float %111, %125
  %137 = fadd nsz float %93, %130
  %138 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %35, i32 0
  store float %137, float* %138, align 4
  %139 = fadd nsz float %97, %131
  %140 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %35, i32 1
  store float %139, float* %140, align 4
  %141 = fadd nsz float %93, %133
  %142 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %46, i32 0
  store float %141, float* %142, align 4
  %143 = fadd nsz float %97, %136
  %144 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %46, i32 1
  store float %143, float* %144, align 4
  %145 = fadd nsz float %93, %134
  %146 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %47, i32 0
  store float %145, float* %146, align 4
  %147 = fadd nsz float %97, %135
  %148 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %47, i32 1
  store float %147, float* %148, align 4
  %149 = fadd nsz float %93, %129
  %150 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %48, i32 0
  store float %149, float* %150, align 4
  %151 = fadd nsz float %97, %132
  %152 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %76, i64 %48, i32 1
  store float %151, float* %152, align 4
  %153 = add nuw nsw i64 %51, 1
  %154 = icmp eq i64 %153, %49
  br i1 %154, label %54, label %50

155:                                              ; preds = %196, %50
  %156 = phi i64 [ 0, %50 ], [ %214, %196 ]
  %157 = add nuw nsw i64 %156, %53
  %158 = getelementptr inbounds i32, i32* %17, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %159, %13
  %161 = add nsw i32 %159, %13
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds float, float* %6, i64 %162
  %164 = load float, float* %163, align 4
  %165 = xor i32 %159, -1
  br i1 %160, label %166, label %181

166:                                              ; preds = %155
  %167 = add i32 %13, %165
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds float, float* %6, i64 %168
  %170 = load float, float* %169, align 4
  %171 = add nsw i32 %159, %14
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds float, float* %6, i64 %172
  %174 = load float, float* %173, align 4
  %175 = add i32 %14, %165
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float* %6, i64 %176
  %178 = load float, float* %177, align 4
  %179 = fsub nsz float -0.000000e+00, %178
  %180 = fsub nsz float %179, %174
  br label %196

181:                                              ; preds = %155
  %182 = add i32 %32, %165
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float* %6, i64 %183
  %185 = load float, float* %184, align 4
  %186 = fsub nsz float -0.000000e+00, %185
  %187 = sub i32 %159, %13
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float* %6, i64 %188
  %190 = load float, float* %189, align 4
  %191 = add i32 %14, %165
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %6, i64 %192
  %194 = load float, float* %193, align 4
  %195 = fsub nsz float %190, %194
  br label %196

196:                                              ; preds = %166, %181
  %197 = phi float [ %170, %166 ], [ %186, %181 ]
  %198 = phi float [ %180, %166 ], [ %195, %181 ]
  %199 = fsub nsz float %197, %164
  %200 = ashr i32 %159, 1
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %201, i32 0
  %203 = load float, float* %202, align 4
  %204 = fmul nsz float %199, %203
  %205 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %201, i32 1
  %206 = load float, float* %205, align 4
  %207 = fmul nsz float %198, %206
  %208 = fsub nsz float %204, %207
  %209 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 %156, i32 1
  store float %208, float* %209, align 4
  %210 = fmul nsz float %199, %206
  %211 = fmul nsz float %198, %203
  %212 = fadd nsz float %211, %210
  %213 = getelementptr inbounds [5 x %struct.AVComplexFloat], [5 x %struct.AVComplexFloat]* %5, i64 0, i64 %156, i32 0
  store float %212, float* %213, align 8
  %214 = add nuw nsw i64 %156, 1
  %215 = icmp eq i64 %214, 5
  br i1 %215, label %70, label %155

216:                                              ; preds = %54
  %217 = sext i32 %15 to i64
  br label %219

218:                                              ; preds = %219, %54
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  ret void

219:                                              ; preds = %216, %219
  %220 = phi i64 [ 0, %216 ], [ %279, %219 ]
  %221 = phi i32 [ 0, %216 ], [ %280, %219 ]
  %222 = add nsw i64 %220, %217
  %223 = add nsw i32 %221, %15
  %224 = xor i64 %220, -1
  %225 = xor i32 %221, -1
  %226 = add nsw i64 %217, %224
  %227 = add nsw i32 %15, %225
  %228 = getelementptr inbounds i32, i32* %19, i64 %222
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds i32, i32* %19, i64 %226
  %231 = load i32, i32* %230, align 4
  %232 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %57, align 8
  %233 = sext i32 %231 to i64
  %234 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %232, i64 %233, i32 0
  %235 = load float, float* %234, align 4
  %236 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %232, i64 %233, i32 1
  %237 = load float, float* %236, align 4
  %238 = sext i32 %229 to i64
  %239 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %232, i64 %238, i32 0
  %240 = load float, float* %239, align 4
  %241 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %232, i64 %238, i32 1
  %242 = load float, float* %241, align 4
  %243 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %222, i32 1
  %244 = load float, float* %243, align 4
  %245 = fmul nsz float %240, %244
  %246 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %222, i32 0
  %247 = load float, float* %246, align 4
  %248 = fmul nsz float %242, %247
  %249 = fsub nsz float %245, %248
  %250 = shl nsw i32 %227, 1
  %251 = sext i32 %250 to i64
  %252 = mul nsw i64 %26, %251
  %253 = add nsw i64 %252, %26
  %254 = getelementptr inbounds float, float* %7, i64 %253
  store float %249, float* %254, align 4
  %255 = load float, float* %246, align 4
  %256 = fmul nsz float %240, %255
  %257 = load float, float* %243, align 4
  %258 = fmul nsz float %242, %257
  %259 = fadd nsz float %256, %258
  %260 = shl nsw i32 %223, 1
  %261 = sext i32 %260 to i64
  %262 = mul nsw i64 %26, %261
  %263 = getelementptr inbounds float, float* %7, i64 %262
  store float %259, float* %263, align 4
  %264 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %226, i32 1
  %265 = load float, float* %264, align 4
  %266 = fmul nsz float %235, %265
  %267 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %226, i32 0
  %268 = load float, float* %267, align 4
  %269 = fmul nsz float %237, %268
  %270 = fsub nsz float %266, %269
  %271 = add nsw i64 %262, %26
  %272 = getelementptr inbounds float, float* %7, i64 %271
  store float %270, float* %272, align 4
  %273 = load float, float* %267, align 4
  %274 = fmul nsz float %235, %273
  %275 = load float, float* %264, align 4
  %276 = fmul nsz float %237, %275
  %277 = fadd nsz float %274, %276
  %278 = getelementptr inbounds float, float* %7, i64 %252
  store float %277, float* %278, align 4
  %279 = add nuw nsw i64 %220, 1
  %280 = add nuw nsw i32 %221, 1
  %281 = icmp slt i64 %279, %217
  br i1 %281, label %219, label %218
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexFloat], align 16
  %6 = bitcast [15 x %struct.AVComplexFloat]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 120, i1 false)
  %7 = bitcast i8* %1 to %struct.AVComplexFloat*
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %9 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %8, align 8
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 %11, 15
  %13 = ashr i32 %12, 1
  %14 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %15 = load i32*, i32** %14, align 8
  %16 = sext i32 %12 to i64
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  %18 = bitcast i8* %2 to float*
  %19 = or i32 %11, 1
  %20 = tail call i32 @llvm.ctlz.i32(i32 %19, i1 true), !range !3
  %21 = xor i32 %20, 31
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %22
  %24 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %23, align 8
  %25 = lshr i64 %3, 2
  %26 = mul i32 %11, 30
  %27 = add nsw i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %25, %28
  %30 = getelementptr inbounds float, float* %18, i64 %29
  %31 = icmp sgt i32 %11, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %4
  %33 = sext i32 %11 to i64
  %34 = mul nsw i64 %33, 3
  %35 = mul nsw i64 %33, 5
  %36 = mul nsw i64 %33, 6
  %37 = mul nsw i64 %33, 7
  %38 = mul nsw i64 %33, 9
  %39 = mul nsw i64 %33, 10
  %40 = mul nsw i64 %33, 11
  %41 = mul nsw i64 %33, 12
  %42 = mul nsw i64 %33, 13
  %43 = mul nsw i64 %33, 14
  br label %96

44:                                               ; preds = %4
  %45 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %46 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %47 = sext i32 %11 to i64
  %48 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 1
  %49 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 1
  %50 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 0
  %51 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 0
  %52 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 0
  %53 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 1
  %54 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 1
  %55 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 1
  %56 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 0
  %57 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 0
  %58 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 0
  %59 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 1
  %60 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 1
  %61 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 1
  %62 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 0
  %63 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 0
  %64 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 0
  %65 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 1
  %66 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 1
  %67 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 1
  %68 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 0
  %69 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 0
  %70 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 0
  %71 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 1
  %72 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 1
  %73 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14, i32 1
  %74 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 0
  %75 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14, i32 0
  %76 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 0
  %77 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 1
  %78 = mul nsw i64 %47, 6
  %79 = mul nsw i64 %47, 12
  %80 = mul nsw i64 %47, 3
  %81 = mul nsw i64 %47, 9
  %82 = mul nsw i64 %47, 10
  %83 = mul nsw i64 %47, 7
  %84 = mul nsw i64 %47, 13
  %85 = shl nsw i64 %47, 2
  %86 = mul nsw i64 %47, 5
  %87 = mul nsw i64 %47, 11
  %88 = shl nsw i64 %47, 1
  %89 = shl nsw i64 %47, 3
  %90 = mul nsw i64 %47, 14
  %91 = zext i32 %11 to i64
  br label %92

92:                                               ; preds = %142, %44
  %93 = phi i64 [ 0, %44 ], [ %460, %142 ]
  %94 = mul i64 %93, 15
  %95 = and i64 %94, 4294967295
  br label %462

96:                                               ; preds = %142, %32
  %97 = phi i64 [ %43, %32 ], [ %90, %142 ]
  %98 = phi i64 [ %42, %32 ], [ %84, %142 ]
  %99 = phi i64 [ %41, %32 ], [ %79, %142 ]
  %100 = phi i64 [ %40, %32 ], [ %87, %142 ]
  %101 = phi i64 [ %39, %32 ], [ %82, %142 ]
  %102 = phi i64 [ %38, %32 ], [ %81, %142 ]
  %103 = phi i64 [ %37, %32 ], [ %83, %142 ]
  %104 = phi i64 [ %36, %32 ], [ %78, %142 ]
  %105 = phi i64 [ %35, %32 ], [ %86, %142 ]
  %106 = phi i64 [ %34, %32 ], [ %80, %142 ]
  %107 = phi i64 [ %33, %32 ], [ %47, %142 ]
  %108 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %109 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  tail call void %24(%struct.AVComplexFloat* %109) #8
  %110 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %111 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %110, i64 %107
  tail call void %24(%struct.AVComplexFloat* %111) #8
  %112 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %113 = shl nsw i64 %107, 1
  %114 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %112, i64 %113
  tail call void %24(%struct.AVComplexFloat* %114) #8
  %115 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %116 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %115, i64 %106
  tail call void %24(%struct.AVComplexFloat* %116) #8
  %117 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %118 = shl nsw i64 %107, 2
  %119 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %117, i64 %118
  tail call void %24(%struct.AVComplexFloat* %119) #8
  %120 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %121 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %120, i64 %105
  tail call void %24(%struct.AVComplexFloat* %121) #8
  %122 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %123 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %122, i64 %104
  tail call void %24(%struct.AVComplexFloat* %123) #8
  %124 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %125 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %124, i64 %103
  tail call void %24(%struct.AVComplexFloat* %125) #8
  %126 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %127 = shl nsw i64 %107, 3
  %128 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %126, i64 %127
  tail call void %24(%struct.AVComplexFloat* %128) #8
  %129 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %130 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %129, i64 %102
  tail call void %24(%struct.AVComplexFloat* %130) #8
  %131 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %132 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %131, i64 %101
  tail call void %24(%struct.AVComplexFloat* %132) #8
  %133 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %134 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %133, i64 %100
  tail call void %24(%struct.AVComplexFloat* %134) #8
  %135 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %136 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %135, i64 %99
  tail call void %24(%struct.AVComplexFloat* %136) #8
  %137 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %138 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %137, i64 %98
  tail call void %24(%struct.AVComplexFloat* %138) #8
  %139 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %140 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %139, i64 %97
  tail call void %24(%struct.AVComplexFloat* %140) #8
  %141 = icmp sgt i32 %12, 1
  br i1 %141, label %494, label %496

142:                                              ; preds = %462
  %143 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %45, align 8
  %144 = load i32*, i32** %46, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 %93
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %143, i64 %147
  %149 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %150 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %151 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %152 = load float, float* %48, align 4
  %153 = load float, float* %49, align 4
  %154 = fsub nsz float %152, %153
  %155 = fadd nsz float %152, %153
  %156 = load float, float* %50, align 8
  %157 = load float, float* %51, align 16
  %158 = fsub nsz float %156, %157
  %159 = fadd nsz float %156, %157
  %160 = load float, float* %52, align 16
  %161 = fadd nsz float %160, %159
  %162 = load float, float* %53, align 4
  %163 = fadd nsz float %155, %162
  %164 = fmul nsz float %149, %154
  %165 = fmul nsz float %150, %158
  %166 = fmul nsz float %151, %159
  %167 = fmul nsz float %151, %155
  %168 = fsub nsz float %160, %166
  %169 = fadd nsz float %164, %168
  %170 = fsub nsz float %162, %167
  %171 = fsub nsz float %170, %165
  %172 = fsub nsz float %168, %164
  %173 = fadd nsz float %165, %170
  %174 = load float, float* %54, align 4
  %175 = load float, float* %55, align 4
  %176 = fsub nsz float %174, %175
  %177 = fadd nsz float %174, %175
  %178 = load float, float* %56, align 16
  %179 = load float, float* %57, align 8
  %180 = fsub nsz float %178, %179
  %181 = fadd nsz float %178, %179
  %182 = load float, float* %58, align 8
  %183 = fadd nsz float %182, %181
  %184 = load float, float* %59, align 4
  %185 = fadd nsz float %177, %184
  %186 = fmul nsz float %149, %176
  %187 = fmul nsz float %150, %180
  %188 = fmul nsz float %151, %181
  %189 = fmul nsz float %151, %177
  %190 = fsub nsz float %182, %188
  %191 = fadd nsz float %186, %190
  %192 = fsub nsz float %184, %189
  %193 = fsub nsz float %192, %187
  %194 = fsub nsz float %190, %186
  %195 = fadd nsz float %187, %192
  %196 = load float, float* %60, align 4
  %197 = load float, float* %61, align 4
  %198 = fsub nsz float %196, %197
  %199 = fadd nsz float %196, %197
  %200 = load float, float* %62, align 8
  %201 = load float, float* %63, align 16
  %202 = fsub nsz float %200, %201
  %203 = fadd nsz float %200, %201
  %204 = load float, float* %64, align 16
  %205 = fadd nsz float %204, %203
  %206 = load float, float* %65, align 4
  %207 = fadd nsz float %199, %206
  %208 = fmul nsz float %149, %198
  %209 = fmul nsz float %150, %202
  %210 = fmul nsz float %151, %203
  %211 = fmul nsz float %151, %199
  %212 = fsub nsz float %204, %210
  %213 = fadd nsz float %208, %212
  %214 = fsub nsz float %206, %211
  %215 = fsub nsz float %214, %209
  %216 = fsub nsz float %212, %208
  %217 = fadd nsz float %209, %214
  %218 = load float, float* %66, align 4
  %219 = load float, float* %67, align 4
  %220 = fsub nsz float %218, %219
  %221 = fadd nsz float %218, %219
  %222 = load float, float* %68, align 16
  %223 = load float, float* %69, align 8
  %224 = fsub nsz float %222, %223
  %225 = fadd nsz float %222, %223
  %226 = load float, float* %70, align 8
  %227 = fadd nsz float %226, %225
  %228 = load float, float* %71, align 4
  %229 = fadd nsz float %221, %228
  %230 = fmul nsz float %149, %220
  %231 = fmul nsz float %150, %224
  %232 = fmul nsz float %151, %225
  %233 = fmul nsz float %151, %221
  %234 = fsub nsz float %226, %232
  %235 = fadd nsz float %230, %234
  %236 = fsub nsz float %228, %233
  %237 = fsub nsz float %236, %231
  %238 = fsub nsz float %234, %230
  %239 = fadd nsz float %231, %236
  %240 = load float, float* %72, align 4
  %241 = load float, float* %73, align 4
  %242 = fsub nsz float %240, %241
  %243 = fadd nsz float %240, %241
  %244 = load float, float* %74, align 8
  %245 = load float, float* %75, align 16
  %246 = fsub nsz float %244, %245
  %247 = fadd nsz float %244, %245
  %248 = load float, float* %76, align 16
  %249 = fadd nsz float %248, %247
  %250 = load float, float* %77, align 4
  %251 = fadd nsz float %243, %250
  %252 = fmul nsz float %149, %242
  %253 = fmul nsz float %150, %246
  %254 = fmul nsz float %151, %247
  %255 = fmul nsz float %151, %243
  %256 = fsub nsz float %248, %254
  %257 = fadd nsz float %252, %256
  %258 = fsub nsz float %250, %255
  %259 = fsub nsz float %258, %253
  %260 = fsub nsz float %256, %252
  %261 = fadd nsz float %253, %258
  %262 = fsub nsz float %183, %249
  %263 = fadd nsz float %183, %249
  %264 = fsub nsz float %185, %251
  %265 = fadd nsz float %185, %251
  %266 = fsub nsz float %205, %227
  %267 = fadd nsz float %205, %227
  %268 = fsub nsz float %207, %229
  %269 = fadd nsz float %207, %229
  %270 = fadd nsz float %161, %263
  %271 = fadd nsz float %267, %270
  %272 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 0, i32 0
  store float %271, float* %272, align 4
  %273 = fadd nsz float %163, %265
  %274 = fadd nsz float %269, %273
  %275 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %143, i64 %147, i32 1
  store float %274, float* %275, align 4
  %276 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %277 = fmul nsz float %267, %276
  %278 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %279 = fmul nsz float %263, %278
  %280 = fsub nsz float %277, %279
  %281 = fmul nsz float %263, %276
  %282 = fmul nsz float %267, %278
  %283 = fsub nsz float %281, %282
  %284 = fmul nsz float %269, %276
  %285 = fmul nsz float %265, %278
  %286 = fsub nsz float %284, %285
  %287 = fmul nsz float %265, %276
  %288 = fmul nsz float %269, %278
  %289 = fsub nsz float %287, %288
  %290 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %291 = fmul nsz float %268, %290
  %292 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %293 = fmul nsz float %264, %292
  %294 = fsub nsz float %291, %293
  %295 = fmul nsz float %264, %290
  %296 = fmul nsz float %268, %292
  %297 = fadd nsz float %295, %296
  %298 = fmul nsz float %266, %290
  %299 = fmul nsz float %262, %292
  %300 = fsub nsz float %298, %299
  %301 = fmul nsz float %262, %290
  %302 = fmul nsz float %266, %292
  %303 = fadd nsz float %301, %302
  %304 = fsub nsz float %283, %297
  %305 = fadd nsz float %283, %297
  %306 = fsub nsz float %289, %303
  %307 = fadd nsz float %289, %303
  %308 = fsub nsz float %280, %294
  %309 = fadd nsz float %280, %294
  %310 = fsub nsz float %286, %300
  %311 = fadd nsz float %286, %300
  %312 = fadd nsz float %161, %305
  %313 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %78, i32 0
  store float %312, float* %313, align 4
  %314 = fadd nsz float %163, %306
  %315 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %78, i32 1
  store float %314, float* %315, align 4
  %316 = fadd nsz float %161, %308
  %317 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %79, i32 0
  store float %316, float* %317, align 4
  %318 = fadd nsz float %163, %311
  %319 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %79, i32 1
  store float %318, float* %319, align 4
  %320 = fadd nsz float %161, %309
  %321 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %80, i32 0
  store float %320, float* %321, align 4
  %322 = fadd nsz float %163, %310
  %323 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %80, i32 1
  store float %322, float* %323, align 4
  %324 = fadd nsz float %161, %304
  %325 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %81, i32 0
  store float %324, float* %325, align 4
  %326 = fadd nsz float %163, %307
  %327 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %81, i32 1
  store float %326, float* %327, align 4
  %328 = fsub nsz float %191, %257
  %329 = fadd nsz float %191, %257
  %330 = fsub nsz float %193, %259
  %331 = fadd nsz float %193, %259
  %332 = fsub nsz float %213, %235
  %333 = fadd nsz float %213, %235
  %334 = fsub nsz float %215, %237
  %335 = fadd nsz float %215, %237
  %336 = fadd nsz float %169, %329
  %337 = fadd nsz float %333, %336
  %338 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %82, i32 0
  store float %337, float* %338, align 4
  %339 = fadd nsz float %171, %331
  %340 = fadd nsz float %335, %339
  %341 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %82, i32 1
  store float %340, float* %341, align 4
  %342 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %343 = fmul nsz float %333, %342
  %344 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %345 = fmul nsz float %329, %344
  %346 = fsub nsz float %343, %345
  %347 = fmul nsz float %329, %342
  %348 = fmul nsz float %333, %344
  %349 = fsub nsz float %347, %348
  %350 = fmul nsz float %335, %342
  %351 = fmul nsz float %331, %344
  %352 = fsub nsz float %350, %351
  %353 = fmul nsz float %331, %342
  %354 = fmul nsz float %335, %344
  %355 = fsub nsz float %353, %354
  %356 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %357 = fmul nsz float %334, %356
  %358 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %359 = fmul nsz float %330, %358
  %360 = fsub nsz float %357, %359
  %361 = fmul nsz float %330, %356
  %362 = fmul nsz float %334, %358
  %363 = fadd nsz float %361, %362
  %364 = fmul nsz float %332, %356
  %365 = fmul nsz float %328, %358
  %366 = fsub nsz float %364, %365
  %367 = fmul nsz float %328, %356
  %368 = fmul nsz float %332, %358
  %369 = fadd nsz float %367, %368
  %370 = fsub nsz float %349, %363
  %371 = fadd nsz float %349, %363
  %372 = fsub nsz float %355, %369
  %373 = fadd nsz float %355, %369
  %374 = fsub nsz float %346, %360
  %375 = fadd nsz float %346, %360
  %376 = fsub nsz float %352, %366
  %377 = fadd nsz float %352, %366
  %378 = fadd nsz float %169, %371
  %379 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %47, i32 0
  store float %378, float* %379, align 4
  %380 = fadd nsz float %171, %372
  %381 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %47, i32 1
  store float %380, float* %381, align 4
  %382 = fadd nsz float %169, %374
  %383 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %83, i32 0
  store float %382, float* %383, align 4
  %384 = fadd nsz float %171, %377
  %385 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %83, i32 1
  store float %384, float* %385, align 4
  %386 = fadd nsz float %169, %375
  %387 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %84, i32 0
  store float %386, float* %387, align 4
  %388 = fadd nsz float %171, %376
  %389 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %84, i32 1
  store float %388, float* %389, align 4
  %390 = fadd nsz float %169, %370
  %391 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %85, i32 0
  store float %390, float* %391, align 4
  %392 = fadd nsz float %171, %373
  %393 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %85, i32 1
  store float %392, float* %393, align 4
  %394 = fsub nsz float %194, %260
  %395 = fadd nsz float %194, %260
  %396 = fsub nsz float %195, %261
  %397 = fadd nsz float %195, %261
  %398 = fsub nsz float %216, %238
  %399 = fadd nsz float %216, %238
  %400 = fsub nsz float %217, %239
  %401 = fadd nsz float %217, %239
  %402 = fadd nsz float %172, %395
  %403 = fadd nsz float %399, %402
  %404 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %86, i32 0
  store float %403, float* %404, align 4
  %405 = fadd nsz float %173, %397
  %406 = fadd nsz float %401, %405
  %407 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %86, i32 1
  store float %406, float* %407, align 4
  %408 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %409 = fmul nsz float %399, %408
  %410 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %411 = fmul nsz float %395, %410
  %412 = fsub nsz float %409, %411
  %413 = fmul nsz float %395, %408
  %414 = fmul nsz float %399, %410
  %415 = fsub nsz float %413, %414
  %416 = fmul nsz float %401, %408
  %417 = fmul nsz float %397, %410
  %418 = fsub nsz float %416, %417
  %419 = fmul nsz float %397, %408
  %420 = fmul nsz float %401, %410
  %421 = fsub nsz float %419, %420
  %422 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %423 = fmul nsz float %400, %422
  %424 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %425 = fmul nsz float %396, %424
  %426 = fsub nsz float %423, %425
  %427 = fmul nsz float %396, %422
  %428 = fmul nsz float %400, %424
  %429 = fadd nsz float %427, %428
  %430 = fmul nsz float %398, %422
  %431 = fmul nsz float %394, %424
  %432 = fsub nsz float %430, %431
  %433 = fmul nsz float %394, %422
  %434 = fmul nsz float %398, %424
  %435 = fadd nsz float %433, %434
  %436 = fsub nsz float %415, %429
  %437 = fadd nsz float %415, %429
  %438 = fsub nsz float %421, %435
  %439 = fadd nsz float %421, %435
  %440 = fsub nsz float %412, %426
  %441 = fadd nsz float %412, %426
  %442 = fsub nsz float %418, %432
  %443 = fadd nsz float %418, %432
  %444 = fadd nsz float %172, %437
  %445 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %87, i32 0
  store float %444, float* %445, align 4
  %446 = fadd nsz float %173, %438
  %447 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %87, i32 1
  store float %446, float* %447, align 4
  %448 = fadd nsz float %172, %440
  %449 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %88, i32 0
  store float %448, float* %449, align 4
  %450 = fadd nsz float %173, %443
  %451 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %88, i32 1
  store float %450, float* %451, align 4
  %452 = fadd nsz float %172, %441
  %453 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %89, i32 0
  store float %452, float* %453, align 4
  %454 = fadd nsz float %173, %442
  %455 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %89, i32 1
  store float %454, float* %455, align 4
  %456 = fadd nsz float %172, %436
  %457 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %90, i32 0
  store float %456, float* %457, align 4
  %458 = fadd nsz float %173, %439
  %459 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %148, i64 %90, i32 1
  store float %458, float* %459, align 4
  %460 = add nuw nsw i64 %93, 1
  %461 = icmp eq i64 %460, %91
  br i1 %461, label %96, label %92

462:                                              ; preds = %462, %92
  %463 = phi i64 [ 0, %92 ], [ %492, %462 ]
  %464 = add nuw nsw i64 %463, %95
  %465 = getelementptr inbounds i32, i32* %15, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = sub nsw i32 0, %466
  %468 = sext i32 %467 to i64
  %469 = mul nsw i64 %25, %468
  %470 = getelementptr inbounds float, float* %30, i64 %469
  %471 = load float, float* %470, align 4
  %472 = sext i32 %466 to i64
  %473 = mul nsw i64 %25, %472
  %474 = getelementptr inbounds float, float* %18, i64 %473
  %475 = load float, float* %474, align 4
  %476 = ashr i32 %466, 1
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %477, i32 0
  %479 = load float, float* %478, align 4
  %480 = fmul nsz float %471, %479
  %481 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %477, i32 1
  %482 = load float, float* %481, align 4
  %483 = fmul nsz float %475, %482
  %484 = fsub nsz float %480, %483
  %485 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 %463, i32 0
  store float %484, float* %485, align 8
  %486 = load float, float* %481, align 4
  %487 = fmul nsz float %471, %486
  %488 = load float, float* %478, align 4
  %489 = fmul nsz float %475, %488
  %490 = fadd nsz float %487, %489
  %491 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 %463, i32 1
  store float %490, float* %491, align 4
  %492 = add nuw nsw i64 %463, 1
  %493 = icmp eq i64 %492, 15
  br i1 %493, label %142, label %462

494:                                              ; preds = %96
  %495 = sext i32 %13 to i64
  br label %497

496:                                              ; preds = %497, %96
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #8
  ret void

497:                                              ; preds = %494, %497
  %498 = phi i64 [ 0, %494 ], [ %545, %497 ]
  %499 = add nsw i64 %498, %495
  %500 = xor i64 %498, -1
  %501 = add nsw i64 %495, %500
  %502 = getelementptr inbounds i32, i32* %17, i64 %499
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %17, i64 %501
  %505 = load i32, i32* %504, align 4
  %506 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %108, align 8
  %507 = sext i32 %505 to i64
  %508 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %506, i64 %507, i32 1
  %509 = load float, float* %508, align 4
  %510 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %506, i64 %507, i32 0
  %511 = load float, float* %510, align 4
  %512 = sext i32 %503 to i64
  %513 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %506, i64 %512, i32 1
  %514 = load float, float* %513, align 4
  %515 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %506, i64 %512, i32 0
  %516 = load float, float* %515, align 4
  %517 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %501, i32 1
  %518 = load float, float* %517, align 4
  %519 = fmul nsz float %509, %518
  %520 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %501, i32 0
  %521 = load float, float* %520, align 4
  %522 = fmul nsz float %511, %521
  %523 = fsub nsz float %519, %522
  %524 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %501, i32 0
  store float %523, float* %524, align 4
  %525 = load float, float* %520, align 4
  %526 = fmul nsz float %509, %525
  %527 = load float, float* %517, align 4
  %528 = fmul nsz float %511, %527
  %529 = fadd nsz float %526, %528
  %530 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %499, i32 1
  store float %529, float* %530, align 4
  %531 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %499, i32 1
  %532 = load float, float* %531, align 4
  %533 = fmul nsz float %514, %532
  %534 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %499, i32 0
  %535 = load float, float* %534, align 4
  %536 = fmul nsz float %516, %535
  %537 = fsub nsz float %533, %536
  %538 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %499, i32 0
  store float %537, float* %538, align 4
  %539 = load float, float* %534, align 4
  %540 = fmul nsz float %514, %539
  %541 = load float, float* %531, align 4
  %542 = fmul nsz float %516, %541
  %543 = fadd nsz float %540, %542
  %544 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %501, i32 1
  store float %543, float* %544, align 4
  %545 = add nuw nsw i64 %498, 1
  %546 = icmp slt i64 %545, %495
  br i1 %546, label %497, label %496
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexFloat], align 16
  %6 = bitcast i8* %2 to float*
  %7 = bitcast i8* %1 to float*
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %9 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %8, align 8
  %10 = bitcast [15 x %struct.AVComplexFloat]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 120, i1 false)
  %11 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 15
  %14 = mul i32 %12, 45
  %15 = ashr i32 %13, 1
  %16 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = or i32 %12, 1
  %21 = tail call i32 @llvm.ctlz.i32(i32 %20, i1 true), !range !3
  %22 = xor i32 %21, 31
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %23
  %25 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %24, align 8
  %26 = lshr i64 %3, 2
  %27 = icmp sgt i32 %12, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %4
  %29 = sext i32 %12 to i64
  %30 = mul nsw i64 %29, 3
  %31 = mul nsw i64 %29, 5
  %32 = mul nsw i64 %29, 6
  %33 = mul nsw i64 %29, 7
  %34 = mul nsw i64 %29, 9
  %35 = mul nsw i64 %29, 10
  %36 = mul nsw i64 %29, 11
  %37 = mul nsw i64 %29, 12
  %38 = mul nsw i64 %29, 13
  %39 = mul nsw i64 %29, 14
  br label %93

40:                                               ; preds = %4
  %41 = mul i32 %12, 75
  %42 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %43 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %44 = sext i32 %12 to i64
  %45 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 1
  %47 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 1, i32 0
  %48 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 2, i32 0
  %49 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 0
  %50 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 0, i32 1
  %51 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 1
  %52 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 1
  %53 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 4, i32 0
  %54 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 5, i32 0
  %55 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 0
  %56 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 3, i32 1
  %57 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 1
  %58 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 1
  %59 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 7, i32 0
  %60 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 8, i32 0
  %61 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 0
  %62 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 6, i32 1
  %63 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 1
  %64 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 1
  %65 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 10, i32 0
  %66 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 11, i32 0
  %67 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 0
  %68 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 9, i32 1
  %69 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 1
  %70 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14, i32 1
  %71 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 13, i32 0
  %72 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 14, i32 0
  %73 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 0
  %74 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 12, i32 1
  %75 = mul nsw i64 %44, 6
  %76 = mul nsw i64 %44, 12
  %77 = mul nsw i64 %44, 3
  %78 = mul nsw i64 %44, 9
  %79 = mul nsw i64 %44, 10
  %80 = mul nsw i64 %44, 7
  %81 = mul nsw i64 %44, 13
  %82 = shl nsw i64 %44, 2
  %83 = mul nsw i64 %44, 5
  %84 = mul nsw i64 %44, 11
  %85 = shl nsw i64 %44, 1
  %86 = shl nsw i64 %44, 3
  %87 = mul nsw i64 %44, 14
  %88 = zext i32 %12 to i64
  br label %89

89:                                               ; preds = %139, %40
  %90 = phi i64 [ 0, %40 ], [ %457, %139 ]
  %91 = mul i64 %90, 15
  %92 = and i64 %91, 4294967295
  br label %459

93:                                               ; preds = %139, %28
  %94 = phi i64 [ %39, %28 ], [ %87, %139 ]
  %95 = phi i64 [ %38, %28 ], [ %81, %139 ]
  %96 = phi i64 [ %37, %28 ], [ %76, %139 ]
  %97 = phi i64 [ %36, %28 ], [ %84, %139 ]
  %98 = phi i64 [ %35, %28 ], [ %79, %139 ]
  %99 = phi i64 [ %34, %28 ], [ %78, %139 ]
  %100 = phi i64 [ %33, %28 ], [ %80, %139 ]
  %101 = phi i64 [ %32, %28 ], [ %75, %139 ]
  %102 = phi i64 [ %31, %28 ], [ %83, %139 ]
  %103 = phi i64 [ %30, %28 ], [ %77, %139 ]
  %104 = phi i64 [ %29, %28 ], [ %44, %139 ]
  %105 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %106 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  tail call void %25(%struct.AVComplexFloat* %106) #8
  %107 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %108 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %107, i64 %104
  tail call void %25(%struct.AVComplexFloat* %108) #8
  %109 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %110 = shl nsw i64 %104, 1
  %111 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %109, i64 %110
  tail call void %25(%struct.AVComplexFloat* %111) #8
  %112 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %113 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %112, i64 %103
  tail call void %25(%struct.AVComplexFloat* %113) #8
  %114 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %115 = shl nsw i64 %104, 2
  %116 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %114, i64 %115
  tail call void %25(%struct.AVComplexFloat* %116) #8
  %117 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %118 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %117, i64 %102
  tail call void %25(%struct.AVComplexFloat* %118) #8
  %119 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %120 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %119, i64 %101
  tail call void %25(%struct.AVComplexFloat* %120) #8
  %121 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %122 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %121, i64 %100
  tail call void %25(%struct.AVComplexFloat* %122) #8
  %123 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %124 = shl nsw i64 %104, 3
  %125 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %123, i64 %124
  tail call void %25(%struct.AVComplexFloat* %125) #8
  %126 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %127 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %126, i64 %99
  tail call void %25(%struct.AVComplexFloat* %127) #8
  %128 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %129 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 %98
  tail call void %25(%struct.AVComplexFloat* %129) #8
  %130 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %131 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %130, i64 %97
  tail call void %25(%struct.AVComplexFloat* %131) #8
  %132 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %133 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %132, i64 %96
  tail call void %25(%struct.AVComplexFloat* %133) #8
  %134 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %135 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %134, i64 %95
  tail call void %25(%struct.AVComplexFloat* %135) #8
  %136 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %137 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %136, i64 %94
  tail call void %25(%struct.AVComplexFloat* %137) #8
  %138 = icmp sgt i32 %13, 1
  br i1 %138, label %522, label %524

139:                                              ; preds = %500
  %140 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %42, align 8
  %141 = load i32*, i32** %43, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 %90
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %140, i64 %144
  %146 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 0), align 32
  %147 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 0, i32 1), align 4
  %148 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 1, i32 0), align 8
  %149 = load float, float* %45, align 4
  %150 = load float, float* %46, align 4
  %151 = fsub nsz float %149, %150
  %152 = fadd nsz float %149, %150
  %153 = load float, float* %47, align 8
  %154 = load float, float* %48, align 16
  %155 = fsub nsz float %153, %154
  %156 = fadd nsz float %153, %154
  %157 = load float, float* %49, align 16
  %158 = fadd nsz float %157, %156
  %159 = load float, float* %50, align 4
  %160 = fadd nsz float %152, %159
  %161 = fmul nsz float %146, %151
  %162 = fmul nsz float %147, %155
  %163 = fmul nsz float %148, %156
  %164 = fmul nsz float %148, %152
  %165 = fsub nsz float %157, %163
  %166 = fadd nsz float %161, %165
  %167 = fsub nsz float %159, %164
  %168 = fsub nsz float %167, %162
  %169 = fsub nsz float %165, %161
  %170 = fadd nsz float %162, %167
  %171 = load float, float* %51, align 4
  %172 = load float, float* %52, align 4
  %173 = fsub nsz float %171, %172
  %174 = fadd nsz float %171, %172
  %175 = load float, float* %53, align 16
  %176 = load float, float* %54, align 8
  %177 = fsub nsz float %175, %176
  %178 = fadd nsz float %175, %176
  %179 = load float, float* %55, align 8
  %180 = fadd nsz float %179, %178
  %181 = load float, float* %56, align 4
  %182 = fadd nsz float %174, %181
  %183 = fmul nsz float %146, %173
  %184 = fmul nsz float %147, %177
  %185 = fmul nsz float %148, %178
  %186 = fmul nsz float %148, %174
  %187 = fsub nsz float %179, %185
  %188 = fadd nsz float %183, %187
  %189 = fsub nsz float %181, %186
  %190 = fsub nsz float %189, %184
  %191 = fsub nsz float %187, %183
  %192 = fadd nsz float %184, %189
  %193 = load float, float* %57, align 4
  %194 = load float, float* %58, align 4
  %195 = fsub nsz float %193, %194
  %196 = fadd nsz float %193, %194
  %197 = load float, float* %59, align 8
  %198 = load float, float* %60, align 16
  %199 = fsub nsz float %197, %198
  %200 = fadd nsz float %197, %198
  %201 = load float, float* %61, align 16
  %202 = fadd nsz float %201, %200
  %203 = load float, float* %62, align 4
  %204 = fadd nsz float %196, %203
  %205 = fmul nsz float %146, %195
  %206 = fmul nsz float %147, %199
  %207 = fmul nsz float %148, %200
  %208 = fmul nsz float %148, %196
  %209 = fsub nsz float %201, %207
  %210 = fadd nsz float %205, %209
  %211 = fsub nsz float %203, %208
  %212 = fsub nsz float %211, %206
  %213 = fsub nsz float %209, %205
  %214 = fadd nsz float %206, %211
  %215 = load float, float* %63, align 4
  %216 = load float, float* %64, align 4
  %217 = fsub nsz float %215, %216
  %218 = fadd nsz float %215, %216
  %219 = load float, float* %65, align 16
  %220 = load float, float* %66, align 8
  %221 = fsub nsz float %219, %220
  %222 = fadd nsz float %219, %220
  %223 = load float, float* %67, align 8
  %224 = fadd nsz float %223, %222
  %225 = load float, float* %68, align 4
  %226 = fadd nsz float %218, %225
  %227 = fmul nsz float %146, %217
  %228 = fmul nsz float %147, %221
  %229 = fmul nsz float %148, %222
  %230 = fmul nsz float %148, %218
  %231 = fsub nsz float %223, %229
  %232 = fadd nsz float %227, %231
  %233 = fsub nsz float %225, %230
  %234 = fsub nsz float %233, %228
  %235 = fsub nsz float %231, %227
  %236 = fadd nsz float %228, %233
  %237 = load float, float* %69, align 4
  %238 = load float, float* %70, align 4
  %239 = fsub nsz float %237, %238
  %240 = fadd nsz float %237, %238
  %241 = load float, float* %71, align 8
  %242 = load float, float* %72, align 16
  %243 = fsub nsz float %241, %242
  %244 = fadd nsz float %241, %242
  %245 = load float, float* %73, align 16
  %246 = fadd nsz float %245, %244
  %247 = load float, float* %74, align 4
  %248 = fadd nsz float %240, %247
  %249 = fmul nsz float %146, %239
  %250 = fmul nsz float %147, %243
  %251 = fmul nsz float %148, %244
  %252 = fmul nsz float %148, %240
  %253 = fsub nsz float %245, %251
  %254 = fadd nsz float %249, %253
  %255 = fsub nsz float %247, %252
  %256 = fsub nsz float %255, %250
  %257 = fsub nsz float %253, %249
  %258 = fadd nsz float %250, %255
  %259 = fsub nsz float %180, %246
  %260 = fadd nsz float %180, %246
  %261 = fsub nsz float %182, %248
  %262 = fadd nsz float %182, %248
  %263 = fsub nsz float %202, %224
  %264 = fadd nsz float %202, %224
  %265 = fsub nsz float %204, %226
  %266 = fadd nsz float %204, %226
  %267 = fadd nsz float %158, %260
  %268 = fadd nsz float %264, %267
  %269 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 0, i32 0
  store float %268, float* %269, align 4
  %270 = fadd nsz float %160, %262
  %271 = fadd nsz float %266, %270
  %272 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %140, i64 %144, i32 1
  store float %271, float* %272, align 4
  %273 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %274 = fmul nsz float %264, %273
  %275 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %276 = fmul nsz float %260, %275
  %277 = fsub nsz float %274, %276
  %278 = fmul nsz float %260, %273
  %279 = fmul nsz float %264, %275
  %280 = fsub nsz float %278, %279
  %281 = fmul nsz float %266, %273
  %282 = fmul nsz float %262, %275
  %283 = fsub nsz float %281, %282
  %284 = fmul nsz float %262, %273
  %285 = fmul nsz float %266, %275
  %286 = fsub nsz float %284, %285
  %287 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %288 = fmul nsz float %265, %287
  %289 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %290 = fmul nsz float %261, %289
  %291 = fsub nsz float %288, %290
  %292 = fmul nsz float %261, %287
  %293 = fmul nsz float %265, %289
  %294 = fadd nsz float %292, %293
  %295 = fmul nsz float %263, %287
  %296 = fmul nsz float %259, %289
  %297 = fsub nsz float %295, %296
  %298 = fmul nsz float %259, %287
  %299 = fmul nsz float %263, %289
  %300 = fadd nsz float %298, %299
  %301 = fsub nsz float %280, %294
  %302 = fadd nsz float %280, %294
  %303 = fsub nsz float %286, %300
  %304 = fadd nsz float %286, %300
  %305 = fsub nsz float %277, %291
  %306 = fadd nsz float %277, %291
  %307 = fsub nsz float %283, %297
  %308 = fadd nsz float %283, %297
  %309 = fadd nsz float %158, %302
  %310 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %75, i32 0
  store float %309, float* %310, align 4
  %311 = fadd nsz float %160, %303
  %312 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %75, i32 1
  store float %311, float* %312, align 4
  %313 = fadd nsz float %158, %305
  %314 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %76, i32 0
  store float %313, float* %314, align 4
  %315 = fadd nsz float %160, %308
  %316 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %76, i32 1
  store float %315, float* %316, align 4
  %317 = fadd nsz float %158, %306
  %318 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %77, i32 0
  store float %317, float* %318, align 4
  %319 = fadd nsz float %160, %307
  %320 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %77, i32 1
  store float %319, float* %320, align 4
  %321 = fadd nsz float %158, %301
  %322 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %78, i32 0
  store float %321, float* %322, align 4
  %323 = fadd nsz float %160, %304
  %324 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %78, i32 1
  store float %323, float* %324, align 4
  %325 = fsub nsz float %188, %254
  %326 = fadd nsz float %188, %254
  %327 = fsub nsz float %190, %256
  %328 = fadd nsz float %190, %256
  %329 = fsub nsz float %210, %232
  %330 = fadd nsz float %210, %232
  %331 = fsub nsz float %212, %234
  %332 = fadd nsz float %212, %234
  %333 = fadd nsz float %166, %326
  %334 = fadd nsz float %330, %333
  %335 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %79, i32 0
  store float %334, float* %335, align 4
  %336 = fadd nsz float %168, %328
  %337 = fadd nsz float %332, %336
  %338 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %79, i32 1
  store float %337, float* %338, align 4
  %339 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %340 = fmul nsz float %330, %339
  %341 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %342 = fmul nsz float %326, %341
  %343 = fsub nsz float %340, %342
  %344 = fmul nsz float %326, %339
  %345 = fmul nsz float %330, %341
  %346 = fsub nsz float %344, %345
  %347 = fmul nsz float %332, %339
  %348 = fmul nsz float %328, %341
  %349 = fsub nsz float %347, %348
  %350 = fmul nsz float %328, %339
  %351 = fmul nsz float %332, %341
  %352 = fsub nsz float %350, %351
  %353 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %354 = fmul nsz float %331, %353
  %355 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %356 = fmul nsz float %327, %355
  %357 = fsub nsz float %354, %356
  %358 = fmul nsz float %327, %353
  %359 = fmul nsz float %331, %355
  %360 = fadd nsz float %358, %359
  %361 = fmul nsz float %329, %353
  %362 = fmul nsz float %325, %355
  %363 = fsub nsz float %361, %362
  %364 = fmul nsz float %325, %353
  %365 = fmul nsz float %329, %355
  %366 = fadd nsz float %364, %365
  %367 = fsub nsz float %346, %360
  %368 = fadd nsz float %346, %360
  %369 = fsub nsz float %352, %366
  %370 = fadd nsz float %352, %366
  %371 = fsub nsz float %343, %357
  %372 = fadd nsz float %343, %357
  %373 = fsub nsz float %349, %363
  %374 = fadd nsz float %349, %363
  %375 = fadd nsz float %166, %368
  %376 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %44, i32 0
  store float %375, float* %376, align 4
  %377 = fadd nsz float %168, %369
  %378 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %44, i32 1
  store float %377, float* %378, align 4
  %379 = fadd nsz float %166, %371
  %380 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %80, i32 0
  store float %379, float* %380, align 4
  %381 = fadd nsz float %168, %374
  %382 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %80, i32 1
  store float %381, float* %382, align 4
  %383 = fadd nsz float %166, %372
  %384 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %81, i32 0
  store float %383, float* %384, align 4
  %385 = fadd nsz float %168, %373
  %386 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %81, i32 1
  store float %385, float* %386, align 4
  %387 = fadd nsz float %166, %367
  %388 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %82, i32 0
  store float %387, float* %388, align 4
  %389 = fadd nsz float %168, %370
  %390 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %82, i32 1
  store float %389, float* %390, align 4
  %391 = fsub nsz float %191, %257
  %392 = fadd nsz float %191, %257
  %393 = fsub nsz float %192, %258
  %394 = fadd nsz float %192, %258
  %395 = fsub nsz float %213, %235
  %396 = fadd nsz float %213, %235
  %397 = fsub nsz float %214, %236
  %398 = fadd nsz float %214, %236
  %399 = fadd nsz float %169, %392
  %400 = fadd nsz float %396, %399
  %401 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %83, i32 0
  store float %400, float* %401, align 4
  %402 = fadd nsz float %170, %394
  %403 = fadd nsz float %398, %402
  %404 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %83, i32 1
  store float %403, float* %404, align 4
  %405 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0), align 16
  %406 = fmul nsz float %396, %405
  %407 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 0), align 8
  %408 = fmul nsz float %392, %407
  %409 = fsub nsz float %406, %408
  %410 = fmul nsz float %392, %405
  %411 = fmul nsz float %396, %407
  %412 = fsub nsz float %410, %411
  %413 = fmul nsz float %398, %405
  %414 = fmul nsz float %394, %407
  %415 = fsub nsz float %413, %414
  %416 = fmul nsz float %394, %405
  %417 = fmul nsz float %398, %407
  %418 = fsub nsz float %416, %417
  %419 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 1), align 4
  %420 = fmul nsz float %397, %419
  %421 = load float, float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 3, i32 1), align 4
  %422 = fmul nsz float %393, %421
  %423 = fsub nsz float %420, %422
  %424 = fmul nsz float %393, %419
  %425 = fmul nsz float %397, %421
  %426 = fadd nsz float %424, %425
  %427 = fmul nsz float %395, %419
  %428 = fmul nsz float %391, %421
  %429 = fsub nsz float %427, %428
  %430 = fmul nsz float %391, %419
  %431 = fmul nsz float %395, %421
  %432 = fadd nsz float %430, %431
  %433 = fsub nsz float %412, %426
  %434 = fadd nsz float %412, %426
  %435 = fsub nsz float %418, %432
  %436 = fadd nsz float %418, %432
  %437 = fsub nsz float %409, %423
  %438 = fadd nsz float %409, %423
  %439 = fsub nsz float %415, %429
  %440 = fadd nsz float %415, %429
  %441 = fadd nsz float %169, %434
  %442 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %84, i32 0
  store float %441, float* %442, align 4
  %443 = fadd nsz float %170, %435
  %444 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %84, i32 1
  store float %443, float* %444, align 4
  %445 = fadd nsz float %169, %437
  %446 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %85, i32 0
  store float %445, float* %446, align 4
  %447 = fadd nsz float %170, %440
  %448 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %85, i32 1
  store float %447, float* %448, align 4
  %449 = fadd nsz float %169, %438
  %450 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %86, i32 0
  store float %449, float* %450, align 4
  %451 = fadd nsz float %170, %439
  %452 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %86, i32 1
  store float %451, float* %452, align 4
  %453 = fadd nsz float %169, %433
  %454 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %87, i32 0
  store float %453, float* %454, align 4
  %455 = fadd nsz float %170, %436
  %456 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 %87, i32 1
  store float %455, float* %456, align 4
  %457 = add nuw nsw i64 %90, 1
  %458 = icmp eq i64 %457, %88
  br i1 %458, label %93, label %89

459:                                              ; preds = %500, %89
  %460 = phi i64 [ 0, %89 ], [ %520, %500 ]
  %461 = add nuw nsw i64 %460, %92
  %462 = getelementptr inbounds i32, i32* %17, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = icmp slt i32 %463, %13
  %465 = add nsw i32 %463, %13
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds float, float* %6, i64 %466
  %468 = load float, float* %467, align 4
  %469 = xor i32 %463, -1
  br i1 %464, label %470, label %485

470:                                              ; preds = %459
  %471 = add i32 %13, %469
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds float, float* %6, i64 %472
  %474 = load float, float* %473, align 4
  %475 = add nsw i32 %463, %14
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds float, float* %6, i64 %476
  %478 = load float, float* %477, align 4
  %479 = add i32 %14, %469
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds float, float* %6, i64 %480
  %482 = load float, float* %481, align 4
  %483 = fsub nsz float -0.000000e+00, %482
  %484 = fsub nsz float %483, %478
  br label %500

485:                                              ; preds = %459
  %486 = add i32 %41, %469
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds float, float* %6, i64 %487
  %489 = load float, float* %488, align 4
  %490 = fsub nsz float -0.000000e+00, %489
  %491 = sub i32 %463, %13
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds float, float* %6, i64 %492
  %494 = load float, float* %493, align 4
  %495 = add i32 %14, %469
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds float, float* %6, i64 %496
  %498 = load float, float* %497, align 4
  %499 = fsub nsz float %494, %498
  br label %500

500:                                              ; preds = %470, %485
  %501 = phi float [ %474, %470 ], [ %490, %485 ]
  %502 = phi float [ %484, %470 ], [ %499, %485 ]
  %503 = fsub nsz float %501, %468
  %504 = ashr i32 %463, 1
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %505, i32 0
  %507 = load float, float* %506, align 4
  %508 = fmul nsz float %503, %507
  %509 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %505, i32 1
  %510 = load float, float* %509, align 4
  %511 = fmul nsz float %502, %510
  %512 = fsub nsz float %508, %511
  %513 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 %460, i32 1
  store float %512, float* %513, align 4
  %514 = load float, float* %509, align 4
  %515 = fmul nsz float %503, %514
  %516 = load float, float* %506, align 4
  %517 = fmul nsz float %502, %516
  %518 = fadd nsz float %515, %517
  %519 = getelementptr inbounds [15 x %struct.AVComplexFloat], [15 x %struct.AVComplexFloat]* %5, i64 0, i64 %460, i32 0
  store float %518, float* %519, align 8
  %520 = add nuw nsw i64 %460, 1
  %521 = icmp eq i64 %520, 15
  br i1 %521, label %139, label %459

522:                                              ; preds = %93
  %523 = sext i32 %15 to i64
  br label %525

524:                                              ; preds = %525, %93
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #8
  ret void

525:                                              ; preds = %522, %525
  %526 = phi i64 [ 0, %522 ], [ %585, %525 ]
  %527 = phi i32 [ 0, %522 ], [ %586, %525 ]
  %528 = add nsw i64 %526, %523
  %529 = add nsw i32 %527, %15
  %530 = xor i64 %526, -1
  %531 = xor i32 %527, -1
  %532 = add nsw i64 %523, %530
  %533 = add nsw i32 %15, %531
  %534 = getelementptr inbounds i32, i32* %19, i64 %528
  %535 = load i32, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %19, i64 %532
  %537 = load i32, i32* %536, align 4
  %538 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %105, align 8
  %539 = sext i32 %537 to i64
  %540 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %538, i64 %539, i32 0
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %538, i64 %539, i32 1
  %543 = load float, float* %542, align 4
  %544 = sext i32 %535 to i64
  %545 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %538, i64 %544, i32 0
  %546 = load float, float* %545, align 4
  %547 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %538, i64 %544, i32 1
  %548 = load float, float* %547, align 4
  %549 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %528, i32 1
  %550 = load float, float* %549, align 4
  %551 = fmul nsz float %546, %550
  %552 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %528, i32 0
  %553 = load float, float* %552, align 4
  %554 = fmul nsz float %548, %553
  %555 = fsub nsz float %551, %554
  %556 = shl nsw i32 %533, 1
  %557 = sext i32 %556 to i64
  %558 = mul nsw i64 %26, %557
  %559 = add nsw i64 %558, %26
  %560 = getelementptr inbounds float, float* %7, i64 %559
  store float %555, float* %560, align 4
  %561 = load float, float* %552, align 4
  %562 = fmul nsz float %546, %561
  %563 = load float, float* %549, align 4
  %564 = fmul nsz float %548, %563
  %565 = fadd nsz float %562, %564
  %566 = shl nsw i32 %529, 1
  %567 = sext i32 %566 to i64
  %568 = mul nsw i64 %26, %567
  %569 = getelementptr inbounds float, float* %7, i64 %568
  store float %565, float* %569, align 4
  %570 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %532, i32 1
  %571 = load float, float* %570, align 4
  %572 = fmul nsz float %541, %571
  %573 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %532, i32 0
  %574 = load float, float* %573, align 4
  %575 = fmul nsz float %543, %574
  %576 = fsub nsz float %572, %575
  %577 = add nsw i64 %568, %26
  %578 = getelementptr inbounds float, float* %7, i64 %577
  store float %576, float* %578, align 4
  %579 = load float, float* %573, align 4
  %580 = fmul nsz float %541, %579
  %581 = load float, float* %570, align 4
  %582 = fmul nsz float %543, %581
  %583 = fadd nsz float %580, %582
  %584 = getelementptr inbounds float, float* %7, i64 %558
  store float %583, float* %584, align 4
  %585 = add nuw nsw i64 %526, 1
  %586 = add nuw nsw i32 %527, 1
  %587 = icmp slt i64 %585, %523
  br i1 %587, label %525, label %524
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_fft(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to %struct.AVComplexFloat*
  %6 = bitcast i8* %1 to %struct.AVComplexFloat*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 1
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 true), !range !3
  %11 = xor i32 %10, 31
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %4
  %17 = icmp sgt i32 %8, 0
  br i1 %17, label %18, label %122

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %20 = zext i32 %8 to i64
  %21 = add nsw i64 %20, -1
  %22 = and i64 %20, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %104, label %24

24:                                               ; preds = %18
  %25 = sub nsw i64 %20, %22
  br label %59

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 10
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  br label %31

31:                                               ; preds = %55, %26
  %32 = phi i32 [ %29, %26 ], [ %57, %55 ]
  %33 = phi i32* [ %28, %26 ], [ %56, %55 ]
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %34, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %34, i32 1
  %38 = load float, float* %37, align 4
  %39 = load i32*, i32** %30, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %34
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %42, %31
  %43 = phi float [ %38, %31 ], [ %50, %42 ]
  %44 = phi float [ %36, %31 ], [ %48, %42 ]
  %45 = phi i32 [ %41, %31 ], [ %53, %42 ]
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %46, i32 0
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %46, i32 1
  %50 = load float, float* %49, align 4
  store float %44, float* %47, align 4
  store float %43, float* %49, align 4
  %51 = load i32*, i32** %30, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %46
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %32
  br i1 %54, label %55, label %42

55:                                               ; preds = %42
  %56 = getelementptr inbounds i32, i32* %33, i64 1
  store float %48, float* %35, align 4
  store float %50, float* %37, align 4
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %122, label %31

59:                                               ; preds = %59, %24
  %60 = phi i64 [ 0, %24 ], [ %101, %59 ]
  %61 = phi i64 [ %25, %24 ], [ %102, %59 ]
  %62 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %60
  %63 = load i32*, i32** %19, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %60
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %66
  %68 = bitcast %struct.AVComplexFloat* %67 to i64*
  %69 = bitcast %struct.AVComplexFloat* %62 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = or i64 %60, 1
  %72 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %71
  %73 = load i32*, i32** %19, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %76
  %78 = bitcast %struct.AVComplexFloat* %77 to i64*
  %79 = bitcast %struct.AVComplexFloat* %72 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 4
  %81 = or i64 %60, 2
  %82 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %81
  %83 = load i32*, i32** %19, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %81
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %86
  %88 = bitcast %struct.AVComplexFloat* %87 to i64*
  %89 = bitcast %struct.AVComplexFloat* %82 to i64*
  %90 = load i64, i64* %88, align 4
  store i64 %90, i64* %89, align 4
  %91 = or i64 %60, 3
  %92 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %91
  %93 = load i32*, i32** %19, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %91
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %96
  %98 = bitcast %struct.AVComplexFloat* %97 to i64*
  %99 = bitcast %struct.AVComplexFloat* %92 to i64*
  %100 = load i64, i64* %98, align 4
  store i64 %100, i64* %99, align 4
  %101 = add nuw nsw i64 %60, 4
  %102 = add i64 %61, -4
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %59

104:                                              ; preds = %59, %18
  %105 = phi i64 [ 0, %18 ], [ %101, %59 ]
  %106 = icmp eq i64 %22, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %104, %107
  %108 = phi i64 [ %119, %107 ], [ %105, %104 ]
  %109 = phi i64 [ %120, %107 ], [ %22, %104 ]
  %110 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %6, i64 %108
  %111 = load i32*, i32** %19, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 %108
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %114
  %116 = bitcast %struct.AVComplexFloat* %115 to i64*
  %117 = bitcast %struct.AVComplexFloat* %110 to i64*
  %118 = load i64, i64* %116, align 4
  store i64 %118, i64* %117, align 4
  %119 = add nuw nsw i64 %108, 1
  %120 = add i64 %109, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %107, !llvm.loop !4

122:                                              ; preds = %55, %104, %107, %16
  %123 = zext i32 %11 to i64
  %124 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %123
  %125 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %124, align 8
  tail call void %125(%struct.AVComplexFloat* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_imdct(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexFloat*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = bitcast i8* %2 to float*
  %12 = or i32 %9, 1
  %13 = tail call i32 @llvm.ctlz.i32(i32 %12, i1 true), !range !3
  %14 = xor i32 %13, 31
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %15
  %17 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %16, align 8
  %18 = lshr i64 %3, 2
  %19 = shl i32 %9, 1
  %20 = add nsw i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %18, %21
  %23 = getelementptr inbounds float, float* %11, i64 %22
  %24 = icmp sgt i32 %9, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %4
  tail call void %17(%struct.AVComplexFloat* %5) #8
  br label %67

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %28 = zext i32 %9 to i64
  br label %33

29:                                               ; preds = %33
  tail call void %17(%struct.AVComplexFloat* %5) #8
  %30 = icmp sgt i32 %9, 1
  br i1 %30, label %31, label %67

31:                                               ; preds = %29
  %32 = sext i32 %10 to i64
  br label %68

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %65, %33 ]
  %35 = mul nsw i64 %34, -2
  %36 = mul nsw i64 %18, %35
  %37 = getelementptr inbounds float, float* %23, i64 %36
  %38 = load float, float* %37, align 4
  %39 = shl nuw nsw i64 %34, 1
  %40 = mul nuw nsw i64 %18, %39
  %41 = getelementptr inbounds float, float* %11, i64 %40
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %34, i32 0
  %44 = load float, float* %43, align 4
  %45 = fmul nsz float %38, %44
  %46 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %34, i32 1
  %47 = load float, float* %46, align 4
  %48 = fmul nsz float %42, %47
  %49 = fsub nsz float %45, %48
  %50 = load i32*, i32** %27, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %34
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %53, i32 0
  store float %49, float* %54, align 4
  %55 = load float, float* %46, align 4
  %56 = fmul nsz float %38, %55
  %57 = load float, float* %43, align 4
  %58 = fmul nsz float %42, %57
  %59 = fadd nsz float %56, %58
  %60 = load i32*, i32** %27, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %34
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %63, i32 1
  store float %59, float* %64, align 4
  %65 = add nuw nsw i64 %34, 1
  %66 = icmp eq i64 %65, %28
  br i1 %66, label %29, label %33

67:                                               ; preds = %68, %25, %29
  ret void

68:                                               ; preds = %31, %68
  %69 = phi i64 [ 0, %31 ], [ %105, %68 ]
  %70 = add nsw i64 %69, %32
  %71 = xor i64 %69, -1
  %72 = add nsw i64 %32, %71
  %73 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %72, i32 1
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %72, i32 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %70, i32 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %5, i64 %70, i32 0
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %72, i32 1
  %82 = load float, float* %81, align 4
  %83 = fmul nsz float %74, %82
  %84 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %72, i32 0
  %85 = load float, float* %84, align 4
  %86 = fmul nsz float %76, %85
  %87 = fsub nsz float %83, %86
  store float %87, float* %75, align 4
  %88 = load float, float* %84, align 4
  %89 = fmul nsz float %74, %88
  %90 = load float, float* %81, align 4
  %91 = fmul nsz float %76, %90
  %92 = fadd nsz float %89, %91
  store float %92, float* %77, align 4
  %93 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %70, i32 1
  %94 = load float, float* %93, align 4
  %95 = fmul nsz float %78, %94
  %96 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %7, i64 %70, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul nsz float %80, %97
  %99 = fsub nsz float %95, %98
  store float %99, float* %79, align 4
  %100 = load float, float* %96, align 4
  %101 = fmul nsz float %78, %100
  %102 = load float, float* %93, align 4
  %103 = fmul nsz float %80, %102
  %104 = fadd nsz float %101, %103
  store float %104, float* %73, align 4
  %105 = add nuw nsw i64 %69, 1
  %106 = icmp slt i64 %105, %32
  br i1 %106, label %68, label %67
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_mdct(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to float*
  %6 = bitcast i8* %1 to float*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %8 = load %struct.AVComplexFloat*, %struct.AVComplexFloat** %7, align 8
  %9 = bitcast i8* %1 to %struct.AVComplexFloat*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 %11, 3
  %13 = ashr i32 %11, 1
  %14 = or i32 %11, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexFloat*)*], [18 x void (%struct.AVComplexFloat*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexFloat*)*, void (%struct.AVComplexFloat*)** %18, align 8
  %20 = lshr i64 %3, 2
  %21 = icmp sgt i32 %11, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %4
  tail call void %19(%struct.AVComplexFloat* %9) #8
  br label %102

23:                                               ; preds = %4
  %24 = mul nsw i32 %11, 5
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %26 = sext i32 %11 to i64
  %27 = sext i32 %12 to i64
  %28 = zext i32 %11 to i64
  br label %33

29:                                               ; preds = %73
  tail call void %19(%struct.AVComplexFloat* %9) #8
  %30 = icmp sgt i32 %11, 1
  br i1 %30, label %31, label %102

31:                                               ; preds = %29
  %32 = sext i32 %13 to i64
  br label %103

33:                                               ; preds = %73, %23
  %34 = phi i64 [ 0, %23 ], [ %99, %73 ]
  %35 = phi i32 [ 0, %23 ], [ %100, %73 ]
  %36 = shl nuw nsw i64 %34, 1
  %37 = shl nuw nsw i32 %35, 1
  %38 = icmp slt i64 %36, %26
  %39 = add nsw i64 %36, %26
  %40 = getelementptr inbounds float, float* %5, i64 %39
  %41 = load float, float* %40, align 4
  %42 = xor i32 %37, -1
  br i1 %38, label %43, label %57

43:                                               ; preds = %33
  %44 = add i32 %11, %42
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %5, i64 %45
  %47 = load float, float* %46, align 4
  %48 = add nsw i64 %36, %27
  %49 = getelementptr inbounds float, float* %5, i64 %48
  %50 = load float, float* %49, align 4
  %51 = add i32 %12, %42
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, float* %5, i64 %52
  %54 = load float, float* %53, align 4
  %55 = fsub nsz float -0.000000e+00, %54
  %56 = fsub nsz float %55, %50
  br label %73

57:                                               ; preds = %33
  %58 = add i32 %24, %42
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float, float* %5, i64 %59
  %61 = load float, float* %60, align 4
  %62 = fsub nsz float -0.000000e+00, %61
  %63 = trunc i64 %36 to i32
  %64 = sub i32 %63, %11
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds float, float* %5, i64 %65
  %67 = load float, float* %66, align 4
  %68 = add i32 %12, %42
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, float* %5, i64 %69
  %71 = load float, float* %70, align 4
  %72 = fsub nsz float %67, %71
  br label %73

73:                                               ; preds = %43, %57
  %74 = phi float [ %47, %43 ], [ %62, %57 ]
  %75 = phi float [ %56, %43 ], [ %72, %57 ]
  %76 = fsub nsz float %74, %41
  %77 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %34, i32 0
  %78 = load float, float* %77, align 4
  %79 = fmul nsz float %76, %78
  %80 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %34, i32 1
  %81 = load float, float* %80, align 4
  %82 = fmul nsz float %75, %81
  %83 = fsub nsz float %79, %82
  %84 = load i32*, i32** %25, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %34
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %87, i32 1
  store float %83, float* %88, align 4
  %89 = load float, float* %80, align 4
  %90 = fmul nsz float %76, %89
  %91 = load float, float* %77, align 4
  %92 = fmul nsz float %75, %91
  %93 = fadd nsz float %90, %92
  %94 = load i32*, i32** %25, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %34
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %97, i32 0
  store float %93, float* %98, align 4
  %99 = add nuw nsw i64 %34, 1
  %100 = add nuw nsw i32 %35, 1
  %101 = icmp eq i64 %99, %28
  br i1 %101, label %29, label %33

102:                                              ; preds = %103, %22, %29
  ret void

103:                                              ; preds = %31, %103
  %104 = phi i64 [ 0, %31 ], [ %156, %103 ]
  %105 = phi i32 [ 0, %31 ], [ %157, %103 ]
  %106 = add nsw i64 %104, %32
  %107 = add nsw i32 %105, %13
  %108 = xor i64 %104, -1
  %109 = xor i32 %105, -1
  %110 = add nsw i64 %32, %108
  %111 = add nsw i32 %13, %109
  %112 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %110, i32 0
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %110, i32 1
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %106, i32 0
  %117 = load float, float* %116, align 4
  %118 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %9, i64 %106, i32 1
  %119 = load float, float* %118, align 4
  %120 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %106, i32 1
  %121 = load float, float* %120, align 4
  %122 = fmul nsz float %117, %121
  %123 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %106, i32 0
  %124 = load float, float* %123, align 4
  %125 = fmul nsz float %119, %124
  %126 = fsub nsz float %122, %125
  %127 = shl nsw i32 %111, 1
  %128 = sext i32 %127 to i64
  %129 = mul nsw i64 %20, %128
  %130 = add nsw i64 %129, %20
  %131 = getelementptr inbounds float, float* %6, i64 %130
  store float %126, float* %131, align 4
  %132 = load float, float* %123, align 4
  %133 = fmul nsz float %117, %132
  %134 = load float, float* %120, align 4
  %135 = fmul nsz float %119, %134
  %136 = fadd nsz float %133, %135
  %137 = shl nsw i32 %107, 1
  %138 = sext i32 %137 to i64
  %139 = mul nsw i64 %20, %138
  %140 = getelementptr inbounds float, float* %6, i64 %139
  store float %136, float* %140, align 4
  %141 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %110, i32 1
  %142 = load float, float* %141, align 4
  %143 = fmul nsz float %113, %142
  %144 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %8, i64 %110, i32 0
  %145 = load float, float* %144, align 4
  %146 = fmul nsz float %115, %145
  %147 = fsub nsz float %143, %146
  %148 = add nsw i64 %139, %20
  %149 = getelementptr inbounds float, float* %6, i64 %148
  store float %147, float* %149, align 4
  %150 = load float, float* %144, align 4
  %151 = fmul nsz float %113, %150
  %152 = load float, float* %141, align 4
  %153 = fmul nsz float %115, %152
  %154 = fadd nsz float %151, %153
  %155 = getelementptr inbounds float, float* %6, i64 %129
  store float %154, float* %155, align 4
  %156 = add nuw nsw i64 %104, 1
  %157 = add nuw nsw i32 %105, 1
  %158 = icmp slt i64 %156, %32
  br i1 %158, label %103, label %102
}

declare i32 @ff_tx_gen_ptwo_revtab(%struct.AVTXContext*, i32) local_unnamed_addr #2

declare i32 @ff_tx_gen_ptwo_inplace_revtab_idx(%struct.AVTXContext*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.cos.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sin.f64(double) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft2(%struct.AVComplexFloat* nocapture) #5 {
  %2 = bitcast %struct.AVComplexFloat* %0 to <4 x float>*
  %3 = load <4 x float>, <4 x float>* %2, align 4
  %4 = shufflevector <4 x float> %3, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %5 = fadd nsz <4 x float> %4, %3
  %6 = fsub nsz <4 x float> %4, %3
  %7 = shufflevector <4 x float> %5, <4 x float> %6, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %8 = bitcast %struct.AVComplexFloat* %0 to <4 x float>*
  store <4 x float> %7, <4 x float>* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft4(%struct.AVComplexFloat* nocapture) #5 {
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 0
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 1
  %8 = bitcast %struct.AVComplexFloat* %0 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 4
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %11 = fadd nsz <4 x float> %10, %9
  %12 = fsub nsz <4 x float> %10, %9
  %13 = shufflevector <4 x float> %11, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %14 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 1
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %18 = shufflevector <2 x float> %17, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %19 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3, i32 1
  %20 = load float, float* %19, align 4
  %21 = insertelement <2 x float> undef, float %5, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %24 = fadd nsz <4 x float> %18, %23
  %25 = fsub nsz <4 x float> %18, %23
  %26 = shufflevector <4 x float> %24, <4 x float> %25, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %27 = extractelement <4 x float> %11, i32 0
  %28 = extractelement <4 x float> %24, i32 0
  %29 = fadd nsz float %27, %28
  store float %29, float* %2, align 4
  %30 = extractelement <4 x float> %12, i32 3
  %31 = extractelement <4 x float> %25, i32 3
  %32 = fadd nsz float %31, %30
  store float %32, float* %7, align 4
  %33 = extractelement <4 x float> %12, i32 2
  %34 = extractelement <4 x float> %25, i32 2
  %35 = fadd nsz float %33, %34
  store float %35, float* %3, align 4
  %36 = fsub nsz <4 x float> %13, %26
  %37 = bitcast float* %4 to <4 x float>*
  store <4 x float> %36, <4 x float>* %37, align 4
  %38 = extractelement <4 x float> %11, i32 1
  %39 = extractelement <4 x float> %24, i32 1
  %40 = fadd nsz float %38, %39
  store float %40, float* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft8(%struct.AVComplexFloat*) #5 {
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 0
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 1
  %8 = bitcast %struct.AVComplexFloat* %0 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 4
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %11 = fadd nsz <4 x float> %10, %9
  %12 = fsub nsz <4 x float> %10, %9
  %13 = shufflevector <4 x float> %11, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %14 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 1
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %18 = shufflevector <2 x float> %17, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %19 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3, i32 1
  %20 = load float, float* %19, align 4
  %21 = insertelement <2 x float> undef, float %5, i32 0
  %22 = insertelement <2 x float> %21, float %20, i32 1
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %24 = fadd nsz <4 x float> %18, %23
  %25 = fsub nsz <4 x float> %18, %23
  %26 = shufflevector <4 x float> %24, <4 x float> %25, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %27 = fsub nsz <4 x float> %13, %26
  %28 = shufflevector <4 x float> %11, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 undef>
  %29 = shufflevector <4 x float> %28, <4 x float> %25, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  %30 = shufflevector <4 x float> %24, <4 x float> %25, <4 x i32> <i32 0, i32 1, i32 6, i32 undef>
  %31 = shufflevector <4 x float> %30, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  %32 = fadd nsz <4 x float> %29, %31
  %33 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4, i32 0
  %34 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 5, i32 0
  %35 = bitcast float* %33 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  %37 = bitcast float* %34 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = extractelement <2 x float> %36, i32 0
  %40 = extractelement <2 x float> %38, i32 0
  %41 = fsub nsz float %39, %40
  %42 = fadd nsz <2 x float> %36, %38
  %43 = extractelement <2 x float> %36, i32 1
  %44 = extractelement <2 x float> %38, i32 1
  %45 = fsub nsz float %43, %44
  %46 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 6, i32 0
  %47 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 7, i32 0
  %48 = bitcast float* %46 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4
  %50 = bitcast float* %47 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = extractelement <2 x float> %49, i32 0
  %53 = extractelement <2 x float> %51, i32 0
  %54 = fsub nsz float %52, %53
  %55 = fadd nsz <2 x float> %49, %51
  %56 = extractelement <2 x float> %49, i32 1
  %57 = extractelement <2 x float> %51, i32 1
  %58 = fsub nsz float %56, %57
  %59 = fpext float %41 to double
  %60 = fmul nsz double %59, 0x3FE6A09E667F3BCD
  %61 = fpext float %45 to double
  %62 = fmul nsz double %61, 0x3FE6A09E667F3BCD
  %63 = fadd nsz double %60, %62
  %64 = fptrunc double %63 to float
  %65 = fsub nsz double %62, %60
  %66 = fptrunc double %65 to float
  %67 = fpext float %54 to double
  %68 = fmul nsz double %67, 0x3FE6A09E667F3BCD
  %69 = fpext float %58 to double
  %70 = fmul nsz double %69, 0x3FE6A09E667F3BCD
  %71 = fsub nsz double %68, %70
  %72 = fptrunc double %71 to float
  %73 = fadd nsz double %68, %70
  %74 = fptrunc double %73 to float
  %75 = extractelement <2 x float> %42, i32 0
  %76 = insertelement <4 x float> undef, float %75, i32 0
  %77 = extractelement <2 x float> %42, i32 1
  %78 = insertelement <4 x float> %76, float %77, i32 1
  %79 = insertelement <4 x float> %78, float %64, i32 2
  %80 = insertelement <4 x float> %79, float %66, i32 3
  %81 = extractelement <2 x float> %55, i32 0
  %82 = insertelement <4 x float> undef, float %81, i32 0
  %83 = extractelement <2 x float> %55, i32 1
  %84 = insertelement <4 x float> %82, float %83, i32 1
  %85 = insertelement <4 x float> %84, float %72, i32 2
  %86 = insertelement <4 x float> %85, float %74, i32 3
  %87 = fadd nsz <4 x float> %80, %86
  %88 = extractelement <4 x float> %32, i32 0
  %89 = extractelement <4 x float> %87, i32 0
  %90 = fadd nsz float %88, %89
  store float %90, float* %2, align 4
  %91 = insertelement <4 x float> undef, float %77, i32 0
  %92 = insertelement <4 x float> %91, float %81, i32 1
  %93 = insertelement <4 x float> %92, float %66, i32 2
  %94 = insertelement <4 x float> %93, float %72, i32 3
  %95 = insertelement <4 x float> undef, float %83, i32 0
  %96 = insertelement <4 x float> %95, float %75, i32 1
  %97 = insertelement <4 x float> %96, float %74, i32 2
  %98 = insertelement <4 x float> %97, float %64, i32 3
  %99 = fsub nsz <4 x float> %94, %98
  %100 = extractelement <4 x float> %32, i32 1
  %101 = extractelement <4 x float> %87, i32 1
  %102 = fadd nsz float %100, %101
  store float %102, float* %6, align 4
  %103 = extractelement <4 x float> %32, i32 2
  %104 = extractelement <4 x float> %87, i32 2
  %105 = fadd nsz float %103, %104
  store float %105, float* %3, align 4
  %106 = fsub nsz <4 x float> %27, %99
  %107 = bitcast float* %46 to <4 x float>*
  store <4 x float> %106, <4 x float>* %107, align 4
  %108 = fadd nsz <4 x float> %27, %99
  %109 = bitcast float* %4 to <4 x float>*
  store <4 x float> %108, <4 x float>* %109, align 4
  %110 = fsub nsz <4 x float> %32, %87
  %111 = bitcast float* %33 to <4 x float>*
  store <4 x float> %110, <4 x float>* %111, align 4
  %112 = extractelement <4 x float> %32, i32 3
  %113 = extractelement <4 x float> %87, i32 3
  %114 = fadd nsz float %112, %113
  store float %114, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft16(%struct.AVComplexFloat*) #5 {
  %2 = load float, float* getelementptr inbounds ([8 x float], [8 x float]* @ff_cos_16_float, i64 0, i64 1), align 4
  %3 = load float, float* getelementptr inbounds ([8 x float], [8 x float]* @ff_cos_16_float, i64 0, i64 3), align 4
  tail call void @fft8(%struct.AVComplexFloat* %0)
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 8, i32 0
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 9, i32 0
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 11, i32 0
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 10, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 8, i32 1
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 9, i32 1
  %11 = bitcast float* %4 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 4
  %13 = shufflevector <4 x float> %12, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %14 = fadd nsz <4 x float> %13, %12
  %15 = fsub nsz <4 x float> %13, %12
  %16 = shufflevector <4 x float> %14, <4 x float> %15, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %17 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 10, i32 1
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = shufflevector <2 x float> %19, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %21 = shufflevector <2 x float> %20, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %22 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 11, i32 1
  %23 = load float, float* %22, align 4
  %24 = insertelement <2 x float> undef, float %8, i32 0
  %25 = insertelement <2 x float> %24, float %23, i32 1
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %27 = fadd nsz <4 x float> %21, %26
  %28 = fsub nsz <4 x float> %21, %26
  %29 = shufflevector <4 x float> %27, <4 x float> %28, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %30 = extractelement <4 x float> %14, i32 0
  %31 = extractelement <4 x float> %27, i32 0
  %32 = fadd nsz float %30, %31
  %33 = extractelement <4 x float> %15, i32 3
  %34 = extractelement <4 x float> %28, i32 3
  %35 = fadd nsz float %34, %33
  store float %35, float* %10, align 4
  %36 = extractelement <4 x float> %15, i32 2
  %37 = extractelement <4 x float> %28, i32 2
  %38 = fadd nsz float %36, %37
  store float %38, float* %5, align 4
  %39 = fsub nsz <4 x float> %16, %29
  %40 = bitcast float* %7 to <4 x float>*
  store <4 x float> %39, <4 x float>* %40, align 4
  %41 = extractelement <4 x float> %14, i32 1
  %42 = extractelement <4 x float> %27, i32 1
  %43 = fadd nsz float %41, %42
  %44 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 12, i32 0
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 13, i32 0
  %47 = load float, float* %46, align 4
  %48 = fsub nsz float %45, %47
  %49 = fadd nsz float %45, %47
  %50 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 15, i32 0
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 14, i32 0
  %53 = load float, float* %52, align 4
  %54 = fsub nsz float %51, %53
  %55 = fadd nsz float %51, %53
  %56 = fsub nsz float %49, %55
  %57 = fadd nsz float %49, %55
  %58 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 12, i32 1
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 13, i32 1
  %61 = load float, float* %60, align 4
  %62 = fsub nsz float %59, %61
  %63 = fadd nsz float %59, %61
  %64 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 14, i32 1
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 15, i32 1
  %67 = load float, float* %66, align 4
  %68 = fsub nsz float %65, %67
  %69 = fadd nsz float %65, %67
  %70 = fsub nsz float %62, %54
  store float %70, float* %66, align 4
  %71 = fadd nsz float %54, %62
  store float %71, float* %60, align 4
  %72 = fsub nsz float %48, %68
  store float %72, float* %50, align 4
  %73 = fadd nsz float %48, %68
  store float %73, float* %46, align 4
  %74 = fsub nsz float %63, %69
  %75 = fadd nsz float %63, %69
  %76 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 0
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 1
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4, i32 0
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4, i32 1
  %83 = load float, float* %82, align 4
  %84 = fsub nsz float %57, %32
  %85 = fadd nsz float %32, %57
  %86 = fsub nsz float %77, %85
  store float %86, float* %4, align 4
  %87 = fadd nsz float %85, %77
  store float %87, float* %76, align 4
  %88 = fsub nsz float %83, %84
  store float %88, float* %58, align 4
  %89 = fadd nsz float %84, %83
  store float %89, float* %82, align 4
  %90 = fsub nsz float %43, %75
  %91 = fadd nsz float %75, %43
  %92 = fsub nsz float %81, %90
  store float %92, float* %44, align 4
  %93 = fadd nsz float %90, %81
  store float %93, float* %80, align 4
  %94 = fsub nsz float %79, %91
  store float %94, float* %9, align 4
  %95 = fadd nsz float %91, %79
  store float %95, float* %78, align 4
  %96 = extractelement <4 x float> %39, i32 0
  %97 = fpext float %96 to double
  %98 = fmul nsz double %97, 0x3FE6A09E667F3BCD
  %99 = extractelement <4 x float> %39, i32 1
  %100 = fpext float %99 to double
  %101 = fmul nsz double %100, 0x3FE6A09E667F3BCD
  %102 = fadd nsz double %98, %101
  %103 = fptrunc double %102 to float
  %104 = fsub nsz double %101, %98
  %105 = fptrunc double %104 to float
  %106 = fpext float %56 to double
  %107 = fmul nsz double %106, 0x3FE6A09E667F3BCD
  %108 = fpext float %74 to double
  %109 = fmul nsz double %108, 0x3FE6A09E667F3BCD
  %110 = fsub nsz double %107, %109
  %111 = fptrunc double %110 to float
  %112 = fadd nsz double %107, %109
  %113 = fptrunc double %112 to float
  %114 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 0
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2, i32 1
  %117 = load float, float* %116, align 4
  %118 = fadd nsz float %103, %111
  %119 = fsub nsz float %115, %118
  store float %119, float* %7, align 4
  %120 = fadd nsz float %115, %118
  store float %120, float* %114, align 4
  %121 = load float, float* %5, align 4
  %122 = fmul nsz float %2, %121
  %123 = load float, float* %10, align 4
  %124 = fsub nsz float -0.000000e+00, %3
  %125 = fmul nsz float %123, %124
  %126 = fsub nsz float %122, %125
  %127 = fmul nsz float %121, %124
  %128 = fmul nsz float %2, %123
  %129 = fadd nsz float %127, %128
  %130 = fmul nsz float %2, %73
  %131 = fmul nsz float %3, %71
  %132 = fsub nsz float %130, %131
  %133 = fmul nsz float %3, %73
  %134 = fmul nsz float %2, %71
  %135 = fadd nsz float %133, %134
  %136 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 5, i32 0
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 4
  %139 = insertelement <4 x float> undef, float %129, i32 0
  %140 = insertelement <4 x float> %139, float %132, i32 1
  %141 = insertelement <4 x float> %140, float %105, i32 2
  %142 = insertelement <4 x float> %141, float %111, i32 3
  %143 = insertelement <4 x float> undef, float %135, i32 0
  %144 = insertelement <4 x float> %143, float %126, i32 1
  %145 = insertelement <4 x float> %144, float %113, i32 2
  %146 = insertelement <4 x float> %145, float %103, i32 3
  %147 = fsub nsz <4 x float> %142, %146
  %148 = fadd nsz float %105, %113
  %149 = fsub nsz float %117, %148
  store float %149, float* %17, align 4
  %150 = fadd nsz float %117, %148
  store float %150, float* %116, align 4
  %151 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 0
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 1
  %154 = load float, float* %153, align 4
  %155 = fadd nsz float %126, %132
  %156 = fsub nsz float %152, %155
  store float %156, float* %5, align 4
  %157 = fadd nsz float %152, %155
  store float %157, float* %151, align 4
  %158 = fadd nsz float %129, %135
  %159 = fsub nsz <4 x float> %138, %147
  %160 = bitcast float* %46 to <4 x float>*
  store <4 x float> %159, <4 x float>* %160, align 4
  %161 = fadd nsz <4 x float> %138, %147
  %162 = bitcast float* %136 to <4 x float>*
  store <4 x float> %161, <4 x float>* %162, align 4
  %163 = fsub nsz float %154, %158
  store float %163, float* %10, align 4
  %164 = fadd nsz float %154, %158
  store float %164, float* %153, align 4
  %165 = load float, float* %6, align 4
  %166 = fmul nsz float %3, %165
  %167 = load float, float* %22, align 4
  %168 = fsub nsz float -0.000000e+00, %2
  %169 = fmul nsz float %167, %168
  %170 = fsub nsz float %166, %169
  %171 = fmul nsz float %165, %168
  %172 = fmul nsz float %3, %167
  %173 = fadd nsz float %171, %172
  %174 = load float, float* %50, align 4
  %175 = fmul nsz float %3, %174
  %176 = load float, float* %66, align 4
  %177 = fmul nsz float %2, %176
  %178 = fsub nsz float %175, %177
  %179 = fmul nsz float %2, %174
  %180 = fmul nsz float %3, %176
  %181 = fadd nsz float %179, %180
  %182 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3, i32 0
  %183 = load float, float* %182, align 4
  %184 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3, i32 1
  %185 = load float, float* %184, align 4
  %186 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 7, i32 0
  %187 = load float, float* %186, align 4
  %188 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 7, i32 1
  %189 = load float, float* %188, align 4
  %190 = fsub nsz float %178, %170
  %191 = fadd nsz float %170, %178
  %192 = fsub nsz float %183, %191
  store float %192, float* %6, align 4
  %193 = fadd nsz float %183, %191
  store float %193, float* %182, align 4
  %194 = fsub nsz float %189, %190
  store float %194, float* %66, align 4
  %195 = fadd nsz float %190, %189
  store float %195, float* %188, align 4
  %196 = fsub nsz float %173, %181
  %197 = fadd nsz float %173, %181
  %198 = fsub nsz float %187, %196
  store float %198, float* %50, align 4
  %199 = fadd nsz float %187, %196
  store float %199, float* %186, align 4
  %200 = fsub nsz float %185, %197
  store float %200, float* %22, align 4
  %201 = fadd nsz float %185, %197
  store float %201, float* %184, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft32(%struct.AVComplexFloat*) #5 {
  tail call void @fft16(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 16
  tail call void @fft8(%struct.AVComplexFloat* %2)
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 24
  tail call void @fft8(%struct.AVComplexFloat* %3)
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft64(%struct.AVComplexFloat*) #5 {
  tail call void @fft16(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 16
  tail call void @fft8(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 24
  tail call void @fft8(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 32
  tail call void @fft16(%struct.AVComplexFloat* %4)
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 48
  tail call void @fft16(%struct.AVComplexFloat* %5)
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 0), i32 8)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft128(%struct.AVComplexFloat*) #5 {
  tail call void @fft16(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 16
  tail call void @fft8(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 24
  tail call void @fft8(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 32
  tail call void @fft16(%struct.AVComplexFloat* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 48
  tail call void @fft16(%struct.AVComplexFloat* %5) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 0), i32 8) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 64
  tail call void @fft16(%struct.AVComplexFloat* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 80
  tail call void @fft8(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 88
  tail call void @fft8(%struct.AVComplexFloat* %8) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %6, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 96
  tail call void @fft16(%struct.AVComplexFloat* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 112
  tail call void @fft8(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 120
  tail call void @fft8(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %9, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([64 x float], [64 x float]* @ff_cos_128_float, i64 0, i64 0), i32 16)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft256(%struct.AVComplexFloat*) #5 {
  tail call void @fft128(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 128
  tail call void @fft16(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 144
  tail call void @fft8(%struct.AVComplexFloat* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 152
  tail call void @fft8(%struct.AVComplexFloat* %4) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 160
  tail call void @fft16(%struct.AVComplexFloat* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 176
  tail call void @fft16(%struct.AVComplexFloat* %6) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 0), i32 8) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 192
  tail call void @fft16(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 208
  tail call void @fft8(%struct.AVComplexFloat* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 216
  tail call void @fft8(%struct.AVComplexFloat* %9) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 0), i32 4) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 224
  tail call void @fft16(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 240
  tail call void @fft16(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 0), i32 8) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_cos_256_float, i64 0, i64 0), i32 32)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft512(%struct.AVComplexFloat*) #5 {
  tail call void @fft256(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 256
  tail call void @fft128(%struct.AVComplexFloat* %2)
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 384
  tail call void @fft128(%struct.AVComplexFloat* %3)
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft1024(%struct.AVComplexFloat*) #5 {
  tail call void @fft256(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 256
  tail call void @fft128(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 384
  tail call void @fft128(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 512
  tail call void @fft256(%struct.AVComplexFloat* %4)
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 768
  tail call void @fft256(%struct.AVComplexFloat* %5)
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 0), i32 128)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft2048(%struct.AVComplexFloat*) #5 {
  tail call void @fft256(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 256
  tail call void @fft128(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 384
  tail call void @fft128(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 512
  tail call void @fft256(%struct.AVComplexFloat* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 768
  tail call void @fft256(%struct.AVComplexFloat* %5) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 0), i32 128) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1024
  tail call void @fft256(%struct.AVComplexFloat* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1280
  tail call void @fft128(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1408
  tail call void @fft128(%struct.AVComplexFloat* %8) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %6, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1536
  tail call void @fft256(%struct.AVComplexFloat* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1792
  tail call void @fft128(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1920
  tail call void @fft128(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %9, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_cos_2048_float, i64 0, i64 0), i32 256)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft4096(%struct.AVComplexFloat*) #5 {
  tail call void @fft2048(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2048
  tail call void @fft256(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2304
  tail call void @fft128(%struct.AVComplexFloat* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2432
  tail call void @fft128(%struct.AVComplexFloat* %4) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2560
  tail call void @fft256(%struct.AVComplexFloat* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 2816
  tail call void @fft256(%struct.AVComplexFloat* %6) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 0), i32 128) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3072
  tail call void @fft256(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3328
  tail call void @fft128(%struct.AVComplexFloat* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3456
  tail call void @fft128(%struct.AVComplexFloat* %9) #8
  tail call fastcc void @pass(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 0), i32 64) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3584
  tail call void @fft256(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 3840
  tail call void @fft256(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 0), i32 128) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_cos_4096_float, i64 0, i64 0), i32 512)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft8192(%struct.AVComplexFloat*) #5 {
  tail call void @fft4096(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexFloat* %2)
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexFloat* %3)
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft16384(%struct.AVComplexFloat*) #5 {
  tail call void @fft4096(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 8192
  tail call void @fft4096(%struct.AVComplexFloat* %4)
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 12288
  tail call void @fft4096(%struct.AVComplexFloat* %5)
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 0), i32 2048)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft32768(%struct.AVComplexFloat*) #5 {
  tail call void @fft4096(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexFloat* %3) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 8192
  tail call void @fft4096(%struct.AVComplexFloat* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 12288
  tail call void @fft4096(%struct.AVComplexFloat* %5) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 0), i32 2048) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 16384
  tail call void @fft4096(%struct.AVComplexFloat* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 20480
  tail call void @fft2048(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 22528
  tail call void @fft2048(%struct.AVComplexFloat* %8) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %6, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 24576
  tail call void @fft4096(%struct.AVComplexFloat* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 28672
  tail call void @fft2048(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 30720
  tail call void @fft2048(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %9, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([16384 x float], [16384 x float]* @ff_cos_32768_float, i64 0, i64 0), i32 4096)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft65536(%struct.AVComplexFloat*) #5 {
  tail call void @fft32768(%struct.AVComplexFloat* %0)
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 32768
  tail call void @fft16384(%struct.AVComplexFloat* %2)
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 49152
  tail call void @fft16384(%struct.AVComplexFloat* %3)
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([32768 x float], [32768 x float]* @ff_cos_65536_float, i64 0, i64 0), i32 8192)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft131072(%struct.AVComplexFloat*) #5 {
  tail call void @fft32768(%struct.AVComplexFloat* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 32768
  tail call void @fft4096(%struct.AVComplexFloat* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 36864
  tail call void @fft2048(%struct.AVComplexFloat* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 38912
  tail call void @fft2048(%struct.AVComplexFloat* %4) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  %5 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 40960
  tail call void @fft4096(%struct.AVComplexFloat* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 45056
  tail call void @fft4096(%struct.AVComplexFloat* %6) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %2, float* getelementptr inbounds ([8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 0), i32 2048) #8
  %7 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 49152
  tail call void @fft4096(%struct.AVComplexFloat* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 53248
  tail call void @fft2048(%struct.AVComplexFloat* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 55296
  tail call void @fft2048(%struct.AVComplexFloat* %9) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 0), i32 1024) #8
  %10 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 57344
  tail call void @fft4096(%struct.AVComplexFloat* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 61440
  tail call void @fft4096(%struct.AVComplexFloat* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %7, float* getelementptr inbounds ([8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 0), i32 2048) #8
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([32768 x float], [32768 x float]* @ff_cos_65536_float, i64 0, i64 0), i32 8192) #8
  %12 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 65536
  tail call void @fft32768(%struct.AVComplexFloat* %12)
  %13 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 98304
  tail call void @fft32768(%struct.AVComplexFloat* %13)
  tail call fastcc void @pass_big(%struct.AVComplexFloat* %0, float* getelementptr inbounds ([65536 x float], [65536 x float]* @ff_cos_131072_float, i64 0, i64 0), i32 16384)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @pass(%struct.AVComplexFloat* nocapture, float* nocapture readonly, i32) unnamed_addr #5 {
  %4 = shl i32 %2, 1
  %5 = shl i32 %2, 2
  %6 = mul i32 %2, 6
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds float, float* %1, i64 %7
  %9 = add i32 %2, -1
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %10, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %10, i32 1
  %14 = load float, float* %13, align 4
  %15 = sext i32 %6 to i64
  %16 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %15, i32 0
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %15, i32 1
  %19 = load float, float* %18, align 4
  %20 = fsub nsz float %17, %12
  %21 = fadd nsz float %12, %17
  %22 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fsub nsz float %23, %21
  store float %24, float* %11, align 4
  %25 = load float, float* %22, align 4
  %26 = fadd nsz float %21, %25
  store float %26, float* %22, align 4
  %27 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %7, i32 1
  %28 = load float, float* %27, align 4
  %29 = fsub nsz float %28, %20
  store float %29, float* %18, align 4
  %30 = load float, float* %27, align 4
  %31 = fadd nsz float %20, %30
  store float %31, float* %27, align 4
  %32 = fsub nsz float %14, %19
  %33 = fadd nsz float %14, %19
  %34 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %7, i32 0
  %35 = load float, float* %34, align 4
  %36 = fsub nsz float %35, %32
  store float %36, float* %16, align 4
  %37 = load float, float* %34, align 4
  %38 = fadd nsz float %32, %37
  store float %38, float* %34, align 4
  %39 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fsub nsz float %40, %33
  store float %41, float* %13, align 4
  %42 = load float, float* %39, align 4
  %43 = fadd nsz float %33, %42
  store float %43, float* %39, align 4
  %44 = or i32 %5, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %45, i32 0
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds float, float* %1, i64 1
  %49 = load float, float* %48, align 4
  %50 = fmul nsz float %47, %49
  %51 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %45, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds float, float* %8, i64 -1
  %54 = load float, float* %53, align 4
  %55 = fsub nsz float -0.000000e+00, %54
  %56 = fmul nsz float %52, %55
  %57 = fsub nsz float %50, %56
  %58 = fmul nsz float %47, %55
  %59 = fmul nsz float %49, %52
  %60 = fadd nsz float %59, %58
  %61 = or i32 %6, 1
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %62, i32 0
  %64 = load float, float* %63, align 4
  %65 = fmul nsz float %49, %64
  %66 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %62, i32 1
  %67 = load float, float* %66, align 4
  %68 = fmul nsz float %54, %67
  %69 = fsub nsz float %65, %68
  %70 = fmul nsz float %54, %64
  %71 = fmul nsz float %49, %67
  %72 = fadd nsz float %70, %71
  %73 = fsub nsz float %69, %57
  %74 = fadd nsz float %57, %69
  %75 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 0
  %76 = load float, float* %75, align 4
  %77 = fsub nsz float %76, %74
  store float %77, float* %46, align 4
  %78 = load float, float* %75, align 4
  %79 = fadd nsz float %78, %74
  store float %79, float* %75, align 4
  %80 = or i32 %4, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %81, i32 1
  %83 = load float, float* %82, align 4
  %84 = fsub nsz float %83, %73
  store float %84, float* %66, align 4
  %85 = load float, float* %82, align 4
  %86 = fadd nsz float %73, %85
  store float %86, float* %82, align 4
  %87 = fsub nsz float %60, %72
  %88 = fadd nsz float %60, %72
  %89 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %81, i32 0
  %90 = load float, float* %89, align 4
  %91 = fsub nsz float %90, %87
  store float %91, float* %63, align 4
  %92 = load float, float* %89, align 4
  %93 = fadd nsz float %87, %92
  store float %93, float* %89, align 4
  %94 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 1
  %95 = load float, float* %94, align 4
  %96 = fsub nsz float %95, %88
  store float %96, float* %51, align 4
  %97 = load float, float* %94, align 4
  %98 = fadd nsz float %88, %97
  store float %98, float* %94, align 4
  br label %99

99:                                               ; preds = %99, %3
  %100 = phi %struct.AVComplexFloat* [ %0, %3 ], [ %104, %99 ]
  %101 = phi float* [ %1, %3 ], [ %105, %99 ]
  %102 = phi i32 [ %9, %3 ], [ %209, %99 ]
  %103 = phi float* [ %8, %3 ], [ %106, %99 ]
  %104 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %100, i64 2
  %105 = getelementptr inbounds float, float* %101, i64 2
  %106 = getelementptr inbounds float, float* %103, i64 -2
  %107 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %10
  %108 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %107, i64 0, i32 0
  %109 = load float, float* %108, align 4
  %110 = load float, float* %105, align 4
  %111 = fmul nsz float %109, %110
  %112 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %107, i64 0, i32 1
  %113 = load float, float* %112, align 4
  %114 = load float, float* %106, align 4
  %115 = fsub nsz float -0.000000e+00, %114
  %116 = fmul nsz float %113, %115
  %117 = fsub nsz float %111, %116
  %118 = fmul nsz float %109, %115
  %119 = fmul nsz float %110, %113
  %120 = fadd nsz float %119, %118
  %121 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %15
  %122 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %121, i64 0, i32 0
  %123 = load float, float* %122, align 4
  %124 = fmul nsz float %110, %123
  %125 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %121, i64 0, i32 1
  %126 = load float, float* %125, align 4
  %127 = fmul nsz float %114, %126
  %128 = fsub nsz float %124, %127
  %129 = fmul nsz float %114, %123
  %130 = fmul nsz float %110, %126
  %131 = fadd nsz float %129, %130
  %132 = fsub nsz float %128, %117
  %133 = fadd nsz float %117, %128
  %134 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 0, i32 0
  %135 = load float, float* %134, align 4
  %136 = fsub nsz float %135, %133
  store float %136, float* %108, align 4
  %137 = load float, float* %134, align 4
  %138 = fadd nsz float %137, %133
  store float %138, float* %134, align 4
  %139 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %7
  %140 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %139, i64 0, i32 1
  %141 = load float, float* %140, align 4
  %142 = fsub nsz float %141, %132
  store float %142, float* %125, align 4
  %143 = load float, float* %140, align 4
  %144 = fadd nsz float %132, %143
  store float %144, float* %140, align 4
  %145 = fsub nsz float %120, %131
  %146 = fadd nsz float %120, %131
  %147 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %139, i64 0, i32 0
  %148 = load float, float* %147, align 4
  %149 = fsub nsz float %148, %145
  store float %149, float* %122, align 4
  %150 = load float, float* %147, align 4
  %151 = fadd nsz float %145, %150
  store float %151, float* %147, align 4
  %152 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %100, i64 2, i32 1
  %153 = load float, float* %152, align 4
  %154 = fsub nsz float %153, %146
  store float %154, float* %112, align 4
  %155 = load float, float* %152, align 4
  %156 = fadd nsz float %146, %155
  store float %156, float* %152, align 4
  %157 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %45
  %158 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %157, i64 0, i32 0
  %159 = load float, float* %158, align 4
  %160 = getelementptr inbounds float, float* %101, i64 3
  %161 = load float, float* %160, align 4
  %162 = fmul nsz float %159, %161
  %163 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %157, i64 0, i32 1
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds float, float* %103, i64 -3
  %166 = load float, float* %165, align 4
  %167 = fsub nsz float -0.000000e+00, %166
  %168 = fmul nsz float %164, %167
  %169 = fsub nsz float %162, %168
  %170 = fmul nsz float %159, %167
  %171 = fmul nsz float %161, %164
  %172 = fadd nsz float %171, %170
  %173 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %62
  %174 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %173, i64 0, i32 0
  %175 = load float, float* %174, align 4
  %176 = fmul nsz float %161, %175
  %177 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %173, i64 0, i32 1
  %178 = load float, float* %177, align 4
  %179 = fmul nsz float %166, %178
  %180 = fsub nsz float %176, %179
  %181 = fmul nsz float %166, %175
  %182 = fmul nsz float %161, %178
  %183 = fadd nsz float %181, %182
  %184 = fsub nsz float %180, %169
  %185 = fadd nsz float %169, %180
  %186 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %100, i64 3, i32 0
  %187 = load float, float* %186, align 4
  %188 = fsub nsz float %187, %185
  store float %188, float* %158, align 4
  %189 = load float, float* %186, align 4
  %190 = fadd nsz float %189, %185
  store float %190, float* %186, align 4
  %191 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %104, i64 %81
  %192 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %191, i64 0, i32 1
  %193 = load float, float* %192, align 4
  %194 = fsub nsz float %193, %184
  store float %194, float* %177, align 4
  %195 = load float, float* %192, align 4
  %196 = fadd nsz float %184, %195
  store float %196, float* %192, align 4
  %197 = fsub nsz float %172, %183
  %198 = fadd nsz float %172, %183
  %199 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %191, i64 0, i32 0
  %200 = load float, float* %199, align 4
  %201 = fsub nsz float %200, %197
  store float %201, float* %174, align 4
  %202 = load float, float* %199, align 4
  %203 = fadd nsz float %197, %202
  store float %203, float* %199, align 4
  %204 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %100, i64 3, i32 1
  %205 = load float, float* %204, align 4
  %206 = fsub nsz float %205, %198
  store float %206, float* %163, align 4
  %207 = load float, float* %204, align 4
  %208 = fadd nsz float %198, %207
  store float %208, float* %204, align 4
  %209 = add i32 %102, -1
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %99

211:                                              ; preds = %99
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @pass_big(%struct.AVComplexFloat* nocapture, float* nocapture readonly, i32) unnamed_addr #5 {
  %4 = shl i32 %2, 1
  %5 = shl i32 %2, 2
  %6 = mul i32 %2, 6
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds float, float* %1, i64 %7
  %9 = add i32 %2, -1
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %10, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %10, i32 1
  %14 = load float, float* %13, align 4
  %15 = sext i32 %6 to i64
  %16 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %15, i32 0
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %15, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %7, i32 0
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %7, i32 1
  %27 = load float, float* %26, align 4
  %28 = fsub nsz float %17, %12
  %29 = fadd nsz float %12, %17
  %30 = fsub nsz float %21, %29
  store float %30, float* %11, align 4
  %31 = fadd nsz float %29, %21
  store float %31, float* %20, align 4
  %32 = fsub nsz float %27, %28
  store float %32, float* %18, align 4
  %33 = fadd nsz float %28, %27
  store float %33, float* %26, align 4
  %34 = fsub nsz float %14, %19
  %35 = fadd nsz float %14, %19
  %36 = fsub nsz float %25, %34
  store float %36, float* %16, align 4
  %37 = fadd nsz float %34, %25
  store float %37, float* %24, align 4
  %38 = fsub nsz float %23, %35
  store float %38, float* %13, align 4
  %39 = fadd nsz float %35, %23
  store float %39, float* %22, align 4
  %40 = or i32 %5, 1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %41, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds float, float* %1, i64 1
  %45 = load float, float* %44, align 4
  %46 = fmul nsz float %43, %45
  %47 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %41, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds float, float* %8, i64 -1
  %50 = load float, float* %49, align 4
  %51 = fsub nsz float -0.000000e+00, %50
  %52 = fmul nsz float %48, %51
  %53 = fsub nsz float %46, %52
  %54 = fmul nsz float %43, %51
  %55 = fmul nsz float %45, %48
  %56 = fadd nsz float %55, %54
  %57 = or i32 %6, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %58, i32 0
  %60 = load float, float* %59, align 4
  %61 = fmul nsz float %45, %60
  %62 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %58, i32 1
  %63 = load float, float* %62, align 4
  %64 = fmul nsz float %50, %63
  %65 = fsub nsz float %61, %64
  %66 = fmul nsz float %50, %60
  %67 = fmul nsz float %45, %63
  %68 = fadd nsz float %66, %67
  %69 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 0
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 1, i32 1
  %72 = load float, float* %71, align 4
  %73 = or i32 %4, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %74, i32 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %0, i64 %74, i32 1
  %78 = load float, float* %77, align 4
  %79 = fsub nsz float %65, %53
  %80 = fadd nsz float %53, %65
  %81 = fsub nsz float %70, %80
  store float %81, float* %42, align 4
  %82 = fadd nsz float %70, %80
  store float %82, float* %69, align 4
  %83 = fsub nsz float %78, %79
  store float %83, float* %62, align 4
  %84 = fadd nsz float %79, %78
  store float %84, float* %77, align 4
  %85 = fsub nsz float %56, %68
  %86 = fadd nsz float %56, %68
  %87 = fsub nsz float %76, %85
  store float %87, float* %59, align 4
  %88 = fadd nsz float %76, %85
  store float %88, float* %75, align 4
  %89 = fsub nsz float %72, %86
  store float %89, float* %47, align 4
  %90 = fadd nsz float %72, %86
  store float %90, float* %71, align 4
  br label %91

91:                                               ; preds = %91, %3
  %92 = phi float* [ %8, %3 ], [ %98, %91 ]
  %93 = phi i32 [ %9, %3 ], [ %193, %91 ]
  %94 = phi float* [ %1, %3 ], [ %97, %91 ]
  %95 = phi %struct.AVComplexFloat* [ %0, %3 ], [ %96, %91 ]
  %96 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %95, i64 2
  %97 = getelementptr inbounds float, float* %94, i64 2
  %98 = getelementptr inbounds float, float* %92, i64 -2
  %99 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %10
  %100 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %99, i64 0, i32 0
  %101 = load float, float* %100, align 4
  %102 = load float, float* %97, align 4
  %103 = fmul nsz float %101, %102
  %104 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %99, i64 0, i32 1
  %105 = load float, float* %104, align 4
  %106 = load float, float* %98, align 4
  %107 = fsub nsz float -0.000000e+00, %106
  %108 = fmul nsz float %105, %107
  %109 = fsub nsz float %103, %108
  %110 = fmul nsz float %101, %107
  %111 = fmul nsz float %102, %105
  %112 = fadd nsz float %111, %110
  %113 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %15
  %114 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %113, i64 0, i32 0
  %115 = load float, float* %114, align 4
  %116 = fmul nsz float %102, %115
  %117 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %113, i64 0, i32 1
  %118 = load float, float* %117, align 4
  %119 = fmul nsz float %106, %118
  %120 = fsub nsz float %116, %119
  %121 = fmul nsz float %106, %115
  %122 = fmul nsz float %102, %118
  %123 = fadd nsz float %121, %122
  %124 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 0, i32 0
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %95, i64 2, i32 1
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %7
  %129 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 0, i32 0
  %130 = load float, float* %129, align 4
  %131 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %128, i64 0, i32 1
  %132 = load float, float* %131, align 4
  %133 = fsub nsz float %120, %109
  %134 = fadd nsz float %109, %120
  %135 = fsub nsz float %125, %134
  store float %135, float* %100, align 4
  %136 = fadd nsz float %125, %134
  store float %136, float* %124, align 4
  %137 = fsub nsz float %132, %133
  store float %137, float* %117, align 4
  %138 = fadd nsz float %133, %132
  store float %138, float* %131, align 4
  %139 = fsub nsz float %112, %123
  %140 = fadd nsz float %112, %123
  %141 = fsub nsz float %130, %139
  store float %141, float* %114, align 4
  %142 = fadd nsz float %130, %139
  store float %142, float* %129, align 4
  %143 = fsub nsz float %127, %140
  store float %143, float* %104, align 4
  %144 = fadd nsz float %127, %140
  store float %144, float* %126, align 4
  %145 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %41
  %146 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 0, i32 0
  %147 = load float, float* %146, align 4
  %148 = getelementptr inbounds float, float* %94, i64 3
  %149 = load float, float* %148, align 4
  %150 = fmul nsz float %147, %149
  %151 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %145, i64 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds float, float* %92, i64 -3
  %154 = load float, float* %153, align 4
  %155 = fsub nsz float -0.000000e+00, %154
  %156 = fmul nsz float %152, %155
  %157 = fsub nsz float %150, %156
  %158 = fmul nsz float %147, %155
  %159 = fmul nsz float %149, %152
  %160 = fadd nsz float %159, %158
  %161 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %58
  %162 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %161, i64 0, i32 0
  %163 = load float, float* %162, align 4
  %164 = fmul nsz float %149, %163
  %165 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %161, i64 0, i32 1
  %166 = load float, float* %165, align 4
  %167 = fmul nsz float %154, %166
  %168 = fsub nsz float %164, %167
  %169 = fmul nsz float %154, %163
  %170 = fmul nsz float %149, %166
  %171 = fadd nsz float %169, %170
  %172 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %95, i64 3, i32 0
  %173 = load float, float* %172, align 4
  %174 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %95, i64 3, i32 1
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %96, i64 %74
  %177 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %176, i64 0, i32 0
  %178 = load float, float* %177, align 4
  %179 = getelementptr inbounds %struct.AVComplexFloat, %struct.AVComplexFloat* %176, i64 0, i32 1
  %180 = load float, float* %179, align 4
  %181 = fsub nsz float %168, %157
  %182 = fadd nsz float %157, %168
  %183 = fsub nsz float %173, %182
  store float %183, float* %146, align 4
  %184 = fadd nsz float %173, %182
  store float %184, float* %172, align 4
  %185 = fsub nsz float %180, %181
  store float %185, float* %165, align 4
  %186 = fadd nsz float %181, %180
  store float %186, float* %179, align 4
  %187 = fsub nsz float %160, %171
  %188 = fadd nsz float %160, %171
  %189 = fsub nsz float %178, %187
  store float %189, float* %162, align 4
  %190 = fadd nsz float %178, %187
  store float %190, float* %177, align 4
  %191 = fsub nsz float %175, %188
  store float %191, float* %151, align 4
  %192 = fadd nsz float %175, %188
  store float %192, float* %174, align 4
  %193 = add i32 %93, -1
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %91

195:                                              ; preds = %91
  ret void
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #2

; Function Attrs: cold nofree norecurse nounwind optsize ssp uwtable writeonly
define internal void @ff_init_53_tabs() #6 {
  store <4 x float> <float 0x3FEBB67AE0000000, float 0x3FEBB67AE0000000, float 5.000000e-01, float 5.000000e-01>, <4 x float>* bitcast ([4 x %struct.AVComplexFloat]* @ff_cos_53_float to <4 x float>*), align 32
  store <4 x float> <float 0x3FD3C6EF40000000, float 0x3FEE6F0E20000000, float 0x3FE9E377A0000000, float 0x3FE2CF2300000000>, <4 x float>* bitcast (float* getelementptr inbounds ([4 x %struct.AVComplexFloat], [4 x %struct.AVComplexFloat]* @ff_cos_53_float, i64 0, i64 2, i32 0) to <4 x float>*), align 16
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_16() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FD921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [8 x float], [8 x float]* @ff_cos_16_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 5
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [8 x float], [8 x float]* @ff_cos_16_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 8, %12
  %17 = getelementptr inbounds [8 x float], [8 x float]* @ff_cos_16_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 4
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_32() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FC921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 9
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 16, %12
  %17 = getelementptr inbounds [16 x float], [16 x float]* @ff_cos_32_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 8
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_64() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FB921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 17
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 32, %12
  %17 = getelementptr inbounds [32 x float], [32 x float]* @ff_cos_64_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_128() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FA921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [64 x float], [64 x float]* @ff_cos_128_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 33
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [64 x float], [64 x float]* @ff_cos_128_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 64, %12
  %17 = getelementptr inbounds [64 x float], [64 x float]* @ff_cos_128_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 32
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_256() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F9921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [128 x float], [128 x float]* @ff_cos_256_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 65
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [128 x float], [128 x float]* @ff_cos_256_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 128, %12
  %17 = getelementptr inbounds [128 x float], [128 x float]* @ff_cos_256_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 64
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_512() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F8921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 129
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 256, %12
  %17 = getelementptr inbounds [256 x float], [256 x float]* @ff_cos_512_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 128
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_1024() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F7921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 257
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 512, %12
  %17 = getelementptr inbounds [512 x float], [512 x float]* @ff_cos_1024_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 256
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_2048() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F6921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [1024 x float], [1024 x float]* @ff_cos_2048_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 513
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [1024 x float], [1024 x float]* @ff_cos_2048_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 1024, %12
  %17 = getelementptr inbounds [1024 x float], [1024 x float]* @ff_cos_2048_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 512
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_4096() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F5921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [2048 x float], [2048 x float]* @ff_cos_4096_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 1025
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [2048 x float], [2048 x float]* @ff_cos_4096_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 2048, %12
  %17 = getelementptr inbounds [2048 x float], [2048 x float]* @ff_cos_4096_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 1024
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_8192() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F4921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 2049
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 4096, %12
  %17 = getelementptr inbounds [4096 x float], [4096 x float]* @ff_cos_8192_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 2048
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_16384() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F3921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 4097
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 8192, %12
  %17 = getelementptr inbounds [8192 x float], [8192 x float]* @ff_cos_16384_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 4096
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_32768() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F2921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [16384 x float], [16384 x float]* @ff_cos_32768_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 8193
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [16384 x float], [16384 x float]* @ff_cos_32768_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 16384, %12
  %17 = getelementptr inbounds [16384 x float], [16384 x float]* @ff_cos_32768_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 8192
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_65536() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F1921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [32768 x float], [32768 x float]* @ff_cos_65536_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 16385
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [32768 x float], [32768 x float]* @ff_cos_65536_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 32768, %12
  %17 = getelementptr inbounds [32768 x float], [32768 x float]* @ff_cos_65536_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 16384
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_131072() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %9, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F0921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds [65536 x float], [65536 x float]* @ff_cos_131072_float, i64 0, i64 %2
  store float %7, float* %8, align 4
  %9 = add nuw nsw i64 %2, 1
  %10 = icmp eq i64 %9, 32769
  br i1 %10, label %11, label %1

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %19, %11 ], [ 1, %1 ]
  %13 = getelementptr inbounds [65536 x float], [65536 x float]* @ff_cos_131072_float, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = sub nuw nsw i64 65536, %12
  %17 = getelementptr inbounds [65536 x float], [65536 x float]* @ff_cos_131072_float, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, 32768
  br i1 %20, label %21, label %11

21:                                               ; preds = %11
  ret void
}

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i32 0, i32 32}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
