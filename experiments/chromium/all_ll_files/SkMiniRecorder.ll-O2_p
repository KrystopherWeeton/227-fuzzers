; ModuleID = '../../third_party/skia/src/core/SkMiniRecorder.cpp'
source_filename = "../../third_party/skia/src/core/SkMiniRecorder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%class.SkMiniRecorder = type { i32, [4 x i8], [88 x i8] }
%class.sk_sp = type { %class.SkPicture* }
%struct.SkRect = type { float, float, float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkRecords::DrawPath" = type { %class.SkPaint, %"struct.SkRecords::PreCachedPath" }
%class.SkPaint = type <{ %class.sk_sp.5, %class.sk_sp.6, %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.5 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.7 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.8 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"struct.SkRecords::PreCachedPath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.10, i32, %"struct.std::__1::atomic.13", %"struct.std::__1::atomic.13", i8 }>
%class.sk_sp.10 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.11, %class.SkTDArray.12, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.11 = type { i8*, i32, i32 }
%class.SkTDArray.12 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.18 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.18 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%class.SkMiniPicture = type { %class.SkPicture.base, %struct.SkRect, [4 x i8], %"struct.SkRecords::DrawPath" }
%class.SkPicture.base = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1" }>
%class.SkPath = type <{ %class.sk_sp.10, i32, %"struct.std::__1::atomic.13", %"struct.std::__1::atomic.13", i8, i8 }>
%"struct.SkRecords::DrawRect" = type { %class.SkPaint, %struct.SkRect }
%class.SkMiniPicture.29 = type { %class.SkPicture.base, %struct.SkRect, [4 x i8], %"struct.SkRecords::DrawRect" }
%"struct.SkRecords::DrawTextBlob" = type { %class.SkPaint, %class.sk_sp.25, float, float }
%class.sk_sp.25 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.19, %struct.SkRect, i32, %"struct.std::__1::atomic.20" }
%class.SkNVRefCnt.19 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%class.SkMiniPicture.31 = type { %class.SkPicture.base, %struct.SkRect, %"struct.SkRecords::DrawTextBlob" }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.32, [384 x i64], %class.sk_sp.33, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.35" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.32 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.33 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.SkRecords::Draw" = type <{ %class.SkM44, %class.SkCanvas*, %class.SkPicture**, %class.SkDrawable**, i32, [4 x i8] }>
%class.SkM44 = type { [16 x float] }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkEmptyPicture = type { %class.SkPicture.base, [7 x i8] }
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%class.SkBigPicture = type { %class.SkPicture.base, %struct.SkRect, i64, %class.sk_sp.41, %"class.std::__1::unique_ptr.46", %class.sk_sp.56 }
%class.sk_sp.41 = type { %class.SkRecord* }
%class.SkRecord = type { %class.SkRefCnt.base, i32, i32, %class.SkAutoTMalloc, %class.SkArenaAlloc, i64 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkRecord::Record"* }
%"struct.SkRecord::Record" = type { i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.SkBigPicture::SnapshotArray"* }
%"class.SkBigPicture::SnapshotArray" = type <{ %class.SkAutoTMalloc.49, i32, [4 x i8] }>
%class.SkAutoTMalloc.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkPicture** }
%class.sk_sp.56 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }

$_ZN14SkEmptyPictureD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK14SkEmptyPicture8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE = comdat any

$_ZNK14SkEmptyPicture8cullRectEv = comdat any

$_ZNK14SkEmptyPicture18approximateOpCountEb = comdat any

$_ZNK14SkEmptyPicture20approximateBytesUsedEv = comdat any

$_ZNK9SkPicture14asSkBigPictureEv = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawPathEEC2EPK6SkRectOS1_ = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawPathEED2Ev = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawPathEED0Ev = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8cullRectEv = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE18approximateOpCountEb = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE20approximateBytesUsedEv = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawRectEEC2EPK6SkRectOS1_ = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawRectEED2Ev = comdat any

$_ZN13SkMiniPictureIN9SkRecords8DrawRectEED0Ev = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8cullRectEv = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE18approximateOpCountEb = comdat any

$_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE20approximateBytesUsedEv = comdat any

$_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEEC2EPK6SkRectOS1_ = comdat any

$_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED2Ev = comdat any

$_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED0Ev = comdat any

$_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE = comdat any

$_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8cullRectEv = comdat any

$_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE18approximateOpCountEb = comdat any

$_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE20approximateBytesUsedEv = comdat any

$_ZTV14SkEmptyPicture = comdat any

$_ZTV13SkMiniPictureIN9SkRecords8DrawPathEE = comdat any

$_ZTV13SkMiniPictureIN9SkRecords8DrawRectEE = comdat any

$_ZTV13SkMiniPictureIN9SkRecords12DrawTextBlobEE = comdat any

@_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE5empty = internal unnamed_addr global %class.SkPicture* null, align 8
@_ZTV14SkEmptyPicture = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPicture*)* @_ZN9SkPictureD2Ev to i8*), i8* bitcast (void (%class.SkEmptyPicture*)* @_ZN14SkEmptyPictureD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkEmptyPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)* @_ZNK14SkEmptyPicture8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkEmptyPicture*)* @_ZNK14SkEmptyPicture8cullRectEv to i8*), i8* bitcast (i32 (%class.SkEmptyPicture*, i1)* @_ZNK14SkEmptyPicture18approximateOpCountEb to i8*), i8* bitcast (i64 (%class.SkEmptyPicture*)* @_ZNK14SkEmptyPicture20approximateBytesUsedEv to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, comdat, align 8
@_ZTV13SkMiniPictureIN9SkRecords8DrawPathEE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMiniPicture*)* @_ZN13SkMiniPictureIN9SkRecords8DrawPathEED2Ev to i8*), i8* bitcast (void (%class.SkMiniPicture*)* @_ZN13SkMiniPictureIN9SkRecords8DrawPathEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkMiniPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkMiniPicture*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8cullRectEv to i8*), i8* bitcast (i32 (%class.SkMiniPicture*, i1)* @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE18approximateOpCountEb to i8*), i8* bitcast (i64 (%class.SkMiniPicture*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE20approximateBytesUsedEv to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, comdat, align 8
@_ZTV13SkMiniPictureIN9SkRecords8DrawRectEE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMiniPicture.29*)* @_ZN13SkMiniPictureIN9SkRecords8DrawRectEED2Ev to i8*), i8* bitcast (void (%class.SkMiniPicture.29*)* @_ZN13SkMiniPictureIN9SkRecords8DrawRectEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkMiniPicture.29*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkMiniPicture.29*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8cullRectEv to i8*), i8* bitcast (i32 (%class.SkMiniPicture.29*, i1)* @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE18approximateOpCountEb to i8*), i8* bitcast (i64 (%class.SkMiniPicture.29*)* @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE20approximateBytesUsedEv to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, comdat, align 8
@_ZTV13SkMiniPictureIN9SkRecords12DrawTextBlobEE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMiniPicture.31*)* @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED2Ev to i8*), i8* bitcast (void (%class.SkMiniPicture.31*)* @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkMiniPicture.31*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)* @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkMiniPicture.31*)* @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8cullRectEv to i8*), i8* bitcast (i32 (%class.SkMiniPicture.31*, i1)* @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE18approximateOpCountEb to i8*), i8* bitcast (i64 (%class.SkMiniPicture.31*)* @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE20approximateBytesUsedEv to i8*), i8* bitcast (%class.SkBigPicture* (%class.SkPicture*)* @_ZNK9SkPicture14asSkBigPictureEv to i8*)] }, comdat, align 8

@_ZN14SkMiniRecorderC1Ev = hidden unnamed_addr alias void (%class.SkMiniRecorder*), void (%class.SkMiniRecorder*)* @_ZN14SkMiniRecorderC2Ev
@_ZN14SkMiniRecorderD1Ev = hidden unnamed_addr alias void (%class.SkMiniRecorder*), void (%class.SkMiniRecorder*)* @_ZN14SkMiniRecorderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14SkMiniRecorderC2Ev(%class.SkMiniRecorder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkMiniRecorderD2Ev(%class.SkMiniRecorder*) unnamed_addr #1 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  call void @_ZN14SkMiniRecorder15detachAsPictureEPK6SkRect(%class.sk_sp* nonnull sret %2, %class.SkMiniRecorder* %0, %struct.SkRect* null)
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %8 = load %class.SkPicture*, %class.SkPicture** %7, align 8
  %9 = icmp eq %class.SkPicture* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkPicture* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkPicture* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #9
  br label %20

20:                                               ; preds = %14, %10, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkMiniRecorder15detachAsPictureEPK6SkRect(%class.sk_sp* noalias nocapture sret, %class.SkMiniRecorder*, %struct.SkRect*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %66 [
    i32 0, label %6
    i32 1, label %29
    i32 2, label %39
    i32 3, label %47
  ]

6:                                                ; preds = %3
  %7 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %7, label %8 [
    i8 2, label %19
    i8 0, label %9
  ]

8:                                                ; preds = %9, %6
  br label %16

9:                                                ; preds = %6
  %10 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %11 = extractvalue { i8, i1 } %10, 1
  br i1 %11, label %12, label %8

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 24) #10
  %14 = bitcast i8* %13 to %class.SkPicture*
  tail call void @_ZN9SkPictureC2Ev(%class.SkPicture* nonnull %14) #9
  %15 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV14SkEmptyPicture, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store i8* %13, i8** bitcast (%class.SkPicture** @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE5empty to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %22

16:                                               ; preds = %8, %16
  %17 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %16

19:                                               ; preds = %16, %6
  %20 = load %class.SkPicture*, %class.SkPicture** @_ZZN14SkMiniRecorder15detachAsPictureEPK6SkRectE5empty, align 8
  %21 = icmp eq %class.SkPicture* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %12, %19
  %23 = phi %class.SkPicture* [ %14, %12 ], [ %20, %19 ]
  %24 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !2
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi %class.SkPicture* [ null, %19 ], [ %23, %22 ]
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPicture* %27, %class.SkPicture** %28, align 8, !alias.scope !2
  br label %68

29:                                               ; preds = %3
  %30 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 2, i64 0
  %31 = bitcast i8* %30 to %"struct.SkRecords::DrawPath"*
  %32 = tail call i8* @_Znwm(i64 128) #10, !noalias !5
  %33 = bitcast i8* %32 to %class.SkMiniPicture*
  tail call void @_ZN13SkMiniPictureIN9SkRecords8DrawPathEEC2EPK6SkRectOS1_(%class.SkMiniPicture* nonnull %33, %struct.SkRect* %2, %"struct.SkRecords::DrawPath"* dereferenceable(88) %31) #9, !noalias !5
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 2, i64 72
  %36 = bitcast i8* %35 to %class.SkPath*
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %36) #9
  %37 = bitcast i8* %30 to %class.SkPaint*
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %37) #9
  store i32 0, i32* %4, align 8
  %38 = bitcast %class.sk_sp* %0 to i64*
  store i64 %34, i64* %38, align 8
  br label %68

39:                                               ; preds = %3
  %40 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 2, i64 0
  %41 = bitcast i8* %40 to %"struct.SkRecords::DrawRect"*
  %42 = tail call i8* @_Znwm(i64 128) #10, !noalias !8
  %43 = bitcast i8* %42 to %class.SkMiniPicture.29*
  tail call void @_ZN13SkMiniPictureIN9SkRecords8DrawRectEEC2EPK6SkRectOS1_(%class.SkMiniPicture.29* nonnull %43, %struct.SkRect* %2, %"struct.SkRecords::DrawRect"* dereferenceable(88) %41) #9, !noalias !8
  %44 = ptrtoint i8* %42 to i64
  %45 = bitcast i8* %40 to %class.SkPaint*
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %45) #9
  store i32 0, i32* %4, align 8
  %46 = bitcast %class.sk_sp* %0 to i64*
  store i64 %44, i64* %46, align 8
  br label %68

47:                                               ; preds = %3
  %48 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 2, i64 0
  %49 = bitcast i8* %48 to %"struct.SkRecords::DrawTextBlob"*
  %50 = tail call i8* @_Znwm(i64 128) #10, !noalias !11
  %51 = bitcast i8* %50 to %class.SkMiniPicture.31*
  tail call void @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEEC2EPK6SkRectOS1_(%class.SkMiniPicture.31* nonnull %51, %struct.SkRect* %2, %"struct.SkRecords::DrawTextBlob"* dereferenceable(88) %49) #9, !noalias !11
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %1, i64 0, i32 2, i64 72
  %54 = bitcast i8* %53 to %class.SkTextBlob**
  %55 = load %class.SkTextBlob*, %class.SkTextBlob** %54, align 8
  %56 = icmp eq %class.SkTextBlob* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %55) #9
  %62 = bitcast %class.SkTextBlob* %55 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %62) #9
  br label %63

63:                                               ; preds = %61, %57, %47
  %64 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %64) #9
  store i32 0, i32* %4, align 8
  %65 = bitcast %class.sk_sp* %0 to i64*
  store i64 %52, i64* %65, align 8
  br label %68

66:                                               ; preds = %3
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPicture* null, %class.SkPicture** %67, align 8
  br label %68

68:                                               ; preds = %66, %63, %39, %29, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkMiniRecorder8drawRectERK6SkRectRK7SkPaint(%class.SkMiniRecorder*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  store i32 2, i32* %4, align 8
  %8 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %9 = bitcast i8* %8 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %9, %class.SkPaint* dereferenceable(72) %2) #9
  %10 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 72
  %11 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i1 [ true, %7 ], [ false, %3 ]
  ret i1 %13
}

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkMiniRecorder8drawPathERK6SkPathRK7SkPaint(%class.SkMiniRecorder*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  store i32 1, i32* %4, align 8
  %8 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %9 = bitcast i8* %8 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %9, %class.SkPaint* dereferenceable(72) %2) #9
  %10 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 72
  %11 = bitcast i8* %10 to %"struct.SkRecords::PreCachedPath"*
  tail call void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"* %11, %class.SkPath* dereferenceable(16) %1) #9
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i1 [ true, %7 ], [ false, %3 ]
  ret i1 %13
}

declare void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkMiniRecorder12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkMiniRecorder*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  store i32 3, i32* %6, align 8
  %10 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %11 = bitcast i8* %10 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %11, %class.SkPaint* dereferenceable(72) %4) #9
  %12 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 72
  %13 = icmp eq %class.SkTextBlob* %1, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !14
  br label %17

17:                                               ; preds = %14, %9
  %18 = ptrtoint %class.SkTextBlob* %1 to i64
  %19 = bitcast i8* %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 80
  %21 = bitcast i8* %20 to float*
  store float %2, float* %21, align 8
  %22 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 84
  %23 = bitcast i8* %22 to float*
  store float %3, float* %23, align 4
  br label %24

24:                                               ; preds = %5, %17
  %25 = phi i1 [ true, %17 ], [ false, %5 ]
  ret i1 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder*, %class.SkCanvas*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.SkRecords::Draw", align 8
  %4 = alloca %"class.SkRecords::Draw", align 8
  %5 = alloca %"class.SkRecords::Draw", align 8
  %6 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %47 [
    i32 3, label %26
    i32 1, label %8
    i32 2, label %18
  ]

8:                                                ; preds = %2
  store i32 0, i32* %6, align 8
  %9 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %10 = bitcast i8* %9 to %"struct.SkRecords::DrawPath"*
  %11 = bitcast %"class.SkRecords::Draw"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %3, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %12, %class.SkCanvas* %1) #9
  %13 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %3, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %13, align 8
  %14 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %3, i64 0, i32 2
  %15 = bitcast %class.SkPicture*** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_8DrawPathEEEvRKT_(%"class.SkRecords::Draw"* nonnull %3, %"struct.SkRecords::DrawPath"* dereferenceable(88) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #9
  %16 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 72
  %17 = bitcast i8* %16 to %class.SkPath*
  call void @_ZN6SkPathD2Ev(%class.SkPath* %17) #9
  br label %44

18:                                               ; preds = %2
  store i32 0, i32* %6, align 8
  %19 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %20 = bitcast i8* %19 to %"struct.SkRecords::DrawRect"*
  %21 = bitcast %"class.SkRecords::Draw"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %22, %class.SkCanvas* %1) #9
  %23 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %23, align 8
  %24 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 2
  %25 = bitcast %class.SkPicture*** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_8DrawRectEEEvRKT_(%"class.SkRecords::Draw"* nonnull %4, %"struct.SkRecords::DrawRect"* dereferenceable(88) %20) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %21) #9
  br label %44

26:                                               ; preds = %2
  store i32 0, i32* %6, align 8
  %27 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 0
  %28 = bitcast i8* %27 to %"struct.SkRecords::DrawTextBlob"*
  %29 = bitcast %"class.SkRecords::Draw"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %5, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %30, %class.SkCanvas* %1) #9
  %31 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %5, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %31, align 8
  %32 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %5, i64 0, i32 2
  %33 = bitcast %class.SkPicture*** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_12DrawTextBlobEEEvRKT_(%"class.SkRecords::Draw"* nonnull %5, %"struct.SkRecords::DrawTextBlob"* dereferenceable(88) %28) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #9
  %34 = getelementptr inbounds %class.SkMiniRecorder, %class.SkMiniRecorder* %0, i64 0, i32 2, i64 72
  %35 = bitcast i8* %34 to %class.SkTextBlob**
  %36 = load %class.SkTextBlob*, %class.SkTextBlob** %35, align 8
  %37 = icmp eq %class.SkTextBlob* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %36) #9
  %43 = bitcast %class.SkTextBlob* %36 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %43) #9
  br label %44

44:                                               ; preds = %42, %38, %26, %18, %8
  %45 = phi i8* [ %9, %8 ], [ %19, %18 ], [ %27, %26 ], [ %27, %38 ], [ %27, %42 ]
  %46 = bitcast i8* %45 to %class.SkPaint*
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* %46) #9
  br label %47

47:                                               ; preds = %44, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD2Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #4

declare void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* sret, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN9SkPictureC2Ev(%class.SkPicture*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9SkPictureD2Ev(%class.SkPicture*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkEmptyPictureD0Ev(%class.SkEmptyPicture*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SkEmptyPicture* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %2) #9
  %3 = bitcast %class.SkEmptyPicture* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14SkEmptyPicture8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE(%class.SkEmptyPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK14SkEmptyPicture8cullRectEv(%class.SkEmptyPicture*) unnamed_addr #1 comdat align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK14SkEmptyPicture18approximateOpCountEb(%class.SkEmptyPicture*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK14SkEmptyPicture20approximateBytesUsedEv(%class.SkEmptyPicture*) unnamed_addr #1 comdat align 2 {
  ret i64 24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBigPicture* @_ZNK9SkPicture14asSkBigPictureEv(%class.SkPicture*) unnamed_addr #1 comdat align 2 {
  ret %class.SkBigPicture* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawPathEEC2EPK6SkRectOS1_(%class.SkMiniPicture*, %struct.SkRect*, %"struct.SkRecords::DrawPath"* dereferenceable(88)) unnamed_addr #8 comdat align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast %class.SkMiniPicture* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureC2Ev(%class.SkPicture* %5) #9
  %6 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawPathEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 1
  %8 = icmp eq %struct.SkRect* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.SkRect* %7 to i8*
  %11 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4 %11, i64 16, i1 false)
  br label %77

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 1, i32 0, i32 4
  %14 = load i8, i8* %13, align 2
  %15 = and i8 %14, 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %71

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %class.SkPathRef*, %class.SkPathRef** %18, align 8
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 9
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 1
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 3, i32 0
  %26 = load %struct.SkPoint*, %struct.SkPoint** %25, align 8
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 3, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %24, %struct.SkPoint* %26, i32 %28) #9
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 10
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 1
  store i8 0, i8* %20, align 8
  br label %32

32:                                               ; preds = %23, %17
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 1
  %34 = bitcast %struct.SkRect* %33 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 4
  %36 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 0
  %37 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %38 = bitcast <2 x i64>* %4 to %struct.SkRect*
  store <2 x i64> %35, <2 x i64>* %4, align 16
  %39 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %36) #9
  br i1 %39, label %40, label %68

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 0, i32 8, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = lshr i32 %42, 6
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 0, i32 2, i32 0
  %49 = bitcast %class.SkMaskFilter** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"struct.SkRecords::DrawPath"* %2 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = or i64 %52, %50
  %54 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 0, i32 4, i32 0
  %55 = bitcast %class.SkImageFilter** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %53, %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %47, %40
  %60 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %36, %struct.SkRect* nonnull dereferenceable(16) %38, %struct.SkRect* nonnull %38, i8 zeroext %45) #9
  br label %61

61:                                               ; preds = %59, %47
  %62 = phi %struct.SkRect* [ %60, %59 ], [ %38, %47 ]
  %63 = bitcast %struct.SkRect* %62 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %62, i64 0, i32 2
  %66 = bitcast float* %65 to <2 x float>*
  %67 = load <2 x float>, <2 x float>* %66, align 4
  br label %68

68:                                               ; preds = %61, %32
  %69 = phi <2 x float> [ %64, %61 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %32 ]
  %70 = phi <2 x float> [ %67, %61 ], [ <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000>, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  br label %71

71:                                               ; preds = %12, %68
  %72 = phi <2 x float> [ %69, %68 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %12 ]
  %73 = phi <2 x float> [ %70, %68 ], [ <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000>, %12 ]
  %74 = bitcast %struct.SkRect* %7 to <2 x float>*
  store <2 x float> %72, <2 x float>* %74, align 4
  %75 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 1, i32 2
  %76 = bitcast float* %75 to <2 x float>*
  store <2 x float> %73, <2 x float>* %76, align 4
  br label %77

77:                                               ; preds = %71, %9
  %78 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 0
  %79 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 0
  call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %78, %class.SkPaint* dereferenceable(72) %79) #9
  %80 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 1
  %81 = getelementptr inbounds %"struct.SkRecords::DrawPath", %"struct.SkRecords::DrawPath"* %2, i64 0, i32 1
  %82 = bitcast %"struct.SkRecords::PreCachedPath"* %80 to %class.SkPath*
  %83 = bitcast %"struct.SkRecords::PreCachedPath"* %81 to %class.SkPath*
  call void @_ZN6SkPathC2ERKS_(%class.SkPath* %82, %class.SkPath* dereferenceable(16) %83) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawPathEED2Ev(%class.SkMiniPicture*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawPathEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 1
  %4 = bitcast %"struct.SkRecords::PreCachedPath"* %3 to %class.SkPath*
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %4) #9
  %5 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %5) #9
  %6 = bitcast %class.SkMiniPicture* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %6) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawPathEED0Ev(%class.SkMiniPicture*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawPathEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 1
  %4 = bitcast %"struct.SkRecords::PreCachedPath"* %3 to %class.SkPath*
  tail call void @_ZN6SkPathD2Ev(%class.SkPath* %4) #9
  %5 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %5) #9
  %6 = bitcast %class.SkMiniPicture* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %6) #9
  %7 = bitcast %class.SkMiniPicture* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE(%class.SkMiniPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.SkRecords::Draw", align 8
  %5 = bitcast %"class.SkRecords::Draw"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %6, %class.SkCanvas* %1) #9
  %7 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %7, align 8
  %8 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 3
  %10 = bitcast %class.SkPicture*** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_8DrawPathEEEvRKT_(%"class.SkRecords::Draw"* nonnull %4, %"struct.SkRecords::DrawPath"* dereferenceable(88) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE8cullRectEv(%class.SkMiniPicture*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 1
  %3 = bitcast %struct.SkRect* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.SkMiniPicture, %class.SkMiniPicture* %0, i64 0, i32 1, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE18approximateOpCountEb(%class.SkMiniPicture*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK13SkMiniPictureIN9SkRecords8DrawPathEE20approximateBytesUsedEv(%class.SkMiniPicture*) unnamed_addr #1 comdat align 2 {
  ret i64 128
}

declare zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint*) local_unnamed_addr #2

declare dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint*, %struct.SkRect* dereferenceable(16), %struct.SkRect*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZN7SkPaintC1EOS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN6SkPathC2ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawRectEEC2EPK6SkRectOS1_(%class.SkMiniPicture.29*, %struct.SkRect*, %"struct.SkRecords::DrawRect"* dereferenceable(88)) unnamed_addr #8 comdat align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast %class.SkMiniPicture.29* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureC2Ev(%class.SkPicture* %5) #9
  %6 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawRectEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 1
  %8 = icmp eq %struct.SkRect* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.SkRect* %7 to i8*
  %11 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4 %11, i64 16, i1 false)
  br label %54

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 1
  %14 = bitcast %struct.SkRect* %13 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 0
  %17 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = bitcast <2 x i64>* %4 to %struct.SkRect*
  store <2 x i64> %15, <2 x i64>* %4, align 16
  %19 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %16) #9
  br i1 %19, label %20, label %48

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 0, i32 8, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = lshr i32 %22, 6
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 0, i32 2, i32 0
  %29 = bitcast %class.SkMaskFilter** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.SkRecords::DrawRect"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = or i64 %32, %30
  %34 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 0, i32 4, i32 0
  %35 = bitcast %class.SkImageFilter** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = or i64 %33, %36
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %27, %20
  %40 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %16, %struct.SkRect* nonnull dereferenceable(16) %18, %struct.SkRect* nonnull %18, i8 zeroext %25) #9
  br label %41

41:                                               ; preds = %39, %27
  %42 = phi %struct.SkRect* [ %40, %39 ], [ %18, %27 ]
  %43 = bitcast %struct.SkRect* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %42, i64 0, i32 2
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  br label %48

48:                                               ; preds = %12, %41
  %49 = phi <2 x float> [ %44, %41 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %12 ]
  %50 = phi <2 x float> [ %47, %41 ], [ <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000>, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  %51 = bitcast %struct.SkRect* %7 to <2 x float>*
  store <2 x float> %49, <2 x float>* %51, align 4
  %52 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 1, i32 2
  %53 = bitcast float* %52 to <2 x float>*
  store <2 x float> %50, <2 x float>* %53, align 4
  br label %54

54:                                               ; preds = %48, %9
  %55 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 3, i32 0
  %56 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 0
  call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %55, %class.SkPaint* dereferenceable(72) %56) #9
  %57 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 3, i32 1
  %58 = getelementptr inbounds %"struct.SkRecords::DrawRect", %"struct.SkRecords::DrawRect"* %2, i64 0, i32 1
  %59 = bitcast %struct.SkRect* %57 to i8*
  %60 = bitcast %struct.SkRect* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawRectEED2Ev(%class.SkMiniPicture.29*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawRectEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 3, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #9
  %4 = bitcast %class.SkMiniPicture.29* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords8DrawRectEED0Ev(%class.SkMiniPicture.29*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords8DrawRectEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 3, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %3) #9
  %4 = bitcast %class.SkMiniPicture.29* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %4) #9
  %5 = bitcast %class.SkMiniPicture.29* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE(%class.SkMiniPicture.29*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.SkRecords::Draw", align 8
  %5 = bitcast %"class.SkRecords::Draw"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %6, %class.SkCanvas* %1) #9
  %7 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %7, align 8
  %8 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 3
  %10 = bitcast %class.SkPicture*** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_8DrawRectEEEvRKT_(%"class.SkRecords::Draw"* nonnull %4, %"struct.SkRecords::DrawRect"* dereferenceable(88) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE8cullRectEv(%class.SkMiniPicture.29*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 1
  %3 = bitcast %struct.SkRect* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.SkMiniPicture.29, %class.SkMiniPicture.29* %0, i64 0, i32 1, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE18approximateOpCountEb(%class.SkMiniPicture.29*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK13SkMiniPictureIN9SkRecords8DrawRectEE20approximateBytesUsedEv(%class.SkMiniPicture.29*) unnamed_addr #1 comdat align 2 {
  ret i64 128
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEEC2EPK6SkRectOS1_(%class.SkMiniPicture.31*, %struct.SkRect*, %"struct.SkRecords::DrawTextBlob"* dereferenceable(88)) unnamed_addr #8 comdat align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %class.SkMiniPicture.31* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureC2Ev(%class.SkPicture* %5) #9
  %6 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords12DrawTextBlobEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 1
  %8 = icmp eq %struct.SkRect* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.SkRect* %7 to i8*
  %11 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* nonnull align 4 %11, i64 16, i1 false)
  br label %66

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 1, i32 0
  %14 = load %class.SkTextBlob*, %class.SkTextBlob** %13, align 8
  %15 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 2
  %16 = bitcast float* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %14, i64 0, i32 1, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fadd <2 x float> %17, %20
  %22 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %14, i64 0, i32 1, i32 2
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = fadd <2 x float> %17, %24
  %26 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 0
  %27 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %21, <2 x float>* %29, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %25, <2 x float>* %30, align 8
  %31 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %26) #9
  br i1 %31, label %32, label %60

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 0, i32 8, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = lshr i32 %34, 6
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 0, i32 2, i32 0
  %41 = bitcast %class.SkMaskFilter** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.SkRecords::DrawTextBlob"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = or i64 %44, %42
  %46 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 0, i32 4, i32 0
  %47 = bitcast %class.SkImageFilter** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = or i64 %45, %48
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %39, %32
  %52 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %26, %struct.SkRect* nonnull dereferenceable(16) %28, %struct.SkRect* nonnull %28, i8 zeroext %37) #9
  br label %53

53:                                               ; preds = %51, %39
  %54 = phi %struct.SkRect* [ %52, %51 ], [ %28, %39 ]
  %55 = bitcast %struct.SkRect* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %54, i64 0, i32 2
  %58 = bitcast float* %57 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  br label %60

60:                                               ; preds = %12, %53
  %61 = phi <2 x float> [ %56, %53 ], [ <float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000>, %12 ]
  %62 = phi <2 x float> [ %59, %53 ], [ <float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000>, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %63 = bitcast %struct.SkRect* %7 to <2 x float>*
  store <2 x float> %61, <2 x float>* %63, align 4
  %64 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 1, i32 2
  %65 = bitcast float* %64 to <2 x float>*
  store <2 x float> %62, <2 x float>* %65, align 4
  br label %66

66:                                               ; preds = %60, %9
  %67 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 0
  %68 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 0
  call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %67, %class.SkPaint* dereferenceable(72) %68) #9
  %69 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 1
  %70 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 1
  %71 = getelementptr inbounds %class.sk_sp.25, %class.sk_sp.25* %70, i64 0, i32 0
  %72 = bitcast %class.sk_sp.25* %70 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %71, align 8
  %74 = bitcast %class.sk_sp.25* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 2
  %76 = getelementptr inbounds %"struct.SkRecords::DrawTextBlob", %"struct.SkRecords::DrawTextBlob"* %2, i64 0, i32 2
  %77 = bitcast float* %76 to i64*
  %78 = bitcast float* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED2Ev(%class.SkMiniPicture.31*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords12DrawTextBlobEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 1, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #9
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #9
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %13) #9
  %14 = bitcast %class.SkMiniPicture.31* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %14) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMiniPictureIN9SkRecords12DrawTextBlobEED0Ev(%class.SkMiniPicture.31*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkMiniPictureIN9SkRecords12DrawTextBlobEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 1, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #9
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #9
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2, i32 0
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %13) #9
  %14 = bitcast %class.SkMiniPicture.31* %0 to %class.SkPicture*
  tail call void @_ZN9SkPictureD2Ev(%class.SkPicture* %14) #9
  %15 = bitcast %class.SkMiniPicture.31* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8playbackEP8SkCanvasPN9SkPicture13AbortCallbackE(%class.SkMiniPicture.31*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.SkRecords::Draw", align 8
  %5 = bitcast %"class.SkRecords::Draw"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 0
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %6, %class.SkCanvas* %1) #9
  %7 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %7, align 8
  %8 = getelementptr inbounds %"class.SkRecords::Draw", %"class.SkRecords::Draw"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 2
  %10 = bitcast %class.SkPicture*** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  call void @_ZN9SkRecords4Draw4drawINS_12DrawTextBlobEEEvRKT_(%"class.SkRecords::Draw"* nonnull %4, %"struct.SkRecords::DrawTextBlob"* dereferenceable(88) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE8cullRectEv(%class.SkMiniPicture.31*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 1
  %3 = bitcast %struct.SkRect* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.SkMiniPicture.31, %class.SkMiniPicture.31* %0, i64 0, i32 1, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE18approximateOpCountEb(%class.SkMiniPicture.31*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK13SkMiniPictureIN9SkRecords12DrawTextBlobEE20approximateBytesUsedEv(%class.SkMiniPicture.31*) unnamed_addr #1 comdat align 2 {
  ret i64 128
}

declare void @_ZN9SkRecords4Draw4drawINS_8DrawPathEEEvRKT_(%"class.SkRecords::Draw"*, %"struct.SkRecords::DrawPath"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN9SkRecords4Draw4drawINS_8DrawRectEEEvRKT_(%"class.SkRecords::Draw"*, %"struct.SkRecords::DrawRect"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN9SkRecords4Draw4drawINS_12DrawTextBlobEEEvRKT_(%"class.SkRecords::Draw"*, %"struct.SkRecords::DrawTextBlob"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords8DrawPathEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_: argument 0"}
!7 = distinct !{!7, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords8DrawPathEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords8DrawRectEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_: argument 0"}
!10 = distinct !{!10, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords8DrawRectEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords12DrawTextBlobEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_: argument 0"}
!13 = distinct !{!13, !"_Z10sk_make_spI13SkMiniPictureIN9SkRecords12DrawTextBlobEEJRPK6SkRectS2_EE5sk_spIT_EDpOT0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_: argument 0"}
!16 = distinct !{!16, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_"}
