; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/if.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/if.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::impl::Subgraph" = type { i32 (...)**, %"class.std::__1::vector", i32, %struct.TfLiteContext, %struct.TfLiteExternalContext**, %"class.std::__1::vector.1", i8, %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.tflite::ErrorReporter"*, i32, i32, %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.15", i8, %"class.std::__1::unique_ptr", %"class.std::__1::vector.25", i8, i8, %"class.std::__1::unique_ptr.32", i8, %"class.std::__1::unique_ptr.36", %"class.std::__1::vector.42"*, i8, i1 (i8*)*, i8*, %"class.std::__1::unordered_map"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.TfLiteTensor* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type { %struct.TfLiteNode, %struct.TfLiteRegistration }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.tflite::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %struct.TfLiteDelegate**, %struct.TfLiteDelegate**, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.TfLiteDelegate** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.TfLiteIntArray* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %struct.TfLiteDelegateParams*, %struct.TfLiteDelegateParams*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.TfLiteDelegateParams* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.tflite::MemoryPlanner"* }
%"class.tflite::MemoryPlanner" = type { i32 (...)** }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.tflite::impl::Subgraph::SubgraphAwareProfiler"* }
%"class.tflite::impl::Subgraph::SubgraphAwareProfiler" = type { %"class.tflite::Profiler", %"class.tflite::Profiler"*, i64 }
%"class.tflite::Profiler" = type { i32 (...)** }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.tflite::impl::Subgraph"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::unique_ptr.44"* }
%"class.std::__1::unordered_map" = type opaque
%"struct.tflite::ops::builtin::if_kernel::OpData" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite4impl8Subgraph26EnsureTensorDataIsReadableEi = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/if.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"node->inputs->size > 0\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"cond->type\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"kTfLiteBool\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"NumElements(cond)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"op_data->then_subgraph_index < subgraphs->size()\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"op_data->else_subgraph_index < subgraphs->size()\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"num_inputs\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"subgraph->inputs().size()\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"num_outputs\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"subgraph->outputs().size()\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"subgraph_input->type\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"input->bytes\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"subgraph_input->bytes\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"output->bytes\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"subgraph_output->bytes\00", align 1
@_ZZN6tflite3ops7builtin11Register_IFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin9if_kernel4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin9if_kernel4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9if_kernel7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9if_kernel4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.21 = private unnamed_addr constant [61 x i8] c"../../third_party/tflite/src/tensorflow/lite/core/subgraph.h\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"t != nullptr\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"t->delegate != nullptr\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"t->buffer_handle != kTfLiteNullBufferHandle\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"t->delegate->CopyFromBufferHandle != nullptr\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin9if_kernel4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readonly, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 8) #8
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = bitcast i8* %4 to i32*
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds i8, i8* %4, i64 4
  %12 = bitcast i8* %11 to i32*
  store i32 %10, i32* %12, align 4
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin9if_kernel4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #8
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9if_kernel7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca [2 x %"class.tflite::impl::Subgraph"*], align 8
  %4 = alloca %"class.std::__1::vector.8", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %6 = bitcast i8** %5 to %"struct.tflite::ops::builtin::if_kernel::OpData"**
  %7 = load %"struct.tflite::ops::builtin::if_kernel::OpData"*, %"struct.tflite::ops::builtin::if_kernel::OpData"** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %15 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %14, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %15(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %452

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %16, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %16 ]
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %32 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %31, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %32(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 %28, i32 6) #9
  br label %452

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %35 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %34, align 8
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %183

39:                                               ; preds = %33
  %40 = sext i32 %37 to i64
  %41 = add nsw i64 %40, -1
  %42 = and i64 %40, 7
  %43 = icmp ult i64 %41, 7
  br i1 %43, label %92, label %44

44:                                               ; preds = %39
  %45 = sub nsw i64 %40, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %89, %46 ]
  %48 = phi i64 [ 1, %44 ], [ %88, %46 ]
  %49 = phi i64 [ %45, %44 ], [ %90, %46 ]
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %47
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %48, %52
  %54 = or i64 %47, 1
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 %53, %57
  %59 = or i64 %47, 2
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = mul nsw i64 %58, %62
  %64 = or i64 %47, 3
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = mul nsw i64 %63, %67
  %69 = or i64 %47, 4
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %68, %72
  %74 = or i64 %47, 5
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %73, %77
  %79 = or i64 %47, 6
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = mul nsw i64 %78, %82
  %84 = or i64 %47, 7
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = mul nsw i64 %83, %87
  %89 = add nuw nsw i64 %47, 8
  %90 = add i64 %49, -8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %46

92:                                               ; preds = %46, %39
  %93 = phi i64 [ undef, %39 ], [ %88, %46 ]
  %94 = phi i64 [ 0, %39 ], [ %89, %46 ]
  %95 = phi i64 [ 1, %39 ], [ %88, %46 ]
  %96 = icmp eq i64 %42, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %92, %97
  %98 = phi i64 [ %105, %97 ], [ %94, %92 ]
  %99 = phi i64 [ %104, %97 ], [ %95, %92 ]
  %100 = phi i64 [ %106, %97 ], [ %42, %92 ]
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %98
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = mul nsw i64 %99, %103
  %105 = add nuw nsw i64 %98, 1
  %106 = add i64 %100, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %97, !llvm.loop !2

108:                                              ; preds = %97, %92
  %109 = phi i64 [ %93, %92 ], [ %104, %97 ]
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %183, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %113 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %112, align 8
  %114 = add nsw i64 %40, -1
  %115 = and i64 %40, 7
  %116 = icmp ult i64 %114, 7
  br i1 %116, label %165, label %117

117:                                              ; preds = %111
  %118 = sub nsw i64 %40, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %162, %119 ]
  %121 = phi i64 [ 1, %117 ], [ %161, %119 ]
  %122 = phi i64 [ %118, %117 ], [ %163, %119 ]
  %123 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %120
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %121, %125
  %127 = or i64 %120, 1
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = mul nsw i64 %126, %130
  %132 = or i64 %120, 2
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %131, %135
  %137 = or i64 %120, 3
  %138 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %136, %140
  %142 = or i64 %120, 4
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %141, %145
  %147 = or i64 %120, 5
  %148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %146, %150
  %152 = or i64 %120, 6
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = mul nsw i64 %151, %155
  %157 = or i64 %120, 7
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = mul nsw i64 %156, %160
  %162 = add nuw nsw i64 %120, 8
  %163 = add i64 %122, -8
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %111
  %166 = phi i64 [ undef, %111 ], [ %161, %119 ]
  %167 = phi i64 [ 0, %111 ], [ %162, %119 ]
  %168 = phi i64 [ 1, %111 ], [ %161, %119 ]
  %169 = icmp eq i64 %115, 0
  br i1 %169, label %181, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %178, %170 ], [ %167, %165 ]
  %172 = phi i64 [ %177, %170 ], [ %168, %165 ]
  %173 = phi i64 [ %179, %170 ], [ %115, %165 ]
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 1, i64 %171
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = mul nsw i64 %172, %176
  %178 = add nuw nsw i64 %171, 1
  %179 = add i64 %173, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %170, !llvm.loop !4

181:                                              ; preds = %170, %165
  %182 = phi i64 [ %166, %165 ], [ %177, %170 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %113(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %182, i32 1) #9
  br label %452

183:                                              ; preds = %33, %108
  %184 = add nsw i32 %11, -1
  %185 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %185, align 8
  %187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 3
  %190 = bitcast i8** %189 to %"class.tflite::impl::Subgraph"**
  %191 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %190, align 8
  %192 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %191, i64 0, i32 24
  %193 = load %"class.std::__1::vector.42"*, %"class.std::__1::vector.42"** %192, align 8
  %194 = getelementptr inbounds %"struct.tflite::ops::builtin::if_kernel::OpData", %"struct.tflite::ops::builtin::if_kernel::OpData"* %7, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %193, i64 0, i32 0, i32 1
  %198 = bitcast %"class.std::__1::unique_ptr.44"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.std::__1::vector.42"* %193 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %199, %201
  %203 = ashr exact i64 %202, 3
  %204 = icmp ugt i64 %203, %196
  %205 = inttoptr i64 %201 to %"class.std::__1::unique_ptr.44"*
  br i1 %204, label %209, label %206

206:                                              ; preds = %183
  %207 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %208 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %207, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %208(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 70, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %452

209:                                              ; preds = %183
  %210 = getelementptr inbounds %"struct.tflite::ops::builtin::if_kernel::OpData", %"struct.tflite::ops::builtin::if_kernel::OpData"* %7, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = icmp ugt i64 %203, %212
  br i1 %213, label %217, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %216 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %215, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %216(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %452

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %205, i64 %196, i32 0, i32 0, i32 0
  %219 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %218, align 8
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %205, i64 %212, i32 0, i32 0, i32 0
  %221 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %220, align 8
  %222 = sext i32 %184 to i64
  %223 = sext i32 %188 to i64
  %224 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 7
  %225 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 7, i32 0, i32 1
  %226 = bitcast i32** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.std::__1::vector.8"* %224 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = sub i64 %227, %229
  %231 = ashr exact i64 %230, 2
  %232 = icmp eq i64 %231, %222
  br i1 %232, label %247, label %243

233:                                              ; preds = %247
  %234 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 7
  %235 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 7, i32 0, i32 1
  %236 = bitcast i32** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.std::__1::vector.8"* %234 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = sub i64 %237, %239
  %241 = ashr exact i64 %240, 2
  %242 = icmp eq i64 %241, %222
  br i1 %242, label %454, label %243

243:                                              ; preds = %233, %217
  %244 = phi i64 [ %231, %217 ], [ %241, %233 ]
  %245 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %246 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %245, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %246(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i32 %184, i64 %244) #9
  br label %452

247:                                              ; preds = %217
  %248 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 8
  %249 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 8, i32 0, i32 1
  %250 = bitcast i32** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.std::__1::vector.8"* %248 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %251, %253
  %255 = ashr exact i64 %254, 2
  %256 = icmp eq i64 %255, %223
  br i1 %256, label %233, label %257

257:                                              ; preds = %454, %247
  %258 = phi i64 [ %255, %247 ], [ %462, %454 ]
  %259 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %260 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %259, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %260(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 78, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i32 %188, i64 %258) #9
  br label %452

261:                                              ; preds = %345, %464
  %262 = phi %"class.tflite::impl::Subgraph"* [ %219, %464 ], [ %346, %345 ]
  %263 = phi %"class.tflite::impl::Subgraph"** [ %466, %464 ], [ %343, %345 ]
  %264 = phi i8 [ 0, %464 ], [ %342, %345 ]
  %265 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %262, i64 0, i32 7, i32 0, i32 0
  %266 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %262, i64 0, i32 3, i32 0
  %267 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %262, i64 0, i32 3, i32 2
  br label %268

268:                                              ; preds = %334, %261
  %269 = phi i64 [ %272, %334 ], [ 0, %261 ]
  %270 = icmp slt i64 %269, %222
  br i1 %270, label %271, label %336

271:                                              ; preds = %268
  %272 = add nuw nsw i64 %269, 1
  %273 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %274 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %273, i64 0, i32 1, i64 %272
  %275 = load i32, i32* %274, align 4
  %276 = icmp slt i32 %275, 0
  br i1 %276, label %281, label %277

277:                                              ; preds = %271
  %278 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %469, align 8
  %279 = sext i32 %275 to i64
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %278, i64 %279
  br label %281

281:                                              ; preds = %271, %277
  %282 = phi %struct.TfLiteTensor* [ %280, %277 ], [ null, %271 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %470) #9
  %283 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %282, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %478, i8 -86, i64 24, i1 false)
  %284 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %283, align 8
  %285 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %284, i64 0, i32 1, i64 0
  %286 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %284, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %470, i8 0, i64 24, i1 false) #9
  %289 = shl nuw nsw i64 %288, 2
  %290 = icmp eq i32 %287, 0
  br i1 %290, label %301, label %291

291:                                              ; preds = %281
  %292 = icmp slt i32 %287, 0
  br i1 %292, label %293, label %295

293:                                              ; preds = %291
  %294 = bitcast %"class.std::__1::vector.8"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %294) #10
  unreachable

295:                                              ; preds = %291
  %296 = call i8* @_Znwm(i64 %289) #8
  %297 = bitcast i8* %296 to i32*
  store i8* %296, i8** %474, align 8
  store i8* %296, i8** %475, align 8
  %298 = getelementptr inbounds i32, i32* %297, i64 %288
  store i32* %298, i32** %473, align 8
  %299 = bitcast i32* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %296, i8* align 4 %299, i64 %289, i1 false) #9
  %300 = ptrtoint i32* %298 to i64
  store i64 %300, i64* %476, align 8
  br label %301

301:                                              ; preds = %281, %295
  %302 = trunc i64 %269 to i32
  %303 = call i32 @_ZN6tflite4impl8Subgraph17ResizeInputTensorEiRKNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.tflite::impl::Subgraph"* %262, i32 %302, %"class.std::__1::vector.8"* nonnull dereferenceable(24) %4) #9
  %304 = load i32*, i32** %265, align 8
  %305 = getelementptr inbounds i32, i32* %304, i64 %269
  %306 = load i32, i32* %305, align 4
  %307 = icmp slt i32 %306, 0
  br i1 %307, label %315, label %308

308:                                              ; preds = %301
  %309 = sext i32 %306 to i64
  %310 = load i64, i64* %266, align 8
  %311 = icmp ugt i64 %310, %309
  br i1 %311, label %312, label %315

312:                                              ; preds = %308
  %313 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %267, align 8
  %314 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %313, i64 %309
  br label %315

315:                                              ; preds = %301, %308, %312
  %316 = phi %struct.TfLiteTensor* [ %314, %312 ], [ null, %308 ], [ null, %301 ]
  %317 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %282, i64 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %316, i64 0, i32 0
  %320 = load i32, i32* %319, align 8
  %321 = icmp eq i32 %318, %320
  br i1 %321, label %327, label %322

322:                                              ; preds = %315
  %323 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %477, align 8
  %324 = call i8* @TfLiteTypeGetName(i32 %318) #9
  %325 = load i32, i32* %319, align 8
  %326 = call i8* @TfLiteTypeGetName(i32 %325) #9
  call void (%struct.TfLiteContext*, i8*, ...) %323(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* %324, i8* %326) #9
  br label %327

327:                                              ; preds = %315, %322
  %328 = phi i32 [ 1, %322 ], [ 0, %315 ]
  %329 = load i32*, i32** %471, align 8
  %330 = icmp eq i32* %329, null
  br i1 %330, label %334, label %331

331:                                              ; preds = %327
  %332 = ptrtoint i32* %329 to i64
  store i64 %332, i64* %476, align 8
  %333 = bitcast i32* %329 to i8*
  call void @_ZdlPv(i8* %333) #8
  br label %334

334:                                              ; preds = %327, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %470) #9
  %335 = icmp eq i32 %328, 0
  br i1 %335, label %268, label %347

336:                                              ; preds = %268
  %337 = call i32 @_ZN6tflite4impl8Subgraph15AllocateTensorsEv(%"class.tflite::impl::Subgraph"* %262) #9
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %347

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %262, i64 0, i32 25
  %341 = load i8, i8* %340, align 8, !range !5
  %342 = or i8 %341, %264
  %343 = getelementptr inbounds %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %263, i64 1
  %344 = icmp eq %"class.tflite::impl::Subgraph"** %343, %468
  br i1 %344, label %349, label %345

345:                                              ; preds = %339
  %346 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %343, align 8
  br label %261

347:                                              ; preds = %336, %334
  %348 = phi i32 [ 1, %334 ], [ %337, %336 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %465) #9
  br label %452

349:                                              ; preds = %339
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %465) #9
  %350 = icmp eq i8 %342, 0
  %351 = icmp sgt i32 %188, 0
  %352 = and i1 %350, %351
  br i1 %352, label %353, label %400

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 8, i32 0, i32 0
  %355 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 3, i32 0
  %356 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 3, i32 2
  %357 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 8, i32 0, i32 0
  %358 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 3, i32 0
  %359 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 3, i32 2
  br label %360

360:                                              ; preds = %387, %353
  %361 = phi i64 [ %396, %387 ], [ 0, %353 ]
  %362 = phi i8 [ %395, %387 ], [ 0, %353 ]
  %363 = load i32*, i32** %354, align 8
  %364 = getelementptr inbounds i32, i32* %363, i64 %361
  %365 = load i32, i32* %364, align 4
  %366 = icmp slt i32 %365, 0
  br i1 %366, label %374, label %367

367:                                              ; preds = %360
  %368 = sext i32 %365 to i64
  %369 = load i64, i64* %355, align 8
  %370 = icmp ugt i64 %369, %368
  br i1 %370, label %371, label %374

371:                                              ; preds = %367
  %372 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %356, align 8
  %373 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %372, i64 %368
  br label %374

374:                                              ; preds = %360, %367, %371
  %375 = phi %struct.TfLiteTensor* [ %373, %371 ], [ null, %367 ], [ null, %360 ]
  %376 = load i32*, i32** %357, align 8
  %377 = getelementptr inbounds i32, i32* %376, i64 %361
  %378 = load i32, i32* %377, align 4
  %379 = icmp slt i32 %378, 0
  br i1 %379, label %387, label %380

380:                                              ; preds = %374
  %381 = sext i32 %378 to i64
  %382 = load i64, i64* %358, align 8
  %383 = icmp ugt i64 %382, %381
  br i1 %383, label %384, label %387

384:                                              ; preds = %380
  %385 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %359, align 8
  %386 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %385, i64 %381
  br label %387

387:                                              ; preds = %374, %380, %384
  %388 = phi %struct.TfLiteTensor* [ %386, %384 ], [ null, %380 ], [ null, %374 ]
  %389 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %375, i64 0, i32 2
  %390 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %389, align 8
  %391 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %388, i64 0, i32 2
  %392 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %391, align 8
  %393 = call i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray* %390, %struct.TfLiteIntArray* %392) #9
  %394 = icmp eq i32 %393, 0
  %395 = select i1 %394, i8 1, i8 %362
  %396 = add nuw nsw i64 %361, 1
  %397 = xor i1 %394, true
  %398 = icmp slt i64 %396, %223
  %399 = and i1 %398, %397
  br i1 %399, label %360, label %400

400:                                              ; preds = %387, %349
  %401 = phi i8 [ %342, %349 ], [ %395, %387 ]
  br i1 %351, label %402, label %452

402:                                              ; preds = %400
  %403 = and i8 %401, 1
  %404 = icmp eq i8 %403, 0
  %405 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 8, i32 0, i32 0
  %406 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 3, i32 0
  %407 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %219, i64 0, i32 3, i32 2
  %408 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %409 = zext i32 %188 to i64
  br label %410

410:                                              ; preds = %449, %402
  %411 = phi i64 [ 0, %402 ], [ %450, %449 ]
  %412 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %185, align 8
  %413 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %412, i64 0, i32 1, i64 %411
  %414 = load i32, i32* %413, align 4
  %415 = icmp slt i32 %414, 0
  br i1 %415, label %420, label %416

416:                                              ; preds = %410
  %417 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %469, align 8
  %418 = sext i32 %414 to i64
  %419 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %417, i64 %418
  br label %420

420:                                              ; preds = %410, %416
  %421 = phi %struct.TfLiteTensor* [ %419, %416 ], [ null, %410 ]
  br i1 %404, label %429, label %422

422:                                              ; preds = %420
  %423 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %421, i64 0, i32 4
  %424 = load i32, i32* %423, align 8
  %425 = icmp eq i32 %424, 4
  br i1 %425, label %449, label %426

426:                                              ; preds = %422
  store i32 4, i32* %423, align 8
  %427 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %421, i64 0, i32 1
  %428 = bitcast %union.TfLitePtrUnion* %427 to i8**
  store i8* null, i8** %428, align 8
  br label %449

429:                                              ; preds = %420
  %430 = load i32*, i32** %405, align 8
  %431 = getelementptr inbounds i32, i32* %430, i64 %411
  %432 = load i32, i32* %431, align 4
  %433 = icmp slt i32 %432, 0
  br i1 %433, label %441, label %434

434:                                              ; preds = %429
  %435 = sext i32 %432 to i64
  %436 = load i64, i64* %406, align 8
  %437 = icmp ugt i64 %436, %435
  br i1 %437, label %438, label %441

438:                                              ; preds = %434
  %439 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %407, align 8
  %440 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %439, i64 %435
  br label %441

441:                                              ; preds = %429, %434, %438
  %442 = phi %struct.TfLiteTensor* [ %440, %438 ], [ null, %434 ], [ null, %429 ]
  %443 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %442, i64 0, i32 2
  %444 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %443, align 8
  %445 = call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %444) #9
  %446 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %408, align 8
  %447 = call i32 %446(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %421, %struct.TfLiteIntArray* %445) #9
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %452

449:                                              ; preds = %426, %422, %441
  %450 = add nuw nsw i64 %411, 1
  %451 = icmp eq i64 %450, %409
  br i1 %451, label %452, label %410

452:                                              ; preds = %441, %449, %257, %243, %400, %13, %206, %214, %181, %30, %347
  %453 = phi i32 [ 1, %13 ], [ 1, %30 ], [ 1, %181 ], [ 1, %214 ], [ 1, %206 ], [ %348, %347 ], [ 0, %400 ], [ 1, %243 ], [ 1, %257 ], [ 0, %449 ], [ %447, %441 ]
  ret i32 %453

454:                                              ; preds = %233
  %455 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 8
  %456 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %221, i64 0, i32 8, i32 0, i32 1
  %457 = bitcast i32** %456 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = bitcast %"class.std::__1::vector.8"* %455 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = sub i64 %458, %460
  %462 = ashr exact i64 %461, 2
  %463 = icmp eq i64 %462, %223
  br i1 %463, label %464, label %257

464:                                              ; preds = %454
  %465 = bitcast [2 x %"class.tflite::impl::Subgraph"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %465) #9
  %466 = getelementptr inbounds [2 x %"class.tflite::impl::Subgraph"*], [2 x %"class.tflite::impl::Subgraph"*]* %3, i64 0, i64 0
  store %"class.tflite::impl::Subgraph"* %219, %"class.tflite::impl::Subgraph"** %466, align 8
  %467 = getelementptr inbounds [2 x %"class.tflite::impl::Subgraph"*], [2 x %"class.tflite::impl::Subgraph"*]* %3, i64 0, i64 1
  store %"class.tflite::impl::Subgraph"* %221, %"class.tflite::impl::Subgraph"** %467, align 8
  %468 = getelementptr inbounds [2 x %"class.tflite::impl::Subgraph"*], [2 x %"class.tflite::impl::Subgraph"*]* %3, i64 0, i64 2
  %469 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %470 = bitcast %"class.std::__1::vector.8"* %4 to i8*
  %471 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 0
  %472 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 1
  %473 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %474 = bitcast i32** %472 to i8**
  %475 = bitcast %"class.std::__1::vector.8"* %4 to i8**
  %476 = bitcast i32** %472 to i64*
  %477 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %478 = bitcast %"class.std::__1::vector.8"* %4 to i8*
  br label %261
}

declare i32 @_ZN6tflite4impl8Subgraph17ResizeInputTensorEiRKNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.tflite::impl::Subgraph"*, i32, %"class.std::__1::vector.8"* dereferenceable(24)) local_unnamed_addr #5

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #5

declare i32 @_ZN6tflite4impl8Subgraph15AllocateTensorsEv(%"class.tflite::impl::Subgraph"*) local_unnamed_addr #5

declare i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray*, %struct.TfLiteIntArray*) local_unnamed_addr #5

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9if_kernel4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %4 = bitcast i8** %3 to %"struct.tflite::ops::builtin::if_kernel::OpData"**
  %5 = load %"struct.tflite::ops::builtin::if_kernel::OpData"*, %"struct.tflite::ops::builtin::if_kernel::OpData"** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 %14
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi %struct.TfLiteTensor* [ %15, %11 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 0, i32 1
  %19 = bitcast %union.TfLitePtrUnion* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = load i8, i8* %20, align 1, !range !5
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 3
  %24 = bitcast i8** %23 to %"class.tflite::impl::Subgraph"**
  %25 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %24, align 8
  %26 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %25, i64 0, i32 24
  %27 = load %"class.std::__1::vector.42"*, %"class.std::__1::vector.42"** %26, align 8
  %28 = getelementptr inbounds %"struct.tflite::ops::builtin::if_kernel::OpData", %"struct.tflite::ops::builtin::if_kernel::OpData"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.tflite::ops::builtin::if_kernel::OpData", %"struct.tflite::ops::builtin::if_kernel::OpData"* %5, i64 0, i32 1
  %30 = select i1 %22, i32* %29, i32* %28
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %27, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %34, i64 %32, i32 0, i32 0, i32 0
  %36 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %35, align 8
  %37 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 7
  %38 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 7, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.8"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %40, %42
  br i1 %43, label %97, label %44

44:                                               ; preds = %16
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 2
  br label %48

48:                                               ; preds = %92, %44
  %49 = phi i64 [ %42, %44 ], [ %88, %92 ]
  %50 = phi %struct.TfLiteIntArray* [ %7, %44 ], [ %93, %92 ]
  %51 = phi i64 [ 0, %44 ], [ %53, %92 ]
  %52 = inttoptr i64 %49 to i32*
  %53 = add nuw i64 %51, 1
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %59 = sext i32 %55 to i64
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 %59
  br label %61

61:                                               ; preds = %48, %57
  %62 = phi %struct.TfLiteTensor* [ %60, %57 ], [ null, %48 ]
  %63 = getelementptr inbounds i32, i32* %52, i64 %51
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %61
  %67 = sext i32 %64 to i64
  %68 = load i64, i64* %46, align 8
  %69 = icmp ugt i64 %68, %67
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %71, i64 %67
  br label %73

73:                                               ; preds = %61, %66, %70
  %74 = phi %struct.TfLiteTensor* [ %72, %70 ], [ null, %66 ], [ null, %61 ]
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 0, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 5
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %80, label %94

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %82 = bitcast %union.TfLitePtrUnion* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 0, i32 1
  %85 = bitcast %union.TfLitePtrUnion* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %86, i64 %76, i1 false)
  %87 = load i64, i64* %39, align 8
  %88 = load i64, i64* %41, align 8
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 2
  %91 = icmp ugt i64 %90, %53
  br i1 %91, label %92, label %97

92:                                               ; preds = %80
  %93 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  br label %48

94:                                               ; preds = %73
  %95 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %96 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %95, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %96(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 153, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i64 %76, i64 %78) #9
  br label %242

97:                                               ; preds = %80, %16
  %98 = tail call i32 @_ZN6tflite4impl8Subgraph6InvokeEv(%"class.tflite::impl::Subgraph"* %36) #9
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %242

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 8
  %102 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %101, i64 0, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 8, i32 0, i32 1
  %105 = load i32*, i32** %104, align 8
  %106 = icmp eq i32* %103, %105
  br i1 %106, label %107, label %116

107:                                              ; preds = %116, %100
  %108 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %109 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %185

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %115 = sext i32 %111 to i64
  br label %122

116:                                              ; preds = %100, %116
  %117 = phi i32* [ %120, %116 ], [ %103, %100 ]
  %118 = load i32, i32* %117, align 4
  %119 = tail call i32 @_ZN6tflite4impl8Subgraph26EnsureTensorDataIsReadableEi(%"class.tflite::impl::Subgraph"* %36, i32 %118)
  %120 = getelementptr inbounds i32, i32* %117, i64 1
  %121 = icmp eq i32* %120, %105
  br i1 %121, label %107, label %116

122:                                              ; preds = %131, %113
  %123 = phi i64 [ 0, %113 ], [ %136, %131 ]
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %114, align 8
  %129 = sext i32 %125 to i64
  %130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 %129
  br label %131

131:                                              ; preds = %122, %127
  %132 = phi %struct.TfLiteTensor* [ %130, %127 ], [ null, %122 ]
  %133 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %132, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 4
  %136 = add nuw nsw i64 %123, 1
  %137 = xor i1 %135, true
  %138 = icmp slt i64 %136, %115
  %139 = and i1 %138, %137
  br i1 %139, label %122, label %140

140:                                              ; preds = %131
  %141 = and i1 %135, %112
  br i1 %141, label %142, label %185

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %144 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 0
  %145 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 2
  %146 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  br label %153

147:                                              ; preds = %176
  %148 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8
  %149 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %148, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = icmp slt i64 %184, %151
  br i1 %152, label %153, label %185

153:                                              ; preds = %142, %147
  %154 = phi i64 [ 0, %142 ], [ %184, %147 ]
  %155 = phi %struct.TfLiteIntArray* [ %109, %142 ], [ %148, %147 ]
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %153
  %160 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %143, align 8
  %161 = sext i32 %157 to i64
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 %161
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi %struct.TfLiteTensor* [ %162, %159 ], [ null, %153 ]
  %165 = load i32*, i32** %102, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %154
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %176, label %169

169:                                              ; preds = %163
  %170 = sext i32 %167 to i64
  %171 = load i64, i64* %144, align 8
  %172 = icmp ugt i64 %171, %170
  br i1 %172, label %173, label %176

173:                                              ; preds = %169
  %174 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %145, align 8
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %174, i64 %170
  br label %176

176:                                              ; preds = %163, %169, %173
  %177 = phi %struct.TfLiteTensor* [ %175, %173 ], [ null, %169 ], [ null, %163 ]
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %177, i64 0, i32 2
  %179 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %178, align 8
  %180 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %179) #9
  %181 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %146, align 8
  %182 = tail call i32 %181(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %164, %struct.TfLiteIntArray* %180) #9
  %183 = icmp eq i32 %182, 0
  %184 = add nuw nsw i64 %154, 1
  br i1 %183, label %147, label %242

185:                                              ; preds = %147, %140, %107
  %186 = bitcast i32** %104 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::vector.8"* %101 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %242, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 0
  %193 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %36, i64 0, i32 3, i32 2
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %195

195:                                              ; preds = %191, %226
  %196 = phi i64 [ %189, %191 ], [ %235, %226 ]
  %197 = phi i64 [ 0, %191 ], [ %233, %226 ]
  %198 = inttoptr i64 %196 to i32*
  %199 = getelementptr inbounds i32, i32* %198, i64 %197
  %200 = load i32, i32* %199, align 4
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %209, label %202

202:                                              ; preds = %195
  %203 = sext i32 %200 to i64
  %204 = load i64, i64* %192, align 8
  %205 = icmp ugt i64 %204, %203
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %193, align 8
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %207, i64 %203
  br label %209

209:                                              ; preds = %195, %202, %206
  %210 = phi %struct.TfLiteTensor* [ %208, %206 ], [ null, %202 ], [ null, %195 ]
  %211 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8
  %212 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %211, i64 0, i32 1, i64 %197
  %213 = load i32, i32* %212, align 4
  %214 = icmp slt i32 %213, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %209
  %216 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %194, align 8
  %217 = sext i32 %213 to i64
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %216, i64 %217
  br label %219

219:                                              ; preds = %209, %215
  %220 = phi %struct.TfLiteTensor* [ %218, %215 ], [ null, %209 ]
  %221 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %220, i64 0, i32 5
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 5
  %224 = load i64, i64* %223, align 8
  %225 = icmp eq i64 %222, %224
  br i1 %225, label %226, label %239

226:                                              ; preds = %219
  %227 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %220, i64 0, i32 1
  %228 = bitcast %union.TfLitePtrUnion* %227 to i8**
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %229, i8* align 1 %232, i64 %222, i1 false)
  %233 = add nuw i64 %197, 1
  %234 = load i64, i64* %186, align 8
  %235 = load i64, i64* %188, align 8
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 2
  %238 = icmp ugt i64 %237, %233
  br i1 %238, label %195, label %242

239:                                              ; preds = %219
  %240 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %241 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %240, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %241(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 189, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i64 %222, i64 %224) #9
  br label %242

242:                                              ; preds = %176, %226, %185, %97, %94, %239
  %243 = phi i32 [ 1, %239 ], [ %98, %97 ], [ 1, %94 ], [ 0, %185 ], [ 0, %226 ], [ %182, %176 ]
  ret i32 %243
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN6tflite4impl8Subgraph6InvokeEv(%"class.tflite::impl::Subgraph"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite4impl8Subgraph26EnsureTensorDataIsReadableEi(%"class.tflite::impl::Subgraph"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 %3
  %7 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.21, i64 0, i64 0), i32 285, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %44

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 %3, i32 10
  %14 = load i8, i8* %13, align 4, !range !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %44, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 %3, i32 8
  %18 = load %struct.TfLiteDelegate*, %struct.TfLiteDelegate** %17, align 8
  %19 = icmp eq %struct.TfLiteDelegate* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3, i32 5
  %23 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %22, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %23(%struct.TfLiteContext* %21, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.21, i64 0, i64 0), i32 287, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #9
  br label %44

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 %3, i32 9
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3, i32 5
  %31 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %30, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %31(%struct.TfLiteContext* %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.21, i64 0, i64 0), i32 288, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0)) #9
  br label %44

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.TfLiteDelegate, %struct.TfLiteDelegate* %18, i64 0, i32 2
  %34 = load i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)** %33, align 8
  %35 = icmp eq i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)* %34, null
  %36 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3
  br i1 %35, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %0, i64 0, i32 3, i32 5
  %39 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %38, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %39(%struct.TfLiteContext* %36, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.21, i64 0, i64 0), i32 289, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0)) #9
  br label %44

40:                                               ; preds = %32
  %41 = tail call i32 %34(%struct.TfLiteContext* %36, %struct.TfLiteDelegate* nonnull %18, i32 %26, %struct.TfLiteTensor* nonnull %6) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  store i8 0, i8* %13, align 4
  br label %44

44:                                               ; preds = %43, %12, %40, %37, %28, %20, %8
  %45 = phi i32 [ %41, %40 ], [ 1, %37 ], [ 1, %28 ], [ 1, %20 ], [ 1, %8 ], [ 0, %12 ], [ 0, %43 ]
  ret i32 %45
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin11Register_IFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin11Register_IFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
