; ModuleID = '../../components/permissions/permission_request_id.cc'
source_filename = "../../components/permissions/permission_request_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.permissions::PermissionRequestID" = type { i32, i32, %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [10 x i8] c"%d,%d,%ld\00", align 1

@_ZN11permissions19PermissionRequestIDC1EPN7content15RenderFrameHostEN4util6IdTypeIS0_lLl0ELl1EEE = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestID"*, %"class.content::RenderFrameHost"*, i64), void (%"class.permissions::PermissionRequestID"*, %"class.content::RenderFrameHost"*, i64)* @_ZN11permissions19PermissionRequestIDC2EPN7content15RenderFrameHostEN4util6IdTypeIS0_lLl0ELl1EEE
@_ZN11permissions19PermissionRequestIDC1EiiN4util6IdTypeIS0_lLl0ELl1EEE = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestID"*, i32, i32, i64), void (%"class.permissions::PermissionRequestID"*, i32, i32, i64)* @_ZN11permissions19PermissionRequestIDC2EiiN4util6IdTypeIS0_lLl0ELl1EEE
@_ZN11permissions19PermissionRequestIDD1Ev = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestID"*), void (%"class.permissions::PermissionRequestID"*)* @_ZN11permissions19PermissionRequestIDD2Ev
@_ZN11permissions19PermissionRequestIDC1ERKS0_ = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestID"*, %"class.permissions::PermissionRequestID"*), void (%"class.permissions::PermissionRequestID"*, %"class.permissions::PermissionRequestID"*)* @_ZN11permissions19PermissionRequestIDC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions19PermissionRequestIDC2EPN7content15RenderFrameHostEN4util6IdTypeIS0_lLl0ELl1EEE(%"class.permissions::PermissionRequestID"* nocapture, %"class.content::RenderFrameHost"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 0
  %5 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %6 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %6, i64 14
  %8 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %7, align 8
  %9 = tail call %"class.content::RenderProcessHost"* %8(%"class.content::RenderFrameHost"* %1) #6
  %10 = bitcast %"class.content::RenderProcessHost"* %9 to i32 (%"class.content::RenderProcessHost"*)***
  %11 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %11, i64 29
  %13 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %12, align 8
  %14 = tail call i32 %13(%"class.content::RenderProcessHost"* %9) #6
  store i32 %14, i32* %4, align 8
  %15 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 1
  %16 = bitcast %"class.content::RenderFrameHost"* %1 to i32 (%"class.content::RenderFrameHost"*)***
  %17 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %17, i64 9
  %19 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %18, align 8
  %20 = tail call i32 %19(%"class.content::RenderFrameHost"* %1) #6
  store i32 %20, i32* %15, align 4
  %21 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %21, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11permissions19PermissionRequestIDC2EiiN4util6IdTypeIS0_lLl0ELl1EEE(%"class.permissions::PermissionRequestID"* nocapture, i32, i32, i64) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11permissions19PermissionRequestIDD2Ev(%"class.permissions::PermissionRequestID"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions19PermissionRequestIDC2ERKS0_(%"class.permissions::PermissionRequestID"* nocapture, %"class.permissions::PermissionRequestID"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.permissions::PermissionRequestID"* %0 to i8*
  %4 = bitcast %"class.permissions::PermissionRequestID"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.permissions::PermissionRequestID"* @_ZN11permissions19PermissionRequestIDaSERKS0_(%"class.permissions::PermissionRequestID"* returned, %"class.permissions::PermissionRequestID"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.permissions::PermissionRequestID"* %0 to i8*
  %4 = bitcast %"class.permissions::PermissionRequestID"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.permissions::PermissionRequestID"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11permissions19PermissionRequestIDeqERKS0_(%"class.permissions::PermissionRequestID"* nocapture readonly, %"class.permissions::PermissionRequestID"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11permissions19PermissionRequestIDneERKS0_(%"class.permissions::PermissionRequestID"* nocapture readonly, %"class.permissions::PermissionRequestID"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp ne i64 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11permissions19PermissionRequestID8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.permissions::PermissionRequestID"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.permissions::PermissionRequestID", %"class.permissions::PermissionRequestID"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %6, i64 %8) #6
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
