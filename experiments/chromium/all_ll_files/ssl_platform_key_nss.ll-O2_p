; ModuleID = '../../net/ssl/ssl_platform_key_nss.cc'
source_filename = "../../net/ssl/ssl_platform_key_nss.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::SSLPrivateKey" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.1", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.11" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr"* }
%struct.CERTCertificateStr = type { %struct.PLArenaPool*, i8*, i8*, %struct.CERTSignedDataStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.CERTNameStr, %struct.CERTValidityStr, %struct.CERTNameStr, %struct.CERTSubjectPublicKeyInfoStr, %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCertExtensionStr**, i8*, %struct.NSSTrustDomainStr*, %struct.SECItemStr, i32, i32, i32, i32, i32, i32, i32, %struct.CERTOKDomainNameStr*, i32, i32, i8*, i8*, %struct.NSSCertificateStr*, %struct.CERTCertTrustStr*, i32, %struct.CERTSubjectListStr*, %struct.CERTAuthKeyIDStr*, i32, %union.anon.19, i32, %struct.PK11SlotInfoStr*, i64, i32, %struct.CERTCertDistrustStr* }
%struct.PLArenaPool = type { %struct.PLArena, %struct.PLArena*, i32, i64 }
%struct.PLArena = type { %struct.PLArena*, i64, i64, i64 }
%struct.CERTSignedDataStr = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.SECAlgorithmIDStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTValidityStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTNameStr = type { %struct.PLArenaPool*, %struct.CERTRDNStr** }
%struct.CERTRDNStr = type { %struct.CERTAVAStr** }
%struct.CERTAVAStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTSubjectPublicKeyInfoStr = type { %struct.PLArenaPool*, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.CERTCertExtensionStr = type { %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr }
%struct.NSSTrustDomainStr = type opaque
%struct.SECItemStr = type { i32, i8*, i32 }
%struct.CERTOKDomainNameStr = type { %struct.CERTOKDomainNameStr*, i8* }
%struct.NSSCertificateStr = type opaque
%struct.CERTCertTrustStr = type { i32, i32, i32 }
%struct.CERTSubjectListStr = type { %struct.PLArenaPool*, i32, i8*, %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, i8* }
%struct.CERTSubjectNodeStr = type { %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTAuthKeyIDStr = type { %struct.SECItemStr, %struct.CERTGeneralNameStr*, %struct.SECItemStr, %struct.SECItemStr** }
%struct.CERTGeneralNameStr = type { i32, %union.anon.18, %struct.SECItemStr, %struct.PRCListStr }
%union.anon.18 = type { %struct.OtherNameStr }
%struct.OtherNameStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.PRCListStr = type { %struct.PRCListStr*, %struct.PRCListStr* }
%union.anon.19 = type { i8* }
%struct.PK11SlotInfoStr = type opaque
%struct.CERTCertDistrustStr = type { %struct.SECItemStr, %struct.SECItemStr }
%"class.crypto::CryptoModuleBlockingPasswordDelegate" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.22", [4 x i8] }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.30" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.24 }
%struct.anon.24 = type { i64 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.41", i32, i64, i64 }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.49 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.48" }
%"class.base::time_internal::TimeBase.48" = type { i64 }
%class.scoped_refptr.49 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.50", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.49, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.SECKEYPrivateKeyStr = type { %struct.PLArenaPool*, i32, %struct.PK11SlotInfoStr*, i64, i32, i8*, i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.58" }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::ThreadedSSLPrivateKey" = type { %"class.net::SSLPrivateKey.base", %class.scoped_refptr.56, %class.scoped_refptr.57, %"class.base::WeakPtrFactory" }
%"class.net::SSLPrivateKey.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%class.scoped_refptr.56 = type { %"class.net::ThreadedSSLPrivateKey::Core"* }
%"class.net::ThreadedSSLPrivateKey::Core" = type opaque
%class.scoped_refptr.57 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.59 }
%class.scoped_refptr.59 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.60", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i8 }
%"class.net::ThreadedSSLPrivateKey::Delegate" = type { i32 (...)** }
%"class.net::(anonymous namespace)::SSLPlatformKeyNSS" = type <{ %"class.net::ThreadedSSLPrivateKey::Delegate", i32, [4 x i8], %class.scoped_refptr.21, %"class.std::__1::unique_ptr.51", i8, [7 x i8] }>
%class.scoped_refptr.21 = type { %"class.crypto::CryptoModuleBlockingPasswordDelegate"* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.SECKEYPrivateKeyStr* }
%struct.SECMODModuleStr = type { %struct.PLArenaPool*, i32, i32, i32, i8*, i8*, i8*, i8*, %struct.PRLock*, i32, %struct.PK11SlotInfoStr**, i32, %struct.NSSUTILPreSlotInfoStr*, i32, i64, i32, [2 x i64], i8*, i8*, %struct.SECMODModuleStr*, i32, i32, i32, i32, i32, i64, %struct.CK_VERSION, i64 }
%struct.PRLock = type opaque
%struct.NSSUTILPreSlotInfoStr = type opaque
%struct.CK_VERSION = type { i8, i8 }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i16*, i16*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i16* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { i8*, i8*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%struct.CK_RSA_PKCS_PSS_PARAMS = type { i64, i64, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.env_md_st = type opaque
%struct.engine_st = type opaque
%struct.ecdsa_sig_st = type { %struct.bignum_st*, %struct.bignum_st* }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [26 x i8] c"FetchClientCertPrivateKey\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../net/ssl/ssl_platform_key_nss.cc\00", align 1
@_ZTVN3net12_GLOBAL__N_117SSLPlatformKeyNSSE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*)* @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSSD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*)* @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSSD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*)* @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS15GetProviderNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.72"*, %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*)* @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS23GetAlgorithmPreferencesEv to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*, i16, i64, i8*, %"class.std::__1::vector.79"*)* @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS4SignEtN4base4spanIKhLm18446744073709551615EEEPNSt3__16vectorIhNS6_9allocatorIhEEEE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"%s, %s\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"Unexpected hash algorithm\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"PK11_SignatureLen failed\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"PK11_SignWithMechanism failed\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"Bad signature length\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c")\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::SSLPrivateKey"* @_ZN3net25FetchClientCertPrivateKeyEPKNS_15X509CertificateEP18CERTCertificateStr13scoped_refptrIN6crypto36CryptoModuleBlockingPasswordDelegateEE(%"class.net::X509Certificate"*, %struct.CERTCertificateStr*, %"class.crypto::CryptoModuleBlockingPasswordDelegate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = ptrtoint %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %2 to i64
  %9 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  %10 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 201) #8
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  %11 = bitcast %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %2 to i8*
  %12 = call %struct.SECKEYPrivateKeyStr* @PK11_FindKeyByAnyCert(%struct.CERTCertificateStr* %1, i8* %11) #8
  %13 = ptrtoint %struct.SECKEYPrivateKeyStr* %12 to i64
  %14 = icmp eq %struct.SECKEYPrivateKeyStr* %12, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %3
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 -1431655766, i32* %6, align 4
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  store i64 -6148914691236517206, i64* %7, align 8
  %18 = call zeroext i1 @_ZN3net17GetClientCertInfoEPKNS_15X509CertificateEPiPm(%"class.net::X509Certificate"* %0, i32* nonnull %6, i64* nonnull %7) #8
  br i1 %18, label %19, label %43

19:                                               ; preds = %15
  %20 = call i8* @_Znwm(i64 40) #9
  %21 = load i32, i32* %6, align 4
  %22 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_117SSLPlatformKeyNSSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %21, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 %8, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 24
  %28 = bitcast i8* %27 to i64*
  store i64 %13, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 32
  %30 = getelementptr inbounds %struct.SECKEYPrivateKeyStr, %struct.SECKEYPrivateKeyStr* %12, i64 0, i32 2
  %31 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %30, align 8
  %32 = call i32 @PK11_DoesMechanism(%struct.PK11SlotInfoStr* %31, i64 13) #8
  %33 = icmp ne i32 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %29, align 8
  %35 = call %"class.base::SingleThreadTaskRunner"* @_ZN3net27GetSSLPlatformKeyTaskRunnerEv() #8
  %36 = call i8* @_Znwm(i64 48) #9
  %37 = bitcast i8* %36 to %"class.net::ThreadedSSLPrivateKey"*
  %38 = bitcast i8* %20 to %"class.net::ThreadedSSLPrivateKey::Delegate"*
  call void @_ZN3net21ThreadedSSLPrivateKeyC1ENSt3__110unique_ptrINS0_8DelegateENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.net::ThreadedSSLPrivateKey"* nonnull %37, %"class.net::ThreadedSSLPrivateKey::Delegate"* nonnull %38, %"class.base::SingleThreadTaskRunner"* %35) #8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  %42 = ptrtoint i8* %36 to i64
  br label %43

43:                                               ; preds = %15, %19
  %44 = phi i64 [ 0, %19 ], [ %8, %15 ]
  %45 = phi i64 [ 0, %19 ], [ %13, %15 ]
  %46 = phi i64 [ %42, %19 ], [ 0, %15 ]
  %47 = inttoptr i64 %44 to %"class.crypto::CryptoModuleBlockingPasswordDelegate"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %48

48:                                               ; preds = %3, %43
  %49 = phi %"class.crypto::CryptoModuleBlockingPasswordDelegate"* [ %47, %43 ], [ %2, %3 ]
  %50 = phi i64 [ %45, %43 ], [ %13, %3 ]
  %51 = phi i64 [ %46, %43 ], [ 0, %3 ]
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = inttoptr i64 %50 to %struct.SECKEYPrivateKeyStr*
  call void @SECKEY_DestroyPrivateKey(%struct.SECKEYPrivateKeyStr* nonnull %54) #8
  br label %55

55:                                               ; preds = %48, %53
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #8
  %56 = icmp eq %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %49, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.crypto::CryptoModuleBlockingPasswordDelegate", %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %49, i64 0, i32 1
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe.22"* %63 to %"class.crypto::CryptoModuleBlockingPasswordDelegate"*
  %65 = bitcast %"class.base::RefCountedThreadSafe.22"* %63 to void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)***
  %66 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)**, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %66, i64 2
  %68 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %67, align 8
  call void %68(%"class.crypto::CryptoModuleBlockingPasswordDelegate"* nonnull %64) #8
  br label %69

69:                                               ; preds = %55, %57, %62
  %70 = inttoptr i64 %51 to %"class.net::SSLPrivateKey"*
  ret %"class.net::SSLPrivateKey"* %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.SECKEYPrivateKeyStr* @PK11_FindKeyByAnyCert(%struct.CERTCertificateStr*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net17GetClientCertInfoEPKNS_15X509CertificateEPiPm(%"class.net::X509Certificate"*, i32*, i64*) local_unnamed_addr #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN3net27GetSSLPlatformKeyTaskRunnerEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

declare void @SECKEY_DestroyPrivateKey(%struct.SECKEYPrivateKeyStr*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare i32 @PK11_DoesMechanism(%struct.PK11SlotInfoStr*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSSD2Ev(%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_117SSLPlatformKeyNSSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %3, align 8
  store %struct.SECKEYPrivateKeyStr* null, %struct.SECKEYPrivateKeyStr** %3, align 8
  %5 = icmp eq %struct.SECKEYPrivateKeyStr* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @SECKEY_DestroyPrivateKey(%struct.SECKEYPrivateKeyStr* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 3, i32 0
  %9 = load %"class.crypto::CryptoModuleBlockingPasswordDelegate"*, %"class.crypto::CryptoModuleBlockingPasswordDelegate"** %8, align 8
  %10 = icmp eq %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.crypto::CryptoModuleBlockingPasswordDelegate", %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.22"* %17 to %"class.crypto::CryptoModuleBlockingPasswordDelegate"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.22"* %17 to void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)***
  %20 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)**, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %20, i64 2
  %22 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %21, align 8
  tail call void %22(%"class.crypto::CryptoModuleBlockingPasswordDelegate"* nonnull %18) #8
  br label %23

23:                                               ; preds = %7, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSSD0Ev(%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_117SSLPlatformKeyNSSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %3, align 8
  store %struct.SECKEYPrivateKeyStr* null, %struct.SECKEYPrivateKeyStr** %3, align 8
  %5 = icmp eq %struct.SECKEYPrivateKeyStr* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @SECKEY_DestroyPrivateKey(%struct.SECKEYPrivateKeyStr* nonnull %4) #8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 3, i32 0
  %9 = load %"class.crypto::CryptoModuleBlockingPasswordDelegate"*, %"class.crypto::CryptoModuleBlockingPasswordDelegate"** %8, align 8
  %10 = icmp eq %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.crypto::CryptoModuleBlockingPasswordDelegate", %"class.crypto::CryptoModuleBlockingPasswordDelegate"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.22", %"class.base::RefCountedThreadSafe.22"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.22"* %17 to %"class.crypto::CryptoModuleBlockingPasswordDelegate"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.22"* %17 to void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)***
  %20 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)**, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %20, i64 2
  %22 = load void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)*, void (%"class.crypto::CryptoModuleBlockingPasswordDelegate"*)** %21, align 8
  tail call void %22(%"class.crypto::CryptoModuleBlockingPasswordDelegate"* nonnull %18) #8
  br label %23

23:                                               ; preds = %7, %11, %16
  %24 = bitcast %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS15GetProviderNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %3, align 8
  %5 = getelementptr inbounds %struct.SECKEYPrivateKeyStr, %struct.SECKEYPrivateKeyStr* %4, i64 0, i32 2
  %6 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %5, align 8
  %7 = tail call %struct.SECMODModuleStr* @PK11_GetModule(%struct.PK11SlotInfoStr* %6) #8
  %8 = getelementptr inbounds %struct.SECMODModuleStr, %struct.SECMODModuleStr* %7, i64 0, i32 5
  %9 = load i8*, i8** %8, align 8
  %10 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %3, align 8
  %11 = getelementptr inbounds %struct.SECKEYPrivateKeyStr, %struct.SECKEYPrivateKeyStr* %10, i64 0, i32 2
  %12 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %11, align 8
  %13 = tail call i8* @PK11_GetSlotName(%struct.PK11SlotInfoStr* %12) #8
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %9, i8* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS23GetAlgorithmPreferencesEv(%"class.std::__1::vector.72"* noalias sret, %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %1, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  tail call void @_ZN3net13SSLPrivateKey27DefaultAlgorithmPreferencesEib(%"class.std::__1::vector.72"* sret %0, i32 %4, i1 zeroext %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_117SSLPlatformKeyNSS4SignEtN4base4spanIKhLm18446744073709551615EEEPNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* nocapture readonly, i16 zeroext, i64, i8*, %"class.std::__1::vector.79"*) unnamed_addr #0 align 2 {
  %6 = alloca [64 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca %struct.SECItemStr, align 8
  %9 = alloca %struct.SECItemStr, align 8
  %10 = alloca %struct.CK_RSA_PKCS_PSS_PARAMS, align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %struct.SECItemStr, align 8
  %15 = alloca %"class.logging::LogMessage", align 8
  %16 = alloca i8*, align 8
  %17 = tail call %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext %1) #8
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 64, i1 false)
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #8
  store i32 -1431655766, i32* %7, align 4
  %20 = icmp eq %struct.env_md_st* %17, null
  br i1 %20, label %218, label %21

21:                                               ; preds = %5
  %22 = call i32 @EVP_Digest(i8* %3, i64 %2, i8* nonnull %18, i32* nonnull %7, %struct.env_md_st* nonnull %17, %struct.engine_st* null) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %218, label %24

24:                                               ; preds = %21
  %25 = bitcast %struct.SECItemStr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %8, i64 0, i32 1
  store i8* %18, i8** %26, align 8
  %27 = load i32, i32* %7, align 4
  %28 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %8, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.net::(anonymous namespace)::SSLPlatformKeyNSS", %"class.net::(anonymous namespace)::SSLPlatformKeyNSS"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %29, align 8
  %31 = getelementptr inbounds %struct.SECKEYPrivateKeyStr, %struct.SECKEYPrivateKeyStr* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call i64 @PK11_MapSignKeyType(i32 %32) #8
  %34 = bitcast %struct.SECItemStr* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false)
  %35 = bitcast %struct.CK_RSA_PKCS_PSS_PARAMS* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8
  %36 = getelementptr inbounds %struct.CK_RSA_PKCS_PSS_PARAMS, %struct.CK_RSA_PKCS_PSS_PARAMS* %10, i64 0, i32 0
  %37 = getelementptr inbounds %struct.CK_RSA_PKCS_PSS_PARAMS, %struct.CK_RSA_PKCS_PSS_PARAMS* %10, i64 0, i32 1
  %38 = getelementptr inbounds %struct.CK_RSA_PKCS_PSS_PARAMS, %struct.CK_RSA_PKCS_PSS_PARAMS* %10, i64 0, i32 2
  %39 = bitcast %struct.CK_RSA_PKCS_PSS_PARAMS* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  %40 = call i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext %1) #8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %24
  %43 = call i32 @EVP_MD_type(%struct.env_md_st* nonnull %17) #8
  %44 = add i32 %43, -672
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %53, label %46

46:                                               ; preds = %42
  %47 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %47, label %48, label %216

48:                                               ; preds = %46
  %49 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %49) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 106, i32 2) #8
  %50 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_ostringstream"* %50 to %"class.std::__1::basic_ostream"*
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %49) #8
  br label %216

53:                                               ; preds = %42
  %54 = zext i32 %44 to i64
  %55 = shl nuw nsw i64 %54, 4
  %56 = add nuw nsw i64 %55, 592
  %57 = zext i32 %44 to i64
  %58 = add nuw nsw i64 %57, 2
  store i64 %56, i64* %36, align 8
  store i64 %58, i64* %37, align 8
  %59 = call i64 @EVP_MD_size(%struct.env_md_st* nonnull %17) #8
  store i64 %59, i64* %38, align 8
  %60 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %9, i64 0, i32 1
  %61 = bitcast i8** %60 to %struct.CK_RSA_PKCS_PSS_PARAMS**
  store %struct.CK_RSA_PKCS_PSS_PARAMS* %10, %struct.CK_RSA_PKCS_PSS_PARAMS** %61, align 8
  %62 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %9, i64 0, i32 2
  store i32 24, i32* %62, align 8
  br label %83

63:                                               ; preds = %24
  %64 = call i32 @SSL_get_signature_algorithm_key_type(i16 zeroext %1) #8
  %65 = icmp eq i32 %64, 6
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = call %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext %1) #8
  %68 = call i32 @EVP_MD_type(%struct.env_md_st* %67) #8
  %69 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #8
  store i32 -1431655766, i32* %12, align 4
  %70 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  store i64 -6148914691236517206, i64* %13, align 8
  %71 = load i8*, i8** %26, align 8
  %72 = load i32, i32* %28, align 8
  %73 = zext i32 %72 to i64
  %74 = call i32 @RSA_add_pkcs1_prefix(i8** %26, i64* nonnull %13, i32* nonnull %12, i32 %68, i8* %71, i64 %73) #8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %211, label %76

76:                                               ; preds = %66
  %77 = load i64, i64* %13, align 8
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %28, align 8
  %79 = load i32, i32* %12, align 4
  %80 = icmp eq i32 %79, 0
  %81 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #8
  %82 = select i1 %80, i8* null, i8* %81
  br label %83

83:                                               ; preds = %76, %63, %53
  %84 = phi i8* [ %82, %76 ], [ null, %63 ], [ null, %53 ]
  %85 = phi i64 [ %33, %76 ], [ %33, %63 ], [ 13, %53 ]
  %86 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %29, align 8
  %87 = call i32 @PK11_SignatureLen(%struct.SECKEYPrivateKeyStr* %86) #8
  %88 = icmp slt i32 %87, 1
  br i1 %88, label %89, label %90

89:                                               ; preds = %83
  call fastcc void @_ZN3net12_GLOBAL__N_110LogPRErrorEPKc(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  br label %212

90:                                               ; preds = %83
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %4, i64 0, i32 0, i32 1
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.79"* %4 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = icmp ult i64 %97, %91
  %99 = inttoptr i64 %96 to i8*
  br i1 %98, label %100, label %104

100:                                              ; preds = %90
  %101 = sub i64 %91, %97
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.79"* %4, i64 %101) #8
  %102 = load i64, i64* %95, align 8
  %103 = load i64, i64* %93, align 8
  br label %109

104:                                              ; preds = %90
  %105 = icmp ugt i64 %97, %91
  br i1 %105, label %106, label %109

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %99, i64 %91
  store i8* %107, i8** %92, align 8
  %108 = ptrtoint i8* %107 to i64
  br label %109

109:                                              ; preds = %100, %104, %106
  %110 = phi i64 [ %103, %100 ], [ %94, %104 ], [ %108, %106 ]
  %111 = phi i64 [ %102, %100 ], [ %96, %104 ], [ %96, %106 ]
  %112 = bitcast %struct.SECItemStr* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 24, i1 false)
  %113 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %4, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %14, i64 0, i32 1
  %115 = bitcast i8** %114 to i64*
  store i64 %111, i64* %115, align 8
  %116 = sub i64 %110, %111
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %14, i64 0, i32 2
  store i32 %117, i32* %118, align 8
  %119 = load %struct.SECKEYPrivateKeyStr*, %struct.SECKEYPrivateKeyStr** %29, align 8
  %120 = call i32 @PK11_SignWithMechanism(%struct.SECKEYPrivateKeyStr* %119, i64 %85, %struct.SECItemStr* nonnull %9, %struct.SECItemStr* nonnull %14, %struct.SECItemStr* nonnull %8) #8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %109
  call fastcc void @_ZN3net12_GLOBAL__N_110LogPRErrorEPKc(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0))
  br label %209

123:                                              ; preds = %109
  %124 = load i32, i32* %118, align 8
  %125 = zext i32 %124 to i64
  %126 = load i64, i64* %93, align 8
  %127 = load i64, i64* %95, align 8
  %128 = sub i64 %126, %127
  %129 = icmp ult i64 %128, %125
  %130 = inttoptr i64 %127 to i8*
  br i1 %129, label %131, label %133

131:                                              ; preds = %123
  %132 = sub i64 %125, %128
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.79"* %4, i64 %132) #8
  br label %137

133:                                              ; preds = %123
  %134 = icmp ugt i64 %128, %125
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = getelementptr inbounds i8, i8* %130, i64 %125
  store i8* %136, i8** %92, align 8
  br label %137

137:                                              ; preds = %131, %133, %135
  %138 = call i32 @SSL_get_signature_algorithm_key_type(i16 zeroext %1) #8
  %139 = icmp eq i32 %138, 408
  br i1 %139, label %140, label %209

140:                                              ; preds = %137
  %141 = load i64, i64* %93, align 8
  %142 = load i64, i64* %95, align 8
  %143 = sub i64 %141, %142
  %144 = and i64 %143, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %140
  %147 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %147, label %148, label %209

148:                                              ; preds = %146
  %149 = bitcast %"class.logging::LogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %149) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 152, i32 2) #8
  %150 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %15, i64 0, i32 2
  %151 = bitcast %"class.std::__1::basic_ostringstream"* %150 to %"class.std::__1::basic_ostream"*
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %151, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 20) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %149) #8
  br label %209

153:                                              ; preds = %140
  %154 = lshr i64 %143, 1
  %155 = call %struct.ecdsa_sig_st* @ECDSA_SIG_new() #8
  %156 = icmp eq %struct.ecdsa_sig_st* %155, null
  br i1 %156, label %209, label %157

157:                                              ; preds = %153
  %158 = load i8*, i8** %113, align 8
  %159 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %155, i64 0, i32 0
  %160 = load %struct.bignum_st*, %struct.bignum_st** %159, align 8
  %161 = call %struct.bignum_st* @BN_bin2bn(i8* %158, i64 %154, %struct.bignum_st* %160) #8
  %162 = icmp eq %struct.bignum_st* %161, null
  br i1 %162, label %206, label %163

163:                                              ; preds = %157
  %164 = load i8*, i8** %113, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %154
  %166 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %155, i64 0, i32 1
  %167 = load %struct.bignum_st*, %struct.bignum_st** %166, align 8
  %168 = call %struct.bignum_st* @BN_bin2bn(i8* %165, i64 %154, %struct.bignum_st* %167) #8
  %169 = icmp eq %struct.bignum_st* %168, null
  br i1 %169, label %206, label %170

170:                                              ; preds = %163
  %171 = call i32 @i2d_ECDSA_SIG(%struct.ecdsa_sig_st* nonnull %155, i8** null) #8
  %172 = icmp slt i32 %171, 1
  br i1 %172, label %206, label %173

173:                                              ; preds = %170
  %174 = sext i32 %171 to i64
  %175 = load i64, i64* %93, align 8
  %176 = load i64, i64* %95, align 8
  %177 = sub i64 %175, %176
  %178 = icmp ult i64 %177, %174
  %179 = inttoptr i64 %176 to i8*
  br i1 %178, label %180, label %183

180:                                              ; preds = %173
  %181 = sub i64 %174, %177
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.79"* %4, i64 %181) #8
  %182 = load i64, i64* %95, align 8
  br label %187

183:                                              ; preds = %173
  %184 = icmp ugt i64 %177, %174
  br i1 %184, label %185, label %187

185:                                              ; preds = %183
  %186 = getelementptr inbounds i8, i8* %179, i64 %174
  store i8* %186, i8** %92, align 8
  br label %187

187:                                              ; preds = %180, %183, %185
  %188 = phi i64 [ %182, %180 ], [ %176, %183 ], [ %176, %185 ]
  %189 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #8
  %190 = bitcast i8** %16 to i64*
  store i64 %188, i64* %190, align 8
  %191 = call i32 @i2d_ECDSA_SIG(%struct.ecdsa_sig_st* nonnull %155, i8** nonnull %16) #8
  %192 = icmp slt i32 %191, 1
  br i1 %192, label %208, label %193

193:                                              ; preds = %187
  %194 = sext i32 %191 to i64
  %195 = load i64, i64* %93, align 8
  %196 = load i64, i64* %95, align 8
  %197 = sub i64 %195, %196
  %198 = icmp ult i64 %197, %194
  %199 = inttoptr i64 %196 to i8*
  br i1 %198, label %200, label %202

200:                                              ; preds = %193
  %201 = sub i64 %194, %197
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.79"* %4, i64 %201) #8
  br label %207

202:                                              ; preds = %193
  %203 = icmp ugt i64 %197, %194
  br i1 %203, label %204, label %207

204:                                              ; preds = %202
  %205 = getelementptr inbounds i8, i8* %199, i64 %194
  store i8* %205, i8** %92, align 8
  br label %207

206:                                              ; preds = %170, %157, %163
  call void @ECDSA_SIG_free(%struct.ecdsa_sig_st* nonnull %155) #8
  br label %209

207:                                              ; preds = %200, %202, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #8
  call void @ECDSA_SIG_free(%struct.ecdsa_sig_st* nonnull %155) #8
  br label %209

208:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #8
  call void @ECDSA_SIG_free(%struct.ecdsa_sig_st* nonnull %155) #8
  br label %209

209:                                              ; preds = %137, %207, %208, %153, %206, %148, %146, %122
  %210 = phi i32 [ -141, %122 ], [ -141, %146 ], [ -141, %148 ], [ -141, %206 ], [ -141, %153 ], [ -141, %208 ], [ 0, %207 ], [ 0, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #8
  br label %212

211:                                              ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #8
  br label %216

212:                                              ; preds = %89, %209
  %213 = phi i32 [ -141, %89 ], [ %210, %209 ]
  %214 = icmp eq i8* %84, null
  br i1 %214, label %216, label %215

215:                                              ; preds = %212
  call void @OPENSSL_free(i8* nonnull %84) #8
  br label %216

216:                                              ; preds = %48, %46, %211, %212, %215
  %217 = phi i32 [ %213, %212 ], [ %213, %215 ], [ -141, %211 ], [ -141, %46 ], [ -141, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8
  br label %218

218:                                              ; preds = %5, %21, %216
  %219 = phi i32 [ %217, %216 ], [ -141, %21 ], [ -141, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #8
  ret i32 %219
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare %struct.SECMODModuleStr* @PK11_GetModule(%struct.PK11SlotInfoStr*) local_unnamed_addr #2

declare i8* @PK11_GetSlotName(%struct.PK11SlotInfoStr*) local_unnamed_addr #2

declare void @_ZN3net13SSLPrivateKey27DefaultAlgorithmPreferencesEib(%"class.std::__1::vector.72"* sret, i32, i1 zeroext) local_unnamed_addr #2

declare %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext) local_unnamed_addr #2

declare i32 @EVP_Digest(i8*, i64, i8*, i32*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @PK11_MapSignKeyType(i32) local_unnamed_addr #2

declare i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext) local_unnamed_addr #2

declare i32 @EVP_MD_type(%struct.env_md_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #2

declare i32 @SSL_get_signature_algorithm_key_type(i16 zeroext) local_unnamed_addr #2

declare i32 @RSA_add_pkcs1_prefix(i8**, i64*, i32*, i32, i8*, i64) local_unnamed_addr #2

declare i32 @PK11_SignatureLen(%struct.SECKEYPrivateKeyStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_110LogPRErrorEPKc(i8*) unnamed_addr #0 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call i32 @PR_GetError() #8
  %4 = tail call i8* @PR_ErrorToName(i32 %3) #8
  %5 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = icmp eq i8* %4, null
  %8 = select i1 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* %4
  %9 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %9) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 46, i32 2) #8
  %10 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %12 = call i64 @strlen(i8* %0) #8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* %0, i64 %12) #8
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #8
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %14, i32 %3) #8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #8
  %17 = call i64 @strlen(i8* %8) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* %8, i64 %17) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %9) #8
  br label %20

20:                                               ; preds = %1, %6
  ret void
}

declare i32 @PK11_SignWithMechanism(%struct.SECKEYPrivateKeyStr*, i64, %struct.SECItemStr*, %struct.SECItemStr*, %struct.SECItemStr*) local_unnamed_addr #2

declare %struct.ecdsa_sig_st* @ECDSA_SIG_new() local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @i2d_ECDSA_SIG(%struct.ecdsa_sig_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @PR_GetError() local_unnamed_addr #2

declare i8* @PR_ErrorToName(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.79"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #8
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.79"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.79"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #9
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #8
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #8
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #9
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @ECDSA_SIG_free(%struct.ecdsa_sig_st*) local_unnamed_addr #2

declare void @_ZN3net21ThreadedSSLPrivateKeyC1ENSt3__110unique_ptrINS0_8DelegateENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.net::ThreadedSSLPrivateKey"*, %"class.net::ThreadedSSLPrivateKey::Delegate"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
