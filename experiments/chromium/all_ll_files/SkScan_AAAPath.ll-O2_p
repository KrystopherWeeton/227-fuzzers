; ModuleID = '../../third_party/skia/src/core/SkScan_AAAPath.cpp'
source_filename = "../../third_party/skia/src/core/SkScan_AAAPath.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MaskAdditiveBlitter = type <{ %class.AdditiveBlitter, %class.SkBlitter*, %struct.SkMask, %struct.SkIRect, [258 x i32], i8*, i32, [4 x i8] }>
%class.AdditiveBlitter = type { %class.SkBlitter }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.RunBasedAdditiveBlitter = type <{ %class.AdditiveBlitter, %class.SkBlitter*, i32, i32, i32, i32, i32, [4 x i8], i8*, i32, [4 x i8], %class.SkAlphaRuns, i32, [4 x i8] }>
%class.SkAlphaRuns = type { i16*, i8* }
%class.SafeRLEAdditiveBlitter = type { %class.RunBasedAdditiveBlitter.base, [4 x i8] }
%class.RunBasedAdditiveBlitter.base = type <{ %class.AdditiveBlitter, %class.SkBlitter*, i32, i32, i32, i32, i32, [4 x i8], i8*, i32, [4 x i8], %class.SkAlphaRuns, i32 }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.anon = type { i8 }
%class.SkAnalyticEdgeBuilder = type { %class.SkEdgeBuilder }
%class.SkEdgeBuilder = type { i32 (...)**, i8**, %class.SkTDArray.16, %class.SkSTArenaAlloc }
%class.SkTDArray.16 = type { i8**, i32, i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [512 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%struct.SkAnalyticEdge = type { %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%struct.SkAnalyticQuadraticEdge = type { %struct.SkAnalyticEdge, %struct.SkQuadraticEdge, i32, i32 }
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkAnalyticCubicEdge = type <{ %struct.SkAnalyticEdge, %struct.SkCubicEdge, i32, [4 x i8] }>
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.15, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }

$_ZN19MaskAdditiveBlitterD2Ev = comdat any

$_ZN23RunBasedAdditiveBlitterD2Ev = comdat any

$_ZN19MaskAdditiveBlitterD0Ev = comdat any

$_ZN15AdditiveBlitter5blitHEiii = comdat any

$_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN19MaskAdditiveBlitter14getRealBlitterEb = comdat any

$_ZN19MaskAdditiveBlitter8getWidthEv = comdat any

$_ZN19MaskAdditiveBlitter18flush_if_y_changedEii = comdat any

$_ZN23RunBasedAdditiveBlitterD0Ev = comdat any

$_ZN15AdditiveBlitter5blitVEiiih = comdat any

$_ZN15AdditiveBlitter8blitRectEiiii = comdat any

$_ZN15AdditiveBlitter12blitAntiRectEiiiihh = comdat any

$_ZN23RunBasedAdditiveBlitter14getRealBlitterEb = comdat any

$_ZN23RunBasedAdditiveBlitter8getWidthEv = comdat any

$_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii = comdat any

$_ZN22SafeRLEAdditiveBlitterD0Ev = comdat any

$_ZN23RunBasedAdditiveBlitter5flushEv = comdat any

$_ZN13SkEdgeBuilderD2Ev = comdat any

$_ZN13SkEdgeBuilderD0Ev = comdat any

$_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_ = comdat any

$_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EvS4_mmRKT0_ = comdat any

$_ZTV13SkEdgeBuilder = comdat any

@_ZTV19MaskAdditiveBlitter = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)* @_ZN19MaskAdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)* @_ZN19MaskAdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN19MaskAdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.MaskAdditiveBlitter*, i1)* @_ZN19MaskAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN19MaskAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i8)* @_ZN19MaskAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)* @_ZN19MaskAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32)* @_ZN19MaskAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/core/SkScan_AAAPath.cpp\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Don't use this; directly add alphas to the mask.\00", align 1
@_ZTV23RunBasedAdditiveBlitter = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i8)* @_ZN15AdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32)* @_ZN15AdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN15AdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.RunBasedAdditiveBlitter*, i1)* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i8)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i32, i8)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32)* @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@_ZTV22SafeRLEAdditiveBlitter = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*)* @_ZN22SafeRLEAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i8)* @_ZN15AdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32)* @_ZN15AdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN15AdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.RunBasedAdditiveBlitter*, i1)* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i8)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i32, i8)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32)* @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@_ZTV21SkAnalyticEdgeBuilder = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTV13SkEdgeBuilder = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN19MaskAdditiveBlitterC1EP9SkBlitterRK7SkIRectS4_b = hidden unnamed_addr alias void (%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1), void (%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1)* @_ZN19MaskAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b
@_ZN23RunBasedAdditiveBlitterC1EP9SkBlitterRK7SkIRectS4_b = hidden unnamed_addr alias void (%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1), void (%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1)* @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.SkAutoMalloc* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %10, align 8
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 4, i64 0
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %13, i8** %9, align 8
  %14 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1
  %15 = bitcast %struct.SkIRect* %14 to i8*
  %16 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %18, %20
  %22 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, -1
  %27 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %30 = bitcast %struct.SkIRect* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %16, i64 16, i1 false)
  %31 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %29, %struct.SkIRect* dereferenceable(16) %29, %struct.SkIRect* dereferenceable(16) %3) #13
  br i1 %31, label %33, label %32

32:                                               ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false) #13
  br label %33

33:                                               ; preds = %32, %5
  %34 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 %35, %37
  %39 = load i32, i32* %22, align 8
  %40 = mul i32 %38, %39
  %41 = add i32 %40, 2
  %42 = zext i32 %41 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 %42, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiiPKhi(%class.MaskAdditiveBlitter* nocapture readnone, i32, i32, i8* nocapture readnone, i32) unnamed_addr #2 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 236, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i8 zeroext) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %10 = load i8*, i8** %9, align 8
  br label %28

11:                                               ; preds = %4
  store i32 %2, i32* %5, align 8
  %12 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %2, %15
  %17 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = mul i32 %16, %18
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %26, i8** %27, align 8
  br label %28

28:                                               ; preds = %8, %11
  %29 = phi i8* [ %10, %8 ], [ %26, %11 ]
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = zext i8 %3 to i32
  %35 = add nuw nsw i32 %33, %34
  %36 = lshr i32 %35, 8
  %37 = sub nsw i32 %35, %36
  %38 = trunc i32 %37 to i8
  store i8 %38, i8* %31, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i8 zeroext) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  br label %29

12:                                               ; preds = %5
  store i32 %2, i32* %6, align 8
  %13 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %2, %16
  %18 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = mul i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %27, i8** %28, align 8
  br label %29

29:                                               ; preds = %9, %12
  %30 = phi i8* [ %11, %9 ], [ %27, %12 ]
  %31 = icmp sgt i32 %3, 0
  br i1 %31, label %32, label %93

32:                                               ; preds = %29
  %33 = zext i8 %4 to i32
  %34 = sext i32 %1 to i64
  %35 = zext i32 %3 to i64
  %36 = icmp ult i32 %3, 16
  br i1 %36, label %37, label %39

37:                                               ; preds = %91, %32
  %38 = phi i64 [ 0, %32 ], [ %40, %91 ]
  br label %94

39:                                               ; preds = %32
  %40 = and i64 %35, 4294967280
  %41 = insertelement <16 x i32> undef, i32 %33, i32 0
  %42 = shufflevector <16 x i32> %41, <16 x i32> undef, <16 x i32> zeroinitializer
  %43 = add nsw i64 %40, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %43, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %39
  %49 = sub nuw nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %74, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %75, %50 ]
  %53 = add nsw i64 %51, %34
  %54 = getelementptr inbounds i8, i8* %30, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = zext <16 x i8> %56 to <16 x i32>
  %58 = add nuw nsw <16 x i32> %42, %57
  %59 = lshr <16 x i32> %58, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %60 = sub nsw <16 x i32> %58, %59
  %61 = trunc <16 x i32> %60 to <16 x i8>
  %62 = bitcast i8* %54 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %62, align 1
  %63 = or i64 %51, 16
  %64 = add nsw i64 %63, %34
  %65 = getelementptr inbounds i8, i8* %30, i64 %64
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1
  %68 = zext <16 x i8> %67 to <16 x i32>
  %69 = add nuw nsw <16 x i32> %42, %68
  %70 = lshr <16 x i32> %69, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %71 = sub nsw <16 x i32> %69, %70
  %72 = trunc <16 x i32> %71 to <16 x i8>
  %73 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> %72, <16 x i8>* %73, align 1
  %74 = add i64 %51, 32
  %75 = add i64 %52, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %50, !llvm.loop !2

77:                                               ; preds = %50, %39
  %78 = phi i64 [ 0, %39 ], [ %74, %50 ]
  %79 = icmp eq i64 %46, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = add nsw i64 %78, %34
  %82 = getelementptr inbounds i8, i8* %30, i64 %81
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1
  %85 = zext <16 x i8> %84 to <16 x i32>
  %86 = add nuw nsw <16 x i32> %42, %85
  %87 = lshr <16 x i32> %86, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %88 = sub nsw <16 x i32> %86, %87
  %89 = trunc <16 x i32> %88 to <16 x i8>
  %90 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %90, align 1
  br label %91

91:                                               ; preds = %77, %80
  %92 = icmp eq i64 %40, %35
  br i1 %92, label %93, label %37

93:                                               ; preds = %94, %91, %29
  ret void

94:                                               ; preds = %37, %94
  %95 = phi i64 [ %104, %94 ], [ %38, %37 ]
  %96 = add nsw i64 %95, %34
  %97 = getelementptr inbounds i8, i8* %30, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nuw nsw i32 %99, %33
  %101 = lshr i32 %100, 8
  %102 = sub nsw i32 %100, %101
  %103 = trunc i32 %102 to i8
  store i8 %103, i8* %97, align 1
  %104 = add nuw nsw i64 %95, 1
  %105 = icmp eq i64 %104, %35
  br i1 %105, label %93, label %94, !llvm.loop !4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter5blitVEiiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i8 zeroext) unnamed_addr #4 align 2 {
  %6 = icmp eq i8 %4, 0
  br i1 %6, label %75, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %2
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %13 = load i8*, i8** %12, align 8
  br label %31

14:                                               ; preds = %7
  store i32 %2, i32* %8, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %2, %18
  %20 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = mul i32 %19, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %16, i64 %23
  %25 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  %30 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %29, i8** %30, align 8
  br label %31

31:                                               ; preds = %11, %14
  %32 = phi i8* [ %13, %11 ], [ %29, %14 ]
  %33 = icmp sgt i32 %3, 0
  br i1 %33, label %34, label %75

34:                                               ; preds = %31
  %35 = sext i32 %1 to i64
  %36 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %37 = add i32 %3, -1
  %38 = and i32 %3, 3
  %39 = icmp ult i32 %37, 3
  br i1 %39, label %63, label %40

40:                                               ; preds = %34
  %41 = sub i32 %3, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i8* [ %32, %40 ], [ %60, %42 ]
  %44 = phi i32 [ %41, %40 ], [ %61, %42 ]
  %45 = getelementptr inbounds i8, i8* %43, i64 %35
  store i8 %4, i8* %45, align 1
  %46 = load i32, i32* %36, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %43, i64 %47
  %49 = getelementptr inbounds i8, i8* %48, i64 %35
  store i8 %4, i8* %49, align 1
  %50 = load i32, i32* %36, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 %35
  store i8 %4, i8* %53, align 1
  %54 = load i32, i32* %36, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 %35
  store i8 %4, i8* %57, align 1
  %58 = load i32, i32* %36, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  %61 = add i32 %44, -4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %42

63:                                               ; preds = %42, %34
  %64 = phi i8* [ %32, %34 ], [ %60, %42 ]
  %65 = icmp eq i32 %38, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %63, %66
  %67 = phi i8* [ %72, %66 ], [ %64, %63 ]
  %68 = phi i32 [ %73, %66 ], [ %38, %63 ]
  %69 = getelementptr inbounds i8, i8* %67, i64 %35
  store i8 %4, i8* %69, align 1
  %70 = load i32, i32* %36, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %67, i64 %71
  %73 = add i32 %68, -1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %66, !llvm.loop !6

75:                                               ; preds = %63, %66, %31, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter8blitRectEiiii(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  br label %29

12:                                               ; preds = %5
  store i32 %2, i32* %6, align 8
  %13 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %2, %16
  %18 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = mul i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %27, i8** %28, align 8
  br label %29

29:                                               ; preds = %9, %12
  %30 = phi i8* [ %11, %9 ], [ %27, %12 ]
  %31 = icmp sgt i32 %4, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %29
  %33 = sext i32 %1 to i64
  %34 = sext i32 %3 to i64
  %35 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %36 = add i32 %4, -1
  %37 = and i32 %4, 7
  %38 = icmp ult i32 %36, 7
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  %40 = sub i32 %4, %37
  br label %54

41:                                               ; preds = %54, %32
  %42 = phi i8* [ %30, %32 ], [ %88, %54 ]
  %43 = icmp eq i32 %37, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %41, %44
  %45 = phi i8* [ %50, %44 ], [ %42, %41 ]
  %46 = phi i32 [ %51, %44 ], [ %37, %41 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 -1, i64 %34, i1 false)
  %48 = load i32, i32* %35, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = add i32 %46, -1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %44, !llvm.loop !8

53:                                               ; preds = %41, %44, %29
  ret void

54:                                               ; preds = %54, %39
  %55 = phi i8* [ %30, %39 ], [ %88, %54 ]
  %56 = phi i32 [ %40, %39 ], [ %89, %54 ]
  %57 = getelementptr inbounds i8, i8* %55, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 -1, i64 %34, i1 false)
  %58 = load i32, i32* %35, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %55, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %61, i8 -1, i64 %34, i1 false)
  %62 = load i32, i32* %35, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = getelementptr inbounds i8, i8* %64, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 -1, i64 %34, i1 false)
  %66 = load i32, i32* %35, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 -1, i64 %34, i1 false)
  %70 = load i32, i32* %35, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %68, i64 %71
  %73 = getelementptr inbounds i8, i8* %72, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 -1, i64 %34, i1 false)
  %74 = load i32, i32* %35, align 8
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %72, i64 %75
  %77 = getelementptr inbounds i8, i8* %76, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %77, i8 -1, i64 %34, i1 false)
  %78 = load i32, i32* %35, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %81, i8 -1, i64 %34, i1 false)
  %82 = load i32, i32* %35, align 8
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %80, i64 %83
  %85 = getelementptr inbounds i8, i8* %84, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -1, i64 %34, i1 false)
  %86 = load i32, i32* %35, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = add i32 %56, -8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %41, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter12blitAntiRectEiiiihh(%class.MaskAdditiveBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %8 = bitcast %class.MaskAdditiveBlitter* %0 to void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)***
  %9 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*** %8, align 8
  %10 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %9, i64 4
  %11 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %10, align 8
  tail call void %11(%class.MaskAdditiveBlitter* %0, i32 %1, i32 %2, i32 %4, i8 zeroext %5) #13
  %12 = add nsw i32 %1, 1
  %13 = add nsw i32 %12, %3
  %14 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*** %8, align 8
  %15 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %14, i64 4
  %16 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %15, align 8
  tail call void %16(%class.MaskAdditiveBlitter* %0, i32 %13, i32 %2, i32 %4, i8 zeroext %6) #13
  %17 = bitcast %class.MaskAdditiveBlitter* %0 to void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)***
  %18 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)** %18, i64 5
  %20 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)** %19, align 8
  tail call void %20(%class.MaskAdditiveBlitter* %0, i32 %12, i32 %2, i32 %3, i32 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %class.SkAutoMalloc* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %10, align 8
  %11 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %15 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false)
  br i1 %4, label %16, label %18

16:                                               ; preds = %5
  %17 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %17, i64 16, i1 false)
  br label %21

18:                                               ; preds = %5
  %19 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* dereferenceable(16) %2, %struct.SkIRect* dereferenceable(16) %3) #13
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 16, i1 false) #13
  br label %21

21:                                               ; preds = %18, %20, %16
  %22 = load i32, i32* %12, align 4
  %23 = load i32, i32* %14, align 4
  %24 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  store i32 %22, i32* %24, align 8
  %25 = sub nsw i32 %23, %22
  %26 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  store i32 %25, i32* %26, align 4
  %27 = load i32, i32* %13, align 4
  %28 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  store i32 %27, i32* %28, align 4
  %29 = add nsw i32 %27, -1
  %30 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  %31 = bitcast %class.SkBlitter* %1 to i32 (%class.SkBlitter*)***
  %32 = load i32 (%class.SkBlitter*)**, i32 (%class.SkBlitter*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %32, i64 12
  %34 = load i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %33, align 8
  %35 = call i32 %34(%class.SkBlitter* %1) #13
  %36 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  store i32 %35, i32* %36, align 8
  %37 = load i32, i32* %26, align 4
  %38 = add nsw i32 %37, 1
  %39 = add nsw i32 %37, 2
  %40 = sdiv i32 %39, 2
  %41 = add nsw i32 %38, %40
  %42 = shl i32 %35, 1
  %43 = mul i32 %42, %41
  %44 = sext i32 %43 to i64
  %45 = bitcast %class.SkBlitter* %1 to i8* (%class.SkBlitter*, i64)***
  %46 = load i8* (%class.SkBlitter*, i64)**, i8* (%class.SkBlitter*, i64)*** %45, align 8
  %47 = getelementptr inbounds i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %46, i64 13
  %48 = load i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %47, align 8
  %49 = call i8* %48(%class.SkBlitter* %1, i64 %44) #13
  %50 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %52 = load i32, i32* %26, align 4
  store i32 0, i32* %51, align 8
  %53 = bitcast i8* %49 to i16*
  %54 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %55 = bitcast %class.SkAlphaRuns* %54 to i8**
  store i8* %49, i8** %55, align 8
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds i16, i16* %53, i64 %56
  %58 = getelementptr inbounds i16, i16* %57, i64 1
  %59 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %60 = bitcast i8** %59 to i16**
  store i16* %58, i16** %60, align 8
  call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* %54, i32 %52) #13
  %61 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  ret void
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiPKhi(%class.RunBasedAdditiveBlitter*, i32, i32, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0) #13
  store i32 %2, i32* %6, align 8
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %1, %12
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = add nsw i32 %13, %4
  %17 = sext i32 %13 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  br label %20

20:                                               ; preds = %15, %10
  %21 = phi i32 [ %16, %15 ], [ %4, %10 ]
  %22 = phi i32 [ 0, %15 ], [ %13, %10 ]
  %23 = phi i8* [ %19, %15 ], [ %3, %10 ]
  %24 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %25, %22
  %27 = icmp slt i32 %26, %21
  %28 = select i1 %27, i32 %26, i32 %21
  %29 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %22, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %20
  store i32 0, i32* %29, align 8
  br label %33

33:                                               ; preds = %32, %20
  %34 = phi i32 [ 0, %32 ], [ %30, %20 ]
  %35 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %37
  %42 = sub nsw i32 %22, %34
  %43 = icmp eq i32 %28, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %33
  store i32 %34, i32* %29, align 8
  br label %178

45:                                               ; preds = %33
  %46 = sext i32 %42 to i64
  %47 = getelementptr inbounds i16, i16* %38, i64 %46
  %48 = getelementptr inbounds i8, i8* %41, i64 %46
  %49 = icmp sgt i32 %42, 0
  br i1 %49, label %50, label %70

50:                                               ; preds = %45, %64
  %51 = phi i16* [ %66, %64 ], [ %38, %45 ]
  %52 = phi i32 [ %68, %64 ], [ %42, %45 ]
  %53 = phi i8* [ %67, %64 ], [ %41, %45 ]
  %54 = load i16, i16* %51, align 2
  %55 = sext i16 %54 to i32
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %50
  %58 = load i8, i8* %53, align 1
  %59 = sext i32 %52 to i64
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  store i8 %58, i8* %60, align 1
  %61 = trunc i32 %52 to i16
  store i16 %61, i16* %51, align 2
  %62 = sub i16 %54, %61
  %63 = getelementptr inbounds i16, i16* %51, i64 %59
  store i16 %62, i16* %63, align 2
  br label %70

64:                                               ; preds = %50
  %65 = sext i16 %54 to i64
  %66 = getelementptr inbounds i16, i16* %51, i64 %65
  %67 = getelementptr inbounds i8, i8* %53, i64 %65
  %68 = sub nsw i32 %52, %55
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %50, label %70

70:                                               ; preds = %64, %57, %45
  %71 = load i16, i16* %47, align 2
  %72 = sext i16 %71 to i32
  %73 = icmp slt i32 %28, %72
  br i1 %73, label %74, label %86

74:                                               ; preds = %94, %70
  %75 = phi i8* [ %48, %70 ], [ %97, %94 ]
  %76 = phi i32 [ %28, %70 ], [ %92, %94 ]
  %77 = phi i16* [ %47, %70 ], [ %96, %94 ]
  %78 = phi i16 [ %71, %70 ], [ %98, %94 ]
  %79 = load i8, i8* %75, align 1
  %80 = sext i32 %76 to i64
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  store i8 %79, i8* %81, align 1
  %82 = trunc i32 %76 to i16
  store i16 %82, i16* %77, align 2
  %83 = sub i16 %78, %82
  %84 = getelementptr inbounds i16, i16* %77, i64 %80
  store i16 %83, i16* %84, align 2
  br label %85

85:                                               ; preds = %86, %74
  br label %101

86:                                               ; preds = %70, %94
  %87 = phi i32 [ %99, %94 ], [ %72, %70 ]
  %88 = phi i16 [ %98, %94 ], [ %71, %70 ]
  %89 = phi i16* [ %96, %94 ], [ %47, %70 ]
  %90 = phi i32 [ %92, %94 ], [ %28, %70 ]
  %91 = phi i8* [ %97, %94 ], [ %48, %70 ]
  %92 = sub nsw i32 %90, %87
  %93 = icmp slt i32 %92, 1
  br i1 %93, label %85, label %94

94:                                               ; preds = %86
  %95 = sext i16 %88 to i64
  %96 = getelementptr inbounds i16, i16* %89, i64 %95
  %97 = getelementptr inbounds i8, i8* %91, i64 %95
  %98 = load i16, i16* %96, align 2
  %99 = sext i16 %98 to i32
  %100 = icmp slt i32 %92, %99
  br i1 %100, label %74, label %86

101:                                              ; preds = %85, %101
  %102 = phi i16* [ %109, %101 ], [ %47, %85 ]
  %103 = phi i8* [ %108, %101 ], [ %48, %85 ]
  %104 = phi i32 [ %110, %101 ], [ %28, %85 ]
  %105 = load i16, i16* %102, align 2
  %106 = sext i16 %105 to i32
  %107 = sext i16 %105 to i64
  %108 = getelementptr inbounds i8, i8* %103, i64 %107
  %109 = getelementptr inbounds i16, i16* %102, i64 %107
  %110 = sub nsw i32 %104, %106
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %101, label %112

112:                                              ; preds = %101
  %113 = bitcast i8** %39 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = ptrtoint i8* %108 to i64
  %116 = sub i64 %115, %114
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* %29, align 8
  %118 = icmp sgt i32 %28, 0
  br i1 %118, label %119, label %178

119:                                              ; preds = %112
  %120 = load i16*, i16** %35, align 8
  br label %121

121:                                              ; preds = %119, %139
  %122 = phi i16* [ %120, %119 ], [ %141, %139 ]
  %123 = phi i32 [ 0, %119 ], [ %145, %139 ]
  %124 = add nsw i32 %123, %22
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i16, i16* %122, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = icmp sgt i16 %127, 1
  br i1 %128, label %147, label %139

129:                                              ; preds = %139
  br i1 %118, label %130, label %178

130:                                              ; preds = %129
  %131 = sext i32 %22 to i64
  %132 = sext i32 %28 to i64
  %133 = and i64 %132, 1
  %134 = icmp eq i32 %28, 1
  br i1 %134, label %162, label %135

135:                                              ; preds = %130
  %136 = sub nsw i64 %132, %133
  br label %179

137:                                              ; preds = %147
  %138 = getelementptr inbounds i16, i16* %157, i64 %125
  br label %139

139:                                              ; preds = %137, %121
  %140 = phi i16* [ %126, %121 ], [ %138, %137 ]
  store i16 1, i16* %140, align 2
  %141 = load i16*, i16** %35, align 8
  %142 = getelementptr inbounds i16, i16* %141, i64 %125
  %143 = load i16, i16* %142, align 2
  %144 = sext i16 %143 to i32
  %145 = add nsw i32 %123, %144
  %146 = icmp slt i32 %145, %28
  br i1 %146, label %121, label %129

147:                                              ; preds = %121, %147
  %148 = phi i64 [ %156, %147 ], [ 1, %121 ]
  %149 = phi i16* [ %157, %147 ], [ %122, %121 ]
  %150 = add nsw i64 %148, %125
  %151 = getelementptr inbounds i16, i16* %149, i64 %150
  store i16 1, i16* %151, align 2
  %152 = load i8*, i8** %39, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 %125
  %154 = load i8, i8* %153, align 1
  %155 = getelementptr inbounds i8, i8* %152, i64 %150
  store i8 %154, i8* %155, align 1
  %156 = add nuw nsw i64 %148, 1
  %157 = load i16*, i16** %35, align 8
  %158 = getelementptr inbounds i16, i16* %157, i64 %125
  %159 = load i16, i16* %158, align 2
  %160 = sext i16 %159 to i64
  %161 = icmp slt i64 %156, %160
  br i1 %161, label %147, label %137

162:                                              ; preds = %179, %130
  %163 = phi i64 [ 0, %130 ], [ %207, %179 ]
  %164 = icmp eq i64 %133, 0
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = load i8*, i8** %39, align 8
  %167 = add nuw nsw i64 %163, %131
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = getelementptr inbounds i8, i8* %23, i64 %163
  %170 = load i8, i8* %169, align 1
  %171 = load i8, i8* %168, align 1
  %172 = zext i8 %171 to i32
  %173 = zext i8 %170 to i32
  %174 = add nuw nsw i32 %172, %173
  %175 = lshr i32 %174, 8
  %176 = sub nsw i32 %174, %175
  %177 = trunc i32 %176 to i8
  store i8 %177, i8* %168, align 1
  br label %178

178:                                              ; preds = %165, %162, %112, %44, %129
  ret void

179:                                              ; preds = %179, %135
  %180 = phi i64 [ 0, %135 ], [ %207, %179 ]
  %181 = phi i64 [ %136, %135 ], [ %208, %179 ]
  %182 = load i8*, i8** %39, align 8
  %183 = add nuw nsw i64 %180, %131
  %184 = getelementptr inbounds i8, i8* %182, i64 %183
  %185 = getelementptr inbounds i8, i8* %23, i64 %180
  %186 = load i8, i8* %185, align 1
  %187 = load i8, i8* %184, align 1
  %188 = zext i8 %187 to i32
  %189 = zext i8 %186 to i32
  %190 = add nuw nsw i32 %188, %189
  %191 = lshr i32 %190, 8
  %192 = sub nsw i32 %190, %191
  %193 = trunc i32 %192 to i8
  store i8 %193, i8* %184, align 1
  %194 = or i64 %180, 1
  %195 = load i8*, i8** %39, align 8
  %196 = add nuw nsw i64 %194, %131
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = getelementptr inbounds i8, i8* %23, i64 %194
  %199 = load i8, i8* %198, align 1
  %200 = load i8, i8* %197, align 1
  %201 = zext i8 %200 to i32
  %202 = zext i8 %199 to i32
  %203 = add nuw nsw i32 %201, %202
  %204 = lshr i32 %203, 8
  %205 = sub nsw i32 %203, %204
  %206 = trunc i32 %205 to i8
  store i8 %206, i8* %197, align 1
  %207 = add nuw nsw i64 %180, 2
  %208 = add i64 %181, -2
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %162, label %179
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiih(%class.RunBasedAdditiveBlitter*, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0) #13
  store i32 %2, i32* %5, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = sub nsw i32 %1, %11
  %13 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  store i32 0, i32* %13, align 8
  br label %17

17:                                               ; preds = %16, %9
  %18 = phi i32 [ 0, %16 ], [ %14, %9 ]
  %19 = icmp sgt i32 %12, -1
  br i1 %19, label %20, label %113

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %12, %22
  br i1 %23, label %24, label %113

24:                                               ; preds = %20
  %25 = zext i8 %3 to i32
  %26 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = sext i32 %18 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %28
  %33 = sub nsw i32 %12, %18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %29, i64 %34
  %36 = getelementptr inbounds i8, i8* %32, i64 %34
  %37 = icmp sgt i32 %33, 0
  br i1 %37, label %38, label %58

38:                                               ; preds = %24, %52
  %39 = phi i16* [ %54, %52 ], [ %29, %24 ]
  %40 = phi i32 [ %56, %52 ], [ %33, %24 ]
  %41 = phi i8* [ %55, %52 ], [ %32, %24 ]
  %42 = load i16, i16* %39, align 2
  %43 = sext i16 %42 to i32
  %44 = icmp slt i32 %40, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %38
  %46 = load i8, i8* %41, align 1
  %47 = sext i32 %40 to i64
  %48 = getelementptr inbounds i8, i8* %41, i64 %47
  store i8 %46, i8* %48, align 1
  %49 = trunc i32 %40 to i16
  store i16 %49, i16* %39, align 2
  %50 = sub i16 %42, %49
  %51 = getelementptr inbounds i16, i16* %39, i64 %47
  store i16 %50, i16* %51, align 2
  br label %58

52:                                               ; preds = %38
  %53 = sext i16 %42 to i64
  %54 = getelementptr inbounds i16, i16* %39, i64 %53
  %55 = getelementptr inbounds i8, i8* %41, i64 %53
  %56 = sub nsw i32 %40, %43
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %38, label %58

58:                                               ; preds = %52, %45, %24
  %59 = load i16, i16* %35, align 2
  %60 = icmp sgt i16 %59, 1
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = sext i16 %59 to i32
  br label %75

63:                                               ; preds = %83, %58
  %64 = phi i8* [ %36, %58 ], [ %86, %83 ]
  %65 = phi i32 [ 1, %58 ], [ %81, %83 ]
  %66 = phi i16* [ %35, %58 ], [ %85, %83 ]
  %67 = phi i16 [ %59, %58 ], [ %87, %83 ]
  %68 = load i8, i8* %64, align 1
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i8, i8* %64, i64 %69
  store i8 %68, i8* %70, align 1
  %71 = trunc i32 %65 to i16
  store i16 %71, i16* %66, align 2
  %72 = sub i16 %67, %71
  %73 = getelementptr inbounds i16, i16* %66, i64 %69
  store i16 %72, i16* %73, align 2
  br label %74

74:                                               ; preds = %75, %63
  br label %90

75:                                               ; preds = %61, %83
  %76 = phi i32 [ %88, %83 ], [ %62, %61 ]
  %77 = phi i16 [ %87, %83 ], [ %59, %61 ]
  %78 = phi i16* [ %85, %83 ], [ %35, %61 ]
  %79 = phi i32 [ %81, %83 ], [ 1, %61 ]
  %80 = phi i8* [ %86, %83 ], [ %36, %61 ]
  %81 = sub nsw i32 %79, %76
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %74, label %83

83:                                               ; preds = %75
  %84 = sext i16 %77 to i64
  %85 = getelementptr inbounds i16, i16* %78, i64 %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %84
  %87 = load i16, i16* %85, align 2
  %88 = sext i16 %87 to i32
  %89 = icmp slt i32 %81, %88
  br i1 %89, label %63, label %75

90:                                               ; preds = %74, %90
  %91 = phi i16* [ %104, %90 ], [ %35, %74 ]
  %92 = phi i8* [ %103, %90 ], [ %36, %74 ]
  %93 = phi i32 [ %105, %90 ], [ 1, %74 ]
  %94 = load i8, i8* %92, align 1
  %95 = zext i8 %94 to i32
  %96 = add nuw nsw i32 %95, %25
  %97 = lshr i32 %96, 8
  %98 = sub nsw i32 %96, %97
  %99 = trunc i32 %98 to i8
  store i8 %99, i8* %92, align 1
  %100 = load i16, i16* %91, align 2
  %101 = sext i16 %100 to i32
  %102 = sext i16 %100 to i64
  %103 = getelementptr inbounds i8, i8* %92, i64 %102
  %104 = getelementptr inbounds i16, i16* %91, i64 %102
  %105 = sub nsw i32 %93, %101
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %90, label %107

107:                                              ; preds = %90
  %108 = bitcast i8** %30 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = ptrtoint i8* %103 to i64
  %111 = sub i64 %110, %109
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %13, align 8
  br label %113

113:                                              ; preds = %17, %107, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiih(%class.RunBasedAdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0) #13
  store i32 %2, i32* %6, align 8
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %1, %12
  %14 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 0, i32* %14, align 8
  br label %18

18:                                               ; preds = %17, %10
  %19 = phi i32 [ 0, %17 ], [ %15, %10 ]
  %20 = icmp sgt i32 %13, -1
  br i1 %20, label %21, label %121

21:                                               ; preds = %18
  %22 = add nsw i32 %13, %3
  %23 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %121, label %26

26:                                               ; preds = %21
  %27 = zext i8 %4 to i32
  %28 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = sext i32 %19 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = sub nsw i32 %13, %19
  %36 = icmp eq i32 %3, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = ptrtoint i8* %33 to i64
  br label %115

39:                                               ; preds = %26
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds i16, i16* %31, i64 %40
  %42 = getelementptr inbounds i8, i8* %34, i64 %40
  %43 = icmp sgt i32 %35, 0
  br i1 %43, label %44, label %64

44:                                               ; preds = %39, %58
  %45 = phi i16* [ %60, %58 ], [ %31, %39 ]
  %46 = phi i32 [ %62, %58 ], [ %35, %39 ]
  %47 = phi i8* [ %61, %58 ], [ %34, %39 ]
  %48 = load i16, i16* %45, align 2
  %49 = sext i16 %48 to i32
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %44
  %52 = load i8, i8* %47, align 1
  %53 = sext i32 %46 to i64
  %54 = getelementptr inbounds i8, i8* %47, i64 %53
  store i8 %52, i8* %54, align 1
  %55 = trunc i32 %46 to i16
  store i16 %55, i16* %45, align 2
  %56 = sub i16 %48, %55
  %57 = getelementptr inbounds i16, i16* %45, i64 %53
  store i16 %56, i16* %57, align 2
  br label %64

58:                                               ; preds = %44
  %59 = sext i16 %48 to i64
  %60 = getelementptr inbounds i16, i16* %45, i64 %59
  %61 = getelementptr inbounds i8, i8* %47, i64 %59
  %62 = sub nsw i32 %46, %49
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %44, label %64

64:                                               ; preds = %58, %51, %39
  %65 = load i16, i16* %41, align 2
  %66 = sext i16 %65 to i32
  %67 = icmp sgt i32 %66, %3
  br i1 %67, label %68, label %80

68:                                               ; preds = %88, %64
  %69 = phi i8* [ %42, %64 ], [ %91, %88 ]
  %70 = phi i32 [ %3, %64 ], [ %86, %88 ]
  %71 = phi i16* [ %41, %64 ], [ %90, %88 ]
  %72 = phi i16 [ %65, %64 ], [ %92, %88 ]
  %73 = load i8, i8* %69, align 1
  %74 = sext i32 %70 to i64
  %75 = getelementptr inbounds i8, i8* %69, i64 %74
  store i8 %73, i8* %75, align 1
  %76 = trunc i32 %70 to i16
  store i16 %76, i16* %71, align 2
  %77 = sub i16 %72, %76
  %78 = getelementptr inbounds i16, i16* %71, i64 %74
  store i16 %77, i16* %78, align 2
  br label %79

79:                                               ; preds = %80, %68
  br label %95

80:                                               ; preds = %64, %88
  %81 = phi i32 [ %93, %88 ], [ %66, %64 ]
  %82 = phi i16 [ %92, %88 ], [ %65, %64 ]
  %83 = phi i16* [ %90, %88 ], [ %41, %64 ]
  %84 = phi i32 [ %86, %88 ], [ %3, %64 ]
  %85 = phi i8* [ %91, %88 ], [ %42, %64 ]
  %86 = sub nsw i32 %84, %81
  %87 = icmp slt i32 %86, 1
  br i1 %87, label %79, label %88

88:                                               ; preds = %80
  %89 = sext i16 %82 to i64
  %90 = getelementptr inbounds i16, i16* %83, i64 %89
  %91 = getelementptr inbounds i8, i8* %85, i64 %89
  %92 = load i16, i16* %90, align 2
  %93 = sext i16 %92 to i32
  %94 = icmp slt i32 %86, %93
  br i1 %94, label %68, label %80

95:                                               ; preds = %79, %95
  %96 = phi i16* [ %109, %95 ], [ %41, %79 ]
  %97 = phi i8* [ %108, %95 ], [ %42, %79 ]
  %98 = phi i32 [ %110, %95 ], [ %3, %79 ]
  %99 = load i8, i8* %97, align 1
  %100 = zext i8 %99 to i32
  %101 = add nuw nsw i32 %100, %27
  %102 = lshr i32 %101, 8
  %103 = sub nsw i32 %101, %102
  %104 = trunc i32 %103 to i8
  store i8 %104, i8* %97, align 1
  %105 = load i16, i16* %96, align 2
  %106 = sext i16 %105 to i32
  %107 = sext i16 %105 to i64
  %108 = getelementptr inbounds i8, i8* %97, i64 %107
  %109 = getelementptr inbounds i16, i16* %96, i64 %107
  %110 = sub nsw i32 %98, %106
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %95, label %112

112:                                              ; preds = %95
  %113 = bitcast i8** %32 to i64*
  %114 = load i64, i64* %113, align 8
  br label %115

115:                                              ; preds = %37, %112
  %116 = phi i64 [ %38, %37 ], [ %114, %112 ]
  %117 = phi i8* [ %34, %37 ], [ %108, %112 ]
  %118 = ptrtoint i8* %117 to i64
  %119 = sub i64 %118, %116
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %14, align 8
  br label %121

121:                                              ; preds = %21, %18, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiPKhi(%class.SafeRLEAdditiveBlitter*, i32, i32, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.SafeRLEAdditiveBlitter* %0 to %class.RunBasedAdditiveBlitter*
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %10) #13
  store i32 %2, i32* %6, align 8
  br label %11

11:                                               ; preds = %5, %9
  %12 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = sub nsw i32 %1, %13
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = add nsw i32 %14, %4
  %18 = sext i32 %14 to i64
  %19 = sub nsw i64 0, %18
  %20 = getelementptr inbounds i8, i8* %3, i64 %19
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i32 [ %17, %16 ], [ %4, %11 ]
  %23 = phi i32 [ 0, %16 ], [ %14, %11 ]
  %24 = phi i8* [ %20, %16 ], [ %3, %11 ]
  %25 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %26, %23
  %28 = icmp slt i32 %27, %22
  %29 = select i1 %28, i32 %27, i32 %22
  %30 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %23, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %21
  store i32 0, i32* %30, align 8
  br label %34

34:                                               ; preds = %33, %21
  %35 = phi i32 [ 0, %33 ], [ %31, %21 ]
  %36 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds i16, i16* %37, i64 %38
  %40 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %38
  %43 = sub nsw i32 %23, %35
  %44 = icmp eq i32 %29, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %34
  store i32 %35, i32* %30, align 8
  br label %179

46:                                               ; preds = %34
  %47 = sext i32 %43 to i64
  %48 = getelementptr inbounds i16, i16* %39, i64 %47
  %49 = getelementptr inbounds i8, i8* %42, i64 %47
  %50 = icmp sgt i32 %43, 0
  br i1 %50, label %51, label %71

51:                                               ; preds = %46, %65
  %52 = phi i16* [ %67, %65 ], [ %39, %46 ]
  %53 = phi i32 [ %69, %65 ], [ %43, %46 ]
  %54 = phi i8* [ %68, %65 ], [ %42, %46 ]
  %55 = load i16, i16* %52, align 2
  %56 = sext i16 %55 to i32
  %57 = icmp slt i32 %53, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = load i8, i8* %54, align 1
  %60 = sext i32 %53 to i64
  %61 = getelementptr inbounds i8, i8* %54, i64 %60
  store i8 %59, i8* %61, align 1
  %62 = trunc i32 %53 to i16
  store i16 %62, i16* %52, align 2
  %63 = sub i16 %55, %62
  %64 = getelementptr inbounds i16, i16* %52, i64 %60
  store i16 %63, i16* %64, align 2
  br label %71

65:                                               ; preds = %51
  %66 = sext i16 %55 to i64
  %67 = getelementptr inbounds i16, i16* %52, i64 %66
  %68 = getelementptr inbounds i8, i8* %54, i64 %66
  %69 = sub nsw i32 %53, %56
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %51, label %71

71:                                               ; preds = %65, %58, %46
  %72 = load i16, i16* %48, align 2
  %73 = sext i16 %72 to i32
  %74 = icmp slt i32 %29, %73
  br i1 %74, label %75, label %87

75:                                               ; preds = %95, %71
  %76 = phi i8* [ %49, %71 ], [ %98, %95 ]
  %77 = phi i32 [ %29, %71 ], [ %93, %95 ]
  %78 = phi i16* [ %48, %71 ], [ %97, %95 ]
  %79 = phi i16 [ %72, %71 ], [ %99, %95 ]
  %80 = load i8, i8* %76, align 1
  %81 = sext i32 %77 to i64
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %80, i8* %82, align 1
  %83 = trunc i32 %77 to i16
  store i16 %83, i16* %78, align 2
  %84 = sub i16 %79, %83
  %85 = getelementptr inbounds i16, i16* %78, i64 %81
  store i16 %84, i16* %85, align 2
  br label %86

86:                                               ; preds = %87, %75
  br label %102

87:                                               ; preds = %71, %95
  %88 = phi i32 [ %100, %95 ], [ %73, %71 ]
  %89 = phi i16 [ %99, %95 ], [ %72, %71 ]
  %90 = phi i16* [ %97, %95 ], [ %48, %71 ]
  %91 = phi i32 [ %93, %95 ], [ %29, %71 ]
  %92 = phi i8* [ %98, %95 ], [ %49, %71 ]
  %93 = sub nsw i32 %91, %88
  %94 = icmp slt i32 %93, 1
  br i1 %94, label %86, label %95

95:                                               ; preds = %87
  %96 = sext i16 %89 to i64
  %97 = getelementptr inbounds i16, i16* %90, i64 %96
  %98 = getelementptr inbounds i8, i8* %92, i64 %96
  %99 = load i16, i16* %97, align 2
  %100 = sext i16 %99 to i32
  %101 = icmp slt i32 %93, %100
  br i1 %101, label %75, label %87

102:                                              ; preds = %86, %102
  %103 = phi i16* [ %110, %102 ], [ %48, %86 ]
  %104 = phi i8* [ %109, %102 ], [ %49, %86 ]
  %105 = phi i32 [ %111, %102 ], [ %29, %86 ]
  %106 = load i16, i16* %103, align 2
  %107 = sext i16 %106 to i32
  %108 = sext i16 %106 to i64
  %109 = getelementptr inbounds i8, i8* %104, i64 %108
  %110 = getelementptr inbounds i16, i16* %103, i64 %108
  %111 = sub nsw i32 %105, %107
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %102, label %113

113:                                              ; preds = %102
  %114 = bitcast i8** %40 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = ptrtoint i8* %109 to i64
  %117 = sub i64 %116, %115
  %118 = trunc i64 %117 to i32
  store i32 %118, i32* %30, align 8
  %119 = icmp sgt i32 %29, 0
  br i1 %119, label %120, label %179

120:                                              ; preds = %113
  %121 = load i16*, i16** %36, align 8
  br label %122

122:                                              ; preds = %120, %140
  %123 = phi i16* [ %121, %120 ], [ %142, %140 ]
  %124 = phi i32 [ 0, %120 ], [ %146, %140 ]
  %125 = add nsw i32 %124, %23
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i16, i16* %123, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = icmp sgt i16 %128, 1
  br i1 %129, label %148, label %140

130:                                              ; preds = %140
  br i1 %119, label %131, label %179

131:                                              ; preds = %130
  %132 = sext i32 %23 to i64
  %133 = sext i32 %29 to i64
  %134 = and i64 %133, 1
  %135 = icmp eq i32 %29, 1
  br i1 %135, label %163, label %136

136:                                              ; preds = %131
  %137 = sub nsw i64 %133, %134
  br label %180

138:                                              ; preds = %148
  %139 = getelementptr inbounds i16, i16* %158, i64 %126
  br label %140

140:                                              ; preds = %138, %122
  %141 = phi i16* [ %127, %122 ], [ %139, %138 ]
  store i16 1, i16* %141, align 2
  %142 = load i16*, i16** %36, align 8
  %143 = getelementptr inbounds i16, i16* %142, i64 %126
  %144 = load i16, i16* %143, align 2
  %145 = sext i16 %144 to i32
  %146 = add nsw i32 %124, %145
  %147 = icmp slt i32 %146, %29
  br i1 %147, label %122, label %130

148:                                              ; preds = %122, %148
  %149 = phi i64 [ %157, %148 ], [ 1, %122 ]
  %150 = phi i16* [ %158, %148 ], [ %123, %122 ]
  %151 = add nsw i64 %149, %126
  %152 = getelementptr inbounds i16, i16* %150, i64 %151
  store i16 1, i16* %152, align 2
  %153 = load i8*, i8** %40, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 %126
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 %151
  store i8 %155, i8* %156, align 1
  %157 = add nuw nsw i64 %149, 1
  %158 = load i16*, i16** %36, align 8
  %159 = getelementptr inbounds i16, i16* %158, i64 %126
  %160 = load i16, i16* %159, align 2
  %161 = sext i16 %160 to i64
  %162 = icmp slt i64 %157, %161
  br i1 %162, label %148, label %138

163:                                              ; preds = %180, %131
  %164 = phi i64 [ 0, %131 ], [ %208, %180 ]
  %165 = icmp eq i64 %134, 0
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = load i8*, i8** %40, align 8
  %168 = add nuw nsw i64 %164, %132
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  %170 = getelementptr inbounds i8, i8* %24, i64 %164
  %171 = load i8, i8* %170, align 1
  %172 = load i8, i8* %169, align 1
  %173 = zext i8 %172 to i32
  %174 = zext i8 %171 to i32
  %175 = add nuw nsw i32 %173, %174
  %176 = icmp ult i32 %175, 255
  %177 = select i1 %176, i32 %175, i32 255
  %178 = trunc i32 %177 to i8
  store i8 %178, i8* %169, align 1
  br label %179

179:                                              ; preds = %166, %163, %113, %45, %130
  ret void

180:                                              ; preds = %180, %136
  %181 = phi i64 [ 0, %136 ], [ %208, %180 ]
  %182 = phi i64 [ %137, %136 ], [ %209, %180 ]
  %183 = load i8*, i8** %40, align 8
  %184 = add nuw nsw i64 %181, %132
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = getelementptr inbounds i8, i8* %24, i64 %181
  %187 = load i8, i8* %186, align 1
  %188 = load i8, i8* %185, align 1
  %189 = zext i8 %188 to i32
  %190 = zext i8 %187 to i32
  %191 = add nuw nsw i32 %189, %190
  %192 = icmp ult i32 %191, 255
  %193 = select i1 %192, i32 %191, i32 255
  %194 = trunc i32 %193 to i8
  store i8 %194, i8* %185, align 1
  %195 = or i64 %181, 1
  %196 = load i8*, i8** %40, align 8
  %197 = add nuw nsw i64 %195, %132
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  %199 = getelementptr inbounds i8, i8* %24, i64 %195
  %200 = load i8, i8* %199, align 1
  %201 = load i8, i8* %198, align 1
  %202 = zext i8 %201 to i32
  %203 = zext i8 %200 to i32
  %204 = add nuw nsw i32 %202, %203
  %205 = icmp ult i32 %204, 255
  %206 = select i1 %205, i32 %204, i32 255
  %207 = trunc i32 %206 to i8
  store i8 %207, i8* %198, align 1
  %208 = add nuw nsw i64 %181, 2
  %209 = add i64 %182, -2
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %163, label %180
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiih(%class.SafeRLEAdditiveBlitter*, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.SafeRLEAdditiveBlitter* %0 to %class.RunBasedAdditiveBlitter*
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %9) #13
  store i32 %2, i32* %5, align 8
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %1, %12
  %14 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 0, i32* %14, align 8
  br label %18

18:                                               ; preds = %17, %10
  %19 = phi i32 [ 0, %17 ], [ %15, %10 ]
  %20 = icmp sgt i32 %13, -1
  br i1 %20, label %21, label %117

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %13, %23
  br i1 %24, label %25, label %117

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = sext i32 %19 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %28
  %33 = sub nsw i32 %13, %19
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %29, i64 %34
  %36 = getelementptr inbounds i8, i8* %32, i64 %34
  %37 = icmp sgt i32 %33, 0
  br i1 %37, label %38, label %58

38:                                               ; preds = %25, %52
  %39 = phi i16* [ %54, %52 ], [ %29, %25 ]
  %40 = phi i32 [ %56, %52 ], [ %33, %25 ]
  %41 = phi i8* [ %55, %52 ], [ %32, %25 ]
  %42 = load i16, i16* %39, align 2
  %43 = sext i16 %42 to i32
  %44 = icmp slt i32 %40, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %38
  %46 = load i8, i8* %41, align 1
  %47 = sext i32 %40 to i64
  %48 = getelementptr inbounds i8, i8* %41, i64 %47
  store i8 %46, i8* %48, align 1
  %49 = trunc i32 %40 to i16
  store i16 %49, i16* %39, align 2
  %50 = sub i16 %42, %49
  %51 = getelementptr inbounds i16, i16* %39, i64 %47
  store i16 %50, i16* %51, align 2
  br label %58

52:                                               ; preds = %38
  %53 = sext i16 %42 to i64
  %54 = getelementptr inbounds i16, i16* %39, i64 %53
  %55 = getelementptr inbounds i8, i8* %41, i64 %53
  %56 = sub nsw i32 %40, %43
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %38, label %58

58:                                               ; preds = %52, %45, %25
  %59 = load i16, i16* %35, align 2
  %60 = icmp sgt i16 %59, 1
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = sext i16 %59 to i32
  br label %75

63:                                               ; preds = %83, %58
  %64 = phi i8* [ %36, %58 ], [ %86, %83 ]
  %65 = phi i32 [ 1, %58 ], [ %81, %83 ]
  %66 = phi i16* [ %35, %58 ], [ %85, %83 ]
  %67 = phi i16 [ %59, %58 ], [ %87, %83 ]
  %68 = load i8, i8* %64, align 1
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i8, i8* %64, i64 %69
  store i8 %68, i8* %70, align 1
  %71 = trunc i32 %65 to i16
  store i16 %71, i16* %66, align 2
  %72 = sub i16 %67, %71
  %73 = getelementptr inbounds i16, i16* %66, i64 %69
  store i16 %72, i16* %73, align 2
  br label %74

74:                                               ; preds = %75, %63
  br label %90

75:                                               ; preds = %61, %83
  %76 = phi i32 [ %88, %83 ], [ %62, %61 ]
  %77 = phi i16 [ %87, %83 ], [ %59, %61 ]
  %78 = phi i16* [ %85, %83 ], [ %35, %61 ]
  %79 = phi i32 [ %81, %83 ], [ 1, %61 ]
  %80 = phi i8* [ %86, %83 ], [ %36, %61 ]
  %81 = sub nsw i32 %79, %76
  %82 = icmp slt i32 %81, 1
  br i1 %82, label %74, label %83

83:                                               ; preds = %75
  %84 = sext i16 %77 to i64
  %85 = getelementptr inbounds i16, i16* %78, i64 %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %84
  %87 = load i16, i16* %85, align 2
  %88 = sext i16 %87 to i32
  %89 = icmp slt i32 %81, %88
  br i1 %89, label %63, label %75

90:                                               ; preds = %74, %90
  %91 = phi i16* [ %98, %90 ], [ %35, %74 ]
  %92 = phi i8* [ %97, %90 ], [ %36, %74 ]
  %93 = phi i32 [ %99, %90 ], [ 1, %74 ]
  %94 = load i16, i16* %91, align 2
  %95 = sext i16 %94 to i32
  %96 = sext i16 %94 to i64
  %97 = getelementptr inbounds i8, i8* %92, i64 %96
  %98 = getelementptr inbounds i16, i16* %91, i64 %96
  %99 = sub nsw i32 %93, %95
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %90, label %101

101:                                              ; preds = %90
  %102 = bitcast i8** %30 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = ptrtoint i8* %97 to i64
  %105 = sub i64 %104, %103
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %14, align 8
  %107 = inttoptr i64 %103 to i8*
  %108 = sext i32 %13 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = zext i8 %3 to i32
  %113 = add nuw nsw i32 %111, %112
  %114 = icmp ult i32 %113, 255
  %115 = select i1 %114, i32 %113, i32 255
  %116 = trunc i32 %115 to i8
  store i8 %116, i8* %109, align 1
  br label %117

117:                                              ; preds = %18, %101, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiih(%class.SafeRLEAdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.SafeRLEAdditiveBlitter* %0 to %class.RunBasedAdditiveBlitter*
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %10) #13
  store i32 %2, i32* %6, align 8
  br label %11

11:                                               ; preds = %5, %9
  %12 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = sub nsw i32 %1, %13
  %15 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  store i32 0, i32* %15, align 8
  br label %19

19:                                               ; preds = %18, %11
  %20 = phi i32 [ 0, %18 ], [ %16, %11 ]
  %21 = icmp sgt i32 %14, -1
  br i1 %21, label %22, label %146

22:                                               ; preds = %19
  %23 = add nsw i32 %14, %3
  %24 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %23, %25
  br i1 %26, label %146, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = sext i32 %20 to i64
  %31 = getelementptr inbounds i16, i16* %29, i64 %30
  %32 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = sub nsw i32 %14, %20
  %36 = icmp eq i32 %3, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %27
  store i32 %20, i32* %15, align 8
  br label %146

38:                                               ; preds = %27
  %39 = sext i32 %35 to i64
  %40 = getelementptr inbounds i16, i16* %31, i64 %39
  %41 = getelementptr inbounds i8, i8* %34, i64 %39
  %42 = icmp sgt i32 %35, 0
  br i1 %42, label %43, label %63

43:                                               ; preds = %38, %57
  %44 = phi i16* [ %59, %57 ], [ %31, %38 ]
  %45 = phi i32 [ %61, %57 ], [ %35, %38 ]
  %46 = phi i8* [ %60, %57 ], [ %34, %38 ]
  %47 = load i16, i16* %44, align 2
  %48 = sext i16 %47 to i32
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = load i8, i8* %46, align 1
  %52 = sext i32 %45 to i64
  %53 = getelementptr inbounds i8, i8* %46, i64 %52
  store i8 %51, i8* %53, align 1
  %54 = trunc i32 %45 to i16
  store i16 %54, i16* %44, align 2
  %55 = sub i16 %47, %54
  %56 = getelementptr inbounds i16, i16* %44, i64 %52
  store i16 %55, i16* %56, align 2
  br label %63

57:                                               ; preds = %43
  %58 = sext i16 %47 to i64
  %59 = getelementptr inbounds i16, i16* %44, i64 %58
  %60 = getelementptr inbounds i8, i8* %46, i64 %58
  %61 = sub nsw i32 %45, %48
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %43, label %63

63:                                               ; preds = %57, %50, %38
  %64 = load i16, i16* %40, align 2
  %65 = sext i16 %64 to i32
  %66 = icmp sgt i32 %65, %3
  br i1 %66, label %67, label %79

67:                                               ; preds = %87, %63
  %68 = phi i8* [ %41, %63 ], [ %90, %87 ]
  %69 = phi i32 [ %3, %63 ], [ %85, %87 ]
  %70 = phi i16* [ %40, %63 ], [ %89, %87 ]
  %71 = phi i16 [ %64, %63 ], [ %91, %87 ]
  %72 = load i8, i8* %68, align 1
  %73 = sext i32 %69 to i64
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  store i8 %72, i8* %74, align 1
  %75 = trunc i32 %69 to i16
  store i16 %75, i16* %70, align 2
  %76 = sub i16 %71, %75
  %77 = getelementptr inbounds i16, i16* %70, i64 %73
  store i16 %76, i16* %77, align 2
  br label %78

78:                                               ; preds = %79, %67
  br label %94

79:                                               ; preds = %63, %87
  %80 = phi i32 [ %92, %87 ], [ %65, %63 ]
  %81 = phi i16 [ %91, %87 ], [ %64, %63 ]
  %82 = phi i16* [ %89, %87 ], [ %40, %63 ]
  %83 = phi i32 [ %85, %87 ], [ %3, %63 ]
  %84 = phi i8* [ %90, %87 ], [ %41, %63 ]
  %85 = sub nsw i32 %83, %80
  %86 = icmp slt i32 %85, 1
  br i1 %86, label %78, label %87

87:                                               ; preds = %79
  %88 = sext i16 %81 to i64
  %89 = getelementptr inbounds i16, i16* %82, i64 %88
  %90 = getelementptr inbounds i8, i8* %84, i64 %88
  %91 = load i16, i16* %89, align 2
  %92 = sext i16 %91 to i32
  %93 = icmp slt i32 %85, %92
  br i1 %93, label %67, label %79

94:                                               ; preds = %78, %94
  %95 = phi i16* [ %102, %94 ], [ %40, %78 ]
  %96 = phi i8* [ %101, %94 ], [ %41, %78 ]
  %97 = phi i32 [ %103, %94 ], [ %3, %78 ]
  %98 = load i16, i16* %95, align 2
  %99 = sext i16 %98 to i32
  %100 = sext i16 %98 to i64
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = getelementptr inbounds i16, i16* %95, i64 %100
  %103 = sub nsw i32 %97, %99
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %94, label %105

105:                                              ; preds = %94
  %106 = bitcast i8** %32 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = ptrtoint i8* %101 to i64
  %109 = sub i64 %108, %107
  %110 = trunc i64 %109 to i32
  store i32 %110, i32* %15, align 8
  %111 = icmp sgt i32 %3, 0
  br i1 %111, label %112, label %146

112:                                              ; preds = %105
  %113 = inttoptr i64 %107 to i8*
  %114 = zext i8 %4 to i32
  %115 = sext i32 %14 to i64
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = add nuw nsw i32 %118, %114
  %120 = icmp ult i32 %119, 255
  %121 = select i1 %120, i32 %119, i32 255
  %122 = trunc i32 %121 to i8
  store i8 %122, i8* %116, align 1
  %123 = load i16*, i16** %28, align 8
  %124 = getelementptr inbounds i16, i16* %123, i64 %115
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = add nsw i32 %14, %126
  %128 = icmp slt i32 %127, %23
  br i1 %128, label %129, label %146

129:                                              ; preds = %112, %129
  %130 = phi i32 [ %144, %129 ], [ %127, %112 ]
  %131 = load i8*, i8** %32, align 8
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = add nuw nsw i32 %135, %114
  %137 = icmp ult i32 %136, 255
  %138 = select i1 %137, i32 %136, i32 255
  %139 = trunc i32 %138 to i8
  store i8 %139, i8* %133, align 1
  %140 = load i16*, i16** %28, align 8
  %141 = getelementptr inbounds i16, i16* %140, i64 %132
  %142 = load i16, i16* %141, align 2
  %143 = sext i16 %142 to i32
  %144 = add nsw i32 %130, %143
  %145 = icmp slt i32 %144, %23
  br i1 %145, label %129, label %146

146:                                              ; preds = %129, %112, %37, %105, %22, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan11AAAFillPathERK6SkPathP9SkBlitterRK7SkIRectS7_b(%class.SkPath* dereferenceable(16), %class.SkBlitter*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.anon, align 1
  %7 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %8 = alloca %struct.SkAnalyticEdge, align 8
  %9 = alloca %struct.SkAnalyticEdge, align 8
  %10 = alloca %class.anon, align 1
  %11 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %12 = alloca %struct.SkAnalyticEdge, align 8
  %13 = alloca %struct.SkAnalyticEdge, align 8
  %14 = alloca %struct.SkRect, align 4
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = alloca %class.anon, align 1
  %17 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %18 = alloca %struct.SkAnalyticEdge, align 8
  %19 = alloca %struct.SkAnalyticEdge, align 8
  %20 = alloca %class.MaskAdditiveBlitter, align 8
  %21 = alloca %class.RunBasedAdditiveBlitter, align 8
  %22 = alloca %class.SafeRLEAdditiveBlitter, align 8
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = sub nsw i64 %25, %28
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 %32, %35
  %37 = icmp slt i64 %29, 1
  %38 = icmp slt i64 %36, 1
  %39 = or i1 %37, %38
  br i1 %39, label %75, label %40

40:                                               ; preds = %5
  %41 = or i64 %36, %29
  %42 = add nsw i64 %41, 2147483648
  %43 = icmp ugt i64 %42, 4294967295
  br i1 %43, label %75, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = sub nsw i64 %47, %50
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = sub nsw i64 %54, %57
  %59 = icmp slt i64 %51, 1
  %60 = icmp slt i64 %58, 1
  %61 = or i1 %59, %60
  br i1 %61, label %75, label %62

62:                                               ; preds = %44
  %63 = or i64 %58, %51
  %64 = add nsw i64 %63, 2147483648
  %65 = icmp ugt i64 %64, 4294967295
  %66 = icmp sgt i32 %49, %27
  %67 = or i1 %66, %65
  %68 = icmp sgt i32 %56, %34
  %69 = or i1 %68, %67
  %70 = icmp slt i32 %46, %24
  %71 = or i1 %70, %69
  %72 = icmp sge i32 %53, %31
  %73 = xor i1 %71, true
  %74 = and i1 %72, %73
  br label %75

75:                                               ; preds = %5, %40, %44, %62
  %76 = phi i1 [ %74, %62 ], [ false, %44 ], [ false, %40 ], [ false, %5 ]
  %77 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %78 = load i8, i8* %77, align 2
  %79 = and i8 %78, 2
  %80 = icmp ne i8 %79, 0
  %81 = sub i32 %24, %27
  %82 = icmp sgt i32 %81, 32
  br i1 %82, label %2911, label %83

83:                                               ; preds = %75
  %84 = add nsw i32 %81, 3
  %85 = and i32 %84, -4
  %86 = sext i32 %85 to i64
  %87 = sub i32 %31, %34
  %88 = sext i32 %87 to i64
  %89 = mul nsw i64 %88, %86
  %90 = icmp sgt i64 %89, 1024
  %91 = or i1 %90, %80
  %92 = or i1 %91, %4
  br i1 %92, label %2911, label %93

93:                                               ; preds = %83
  %94 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #13
  %95 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 0
  %96 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 -1, i64 16, i1 false) #13
  %97 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %0, %struct.SkRect* nonnull %14, i8* null, i32* null) #13
  br i1 %97, label %98, label %139

98:                                               ; preds = %93
  %99 = bitcast { <2 x float>, <2 x float> }* %15 to %struct.SkRect*
  %100 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #13
  %101 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = sitofp i32 %102 to float
  %104 = insertelement <2 x float> undef, float %103, i32 0
  %105 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sitofp i32 %106 to float
  %108 = insertelement <2 x float> %104, float %107, i32 1
  %109 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = sitofp i32 %110 to float
  %112 = insertelement <2 x float> undef, float %111, i32 0
  %113 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = sitofp i32 %114 to float
  %116 = insertelement <2 x float> %112, float %115, i32 1
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  store <2 x float> %108, <2 x float>* %117, align 8
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  store <2 x float> %116, <2 x float>* %118, align 8
  %119 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %14, %struct.SkRect* nonnull dereferenceable(16) %99) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #13
  br i1 %119, label %120, label %138

120:                                              ; preds = %98
  %121 = load float, float* %95, align 4
  %122 = call float @llvm.floor.f32(float %121) #13
  %123 = fcmp olt float %122, 0x41DFFFFFE0000000
  %124 = select i1 %123, float %122, float 0x41DFFFFFE0000000
  %125 = fcmp ogt float %124, 0xC1DFFFFFE0000000
  %126 = select i1 %125, float %124, float 0xC1DFFFFFE0000000
  %127 = fptosi float %126 to i32
  %128 = load float, float* %96, align 4
  %129 = call float @llvm.ceil.f32(float %128) #13
  %130 = fcmp olt float %129, 0x41DFFFFFE0000000
  %131 = select i1 %130, float %129, float 0x41DFFFFFE0000000
  %132 = fcmp ogt float %131, 0xC1DFFFFFE0000000
  %133 = select i1 %132, float %131, float 0xC1DFFFFFE0000000
  %134 = fptosi float %133 to i32
  %135 = sub i32 %134, %127
  %136 = icmp slt i32 %135, 3
  br i1 %136, label %139, label %137

137:                                              ; preds = %120
  call void @_ZN9SkBlitter15blitFatAntiRectERK6SkRect(%class.SkBlitter* %1, %struct.SkRect* nonnull dereferenceable(16) %14) #13
  br label %138

138:                                              ; preds = %98, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #13
  br label %7516

139:                                              ; preds = %120, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #13
  %140 = bitcast %class.MaskAdditiveBlitter* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1128, i8* nonnull %140) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 1128, i1 false)
  %141 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 0, i32 0, i32 1
  %142 = bitcast %class.SkAutoMalloc* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 16, i1 false) #13
  %143 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %144 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 0
  %145 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %145, align 8
  %146 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 4, i64 0
  %147 = bitcast i32* %146 to i8*
  %148 = getelementptr inbounds i8, i8* %147, i64 1
  store i8* %148, i8** %144, align 8
  %149 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 1
  %150 = bitcast %struct.SkIRect* %149 to i8*
  %151 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 4 %151, i64 16, i1 false) #13
  %152 = load i32, i32* %23, align 4
  %153 = load i32, i32* %26, align 4
  %154 = sub i32 %152, %153
  %155 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 2
  store i32 %154, i32* %155, align 8
  %156 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 3
  store i8 1, i8* %156, align 4
  %157 = load i32, i32* %33, align 4
  %158 = add nsw i32 %157, -1
  %159 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 6
  store i32 %158, i32* %159, align 8
  %160 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 5
  store i8* null, i8** %160, align 8
  %161 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 3
  %162 = bitcast %struct.SkIRect* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 4 %151, i64 16, i1 false) #13
  %163 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %161, %struct.SkIRect* dereferenceable(16) %161, %struct.SkIRect* dereferenceable(16) %3) #13
  br i1 %163, label %165, label %164

164:                                              ; preds = %139
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 16, i1 false) #13
  br label %165

165:                                              ; preds = %139, %164
  %166 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 1, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2, i32 1, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 %167, %169
  %171 = load i32, i32* %155, align 8
  %172 = mul i32 %170, %171
  %173 = add i32 %172, 2
  %174 = zext i32 %173 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 %174, i1 false) #13
  %175 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 0
  %176 = load i32, i32* %33, align 4
  %177 = load i32, i32* %30, align 4
  %178 = bitcast %class.SkAnalyticEdgeBuilder* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %178) #13
  %179 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0, i32 3, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -86, i64 544, i1 false) #13
  %180 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %181 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0, i32 1
  %182 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %183 = bitcast i8* %182 to %class.SkArenaAlloc*
  %184 = bitcast i8*** %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #13
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %183, i8* %179, i64 512, i64 512) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %185 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0
  %186 = select i1 %76, %struct.SkIRect* null, %struct.SkIRect* %3
  %187 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %185, %class.SkPath* dereferenceable(16) %0, %struct.SkIRect* %186) #13
  %188 = bitcast i8*** %181 to %struct.SkAnalyticEdge***
  %189 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %188, align 8
  %190 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %187, 0
  br i1 %198, label %199, label %233

199:                                              ; preds = %165
  %200 = load i8, i8* %77, align 2
  %201 = and i8 %200, 2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %2900, label %203

203:                                              ; preds = %199
  %204 = icmp slt i32 %193, %176
  %205 = select i1 %204, i32 %176, i32 %193
  %206 = icmp sgt i32 %197, %177
  %207 = select i1 %206, i32 %177, i32 %197
  %208 = sext i32 %195 to i64
  %209 = sext i32 %191 to i64
  %210 = sub nsw i64 %208, %209
  %211 = sext i32 %207 to i64
  %212 = sext i32 %205 to i64
  %213 = sub nsw i64 %211, %212
  %214 = icmp slt i64 %210, 1
  %215 = icmp slt i64 %213, 1
  %216 = or i1 %214, %215
  br i1 %216, label %2900, label %217

217:                                              ; preds = %203
  %218 = or i64 %213, %210
  %219 = add nsw i64 %218, 2147483648
  %220 = icmp ugt i64 %219, 4294967295
  br i1 %220, label %2900, label %221

221:                                              ; preds = %217
  %222 = bitcast %class.MaskAdditiveBlitter* %20 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %223 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %222, align 8
  %224 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %223, i64 14
  %225 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %224, align 8
  %226 = call %class.SkBlitter* %225(%class.AdditiveBlitter* nonnull %175, i1 zeroext false) #13
  %227 = sub i32 %195, %191
  %228 = sub i32 %207, %205
  %229 = bitcast %class.SkBlitter* %226 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %230 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %229, align 8
  %231 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %230, i64 5
  %232 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %231, align 8
  call void %232(%class.SkBlitter* %226, i32 %191, i32 %205, i32 %227, i32 %228) #13
  br label %2900

233:                                              ; preds = %165
  %234 = bitcast %struct.SkAnalyticEdge* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %234) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 72, i1 false) #13
  %235 = bitcast %struct.SkAnalyticEdge* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %235) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 -86, i64 72, i1 false) #13
  %236 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %236) #13
  %237 = icmp slt i32 %187, 2
  br i1 %237, label %238, label %239

238:                                              ; preds = %233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %236) #13
  br label %296

239:                                              ; preds = %233
  %240 = add nsw i32 %187, -2
  %241 = call i32 @llvm.ctlz.i32(i32 %240, i1 false) #13, !range !9
  %242 = shl nuw nsw i32 %241, 1
  %243 = sub nsw i32 64, %242
  call void @_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %243, %struct.SkAnalyticEdge** %189, i32 %187, %class.anon* nonnull dereferenceable(1) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %236) #13
  %244 = zext i32 %187 to i64
  %245 = add nsw i64 %244, -1
  %246 = and i64 %245, 1
  %247 = icmp eq i32 %187, 2
  br i1 %247, label %280, label %248

248:                                              ; preds = %239
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 1, %248 ], [ %277, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %278, %250 ]
  %253 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %251
  %254 = bitcast %struct.SkAnalyticEdge** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = add nsw i64 %251, -1
  %257 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %256
  %258 = bitcast %struct.SkAnalyticEdge** %257 to i64**
  %259 = load i64*, i64** %258, align 8
  store i64 %255, i64* %259, align 8
  %260 = bitcast %struct.SkAnalyticEdge** %257 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %253, align 8
  %263 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %262, i64 0, i32 1
  %264 = bitcast %struct.SkAnalyticEdge** %263 to i64*
  store i64 %261, i64* %264, align 8
  %265 = add nuw nsw i64 %251, 1
  %266 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %265
  %267 = bitcast %struct.SkAnalyticEdge** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %251
  %270 = bitcast %struct.SkAnalyticEdge** %269 to i64**
  %271 = load i64*, i64** %270, align 8
  store i64 %268, i64* %271, align 8
  %272 = bitcast %struct.SkAnalyticEdge** %269 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %266, align 8
  %275 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %274, i64 0, i32 1
  %276 = bitcast %struct.SkAnalyticEdge** %275 to i64*
  store i64 %273, i64* %276, align 8
  %277 = add nuw nsw i64 %251, 2
  %278 = add i64 %252, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %250

280:                                              ; preds = %250, %239
  %281 = phi i64 [ 1, %239 ], [ %277, %250 ]
  %282 = icmp eq i64 %246, 0
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %281
  %285 = bitcast %struct.SkAnalyticEdge** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = add nsw i64 %281, -1
  %288 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %287
  %289 = bitcast %struct.SkAnalyticEdge** %288 to i64**
  %290 = load i64*, i64** %289, align 8
  store i64 %286, i64* %290, align 8
  %291 = bitcast %struct.SkAnalyticEdge** %288 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %284, align 8
  %294 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %293, i64 0, i32 1
  %295 = bitcast %struct.SkAnalyticEdge** %294 to i64*
  store i64 %292, i64* %295, align 8
  br label %296

296:                                              ; preds = %283, %280, %238
  %297 = add nsw i32 %187, -1
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, i64 %298
  %300 = bitcast %struct.SkAnalyticEdge** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %189, align 8
  %303 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 1
  %304 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 0
  %305 = bitcast %struct.SkAnalyticEdge** %303 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 16, i1 false) #13
  store %struct.SkAnalyticEdge* %302, %struct.SkAnalyticEdge** %304, align 8
  %306 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 8
  store i32 -2147483647, i32* %306, align 4
  %307 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 7
  store i32 -2147483647, i32* %307, align 8
  %308 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 3
  store i32 -2147483647, i32* %308, align 8
  %309 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 4
  store i32 0, i32* %309, align 4
  %310 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 9
  store i32 2147483647, i32* %310, align 8
  %311 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 5
  store i32 -2147483647, i32* %311, align 8
  %312 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %302, i64 0, i32 1
  store %struct.SkAnalyticEdge* %12, %struct.SkAnalyticEdge** %312, align 8
  %313 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %313, align 8
  %314 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 1
  %315 = bitcast %struct.SkAnalyticEdge** %314 to i64*
  store i64 %301, i64* %315, align 8
  %316 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %316, align 8
  %317 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 8
  store i32 2147483647, i32* %317, align 4
  %318 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 7
  store i32 2147483647, i32* %318, align 8
  %319 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 3
  store i32 2147483647, i32* %319, align 8
  %320 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 4
  store i32 0, i32* %320, align 4
  %321 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 9
  store i32 2147483647, i32* %321, align 8
  %322 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 5
  store i32 2147483647, i32* %322, align 8
  %323 = inttoptr i64 %301 to %struct.SkAnalyticEdge*
  %324 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %323, i64 0, i32 0
  store %struct.SkAnalyticEdge* %13, %struct.SkAnalyticEdge** %324, align 8
  br i1 %76, label %332, label %325

325:                                              ; preds = %296
  %326 = load i32, i32* %192, align 4
  %327 = icmp sgt i32 %326, %176
  %328 = select i1 %327, i32 %326, i32 %176
  %329 = load i32, i32* %196, align 4
  %330 = icmp slt i32 %329, %177
  %331 = select i1 %330, i32 %329, i32 %177
  br label %332

332:                                              ; preds = %325, %296
  %333 = phi i32 [ %328, %325 ], [ %176, %296 ]
  %334 = phi i32 [ %331, %325 ], [ %177, %296 ]
  %335 = shl i32 %191, 16
  %336 = shl i32 %195, 16
  %337 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %338 = load %class.SkPathRef*, %class.SkPathRef** %337, align 8
  %339 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 9
  %340 = load i8, i8* %339, align 8
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %351, label %342

342:                                              ; preds = %332
  %343 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 1
  %344 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 3, i32 0
  %345 = load %struct.SkPoint*, %struct.SkPoint** %344, align 8
  %346 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 3, i32 2
  %347 = load i32, i32* %346, align 4
  %348 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %343, %struct.SkPoint* %345, i32 %347) #13
  %349 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 10
  %350 = zext i1 %348 to i8
  store i8 %350, i8* %349, align 1
  store i8 0, i8* %339, align 8
  br label %351

351:                                              ; preds = %342, %332
  %352 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 1, i32 0
  %353 = load float, float* %352, align 4
  %354 = call float @llvm.floor.f32(float %353) #13
  %355 = fcmp olt float %354, 0x41DFFFFFE0000000
  %356 = select i1 %355, float %354, float 0x41DFFFFFE0000000
  %357 = fcmp ogt float %356, 0xC1DFFFFFE0000000
  %358 = select i1 %357, float %356, float 0xC1DFFFFFE0000000
  %359 = fptosi float %358 to i32
  %360 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %338, i64 0, i32 1, i32 2
  %361 = load float, float* %360, align 4
  %362 = call float @llvm.ceil.f32(float %361) #13
  %363 = fcmp olt float %362, 0x41DFFFFFE0000000
  %364 = select i1 %363, float %362, float 0x41DFFFFFE0000000
  %365 = fcmp ogt float %364, 0xC1DFFFFFE0000000
  %366 = select i1 %365, float %364, float 0xC1DFFFFFE0000000
  %367 = fptosi float %366 to i32
  %368 = shl i32 %359, 16
  %369 = icmp slt i32 %335, %368
  %370 = select i1 %369, i32 %368, i32 %335
  %371 = shl i32 %367, 16
  %372 = icmp slt i32 %371, %336
  %373 = select i1 %372, i32 %371, i32 %336
  %374 = load i8, i8* %77, align 2
  %375 = and i8 %374, 2
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %1678

377:                                              ; preds = %351
  %378 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #13
  %379 = icmp eq i32 %378, 0
  %380 = icmp sgt i32 %187, 1
  %381 = and i1 %380, %379
  br i1 %381, label %382, label %1678

382:                                              ; preds = %377
  %383 = bitcast %struct.SkAnalyticEdge* %12 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = inttoptr i64 %384 to %struct.SkAnalyticEdge*
  %386 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %385, i64 0, i32 0
  %387 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %386, align 8
  %388 = ptrtoint %struct.SkAnalyticEdge* %387 to i64
  %389 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %387, i64 0, i32 0
  %390 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %389, align 8
  %391 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %385, i64 0, i32 7
  %392 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %387, i64 0, i32 7
  %393 = load i32, i32* %391, align 4
  %394 = load i32, i32* %392, align 4
  %395 = icmp slt i32 %393, %394
  %396 = select i1 %395, i32 %394, i32 %393
  %397 = shl i32 %334, 16
  %398 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 1
  %399 = bitcast i64* %398 to i32*
  %400 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %401 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 2, i32 0, i32 1
  %402 = bitcast %class.SkAutoMalloc* %401 to i32*
  %403 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 1
  %404 = bitcast i64* %403 to i32*
  %405 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %406 = bitcast %class.MaskAdditiveBlitter* %20 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %407 = bitcast %class.MaskAdditiveBlitter* %20 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %408 = bitcast %class.MaskAdditiveBlitter* %20 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %409 = bitcast %class.MaskAdditiveBlitter* %20 to void (%class.AdditiveBlitter*, i32, i32)***
  %410 = or i32 %370, 2048
  %411 = or i32 %373, 2048
  br label %412

412:                                              ; preds = %1673, %382
  %413 = phi i64 [ %388, %382 ], [ %556, %1673 ]
  %414 = phi i64 [ %384, %382 ], [ %557, %1673 ]
  %415 = phi i32 [ %396, %382 ], [ %606, %1673 ]
  %416 = phi %struct.SkAnalyticEdge* [ %390, %382 ], [ %477, %1673 ]
  %417 = inttoptr i64 %414 to %struct.SkAnalyticEdge*
  %418 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %417, i64 0, i32 8
  %419 = load i32, i32* %418, align 4
  %420 = icmp sgt i32 %419, %415
  br i1 %420, label %423, label %431

421:                                              ; preds = %445
  %422 = inttoptr i64 %446 to %struct.SkAnalyticEdge*
  br label %423

423:                                              ; preds = %421, %412
  %424 = phi i64 [ %414, %412 ], [ %446, %421 ]
  %425 = phi %struct.SkAnalyticEdge* [ %416, %412 ], [ %447, %421 ]
  %426 = phi %struct.SkAnalyticEdge* [ %417, %412 ], [ %422, %421 ]
  %427 = inttoptr i64 %413 to %struct.SkAnalyticEdge*
  %428 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %427, i64 0, i32 8
  %429 = load i32, i32* %428, align 4
  %430 = icmp sgt i32 %429, %415
  br i1 %430, label %475, label %452

431:                                              ; preds = %412, %445
  %432 = phi %struct.SkAnalyticEdge* [ %448, %445 ], [ %417, %412 ]
  %433 = phi %struct.SkAnalyticEdge* [ %447, %445 ], [ %416, %412 ]
  %434 = phi i64 [ %446, %445 ], [ %414, %412 ]
  %435 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %432, i32 %415, i1 zeroext true) #13
  br i1 %435, label %445, label %436

436:                                              ; preds = %431
  %437 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %433, i64 0, i32 7
  %438 = load i32, i32* %437, align 8
  %439 = ashr i32 %438, 16
  %440 = icmp slt i32 %439, %334
  br i1 %440, label %441, label %2899

441:                                              ; preds = %436
  %442 = ptrtoint %struct.SkAnalyticEdge* %433 to i64
  %443 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %433, i64 0, i32 0
  %444 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %443, align 8
  br label %445

445:                                              ; preds = %441, %431
  %446 = phi i64 [ %434, %431 ], [ %442, %441 ]
  %447 = phi %struct.SkAnalyticEdge* [ %433, %431 ], [ %444, %441 ]
  %448 = inttoptr i64 %446 to %struct.SkAnalyticEdge*
  %449 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %448, i64 0, i32 8
  %450 = load i32, i32* %449, align 4
  %451 = icmp sgt i32 %450, %415
  br i1 %451, label %421, label %431

452:                                              ; preds = %423, %466
  %453 = phi %struct.SkAnalyticEdge* [ %469, %466 ], [ %427, %423 ]
  %454 = phi %struct.SkAnalyticEdge* [ %468, %466 ], [ %425, %423 ]
  %455 = phi i64 [ %467, %466 ], [ %413, %423 ]
  %456 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %453, i32 %415, i1 zeroext true) #13
  br i1 %456, label %466, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %454, i64 0, i32 7
  %459 = load i32, i32* %458, align 8
  %460 = ashr i32 %459, 16
  %461 = icmp slt i32 %460, %334
  br i1 %461, label %462, label %2899

462:                                              ; preds = %457
  %463 = ptrtoint %struct.SkAnalyticEdge* %454 to i64
  %464 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %454, i64 0, i32 0
  %465 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %464, align 8
  br label %466

466:                                              ; preds = %462, %452
  %467 = phi i64 [ %455, %452 ], [ %463, %462 ]
  %468 = phi %struct.SkAnalyticEdge* [ %454, %452 ], [ %465, %462 ]
  %469 = inttoptr i64 %467 to %struct.SkAnalyticEdge*
  %470 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %469, i64 0, i32 8
  %471 = load i32, i32* %470, align 4
  %472 = icmp sgt i32 %471, %415
  br i1 %472, label %473, label %452

473:                                              ; preds = %466
  %474 = inttoptr i64 %467 to %struct.SkAnalyticEdge*
  br label %475

475:                                              ; preds = %473, %423
  %476 = phi i64 [ %413, %423 ], [ %467, %473 ]
  %477 = phi %struct.SkAnalyticEdge* [ %425, %423 ], [ %468, %473 ]
  %478 = phi %struct.SkAnalyticEdge* [ %427, %423 ], [ %474, %473 ]
  %479 = ashr i32 %415, 16
  %480 = icmp slt i32 %479, %334
  br i1 %480, label %481, label %2899

481:                                              ; preds = %475
  %482 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 6
  %483 = load i32, i32* %482, align 4
  %484 = add nsw i32 %483, 65536
  %485 = icmp eq i32 %484, %415
  br i1 %485, label %486, label %492

486:                                              ; preds = %481
  %487 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 3
  %488 = load i32, i32* %487, align 8
  %489 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 4
  %490 = load i32, i32* %489, align 4
  %491 = add nsw i32 %490, %488
  store i32 %491, i32* %487, align 8
  br label %509

492:                                              ; preds = %481
  %493 = icmp eq i32 %483, %415
  br i1 %493, label %510, label %494

494:                                              ; preds = %492
  %495 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 5
  %496 = load i32, i32* %495, align 8
  %497 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 4
  %498 = load i32, i32* %497, align 4
  %499 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 7
  %500 = load i32, i32* %499, align 8
  %501 = sub nsw i32 %415, %500
  %502 = sext i32 %498 to i64
  %503 = sext i32 %501 to i64
  %504 = mul nsw i64 %503, %502
  %505 = lshr i64 %504, 16
  %506 = trunc i64 %505 to i32
  %507 = add nsw i32 %496, %506
  %508 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 3
  store i32 %507, i32* %508, align 8
  br label %509

509:                                              ; preds = %486, %494
  store i32 %415, i32* %482, align 4
  br label %510

510:                                              ; preds = %509, %492
  %511 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 6
  %512 = load i32, i32* %511, align 4
  %513 = add nsw i32 %512, 65536
  %514 = icmp eq i32 %513, %415
  br i1 %514, label %515, label %521

515:                                              ; preds = %510
  %516 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 3
  %517 = load i32, i32* %516, align 8
  %518 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 4
  %519 = load i32, i32* %518, align 4
  %520 = add nsw i32 %519, %517
  store i32 %520, i32* %516, align 8
  store i32 %415, i32* %511, align 4
  br label %541

521:                                              ; preds = %510
  %522 = icmp eq i32 %512, %415
  br i1 %522, label %523, label %526

523:                                              ; preds = %521
  %524 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 3
  %525 = load i32, i32* %524, align 8
  br label %541

526:                                              ; preds = %521
  %527 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 5
  %528 = load i32, i32* %527, align 8
  %529 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 4
  %530 = load i32, i32* %529, align 4
  %531 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 7
  %532 = load i32, i32* %531, align 8
  %533 = sub nsw i32 %415, %532
  %534 = sext i32 %530 to i64
  %535 = sext i32 %533 to i64
  %536 = mul nsw i64 %535, %534
  %537 = lshr i64 %536, 16
  %538 = trunc i64 %537 to i32
  %539 = add nsw i32 %528, %538
  %540 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 3
  store i32 %539, i32* %540, align 8
  store i32 %415, i32* %511, align 4
  br label %541

541:                                              ; preds = %526, %523, %515
  %542 = phi i32 [ %525, %523 ], [ %520, %515 ], [ %539, %526 ]
  %543 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 3
  %544 = load i32, i32* %543, align 8
  %545 = icmp sgt i32 %544, %542
  br i1 %545, label %554, label %546

546:                                              ; preds = %541
  %547 = icmp eq i32 %544, %542
  br i1 %547, label %548, label %555

548:                                              ; preds = %546
  %549 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %426, i64 0, i32 4
  %550 = load i32, i32* %549, align 4
  %551 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %478, i64 0, i32 4
  %552 = load i32, i32* %551, align 4
  %553 = icmp sgt i32 %550, %552
  br i1 %553, label %554, label %555

554:                                              ; preds = %548, %541
  br label %555

555:                                              ; preds = %554, %548, %546
  %556 = phi i64 [ %424, %554 ], [ %476, %548 ], [ %476, %546 ]
  %557 = phi i64 [ %476, %554 ], [ %424, %548 ], [ %424, %546 ]
  %558 = inttoptr i64 %557 to %struct.SkAnalyticEdge*
  %559 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 8
  %560 = inttoptr i64 %556 to %struct.SkAnalyticEdge*
  %561 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 8
  %562 = load i32, i32* %561, align 4
  %563 = load i32, i32* %559, align 4
  %564 = icmp slt i32 %562, %563
  %565 = select i1 %564, i32 %562, i32 %563
  %566 = ptrtoint %struct.SkAnalyticEdge* %477 to i64
  %567 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %477, i64 0, i32 7
  %568 = load i32, i32* %567, align 8
  %569 = icmp slt i32 %568, %397
  br i1 %569, label %570, label %603

570:                                              ; preds = %555
  %571 = add nsw i32 %563, 65536
  %572 = icmp slt i32 %571, %562
  br i1 %572, label %573, label %575

573:                                              ; preds = %570
  %574 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %558, %struct.SkAnalyticEdge* %477) #13
  br i1 %574, label %600, label %603

575:                                              ; preds = %570
  %576 = add nsw i32 %562, 65536
  %577 = icmp sgt i32 %563, %576
  br i1 %577, label %578, label %580

578:                                              ; preds = %575
  %579 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %560, %struct.SkAnalyticEdge* %477) #13
  br i1 %579, label %600, label %603

580:                                              ; preds = %575
  %581 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %477, i64 0, i32 0
  %582 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %581, align 8
  %583 = ptrtoint %struct.SkAnalyticEdge* %582 to i64
  %584 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %582, i64 0, i32 7
  %585 = load i32, i32* %584, align 8
  %586 = icmp slt i32 %585, %397
  br i1 %586, label %587, label %603

587:                                              ; preds = %580
  %588 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %582, i64 0, i32 5
  %589 = load i32, i32* %588, align 8
  %590 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %477, i64 0, i32 5
  %591 = load i32, i32* %590, align 8
  %592 = icmp slt i32 %589, %591
  %593 = select i1 %592, i64 %583, i64 %566
  %594 = inttoptr i64 %593 to %struct.SkAnalyticEdge*
  %595 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %558, %struct.SkAnalyticEdge* %594) #13
  br i1 %595, label %596, label %603

596:                                              ; preds = %587
  %597 = select i1 %592, i64 %566, i64 %583
  %598 = inttoptr i64 %597 to %struct.SkAnalyticEdge*
  %599 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %560, %struct.SkAnalyticEdge* %598) #13
  br i1 %599, label %600, label %603

600:                                              ; preds = %596, %578, %573
  %601 = add nsw i32 %565, 65535
  %602 = and i32 %601, -65536
  br label %603

603:                                              ; preds = %600, %596, %587, %580, %578, %573, %555
  %604 = phi i32 [ %602, %600 ], [ %565, %596 ], [ %565, %573 ], [ %565, %578 ], [ %565, %555 ], [ %565, %580 ], [ %565, %587 ]
  %605 = icmp slt i32 %397, %604
  %606 = select i1 %605, i32 %397, i32 %604
  %607 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 3
  %608 = load i32, i32* %607, align 4
  %609 = icmp sgt i32 %608, %370
  %610 = select i1 %609, i32 %608, i32 %370
  %611 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 4
  %612 = load i32, i32* %611, align 4
  %613 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 3
  %614 = load i32, i32* %613, align 4
  %615 = icmp slt i32 %614, %373
  %616 = select i1 %615, i32 %614, i32 %373
  %617 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 4
  %618 = load i32, i32* %617, align 4
  %619 = or i32 %618, %612
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %812

621:                                              ; preds = %603
  %622 = add nsw i32 %610, 65535
  %623 = ashr i32 %622, 16
  %624 = ashr i32 %616, 16
  %625 = and i32 %622, -65536
  %626 = sub nsw i32 %625, %610
  %627 = and i32 %616, 65535
  %628 = add nsw i32 %415, 65535
  %629 = ashr i32 %628, 16
  %630 = ashr i32 %606, 16
  %631 = and i32 %628, -65536
  %632 = sub nsw i32 %631, %415
  %633 = and i32 %606, 65535
  %634 = icmp slt i32 %630, %629
  %635 = or i32 %606, -65536
  %636 = select i1 %634, i32 0, i32 %633
  %637 = select i1 %634, i32 %635, i32 0
  %638 = add i32 %637, %632
  %639 = icmp slt i32 %624, %623
  %640 = icmp sgt i32 %638, 0
  br i1 %639, label %756, label %641

641:                                              ; preds = %621
  br i1 %640, label %642, label %690

642:                                              ; preds = %641
  %643 = icmp sgt i32 %626, 0
  br i1 %643, label %646, label %644

644:                                              ; preds = %642
  %645 = add nsw i32 %629, -1
  br label %661

646:                                              ; preds = %642
  %647 = add nsw i32 %623, -1
  %648 = add nsw i32 %629, -1
  %649 = sext i32 %638 to i64
  %650 = sext i32 %626 to i64
  %651 = mul nsw i64 %650, %649
  %652 = lshr i64 %651, 16
  %653 = trunc i64 %652 to i32
  %654 = mul nsw i32 %653, 255
  %655 = add nsw i32 %654, 32768
  %656 = lshr i32 %655, 16
  %657 = trunc i32 %656 to i8
  %658 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %406, align 8
  %659 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %658, i64 16
  %660 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %659, align 8
  call void %660(%class.AdditiveBlitter* nonnull %175, i32 %647, i32 %648, i8 zeroext %657) #13
  br label %661

661:                                              ; preds = %646, %644
  %662 = phi i32 [ %645, %644 ], [ %648, %646 ]
  %663 = sub nsw i32 %624, %623
  %664 = mul nsw i32 %638, 255
  %665 = add nsw i32 %664, 32768
  %666 = lshr i32 %665, 16
  %667 = trunc i32 %666 to i8
  %668 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %408, align 8
  %669 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %668, i64 17
  %670 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %669, align 8
  call void %670(%class.AdditiveBlitter* nonnull %175, i32 %623, i32 %662, i32 %663, i8 zeroext %667) #13
  %671 = icmp eq i32 %627, 0
  br i1 %671, label %685, label %672

672:                                              ; preds = %661
  %673 = sext i32 %638 to i64
  %674 = zext i32 %627 to i64
  %675 = mul nsw i64 %674, %673
  %676 = lshr i64 %675, 16
  %677 = trunc i64 %676 to i32
  %678 = mul nsw i32 %677, 255
  %679 = add nsw i32 %678, 32768
  %680 = lshr i32 %679, 16
  %681 = trunc i32 %680 to i8
  %682 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %406, align 8
  %683 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %682, i64 16
  %684 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %683, align 8
  call void %684(%class.AdditiveBlitter* nonnull %175, i32 %624, i32 %662, i8 zeroext %681) #13
  br label %685

685:                                              ; preds = %672, %661
  %686 = add i32 %637, %631
  %687 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %409, align 8
  %688 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %687, i64 19
  %689 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %688, align 8
  call void %689(%class.AdditiveBlitter* nonnull %175, i32 %415, i32 %686) #13
  br label %690

690:                                              ; preds = %685, %641
  %691 = icmp sgt i32 %630, %629
  br i1 %691, label %692, label %718

692:                                              ; preds = %690
  %693 = icmp sle i32 %624, %623
  %694 = mul nsw i32 %626, 255
  %695 = add nsw i32 %694, 32768
  %696 = lshr i32 %695, 16
  %697 = mul nuw nsw i32 %627, 255
  %698 = add nuw nsw i32 %697, 32768
  %699 = lshr i32 %698, 16
  %700 = or i32 %696, %699
  %701 = trunc i32 %700 to i8
  %702 = icmp eq i8 %701, 0
  %703 = and i1 %693, %702
  br i1 %703, label %718, label %704

704:                                              ; preds = %692
  %705 = trunc i32 %696 to i8
  %706 = trunc i32 %699 to i8
  %707 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %407, align 8
  %708 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %707, i64 14
  %709 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %708, align 8
  %710 = call %class.SkBlitter* %709(%class.AdditiveBlitter* nonnull %175, i1 zeroext false) #13
  %711 = add nsw i32 %623, -1
  %712 = sub nsw i32 %624, %623
  %713 = sub nsw i32 %630, %629
  %714 = bitcast %class.SkBlitter* %710 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %715 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %714, align 8
  %716 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %715, i64 6
  %717 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %716, align 8
  call void %717(%class.SkBlitter* %710, i32 %711, i32 %629, i32 %712, i32 %713, i8 zeroext %705, i8 zeroext %706) #13
  br label %718

718:                                              ; preds = %704, %692, %690
  %719 = icmp eq i32 %636, 0
  br i1 %719, label %1673, label %720

720:                                              ; preds = %718
  %721 = icmp sgt i32 %626, 0
  br i1 %721, label %722, label %736

722:                                              ; preds = %720
  %723 = add nsw i32 %623, -1
  %724 = zext i32 %636 to i64
  %725 = sext i32 %626 to i64
  %726 = mul nsw i64 %725, %724
  %727 = lshr i64 %726, 16
  %728 = trunc i64 %727 to i32
  %729 = mul nsw i32 %728, 255
  %730 = add nsw i32 %729, 32768
  %731 = lshr i32 %730, 16
  %732 = trunc i32 %731 to i8
  %733 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %406, align 8
  %734 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %733, i64 16
  %735 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %734, align 8
  call void %735(%class.AdditiveBlitter* nonnull %175, i32 %723, i32 %630, i8 zeroext %732) #13
  br label %736

736:                                              ; preds = %722, %720
  %737 = sub nsw i32 %624, %623
  %738 = mul nuw nsw i32 %636, 255
  %739 = add nuw nsw i32 %738, 32768
  %740 = lshr i32 %739, 16
  %741 = trunc i32 %740 to i8
  %742 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %408, align 8
  %743 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %742, i64 17
  %744 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %743, align 8
  call void %744(%class.AdditiveBlitter* nonnull %175, i32 %623, i32 %630, i32 %737, i8 zeroext %741) #13
  %745 = icmp eq i32 %627, 0
  br i1 %745, label %1673, label %746

746:                                              ; preds = %736
  %747 = mul nuw i32 %627, %636
  %748 = lshr i32 %747, 16
  %749 = mul nuw nsw i32 %748, 255
  %750 = add nuw nsw i32 %749, 32768
  %751 = lshr i32 %750, 16
  %752 = trunc i32 %751 to i8
  %753 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %406, align 8
  %754 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %753, i64 16
  %755 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %754, align 8
  call void %755(%class.AdditiveBlitter* nonnull %175, i32 %624, i32 %630, i8 zeroext %752) #13
  br label %1673

756:                                              ; preds = %621
  br i1 %640, label %757, label %777

757:                                              ; preds = %756
  %758 = add nsw i32 %623, -1
  %759 = add nsw i32 %629, -1
  %760 = sub nsw i32 %616, %610
  %761 = sext i32 %638 to i64
  %762 = sext i32 %760 to i64
  %763 = mul nsw i64 %762, %761
  %764 = lshr i64 %763, 16
  %765 = trunc i64 %764 to i32
  %766 = mul nsw i32 %765, 255
  %767 = add nsw i32 %766, 32768
  %768 = lshr i32 %767, 16
  %769 = trunc i32 %768 to i8
  %770 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %408, align 8
  %771 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %770, i64 17
  %772 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %771, align 8
  call void %772(%class.AdditiveBlitter* nonnull %175, i32 %758, i32 %759, i32 1, i8 zeroext %769) #13
  %773 = add i32 %637, %631
  %774 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %409, align 8
  %775 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %774, i64 19
  %776 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %775, align 8
  call void %776(%class.AdditiveBlitter* nonnull %175, i32 %415, i32 %773) #13
  br label %777

777:                                              ; preds = %757, %756
  %778 = icmp sgt i32 %630, %629
  br i1 %778, label %779, label %795

779:                                              ; preds = %777
  %780 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %407, align 8
  %781 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %780, i64 14
  %782 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %781, align 8
  %783 = call %class.SkBlitter* %782(%class.AdditiveBlitter* nonnull %175, i1 zeroext false) #13
  %784 = add nsw i32 %623, -1
  %785 = sub nsw i32 %630, %629
  %786 = sub nsw i32 %616, %610
  %787 = mul nsw i32 %786, 255
  %788 = add nsw i32 %787, 32768
  %789 = lshr i32 %788, 16
  %790 = trunc i32 %789 to i8
  %791 = bitcast %class.SkBlitter* %783 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %792 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %791, align 8
  %793 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %792, i64 4
  %794 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %793, align 8
  call void %794(%class.SkBlitter* %783, i32 %784, i32 %629, i32 %785, i8 zeroext %790) #13
  br label %795

795:                                              ; preds = %779, %777
  %796 = icmp eq i32 %636, 0
  br i1 %796, label %1673, label %797

797:                                              ; preds = %795
  %798 = add nsw i32 %623, -1
  %799 = sub nsw i32 %616, %610
  %800 = zext i32 %636 to i64
  %801 = sext i32 %799 to i64
  %802 = mul nsw i64 %801, %800
  %803 = lshr i64 %802, 16
  %804 = trunc i64 %803 to i32
  %805 = mul nsw i32 %804, 255
  %806 = add nsw i32 %805, 32768
  %807 = lshr i32 %806, 16
  %808 = trunc i32 %807 to i8
  %809 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %408, align 8
  %810 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %809, i64 17
  %811 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %810, align 8
  call void %811(%class.AdditiveBlitter* nonnull %175, i32 %798, i32 %630, i32 1, i8 zeroext %808) #13
  br label %1673

812:                                              ; preds = %603
  %813 = add nsw i32 %610, 2048
  %814 = add nsw i32 %616, 2048
  %815 = add nsw i32 %606, 65535
  %816 = ashr i32 %815, 16
  %817 = sub nsw i32 %816, %479
  %818 = load i32, i32* %399, align 8
  %819 = icmp eq i32 %818, %479
  br i1 %819, label %820, label %822

820:                                              ; preds = %812
  %821 = load i8*, i8** %405, align 8
  br label %834

822:                                              ; preds = %812
  store i32 %479, i32* %399, align 8
  %823 = load i8*, i8** %400, align 8
  %824 = load i32, i32* %168, align 4
  %825 = sub nsw i32 %479, %824
  %826 = load i32, i32* %402, align 8
  %827 = mul i32 %825, %826
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds i8, i8* %823, i64 %828
  %830 = load i32, i32* %404, align 8
  %831 = sext i32 %830 to i64
  %832 = sub nsw i64 0, %831
  %833 = getelementptr inbounds i8, i8* %829, i64 %832
  store i8* %833, i8** %405, align 8
  br label %834

834:                                              ; preds = %822, %820
  %835 = phi i8* [ %821, %820 ], [ %833, %822 ]
  %836 = icmp sgt i32 %817, 1
  br i1 %836, label %837, label %1374

837:                                              ; preds = %834
  %838 = and i32 %415, -65536
  %839 = icmp eq i32 %838, %415
  br i1 %839, label %1115, label %840

840:                                              ; preds = %837
  %841 = add nsw i32 %817, -1
  %842 = add nsw i32 %415, 65536
  %843 = and i32 %842, -65536
  %844 = sub nsw i32 %843, %415
  %845 = sext i32 %612 to i64
  %846 = sext i32 %844 to i64
  %847 = mul nsw i64 %845, %846
  %848 = lshr i64 %847, 16
  %849 = trunc i64 %848 to i32
  %850 = add nsw i32 %813, %849
  %851 = sext i32 %618 to i64
  %852 = mul nsw i64 %851, %846
  %853 = lshr i64 %852, 16
  %854 = trunc i64 %853 to i32
  %855 = add nsw i32 %814, %854
  %856 = and i32 %813, -4096
  %857 = and i32 %814, -4096
  %858 = and i32 %850, -4096
  %859 = and i32 %855, -4096
  %860 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 9
  %861 = load i32, i32* %860, align 8
  %862 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 9
  %863 = load i32, i32* %862, align 8
  %864 = mul nsw i32 %844, 255
  %865 = add nsw i32 %864, 32768
  %866 = lshr i32 %865, 16
  %867 = trunc i32 %866 to i8
  %868 = icmp sgt i32 %856, %857
  br i1 %868, label %1110, label %869

869:                                              ; preds = %840
  %870 = icmp sgt i32 %858, %859
  br i1 %870, label %871, label %884

871:                                              ; preds = %869
  %872 = icmp sgt i32 %856, %858
  %873 = select i1 %872, i32 %858, i32 %856
  %874 = select i1 %872, i32 %856, i32 %858
  %875 = icmp sgt i32 %857, %859
  %876 = select i1 %875, i32 %859, i32 %857
  %877 = select i1 %875, i32 %857, i32 %859
  %878 = icmp slt i32 %873, %876
  %879 = select i1 %878, i32 %876, i32 %873
  %880 = icmp slt i32 %877, %874
  %881 = select i1 %880, i32 %877, i32 %874
  %882 = add nsw i32 %879, %881
  %883 = sdiv i32 %882, 2
  br label %884

884:                                              ; preds = %871, %869
  %885 = phi i32 [ %883, %871 ], [ %858, %869 ]
  %886 = phi i32 [ %883, %871 ], [ %859, %869 ]
  %887 = icmp eq i32 %856, %857
  %888 = icmp eq i32 %885, %886
  %889 = and i1 %887, %888
  br i1 %889, label %1110, label %890

890:                                              ; preds = %884
  %891 = icmp slt i32 %885, %856
  %892 = select i1 %891, i32 %885, i32 %856
  %893 = select i1 %891, i32 %856, i32 %885
  %894 = icmp slt i32 %886, %857
  %895 = select i1 %894, i32 %886, i32 %857
  %896 = select i1 %894, i32 %857, i32 %886
  %897 = add nsw i32 %893, 65535
  %898 = and i32 %897, -65536
  %899 = and i32 %895, -65536
  %900 = icmp slt i32 %899, %898
  br i1 %900, label %1109, label %901

901:                                              ; preds = %890
  %902 = icmp sgt i32 %898, %892
  br i1 %902, label %903, label %965

903:                                              ; preds = %901
  %904 = sub nsw i32 %898, %892
  %905 = add nsw i32 %904, 65535
  %906 = ashr i32 %905, 16
  switch i32 %906, label %964 [
    i32 1, label %907
    i32 2, label %929
  ]

907:                                              ; preds = %903
  %908 = sub i32 %898, %893
  %909 = add nsw i32 %908, %904
  %910 = sdiv i32 %909, 2
  %911 = lshr i32 %910, 8
  %912 = ashr i32 %892, 16
  %913 = icmp eq i8 %867, -1
  %914 = sext i32 %912 to i64
  %915 = getelementptr inbounds i8, i8* %835, i64 %914
  br i1 %913, label %916, label %918

916:                                              ; preds = %907
  %917 = trunc i32 %911 to i8
  store i8 %917, i8* %915, align 1
  br label %965

918:                                              ; preds = %907
  %919 = and i32 %911, 255
  %920 = and i32 %866, 255
  %921 = mul nuw nsw i32 %919, %920
  %922 = lshr i32 %921, 8
  %923 = load i8, i8* %915, align 1
  %924 = zext i8 %923 to i32
  %925 = add nuw nsw i32 %922, %924
  %926 = lshr i32 %925, 8
  %927 = sub nsw i32 %925, %926
  %928 = trunc i32 %927 to i8
  store i8 %928, i8* %915, align 1
  br label %965

929:                                              ; preds = %903
  %930 = sub i32 -65536, %892
  %931 = add i32 %898, %930
  %932 = sub i32 %893, %892
  %933 = sub i32 %932, %931
  %934 = ashr i32 %931, 11
  %935 = ashr i32 %861, 11
  %936 = mul i32 %934, %935
  %937 = mul i32 %936, %934
  %938 = lshr i32 %937, 8
  %939 = ashr i32 %933, 11
  %940 = mul i32 %939, %935
  %941 = mul i32 %940, %939
  %942 = lshr i32 %941, 8
  %943 = sub nsw i32 %866, %942
  %944 = ashr i32 %892, 16
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds i8, i8* %835, i64 %945
  %947 = load i8, i8* %946, align 1
  %948 = zext i8 %947 to i32
  %949 = and i32 %938, 255
  %950 = add nuw nsw i32 %949, %948
  %951 = lshr i32 %950, 8
  %952 = sub nsw i32 %950, %951
  %953 = trunc i32 %952 to i8
  store i8 %953, i8* %946, align 1
  %954 = add nsw i32 %944, 1
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds i8, i8* %835, i64 %955
  %957 = load i8, i8* %956, align 1
  %958 = zext i8 %957 to i32
  %959 = and i32 %943, 255
  %960 = add nuw nsw i32 %959, %958
  %961 = lshr i32 %960, 8
  %962 = sub nsw i32 %960, %961
  %963 = trunc i32 %962 to i8
  store i8 %963, i8* %956, align 1
  br label %965

964:                                              ; preds = %903
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %479, i32 %892, i32 %898, i32 %893, i32 %898, i32 %861, i32 2147483647, i8 zeroext %867, i8* %835, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %965

965:                                              ; preds = %964, %929, %918, %916, %901
  %966 = icmp sgt i32 %899, %898
  br i1 %966, label %967, label %1045

967:                                              ; preds = %965
  %968 = sub nsw i32 %899, %898
  %969 = icmp sgt i32 %968, 0
  br i1 %969, label %970, label %1045

970:                                              ; preds = %967
  %971 = lshr exact i32 %968, 16
  %972 = ashr i32 %897, 16
  %973 = and i32 %866, 255
  %974 = sext i32 %972 to i64
  %975 = zext i32 %971 to i64
  %976 = icmp ult i32 %968, 1048576
  br i1 %976, label %1031, label %977

977:                                              ; preds = %970
  %978 = and i64 %975, 65520
  %979 = insertelement <16 x i32> undef, i32 %973, i32 0
  %980 = shufflevector <16 x i32> %979, <16 x i32> undef, <16 x i32> zeroinitializer
  %981 = add nsw i64 %978, -16
  %982 = lshr exact i64 %981, 4
  %983 = add nuw nsw i64 %982, 1
  %984 = and i64 %983, 1
  %985 = icmp eq i64 %981, 0
  br i1 %985, label %1015, label %986

986:                                              ; preds = %977
  %987 = sub nuw nsw i64 %983, %984
  br label %988

988:                                              ; preds = %988, %986
  %989 = phi i64 [ 0, %986 ], [ %1012, %988 ]
  %990 = phi i64 [ %987, %986 ], [ %1013, %988 ]
  %991 = add nsw i64 %989, %974
  %992 = getelementptr inbounds i8, i8* %835, i64 %991
  %993 = bitcast i8* %992 to <16 x i8>*
  %994 = load <16 x i8>, <16 x i8>* %993, align 1
  %995 = zext <16 x i8> %994 to <16 x i32>
  %996 = add nuw nsw <16 x i32> %980, %995
  %997 = lshr <16 x i32> %996, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %998 = sub nsw <16 x i32> %996, %997
  %999 = trunc <16 x i32> %998 to <16 x i8>
  %1000 = bitcast i8* %992 to <16 x i8>*
  store <16 x i8> %999, <16 x i8>* %1000, align 1
  %1001 = or i64 %989, 16
  %1002 = add nsw i64 %1001, %974
  %1003 = getelementptr inbounds i8, i8* %835, i64 %1002
  %1004 = bitcast i8* %1003 to <16 x i8>*
  %1005 = load <16 x i8>, <16 x i8>* %1004, align 1
  %1006 = zext <16 x i8> %1005 to <16 x i32>
  %1007 = add nuw nsw <16 x i32> %980, %1006
  %1008 = lshr <16 x i32> %1007, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1009 = sub nsw <16 x i32> %1007, %1008
  %1010 = trunc <16 x i32> %1009 to <16 x i8>
  %1011 = bitcast i8* %1003 to <16 x i8>*
  store <16 x i8> %1010, <16 x i8>* %1011, align 1
  %1012 = add i64 %989, 32
  %1013 = add i64 %990, -2
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1015, label %988, !llvm.loop !10

1015:                                             ; preds = %988, %977
  %1016 = phi i64 [ 0, %977 ], [ %1012, %988 ]
  %1017 = icmp eq i64 %984, 0
  br i1 %1017, label %1029, label %1018

1018:                                             ; preds = %1015
  %1019 = add nsw i64 %1016, %974
  %1020 = getelementptr inbounds i8, i8* %835, i64 %1019
  %1021 = bitcast i8* %1020 to <16 x i8>*
  %1022 = load <16 x i8>, <16 x i8>* %1021, align 1
  %1023 = zext <16 x i8> %1022 to <16 x i32>
  %1024 = add nuw nsw <16 x i32> %980, %1023
  %1025 = lshr <16 x i32> %1024, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1026 = sub nsw <16 x i32> %1024, %1025
  %1027 = trunc <16 x i32> %1026 to <16 x i8>
  %1028 = bitcast i8* %1020 to <16 x i8>*
  store <16 x i8> %1027, <16 x i8>* %1028, align 1
  br label %1029

1029:                                             ; preds = %1015, %1018
  %1030 = icmp eq i64 %978, %975
  br i1 %1030, label %1045, label %1031

1031:                                             ; preds = %1029, %970
  %1032 = phi i64 [ 0, %970 ], [ %978, %1029 ]
  br label %1033

1033:                                             ; preds = %1031, %1033
  %1034 = phi i64 [ %1043, %1033 ], [ %1032, %1031 ]
  %1035 = add nsw i64 %1034, %974
  %1036 = getelementptr inbounds i8, i8* %835, i64 %1035
  %1037 = load i8, i8* %1036, align 1
  %1038 = zext i8 %1037 to i32
  %1039 = add nuw nsw i32 %973, %1038
  %1040 = lshr i32 %1039, 8
  %1041 = sub nsw i32 %1039, %1040
  %1042 = trunc i32 %1041 to i8
  store i8 %1042, i8* %1036, align 1
  %1043 = add nuw nsw i64 %1034, 1
  %1044 = icmp eq i64 %1043, %975
  br i1 %1044, label %1045, label %1033, !llvm.loop !11

1045:                                             ; preds = %1033, %1029, %967, %965
  %1046 = icmp sgt i32 %896, %899
  br i1 %1046, label %1047, label %1110

1047:                                             ; preds = %1045
  %1048 = sub nsw i32 %896, %899
  %1049 = add nsw i32 %1048, 65535
  %1050 = ashr i32 %1049, 16
  switch i32 %1050, label %1108 [
    i32 1, label %1051
    i32 2, label %1073
  ]

1051:                                             ; preds = %1047
  %1052 = sub i32 %895, %899
  %1053 = add nsw i32 %1052, %1048
  %1054 = sdiv i32 %1053, 2
  %1055 = lshr i32 %1054, 8
  %1056 = ashr i32 %895, 16
  %1057 = icmp eq i8 %867, -1
  %1058 = sext i32 %1056 to i64
  %1059 = getelementptr inbounds i8, i8* %835, i64 %1058
  br i1 %1057, label %1060, label %1062

1060:                                             ; preds = %1051
  %1061 = trunc i32 %1055 to i8
  store i8 %1061, i8* %1059, align 1
  br label %1110

1062:                                             ; preds = %1051
  %1063 = and i32 %1055, 255
  %1064 = and i32 %866, 255
  %1065 = mul nuw nsw i32 %1063, %1064
  %1066 = lshr i32 %1065, 8
  %1067 = load i8, i8* %1059, align 1
  %1068 = zext i8 %1067 to i32
  %1069 = add nuw nsw i32 %1066, %1068
  %1070 = lshr i32 %1069, 8
  %1071 = sub nsw i32 %1069, %1070
  %1072 = trunc i32 %1071 to i8
  store i8 %1072, i8* %1059, align 1
  br label %1110

1073:                                             ; preds = %1047
  %1074 = sub i32 65536, %895
  %1075 = add i32 %1074, %899
  %1076 = sub i32 %896, %895
  %1077 = sub i32 %1076, %1075
  %1078 = ashr i32 %1075, 11
  %1079 = ashr i32 %863, 11
  %1080 = mul i32 %1078, %1079
  %1081 = mul i32 %1080, %1078
  %1082 = lshr i32 %1081, 8
  %1083 = sub nsw i32 %866, %1082
  %1084 = ashr i32 %1077, 11
  %1085 = mul i32 %1084, %1079
  %1086 = mul i32 %1085, %1084
  %1087 = lshr i32 %1086, 8
  %1088 = ashr i32 %895, 16
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, i8* %835, i64 %1089
  %1091 = load i8, i8* %1090, align 1
  %1092 = zext i8 %1091 to i32
  %1093 = and i32 %1083, 255
  %1094 = add nuw nsw i32 %1093, %1092
  %1095 = lshr i32 %1094, 8
  %1096 = sub nsw i32 %1094, %1095
  %1097 = trunc i32 %1096 to i8
  store i8 %1097, i8* %1090, align 1
  %1098 = add nsw i32 %1088, 1
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds i8, i8* %835, i64 %1099
  %1101 = load i8, i8* %1100, align 1
  %1102 = zext i8 %1101 to i32
  %1103 = and i32 %1087, 255
  %1104 = add nuw nsw i32 %1103, %1102
  %1105 = lshr i32 %1104, 8
  %1106 = sub nsw i32 %1104, %1105
  %1107 = trunc i32 %1106 to i8
  store i8 %1107, i8* %1100, align 1
  br label %1110

1108:                                             ; preds = %1047
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %479, i32 %899, i32 %895, i32 %899, i32 %896, i32 2147483647, i32 %863, i8 zeroext %867, i8* %835, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1110

1109:                                             ; preds = %890
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %479, i32 %892, i32 %895, i32 %893, i32 %896, i32 %861, i32 %863, i8 zeroext %867, i8* %835, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1110

1110:                                             ; preds = %1109, %1108, %1073, %1062, %1060, %1045, %884, %840
  %1111 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %409, align 8
  %1112 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1111, i64 19
  %1113 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1112, align 8
  call void %1113(%class.AdditiveBlitter* nonnull %175, i32 %415, i32 %843) #13
  %1114 = icmp sgt i32 %841, 1
  br i1 %1114, label %1115, label %1374

1115:                                             ; preds = %1110, %837
  %1116 = phi i32 [ %843, %1110 ], [ %415, %837 ]
  %1117 = phi i32 [ %850, %1110 ], [ %813, %837 ]
  %1118 = phi i32 [ %855, %1110 ], [ %814, %837 ]
  %1119 = phi i32 [ %841, %1110 ], [ %817, %837 ]
  %1120 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 9
  %1121 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 9
  br label %1122

1122:                                             ; preds = %1369, %1115
  %1123 = phi i32 [ %1116, %1115 ], [ %1147, %1369 ]
  %1124 = phi i32 [ %1117, %1115 ], [ %1148, %1369 ]
  %1125 = phi i32 [ %1118, %1115 ], [ %1149, %1369 ]
  %1126 = phi i32 [ %1119, %1115 ], [ %1127, %1369 ]
  %1127 = add nsw i32 %1126, -1
  %1128 = ashr i32 %1123, 16
  %1129 = load i32, i32* %399, align 8
  %1130 = icmp eq i32 %1129, %1128
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1122
  %1132 = load i8*, i8** %405, align 8
  br label %1145

1133:                                             ; preds = %1122
  store i32 %1128, i32* %399, align 8
  %1134 = load i8*, i8** %400, align 8
  %1135 = load i32, i32* %168, align 4
  %1136 = sub nsw i32 %1128, %1135
  %1137 = load i32, i32* %402, align 8
  %1138 = mul i32 %1136, %1137
  %1139 = zext i32 %1138 to i64
  %1140 = getelementptr inbounds i8, i8* %1134, i64 %1139
  %1141 = load i32, i32* %404, align 8
  %1142 = sext i32 %1141 to i64
  %1143 = sub nsw i64 0, %1142
  %1144 = getelementptr inbounds i8, i8* %1140, i64 %1143
  store i8* %1144, i8** %405, align 8
  br label %1145

1145:                                             ; preds = %1133, %1131
  %1146 = phi i8* [ %1144, %1133 ], [ %1132, %1131 ]
  %1147 = add nsw i32 %1123, 65536
  %1148 = add nsw i32 %1124, %612
  %1149 = add nsw i32 %1125, %618
  %1150 = and i32 %1124, -4096
  %1151 = and i32 %1125, -4096
  %1152 = and i32 %1148, -4096
  %1153 = and i32 %1149, -4096
  %1154 = load i32, i32* %1120, align 8
  %1155 = load i32, i32* %1121, align 8
  %1156 = icmp sgt i32 %1150, %1151
  br i1 %1156, label %1369, label %1157

1157:                                             ; preds = %1145
  %1158 = icmp sgt i32 %1152, %1153
  br i1 %1158, label %1159, label %1172

1159:                                             ; preds = %1157
  %1160 = icmp sgt i32 %1150, %1152
  %1161 = select i1 %1160, i32 %1152, i32 %1150
  %1162 = select i1 %1160, i32 %1150, i32 %1152
  %1163 = icmp sgt i32 %1151, %1153
  %1164 = select i1 %1163, i32 %1153, i32 %1151
  %1165 = select i1 %1163, i32 %1151, i32 %1153
  %1166 = icmp slt i32 %1161, %1164
  %1167 = select i1 %1166, i32 %1164, i32 %1161
  %1168 = icmp slt i32 %1165, %1162
  %1169 = select i1 %1168, i32 %1165, i32 %1162
  %1170 = add nsw i32 %1167, %1169
  %1171 = sdiv i32 %1170, 2
  br label %1172

1172:                                             ; preds = %1159, %1157
  %1173 = phi i32 [ %1171, %1159 ], [ %1152, %1157 ]
  %1174 = phi i32 [ %1171, %1159 ], [ %1153, %1157 ]
  %1175 = icmp eq i32 %1150, %1151
  %1176 = icmp eq i32 %1173, %1174
  %1177 = and i1 %1175, %1176
  br i1 %1177, label %1369, label %1178

1178:                                             ; preds = %1172
  %1179 = icmp slt i32 %1173, %1150
  %1180 = select i1 %1179, i32 %1173, i32 %1150
  %1181 = select i1 %1179, i32 %1150, i32 %1173
  %1182 = icmp slt i32 %1174, %1151
  %1183 = select i1 %1182, i32 %1174, i32 %1151
  %1184 = select i1 %1182, i32 %1151, i32 %1174
  %1185 = add nsw i32 %1181, 65535
  %1186 = and i32 %1185, -65536
  %1187 = and i32 %1183, -65536
  %1188 = icmp slt i32 %1187, %1186
  br i1 %1188, label %1368, label %1189

1189:                                             ; preds = %1178
  %1190 = icmp sgt i32 %1186, %1180
  br i1 %1190, label %1191, label %1240

1191:                                             ; preds = %1189
  %1192 = sub nsw i32 %1186, %1180
  %1193 = add nsw i32 %1192, 65535
  %1194 = ashr i32 %1193, 16
  switch i32 %1194, label %1239 [
    i32 1, label %1195
    i32 2, label %1204
  ]

1195:                                             ; preds = %1191
  %1196 = sub i32 %1186, %1181
  %1197 = add nsw i32 %1196, %1192
  %1198 = sdiv i32 %1197, 2
  %1199 = lshr i32 %1198, 8
  %1200 = trunc i32 %1199 to i8
  %1201 = ashr i32 %1180, 16
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds i8, i8* %1146, i64 %1202
  store i8 %1200, i8* %1203, align 1
  br label %1240

1204:                                             ; preds = %1191
  %1205 = sub i32 -65536, %1180
  %1206 = add i32 %1186, %1205
  %1207 = sub i32 %1181, %1180
  %1208 = sub i32 %1207, %1206
  %1209 = ashr i32 %1206, 11
  %1210 = ashr i32 %1154, 11
  %1211 = mul i32 %1209, %1210
  %1212 = mul i32 %1211, %1209
  %1213 = lshr i32 %1212, 8
  %1214 = ashr i32 %1208, 11
  %1215 = mul i32 %1214, %1210
  %1216 = mul i32 %1215, %1214
  %1217 = lshr i32 %1216, 8
  %1218 = ashr i32 %1180, 16
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds i8, i8* %1146, i64 %1219
  %1221 = load i8, i8* %1220, align 1
  %1222 = zext i8 %1221 to i32
  %1223 = and i32 %1213, 255
  %1224 = add nuw nsw i32 %1223, %1222
  %1225 = lshr i32 %1224, 8
  %1226 = sub nsw i32 %1224, %1225
  %1227 = trunc i32 %1226 to i8
  store i8 %1227, i8* %1220, align 1
  %1228 = add nsw i32 %1218, 1
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds i8, i8* %1146, i64 %1229
  %1231 = load i8, i8* %1230, align 1
  %1232 = zext i8 %1231 to i32
  %1233 = and i32 %1217, 255
  %1234 = xor i32 %1233, 255
  %1235 = add nuw nsw i32 %1234, %1232
  %1236 = lshr i32 %1235, 8
  %1237 = sub nsw i32 %1235, %1236
  %1238 = trunc i32 %1237 to i8
  store i8 %1238, i8* %1230, align 1
  br label %1240

1239:                                             ; preds = %1191
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1128, i32 %1180, i32 %1186, i32 %1181, i32 %1186, i32 %1154, i32 2147483647, i8 zeroext -1, i8* %1146, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1240

1240:                                             ; preds = %1239, %1204, %1195, %1189
  %1241 = icmp sgt i32 %1187, %1186
  br i1 %1241, label %1242, label %1317

1242:                                             ; preds = %1240
  %1243 = sub nsw i32 %1187, %1186
  %1244 = icmp sgt i32 %1243, 0
  br i1 %1244, label %1245, label %1317

1245:                                             ; preds = %1242
  %1246 = lshr exact i32 %1243, 16
  %1247 = ashr i32 %1185, 16
  %1248 = sext i32 %1247 to i64
  %1249 = zext i32 %1246 to i64
  %1250 = icmp ult i32 %1243, 1048576
  br i1 %1250, label %1303, label %1251

1251:                                             ; preds = %1245
  %1252 = and i64 %1249, 65520
  %1253 = add nsw i64 %1252, -16
  %1254 = lshr exact i64 %1253, 4
  %1255 = add nuw nsw i64 %1254, 1
  %1256 = and i64 %1255, 1
  %1257 = icmp eq i64 %1253, 0
  br i1 %1257, label %1287, label %1258

1258:                                             ; preds = %1251
  %1259 = sub nuw nsw i64 %1255, %1256
  br label %1260

1260:                                             ; preds = %1260, %1258
  %1261 = phi i64 [ 0, %1258 ], [ %1284, %1260 ]
  %1262 = phi i64 [ %1259, %1258 ], [ %1285, %1260 ]
  %1263 = add nsw i64 %1261, %1248
  %1264 = getelementptr inbounds i8, i8* %1146, i64 %1263
  %1265 = bitcast i8* %1264 to <16 x i8>*
  %1266 = load <16 x i8>, <16 x i8>* %1265, align 1
  %1267 = zext <16 x i8> %1266 to <16 x i32>
  %1268 = add nuw nsw <16 x i32> %1267, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1269 = lshr <16 x i32> %1268, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1270 = sub nuw nsw <16 x i32> %1268, %1269
  %1271 = trunc <16 x i32> %1270 to <16 x i8>
  %1272 = bitcast i8* %1264 to <16 x i8>*
  store <16 x i8> %1271, <16 x i8>* %1272, align 1
  %1273 = or i64 %1261, 16
  %1274 = add nsw i64 %1273, %1248
  %1275 = getelementptr inbounds i8, i8* %1146, i64 %1274
  %1276 = bitcast i8* %1275 to <16 x i8>*
  %1277 = load <16 x i8>, <16 x i8>* %1276, align 1
  %1278 = zext <16 x i8> %1277 to <16 x i32>
  %1279 = add nuw nsw <16 x i32> %1278, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1280 = lshr <16 x i32> %1279, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1281 = sub nuw nsw <16 x i32> %1279, %1280
  %1282 = trunc <16 x i32> %1281 to <16 x i8>
  %1283 = bitcast i8* %1275 to <16 x i8>*
  store <16 x i8> %1282, <16 x i8>* %1283, align 1
  %1284 = add i64 %1261, 32
  %1285 = add i64 %1262, -2
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1287, label %1260, !llvm.loop !12

1287:                                             ; preds = %1260, %1251
  %1288 = phi i64 [ 0, %1251 ], [ %1284, %1260 ]
  %1289 = icmp eq i64 %1256, 0
  br i1 %1289, label %1301, label %1290

1290:                                             ; preds = %1287
  %1291 = add nsw i64 %1288, %1248
  %1292 = getelementptr inbounds i8, i8* %1146, i64 %1291
  %1293 = bitcast i8* %1292 to <16 x i8>*
  %1294 = load <16 x i8>, <16 x i8>* %1293, align 1
  %1295 = zext <16 x i8> %1294 to <16 x i32>
  %1296 = add nuw nsw <16 x i32> %1295, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1297 = lshr <16 x i32> %1296, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1298 = sub nuw nsw <16 x i32> %1296, %1297
  %1299 = trunc <16 x i32> %1298 to <16 x i8>
  %1300 = bitcast i8* %1292 to <16 x i8>*
  store <16 x i8> %1299, <16 x i8>* %1300, align 1
  br label %1301

1301:                                             ; preds = %1287, %1290
  %1302 = icmp eq i64 %1252, %1249
  br i1 %1302, label %1317, label %1303

1303:                                             ; preds = %1301, %1245
  %1304 = phi i64 [ 0, %1245 ], [ %1252, %1301 ]
  br label %1305

1305:                                             ; preds = %1303, %1305
  %1306 = phi i64 [ %1315, %1305 ], [ %1304, %1303 ]
  %1307 = add nsw i64 %1306, %1248
  %1308 = getelementptr inbounds i8, i8* %1146, i64 %1307
  %1309 = load i8, i8* %1308, align 1
  %1310 = zext i8 %1309 to i32
  %1311 = add nuw nsw i32 %1310, 255
  %1312 = lshr i32 %1311, 8
  %1313 = sub nuw nsw i32 %1311, %1312
  %1314 = trunc i32 %1313 to i8
  store i8 %1314, i8* %1308, align 1
  %1315 = add nuw nsw i64 %1306, 1
  %1316 = icmp eq i64 %1315, %1249
  br i1 %1316, label %1317, label %1305, !llvm.loop !13

1317:                                             ; preds = %1305, %1301, %1242, %1240
  %1318 = icmp sgt i32 %1184, %1187
  br i1 %1318, label %1319, label %1369

1319:                                             ; preds = %1317
  %1320 = sub nsw i32 %1184, %1187
  %1321 = add nsw i32 %1320, 65535
  %1322 = ashr i32 %1321, 16
  switch i32 %1322, label %1367 [
    i32 1, label %1323
    i32 2, label %1332
  ]

1323:                                             ; preds = %1319
  %1324 = sub i32 %1183, %1187
  %1325 = add nsw i32 %1324, %1320
  %1326 = sdiv i32 %1325, 2
  %1327 = lshr i32 %1326, 8
  %1328 = trunc i32 %1327 to i8
  %1329 = ashr i32 %1183, 16
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds i8, i8* %1146, i64 %1330
  store i8 %1328, i8* %1331, align 1
  br label %1369

1332:                                             ; preds = %1319
  %1333 = sub i32 65536, %1183
  %1334 = add i32 %1333, %1187
  %1335 = sub i32 %1184, %1183
  %1336 = sub i32 %1335, %1334
  %1337 = ashr i32 %1334, 11
  %1338 = ashr i32 %1155, 11
  %1339 = mul i32 %1337, %1338
  %1340 = mul i32 %1339, %1337
  %1341 = lshr i32 %1340, 8
  %1342 = ashr i32 %1336, 11
  %1343 = mul i32 %1342, %1338
  %1344 = mul i32 %1343, %1342
  %1345 = lshr i32 %1344, 8
  %1346 = ashr i32 %1183, 16
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds i8, i8* %1146, i64 %1347
  %1349 = load i8, i8* %1348, align 1
  %1350 = zext i8 %1349 to i32
  %1351 = and i32 %1341, 255
  %1352 = xor i32 %1351, 255
  %1353 = add nuw nsw i32 %1352, %1350
  %1354 = lshr i32 %1353, 8
  %1355 = sub nsw i32 %1353, %1354
  %1356 = trunc i32 %1355 to i8
  store i8 %1356, i8* %1348, align 1
  %1357 = add nsw i32 %1346, 1
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds i8, i8* %1146, i64 %1358
  %1360 = load i8, i8* %1359, align 1
  %1361 = zext i8 %1360 to i32
  %1362 = and i32 %1345, 255
  %1363 = add nuw nsw i32 %1362, %1361
  %1364 = lshr i32 %1363, 8
  %1365 = sub nsw i32 %1363, %1364
  %1366 = trunc i32 %1365 to i8
  store i8 %1366, i8* %1359, align 1
  br label %1369

1367:                                             ; preds = %1319
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1128, i32 %1187, i32 %1183, i32 %1187, i32 %1184, i32 2147483647, i32 %1155, i8 zeroext -1, i8* %1146, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1369

1368:                                             ; preds = %1178
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1128, i32 %1180, i32 %1183, i32 %1181, i32 %1184, i32 %1154, i32 %1155, i8 zeroext -1, i8* %1146, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1369

1369:                                             ; preds = %1368, %1367, %1332, %1323, %1317, %1172, %1145
  %1370 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %409, align 8
  %1371 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1370, i64 19
  %1372 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1371, align 8
  call void %1372(%class.AdditiveBlitter* nonnull %175, i32 %1123, i32 %1147) #13
  %1373 = icmp sgt i32 %1127, 1
  br i1 %1373, label %1122, label %1374

1374:                                             ; preds = %1369, %1110, %834
  %1375 = phi i32 [ %814, %834 ], [ %855, %1110 ], [ %1149, %1369 ]
  %1376 = phi i32 [ %813, %834 ], [ %850, %1110 ], [ %1148, %1369 ]
  %1377 = phi i32 [ %415, %834 ], [ %843, %1110 ], [ %1147, %1369 ]
  %1378 = ashr i32 %1377, 16
  %1379 = load i32, i32* %399, align 8
  %1380 = icmp eq i32 %1379, %1378
  br i1 %1380, label %1381, label %1383

1381:                                             ; preds = %1374
  %1382 = load i8*, i8** %405, align 8
  br label %1395

1383:                                             ; preds = %1374
  store i32 %1378, i32* %399, align 8
  %1384 = load i8*, i8** %400, align 8
  %1385 = load i32, i32* %168, align 4
  %1386 = sub nsw i32 %1378, %1385
  %1387 = load i32, i32* %402, align 8
  %1388 = mul i32 %1386, %1387
  %1389 = zext i32 %1388 to i64
  %1390 = getelementptr inbounds i8, i8* %1384, i64 %1389
  %1391 = load i32, i32* %404, align 8
  %1392 = sext i32 %1391 to i64
  %1393 = sub nsw i64 0, %1392
  %1394 = getelementptr inbounds i8, i8* %1390, i64 %1393
  store i8* %1394, i8** %405, align 8
  br label %1395

1395:                                             ; preds = %1383, %1381
  %1396 = phi i8* [ %1394, %1383 ], [ %1382, %1381 ]
  %1397 = sub nsw i32 %606, %1377
  %1398 = sext i32 %612 to i64
  %1399 = sext i32 %1397 to i64
  %1400 = mul nsw i64 %1399, %1398
  %1401 = lshr i64 %1400, 16
  %1402 = trunc i64 %1401 to i32
  %1403 = add nsw i32 %1376, %1402
  %1404 = icmp slt i32 %1403, %410
  %1405 = select i1 %1404, i32 %410, i32 %1403
  %1406 = sext i32 %618 to i64
  %1407 = mul nsw i64 %1399, %1406
  %1408 = lshr i64 %1407, 16
  %1409 = trunc i64 %1408 to i32
  %1410 = add nsw i32 %1375, %1409
  %1411 = icmp slt i32 %411, %1410
  %1412 = select i1 %1411, i32 %411, i32 %1410
  %1413 = and i32 %1376, -4096
  %1414 = and i32 %1375, -4096
  %1415 = and i32 %1405, -4096
  %1416 = and i32 %1412, -4096
  %1417 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 9
  %1418 = load i32, i32* %1417, align 8
  %1419 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 9
  %1420 = load i32, i32* %1419, align 8
  %1421 = mul nsw i32 %1397, 255
  %1422 = add nsw i32 %1421, 32768
  %1423 = lshr i32 %1422, 16
  %1424 = trunc i32 %1423 to i8
  %1425 = icmp sgt i32 %1413, %1414
  br i1 %1425, label %1667, label %1426

1426:                                             ; preds = %1395
  %1427 = icmp sgt i32 %1415, %1416
  br i1 %1427, label %1428, label %1441

1428:                                             ; preds = %1426
  %1429 = icmp sgt i32 %1413, %1415
  %1430 = select i1 %1429, i32 %1415, i32 %1413
  %1431 = select i1 %1429, i32 %1413, i32 %1415
  %1432 = icmp sgt i32 %1414, %1416
  %1433 = select i1 %1432, i32 %1416, i32 %1414
  %1434 = select i1 %1432, i32 %1414, i32 %1416
  %1435 = icmp slt i32 %1430, %1433
  %1436 = select i1 %1435, i32 %1433, i32 %1430
  %1437 = icmp slt i32 %1434, %1431
  %1438 = select i1 %1437, i32 %1434, i32 %1431
  %1439 = add nsw i32 %1436, %1438
  %1440 = sdiv i32 %1439, 2
  br label %1441

1441:                                             ; preds = %1428, %1426
  %1442 = phi i32 [ %1440, %1428 ], [ %1415, %1426 ]
  %1443 = phi i32 [ %1440, %1428 ], [ %1416, %1426 ]
  %1444 = icmp eq i32 %1413, %1414
  %1445 = icmp eq i32 %1442, %1443
  %1446 = and i1 %1444, %1445
  br i1 %1446, label %1667, label %1447

1447:                                             ; preds = %1441
  %1448 = icmp slt i32 %1442, %1413
  %1449 = select i1 %1448, i32 %1442, i32 %1413
  %1450 = select i1 %1448, i32 %1413, i32 %1442
  %1451 = icmp slt i32 %1443, %1414
  %1452 = select i1 %1451, i32 %1443, i32 %1414
  %1453 = select i1 %1451, i32 %1414, i32 %1443
  %1454 = add nsw i32 %1450, 65535
  %1455 = and i32 %1454, -65536
  %1456 = and i32 %1452, -65536
  %1457 = icmp slt i32 %1456, %1455
  br i1 %1457, label %1666, label %1458

1458:                                             ; preds = %1447
  %1459 = icmp sgt i32 %1455, %1449
  br i1 %1459, label %1460, label %1522

1460:                                             ; preds = %1458
  %1461 = sub nsw i32 %1455, %1449
  %1462 = add nsw i32 %1461, 65535
  %1463 = ashr i32 %1462, 16
  switch i32 %1463, label %1521 [
    i32 1, label %1464
    i32 2, label %1486
  ]

1464:                                             ; preds = %1460
  %1465 = sub i32 %1455, %1450
  %1466 = add nsw i32 %1465, %1461
  %1467 = sdiv i32 %1466, 2
  %1468 = lshr i32 %1467, 8
  %1469 = ashr i32 %1449, 16
  %1470 = icmp eq i8 %1424, -1
  %1471 = sext i32 %1469 to i64
  %1472 = getelementptr inbounds i8, i8* %1396, i64 %1471
  br i1 %1470, label %1473, label %1475

1473:                                             ; preds = %1464
  %1474 = trunc i32 %1468 to i8
  store i8 %1474, i8* %1472, align 1
  br label %1522

1475:                                             ; preds = %1464
  %1476 = and i32 %1468, 255
  %1477 = and i32 %1423, 255
  %1478 = mul nuw nsw i32 %1476, %1477
  %1479 = lshr i32 %1478, 8
  %1480 = load i8, i8* %1472, align 1
  %1481 = zext i8 %1480 to i32
  %1482 = add nuw nsw i32 %1479, %1481
  %1483 = lshr i32 %1482, 8
  %1484 = sub nsw i32 %1482, %1483
  %1485 = trunc i32 %1484 to i8
  store i8 %1485, i8* %1472, align 1
  br label %1522

1486:                                             ; preds = %1460
  %1487 = sub i32 -65536, %1449
  %1488 = add i32 %1455, %1487
  %1489 = sub i32 %1450, %1449
  %1490 = sub i32 %1489, %1488
  %1491 = ashr i32 %1488, 11
  %1492 = ashr i32 %1418, 11
  %1493 = mul i32 %1491, %1492
  %1494 = mul i32 %1493, %1491
  %1495 = lshr i32 %1494, 8
  %1496 = ashr i32 %1490, 11
  %1497 = mul i32 %1496, %1492
  %1498 = mul i32 %1497, %1496
  %1499 = lshr i32 %1498, 8
  %1500 = sub nsw i32 %1423, %1499
  %1501 = ashr i32 %1449, 16
  %1502 = sext i32 %1501 to i64
  %1503 = getelementptr inbounds i8, i8* %1396, i64 %1502
  %1504 = load i8, i8* %1503, align 1
  %1505 = zext i8 %1504 to i32
  %1506 = and i32 %1495, 255
  %1507 = add nuw nsw i32 %1506, %1505
  %1508 = lshr i32 %1507, 8
  %1509 = sub nsw i32 %1507, %1508
  %1510 = trunc i32 %1509 to i8
  store i8 %1510, i8* %1503, align 1
  %1511 = add nsw i32 %1501, 1
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds i8, i8* %1396, i64 %1512
  %1514 = load i8, i8* %1513, align 1
  %1515 = zext i8 %1514 to i32
  %1516 = and i32 %1500, 255
  %1517 = add nuw nsw i32 %1516, %1515
  %1518 = lshr i32 %1517, 8
  %1519 = sub nsw i32 %1517, %1518
  %1520 = trunc i32 %1519 to i8
  store i8 %1520, i8* %1513, align 1
  br label %1522

1521:                                             ; preds = %1460
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1378, i32 %1449, i32 %1455, i32 %1450, i32 %1455, i32 %1418, i32 2147483647, i8 zeroext %1424, i8* %1396, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1522

1522:                                             ; preds = %1521, %1486, %1475, %1473, %1458
  %1523 = icmp sgt i32 %1456, %1455
  br i1 %1523, label %1524, label %1602

1524:                                             ; preds = %1522
  %1525 = sub nsw i32 %1456, %1455
  %1526 = icmp sgt i32 %1525, 0
  br i1 %1526, label %1527, label %1602

1527:                                             ; preds = %1524
  %1528 = lshr exact i32 %1525, 16
  %1529 = ashr i32 %1454, 16
  %1530 = and i32 %1423, 255
  %1531 = sext i32 %1529 to i64
  %1532 = zext i32 %1528 to i64
  %1533 = icmp ult i32 %1525, 1048576
  br i1 %1533, label %1588, label %1534

1534:                                             ; preds = %1527
  %1535 = and i64 %1532, 65520
  %1536 = insertelement <16 x i32> undef, i32 %1530, i32 0
  %1537 = shufflevector <16 x i32> %1536, <16 x i32> undef, <16 x i32> zeroinitializer
  %1538 = add nsw i64 %1535, -16
  %1539 = lshr exact i64 %1538, 4
  %1540 = add nuw nsw i64 %1539, 1
  %1541 = and i64 %1540, 1
  %1542 = icmp eq i64 %1538, 0
  br i1 %1542, label %1572, label %1543

1543:                                             ; preds = %1534
  %1544 = sub nuw nsw i64 %1540, %1541
  br label %1545

1545:                                             ; preds = %1545, %1543
  %1546 = phi i64 [ 0, %1543 ], [ %1569, %1545 ]
  %1547 = phi i64 [ %1544, %1543 ], [ %1570, %1545 ]
  %1548 = add nsw i64 %1546, %1531
  %1549 = getelementptr inbounds i8, i8* %1396, i64 %1548
  %1550 = bitcast i8* %1549 to <16 x i8>*
  %1551 = load <16 x i8>, <16 x i8>* %1550, align 1
  %1552 = zext <16 x i8> %1551 to <16 x i32>
  %1553 = add nuw nsw <16 x i32> %1537, %1552
  %1554 = lshr <16 x i32> %1553, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1555 = sub nsw <16 x i32> %1553, %1554
  %1556 = trunc <16 x i32> %1555 to <16 x i8>
  %1557 = bitcast i8* %1549 to <16 x i8>*
  store <16 x i8> %1556, <16 x i8>* %1557, align 1
  %1558 = or i64 %1546, 16
  %1559 = add nsw i64 %1558, %1531
  %1560 = getelementptr inbounds i8, i8* %1396, i64 %1559
  %1561 = bitcast i8* %1560 to <16 x i8>*
  %1562 = load <16 x i8>, <16 x i8>* %1561, align 1
  %1563 = zext <16 x i8> %1562 to <16 x i32>
  %1564 = add nuw nsw <16 x i32> %1537, %1563
  %1565 = lshr <16 x i32> %1564, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1566 = sub nsw <16 x i32> %1564, %1565
  %1567 = trunc <16 x i32> %1566 to <16 x i8>
  %1568 = bitcast i8* %1560 to <16 x i8>*
  store <16 x i8> %1567, <16 x i8>* %1568, align 1
  %1569 = add i64 %1546, 32
  %1570 = add i64 %1547, -2
  %1571 = icmp eq i64 %1570, 0
  br i1 %1571, label %1572, label %1545, !llvm.loop !14

1572:                                             ; preds = %1545, %1534
  %1573 = phi i64 [ 0, %1534 ], [ %1569, %1545 ]
  %1574 = icmp eq i64 %1541, 0
  br i1 %1574, label %1586, label %1575

1575:                                             ; preds = %1572
  %1576 = add nsw i64 %1573, %1531
  %1577 = getelementptr inbounds i8, i8* %1396, i64 %1576
  %1578 = bitcast i8* %1577 to <16 x i8>*
  %1579 = load <16 x i8>, <16 x i8>* %1578, align 1
  %1580 = zext <16 x i8> %1579 to <16 x i32>
  %1581 = add nuw nsw <16 x i32> %1537, %1580
  %1582 = lshr <16 x i32> %1581, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1583 = sub nsw <16 x i32> %1581, %1582
  %1584 = trunc <16 x i32> %1583 to <16 x i8>
  %1585 = bitcast i8* %1577 to <16 x i8>*
  store <16 x i8> %1584, <16 x i8>* %1585, align 1
  br label %1586

1586:                                             ; preds = %1572, %1575
  %1587 = icmp eq i64 %1535, %1532
  br i1 %1587, label %1602, label %1588

1588:                                             ; preds = %1586, %1527
  %1589 = phi i64 [ 0, %1527 ], [ %1535, %1586 ]
  br label %1590

1590:                                             ; preds = %1588, %1590
  %1591 = phi i64 [ %1600, %1590 ], [ %1589, %1588 ]
  %1592 = add nsw i64 %1591, %1531
  %1593 = getelementptr inbounds i8, i8* %1396, i64 %1592
  %1594 = load i8, i8* %1593, align 1
  %1595 = zext i8 %1594 to i32
  %1596 = add nuw nsw i32 %1530, %1595
  %1597 = lshr i32 %1596, 8
  %1598 = sub nsw i32 %1596, %1597
  %1599 = trunc i32 %1598 to i8
  store i8 %1599, i8* %1593, align 1
  %1600 = add nuw nsw i64 %1591, 1
  %1601 = icmp eq i64 %1600, %1532
  br i1 %1601, label %1602, label %1590, !llvm.loop !15

1602:                                             ; preds = %1590, %1586, %1524, %1522
  %1603 = icmp sgt i32 %1453, %1456
  br i1 %1603, label %1604, label %1667

1604:                                             ; preds = %1602
  %1605 = sub nsw i32 %1453, %1456
  %1606 = add nsw i32 %1605, 65535
  %1607 = ashr i32 %1606, 16
  switch i32 %1607, label %1665 [
    i32 1, label %1608
    i32 2, label %1630
  ]

1608:                                             ; preds = %1604
  %1609 = sub i32 %1452, %1456
  %1610 = add nsw i32 %1609, %1605
  %1611 = sdiv i32 %1610, 2
  %1612 = lshr i32 %1611, 8
  %1613 = ashr i32 %1452, 16
  %1614 = icmp eq i8 %1424, -1
  %1615 = sext i32 %1613 to i64
  %1616 = getelementptr inbounds i8, i8* %1396, i64 %1615
  br i1 %1614, label %1617, label %1619

1617:                                             ; preds = %1608
  %1618 = trunc i32 %1612 to i8
  store i8 %1618, i8* %1616, align 1
  br label %1667

1619:                                             ; preds = %1608
  %1620 = and i32 %1612, 255
  %1621 = and i32 %1423, 255
  %1622 = mul nuw nsw i32 %1620, %1621
  %1623 = lshr i32 %1622, 8
  %1624 = load i8, i8* %1616, align 1
  %1625 = zext i8 %1624 to i32
  %1626 = add nuw nsw i32 %1623, %1625
  %1627 = lshr i32 %1626, 8
  %1628 = sub nsw i32 %1626, %1627
  %1629 = trunc i32 %1628 to i8
  store i8 %1629, i8* %1616, align 1
  br label %1667

1630:                                             ; preds = %1604
  %1631 = sub i32 65536, %1452
  %1632 = add i32 %1631, %1456
  %1633 = sub i32 %1453, %1452
  %1634 = sub i32 %1633, %1632
  %1635 = ashr i32 %1632, 11
  %1636 = ashr i32 %1420, 11
  %1637 = mul i32 %1635, %1636
  %1638 = mul i32 %1637, %1635
  %1639 = lshr i32 %1638, 8
  %1640 = sub nsw i32 %1423, %1639
  %1641 = ashr i32 %1634, 11
  %1642 = mul i32 %1641, %1636
  %1643 = mul i32 %1642, %1641
  %1644 = lshr i32 %1643, 8
  %1645 = ashr i32 %1452, 16
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds i8, i8* %1396, i64 %1646
  %1648 = load i8, i8* %1647, align 1
  %1649 = zext i8 %1648 to i32
  %1650 = and i32 %1640, 255
  %1651 = add nuw nsw i32 %1650, %1649
  %1652 = lshr i32 %1651, 8
  %1653 = sub nsw i32 %1651, %1652
  %1654 = trunc i32 %1653 to i8
  store i8 %1654, i8* %1647, align 1
  %1655 = add nsw i32 %1645, 1
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds i8, i8* %1396, i64 %1656
  %1658 = load i8, i8* %1657, align 1
  %1659 = zext i8 %1658 to i32
  %1660 = and i32 %1644, 255
  %1661 = add nuw nsw i32 %1660, %1659
  %1662 = lshr i32 %1661, 8
  %1663 = sub nsw i32 %1661, %1662
  %1664 = trunc i32 %1663 to i8
  store i8 %1664, i8* %1657, align 1
  br label %1667

1665:                                             ; preds = %1604
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1378, i32 %1456, i32 %1452, i32 %1456, i32 %1453, i32 2147483647, i32 %1420, i8 zeroext %1424, i8* %1396, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1667

1666:                                             ; preds = %1447
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1378, i32 %1449, i32 %1452, i32 %1450, i32 %1453, i32 %1418, i32 %1420, i8 zeroext %1424, i8* %1396, i1 zeroext true, i1 zeroext false, i1 zeroext false) #13
  br label %1667

1667:                                             ; preds = %1666, %1665, %1630, %1619, %1617, %1602, %1441, %1395
  %1668 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %409, align 8
  %1669 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1668, i64 19
  %1670 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1669, align 8
  call void %1670(%class.AdditiveBlitter* nonnull %175, i32 %1377, i32 %606) #13
  %1671 = add nsw i32 %1405, -2048
  %1672 = add nsw i32 %1412, -2048
  br label %1673

1673:                                             ; preds = %1667, %797, %795, %746, %736, %718
  %1674 = phi i32 [ %1672, %1667 ], [ %616, %736 ], [ %616, %718 ], [ %616, %795 ], [ %616, %797 ], [ %616, %746 ]
  %1675 = phi i32 [ %1671, %1667 ], [ %610, %736 ], [ %610, %718 ], [ %610, %795 ], [ %610, %797 ], [ %610, %746 ]
  store i32 %1675, i32* %607, align 8
  store i32 %1674, i32* %613, align 8
  %1676 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %560, i64 0, i32 6
  store i32 %606, i32* %1676, align 4
  %1677 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %558, i64 0, i32 6
  store i32 %606, i32* %1677, align 4
  br label %412

1678:                                             ; preds = %377, %351
  %1679 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %314, align 8
  %1680 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1679, i64 0, i32 8
  %1681 = load i32, i32* %1680, align 4
  %1682 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %304, align 8
  %1683 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1682, i64 0, i32 7
  %1684 = load i32, i32* %1683, align 8
  %1685 = sub nsw i32 %1681, %1684
  %1686 = ashr i32 %1685, 16
  %1687 = shl nsw i32 %1686, 2
  %1688 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %0) #13
  %1689 = sub nsw i32 %334, %333
  %1690 = load i8, i8* %77, align 2
  store i32 %370, i32* %311, align 8
  store i32 %370, i32* %308, align 8
  store i32 %373, i32* %322, align 8
  store i32 %373, i32* %319, align 8
  %1691 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %304, align 8
  %1692 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1691, i64 0, i32 7
  %1693 = shl i32 %333, 16
  %1694 = load i32, i32* %1692, align 4
  %1695 = icmp slt i32 %1694, %1693
  %1696 = select i1 %1695, i32 %1693, i32 %1694
  br label %1697

1697:                                             ; preds = %1727, %1678
  %1698 = phi i32 [ %1737, %1727 ], [ %1694, %1678 ]
  %1699 = phi %struct.SkAnalyticEdge* [ %1735, %1727 ], [ %1691, %1678 ]
  %1700 = phi i32 [ %1733, %1727 ], [ 2147483647, %1678 ]
  %1701 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 6
  %1702 = load i32, i32* %1701, align 4
  %1703 = add nsw i32 %1702, 65536
  %1704 = icmp eq i32 %1703, %1696
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1697
  %1706 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 3
  %1707 = load i32, i32* %1706, align 8
  %1708 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 4
  %1709 = load i32, i32* %1708, align 4
  %1710 = add nsw i32 %1709, %1707
  store i32 %1710, i32* %1706, align 8
  br label %1726

1711:                                             ; preds = %1697
  %1712 = icmp eq i32 %1702, %1696
  br i1 %1712, label %1727, label %1713

1713:                                             ; preds = %1711
  %1714 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 5
  %1715 = load i32, i32* %1714, align 8
  %1716 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 4
  %1717 = load i32, i32* %1716, align 4
  %1718 = sub nsw i32 %1696, %1698
  %1719 = sext i32 %1717 to i64
  %1720 = sext i32 %1718 to i64
  %1721 = mul nsw i64 %1719, %1720
  %1722 = lshr i64 %1721, 16
  %1723 = trunc i64 %1722 to i32
  %1724 = add nsw i32 %1715, %1723
  %1725 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 3
  store i32 %1724, i32* %1725, align 8
  br label %1726

1726:                                             ; preds = %1705, %1713
  store i32 %1696, i32* %1701, align 4
  br label %1727

1727:                                             ; preds = %1726, %1711
  %1728 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 8
  %1729 = load i32, i32* %1728, align 4
  %1730 = icmp sgt i32 %1729, %1696
  %1731 = icmp sgt i32 %1700, %1729
  %1732 = and i1 %1730, %1731
  %1733 = select i1 %1732, i32 %1729, i32 %1700
  %1734 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1699, i64 0, i32 0
  %1735 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %1734, align 8
  %1736 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1735, i64 0, i32 7
  %1737 = load i32, i32* %1736, align 8
  %1738 = icmp slt i32 %1696, %1737
  br i1 %1738, label %1739, label %1697

1739:                                             ; preds = %1727
  %1740 = add nsw i32 %1687, 4
  %1741 = shl nsw i32 %1689, 1
  %1742 = and i8 %1690, 3
  %1743 = icmp sgt i32 %187, %1740
  %1744 = icmp sgt i32 %1688, %1741
  %1745 = zext i8 %1742 to i32
  %1746 = icmp sgt i32 %1733, %1737
  %1747 = select i1 %1746, i32 %1737, i32 %1733
  %1748 = and i32 %1745, 1
  %1749 = icmp eq i32 %1748, 0
  %1750 = select i1 %1749, i32 -1, i32 1
  %1751 = and i32 %1745, 2
  %1752 = icmp ne i32 %1751, 0
  %1753 = xor i1 %1752, true
  %1754 = icmp sge i32 %1693, %1694
  %1755 = or i1 %1754, %1753
  br i1 %1755, label %1756, label %1758

1756:                                             ; preds = %1739
  %1757 = ashr exact i32 %370, 16
  br label %1884

1758:                                             ; preds = %1739
  %1759 = sub nsw i32 %373, %370
  %1760 = ashr exact i32 %1759, 16
  %1761 = ashr i32 %1696, 16
  %1762 = icmp eq i32 %1761, %333
  br i1 %1762, label %1775, label %1763

1763:                                             ; preds = %1758
  %1764 = bitcast %class.MaskAdditiveBlitter* %20 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %1765 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %1764, align 8
  %1766 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %1765, i64 14
  %1767 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %1766, align 8
  %1768 = call %class.SkBlitter* %1767(%class.AdditiveBlitter* nonnull %175, i1 zeroext false) #13
  %1769 = ashr exact i32 %370, 16
  %1770 = sub nsw i32 %1761, %333
  %1771 = bitcast %class.SkBlitter* %1768 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %1772 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %1771, align 8
  %1773 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %1772, i64 5
  %1774 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %1773, align 8
  call void %1774(%class.SkBlitter* %1768, i32 %1769, i32 %333, i32 %1760, i32 %1770) #13
  br label %1775

1775:                                             ; preds = %1763, %1758
  %1776 = phi i32 [ %1761, %1763 ], [ %333, %1758 ]
  %1777 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 1
  %1778 = bitcast i64* %1777 to i32*
  %1779 = load i32, i32* %1778, align 8
  %1780 = icmp eq i32 %1779, %1776
  br i1 %1780, label %1781, label %1784

1781:                                             ; preds = %1775
  %1782 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1783 = load i8*, i8** %1782, align 8
  br label %1802

1784:                                             ; preds = %1775
  store i32 %1776, i32* %1778, align 8
  %1785 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1786 = load i8*, i8** %1785, align 8
  %1787 = load i32, i32* %168, align 4
  %1788 = sub nsw i32 %1776, %1787
  %1789 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 2, i32 0, i32 1
  %1790 = bitcast %class.SkAutoMalloc* %1789 to i32*
  %1791 = load i32, i32* %1790, align 8
  %1792 = mul i32 %1788, %1791
  %1793 = zext i32 %1792 to i64
  %1794 = getelementptr inbounds i8, i8* %1786, i64 %1793
  %1795 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 1
  %1796 = bitcast i64* %1795 to i32*
  %1797 = load i32, i32* %1796, align 8
  %1798 = sext i32 %1797 to i64
  %1799 = sub nsw i64 0, %1798
  %1800 = getelementptr inbounds i8, i8* %1794, i64 %1799
  %1801 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8* %1800, i8** %1801, align 8
  br label %1802

1802:                                             ; preds = %1784, %1781
  %1803 = phi i8* [ %1783, %1781 ], [ %1800, %1784 ]
  %1804 = ashr exact i32 %370, 16
  %1805 = icmp sgt i32 %1759, 65535
  br i1 %1805, label %1806, label %1884

1806:                                             ; preds = %1802
  %1807 = shl i32 %1776, 16
  %1808 = sub nsw i32 %1696, %1807
  %1809 = mul nsw i32 %1808, 255
  %1810 = add nsw i32 %1809, 32768
  %1811 = lshr i32 %1810, 16
  %1812 = and i32 %1811, 255
  %1813 = sext i32 %1804 to i64
  %1814 = zext i32 %1760 to i64
  %1815 = icmp ult i32 %1760, 16
  br i1 %1815, label %1870, label %1816

1816:                                             ; preds = %1806
  %1817 = and i64 %1814, 4294967280
  %1818 = insertelement <16 x i32> undef, i32 %1812, i32 0
  %1819 = shufflevector <16 x i32> %1818, <16 x i32> undef, <16 x i32> zeroinitializer
  %1820 = add nsw i64 %1817, -16
  %1821 = lshr exact i64 %1820, 4
  %1822 = add nuw nsw i64 %1821, 1
  %1823 = and i64 %1822, 1
  %1824 = icmp eq i64 %1820, 0
  br i1 %1824, label %1854, label %1825

1825:                                             ; preds = %1816
  %1826 = sub nuw nsw i64 %1822, %1823
  br label %1827

1827:                                             ; preds = %1827, %1825
  %1828 = phi i64 [ 0, %1825 ], [ %1851, %1827 ]
  %1829 = phi i64 [ %1826, %1825 ], [ %1852, %1827 ]
  %1830 = add nsw i64 %1828, %1813
  %1831 = getelementptr inbounds i8, i8* %1803, i64 %1830
  %1832 = bitcast i8* %1831 to <16 x i8>*
  %1833 = load <16 x i8>, <16 x i8>* %1832, align 1
  %1834 = zext <16 x i8> %1833 to <16 x i32>
  %1835 = add nuw nsw <16 x i32> %1819, %1834
  %1836 = lshr <16 x i32> %1835, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1837 = sub nsw <16 x i32> %1835, %1836
  %1838 = trunc <16 x i32> %1837 to <16 x i8>
  %1839 = bitcast i8* %1831 to <16 x i8>*
  store <16 x i8> %1838, <16 x i8>* %1839, align 1
  %1840 = or i64 %1828, 16
  %1841 = add nsw i64 %1840, %1813
  %1842 = getelementptr inbounds i8, i8* %1803, i64 %1841
  %1843 = bitcast i8* %1842 to <16 x i8>*
  %1844 = load <16 x i8>, <16 x i8>* %1843, align 1
  %1845 = zext <16 x i8> %1844 to <16 x i32>
  %1846 = add nuw nsw <16 x i32> %1819, %1845
  %1847 = lshr <16 x i32> %1846, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1848 = sub nsw <16 x i32> %1846, %1847
  %1849 = trunc <16 x i32> %1848 to <16 x i8>
  %1850 = bitcast i8* %1842 to <16 x i8>*
  store <16 x i8> %1849, <16 x i8>* %1850, align 1
  %1851 = add i64 %1828, 32
  %1852 = add i64 %1829, -2
  %1853 = icmp eq i64 %1852, 0
  br i1 %1853, label %1854, label %1827, !llvm.loop !16

1854:                                             ; preds = %1827, %1816
  %1855 = phi i64 [ 0, %1816 ], [ %1851, %1827 ]
  %1856 = icmp eq i64 %1823, 0
  br i1 %1856, label %1868, label %1857

1857:                                             ; preds = %1854
  %1858 = add nsw i64 %1855, %1813
  %1859 = getelementptr inbounds i8, i8* %1803, i64 %1858
  %1860 = bitcast i8* %1859 to <16 x i8>*
  %1861 = load <16 x i8>, <16 x i8>* %1860, align 1
  %1862 = zext <16 x i8> %1861 to <16 x i32>
  %1863 = add nuw nsw <16 x i32> %1819, %1862
  %1864 = lshr <16 x i32> %1863, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1865 = sub nsw <16 x i32> %1863, %1864
  %1866 = trunc <16 x i32> %1865 to <16 x i8>
  %1867 = bitcast i8* %1859 to <16 x i8>*
  store <16 x i8> %1866, <16 x i8>* %1867, align 1
  br label %1868

1868:                                             ; preds = %1854, %1857
  %1869 = icmp eq i64 %1817, %1814
  br i1 %1869, label %1884, label %1870

1870:                                             ; preds = %1868, %1806
  %1871 = phi i64 [ 0, %1806 ], [ %1817, %1868 ]
  br label %1872

1872:                                             ; preds = %1870, %1872
  %1873 = phi i64 [ %1882, %1872 ], [ %1871, %1870 ]
  %1874 = add nsw i64 %1873, %1813
  %1875 = getelementptr inbounds i8, i8* %1803, i64 %1874
  %1876 = load i8, i8* %1875, align 1
  %1877 = zext i8 %1876 to i32
  %1878 = add nuw nsw i32 %1812, %1877
  %1879 = lshr i32 %1878, 8
  %1880 = sub nsw i32 %1878, %1879
  %1881 = trunc i32 %1880 to i8
  store i8 %1881, i8* %1875, align 1
  %1882 = add nuw nsw i64 %1873, 1
  %1883 = icmp eq i64 %1882, %1814
  br i1 %1883, label %1884, label %1872, !llvm.loop !17

1884:                                             ; preds = %1872, %1868, %1802, %1756
  %1885 = phi i32 [ %1757, %1756 ], [ %1804, %1802 ], [ %1804, %1868 ], [ %1804, %1872 ]
  %1886 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 1
  %1887 = bitcast i64* %1886 to i32*
  %1888 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1889 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 2, i32 0, i32 1
  %1890 = bitcast %class.SkAutoMalloc* %1889 to i32*
  %1891 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 1, i32 0, i32 1, i32 1
  %1892 = bitcast i64* %1891 to i32*
  %1893 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %175, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1894 = xor i1 %1743, true
  %1895 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 10
  %1896 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 11
  %1897 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 12
  %1898 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %13, i64 0, i32 6
  %1899 = shl i32 %334, 16
  br label %1900

1900:                                             ; preds = %2897, %1884
  %1901 = phi i32 [ %1747, %1884 ], [ %2898, %2897 ]
  %1902 = phi i32 [ %1696, %1884 ], [ %1917, %2897 ]
  %1903 = load i32, i32* %308, align 8
  %1904 = add nsw i32 %1902, 65536
  %1905 = and i32 %1904, -65536
  %1906 = icmp slt i32 %1905, %1901
  %1907 = select i1 %1906, i32 %1905, i32 %1901
  %1908 = and i32 %1907, 65535
  %1909 = icmp eq i32 %1908, 0
  %1910 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %304, align 8
  %1911 = sub nsw i32 %1907, %1902
  %1912 = and i32 %1911, 16384
  %1913 = icmp eq i32 %1912, 0
  %1914 = add nsw i32 %1902, 16384
  %1915 = lshr i32 %1911, 15
  %1916 = and i32 %1915, 1
  %1917 = select i1 %1913, i32 %1907, i32 %1914
  %1918 = select i1 %1913, i32 %1916, i32 2
  %1919 = sub nsw i32 %1917, %1902
  %1920 = mul nsw i32 %1919, 255
  %1921 = add nsw i32 %1920, 32768
  %1922 = lshr i32 %1921, 16
  %1923 = trunc i32 %1922 to i8
  %1924 = ashr i32 %1902, 16
  %1925 = load i32, i32* %1887, align 8
  %1926 = icmp eq i32 %1925, %1924
  br i1 %1926, label %1927, label %1929

1927:                                             ; preds = %1900
  %1928 = load i8*, i8** %1893, align 8
  br label %1941

1929:                                             ; preds = %1900
  store i32 %1924, i32* %1887, align 8
  %1930 = load i8*, i8** %1888, align 8
  %1931 = load i32, i32* %168, align 4
  %1932 = sub nsw i32 %1924, %1931
  %1933 = load i32, i32* %1890, align 8
  %1934 = mul i32 %1932, %1933
  %1935 = zext i32 %1934 to i64
  %1936 = getelementptr inbounds i8, i8* %1930, i64 %1935
  %1937 = load i32, i32* %1892, align 8
  %1938 = sext i32 %1937 to i64
  %1939 = sub nsw i64 0, %1938
  %1940 = getelementptr inbounds i8, i8* %1936, i64 %1939
  store i8* %1940, i8** %1893, align 8
  br label %1941

1941:                                             ; preds = %1929, %1927
  %1942 = phi i8* [ %1928, %1927 ], [ %1940, %1929 ]
  %1943 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1910, i64 0, i32 7
  %1944 = load i32, i32* %1943, align 8
  %1945 = icmp sgt i32 %1944, %1902
  br i1 %1945, label %2478, label %1946

1946:                                             ; preds = %1941
  %1947 = icmp ne i8 %1923, -1
  %1948 = and i32 %1922, 255
  %1949 = add nsw i32 %1917, 16384
  %1950 = insertelement <16 x i32> undef, i32 %1948, i32 0
  %1951 = shufflevector <16 x i32> %1950, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %1952

1952:                                             ; preds = %2470, %1946
  %1953 = phi %struct.SkAnalyticEdge* [ %1910, %1946 ], [ %2359, %2470 ]
  %1954 = phi i32 [ %1885, %1946 ], [ %2357, %2470 ]
  %1955 = phi i8 [ 0, %1946 ], [ %2356, %2470 ]
  %1956 = phi i32 [ 0, %1946 ], [ %2355, %2470 ]
  %1957 = phi i32 [ %370, %1946 ], [ %2354, %2470 ]
  %1958 = phi %struct.SkAnalyticEdge* [ %12, %1946 ], [ %2353, %2470 ]
  %1959 = phi i32 [ %1903, %1946 ], [ %2472, %2470 ]
  %1960 = phi i1 [ %1752, %1946 ], [ %1971, %2470 ]
  %1961 = phi i32 [ 0, %1946 ], [ %1967, %2470 ]
  %1962 = phi i32 [ 2147483647, %1946 ], [ %2471, %2470 ]
  %1963 = bitcast %struct.SkAnalyticEdge* %1953 to %struct.SkAnalyticQuadraticEdge*
  %1964 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 16
  %1965 = load i8, i8* %1964, align 1
  %1966 = sext i8 %1965 to i32
  %1967 = add nsw i32 %1961, %1966
  %1968 = and i32 %1967, %1750
  %1969 = icmp eq i32 %1968, 0
  %1970 = xor i1 %1969, true
  %1971 = xor i1 %1752, %1970
  %1972 = xor i1 %1960, true
  %1973 = and i1 %1971, %1972
  %1974 = xor i1 %1752, %1969
  %1975 = and i1 %1960, %1974
  %1976 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 8
  %1977 = load i32, i32* %1976, align 4
  %1978 = icmp eq i32 %1977, %1917
  br i1 %1743, label %1979, label %1997

1979:                                             ; preds = %1952
  %1980 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 2
  %1981 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %1980, align 8
  %1982 = icmp eq %struct.SkAnalyticEdge* %1981, null
  %1983 = or i1 %1973, %1982
  br i1 %1983, label %1989, label %1984

1984:                                             ; preds = %1979
  %1985 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %1986 = load i32, i32* %1985, align 8
  %1987 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1981, i64 0, i32 3
  %1988 = load i32, i32* %1987, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %1953, i32 %1902, i32 %1986, i32 %1988, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  br label %1989

1989:                                             ; preds = %1984, %1979
  %1990 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 2
  %1991 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %1990, align 8
  %1992 = icmp ne %struct.SkAnalyticEdge* %1991, %1953
  %1993 = or i1 %1975, %1992
  br i1 %1993, label %1997, label %1994

1994:                                             ; preds = %1989
  %1995 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %1996 = load i32, i32* %1995, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %1958, i32 %1902, i32 %1957, i32 %1996, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  br label %1997

1997:                                             ; preds = %1994, %1989, %1952
  br i1 %1975, label %1998, label %2328

1998:                                             ; preds = %1997
  br i1 %1743, label %1999, label %2038

1999:                                             ; preds = %1998
  %2000 = and i8 %1955, 1
  %2001 = icmp ne i8 %2000, 0
  %2002 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 2
  %2003 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2002, align 8
  %2004 = icmp eq %struct.SkAnalyticEdge* %2003, null
  %2005 = icmp eq %struct.SkAnalyticEdge* %2003, %1953
  %2006 = or i1 %2004, %2005
  br i1 %2006, label %2011, label %2007

2007:                                             ; preds = %1999
  %2008 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2003, i64 0, i32 3
  %2009 = load i32, i32* %2008, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %1958, i32 %1902, i32 %1957, i32 %2009, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  %2010 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2002, align 8
  br label %2011

2011:                                             ; preds = %2007, %1999
  %2012 = phi %struct.SkAnalyticEdge* [ %2003, %1999 ], [ %2010, %2007 ]
  %2013 = icmp eq %struct.SkAnalyticEdge* %2012, null
  br i1 %2013, label %2014, label %2025

2014:                                             ; preds = %2011
  %2015 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 10
  store i32 %1957, i32* %2015, align 4
  %2016 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 11
  store i32 %1902, i32* %2016, align 8
  %2017 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 12
  store i32 %1956, i32* %2017, align 4
  %2018 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %2019 = load i32, i32* %2018, align 8
  %2020 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 9
  %2021 = load i32, i32* %2020, align 8
  %2022 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 10
  store i32 %2019, i32* %2022, align 4
  %2023 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 11
  store i32 %1902, i32* %2023, align 8
  %2024 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 12
  store i32 %2021, i32* %2024, align 4
  store %struct.SkAnalyticEdge* %1953, %struct.SkAnalyticEdge** %2002, align 8
  br label %2025

2025:                                             ; preds = %2014, %2011
  %2026 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 6
  store i32 %1917, i32* %2026, align 4
  %2027 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 4
  %2028 = load i32, i32* %2027, align 4
  %2029 = ashr i32 %2028, %1918
  %2030 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %2031 = load i32, i32* %2030, align 8
  %2032 = add nsw i32 %2031, %2029
  store i32 %2032, i32* %2030, align 8
  %2033 = or i1 %1909, %2001
  %2034 = or i1 %2033, %1978
  br i1 %2034, label %2035, label %2352

2035:                                             ; preds = %2025
  %2036 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 3
  %2037 = load i32, i32* %2036, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %1958, i32 %1917, i32 %2037, i32 %2032, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  br label %2352

2038:                                             ; preds = %1998
  %2039 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %2040 = load i32, i32* %2039, align 8
  %2041 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 6
  store i32 %1917, i32* %2041, align 4
  %2042 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 4
  %2043 = load i32, i32* %2042, align 4
  %2044 = ashr i32 %2043, %1918
  %2045 = add nsw i32 %2044, %2040
  store i32 %2045, i32* %2039, align 8
  %2046 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1958, i64 0, i32 3
  %2047 = load i32, i32* %2046, align 4
  %2048 = icmp sgt i32 %2047, %370
  %2049 = select i1 %2048, i32 %2047, i32 %370
  %2050 = icmp slt i32 %2040, %373
  %2051 = select i1 %2050, i32 %2040, i32 %373
  %2052 = icmp slt i32 %2045, %373
  %2053 = select i1 %2052, i32 %2045, i32 %373
  %2054 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 9
  %2055 = load i32, i32* %2054, align 8
  br i1 %1947, label %2083, label %2056

2056:                                             ; preds = %2038
  %2057 = ashr i32 %1957, 16
  %2058 = icmp slt i32 %2057, %1954
  %2059 = ashr i32 %2047, 16
  %2060 = icmp slt i32 %2059, %1954
  %2061 = or i1 %2058, %2060
  br i1 %2061, label %2083, label %2062

2062:                                             ; preds = %2056
  %2063 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 0
  %2064 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2063, align 8
  %2065 = icmp ne %struct.SkAnalyticEdge* %2064, null
  %2066 = icmp ne %struct.SkAnalyticEdge* %1953, null
  %2067 = and i1 %2066, %2065
  br i1 %2067, label %2068, label %2083

2068:                                             ; preds = %2062
  %2069 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2064, i64 0, i32 7
  %2070 = load i32, i32* %2069, align 8
  %2071 = icmp slt i32 %2070, %1917
  br i1 %2071, label %2072, label %2083

2072:                                             ; preds = %2068
  %2073 = add nsw i32 %2045, 65536
  %2074 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2064, i64 0, i32 3
  %2075 = load i32, i32* %2074, align 8
  %2076 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2064, i64 0, i32 4
  %2077 = load i32, i32* %2076, align 4
  %2078 = icmp slt i32 %2077, 0
  %2079 = sub nsw i32 0, %2077
  %2080 = select i1 %2078, i32 %2079, i32 %2077
  %2081 = sub nsw i32 %2075, %2080
  %2082 = icmp sge i32 %2073, %2081
  br label %2083

2083:                                             ; preds = %2072, %2068, %2062, %2056, %2038
  %2084 = phi i1 [ false, %2038 ], [ true, %2056 ], [ false, %2068 ], [ false, %2062 ], [ %2082, %2072 ]
  %2085 = icmp sgt i32 %1957, %2051
  br i1 %2085, label %2322, label %2086

2086:                                             ; preds = %2083
  %2087 = icmp sgt i32 %2049, %2053
  br i1 %2087, label %2088, label %2101

2088:                                             ; preds = %2086
  %2089 = icmp sgt i32 %1957, %2049
  %2090 = select i1 %2089, i32 %2049, i32 %1957
  %2091 = select i1 %2089, i32 %1957, i32 %2049
  %2092 = icmp sgt i32 %2051, %2053
  %2093 = select i1 %2092, i32 %2053, i32 %2051
  %2094 = select i1 %2092, i32 %2051, i32 %2053
  %2095 = icmp slt i32 %2090, %2093
  %2096 = select i1 %2095, i32 %2093, i32 %2090
  %2097 = icmp slt i32 %2094, %2091
  %2098 = select i1 %2097, i32 %2094, i32 %2091
  %2099 = add nsw i32 %2096, %2098
  %2100 = sdiv i32 %2099, 2
  br label %2101

2101:                                             ; preds = %2088, %2086
  %2102 = phi i32 [ %2100, %2088 ], [ %2049, %2086 ]
  %2103 = phi i32 [ %2100, %2088 ], [ %2053, %2086 ]
  %2104 = icmp eq i32 %1957, %2051
  %2105 = icmp eq i32 %2102, %2103
  %2106 = and i1 %2104, %2105
  br i1 %2106, label %2322, label %2107

2107:                                             ; preds = %2101
  %2108 = icmp slt i32 %2102, %1957
  %2109 = select i1 %2108, i32 %2102, i32 %1957
  %2110 = select i1 %2108, i32 %1957, i32 %2102
  %2111 = icmp slt i32 %2103, %2051
  %2112 = select i1 %2111, i32 %2103, i32 %2051
  %2113 = select i1 %2111, i32 %2051, i32 %2103
  %2114 = add nsw i32 %2110, 65535
  %2115 = and i32 %2114, -65536
  %2116 = and i32 %2112, -65536
  %2117 = icmp slt i32 %2116, %2115
  br i1 %2117, label %2321, label %2118

2118:                                             ; preds = %2107
  %2119 = icmp sgt i32 %2115, %2109
  br i1 %2119, label %2120, label %2181

2120:                                             ; preds = %2118
  %2121 = sub nsw i32 %2115, %2109
  %2122 = add nsw i32 %2121, 65535
  %2123 = ashr i32 %2122, 16
  switch i32 %2123, label %2180 [
    i32 1, label %2124
    i32 2, label %2145
  ]

2124:                                             ; preds = %2120
  %2125 = sub i32 %2115, %2110
  %2126 = add nsw i32 %2125, %2121
  %2127 = sdiv i32 %2126, 2
  %2128 = lshr i32 %2127, 8
  %2129 = ashr i32 %2109, 16
  %2130 = or i1 %1947, %2084
  %2131 = sext i32 %2129 to i64
  %2132 = getelementptr inbounds i8, i8* %1942, i64 %2131
  br i1 %2130, label %2135, label %2133

2133:                                             ; preds = %2124
  %2134 = trunc i32 %2128 to i8
  store i8 %2134, i8* %2132, align 1
  br label %2181

2135:                                             ; preds = %2124
  %2136 = and i32 %2128, 255
  %2137 = mul nuw nsw i32 %2136, %1948
  %2138 = lshr i32 %2137, 8
  %2139 = load i8, i8* %2132, align 1
  %2140 = zext i8 %2139 to i32
  %2141 = add nuw nsw i32 %2138, %2140
  %2142 = icmp ult i32 %2141, 255
  %2143 = select i1 %2142, i32 %2141, i32 255
  %2144 = trunc i32 %2143 to i8
  store i8 %2144, i8* %2132, align 1
  br label %2181

2145:                                             ; preds = %2120
  %2146 = sub i32 -65536, %2109
  %2147 = add i32 %2115, %2146
  %2148 = sub i32 %2110, %2109
  %2149 = sub i32 %2148, %2147
  %2150 = ashr i32 %2147, 11
  %2151 = ashr i32 %1956, 11
  %2152 = mul i32 %2150, %2151
  %2153 = mul i32 %2152, %2150
  %2154 = lshr i32 %2153, 8
  %2155 = ashr i32 %2149, 11
  %2156 = mul i32 %2155, %2151
  %2157 = mul i32 %2156, %2155
  %2158 = lshr i32 %2157, 8
  %2159 = sub nsw i32 %1922, %2158
  %2160 = ashr i32 %2109, 16
  %2161 = sext i32 %2160 to i64
  %2162 = getelementptr inbounds i8, i8* %1942, i64 %2161
  %2163 = load i8, i8* %2162, align 1
  %2164 = zext i8 %2163 to i32
  %2165 = and i32 %2154, 255
  %2166 = add nuw nsw i32 %2165, %2164
  %2167 = icmp ult i32 %2166, 255
  %2168 = select i1 %2167, i32 %2166, i32 255
  %2169 = trunc i32 %2168 to i8
  store i8 %2169, i8* %2162, align 1
  %2170 = add nsw i32 %2160, 1
  %2171 = sext i32 %2170 to i64
  %2172 = getelementptr inbounds i8, i8* %1942, i64 %2171
  %2173 = load i8, i8* %2172, align 1
  %2174 = zext i8 %2173 to i32
  %2175 = and i32 %2159, 255
  %2176 = add nuw nsw i32 %2175, %2174
  %2177 = icmp ult i32 %2176, 255
  %2178 = select i1 %2177, i32 %2176, i32 255
  %2179 = trunc i32 %2178 to i8
  store i8 %2179, i8* %2172, align 1
  br label %2181

2180:                                             ; preds = %2120
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2109, i32 %2115, i32 %2110, i32 %2115, i32 %1956, i32 2147483647, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2084, i1 zeroext true) #13
  br label %2181

2181:                                             ; preds = %2180, %2145, %2135, %2133, %2118
  %2182 = icmp sgt i32 %2116, %2115
  br i1 %2182, label %2183, label %2258

2183:                                             ; preds = %2181
  %2184 = sub nsw i32 %2116, %2115
  %2185 = icmp sgt i32 %2184, 0
  br i1 %2185, label %2186, label %2258

2186:                                             ; preds = %2183
  %2187 = lshr exact i32 %2184, 16
  %2188 = ashr i32 %2114, 16
  %2189 = sext i32 %2188 to i64
  %2190 = zext i32 %2187 to i64
  %2191 = icmp ult i32 %2184, 1048576
  br i1 %2191, label %2244, label %2192

2192:                                             ; preds = %2186
  %2193 = and i64 %2190, 65520
  %2194 = add nsw i64 %2193, -16
  %2195 = lshr exact i64 %2194, 4
  %2196 = add nuw nsw i64 %2195, 1
  %2197 = and i64 %2196, 1
  %2198 = icmp eq i64 %2194, 0
  br i1 %2198, label %2228, label %2199

2199:                                             ; preds = %2192
  %2200 = sub nuw nsw i64 %2196, %2197
  br label %2201

2201:                                             ; preds = %2201, %2199
  %2202 = phi i64 [ 0, %2199 ], [ %2225, %2201 ]
  %2203 = phi i64 [ %2200, %2199 ], [ %2226, %2201 ]
  %2204 = add nsw i64 %2202, %2189
  %2205 = getelementptr inbounds i8, i8* %1942, i64 %2204
  %2206 = bitcast i8* %2205 to <16 x i8>*
  %2207 = load <16 x i8>, <16 x i8>* %2206, align 1
  %2208 = zext <16 x i8> %2207 to <16 x i32>
  %2209 = add nuw nsw <16 x i32> %1951, %2208
  %2210 = icmp ult <16 x i32> %2209, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2211 = select <16 x i1> %2210, <16 x i32> %2209, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2212 = trunc <16 x i32> %2211 to <16 x i8>
  %2213 = bitcast i8* %2205 to <16 x i8>*
  store <16 x i8> %2212, <16 x i8>* %2213, align 1
  %2214 = or i64 %2202, 16
  %2215 = add nsw i64 %2214, %2189
  %2216 = getelementptr inbounds i8, i8* %1942, i64 %2215
  %2217 = bitcast i8* %2216 to <16 x i8>*
  %2218 = load <16 x i8>, <16 x i8>* %2217, align 1
  %2219 = zext <16 x i8> %2218 to <16 x i32>
  %2220 = add nuw nsw <16 x i32> %1951, %2219
  %2221 = icmp ult <16 x i32> %2220, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2222 = select <16 x i1> %2221, <16 x i32> %2220, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2223 = trunc <16 x i32> %2222 to <16 x i8>
  %2224 = bitcast i8* %2216 to <16 x i8>*
  store <16 x i8> %2223, <16 x i8>* %2224, align 1
  %2225 = add i64 %2202, 32
  %2226 = add i64 %2203, -2
  %2227 = icmp eq i64 %2226, 0
  br i1 %2227, label %2228, label %2201, !llvm.loop !18

2228:                                             ; preds = %2201, %2192
  %2229 = phi i64 [ 0, %2192 ], [ %2225, %2201 ]
  %2230 = icmp eq i64 %2197, 0
  br i1 %2230, label %2242, label %2231

2231:                                             ; preds = %2228
  %2232 = add nsw i64 %2229, %2189
  %2233 = getelementptr inbounds i8, i8* %1942, i64 %2232
  %2234 = bitcast i8* %2233 to <16 x i8>*
  %2235 = load <16 x i8>, <16 x i8>* %2234, align 1
  %2236 = zext <16 x i8> %2235 to <16 x i32>
  %2237 = add nuw nsw <16 x i32> %1951, %2236
  %2238 = icmp ult <16 x i32> %2237, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2239 = select <16 x i1> %2238, <16 x i32> %2237, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2240 = trunc <16 x i32> %2239 to <16 x i8>
  %2241 = bitcast i8* %2233 to <16 x i8>*
  store <16 x i8> %2240, <16 x i8>* %2241, align 1
  br label %2242

2242:                                             ; preds = %2228, %2231
  %2243 = icmp eq i64 %2193, %2190
  br i1 %2243, label %2258, label %2244

2244:                                             ; preds = %2242, %2186
  %2245 = phi i64 [ 0, %2186 ], [ %2193, %2242 ]
  br label %2246

2246:                                             ; preds = %2244, %2246
  %2247 = phi i64 [ %2256, %2246 ], [ %2245, %2244 ]
  %2248 = add nsw i64 %2247, %2189
  %2249 = getelementptr inbounds i8, i8* %1942, i64 %2248
  %2250 = load i8, i8* %2249, align 1
  %2251 = zext i8 %2250 to i32
  %2252 = add nuw nsw i32 %1948, %2251
  %2253 = icmp ult i32 %2252, 255
  %2254 = select i1 %2253, i32 %2252, i32 255
  %2255 = trunc i32 %2254 to i8
  store i8 %2255, i8* %2249, align 1
  %2256 = add nuw nsw i64 %2247, 1
  %2257 = icmp eq i64 %2256, %2190
  br i1 %2257, label %2258, label %2246, !llvm.loop !19

2258:                                             ; preds = %2246, %2242, %2183, %2181
  %2259 = icmp sgt i32 %2113, %2116
  br i1 %2259, label %2260, label %2322

2260:                                             ; preds = %2258
  %2261 = sub nsw i32 %2113, %2116
  %2262 = add nsw i32 %2261, 65535
  %2263 = ashr i32 %2262, 16
  switch i32 %2263, label %2320 [
    i32 1, label %2264
    i32 2, label %2285
  ]

2264:                                             ; preds = %2260
  %2265 = sub i32 %2112, %2116
  %2266 = add nsw i32 %2265, %2261
  %2267 = sdiv i32 %2266, 2
  %2268 = lshr i32 %2267, 8
  %2269 = ashr i32 %2112, 16
  %2270 = or i1 %1947, %2084
  %2271 = sext i32 %2269 to i64
  %2272 = getelementptr inbounds i8, i8* %1942, i64 %2271
  br i1 %2270, label %2275, label %2273

2273:                                             ; preds = %2264
  %2274 = trunc i32 %2268 to i8
  store i8 %2274, i8* %2272, align 1
  br label %2322

2275:                                             ; preds = %2264
  %2276 = and i32 %2268, 255
  %2277 = mul nuw nsw i32 %2276, %1948
  %2278 = lshr i32 %2277, 8
  %2279 = load i8, i8* %2272, align 1
  %2280 = zext i8 %2279 to i32
  %2281 = add nuw nsw i32 %2278, %2280
  %2282 = icmp ult i32 %2281, 255
  %2283 = select i1 %2282, i32 %2281, i32 255
  %2284 = trunc i32 %2283 to i8
  store i8 %2284, i8* %2272, align 1
  br label %2322

2285:                                             ; preds = %2260
  %2286 = sub i32 65536, %2112
  %2287 = add i32 %2286, %2116
  %2288 = sub i32 %2113, %2112
  %2289 = sub i32 %2288, %2287
  %2290 = ashr i32 %2287, 11
  %2291 = ashr i32 %2055, 11
  %2292 = mul i32 %2290, %2291
  %2293 = mul i32 %2292, %2290
  %2294 = lshr i32 %2293, 8
  %2295 = sub nsw i32 %1922, %2294
  %2296 = ashr i32 %2289, 11
  %2297 = mul i32 %2296, %2291
  %2298 = mul i32 %2297, %2296
  %2299 = lshr i32 %2298, 8
  %2300 = ashr i32 %2112, 16
  %2301 = sext i32 %2300 to i64
  %2302 = getelementptr inbounds i8, i8* %1942, i64 %2301
  %2303 = load i8, i8* %2302, align 1
  %2304 = zext i8 %2303 to i32
  %2305 = and i32 %2295, 255
  %2306 = add nuw nsw i32 %2305, %2304
  %2307 = icmp ult i32 %2306, 255
  %2308 = select i1 %2307, i32 %2306, i32 255
  %2309 = trunc i32 %2308 to i8
  store i8 %2309, i8* %2302, align 1
  %2310 = add nsw i32 %2300, 1
  %2311 = sext i32 %2310 to i64
  %2312 = getelementptr inbounds i8, i8* %1942, i64 %2311
  %2313 = load i8, i8* %2312, align 1
  %2314 = zext i8 %2313 to i32
  %2315 = and i32 %2299, 255
  %2316 = add nuw nsw i32 %2315, %2314
  %2317 = icmp ult i32 %2316, 255
  %2318 = select i1 %2317, i32 %2316, i32 255
  %2319 = trunc i32 %2318 to i8
  store i8 %2319, i8* %2312, align 1
  br label %2322

2320:                                             ; preds = %2260
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2116, i32 %2112, i32 %2116, i32 %2113, i32 2147483647, i32 %2055, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2084, i1 zeroext true) #13
  br label %2322

2321:                                             ; preds = %2107
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2109, i32 %2112, i32 %2110, i32 %2113, i32 %1956, i32 %2055, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2084, i1 zeroext true) #13
  br label %2322

2322:                                             ; preds = %2321, %2320, %2285, %2275, %2273, %2258, %2101, %2083
  %2323 = load i32, i32* %2039, align 4
  %2324 = icmp slt i32 %2051, %2323
  %2325 = select i1 %2324, i32 %2323, i32 %2051
  %2326 = add nsw i32 %2325, 65535
  %2327 = ashr i32 %2326, 16
  br label %2352

2328:                                             ; preds = %1997
  %2329 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  br i1 %1973, label %2332, label %2330

2330:                                             ; preds = %2328
  %2331 = load i32, i32* %2329, align 8
  br label %2341

2332:                                             ; preds = %2328
  %2333 = load i32, i32* %2329, align 4
  %2334 = icmp slt i32 %2333, %370
  %2335 = select i1 %2334, i32 %370, i32 %2333
  %2336 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 9
  %2337 = load i32, i32* %2336, align 8
  %2338 = load i32, i32* %1976, align 4
  %2339 = icmp eq i32 %2338, %1917
  %2340 = zext i1 %2339 to i8
  br label %2341

2341:                                             ; preds = %2332, %2330
  %2342 = phi i32 [ %2333, %2332 ], [ %2331, %2330 ]
  %2343 = phi %struct.SkAnalyticEdge* [ %1953, %2332 ], [ %1958, %2330 ]
  %2344 = phi i32 [ %2335, %2332 ], [ %1957, %2330 ]
  %2345 = phi i32 [ %2337, %2332 ], [ %1956, %2330 ]
  %2346 = phi i8 [ %2340, %2332 ], [ %1955, %2330 ]
  %2347 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 6
  store i32 %1917, i32* %2347, align 4
  %2348 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 4
  %2349 = load i32, i32* %2348, align 4
  %2350 = ashr i32 %2349, %1918
  %2351 = add nsw i32 %2350, %2342
  store i32 %2351, i32* %2329, align 8
  br label %2352

2352:                                             ; preds = %2341, %2322, %2035, %2025
  %2353 = phi %struct.SkAnalyticEdge* [ %1958, %2322 ], [ %2343, %2341 ], [ %1958, %2025 ], [ %1958, %2035 ]
  %2354 = phi i32 [ %1957, %2322 ], [ %2344, %2341 ], [ %1957, %2025 ], [ %1957, %2035 ]
  %2355 = phi i32 [ %1956, %2322 ], [ %2345, %2341 ], [ %1956, %2025 ], [ %1956, %2035 ]
  %2356 = phi i8 [ %1955, %2322 ], [ %2346, %2341 ], [ %1955, %2025 ], [ %1955, %2035 ]
  %2357 = phi i32 [ %2327, %2322 ], [ %1954, %2341 ], [ %1954, %2025 ], [ %1954, %2035 ]
  %2358 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 0
  %2359 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2358, align 8
  %2360 = load i32, i32* %1976, align 4
  %2361 = icmp sgt i32 %2360, %1917
  br i1 %2361, label %2391, label %2362

2362:                                             ; preds = %2352
  %2363 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 13
  %2364 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %2365 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 2
  %2366 = bitcast %struct.SkAnalyticEdge* %2365 to i32*
  %2367 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 6
  %2368 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %1963, i64 0, i32 3
  %2369 = bitcast %struct.SkAnalyticEdge* %1953 to %struct.SkAnalyticCubicEdge*
  %2370 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 1, i32 7
  %2371 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 2, i32 1
  %2372 = bitcast %struct.SkAnalyticEdge** %2371 to i32*
  br label %2373

2373:                                             ; preds = %2386, %2362
  %2374 = load i8, i8* %2363, align 8
  %2375 = icmp slt i8 %2374, 0
  br i1 %2375, label %2376, label %2380

2376:                                             ; preds = %2373
  %2377 = load i32, i32* %2364, align 8
  store i32 %2377, i32* %2370, align 8
  %2378 = load i32, i32* %2367, align 4
  store i32 %2378, i32* %2372, align 8
  %2379 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* %2369, i1 zeroext true) #13
  br i1 %2379, label %2386, label %2389

2380:                                             ; preds = %2373
  %2381 = icmp eq i8 %2374, 0
  br i1 %2381, label %2389, label %2382

2382:                                             ; preds = %2380
  %2383 = load i32, i32* %2364, align 8
  store i32 %2383, i32* %2366, align 8
  %2384 = load i32, i32* %2367, align 4
  store i32 %2384, i32* %2368, align 4
  %2385 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* %1963) #13
  br i1 %2385, label %2386, label %2389

2386:                                             ; preds = %2382, %2376
  %2387 = load i32, i32* %1976, align 4
  %2388 = icmp sgt i32 %2387, %1917
  br i1 %2388, label %2389, label %2373

2389:                                             ; preds = %2386, %2382, %2380, %2376
  %2390 = load i32, i32* %1976, align 4
  br label %2391

2391:                                             ; preds = %2389, %2352
  %2392 = phi i32 [ %2390, %2389 ], [ %2360, %2352 ]
  %2393 = icmp sgt i32 %2392, %1917
  br i1 %2393, label %2405, label %2394

2394:                                             ; preds = %2391
  %2395 = bitcast %struct.SkAnalyticEdge* %1953 to i64*
  %2396 = load i64, i64* %2395, align 8
  %2397 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 1
  %2398 = bitcast %struct.SkAnalyticEdge** %2397 to i64**
  %2399 = load i64*, i64** %2398, align 8
  store i64 %2396, i64* %2399, align 8
  %2400 = bitcast %struct.SkAnalyticEdge** %2397 to i64*
  %2401 = load i64, i64* %2400, align 8
  %2402 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2358, align 8
  %2403 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2402, i64 0, i32 1
  %2404 = bitcast %struct.SkAnalyticEdge** %2403 to i64*
  store i64 %2401, i64* %2404, align 8
  br label %2470

2405:                                             ; preds = %2391
  %2406 = icmp sgt i32 %1962, %2392
  %2407 = select i1 %2406, i32 %2392, i32 %1962
  %2408 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 3
  %2409 = load i32, i32* %2408, align 8
  %2410 = icmp slt i32 %2409, %1959
  br i1 %2410, label %2411, label %2450

2411:                                             ; preds = %2405
  %2412 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2353, i64 0, i32 2
  %2413 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2412, align 8
  %2414 = icmp ne %struct.SkAnalyticEdge* %2413, %1953
  %2415 = or i1 %2414, %1894
  br i1 %2415, label %2420, label %2416

2416:                                             ; preds = %2411
  %2417 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2353, i64 0, i32 3
  %2418 = load i32, i32* %2417, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %2353, i32 %1917, i32 %2418, i32 %2409, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  %2419 = load i32, i32* %2408, align 8
  br label %2420

2420:                                             ; preds = %2416, %2411
  %2421 = phi i32 [ %2409, %2411 ], [ %2419, %2416 ]
  %2422 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 1
  %2423 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2422, align 8
  %2424 = bitcast %struct.SkAnalyticEdge* %2423 to i64*
  br label %2425

2425:                                             ; preds = %2430, %2420
  %2426 = phi %struct.SkAnalyticEdge* [ %2423, %2420 ], [ %2428, %2430 ]
  %2427 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2426, i64 0, i32 1
  %2428 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2427, align 8
  %2429 = icmp eq %struct.SkAnalyticEdge* %2428, null
  br i1 %2429, label %2434, label %2430

2430:                                             ; preds = %2425
  %2431 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2426, i64 0, i32 3
  %2432 = load i32, i32* %2431, align 8
  %2433 = icmp sgt i32 %2432, %2421
  br i1 %2433, label %2425, label %2434

2434:                                             ; preds = %2430, %2425
  %2435 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2426, i64 0, i32 0
  %2436 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2435, align 8
  %2437 = icmp eq %struct.SkAnalyticEdge* %2436, %1953
  br i1 %2437, label %2450, label %2438

2438:                                             ; preds = %2434
  %2439 = bitcast %struct.SkAnalyticEdge* %1953 to i64*
  %2440 = load i64, i64* %2439, align 8
  store i64 %2440, i64* %2424, align 8
  %2441 = bitcast %struct.SkAnalyticEdge** %2422 to i64*
  %2442 = load i64, i64* %2441, align 8
  %2443 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2358, align 8
  %2444 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2443, i64 0, i32 1
  %2445 = bitcast %struct.SkAnalyticEdge** %2444 to i64*
  store i64 %2442, i64* %2445, align 8
  store %struct.SkAnalyticEdge* %2426, %struct.SkAnalyticEdge** %2422, align 8
  %2446 = bitcast %struct.SkAnalyticEdge* %2426 to i64*
  %2447 = load i64, i64* %2446, align 8
  store i64 %2447, i64* %2439, align 8
  %2448 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2435, align 8
  %2449 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2448, i64 0, i32 1
  store %struct.SkAnalyticEdge* %1953, %struct.SkAnalyticEdge** %2449, align 8
  store %struct.SkAnalyticEdge* %1953, %struct.SkAnalyticEdge** %2435, align 8
  br label %2450

2450:                                             ; preds = %2438, %2434, %2405
  %2451 = phi i32 [ %2409, %2405 ], [ %1959, %2434 ], [ %1959, %2438 ]
  br i1 %1744, label %2470, label %2452

2452:                                             ; preds = %2450
  %2453 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 1
  %2454 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2453, align 8
  %2455 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2454, i64 0, i32 1
  %2456 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2455, align 8
  %2457 = icmp eq %struct.SkAnalyticEdge* %2456, null
  br i1 %2457, label %2470, label %2458

2458:                                             ; preds = %2452
  %2459 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2454, i64 0, i32 3
  %2460 = load i32, i32* %2459, align 8
  %2461 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2454, i64 0, i32 4
  %2462 = load i32, i32* %2461, align 4
  %2463 = add nsw i32 %2462, %2460
  %2464 = load i32, i32* %2408, align 8
  %2465 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1953, i64 0, i32 4
  %2466 = load i32, i32* %2465, align 4
  %2467 = add nsw i32 %2466, %2464
  %2468 = icmp sgt i32 %2463, %2467
  %2469 = select i1 %2468, i32 %1949, i32 %2407
  br label %2470

2470:                                             ; preds = %2458, %2452, %2450, %2394
  %2471 = phi i32 [ %2407, %2450 ], [ %1962, %2394 ], [ %2407, %2452 ], [ %2469, %2458 ]
  %2472 = phi i32 [ %2451, %2450 ], [ %1959, %2394 ], [ %2451, %2452 ], [ %2451, %2458 ]
  %2473 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2359, i64 0, i32 7
  %2474 = load i32, i32* %2473, align 8
  %2475 = icmp sgt i32 %2474, %1902
  br i1 %2475, label %2476, label %1952

2476:                                             ; preds = %2470
  %2477 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2359, i64 0, i32 7
  br label %2478

2478:                                             ; preds = %2476, %1941
  %2479 = phi i32 [ 2147483647, %1941 ], [ %2471, %2476 ]
  %2480 = phi i1 [ %1752, %1941 ], [ %1971, %2476 ]
  %2481 = phi %struct.SkAnalyticEdge* [ %1910, %1941 ], [ %2359, %2476 ]
  %2482 = phi %struct.SkAnalyticEdge* [ %12, %1941 ], [ %2353, %2476 ]
  %2483 = phi i32 [ %370, %1941 ], [ %2354, %2476 ]
  %2484 = phi i32 [ 0, %1941 ], [ %2355, %2476 ]
  %2485 = phi i8 [ 0, %1941 ], [ %2356, %2476 ]
  %2486 = phi i32* [ %1943, %1941 ], [ %2477, %2476 ]
  br i1 %2480, label %2487, label %2764

2487:                                             ; preds = %2478
  br i1 %1743, label %2488, label %2518

2488:                                             ; preds = %2487
  %2489 = and i8 %2485, 1
  %2490 = icmp ne i8 %2489, 0
  %2491 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 2
  %2492 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2491, align 8
  %2493 = icmp eq %struct.SkAnalyticEdge* %2492, null
  %2494 = icmp eq %struct.SkAnalyticEdge* %2492, %13
  %2495 = or i1 %2493, %2494
  br i1 %2495, label %2500, label %2496

2496:                                             ; preds = %2488
  %2497 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2492, i64 0, i32 3
  %2498 = load i32, i32* %2497, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %2482, i32 %1902, i32 %2483, i32 %2498, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  %2499 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2491, align 8
  br label %2500

2500:                                             ; preds = %2496, %2488
  %2501 = phi %struct.SkAnalyticEdge* [ %2492, %2488 ], [ %2499, %2496 ]
  %2502 = icmp eq %struct.SkAnalyticEdge* %2501, null
  br i1 %2502, label %2503, label %2509

2503:                                             ; preds = %2500
  %2504 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 10
  store i32 %2483, i32* %2504, align 4
  %2505 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 11
  store i32 %1902, i32* %2505, align 8
  %2506 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 12
  store i32 %2484, i32* %2506, align 4
  %2507 = load i32, i32* %319, align 8
  %2508 = load i32, i32* %321, align 8
  store i32 %2507, i32* %1895, align 4
  store i32 %1902, i32* %1896, align 8
  store i32 %2508, i32* %1897, align 4
  store %struct.SkAnalyticEdge* %13, %struct.SkAnalyticEdge** %2491, align 8
  br label %2509

2509:                                             ; preds = %2503, %2500
  store i32 %1917, i32* %1898, align 4
  %2510 = load i32, i32* %320, align 4
  %2511 = ashr i32 %2510, %1918
  %2512 = load i32, i32* %319, align 8
  %2513 = add nsw i32 %2512, %2511
  store i32 %2513, i32* %319, align 8
  %2514 = or i1 %1909, %2490
  br i1 %2514, label %2515, label %2764

2515:                                             ; preds = %2509
  %2516 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 3
  %2517 = load i32, i32* %2516, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %2482, i32 %1917, i32 %2517, i32 %2513, %class.AdditiveBlitter* nonnull %175, i8* %1942, i1 zeroext true, i1 zeroext false, i32 %370, i32 %373) #13
  br label %2764

2518:                                             ; preds = %2487
  %2519 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 3
  %2520 = load i32, i32* %2519, align 4
  %2521 = icmp sgt i32 %2520, %370
  %2522 = select i1 %2521, i32 %2520, i32 %370
  %2523 = icmp eq i8 %1923, -1
  br i1 %2523, label %2524, label %2545

2524:                                             ; preds = %2518
  %2525 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 1
  %2526 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2525, align 8
  %2527 = icmp ne %struct.SkAnalyticEdge* %2482, null
  %2528 = icmp ne %struct.SkAnalyticEdge* %2526, null
  %2529 = and i1 %2527, %2528
  br i1 %2529, label %2530, label %2545

2530:                                             ; preds = %2524
  %2531 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 7
  %2532 = load i32, i32* %2531, align 8
  %2533 = icmp slt i32 %2532, %1917
  br i1 %2533, label %2534, label %2545

2534:                                             ; preds = %2530
  %2535 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2526, i64 0, i32 3
  %2536 = load i32, i32* %2535, align 8
  %2537 = add nsw i32 %2536, 65536
  %2538 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2482, i64 0, i32 4
  %2539 = load i32, i32* %2538, align 4
  %2540 = icmp slt i32 %2539, 0
  %2541 = sub nsw i32 0, %2539
  %2542 = select i1 %2540, i32 %2541, i32 %2539
  %2543 = sub nsw i32 %2520, %2542
  %2544 = icmp sge i32 %2537, %2543
  br label %2545

2545:                                             ; preds = %2534, %2530, %2524, %2518
  %2546 = phi i1 [ false, %2518 ], [ false, %2530 ], [ false, %2524 ], [ %2544, %2534 ]
  %2547 = icmp sgt i32 %2483, %373
  br i1 %2547, label %2764, label %2548

2548:                                             ; preds = %2545
  %2549 = icmp sgt i32 %2522, %373
  br i1 %2549, label %2550, label %2560

2550:                                             ; preds = %2548
  %2551 = icmp sgt i32 %2483, %2522
  %2552 = select i1 %2551, i32 %2522, i32 %2483
  %2553 = select i1 %2551, i32 %2483, i32 %2522
  %2554 = icmp slt i32 %2552, %373
  %2555 = select i1 %2554, i32 %373, i32 %2552
  %2556 = icmp sgt i32 %2553, %373
  %2557 = select i1 %2556, i32 %373, i32 %2553
  %2558 = add nsw i32 %2555, %2557
  %2559 = sdiv i32 %2558, 2
  br label %2560

2560:                                             ; preds = %2550, %2548
  %2561 = phi i32 [ %2559, %2550 ], [ %2522, %2548 ]
  %2562 = phi i32 [ %2559, %2550 ], [ %373, %2548 ]
  %2563 = icmp eq i32 %2483, %373
  %2564 = icmp eq i32 %2561, %2562
  %2565 = and i1 %2563, %2564
  br i1 %2565, label %2764, label %2566

2566:                                             ; preds = %2560
  %2567 = icmp slt i32 %2561, %2483
  %2568 = select i1 %2567, i32 %2561, i32 %2483
  %2569 = select i1 %2567, i32 %2483, i32 %2561
  %2570 = icmp slt i32 %2562, %373
  %2571 = select i1 %2570, i32 %2562, i32 %373
  %2572 = select i1 %2570, i32 %373, i32 %2562
  %2573 = add nsw i32 %2569, 65535
  %2574 = and i32 %2573, -65536
  %2575 = and i32 %2571, -65536
  %2576 = icmp slt i32 %2575, %2574
  br i1 %2576, label %2763, label %2577

2577:                                             ; preds = %2566
  %2578 = icmp sgt i32 %2574, %2568
  br i1 %2578, label %2579, label %2642

2579:                                             ; preds = %2577
  %2580 = sub nsw i32 %2574, %2568
  %2581 = add nsw i32 %2580, 65535
  %2582 = ashr i32 %2581, 16
  switch i32 %2582, label %2641 [
    i32 1, label %2583
    i32 2, label %2606
  ]

2583:                                             ; preds = %2579
  %2584 = sub i32 %2574, %2569
  %2585 = add nsw i32 %2584, %2580
  %2586 = sdiv i32 %2585, 2
  %2587 = lshr i32 %2586, 8
  %2588 = ashr i32 %2568, 16
  %2589 = icmp ne i8 %1923, -1
  %2590 = or i1 %2589, %2546
  %2591 = sext i32 %2588 to i64
  %2592 = getelementptr inbounds i8, i8* %1942, i64 %2591
  br i1 %2590, label %2595, label %2593

2593:                                             ; preds = %2583
  %2594 = trunc i32 %2587 to i8
  store i8 %2594, i8* %2592, align 1
  br label %2642

2595:                                             ; preds = %2583
  %2596 = and i32 %2587, 255
  %2597 = and i32 %1922, 255
  %2598 = mul nuw nsw i32 %2596, %2597
  %2599 = lshr i32 %2598, 8
  %2600 = load i8, i8* %2592, align 1
  %2601 = zext i8 %2600 to i32
  %2602 = add nuw nsw i32 %2599, %2601
  %2603 = icmp ult i32 %2602, 255
  %2604 = select i1 %2603, i32 %2602, i32 255
  %2605 = trunc i32 %2604 to i8
  store i8 %2605, i8* %2592, align 1
  br label %2642

2606:                                             ; preds = %2579
  %2607 = sub i32 -65536, %2568
  %2608 = add i32 %2574, %2607
  %2609 = sub i32 %2569, %2568
  %2610 = sub i32 %2609, %2608
  %2611 = ashr i32 %2608, 11
  %2612 = ashr i32 %2484, 11
  %2613 = mul i32 %2611, %2612
  %2614 = mul i32 %2613, %2611
  %2615 = lshr i32 %2614, 8
  %2616 = ashr i32 %2610, 11
  %2617 = mul i32 %2616, %2612
  %2618 = mul i32 %2617, %2616
  %2619 = lshr i32 %2618, 8
  %2620 = sub nsw i32 %1922, %2619
  %2621 = ashr i32 %2568, 16
  %2622 = sext i32 %2621 to i64
  %2623 = getelementptr inbounds i8, i8* %1942, i64 %2622
  %2624 = load i8, i8* %2623, align 1
  %2625 = zext i8 %2624 to i32
  %2626 = and i32 %2615, 255
  %2627 = add nuw nsw i32 %2626, %2625
  %2628 = icmp ult i32 %2627, 255
  %2629 = select i1 %2628, i32 %2627, i32 255
  %2630 = trunc i32 %2629 to i8
  store i8 %2630, i8* %2623, align 1
  %2631 = add nsw i32 %2621, 1
  %2632 = sext i32 %2631 to i64
  %2633 = getelementptr inbounds i8, i8* %1942, i64 %2632
  %2634 = load i8, i8* %2633, align 1
  %2635 = zext i8 %2634 to i32
  %2636 = and i32 %2620, 255
  %2637 = add nuw nsw i32 %2636, %2635
  %2638 = icmp ult i32 %2637, 255
  %2639 = select i1 %2638, i32 %2637, i32 255
  %2640 = trunc i32 %2639 to i8
  store i8 %2640, i8* %2633, align 1
  br label %2642

2641:                                             ; preds = %2579
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2568, i32 %2574, i32 %2569, i32 %2574, i32 %2484, i32 2147483647, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2546, i1 zeroext true) #13
  br label %2642

2642:                                             ; preds = %2641, %2606, %2595, %2593, %2577
  %2643 = icmp sgt i32 %2575, %2574
  br i1 %2643, label %2644, label %2722

2644:                                             ; preds = %2642
  %2645 = sub nsw i32 %2575, %2574
  %2646 = icmp sgt i32 %2645, 0
  br i1 %2646, label %2647, label %2722

2647:                                             ; preds = %2644
  %2648 = lshr exact i32 %2645, 16
  %2649 = ashr i32 %2573, 16
  %2650 = and i32 %1922, 255
  %2651 = sext i32 %2649 to i64
  %2652 = zext i32 %2648 to i64
  %2653 = icmp ult i32 %2645, 1048576
  br i1 %2653, label %2708, label %2654

2654:                                             ; preds = %2647
  %2655 = and i64 %2652, 65520
  %2656 = insertelement <16 x i32> undef, i32 %2650, i32 0
  %2657 = shufflevector <16 x i32> %2656, <16 x i32> undef, <16 x i32> zeroinitializer
  %2658 = add nsw i64 %2655, -16
  %2659 = lshr exact i64 %2658, 4
  %2660 = add nuw nsw i64 %2659, 1
  %2661 = and i64 %2660, 1
  %2662 = icmp eq i64 %2658, 0
  br i1 %2662, label %2692, label %2663

2663:                                             ; preds = %2654
  %2664 = sub nuw nsw i64 %2660, %2661
  br label %2665

2665:                                             ; preds = %2665, %2663
  %2666 = phi i64 [ 0, %2663 ], [ %2689, %2665 ]
  %2667 = phi i64 [ %2664, %2663 ], [ %2690, %2665 ]
  %2668 = add nsw i64 %2666, %2651
  %2669 = getelementptr inbounds i8, i8* %1942, i64 %2668
  %2670 = bitcast i8* %2669 to <16 x i8>*
  %2671 = load <16 x i8>, <16 x i8>* %2670, align 1
  %2672 = zext <16 x i8> %2671 to <16 x i32>
  %2673 = add nuw nsw <16 x i32> %2657, %2672
  %2674 = icmp ult <16 x i32> %2673, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2675 = select <16 x i1> %2674, <16 x i32> %2673, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2676 = trunc <16 x i32> %2675 to <16 x i8>
  %2677 = bitcast i8* %2669 to <16 x i8>*
  store <16 x i8> %2676, <16 x i8>* %2677, align 1
  %2678 = or i64 %2666, 16
  %2679 = add nsw i64 %2678, %2651
  %2680 = getelementptr inbounds i8, i8* %1942, i64 %2679
  %2681 = bitcast i8* %2680 to <16 x i8>*
  %2682 = load <16 x i8>, <16 x i8>* %2681, align 1
  %2683 = zext <16 x i8> %2682 to <16 x i32>
  %2684 = add nuw nsw <16 x i32> %2657, %2683
  %2685 = icmp ult <16 x i32> %2684, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2686 = select <16 x i1> %2685, <16 x i32> %2684, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2687 = trunc <16 x i32> %2686 to <16 x i8>
  %2688 = bitcast i8* %2680 to <16 x i8>*
  store <16 x i8> %2687, <16 x i8>* %2688, align 1
  %2689 = add i64 %2666, 32
  %2690 = add i64 %2667, -2
  %2691 = icmp eq i64 %2690, 0
  br i1 %2691, label %2692, label %2665, !llvm.loop !20

2692:                                             ; preds = %2665, %2654
  %2693 = phi i64 [ 0, %2654 ], [ %2689, %2665 ]
  %2694 = icmp eq i64 %2661, 0
  br i1 %2694, label %2706, label %2695

2695:                                             ; preds = %2692
  %2696 = add nsw i64 %2693, %2651
  %2697 = getelementptr inbounds i8, i8* %1942, i64 %2696
  %2698 = bitcast i8* %2697 to <16 x i8>*
  %2699 = load <16 x i8>, <16 x i8>* %2698, align 1
  %2700 = zext <16 x i8> %2699 to <16 x i32>
  %2701 = add nuw nsw <16 x i32> %2657, %2700
  %2702 = icmp ult <16 x i32> %2701, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2703 = select <16 x i1> %2702, <16 x i32> %2701, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2704 = trunc <16 x i32> %2703 to <16 x i8>
  %2705 = bitcast i8* %2697 to <16 x i8>*
  store <16 x i8> %2704, <16 x i8>* %2705, align 1
  br label %2706

2706:                                             ; preds = %2692, %2695
  %2707 = icmp eq i64 %2655, %2652
  br i1 %2707, label %2722, label %2708

2708:                                             ; preds = %2706, %2647
  %2709 = phi i64 [ 0, %2647 ], [ %2655, %2706 ]
  br label %2710

2710:                                             ; preds = %2708, %2710
  %2711 = phi i64 [ %2720, %2710 ], [ %2709, %2708 ]
  %2712 = add nsw i64 %2711, %2651
  %2713 = getelementptr inbounds i8, i8* %1942, i64 %2712
  %2714 = load i8, i8* %2713, align 1
  %2715 = zext i8 %2714 to i32
  %2716 = add nuw nsw i32 %2650, %2715
  %2717 = icmp ult i32 %2716, 255
  %2718 = select i1 %2717, i32 %2716, i32 255
  %2719 = trunc i32 %2718 to i8
  store i8 %2719, i8* %2713, align 1
  %2720 = add nuw nsw i64 %2711, 1
  %2721 = icmp eq i64 %2720, %2652
  br i1 %2721, label %2722, label %2710, !llvm.loop !21

2722:                                             ; preds = %2710, %2706, %2644, %2642
  %2723 = icmp sgt i32 %2572, %2575
  br i1 %2723, label %2724, label %2764

2724:                                             ; preds = %2722
  %2725 = sub nsw i32 %2572, %2575
  %2726 = add nsw i32 %2725, 65535
  %2727 = ashr i32 %2726, 16
  switch i32 %2727, label %2762 [
    i32 1, label %2728
    i32 2, label %2751
  ]

2728:                                             ; preds = %2724
  %2729 = sub i32 %2571, %2575
  %2730 = add nsw i32 %2729, %2725
  %2731 = sdiv i32 %2730, 2
  %2732 = lshr i32 %2731, 8
  %2733 = ashr i32 %2571, 16
  %2734 = icmp ne i8 %1923, -1
  %2735 = or i1 %2734, %2546
  %2736 = sext i32 %2733 to i64
  %2737 = getelementptr inbounds i8, i8* %1942, i64 %2736
  br i1 %2735, label %2740, label %2738

2738:                                             ; preds = %2728
  %2739 = trunc i32 %2732 to i8
  store i8 %2739, i8* %2737, align 1
  br label %2764

2740:                                             ; preds = %2728
  %2741 = and i32 %2732, 255
  %2742 = and i32 %1922, 255
  %2743 = mul nuw nsw i32 %2741, %2742
  %2744 = lshr i32 %2743, 8
  %2745 = load i8, i8* %2737, align 1
  %2746 = zext i8 %2745 to i32
  %2747 = add nuw nsw i32 %2744, %2746
  %2748 = icmp ult i32 %2747, 255
  %2749 = select i1 %2748, i32 %2747, i32 255
  %2750 = trunc i32 %2749 to i8
  store i8 %2750, i8* %2737, align 1
  br label %2764

2751:                                             ; preds = %2724
  %2752 = ashr i32 %2571, 16
  %2753 = sext i32 %2752 to i64
  %2754 = getelementptr inbounds i8, i8* %1942, i64 %2753
  %2755 = load i8, i8* %2754, align 1
  %2756 = zext i8 %2755 to i32
  %2757 = and i32 %1922, 255
  %2758 = add nuw nsw i32 %2757, %2756
  %2759 = icmp ult i32 %2758, 255
  %2760 = select i1 %2759, i32 %2758, i32 255
  %2761 = trunc i32 %2760 to i8
  store i8 %2761, i8* %2754, align 1
  br label %2764

2762:                                             ; preds = %2724
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2575, i32 %2571, i32 %2575, i32 %2572, i32 2147483647, i32 0, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2546, i1 zeroext true) #13
  br label %2764

2763:                                             ; preds = %2566
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %175, i32 %1924, i32 %2568, i32 %2571, i32 %2569, i32 %2572, i32 %2484, i32 0, i8 zeroext %1923, i8* %1942, i1 zeroext true, i1 zeroext %2546, i1 zeroext true) #13
  br label %2764

2764:                                             ; preds = %2478, %2509, %2515, %2545, %2560, %2722, %2738, %2740, %2751, %2762, %2763
  %2765 = icmp slt i32 %1917, %1899
  br i1 %2765, label %2766, label %2899

2766:                                             ; preds = %2764
  %2767 = load i32, i32* %2486, align 8
  %2768 = icmp sgt i32 %2767, %1917
  br i1 %2768, label %2769, label %2772

2769:                                             ; preds = %2766
  %2770 = icmp sgt i32 %2479, %2767
  %2771 = select i1 %2770, i32 %2767, i32 %2479
  br label %2897

2772:                                             ; preds = %2766
  %2773 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2481, i64 0, i32 1
  %2774 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2773, align 8
  %2775 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2774, i64 0, i32 3
  %2776 = load i32, i32* %2775, align 8
  %2777 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2481, i64 0, i32 3
  %2778 = load i32, i32* %2777, align 8
  %2779 = icmp sgt i32 %2776, %2778
  br i1 %2779, label %2821, label %2780

2780:                                             ; preds = %2772
  %2781 = add nsw i32 %1917, 16384
  br label %2782

2782:                                             ; preds = %2815, %2780
  %2783 = phi i32 [ %2479, %2780 ], [ %2809, %2815 ]
  %2784 = phi %struct.SkAnalyticEdge* [ %2774, %2780 ], [ %2817, %2815 ]
  %2785 = phi %struct.SkAnalyticEdge* [ %2481, %2780 ], [ %2811, %2815 ]
  %2786 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2784, i64 0, i32 1
  %2787 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2786, align 8
  %2788 = icmp eq %struct.SkAnalyticEdge* %2787, null
  br i1 %2788, label %2802, label %2789

2789:                                             ; preds = %2782
  %2790 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2784, i64 0, i32 3
  %2791 = load i32, i32* %2790, align 8
  %2792 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2784, i64 0, i32 4
  %2793 = load i32, i32* %2792, align 4
  %2794 = add nsw i32 %2793, %2791
  %2795 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2785, i64 0, i32 3
  %2796 = load i32, i32* %2795, align 8
  %2797 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2785, i64 0, i32 4
  %2798 = load i32, i32* %2797, align 4
  %2799 = add nsw i32 %2798, %2796
  %2800 = icmp sgt i32 %2794, %2799
  %2801 = select i1 %2800, i32 %2781, i32 %2783
  br label %2802

2802:                                             ; preds = %2789, %2782
  %2803 = phi i32 [ %2783, %2782 ], [ %2801, %2789 ]
  %2804 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2785, i64 0, i32 8
  %2805 = load i32, i32* %2804, align 4
  %2806 = icmp sgt i32 %2805, %1917
  %2807 = icmp sgt i32 %2803, %2805
  %2808 = and i1 %2806, %2807
  %2809 = select i1 %2808, i32 %2805, i32 %2803
  %2810 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2785, i64 0, i32 0
  %2811 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2810, align 8
  %2812 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2811, i64 0, i32 7
  %2813 = load i32, i32* %2812, align 8
  %2814 = icmp sgt i32 %2813, %1917
  br i1 %2814, label %2818, label %2815

2815:                                             ; preds = %2802
  %2816 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2811, i64 0, i32 1
  %2817 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2816, align 8
  br label %2782

2818:                                             ; preds = %2802
  %2819 = icmp sgt i32 %2809, %2813
  %2820 = select i1 %2819, i32 %2813, i32 %2809
  br label %2897

2821:                                             ; preds = %2772, %2826
  %2822 = phi %struct.SkAnalyticEdge* [ %2824, %2826 ], [ %2774, %2772 ]
  %2823 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2822, i64 0, i32 1
  %2824 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2823, align 8
  %2825 = icmp eq %struct.SkAnalyticEdge* %2824, null
  br i1 %2825, label %2830, label %2826

2826:                                             ; preds = %2821
  %2827 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2822, i64 0, i32 3
  %2828 = load i32, i32* %2827, align 8
  %2829 = icmp sgt i32 %2828, %2778
  br i1 %2829, label %2821, label %2830

2830:                                             ; preds = %2826, %2821
  %2831 = add nsw i32 %1917, 16384
  br label %2832

2832:                                             ; preds = %2883, %2830
  %2833 = phi i32 [ %2479, %2830 ], [ %2890, %2883 ]
  %2834 = phi %struct.SkAnalyticEdge* [ %2481, %2830 ], [ %2837, %2883 ]
  %2835 = phi %struct.SkAnalyticEdge* [ %2822, %2830 ], [ %2834, %2883 ]
  %2836 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 0
  %2837 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2836, align 8
  %2838 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 3
  %2839 = ptrtoint %struct.SkAnalyticEdge* %2837 to i64
  br label %2840

2840:                                             ; preds = %2845, %2832
  %2841 = phi %struct.SkAnalyticEdge* [ %2835, %2832 ], [ %2843, %2845 ]
  %2842 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2841, i64 0, i32 0
  %2843 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2842, align 8
  %2844 = icmp eq %struct.SkAnalyticEdge* %2843, %2834
  br i1 %2844, label %2865, label %2845

2845:                                             ; preds = %2840
  %2846 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2843, i64 0, i32 3
  %2847 = load i32, i32* %2846, align 8
  %2848 = load i32, i32* %2838, align 8
  %2849 = icmp slt i32 %2847, %2848
  br i1 %2849, label %2840, label %2850

2850:                                             ; preds = %2845
  %2851 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2841, i64 0, i32 0
  %2852 = bitcast %struct.SkAnalyticEdge* %2834 to i64*
  %2853 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 1
  %2854 = bitcast %struct.SkAnalyticEdge** %2853 to i64**
  %2855 = load i64*, i64** %2854, align 8
  store i64 %2839, i64* %2855, align 8
  %2856 = bitcast %struct.SkAnalyticEdge** %2853 to i64*
  %2857 = load i64, i64* %2856, align 8
  %2858 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2836, align 8
  %2859 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2858, i64 0, i32 1
  %2860 = bitcast %struct.SkAnalyticEdge** %2859 to i64*
  store i64 %2857, i64* %2860, align 8
  store %struct.SkAnalyticEdge* %2841, %struct.SkAnalyticEdge** %2853, align 8
  %2861 = bitcast %struct.SkAnalyticEdge* %2841 to i64*
  %2862 = load i64, i64* %2861, align 8
  store i64 %2862, i64* %2852, align 8
  %2863 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2851, align 8
  %2864 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2863, i64 0, i32 1
  store %struct.SkAnalyticEdge* %2834, %struct.SkAnalyticEdge** %2864, align 8
  store %struct.SkAnalyticEdge* %2834, %struct.SkAnalyticEdge** %2851, align 8
  br label %2865

2865:                                             ; preds = %2840, %2850
  %2866 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 1
  %2867 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2866, align 8
  %2868 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2867, i64 0, i32 1
  %2869 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2868, align 8
  %2870 = icmp eq %struct.SkAnalyticEdge* %2869, null
  br i1 %2870, label %2883, label %2871

2871:                                             ; preds = %2865
  %2872 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2867, i64 0, i32 3
  %2873 = load i32, i32* %2872, align 8
  %2874 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2867, i64 0, i32 4
  %2875 = load i32, i32* %2874, align 4
  %2876 = add nsw i32 %2875, %2873
  %2877 = load i32, i32* %2838, align 8
  %2878 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 4
  %2879 = load i32, i32* %2878, align 4
  %2880 = add nsw i32 %2879, %2877
  %2881 = icmp sgt i32 %2876, %2880
  %2882 = select i1 %2881, i32 %2831, i32 %2833
  br label %2883

2883:                                             ; preds = %2871, %2865
  %2884 = phi i32 [ %2833, %2865 ], [ %2882, %2871 ]
  %2885 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 8
  %2886 = load i32, i32* %2885, align 4
  %2887 = icmp sgt i32 %2886, %1917
  %2888 = icmp sgt i32 %2884, %2886
  %2889 = and i1 %2887, %2888
  %2890 = select i1 %2889, i32 %2886, i32 %2884
  %2891 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2837, i64 0, i32 7
  %2892 = load i32, i32* %2891, align 8
  %2893 = icmp sgt i32 %2892, %1917
  br i1 %2893, label %2894, label %2832

2894:                                             ; preds = %2883
  %2895 = icmp sgt i32 %2890, %2892
  %2896 = select i1 %2895, i32 %2892, i32 %2890
  br label %2897

2897:                                             ; preds = %2894, %2818, %2769
  %2898 = phi i32 [ %2771, %2769 ], [ %2896, %2894 ], [ %2820, %2818 ]
  br label %1900

2899:                                             ; preds = %2764, %475, %436, %457
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %235) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %234) #13
  br label %2900

2900:                                             ; preds = %199, %203, %217, %221, %2899
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %183) #13
  %2901 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %11, i64 0, i32 0, i32 2
  %2902 = bitcast %class.SkTDArray.16* %2901 to i8**
  %2903 = load i8*, i8** %2902, align 8
  call void @_Z7sk_freePv(i8* %2903) #13
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %178) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %143, align 8
  %2904 = load %class.SkBlitter*, %class.SkBlitter** %145, align 8
  %2905 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 2
  %2906 = bitcast %class.SkBlitter* %2904 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %2907 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %2906, align 8
  %2908 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %2907, i64 7
  %2909 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %2908, align 8
  call void %2909(%class.SkBlitter* %2904, %struct.SkMask* dereferenceable(32) %2905, %struct.SkIRect* dereferenceable(16) %161) #13
  %2910 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %20, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %2910) #13
  call void @llvm.lifetime.end.p0i8(i64 1128, i8* nonnull %140) #13
  br label %7516

2911:                                             ; preds = %75, %83
  br i1 %80, label %5215, label %2912

2912:                                             ; preds = %2911
  %2913 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #13
  %2914 = icmp eq i32 %2913, 0
  br i1 %2914, label %2915, label %5215

2915:                                             ; preds = %2912
  %2916 = bitcast %class.RunBasedAdditiveBlitter* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %2916) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2916, i8 -86, i64 96, i1 false)
  call void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter* nonnull %21, %class.SkBlitter* %1, %struct.SkIRect* dereferenceable(16) %2, %struct.SkIRect* dereferenceable(16) %3, i1 zeroext false)
  %2917 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %21, i64 0, i32 0
  %2918 = load i32, i32* %33, align 4
  %2919 = load i32, i32* %30, align 4
  %2920 = bitcast %class.SkAnalyticEdgeBuilder* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %2920) #13
  %2921 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0, i32 3, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2921, i8 -86, i64 544, i1 false) #13
  %2922 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2922, align 8
  %2923 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0, i32 1
  %2924 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %2925 = bitcast i8* %2924 to %class.SkArenaAlloc*
  %2926 = bitcast i8*** %2923 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2926, i8 0, i64 24, i1 false) #13
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %2925, i8* %2921, i64 512, i64 512) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2922, align 8
  %2927 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0
  %2928 = select i1 %76, %struct.SkIRect* null, %struct.SkIRect* %3
  %2929 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %2927, %class.SkPath* dereferenceable(16) %0, %struct.SkIRect* %2928) #13
  %2930 = bitcast i8*** %2923 to %struct.SkAnalyticEdge***
  %2931 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %2930, align 8
  %2932 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %2933 = load i32, i32* %2932, align 4
  %2934 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %2935 = load i32, i32* %2934, align 4
  %2936 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %2937 = load i32, i32* %2936, align 4
  %2938 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %2939 = load i32, i32* %2938, align 4
  %2940 = icmp eq i32 %2929, 0
  br i1 %2940, label %2941, label %2975

2941:                                             ; preds = %2915
  %2942 = load i8, i8* %77, align 2
  %2943 = and i8 %2942, 2
  %2944 = icmp eq i8 %2943, 0
  br i1 %2944, label %5209, label %2945

2945:                                             ; preds = %2941
  %2946 = icmp slt i32 %2935, %2918
  %2947 = select i1 %2946, i32 %2918, i32 %2935
  %2948 = icmp sgt i32 %2939, %2919
  %2949 = select i1 %2948, i32 %2919, i32 %2939
  %2950 = sext i32 %2937 to i64
  %2951 = sext i32 %2933 to i64
  %2952 = sub nsw i64 %2950, %2951
  %2953 = sext i32 %2949 to i64
  %2954 = sext i32 %2947 to i64
  %2955 = sub nsw i64 %2953, %2954
  %2956 = icmp slt i64 %2952, 1
  %2957 = icmp slt i64 %2955, 1
  %2958 = or i1 %2956, %2957
  br i1 %2958, label %5209, label %2959

2959:                                             ; preds = %2945
  %2960 = or i64 %2955, %2952
  %2961 = add nsw i64 %2960, 2147483648
  %2962 = icmp ugt i64 %2961, 4294967295
  br i1 %2962, label %5209, label %2963

2963:                                             ; preds = %2959
  %2964 = bitcast %class.RunBasedAdditiveBlitter* %21 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %2965 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %2964, align 8
  %2966 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %2965, i64 14
  %2967 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %2966, align 8
  %2968 = call %class.SkBlitter* %2967(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %2969 = sub i32 %2937, %2933
  %2970 = sub i32 %2949, %2947
  %2971 = bitcast %class.SkBlitter* %2968 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %2972 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %2971, align 8
  %2973 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %2972, i64 5
  %2974 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %2973, align 8
  call void %2974(%class.SkBlitter* %2968, i32 %2933, i32 %2947, i32 %2969, i32 %2970) #13
  br label %5209

2975:                                             ; preds = %2915
  %2976 = bitcast %struct.SkAnalyticEdge* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2976) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2976, i8 -86, i64 72, i1 false) #13
  %2977 = bitcast %struct.SkAnalyticEdge* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2977) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2977, i8 -86, i64 72, i1 false) #13
  %2978 = getelementptr inbounds %class.anon, %class.anon* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2978) #13
  %2979 = icmp slt i32 %2929, 2
  br i1 %2979, label %2980, label %2981

2980:                                             ; preds = %2975
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2978) #13
  br label %3038

2981:                                             ; preds = %2975
  %2982 = add nsw i32 %2929, -2
  %2983 = call i32 @llvm.ctlz.i32(i32 %2982, i1 false) #13, !range !9
  %2984 = shl nuw nsw i32 %2983, 1
  %2985 = sub nsw i32 64, %2984
  call void @_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %2985, %struct.SkAnalyticEdge** %2931, i32 %2929, %class.anon* nonnull dereferenceable(1) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2978) #13
  %2986 = zext i32 %2929 to i64
  %2987 = add nsw i64 %2986, -1
  %2988 = and i64 %2987, 1
  %2989 = icmp eq i32 %2929, 2
  br i1 %2989, label %3022, label %2990

2990:                                             ; preds = %2981
  %2991 = sub nsw i64 %2987, %2988
  br label %2992

2992:                                             ; preds = %2992, %2990
  %2993 = phi i64 [ 1, %2990 ], [ %3019, %2992 ]
  %2994 = phi i64 [ %2991, %2990 ], [ %3020, %2992 ]
  %2995 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %2993
  %2996 = bitcast %struct.SkAnalyticEdge** %2995 to i64*
  %2997 = load i64, i64* %2996, align 8
  %2998 = add nsw i64 %2993, -1
  %2999 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %2998
  %3000 = bitcast %struct.SkAnalyticEdge** %2999 to i64**
  %3001 = load i64*, i64** %3000, align 8
  store i64 %2997, i64* %3001, align 8
  %3002 = bitcast %struct.SkAnalyticEdge** %2999 to i64*
  %3003 = load i64, i64* %3002, align 8
  %3004 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2995, align 8
  %3005 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3004, i64 0, i32 1
  %3006 = bitcast %struct.SkAnalyticEdge** %3005 to i64*
  store i64 %3003, i64* %3006, align 8
  %3007 = add nuw nsw i64 %2993, 1
  %3008 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %3007
  %3009 = bitcast %struct.SkAnalyticEdge** %3008 to i64*
  %3010 = load i64, i64* %3009, align 8
  %3011 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %2993
  %3012 = bitcast %struct.SkAnalyticEdge** %3011 to i64**
  %3013 = load i64*, i64** %3012, align 8
  store i64 %3010, i64* %3013, align 8
  %3014 = bitcast %struct.SkAnalyticEdge** %3011 to i64*
  %3015 = load i64, i64* %3014, align 8
  %3016 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3008, align 8
  %3017 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3016, i64 0, i32 1
  %3018 = bitcast %struct.SkAnalyticEdge** %3017 to i64*
  store i64 %3015, i64* %3018, align 8
  %3019 = add nuw nsw i64 %2993, 2
  %3020 = add i64 %2994, -2
  %3021 = icmp eq i64 %3020, 0
  br i1 %3021, label %3022, label %2992

3022:                                             ; preds = %2992, %2981
  %3023 = phi i64 [ 1, %2981 ], [ %3019, %2992 ]
  %3024 = icmp eq i64 %2988, 0
  br i1 %3024, label %3038, label %3025

3025:                                             ; preds = %3022
  %3026 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %3023
  %3027 = bitcast %struct.SkAnalyticEdge** %3026 to i64*
  %3028 = load i64, i64* %3027, align 8
  %3029 = add nsw i64 %3023, -1
  %3030 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %3029
  %3031 = bitcast %struct.SkAnalyticEdge** %3030 to i64**
  %3032 = load i64*, i64** %3031, align 8
  store i64 %3028, i64* %3032, align 8
  %3033 = bitcast %struct.SkAnalyticEdge** %3030 to i64*
  %3034 = load i64, i64* %3033, align 8
  %3035 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3026, align 8
  %3036 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3035, i64 0, i32 1
  %3037 = bitcast %struct.SkAnalyticEdge** %3036 to i64*
  store i64 %3034, i64* %3037, align 8
  br label %3038

3038:                                             ; preds = %3025, %3022, %2980
  %3039 = add nsw i32 %2929, -1
  %3040 = sext i32 %3039 to i64
  %3041 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, i64 %3040
  %3042 = bitcast %struct.SkAnalyticEdge** %3041 to i64*
  %3043 = load i64, i64* %3042, align 8
  %3044 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2931, align 8
  %3045 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 1
  %3046 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 0
  %3047 = bitcast %struct.SkAnalyticEdge** %3045 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3047, i8 0, i64 16, i1 false) #13
  store %struct.SkAnalyticEdge* %3044, %struct.SkAnalyticEdge** %3046, align 8
  %3048 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 8
  store i32 -2147483647, i32* %3048, align 4
  %3049 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 7
  store i32 -2147483647, i32* %3049, align 8
  %3050 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 3
  store i32 -2147483647, i32* %3050, align 8
  %3051 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 4
  store i32 0, i32* %3051, align 4
  %3052 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 9
  store i32 2147483647, i32* %3052, align 8
  %3053 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 5
  store i32 -2147483647, i32* %3053, align 8
  %3054 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3044, i64 0, i32 1
  store %struct.SkAnalyticEdge* %8, %struct.SkAnalyticEdge** %3054, align 8
  %3055 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %3055, align 8
  %3056 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 1
  %3057 = bitcast %struct.SkAnalyticEdge** %3056 to i64*
  store i64 %3043, i64* %3057, align 8
  %3058 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %3058, align 8
  %3059 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 8
  store i32 2147483647, i32* %3059, align 4
  %3060 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 7
  store i32 2147483647, i32* %3060, align 8
  %3061 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 3
  store i32 2147483647, i32* %3061, align 8
  %3062 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 4
  store i32 0, i32* %3062, align 4
  %3063 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 9
  store i32 2147483647, i32* %3063, align 8
  %3064 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 5
  store i32 2147483647, i32* %3064, align 8
  %3065 = inttoptr i64 %3043 to %struct.SkAnalyticEdge*
  %3066 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3065, i64 0, i32 0
  store %struct.SkAnalyticEdge* %9, %struct.SkAnalyticEdge** %3066, align 8
  br i1 %76, label %3074, label %3067

3067:                                             ; preds = %3038
  %3068 = load i32, i32* %2934, align 4
  %3069 = icmp sgt i32 %3068, %2918
  %3070 = select i1 %3069, i32 %3068, i32 %2918
  %3071 = load i32, i32* %2938, align 4
  %3072 = icmp slt i32 %3071, %2919
  %3073 = select i1 %3072, i32 %3071, i32 %2919
  br label %3074

3074:                                             ; preds = %3067, %3038
  %3075 = phi i32 [ %3070, %3067 ], [ %2918, %3038 ]
  %3076 = phi i32 [ %3073, %3067 ], [ %2919, %3038 ]
  %3077 = shl i32 %2933, 16
  %3078 = shl i32 %2937, 16
  %3079 = load i8, i8* %77, align 2
  %3080 = and i8 %3079, 2
  %3081 = icmp eq i8 %3080, 0
  br i1 %3081, label %3082, label %4163

3082:                                             ; preds = %3074
  %3083 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #13
  %3084 = icmp eq i32 %3083, 0
  %3085 = icmp sgt i32 %2929, 1
  %3086 = and i1 %3085, %3084
  br i1 %3086, label %3087, label %4163

3087:                                             ; preds = %3082
  %3088 = bitcast %struct.SkAnalyticEdge* %8 to i64*
  %3089 = load i64, i64* %3088, align 8
  %3090 = inttoptr i64 %3089 to %struct.SkAnalyticEdge*
  %3091 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3090, i64 0, i32 0
  %3092 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3091, align 8
  %3093 = ptrtoint %struct.SkAnalyticEdge* %3092 to i64
  %3094 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3092, i64 0, i32 0
  %3095 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3094, align 8
  %3096 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3090, i64 0, i32 7
  %3097 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3092, i64 0, i32 7
  %3098 = load i32, i32* %3096, align 4
  %3099 = load i32, i32* %3097, align 4
  %3100 = icmp slt i32 %3098, %3099
  %3101 = select i1 %3100, i32 %3099, i32 %3098
  %3102 = shl i32 %3076, 16
  %3103 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %3104 = bitcast %class.RunBasedAdditiveBlitter* %21 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %3105 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %3106 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32)***
  %3107 = or i32 %3077, 2048
  %3108 = or i32 %3078, 2048
  br label %3109

3109:                                             ; preds = %4158, %3087
  %3110 = phi i64 [ %3093, %3087 ], [ %3253, %4158 ]
  %3111 = phi i64 [ %3089, %3087 ], [ %3254, %4158 ]
  %3112 = phi i32 [ %3101, %3087 ], [ %3303, %4158 ]
  %3113 = phi %struct.SkAnalyticEdge* [ %3095, %3087 ], [ %3174, %4158 ]
  %3114 = inttoptr i64 %3111 to %struct.SkAnalyticEdge*
  %3115 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3114, i64 0, i32 8
  %3116 = load i32, i32* %3115, align 4
  %3117 = icmp sgt i32 %3116, %3112
  br i1 %3117, label %3120, label %3128

3118:                                             ; preds = %3142
  %3119 = inttoptr i64 %3143 to %struct.SkAnalyticEdge*
  br label %3120

3120:                                             ; preds = %3118, %3109
  %3121 = phi i64 [ %3111, %3109 ], [ %3143, %3118 ]
  %3122 = phi %struct.SkAnalyticEdge* [ %3113, %3109 ], [ %3144, %3118 ]
  %3123 = phi %struct.SkAnalyticEdge* [ %3114, %3109 ], [ %3119, %3118 ]
  %3124 = inttoptr i64 %3110 to %struct.SkAnalyticEdge*
  %3125 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3124, i64 0, i32 8
  %3126 = load i32, i32* %3125, align 4
  %3127 = icmp sgt i32 %3126, %3112
  br i1 %3127, label %3172, label %3149

3128:                                             ; preds = %3109, %3142
  %3129 = phi %struct.SkAnalyticEdge* [ %3145, %3142 ], [ %3114, %3109 ]
  %3130 = phi %struct.SkAnalyticEdge* [ %3144, %3142 ], [ %3113, %3109 ]
  %3131 = phi i64 [ %3143, %3142 ], [ %3111, %3109 ]
  %3132 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %3129, i32 %3112, i1 zeroext true) #13
  br i1 %3132, label %3142, label %3133

3133:                                             ; preds = %3128
  %3134 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3130, i64 0, i32 7
  %3135 = load i32, i32* %3134, align 8
  %3136 = ashr i32 %3135, 16
  %3137 = icmp slt i32 %3136, %3076
  br i1 %3137, label %3138, label %5208

3138:                                             ; preds = %3133
  %3139 = ptrtoint %struct.SkAnalyticEdge* %3130 to i64
  %3140 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3130, i64 0, i32 0
  %3141 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3140, align 8
  br label %3142

3142:                                             ; preds = %3138, %3128
  %3143 = phi i64 [ %3131, %3128 ], [ %3139, %3138 ]
  %3144 = phi %struct.SkAnalyticEdge* [ %3130, %3128 ], [ %3141, %3138 ]
  %3145 = inttoptr i64 %3143 to %struct.SkAnalyticEdge*
  %3146 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3145, i64 0, i32 8
  %3147 = load i32, i32* %3146, align 4
  %3148 = icmp sgt i32 %3147, %3112
  br i1 %3148, label %3118, label %3128

3149:                                             ; preds = %3120, %3163
  %3150 = phi %struct.SkAnalyticEdge* [ %3166, %3163 ], [ %3124, %3120 ]
  %3151 = phi %struct.SkAnalyticEdge* [ %3165, %3163 ], [ %3122, %3120 ]
  %3152 = phi i64 [ %3164, %3163 ], [ %3110, %3120 ]
  %3153 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %3150, i32 %3112, i1 zeroext true) #13
  br i1 %3153, label %3163, label %3154

3154:                                             ; preds = %3149
  %3155 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3151, i64 0, i32 7
  %3156 = load i32, i32* %3155, align 8
  %3157 = ashr i32 %3156, 16
  %3158 = icmp slt i32 %3157, %3076
  br i1 %3158, label %3159, label %5208

3159:                                             ; preds = %3154
  %3160 = ptrtoint %struct.SkAnalyticEdge* %3151 to i64
  %3161 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3151, i64 0, i32 0
  %3162 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3161, align 8
  br label %3163

3163:                                             ; preds = %3159, %3149
  %3164 = phi i64 [ %3152, %3149 ], [ %3160, %3159 ]
  %3165 = phi %struct.SkAnalyticEdge* [ %3151, %3149 ], [ %3162, %3159 ]
  %3166 = inttoptr i64 %3164 to %struct.SkAnalyticEdge*
  %3167 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3166, i64 0, i32 8
  %3168 = load i32, i32* %3167, align 4
  %3169 = icmp sgt i32 %3168, %3112
  br i1 %3169, label %3170, label %3149

3170:                                             ; preds = %3163
  %3171 = inttoptr i64 %3164 to %struct.SkAnalyticEdge*
  br label %3172

3172:                                             ; preds = %3170, %3120
  %3173 = phi i64 [ %3110, %3120 ], [ %3164, %3170 ]
  %3174 = phi %struct.SkAnalyticEdge* [ %3122, %3120 ], [ %3165, %3170 ]
  %3175 = phi %struct.SkAnalyticEdge* [ %3124, %3120 ], [ %3171, %3170 ]
  %3176 = ashr i32 %3112, 16
  %3177 = icmp slt i32 %3176, %3076
  br i1 %3177, label %3178, label %5208

3178:                                             ; preds = %3172
  %3179 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 6
  %3180 = load i32, i32* %3179, align 4
  %3181 = add nsw i32 %3180, 65536
  %3182 = icmp eq i32 %3181, %3112
  br i1 %3182, label %3183, label %3189

3183:                                             ; preds = %3178
  %3184 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 3
  %3185 = load i32, i32* %3184, align 8
  %3186 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 4
  %3187 = load i32, i32* %3186, align 4
  %3188 = add nsw i32 %3187, %3185
  store i32 %3188, i32* %3184, align 8
  br label %3206

3189:                                             ; preds = %3178
  %3190 = icmp eq i32 %3180, %3112
  br i1 %3190, label %3207, label %3191

3191:                                             ; preds = %3189
  %3192 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 5
  %3193 = load i32, i32* %3192, align 8
  %3194 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 4
  %3195 = load i32, i32* %3194, align 4
  %3196 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 7
  %3197 = load i32, i32* %3196, align 8
  %3198 = sub nsw i32 %3112, %3197
  %3199 = sext i32 %3195 to i64
  %3200 = sext i32 %3198 to i64
  %3201 = mul nsw i64 %3200, %3199
  %3202 = lshr i64 %3201, 16
  %3203 = trunc i64 %3202 to i32
  %3204 = add nsw i32 %3193, %3203
  %3205 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 3
  store i32 %3204, i32* %3205, align 8
  br label %3206

3206:                                             ; preds = %3183, %3191
  store i32 %3112, i32* %3179, align 4
  br label %3207

3207:                                             ; preds = %3206, %3189
  %3208 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 6
  %3209 = load i32, i32* %3208, align 4
  %3210 = add nsw i32 %3209, 65536
  %3211 = icmp eq i32 %3210, %3112
  br i1 %3211, label %3212, label %3218

3212:                                             ; preds = %3207
  %3213 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 3
  %3214 = load i32, i32* %3213, align 8
  %3215 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 4
  %3216 = load i32, i32* %3215, align 4
  %3217 = add nsw i32 %3216, %3214
  store i32 %3217, i32* %3213, align 8
  store i32 %3112, i32* %3208, align 4
  br label %3238

3218:                                             ; preds = %3207
  %3219 = icmp eq i32 %3209, %3112
  br i1 %3219, label %3220, label %3223

3220:                                             ; preds = %3218
  %3221 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 3
  %3222 = load i32, i32* %3221, align 8
  br label %3238

3223:                                             ; preds = %3218
  %3224 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 5
  %3225 = load i32, i32* %3224, align 8
  %3226 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 4
  %3227 = load i32, i32* %3226, align 4
  %3228 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 7
  %3229 = load i32, i32* %3228, align 8
  %3230 = sub nsw i32 %3112, %3229
  %3231 = sext i32 %3227 to i64
  %3232 = sext i32 %3230 to i64
  %3233 = mul nsw i64 %3232, %3231
  %3234 = lshr i64 %3233, 16
  %3235 = trunc i64 %3234 to i32
  %3236 = add nsw i32 %3225, %3235
  %3237 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 3
  store i32 %3236, i32* %3237, align 8
  store i32 %3112, i32* %3208, align 4
  br label %3238

3238:                                             ; preds = %3223, %3220, %3212
  %3239 = phi i32 [ %3222, %3220 ], [ %3217, %3212 ], [ %3236, %3223 ]
  %3240 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 3
  %3241 = load i32, i32* %3240, align 8
  %3242 = icmp sgt i32 %3241, %3239
  br i1 %3242, label %3251, label %3243

3243:                                             ; preds = %3238
  %3244 = icmp eq i32 %3241, %3239
  br i1 %3244, label %3245, label %3252

3245:                                             ; preds = %3243
  %3246 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3123, i64 0, i32 4
  %3247 = load i32, i32* %3246, align 4
  %3248 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3175, i64 0, i32 4
  %3249 = load i32, i32* %3248, align 4
  %3250 = icmp sgt i32 %3247, %3249
  br i1 %3250, label %3251, label %3252

3251:                                             ; preds = %3245, %3238
  br label %3252

3252:                                             ; preds = %3251, %3245, %3243
  %3253 = phi i64 [ %3121, %3251 ], [ %3173, %3245 ], [ %3173, %3243 ]
  %3254 = phi i64 [ %3173, %3251 ], [ %3121, %3245 ], [ %3121, %3243 ]
  %3255 = inttoptr i64 %3254 to %struct.SkAnalyticEdge*
  %3256 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 8
  %3257 = inttoptr i64 %3253 to %struct.SkAnalyticEdge*
  %3258 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 8
  %3259 = load i32, i32* %3258, align 4
  %3260 = load i32, i32* %3256, align 4
  %3261 = icmp slt i32 %3259, %3260
  %3262 = select i1 %3261, i32 %3259, i32 %3260
  %3263 = ptrtoint %struct.SkAnalyticEdge* %3174 to i64
  %3264 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3174, i64 0, i32 7
  %3265 = load i32, i32* %3264, align 8
  %3266 = icmp slt i32 %3265, %3102
  br i1 %3266, label %3267, label %3300

3267:                                             ; preds = %3252
  %3268 = add nsw i32 %3260, 65536
  %3269 = icmp slt i32 %3268, %3259
  br i1 %3269, label %3270, label %3272

3270:                                             ; preds = %3267
  %3271 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %3255, %struct.SkAnalyticEdge* %3174) #13
  br i1 %3271, label %3297, label %3300

3272:                                             ; preds = %3267
  %3273 = add nsw i32 %3259, 65536
  %3274 = icmp sgt i32 %3260, %3273
  br i1 %3274, label %3275, label %3277

3275:                                             ; preds = %3272
  %3276 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %3257, %struct.SkAnalyticEdge* %3174) #13
  br i1 %3276, label %3297, label %3300

3277:                                             ; preds = %3272
  %3278 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3174, i64 0, i32 0
  %3279 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3278, align 8
  %3280 = ptrtoint %struct.SkAnalyticEdge* %3279 to i64
  %3281 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3279, i64 0, i32 7
  %3282 = load i32, i32* %3281, align 8
  %3283 = icmp slt i32 %3282, %3102
  br i1 %3283, label %3284, label %3300

3284:                                             ; preds = %3277
  %3285 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3279, i64 0, i32 5
  %3286 = load i32, i32* %3285, align 8
  %3287 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3174, i64 0, i32 5
  %3288 = load i32, i32* %3287, align 8
  %3289 = icmp slt i32 %3286, %3288
  %3290 = select i1 %3289, i64 %3280, i64 %3263
  %3291 = inttoptr i64 %3290 to %struct.SkAnalyticEdge*
  %3292 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %3255, %struct.SkAnalyticEdge* %3291) #13
  br i1 %3292, label %3293, label %3300

3293:                                             ; preds = %3284
  %3294 = select i1 %3289, i64 %3263, i64 %3280
  %3295 = inttoptr i64 %3294 to %struct.SkAnalyticEdge*
  %3296 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %3257, %struct.SkAnalyticEdge* %3295) #13
  br i1 %3296, label %3297, label %3300

3297:                                             ; preds = %3293, %3275, %3270
  %3298 = add nsw i32 %3262, 65535
  %3299 = and i32 %3298, -65536
  br label %3300

3300:                                             ; preds = %3297, %3293, %3284, %3277, %3275, %3270, %3252
  %3301 = phi i32 [ %3299, %3297 ], [ %3262, %3293 ], [ %3262, %3270 ], [ %3262, %3275 ], [ %3262, %3252 ], [ %3262, %3277 ], [ %3262, %3284 ]
  %3302 = icmp slt i32 %3102, %3301
  %3303 = select i1 %3302, i32 %3102, i32 %3301
  %3304 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 3
  %3305 = load i32, i32* %3304, align 4
  %3306 = icmp sgt i32 %3305, %3077
  %3307 = select i1 %3306, i32 %3305, i32 %3077
  %3308 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 4
  %3309 = load i32, i32* %3308, align 4
  %3310 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 3
  %3311 = load i32, i32* %3310, align 4
  %3312 = icmp slt i32 %3311, %3078
  %3313 = select i1 %3312, i32 %3311, i32 %3078
  %3314 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 4
  %3315 = load i32, i32* %3314, align 4
  %3316 = or i32 %3315, %3309
  %3317 = icmp eq i32 %3316, 0
  br i1 %3317, label %3318, label %3509

3318:                                             ; preds = %3300
  %3319 = add nsw i32 %3307, 65535
  %3320 = ashr i32 %3319, 16
  %3321 = ashr i32 %3313, 16
  %3322 = and i32 %3319, -65536
  %3323 = sub nsw i32 %3322, %3307
  %3324 = and i32 %3313, 65535
  %3325 = add nsw i32 %3112, 65535
  %3326 = ashr i32 %3325, 16
  %3327 = ashr i32 %3303, 16
  %3328 = and i32 %3325, -65536
  %3329 = sub nsw i32 %3328, %3112
  %3330 = and i32 %3303, 65535
  %3331 = icmp slt i32 %3327, %3326
  %3332 = or i32 %3303, -65536
  %3333 = select i1 %3331, i32 0, i32 %3330
  %3334 = select i1 %3331, i32 %3332, i32 0
  %3335 = add i32 %3334, %3329
  %3336 = icmp slt i32 %3321, %3320
  %3337 = icmp sgt i32 %3335, 0
  br i1 %3336, label %3453, label %3338

3338:                                             ; preds = %3318
  br i1 %3337, label %3339, label %3387

3339:                                             ; preds = %3338
  %3340 = icmp sgt i32 %3323, 0
  br i1 %3340, label %3343, label %3341

3341:                                             ; preds = %3339
  %3342 = add nsw i32 %3326, -1
  br label %3358

3343:                                             ; preds = %3339
  %3344 = add nsw i32 %3320, -1
  %3345 = add nsw i32 %3326, -1
  %3346 = sext i32 %3335 to i64
  %3347 = sext i32 %3323 to i64
  %3348 = mul nsw i64 %3347, %3346
  %3349 = lshr i64 %3348, 16
  %3350 = trunc i64 %3349 to i32
  %3351 = mul nsw i32 %3350, 255
  %3352 = add nsw i32 %3351, 32768
  %3353 = lshr i32 %3352, 16
  %3354 = trunc i32 %3353 to i8
  %3355 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3356 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3355, i64 16
  %3357 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3356, align 8
  call void %3357(%class.AdditiveBlitter* nonnull %2917, i32 %3344, i32 %3345, i8 zeroext %3354) #13
  br label %3358

3358:                                             ; preds = %3343, %3341
  %3359 = phi i32 [ %3342, %3341 ], [ %3345, %3343 ]
  %3360 = sub nsw i32 %3321, %3320
  %3361 = mul nsw i32 %3335, 255
  %3362 = add nsw i32 %3361, 32768
  %3363 = lshr i32 %3362, 16
  %3364 = trunc i32 %3363 to i8
  %3365 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %3366 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3365, i64 17
  %3367 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3366, align 8
  call void %3367(%class.AdditiveBlitter* nonnull %2917, i32 %3320, i32 %3359, i32 %3360, i8 zeroext %3364) #13
  %3368 = icmp eq i32 %3324, 0
  br i1 %3368, label %3382, label %3369

3369:                                             ; preds = %3358
  %3370 = sext i32 %3335 to i64
  %3371 = zext i32 %3324 to i64
  %3372 = mul nsw i64 %3371, %3370
  %3373 = lshr i64 %3372, 16
  %3374 = trunc i64 %3373 to i32
  %3375 = mul nsw i32 %3374, 255
  %3376 = add nsw i32 %3375, 32768
  %3377 = lshr i32 %3376, 16
  %3378 = trunc i32 %3377 to i8
  %3379 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3380 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3379, i64 16
  %3381 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3380, align 8
  call void %3381(%class.AdditiveBlitter* nonnull %2917, i32 %3321, i32 %3359, i8 zeroext %3378) #13
  br label %3382

3382:                                             ; preds = %3369, %3358
  %3383 = add i32 %3334, %3328
  %3384 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3106, align 8
  %3385 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3384, i64 19
  %3386 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3385, align 8
  call void %3386(%class.AdditiveBlitter* nonnull %2917, i32 %3112, i32 %3383) #13
  br label %3387

3387:                                             ; preds = %3382, %3338
  %3388 = icmp sgt i32 %3327, %3326
  br i1 %3388, label %3389, label %3415

3389:                                             ; preds = %3387
  %3390 = icmp sle i32 %3321, %3320
  %3391 = mul nsw i32 %3323, 255
  %3392 = add nsw i32 %3391, 32768
  %3393 = lshr i32 %3392, 16
  %3394 = mul nuw nsw i32 %3324, 255
  %3395 = add nuw nsw i32 %3394, 32768
  %3396 = lshr i32 %3395, 16
  %3397 = or i32 %3393, %3396
  %3398 = trunc i32 %3397 to i8
  %3399 = icmp eq i8 %3398, 0
  %3400 = and i1 %3390, %3399
  br i1 %3400, label %3415, label %3401

3401:                                             ; preds = %3389
  %3402 = trunc i32 %3393 to i8
  %3403 = trunc i32 %3396 to i8
  %3404 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3405 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3404, i64 14
  %3406 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3405, align 8
  %3407 = call %class.SkBlitter* %3406(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3408 = add nsw i32 %3320, -1
  %3409 = sub nsw i32 %3321, %3320
  %3410 = sub nsw i32 %3327, %3326
  %3411 = bitcast %class.SkBlitter* %3407 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %3412 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %3411, align 8
  %3413 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %3412, i64 6
  %3414 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %3413, align 8
  call void %3414(%class.SkBlitter* %3407, i32 %3408, i32 %3326, i32 %3409, i32 %3410, i8 zeroext %3402, i8 zeroext %3403) #13
  br label %3415

3415:                                             ; preds = %3401, %3389, %3387
  %3416 = icmp eq i32 %3333, 0
  br i1 %3416, label %4158, label %3417

3417:                                             ; preds = %3415
  %3418 = icmp sgt i32 %3323, 0
  br i1 %3418, label %3419, label %3433

3419:                                             ; preds = %3417
  %3420 = add nsw i32 %3320, -1
  %3421 = zext i32 %3333 to i64
  %3422 = sext i32 %3323 to i64
  %3423 = mul nsw i64 %3422, %3421
  %3424 = lshr i64 %3423, 16
  %3425 = trunc i64 %3424 to i32
  %3426 = mul nsw i32 %3425, 255
  %3427 = add nsw i32 %3426, 32768
  %3428 = lshr i32 %3427, 16
  %3429 = trunc i32 %3428 to i8
  %3430 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3431 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3430, i64 16
  %3432 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3431, align 8
  call void %3432(%class.AdditiveBlitter* nonnull %2917, i32 %3420, i32 %3327, i8 zeroext %3429) #13
  br label %3433

3433:                                             ; preds = %3419, %3417
  %3434 = sub nsw i32 %3321, %3320
  %3435 = mul nuw nsw i32 %3333, 255
  %3436 = add nuw nsw i32 %3435, 32768
  %3437 = lshr i32 %3436, 16
  %3438 = trunc i32 %3437 to i8
  %3439 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %3440 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3439, i64 17
  %3441 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3440, align 8
  call void %3441(%class.AdditiveBlitter* nonnull %2917, i32 %3320, i32 %3327, i32 %3434, i8 zeroext %3438) #13
  %3442 = icmp eq i32 %3324, 0
  br i1 %3442, label %4158, label %3443

3443:                                             ; preds = %3433
  %3444 = mul nuw i32 %3324, %3333
  %3445 = lshr i32 %3444, 16
  %3446 = mul nuw nsw i32 %3445, 255
  %3447 = add nuw nsw i32 %3446, 32768
  %3448 = lshr i32 %3447, 16
  %3449 = trunc i32 %3448 to i8
  %3450 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3451 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3450, i64 16
  %3452 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3451, align 8
  call void %3452(%class.AdditiveBlitter* nonnull %2917, i32 %3321, i32 %3327, i8 zeroext %3449) #13
  br label %4158

3453:                                             ; preds = %3318
  br i1 %3337, label %3454, label %3474

3454:                                             ; preds = %3453
  %3455 = add nsw i32 %3320, -1
  %3456 = add nsw i32 %3326, -1
  %3457 = sub nsw i32 %3313, %3307
  %3458 = sext i32 %3335 to i64
  %3459 = sext i32 %3457 to i64
  %3460 = mul nsw i64 %3459, %3458
  %3461 = lshr i64 %3460, 16
  %3462 = trunc i64 %3461 to i32
  %3463 = mul nsw i32 %3462, 255
  %3464 = add nsw i32 %3463, 32768
  %3465 = lshr i32 %3464, 16
  %3466 = trunc i32 %3465 to i8
  %3467 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %3468 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3467, i64 17
  %3469 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3468, align 8
  call void %3469(%class.AdditiveBlitter* nonnull %2917, i32 %3455, i32 %3456, i32 1, i8 zeroext %3466) #13
  %3470 = add i32 %3334, %3328
  %3471 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3106, align 8
  %3472 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3471, i64 19
  %3473 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3472, align 8
  call void %3473(%class.AdditiveBlitter* nonnull %2917, i32 %3112, i32 %3470) #13
  br label %3474

3474:                                             ; preds = %3454, %3453
  %3475 = icmp sgt i32 %3327, %3326
  br i1 %3475, label %3476, label %3492

3476:                                             ; preds = %3474
  %3477 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3478 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3477, i64 14
  %3479 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3478, align 8
  %3480 = call %class.SkBlitter* %3479(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3481 = add nsw i32 %3320, -1
  %3482 = sub nsw i32 %3327, %3326
  %3483 = sub nsw i32 %3313, %3307
  %3484 = mul nsw i32 %3483, 255
  %3485 = add nsw i32 %3484, 32768
  %3486 = lshr i32 %3485, 16
  %3487 = trunc i32 %3486 to i8
  %3488 = bitcast %class.SkBlitter* %3480 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3489 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3488, align 8
  %3490 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3489, i64 4
  %3491 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3490, align 8
  call void %3491(%class.SkBlitter* %3480, i32 %3481, i32 %3326, i32 %3482, i8 zeroext %3487) #13
  br label %3492

3492:                                             ; preds = %3476, %3474
  %3493 = icmp eq i32 %3333, 0
  br i1 %3493, label %4158, label %3494

3494:                                             ; preds = %3492
  %3495 = add nsw i32 %3320, -1
  %3496 = sub nsw i32 %3313, %3307
  %3497 = zext i32 %3333 to i64
  %3498 = sext i32 %3496 to i64
  %3499 = mul nsw i64 %3498, %3497
  %3500 = lshr i64 %3499, 16
  %3501 = trunc i64 %3500 to i32
  %3502 = mul nsw i32 %3501, 255
  %3503 = add nsw i32 %3502, 32768
  %3504 = lshr i32 %3503, 16
  %3505 = trunc i32 %3504 to i8
  %3506 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %3507 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3506, i64 17
  %3508 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3507, align 8
  call void %3508(%class.AdditiveBlitter* nonnull %2917, i32 %3495, i32 %3327, i32 1, i8 zeroext %3505) #13
  br label %4158

3509:                                             ; preds = %3300
  %3510 = add nsw i32 %3307, 2048
  %3511 = add nsw i32 %3313, 2048
  %3512 = add nsw i32 %3303, 65535
  %3513 = ashr i32 %3512, 16
  %3514 = sub nsw i32 %3513, %3176
  %3515 = icmp sgt i32 %3514, 1
  br i1 %3515, label %3519, label %3516

3516:                                             ; preds = %3509
  %3517 = and i32 %3510, -4096
  %3518 = and i32 %3511, -4096
  br label %3923

3519:                                             ; preds = %3509
  %3520 = and i32 %3112, -65536
  %3521 = icmp eq i32 %3520, %3112
  br i1 %3521, label %3751, label %3522

3522:                                             ; preds = %3519
  %3523 = add nsw i32 %3514, -1
  %3524 = add nsw i32 %3112, 65536
  %3525 = and i32 %3524, -65536
  %3526 = sub nsw i32 %3525, %3112
  %3527 = sext i32 %3309 to i64
  %3528 = sext i32 %3526 to i64
  %3529 = mul nsw i64 %3527, %3528
  %3530 = lshr i64 %3529, 16
  %3531 = trunc i64 %3530 to i32
  %3532 = add nsw i32 %3510, %3531
  %3533 = sext i32 %3315 to i64
  %3534 = mul nsw i64 %3533, %3528
  %3535 = lshr i64 %3534, 16
  %3536 = trunc i64 %3535 to i32
  %3537 = add nsw i32 %3511, %3536
  %3538 = and i32 %3510, -4096
  %3539 = and i32 %3511, -4096
  %3540 = and i32 %3532, -4096
  %3541 = and i32 %3537, -4096
  %3542 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 9
  %3543 = load i32, i32* %3542, align 8
  %3544 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 9
  %3545 = load i32, i32* %3544, align 8
  %3546 = mul nsw i32 %3526, 255
  %3547 = add nsw i32 %3546, 32768
  %3548 = lshr i32 %3547, 16
  %3549 = trunc i32 %3548 to i8
  %3550 = icmp sgt i32 %3538, %3539
  br i1 %3550, label %3746, label %3551

3551:                                             ; preds = %3522
  %3552 = icmp sgt i32 %3540, %3541
  br i1 %3552, label %3553, label %3566

3553:                                             ; preds = %3551
  %3554 = icmp sgt i32 %3538, %3540
  %3555 = select i1 %3554, i32 %3540, i32 %3538
  %3556 = select i1 %3554, i32 %3538, i32 %3540
  %3557 = icmp sgt i32 %3539, %3541
  %3558 = select i1 %3557, i32 %3541, i32 %3539
  %3559 = select i1 %3557, i32 %3539, i32 %3541
  %3560 = icmp slt i32 %3555, %3558
  %3561 = select i1 %3560, i32 %3558, i32 %3555
  %3562 = icmp slt i32 %3559, %3556
  %3563 = select i1 %3562, i32 %3559, i32 %3556
  %3564 = add nsw i32 %3561, %3563
  %3565 = sdiv i32 %3564, 2
  br label %3566

3566:                                             ; preds = %3553, %3551
  %3567 = phi i32 [ %3565, %3553 ], [ %3540, %3551 ]
  %3568 = phi i32 [ %3565, %3553 ], [ %3541, %3551 ]
  %3569 = icmp eq i32 %3538, %3539
  %3570 = icmp eq i32 %3567, %3568
  %3571 = and i1 %3569, %3570
  br i1 %3571, label %3746, label %3572

3572:                                             ; preds = %3566
  %3573 = icmp slt i32 %3567, %3538
  %3574 = select i1 %3573, i32 %3567, i32 %3538
  %3575 = select i1 %3573, i32 %3538, i32 %3567
  %3576 = icmp slt i32 %3568, %3539
  %3577 = select i1 %3576, i32 %3568, i32 %3539
  %3578 = select i1 %3576, i32 %3539, i32 %3568
  %3579 = add nsw i32 %3575, 65535
  %3580 = and i32 %3579, -65536
  %3581 = and i32 %3577, -65536
  %3582 = icmp slt i32 %3581, %3580
  br i1 %3582, label %3745, label %3583

3583:                                             ; preds = %3572
  %3584 = icmp sgt i32 %3580, %3574
  br i1 %3584, label %3585, label %3654

3585:                                             ; preds = %3583
  %3586 = sub nsw i32 %3580, %3574
  %3587 = add nsw i32 %3586, 65535
  %3588 = ashr i32 %3587, 16
  switch i32 %3588, label %3653 [
    i32 1, label %3589
    i32 2, label %3615
  ]

3589:                                             ; preds = %3585
  %3590 = sub i32 %3580, %3575
  %3591 = add nsw i32 %3590, %3586
  %3592 = sdiv i32 %3591, 2
  %3593 = lshr i32 %3592, 8
  %3594 = ashr i32 %3574, 16
  %3595 = icmp eq i8 %3549, -1
  br i1 %3595, label %3596, label %3606

3596:                                             ; preds = %3589
  %3597 = trunc i32 %3593 to i8
  %3598 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3599 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3598, i64 14
  %3600 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3599, align 8
  %3601 = call %class.SkBlitter* %3600(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3602 = bitcast %class.SkBlitter* %3601 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3603 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3602, align 8
  %3604 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3603, i64 4
  %3605 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3604, align 8
  call void %3605(%class.SkBlitter* %3601, i32 %3594, i32 %3176, i32 1, i8 zeroext %3597) #13
  br label %3654

3606:                                             ; preds = %3589
  %3607 = and i32 %3593, 255
  %3608 = and i32 %3548, 255
  %3609 = mul nuw nsw i32 %3607, %3608
  %3610 = lshr i32 %3609, 8
  %3611 = trunc i32 %3610 to i8
  %3612 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3613 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3612, i64 16
  %3614 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3613, align 8
  call void %3614(%class.AdditiveBlitter* nonnull %2917, i32 %3594, i32 %3176, i8 zeroext %3611) #13
  br label %3654

3615:                                             ; preds = %3585
  %3616 = sub i32 -65536, %3574
  %3617 = add i32 %3580, %3616
  %3618 = sub i32 %3575, %3574
  %3619 = sub i32 %3618, %3617
  %3620 = ashr i32 %3617, 11
  %3621 = ashr i32 %3543, 11
  %3622 = mul i32 %3620, %3621
  %3623 = mul i32 %3622, %3620
  %3624 = lshr i32 %3623, 8
  %3625 = ashr i32 %3619, 11
  %3626 = mul i32 %3625, %3621
  %3627 = mul i32 %3626, %3625
  %3628 = lshr i32 %3627, 8
  %3629 = trunc i32 %3628 to i8
  %3630 = sub i8 %3549, %3629
  %3631 = ashr i32 %3574, 16
  %3632 = icmp eq i8 %3549, -1
  br i1 %3632, label %3633, label %3644

3633:                                             ; preds = %3615
  %3634 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3635 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3634, i64 14
  %3636 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3635, align 8
  %3637 = call %class.SkBlitter* %3636(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3638 = and i32 %3624, 255
  %3639 = zext i8 %3630 to i32
  %3640 = bitcast %class.SkBlitter* %3637 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3641 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3640, align 8
  %3642 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3641, i64 9
  %3643 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3642, align 8
  call void %3643(%class.SkBlitter* %3637, i32 %3631, i32 %3176, i32 %3638, i32 %3639) #13
  br label %3654

3644:                                             ; preds = %3615
  %3645 = trunc i32 %3624 to i8
  %3646 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3647 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3646, i64 16
  %3648 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3647, align 8
  call void %3648(%class.AdditiveBlitter* nonnull %2917, i32 %3631, i32 %3176, i8 zeroext %3645) #13
  %3649 = add nsw i32 %3631, 1
  %3650 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3651 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3650, i64 16
  %3652 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3651, align 8
  call void %3652(%class.AdditiveBlitter* nonnull %2917, i32 %3649, i32 %3176, i8 zeroext %3630) #13
  br label %3654

3653:                                             ; preds = %3585
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3176, i32 %3574, i32 %3580, i32 %3575, i32 %3580, i32 %3543, i32 2147483647, i8 zeroext %3549, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3654

3654:                                             ; preds = %3653, %3644, %3633, %3606, %3596, %3583
  %3655 = icmp sgt i32 %3581, %3580
  br i1 %3655, label %3656, label %3674

3656:                                             ; preds = %3654
  %3657 = ashr i32 %3579, 16
  %3658 = sub nsw i32 %3581, %3580
  %3659 = ashr exact i32 %3658, 16
  %3660 = icmp eq i8 %3549, -1
  br i1 %3660, label %3661, label %3670

3661:                                             ; preds = %3656
  %3662 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3663 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3662, i64 14
  %3664 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3663, align 8
  %3665 = call %class.SkBlitter* %3664(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3666 = bitcast %class.SkBlitter* %3665 to void (%class.SkBlitter*, i32, i32, i32)***
  %3667 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %3666, align 8
  %3668 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3667, i64 2
  %3669 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3668, align 8
  call void %3669(%class.SkBlitter* %3665, i32 %3657, i32 %3176, i32 %3659) #13
  br label %3674

3670:                                             ; preds = %3656
  %3671 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %3672 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3671, i64 17
  %3673 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3672, align 8
  call void %3673(%class.AdditiveBlitter* nonnull %2917, i32 %3657, i32 %3176, i32 %3659, i8 zeroext %3549) #13
  br label %3674

3674:                                             ; preds = %3670, %3661, %3654
  %3675 = icmp sgt i32 %3578, %3581
  br i1 %3675, label %3676, label %3746

3676:                                             ; preds = %3674
  %3677 = sub nsw i32 %3578, %3581
  %3678 = add nsw i32 %3677, 65535
  %3679 = ashr i32 %3678, 16
  switch i32 %3679, label %3744 [
    i32 1, label %3680
    i32 2, label %3706
  ]

3680:                                             ; preds = %3676
  %3681 = sub i32 %3577, %3581
  %3682 = add nsw i32 %3681, %3677
  %3683 = sdiv i32 %3682, 2
  %3684 = lshr i32 %3683, 8
  %3685 = ashr i32 %3577, 16
  %3686 = icmp eq i8 %3549, -1
  br i1 %3686, label %3687, label %3697

3687:                                             ; preds = %3680
  %3688 = trunc i32 %3684 to i8
  %3689 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3690 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3689, i64 14
  %3691 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3690, align 8
  %3692 = call %class.SkBlitter* %3691(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3693 = bitcast %class.SkBlitter* %3692 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3694 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3693, align 8
  %3695 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3694, i64 4
  %3696 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3695, align 8
  call void %3696(%class.SkBlitter* %3692, i32 %3685, i32 %3176, i32 1, i8 zeroext %3688) #13
  br label %3746

3697:                                             ; preds = %3680
  %3698 = and i32 %3684, 255
  %3699 = and i32 %3548, 255
  %3700 = mul nuw nsw i32 %3698, %3699
  %3701 = lshr i32 %3700, 8
  %3702 = trunc i32 %3701 to i8
  %3703 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3704 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3703, i64 16
  %3705 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3704, align 8
  call void %3705(%class.AdditiveBlitter* nonnull %2917, i32 %3685, i32 %3176, i8 zeroext %3702) #13
  br label %3746

3706:                                             ; preds = %3676
  %3707 = sub i32 65536, %3577
  %3708 = add i32 %3707, %3581
  %3709 = sub i32 %3578, %3577
  %3710 = sub i32 %3709, %3708
  %3711 = ashr i32 %3708, 11
  %3712 = ashr i32 %3545, 11
  %3713 = mul i32 %3711, %3712
  %3714 = mul i32 %3713, %3711
  %3715 = lshr i32 %3714, 8
  %3716 = trunc i32 %3715 to i8
  %3717 = sub i8 %3549, %3716
  %3718 = ashr i32 %3710, 11
  %3719 = mul i32 %3718, %3712
  %3720 = mul i32 %3719, %3718
  %3721 = lshr i32 %3720, 8
  %3722 = ashr i32 %3577, 16
  %3723 = icmp eq i8 %3549, -1
  br i1 %3723, label %3724, label %3735

3724:                                             ; preds = %3706
  %3725 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3726 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3725, i64 14
  %3727 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3726, align 8
  %3728 = call %class.SkBlitter* %3727(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3729 = zext i8 %3717 to i32
  %3730 = and i32 %3721, 255
  %3731 = bitcast %class.SkBlitter* %3728 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3732 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3731, align 8
  %3733 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3732, i64 9
  %3734 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3733, align 8
  call void %3734(%class.SkBlitter* %3728, i32 %3722, i32 %3176, i32 %3729, i32 %3730) #13
  br label %3746

3735:                                             ; preds = %3706
  %3736 = trunc i32 %3721 to i8
  %3737 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3738 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3737, i64 16
  %3739 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3738, align 8
  call void %3739(%class.AdditiveBlitter* nonnull %2917, i32 %3722, i32 %3176, i8 zeroext %3717) #13
  %3740 = add nsw i32 %3722, 1
  %3741 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %3742 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3741, i64 16
  %3743 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3742, align 8
  call void %3743(%class.AdditiveBlitter* nonnull %2917, i32 %3740, i32 %3176, i8 zeroext %3736) #13
  br label %3746

3744:                                             ; preds = %3676
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3176, i32 %3581, i32 %3577, i32 %3581, i32 %3578, i32 2147483647, i32 %3545, i8 zeroext %3549, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3746

3745:                                             ; preds = %3572
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3176, i32 %3574, i32 %3577, i32 %3575, i32 %3578, i32 %3543, i32 %3545, i8 zeroext %3549, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3746

3746:                                             ; preds = %3745, %3744, %3735, %3724, %3697, %3687, %3674, %3566, %3522
  %3747 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3106, align 8
  %3748 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3747, i64 19
  %3749 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3748, align 8
  call void %3749(%class.AdditiveBlitter* nonnull %2917, i32 %3112, i32 %3525) #13
  %3750 = icmp sgt i32 %3523, 1
  br i1 %3750, label %3751, label %3923

3751:                                             ; preds = %3746, %3519
  %3752 = phi i32 [ %3525, %3746 ], [ %3112, %3519 ]
  %3753 = phi i32 [ %3532, %3746 ], [ %3510, %3519 ]
  %3754 = phi i32 [ %3537, %3746 ], [ %3511, %3519 ]
  %3755 = phi i32 [ %3523, %3746 ], [ %3514, %3519 ]
  %3756 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 9
  %3757 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 9
  br label %3758

3758:                                             ; preds = %3918, %3751
  %3759 = phi i32 [ %3752, %3751 ], [ %3765, %3918 ]
  %3760 = phi i32 [ %3753, %3751 ], [ %3766, %3918 ]
  %3761 = phi i32 [ %3754, %3751 ], [ %3767, %3918 ]
  %3762 = phi i32 [ %3755, %3751 ], [ %3763, %3918 ]
  %3763 = add nsw i32 %3762, -1
  %3764 = ashr i32 %3759, 16
  %3765 = add nsw i32 %3759, 65536
  %3766 = add nsw i32 %3760, %3309
  %3767 = add nsw i32 %3761, %3315
  %3768 = and i32 %3760, -4096
  %3769 = and i32 %3761, -4096
  %3770 = and i32 %3766, -4096
  %3771 = and i32 %3767, -4096
  %3772 = load i32, i32* %3756, align 8
  %3773 = load i32, i32* %3757, align 8
  %3774 = icmp sgt i32 %3768, %3769
  br i1 %3774, label %3918, label %3775

3775:                                             ; preds = %3758
  %3776 = icmp sgt i32 %3770, %3771
  br i1 %3776, label %3777, label %3790

3777:                                             ; preds = %3775
  %3778 = icmp sgt i32 %3768, %3770
  %3779 = select i1 %3778, i32 %3770, i32 %3768
  %3780 = select i1 %3778, i32 %3768, i32 %3770
  %3781 = icmp sgt i32 %3769, %3771
  %3782 = select i1 %3781, i32 %3771, i32 %3769
  %3783 = select i1 %3781, i32 %3769, i32 %3771
  %3784 = icmp slt i32 %3779, %3782
  %3785 = select i1 %3784, i32 %3782, i32 %3779
  %3786 = icmp slt i32 %3783, %3780
  %3787 = select i1 %3786, i32 %3783, i32 %3780
  %3788 = add nsw i32 %3785, %3787
  %3789 = sdiv i32 %3788, 2
  br label %3790

3790:                                             ; preds = %3777, %3775
  %3791 = phi i32 [ %3789, %3777 ], [ %3770, %3775 ]
  %3792 = phi i32 [ %3789, %3777 ], [ %3771, %3775 ]
  %3793 = icmp eq i32 %3768, %3769
  %3794 = icmp eq i32 %3791, %3792
  %3795 = and i1 %3793, %3794
  br i1 %3795, label %3918, label %3796

3796:                                             ; preds = %3790
  %3797 = icmp slt i32 %3791, %3768
  %3798 = select i1 %3797, i32 %3791, i32 %3768
  %3799 = select i1 %3797, i32 %3768, i32 %3791
  %3800 = icmp slt i32 %3792, %3769
  %3801 = select i1 %3800, i32 %3792, i32 %3769
  %3802 = select i1 %3800, i32 %3769, i32 %3792
  %3803 = add nsw i32 %3799, 65535
  %3804 = and i32 %3803, -65536
  %3805 = and i32 %3801, -65536
  %3806 = icmp slt i32 %3805, %3804
  br i1 %3806, label %3917, label %3807

3807:                                             ; preds = %3796
  %3808 = icmp sgt i32 %3804, %3798
  br i1 %3808, label %3809, label %3855

3809:                                             ; preds = %3807
  %3810 = sub nsw i32 %3804, %3798
  %3811 = add nsw i32 %3810, 65535
  %3812 = ashr i32 %3811, 16
  switch i32 %3812, label %3854 [
    i32 1, label %3813
    i32 2, label %3828
  ]

3813:                                             ; preds = %3809
  %3814 = sub i32 %3804, %3799
  %3815 = add nsw i32 %3814, %3810
  %3816 = sdiv i32 %3815, 2
  %3817 = lshr i32 %3816, 8
  %3818 = trunc i32 %3817 to i8
  %3819 = ashr i32 %3798, 16
  %3820 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3821 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3820, i64 14
  %3822 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3821, align 8
  %3823 = call %class.SkBlitter* %3822(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3824 = bitcast %class.SkBlitter* %3823 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3825 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3824, align 8
  %3826 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3825, i64 4
  %3827 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3826, align 8
  call void %3827(%class.SkBlitter* %3823, i32 %3819, i32 %3764, i32 1, i8 zeroext %3818) #13
  br label %3855

3828:                                             ; preds = %3809
  %3829 = sub i32 -65536, %3798
  %3830 = add i32 %3804, %3829
  %3831 = sub i32 %3799, %3798
  %3832 = sub i32 %3831, %3830
  %3833 = ashr i32 %3830, 11
  %3834 = ashr i32 %3772, 11
  %3835 = mul i32 %3833, %3834
  %3836 = mul i32 %3835, %3833
  %3837 = lshr i32 %3836, 8
  %3838 = ashr i32 %3832, 11
  %3839 = mul i32 %3838, %3834
  %3840 = mul i32 %3839, %3838
  %3841 = lshr i32 %3840, 8
  %3842 = ashr i32 %3798, 16
  %3843 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3844 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3843, i64 14
  %3845 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3844, align 8
  %3846 = call %class.SkBlitter* %3845(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3847 = and i32 %3837, 255
  %3848 = and i32 %3841, 255
  %3849 = xor i32 %3848, 255
  %3850 = bitcast %class.SkBlitter* %3846 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3851 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3850, align 8
  %3852 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3851, i64 9
  %3853 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3852, align 8
  call void %3853(%class.SkBlitter* %3846, i32 %3842, i32 %3764, i32 %3847, i32 %3849) #13
  br label %3855

3854:                                             ; preds = %3809
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3764, i32 %3798, i32 %3804, i32 %3799, i32 %3804, i32 %3772, i32 2147483647, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3855

3855:                                             ; preds = %3854, %3828, %3813, %3807
  %3856 = icmp sgt i32 %3805, %3804
  br i1 %3856, label %3857, label %3869

3857:                                             ; preds = %3855
  %3858 = ashr i32 %3803, 16
  %3859 = sub nsw i32 %3805, %3804
  %3860 = ashr exact i32 %3859, 16
  %3861 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3862 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3861, i64 14
  %3863 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3862, align 8
  %3864 = call %class.SkBlitter* %3863(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3865 = bitcast %class.SkBlitter* %3864 to void (%class.SkBlitter*, i32, i32, i32)***
  %3866 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %3865, align 8
  %3867 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3866, i64 2
  %3868 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3867, align 8
  call void %3868(%class.SkBlitter* %3864, i32 %3858, i32 %3764, i32 %3860) #13
  br label %3869

3869:                                             ; preds = %3857, %3855
  %3870 = icmp sgt i32 %3802, %3805
  br i1 %3870, label %3871, label %3918

3871:                                             ; preds = %3869
  %3872 = sub nsw i32 %3802, %3805
  %3873 = add nsw i32 %3872, 65535
  %3874 = ashr i32 %3873, 16
  switch i32 %3874, label %3916 [
    i32 1, label %3875
    i32 2, label %3890
  ]

3875:                                             ; preds = %3871
  %3876 = sub i32 %3801, %3805
  %3877 = add nsw i32 %3876, %3872
  %3878 = sdiv i32 %3877, 2
  %3879 = lshr i32 %3878, 8
  %3880 = trunc i32 %3879 to i8
  %3881 = ashr i32 %3801, 16
  %3882 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3883 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3882, i64 14
  %3884 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3883, align 8
  %3885 = call %class.SkBlitter* %3884(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3886 = bitcast %class.SkBlitter* %3885 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3887 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3886, align 8
  %3888 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3887, i64 4
  %3889 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3888, align 8
  call void %3889(%class.SkBlitter* %3885, i32 %3881, i32 %3764, i32 1, i8 zeroext %3880) #13
  br label %3918

3890:                                             ; preds = %3871
  %3891 = sub i32 65536, %3801
  %3892 = add i32 %3891, %3805
  %3893 = sub i32 %3802, %3801
  %3894 = sub i32 %3893, %3892
  %3895 = ashr i32 %3892, 11
  %3896 = ashr i32 %3773, 11
  %3897 = mul i32 %3895, %3896
  %3898 = mul i32 %3897, %3895
  %3899 = lshr i32 %3898, 8
  %3900 = ashr i32 %3894, 11
  %3901 = mul i32 %3900, %3896
  %3902 = mul i32 %3901, %3900
  %3903 = lshr i32 %3902, 8
  %3904 = ashr i32 %3801, 16
  %3905 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %3906 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3905, i64 14
  %3907 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3906, align 8
  %3908 = call %class.SkBlitter* %3907(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %3909 = and i32 %3899, 255
  %3910 = xor i32 %3909, 255
  %3911 = and i32 %3903, 255
  %3912 = bitcast %class.SkBlitter* %3908 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3913 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3912, align 8
  %3914 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3913, i64 9
  %3915 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3914, align 8
  call void %3915(%class.SkBlitter* %3908, i32 %3904, i32 %3764, i32 %3910, i32 %3911) #13
  br label %3918

3916:                                             ; preds = %3871
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3764, i32 %3805, i32 %3801, i32 %3805, i32 %3802, i32 2147483647, i32 %3773, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3918

3917:                                             ; preds = %3796
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3764, i32 %3798, i32 %3801, i32 %3799, i32 %3802, i32 %3772, i32 %3773, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %3918

3918:                                             ; preds = %3917, %3916, %3890, %3875, %3869, %3790, %3758
  %3919 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3106, align 8
  %3920 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3919, i64 19
  %3921 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3920, align 8
  call void %3921(%class.AdditiveBlitter* nonnull %2917, i32 %3759, i32 %3765) #13
  %3922 = icmp sgt i32 %3763, 1
  br i1 %3922, label %3758, label %3923

3923:                                             ; preds = %3918, %3516, %3746
  %3924 = phi i32 [ %3518, %3516 ], [ %3541, %3746 ], [ %3771, %3918 ]
  %3925 = phi i32 [ %3517, %3516 ], [ %3540, %3746 ], [ %3770, %3918 ]
  %3926 = phi i32 [ %3511, %3516 ], [ %3537, %3746 ], [ %3767, %3918 ]
  %3927 = phi i32 [ %3510, %3516 ], [ %3532, %3746 ], [ %3766, %3918 ]
  %3928 = phi i32 [ %3112, %3516 ], [ %3525, %3746 ], [ %3765, %3918 ]
  %3929 = ashr i32 %3928, 16
  %3930 = sub nsw i32 %3303, %3928
  %3931 = sext i32 %3309 to i64
  %3932 = sext i32 %3930 to i64
  %3933 = mul nsw i64 %3932, %3931
  %3934 = lshr i64 %3933, 16
  %3935 = trunc i64 %3934 to i32
  %3936 = add nsw i32 %3927, %3935
  %3937 = icmp slt i32 %3936, %3107
  %3938 = select i1 %3937, i32 %3107, i32 %3936
  %3939 = sext i32 %3315 to i64
  %3940 = mul nsw i64 %3932, %3939
  %3941 = lshr i64 %3940, 16
  %3942 = trunc i64 %3941 to i32
  %3943 = add nsw i32 %3926, %3942
  %3944 = icmp slt i32 %3108, %3943
  %3945 = select i1 %3944, i32 %3108, i32 %3943
  %3946 = and i32 %3938, -4096
  %3947 = and i32 %3945, -4096
  %3948 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 9
  %3949 = load i32, i32* %3948, align 8
  %3950 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 9
  %3951 = load i32, i32* %3950, align 8
  %3952 = mul nsw i32 %3930, 255
  %3953 = add nsw i32 %3952, 32768
  %3954 = lshr i32 %3953, 16
  %3955 = trunc i32 %3954 to i8
  %3956 = icmp sgt i32 %3925, %3924
  br i1 %3956, label %4152, label %3957

3957:                                             ; preds = %3923
  %3958 = icmp sgt i32 %3946, %3947
  br i1 %3958, label %3959, label %3972

3959:                                             ; preds = %3957
  %3960 = icmp sgt i32 %3925, %3946
  %3961 = select i1 %3960, i32 %3946, i32 %3925
  %3962 = select i1 %3960, i32 %3925, i32 %3946
  %3963 = icmp sgt i32 %3924, %3947
  %3964 = select i1 %3963, i32 %3947, i32 %3924
  %3965 = select i1 %3963, i32 %3924, i32 %3947
  %3966 = icmp slt i32 %3961, %3964
  %3967 = select i1 %3966, i32 %3964, i32 %3961
  %3968 = icmp slt i32 %3965, %3962
  %3969 = select i1 %3968, i32 %3965, i32 %3962
  %3970 = add nsw i32 %3967, %3969
  %3971 = sdiv i32 %3970, 2
  br label %3972

3972:                                             ; preds = %3959, %3957
  %3973 = phi i32 [ %3971, %3959 ], [ %3946, %3957 ]
  %3974 = phi i32 [ %3971, %3959 ], [ %3947, %3957 ]
  %3975 = icmp eq i32 %3925, %3924
  %3976 = icmp eq i32 %3973, %3974
  %3977 = and i1 %3975, %3976
  br i1 %3977, label %4152, label %3978

3978:                                             ; preds = %3972
  %3979 = icmp slt i32 %3973, %3925
  %3980 = select i1 %3979, i32 %3973, i32 %3925
  %3981 = select i1 %3979, i32 %3925, i32 %3973
  %3982 = icmp slt i32 %3974, %3924
  %3983 = select i1 %3982, i32 %3974, i32 %3924
  %3984 = select i1 %3982, i32 %3924, i32 %3974
  %3985 = add nsw i32 %3981, 65535
  %3986 = and i32 %3985, -65536
  %3987 = and i32 %3983, -65536
  %3988 = icmp slt i32 %3987, %3986
  br i1 %3988, label %4151, label %3989

3989:                                             ; preds = %3978
  %3990 = icmp sgt i32 %3986, %3980
  br i1 %3990, label %3991, label %4060

3991:                                             ; preds = %3989
  %3992 = sub nsw i32 %3986, %3980
  %3993 = add nsw i32 %3992, 65535
  %3994 = ashr i32 %3993, 16
  switch i32 %3994, label %4059 [
    i32 1, label %3995
    i32 2, label %4021
  ]

3995:                                             ; preds = %3991
  %3996 = sub i32 %3986, %3981
  %3997 = add nsw i32 %3996, %3992
  %3998 = sdiv i32 %3997, 2
  %3999 = lshr i32 %3998, 8
  %4000 = ashr i32 %3980, 16
  %4001 = icmp eq i8 %3955, -1
  br i1 %4001, label %4002, label %4012

4002:                                             ; preds = %3995
  %4003 = trunc i32 %3999 to i8
  %4004 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %4005 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4004, i64 14
  %4006 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4005, align 8
  %4007 = call %class.SkBlitter* %4006(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4008 = bitcast %class.SkBlitter* %4007 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4009 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4008, align 8
  %4010 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4009, i64 4
  %4011 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4010, align 8
  call void %4011(%class.SkBlitter* %4007, i32 %4000, i32 %3929, i32 1, i8 zeroext %4003) #13
  br label %4060

4012:                                             ; preds = %3995
  %4013 = and i32 %3999, 255
  %4014 = and i32 %3954, 255
  %4015 = mul nuw nsw i32 %4013, %4014
  %4016 = lshr i32 %4015, 8
  %4017 = trunc i32 %4016 to i8
  %4018 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4019 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4018, i64 16
  %4020 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4019, align 8
  call void %4020(%class.AdditiveBlitter* nonnull %2917, i32 %4000, i32 %3929, i8 zeroext %4017) #13
  br label %4060

4021:                                             ; preds = %3991
  %4022 = sub i32 -65536, %3980
  %4023 = add i32 %3986, %4022
  %4024 = sub i32 %3981, %3980
  %4025 = sub i32 %4024, %4023
  %4026 = ashr i32 %4023, 11
  %4027 = ashr i32 %3949, 11
  %4028 = mul i32 %4026, %4027
  %4029 = mul i32 %4028, %4026
  %4030 = lshr i32 %4029, 8
  %4031 = ashr i32 %4025, 11
  %4032 = mul i32 %4031, %4027
  %4033 = mul i32 %4032, %4031
  %4034 = lshr i32 %4033, 8
  %4035 = trunc i32 %4034 to i8
  %4036 = sub i8 %3955, %4035
  %4037 = ashr i32 %3980, 16
  %4038 = icmp eq i8 %3955, -1
  br i1 %4038, label %4039, label %4050

4039:                                             ; preds = %4021
  %4040 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %4041 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4040, i64 14
  %4042 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4041, align 8
  %4043 = call %class.SkBlitter* %4042(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4044 = and i32 %4030, 255
  %4045 = zext i8 %4036 to i32
  %4046 = bitcast %class.SkBlitter* %4043 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4047 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4046, align 8
  %4048 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4047, i64 9
  %4049 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4048, align 8
  call void %4049(%class.SkBlitter* %4043, i32 %4037, i32 %3929, i32 %4044, i32 %4045) #13
  br label %4060

4050:                                             ; preds = %4021
  %4051 = trunc i32 %4030 to i8
  %4052 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4053 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4052, i64 16
  %4054 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4053, align 8
  call void %4054(%class.AdditiveBlitter* nonnull %2917, i32 %4037, i32 %3929, i8 zeroext %4051) #13
  %4055 = add nsw i32 %4037, 1
  %4056 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4057 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4056, i64 16
  %4058 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4057, align 8
  call void %4058(%class.AdditiveBlitter* nonnull %2917, i32 %4055, i32 %3929, i8 zeroext %4036) #13
  br label %4060

4059:                                             ; preds = %3991
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3929, i32 %3980, i32 %3986, i32 %3981, i32 %3986, i32 %3949, i32 2147483647, i8 zeroext %3955, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %4060

4060:                                             ; preds = %4059, %4050, %4039, %4012, %4002, %3989
  %4061 = icmp sgt i32 %3987, %3986
  br i1 %4061, label %4062, label %4080

4062:                                             ; preds = %4060
  %4063 = ashr i32 %3985, 16
  %4064 = sub nsw i32 %3987, %3986
  %4065 = ashr exact i32 %4064, 16
  %4066 = icmp eq i8 %3955, -1
  br i1 %4066, label %4067, label %4076

4067:                                             ; preds = %4062
  %4068 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %4069 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4068, i64 14
  %4070 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4069, align 8
  %4071 = call %class.SkBlitter* %4070(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4072 = bitcast %class.SkBlitter* %4071 to void (%class.SkBlitter*, i32, i32, i32)***
  %4073 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4072, align 8
  %4074 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4073, i64 2
  %4075 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4074, align 8
  call void %4075(%class.SkBlitter* %4071, i32 %4063, i32 %3929, i32 %4065) #13
  br label %4080

4076:                                             ; preds = %4062
  %4077 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3105, align 8
  %4078 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4077, i64 17
  %4079 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4078, align 8
  call void %4079(%class.AdditiveBlitter* nonnull %2917, i32 %4063, i32 %3929, i32 %4065, i8 zeroext %3955) #13
  br label %4080

4080:                                             ; preds = %4076, %4067, %4060
  %4081 = icmp sgt i32 %3984, %3987
  br i1 %4081, label %4082, label %4152

4082:                                             ; preds = %4080
  %4083 = sub nsw i32 %3984, %3987
  %4084 = add nsw i32 %4083, 65535
  %4085 = ashr i32 %4084, 16
  switch i32 %4085, label %4150 [
    i32 1, label %4086
    i32 2, label %4112
  ]

4086:                                             ; preds = %4082
  %4087 = sub i32 %3983, %3987
  %4088 = add nsw i32 %4087, %4083
  %4089 = sdiv i32 %4088, 2
  %4090 = lshr i32 %4089, 8
  %4091 = ashr i32 %3983, 16
  %4092 = icmp eq i8 %3955, -1
  br i1 %4092, label %4093, label %4103

4093:                                             ; preds = %4086
  %4094 = trunc i32 %4090 to i8
  %4095 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %4096 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4095, i64 14
  %4097 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4096, align 8
  %4098 = call %class.SkBlitter* %4097(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4099 = bitcast %class.SkBlitter* %4098 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4100 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4099, align 8
  %4101 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4100, i64 4
  %4102 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4101, align 8
  call void %4102(%class.SkBlitter* %4098, i32 %4091, i32 %3929, i32 1, i8 zeroext %4094) #13
  br label %4152

4103:                                             ; preds = %4086
  %4104 = and i32 %4090, 255
  %4105 = and i32 %3954, 255
  %4106 = mul nuw nsw i32 %4104, %4105
  %4107 = lshr i32 %4106, 8
  %4108 = trunc i32 %4107 to i8
  %4109 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4110 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4109, i64 16
  %4111 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4110, align 8
  call void %4111(%class.AdditiveBlitter* nonnull %2917, i32 %4091, i32 %3929, i8 zeroext %4108) #13
  br label %4152

4112:                                             ; preds = %4082
  %4113 = sub i32 65536, %3983
  %4114 = add i32 %4113, %3987
  %4115 = sub i32 %3984, %3983
  %4116 = sub i32 %4115, %4114
  %4117 = ashr i32 %4114, 11
  %4118 = ashr i32 %3951, 11
  %4119 = mul i32 %4117, %4118
  %4120 = mul i32 %4119, %4117
  %4121 = lshr i32 %4120, 8
  %4122 = trunc i32 %4121 to i8
  %4123 = sub i8 %3955, %4122
  %4124 = ashr i32 %4116, 11
  %4125 = mul i32 %4124, %4118
  %4126 = mul i32 %4125, %4124
  %4127 = lshr i32 %4126, 8
  %4128 = ashr i32 %3983, 16
  %4129 = icmp eq i8 %3955, -1
  br i1 %4129, label %4130, label %4141

4130:                                             ; preds = %4112
  %4131 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3104, align 8
  %4132 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4131, i64 14
  %4133 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4132, align 8
  %4134 = call %class.SkBlitter* %4133(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4135 = zext i8 %4123 to i32
  %4136 = and i32 %4127, 255
  %4137 = bitcast %class.SkBlitter* %4134 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4138 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4137, align 8
  %4139 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4138, i64 9
  %4140 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4139, align 8
  call void %4140(%class.SkBlitter* %4134, i32 %4128, i32 %3929, i32 %4135, i32 %4136) #13
  br label %4152

4141:                                             ; preds = %4112
  %4142 = trunc i32 %4127 to i8
  %4143 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4144 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4143, i64 16
  %4145 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4144, align 8
  call void %4145(%class.AdditiveBlitter* nonnull %2917, i32 %4128, i32 %3929, i8 zeroext %4123) #13
  %4146 = add nsw i32 %4128, 1
  %4147 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3103, align 8
  %4148 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4147, i64 16
  %4149 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4148, align 8
  call void %4149(%class.AdditiveBlitter* nonnull %2917, i32 %4146, i32 %3929, i8 zeroext %4142) #13
  br label %4152

4150:                                             ; preds = %4082
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3929, i32 %3987, i32 %3983, i32 %3987, i32 %3984, i32 2147483647, i32 %3951, i8 zeroext %3955, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %4152

4151:                                             ; preds = %3978
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %3929, i32 %3980, i32 %3983, i32 %3981, i32 %3984, i32 %3949, i32 %3951, i8 zeroext %3955, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %4152

4152:                                             ; preds = %4151, %4150, %4141, %4130, %4103, %4093, %4080, %3972, %3923
  %4153 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3106, align 8
  %4154 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %4153, i64 19
  %4155 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %4154, align 8
  call void %4155(%class.AdditiveBlitter* nonnull %2917, i32 %3928, i32 %3303) #13
  %4156 = add nsw i32 %3938, -2048
  %4157 = add nsw i32 %3945, -2048
  br label %4158

4158:                                             ; preds = %4152, %3494, %3492, %3443, %3433, %3415
  %4159 = phi i32 [ %4157, %4152 ], [ %3313, %3433 ], [ %3313, %3415 ], [ %3313, %3492 ], [ %3313, %3494 ], [ %3313, %3443 ]
  %4160 = phi i32 [ %4156, %4152 ], [ %3307, %3433 ], [ %3307, %3415 ], [ %3307, %3492 ], [ %3307, %3494 ], [ %3307, %3443 ]
  store i32 %4160, i32* %3304, align 8
  store i32 %4159, i32* %3310, align 8
  %4161 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3257, i64 0, i32 6
  store i32 %3303, i32* %4161, align 4
  %4162 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3255, i64 0, i32 6
  store i32 %3303, i32* %4162, align 4
  br label %3109

4163:                                             ; preds = %3082, %3074
  %4164 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3056, align 8
  %4165 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4164, i64 0, i32 8
  %4166 = load i32, i32* %4165, align 4
  %4167 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3046, align 8
  %4168 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4167, i64 0, i32 7
  %4169 = load i32, i32* %4168, align 8
  %4170 = sub nsw i32 %4166, %4169
  %4171 = ashr i32 %4170, 16
  %4172 = shl nsw i32 %4171, 2
  %4173 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %0) #13
  %4174 = sub nsw i32 %3076, %3075
  %4175 = load i8, i8* %77, align 2
  store i32 %3077, i32* %3053, align 8
  store i32 %3077, i32* %3050, align 8
  store i32 %3078, i32* %3064, align 8
  store i32 %3078, i32* %3061, align 8
  %4176 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3046, align 8
  %4177 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4176, i64 0, i32 7
  %4178 = shl i32 %3075, 16
  %4179 = load i32, i32* %4177, align 4
  %4180 = icmp slt i32 %4179, %4178
  %4181 = select i1 %4180, i32 %4178, i32 %4179
  br label %4182

4182:                                             ; preds = %4212, %4163
  %4183 = phi i32 [ %4222, %4212 ], [ %4179, %4163 ]
  %4184 = phi %struct.SkAnalyticEdge* [ %4220, %4212 ], [ %4176, %4163 ]
  %4185 = phi i32 [ %4218, %4212 ], [ 2147483647, %4163 ]
  %4186 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 6
  %4187 = load i32, i32* %4186, align 4
  %4188 = add nsw i32 %4187, 65536
  %4189 = icmp eq i32 %4188, %4181
  br i1 %4189, label %4190, label %4196

4190:                                             ; preds = %4182
  %4191 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 3
  %4192 = load i32, i32* %4191, align 8
  %4193 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 4
  %4194 = load i32, i32* %4193, align 4
  %4195 = add nsw i32 %4194, %4192
  store i32 %4195, i32* %4191, align 8
  br label %4211

4196:                                             ; preds = %4182
  %4197 = icmp eq i32 %4187, %4181
  br i1 %4197, label %4212, label %4198

4198:                                             ; preds = %4196
  %4199 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 5
  %4200 = load i32, i32* %4199, align 8
  %4201 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 4
  %4202 = load i32, i32* %4201, align 4
  %4203 = sub nsw i32 %4181, %4183
  %4204 = sext i32 %4202 to i64
  %4205 = sext i32 %4203 to i64
  %4206 = mul nsw i64 %4204, %4205
  %4207 = lshr i64 %4206, 16
  %4208 = trunc i64 %4207 to i32
  %4209 = add nsw i32 %4200, %4208
  %4210 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 3
  store i32 %4209, i32* %4210, align 8
  br label %4211

4211:                                             ; preds = %4190, %4198
  store i32 %4181, i32* %4186, align 4
  br label %4212

4212:                                             ; preds = %4211, %4196
  %4213 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 8
  %4214 = load i32, i32* %4213, align 4
  %4215 = icmp sgt i32 %4214, %4181
  %4216 = icmp sgt i32 %4185, %4214
  %4217 = and i1 %4215, %4216
  %4218 = select i1 %4217, i32 %4214, i32 %4185
  %4219 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4184, i64 0, i32 0
  %4220 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4219, align 8
  %4221 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4220, i64 0, i32 7
  %4222 = load i32, i32* %4221, align 8
  %4223 = icmp slt i32 %4181, %4222
  br i1 %4223, label %4224, label %4182

4224:                                             ; preds = %4212
  %4225 = add nsw i32 %4172, 4
  %4226 = shl nsw i32 %4174, 1
  %4227 = and i8 %4175, 3
  %4228 = icmp sgt i32 %2929, %4225
  %4229 = icmp sgt i32 %4173, %4226
  %4230 = zext i8 %4227 to i32
  %4231 = icmp sgt i32 %4218, %4222
  %4232 = select i1 %4231, i32 %4222, i32 %4218
  %4233 = and i32 %4230, 1
  %4234 = icmp eq i32 %4233, 0
  %4235 = select i1 %4234, i32 -1, i32 1
  %4236 = and i32 %4230, 2
  %4237 = icmp ne i32 %4236, 0
  %4238 = xor i1 %4237, true
  %4239 = icmp sge i32 %4178, %4179
  %4240 = or i1 %4239, %4238
  br i1 %4240, label %4241, label %4243

4241:                                             ; preds = %4224
  %4242 = ashr exact i32 %3077, 16
  br label %4288

4243:                                             ; preds = %4224
  %4244 = sub nsw i32 %3078, %3077
  %4245 = ashr exact i32 %4244, 16
  %4246 = ashr i32 %4181, 16
  %4247 = icmp eq i32 %4246, %3075
  br i1 %4247, label %4248, label %4250

4248:                                             ; preds = %4243
  %4249 = ashr exact i32 %3077, 16
  br label %4263

4250:                                             ; preds = %4243
  %4251 = bitcast %class.RunBasedAdditiveBlitter* %21 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4252 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4251, align 8
  %4253 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4252, i64 14
  %4254 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4253, align 8
  %4255 = call %class.SkBlitter* %4254(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4256 = ashr exact i32 %3077, 16
  %4257 = sub nsw i32 %4246, %3075
  %4258 = bitcast %class.SkBlitter* %4255 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4259 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4258, align 8
  %4260 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4259, i64 5
  %4261 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4260, align 8
  call void %4261(%class.SkBlitter* %4255, i32 %4256, i32 %3075, i32 %4245, i32 %4257) #13
  %4262 = and i32 %4181, -65536
  br label %4263

4263:                                             ; preds = %4248, %4250
  %4264 = phi i32 [ %4249, %4248 ], [ %4256, %4250 ]
  %4265 = phi i32 [ %4178, %4248 ], [ %4262, %4250 ]
  %4266 = phi i32 [ %3075, %4248 ], [ %4246, %4250 ]
  %4267 = sub nsw i32 %4181, %4265
  %4268 = mul nsw i32 %4267, 255
  %4269 = add nsw i32 %4268, 32768
  %4270 = lshr i32 %4269, 16
  %4271 = trunc i32 %4270 to i8
  %4272 = icmp eq i8 %4271, -1
  br i1 %4272, label %4273, label %4283

4273:                                             ; preds = %4263
  %4274 = bitcast %class.RunBasedAdditiveBlitter* %21 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4275 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4274, align 8
  %4276 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4275, i64 14
  %4277 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4276, align 8
  %4278 = call %class.SkBlitter* %4277(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4279 = bitcast %class.SkBlitter* %4278 to void (%class.SkBlitter*, i32, i32, i32)***
  %4280 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4279, align 8
  %4281 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4280, i64 2
  %4282 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4281, align 8
  call void %4282(%class.SkBlitter* %4278, i32 %4264, i32 %4266, i32 %4245) #13
  br label %4288

4283:                                             ; preds = %4263
  %4284 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %4285 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4284, align 8
  %4286 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4285, i64 17
  %4287 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4286, align 8
  call void %4287(%class.AdditiveBlitter* nonnull %2917, i32 %4264, i32 %4266, i32 %4245, i8 zeroext %4271) #13
  br label %4288

4288:                                             ; preds = %4283, %4273, %4241
  %4289 = phi i32 [ %4242, %4241 ], [ %4264, %4283 ], [ %4264, %4273 ]
  %4290 = bitcast %class.RunBasedAdditiveBlitter* %21 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4291 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %4292 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %4293 = xor i1 %4228, true
  %4294 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 10
  %4295 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 11
  %4296 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 12
  %4297 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %9, i64 0, i32 6
  %4298 = bitcast %class.RunBasedAdditiveBlitter* %21 to void (%class.RunBasedAdditiveBlitter*, i32, i32)***
  %4299 = shl i32 %3076, 16
  br label %4300

4300:                                             ; preds = %5206, %4288
  %4301 = phi i32 [ %4232, %4288 ], [ %5207, %5206 ]
  %4302 = phi i32 [ %4181, %4288 ], [ %4316, %5206 ]
  %4303 = add nsw i32 %4302, 65536
  %4304 = and i32 %4303, -65536
  %4305 = icmp slt i32 %4304, %4301
  %4306 = select i1 %4305, i32 %4304, i32 %4301
  %4307 = and i32 %4306, 65535
  %4308 = icmp eq i32 %4307, 0
  %4309 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3046, align 8
  %4310 = sub nsw i32 %4306, %4302
  %4311 = and i32 %4310, 16384
  %4312 = icmp eq i32 %4311, 0
  %4313 = add nsw i32 %4302, 16384
  %4314 = lshr i32 %4310, 15
  %4315 = and i32 %4314, 1
  %4316 = select i1 %4312, i32 %4306, i32 %4313
  %4317 = select i1 %4312, i32 %4315, i32 2
  %4318 = sub nsw i32 %4316, %4302
  %4319 = mul nsw i32 %4318, 255
  %4320 = add nsw i32 %4319, 32768
  %4321 = lshr i32 %4320, 16
  %4322 = trunc i32 %4321 to i8
  %4323 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4309, i64 0, i32 7
  %4324 = load i32, i32* %4323, align 8
  %4325 = icmp sgt i32 %4324, %4302
  br i1 %4325, label %4816, label %4326

4326:                                             ; preds = %4300
  %4327 = load i32, i32* %3050, align 8
  %4328 = ashr i32 %4302, 16
  %4329 = icmp ne i8 %4322, -1
  %4330 = and i32 %4321, 255
  %4331 = add nsw i32 %4316, 16384
  %4332 = or i1 %4329, %4
  br label %4333

4333:                                             ; preds = %4808, %4326
  %4334 = phi %struct.SkAnalyticEdge* [ %4309, %4326 ], [ %4697, %4808 ]
  %4335 = phi i32 [ %4289, %4326 ], [ %4695, %4808 ]
  %4336 = phi i8 [ 0, %4326 ], [ %4694, %4808 ]
  %4337 = phi i32 [ 0, %4326 ], [ %4693, %4808 ]
  %4338 = phi i32 [ %3077, %4326 ], [ %4692, %4808 ]
  %4339 = phi %struct.SkAnalyticEdge* [ %8, %4326 ], [ %4691, %4808 ]
  %4340 = phi i32 [ %4327, %4326 ], [ %4810, %4808 ]
  %4341 = phi i1 [ %4237, %4326 ], [ %4352, %4808 ]
  %4342 = phi i32 [ 0, %4326 ], [ %4348, %4808 ]
  %4343 = phi i32 [ 2147483647, %4326 ], [ %4809, %4808 ]
  %4344 = bitcast %struct.SkAnalyticEdge* %4334 to %struct.SkAnalyticQuadraticEdge*
  %4345 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 16
  %4346 = load i8, i8* %4345, align 1
  %4347 = sext i8 %4346 to i32
  %4348 = add nsw i32 %4342, %4347
  %4349 = and i32 %4348, %4235
  %4350 = icmp eq i32 %4349, 0
  %4351 = xor i1 %4350, true
  %4352 = xor i1 %4237, %4351
  %4353 = xor i1 %4341, true
  %4354 = and i1 %4352, %4353
  %4355 = xor i1 %4237, %4350
  %4356 = and i1 %4341, %4355
  %4357 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 8
  %4358 = load i32, i32* %4357, align 4
  %4359 = icmp eq i32 %4358, %4316
  br i1 %4228, label %4360, label %4378

4360:                                             ; preds = %4333
  %4361 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 2
  %4362 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4361, align 8
  %4363 = icmp eq %struct.SkAnalyticEdge* %4362, null
  %4364 = or i1 %4354, %4363
  br i1 %4364, label %4370, label %4365

4365:                                             ; preds = %4360
  %4366 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4367 = load i32, i32* %4366, align 8
  %4368 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4362, i64 0, i32 3
  %4369 = load i32, i32* %4368, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4334, i32 %4302, i32 %4367, i32 %4369, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  br label %4370

4370:                                             ; preds = %4365, %4360
  %4371 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 2
  %4372 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4371, align 8
  %4373 = icmp ne %struct.SkAnalyticEdge* %4372, %4334
  %4374 = or i1 %4356, %4373
  br i1 %4374, label %4378, label %4375

4375:                                             ; preds = %4370
  %4376 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4377 = load i32, i32* %4376, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4339, i32 %4302, i32 %4338, i32 %4377, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  br label %4378

4378:                                             ; preds = %4375, %4370, %4333
  br i1 %4356, label %4379, label %4666

4379:                                             ; preds = %4378
  br i1 %4228, label %4380, label %4419

4380:                                             ; preds = %4379
  %4381 = and i8 %4336, 1
  %4382 = icmp ne i8 %4381, 0
  %4383 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 2
  %4384 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4383, align 8
  %4385 = icmp eq %struct.SkAnalyticEdge* %4384, null
  %4386 = icmp eq %struct.SkAnalyticEdge* %4384, %4334
  %4387 = or i1 %4385, %4386
  br i1 %4387, label %4392, label %4388

4388:                                             ; preds = %4380
  %4389 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4384, i64 0, i32 3
  %4390 = load i32, i32* %4389, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4339, i32 %4302, i32 %4338, i32 %4390, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  %4391 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4383, align 8
  br label %4392

4392:                                             ; preds = %4388, %4380
  %4393 = phi %struct.SkAnalyticEdge* [ %4384, %4380 ], [ %4391, %4388 ]
  %4394 = icmp eq %struct.SkAnalyticEdge* %4393, null
  br i1 %4394, label %4395, label %4406

4395:                                             ; preds = %4392
  %4396 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 10
  store i32 %4338, i32* %4396, align 4
  %4397 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 11
  store i32 %4302, i32* %4397, align 8
  %4398 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 12
  store i32 %4337, i32* %4398, align 4
  %4399 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4400 = load i32, i32* %4399, align 8
  %4401 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 9
  %4402 = load i32, i32* %4401, align 8
  %4403 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 10
  store i32 %4400, i32* %4403, align 4
  %4404 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 11
  store i32 %4302, i32* %4404, align 8
  %4405 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 12
  store i32 %4402, i32* %4405, align 4
  store %struct.SkAnalyticEdge* %4334, %struct.SkAnalyticEdge** %4383, align 8
  br label %4406

4406:                                             ; preds = %4395, %4392
  %4407 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 6
  store i32 %4316, i32* %4407, align 4
  %4408 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 4
  %4409 = load i32, i32* %4408, align 4
  %4410 = ashr i32 %4409, %4317
  %4411 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4412 = load i32, i32* %4411, align 8
  %4413 = add nsw i32 %4412, %4410
  store i32 %4413, i32* %4411, align 8
  %4414 = or i1 %4308, %4382
  %4415 = or i1 %4414, %4359
  br i1 %4415, label %4416, label %4690

4416:                                             ; preds = %4406
  %4417 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 3
  %4418 = load i32, i32* %4417, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4339, i32 %4316, i32 %4418, i32 %4413, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  br label %4690

4419:                                             ; preds = %4379
  %4420 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4421 = load i32, i32* %4420, align 8
  %4422 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 6
  store i32 %4316, i32* %4422, align 4
  %4423 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 4
  %4424 = load i32, i32* %4423, align 4
  %4425 = ashr i32 %4424, %4317
  %4426 = add nsw i32 %4425, %4421
  store i32 %4426, i32* %4420, align 8
  %4427 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4339, i64 0, i32 3
  %4428 = load i32, i32* %4427, align 4
  %4429 = icmp sgt i32 %4428, %3077
  %4430 = select i1 %4429, i32 %4428, i32 %3077
  %4431 = icmp slt i32 %4421, %3078
  %4432 = select i1 %4431, i32 %4421, i32 %3078
  %4433 = icmp slt i32 %4426, %3078
  %4434 = select i1 %4433, i32 %4426, i32 %3078
  %4435 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 9
  %4436 = load i32, i32* %4435, align 8
  br i1 %4332, label %4464, label %4437

4437:                                             ; preds = %4419
  %4438 = ashr i32 %4338, 16
  %4439 = icmp slt i32 %4438, %4335
  %4440 = ashr i32 %4428, 16
  %4441 = icmp slt i32 %4440, %4335
  %4442 = or i1 %4439, %4441
  br i1 %4442, label %4464, label %4443

4443:                                             ; preds = %4437
  %4444 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 0
  %4445 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4444, align 8
  %4446 = icmp ne %struct.SkAnalyticEdge* %4445, null
  %4447 = icmp ne %struct.SkAnalyticEdge* %4334, null
  %4448 = and i1 %4447, %4446
  br i1 %4448, label %4449, label %4464

4449:                                             ; preds = %4443
  %4450 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4445, i64 0, i32 7
  %4451 = load i32, i32* %4450, align 8
  %4452 = icmp slt i32 %4451, %4316
  br i1 %4452, label %4453, label %4464

4453:                                             ; preds = %4449
  %4454 = add nsw i32 %4426, 65536
  %4455 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4445, i64 0, i32 3
  %4456 = load i32, i32* %4455, align 8
  %4457 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4445, i64 0, i32 4
  %4458 = load i32, i32* %4457, align 4
  %4459 = icmp slt i32 %4458, 0
  %4460 = sub nsw i32 0, %4458
  %4461 = select i1 %4459, i32 %4460, i32 %4458
  %4462 = sub nsw i32 %4456, %4461
  %4463 = icmp sge i32 %4454, %4462
  br label %4464

4464:                                             ; preds = %4453, %4449, %4443, %4437, %4419
  %4465 = phi i1 [ %4, %4419 ], [ true, %4437 ], [ false, %4449 ], [ false, %4443 ], [ %4463, %4453 ]
  %4466 = icmp sgt i32 %4338, %4432
  br i1 %4466, label %4660, label %4467

4467:                                             ; preds = %4464
  %4468 = icmp sgt i32 %4430, %4434
  br i1 %4468, label %4469, label %4482

4469:                                             ; preds = %4467
  %4470 = icmp sgt i32 %4338, %4430
  %4471 = select i1 %4470, i32 %4430, i32 %4338
  %4472 = select i1 %4470, i32 %4338, i32 %4430
  %4473 = icmp sgt i32 %4432, %4434
  %4474 = select i1 %4473, i32 %4434, i32 %4432
  %4475 = select i1 %4473, i32 %4432, i32 %4434
  %4476 = icmp slt i32 %4471, %4474
  %4477 = select i1 %4476, i32 %4474, i32 %4471
  %4478 = icmp slt i32 %4475, %4472
  %4479 = select i1 %4478, i32 %4475, i32 %4472
  %4480 = add nsw i32 %4477, %4479
  %4481 = sdiv i32 %4480, 2
  br label %4482

4482:                                             ; preds = %4469, %4467
  %4483 = phi i32 [ %4481, %4469 ], [ %4430, %4467 ]
  %4484 = phi i32 [ %4481, %4469 ], [ %4434, %4467 ]
  %4485 = icmp eq i32 %4338, %4432
  %4486 = icmp eq i32 %4483, %4484
  %4487 = and i1 %4485, %4486
  br i1 %4487, label %4660, label %4488

4488:                                             ; preds = %4482
  %4489 = icmp slt i32 %4483, %4338
  %4490 = select i1 %4489, i32 %4483, i32 %4338
  %4491 = select i1 %4489, i32 %4338, i32 %4483
  %4492 = icmp slt i32 %4484, %4432
  %4493 = select i1 %4492, i32 %4484, i32 %4432
  %4494 = select i1 %4492, i32 %4432, i32 %4484
  %4495 = add nsw i32 %4491, 65535
  %4496 = and i32 %4495, -65536
  %4497 = and i32 %4493, -65536
  %4498 = icmp slt i32 %4497, %4496
  br i1 %4498, label %4659, label %4499

4499:                                             ; preds = %4488
  %4500 = icmp sgt i32 %4496, %4490
  br i1 %4500, label %4501, label %4569

4501:                                             ; preds = %4499
  %4502 = sub nsw i32 %4496, %4490
  %4503 = add nsw i32 %4502, 65535
  %4504 = ashr i32 %4503, 16
  switch i32 %4504, label %4568 [
    i32 1, label %4505
    i32 2, label %4530
  ]

4505:                                             ; preds = %4501
  %4506 = sub i32 %4496, %4491
  %4507 = add nsw i32 %4506, %4502
  %4508 = sdiv i32 %4507, 2
  %4509 = lshr i32 %4508, 8
  %4510 = ashr i32 %4490, 16
  %4511 = or i1 %4329, %4465
  br i1 %4511, label %4522, label %4512

4512:                                             ; preds = %4505
  %4513 = trunc i32 %4509 to i8
  %4514 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4515 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4514, i64 14
  %4516 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4515, align 8
  %4517 = call %class.SkBlitter* %4516(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4518 = bitcast %class.SkBlitter* %4517 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4519 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4518, align 8
  %4520 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4519, i64 4
  %4521 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4520, align 8
  call void %4521(%class.SkBlitter* %4517, i32 %4510, i32 %4328, i32 1, i8 zeroext %4513) #13
  br label %4569

4522:                                             ; preds = %4505
  %4523 = and i32 %4509, 255
  %4524 = mul nuw nsw i32 %4523, %4330
  %4525 = lshr i32 %4524, 8
  %4526 = trunc i32 %4525 to i8
  %4527 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4528 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4527, i64 16
  %4529 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4528, align 8
  call void %4529(%class.AdditiveBlitter* nonnull %2917, i32 %4510, i32 %4328, i8 zeroext %4526) #13
  br label %4569

4530:                                             ; preds = %4501
  %4531 = sub i32 -65536, %4490
  %4532 = add i32 %4496, %4531
  %4533 = sub i32 %4491, %4490
  %4534 = sub i32 %4533, %4532
  %4535 = ashr i32 %4532, 11
  %4536 = ashr i32 %4337, 11
  %4537 = mul i32 %4535, %4536
  %4538 = mul i32 %4537, %4535
  %4539 = lshr i32 %4538, 8
  %4540 = ashr i32 %4534, 11
  %4541 = mul i32 %4540, %4536
  %4542 = mul i32 %4541, %4540
  %4543 = lshr i32 %4542, 8
  %4544 = trunc i32 %4543 to i8
  %4545 = sub i8 %4322, %4544
  %4546 = ashr i32 %4490, 16
  %4547 = or i1 %4329, %4465
  br i1 %4547, label %4559, label %4548

4548:                                             ; preds = %4530
  %4549 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4550 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4549, i64 14
  %4551 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4550, align 8
  %4552 = call %class.SkBlitter* %4551(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4553 = and i32 %4539, 255
  %4554 = zext i8 %4545 to i32
  %4555 = bitcast %class.SkBlitter* %4552 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4556 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4555, align 8
  %4557 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4556, i64 9
  %4558 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4557, align 8
  call void %4558(%class.SkBlitter* %4552, i32 %4546, i32 %4328, i32 %4553, i32 %4554) #13
  br label %4569

4559:                                             ; preds = %4530
  %4560 = trunc i32 %4539 to i8
  %4561 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4562 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4561, i64 16
  %4563 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4562, align 8
  call void %4563(%class.AdditiveBlitter* nonnull %2917, i32 %4546, i32 %4328, i8 zeroext %4560) #13
  %4564 = add nsw i32 %4546, 1
  %4565 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4566 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4565, i64 16
  %4567 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4566, align 8
  call void %4567(%class.AdditiveBlitter* nonnull %2917, i32 %4564, i32 %4328, i8 zeroext %4545) #13
  br label %4569

4568:                                             ; preds = %4501
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4328, i32 %4490, i32 %4496, i32 %4491, i32 %4496, i32 %4337, i32 2147483647, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4465, i1 zeroext true) #13
  br label %4569

4569:                                             ; preds = %4568, %4559, %4548, %4522, %4512, %4499
  %4570 = icmp sgt i32 %4497, %4496
  br i1 %4570, label %4571, label %4589

4571:                                             ; preds = %4569
  %4572 = ashr i32 %4495, 16
  %4573 = sub nsw i32 %4497, %4496
  %4574 = ashr exact i32 %4573, 16
  %4575 = or i1 %4329, %4465
  br i1 %4575, label %4585, label %4576

4576:                                             ; preds = %4571
  %4577 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4578 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4577, i64 14
  %4579 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4578, align 8
  %4580 = call %class.SkBlitter* %4579(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4581 = bitcast %class.SkBlitter* %4580 to void (%class.SkBlitter*, i32, i32, i32)***
  %4582 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4581, align 8
  %4583 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4582, i64 2
  %4584 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4583, align 8
  call void %4584(%class.SkBlitter* %4580, i32 %4572, i32 %4328, i32 %4574) #13
  br label %4589

4585:                                             ; preds = %4571
  %4586 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4292, align 8
  %4587 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4586, i64 17
  %4588 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4587, align 8
  call void %4588(%class.AdditiveBlitter* nonnull %2917, i32 %4572, i32 %4328, i32 %4574, i8 zeroext %4322) #13
  br label %4589

4589:                                             ; preds = %4585, %4576, %4569
  %4590 = icmp sgt i32 %4494, %4497
  br i1 %4590, label %4591, label %4660

4591:                                             ; preds = %4589
  %4592 = sub nsw i32 %4494, %4497
  %4593 = add nsw i32 %4592, 65535
  %4594 = ashr i32 %4593, 16
  switch i32 %4594, label %4658 [
    i32 1, label %4595
    i32 2, label %4620
  ]

4595:                                             ; preds = %4591
  %4596 = sub i32 %4493, %4497
  %4597 = add nsw i32 %4596, %4592
  %4598 = sdiv i32 %4597, 2
  %4599 = lshr i32 %4598, 8
  %4600 = ashr i32 %4493, 16
  %4601 = or i1 %4329, %4465
  br i1 %4601, label %4612, label %4602

4602:                                             ; preds = %4595
  %4603 = trunc i32 %4599 to i8
  %4604 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4605 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4604, i64 14
  %4606 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4605, align 8
  %4607 = call %class.SkBlitter* %4606(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4608 = bitcast %class.SkBlitter* %4607 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4609 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4608, align 8
  %4610 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4609, i64 4
  %4611 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4610, align 8
  call void %4611(%class.SkBlitter* %4607, i32 %4600, i32 %4328, i32 1, i8 zeroext %4603) #13
  br label %4660

4612:                                             ; preds = %4595
  %4613 = and i32 %4599, 255
  %4614 = mul nuw nsw i32 %4613, %4330
  %4615 = lshr i32 %4614, 8
  %4616 = trunc i32 %4615 to i8
  %4617 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4618 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4617, i64 16
  %4619 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4618, align 8
  call void %4619(%class.AdditiveBlitter* nonnull %2917, i32 %4600, i32 %4328, i8 zeroext %4616) #13
  br label %4660

4620:                                             ; preds = %4591
  %4621 = sub i32 65536, %4493
  %4622 = add i32 %4621, %4497
  %4623 = sub i32 %4494, %4493
  %4624 = sub i32 %4623, %4622
  %4625 = ashr i32 %4622, 11
  %4626 = ashr i32 %4436, 11
  %4627 = mul i32 %4625, %4626
  %4628 = mul i32 %4627, %4625
  %4629 = lshr i32 %4628, 8
  %4630 = trunc i32 %4629 to i8
  %4631 = sub i8 %4322, %4630
  %4632 = ashr i32 %4624, 11
  %4633 = mul i32 %4632, %4626
  %4634 = mul i32 %4633, %4632
  %4635 = lshr i32 %4634, 8
  %4636 = ashr i32 %4493, 16
  %4637 = or i1 %4329, %4465
  br i1 %4637, label %4649, label %4638

4638:                                             ; preds = %4620
  %4639 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4640 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4639, i64 14
  %4641 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4640, align 8
  %4642 = call %class.SkBlitter* %4641(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4643 = zext i8 %4631 to i32
  %4644 = and i32 %4635, 255
  %4645 = bitcast %class.SkBlitter* %4642 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4646 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4645, align 8
  %4647 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4646, i64 9
  %4648 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4647, align 8
  call void %4648(%class.SkBlitter* %4642, i32 %4636, i32 %4328, i32 %4643, i32 %4644) #13
  br label %4660

4649:                                             ; preds = %4620
  %4650 = trunc i32 %4635 to i8
  %4651 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4652 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4651, i64 16
  %4653 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4652, align 8
  call void %4653(%class.AdditiveBlitter* nonnull %2917, i32 %4636, i32 %4328, i8 zeroext %4631) #13
  %4654 = add nsw i32 %4636, 1
  %4655 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4656 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4655, i64 16
  %4657 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4656, align 8
  call void %4657(%class.AdditiveBlitter* nonnull %2917, i32 %4654, i32 %4328, i8 zeroext %4650) #13
  br label %4660

4658:                                             ; preds = %4591
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4328, i32 %4497, i32 %4493, i32 %4497, i32 %4494, i32 2147483647, i32 %4436, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4465, i1 zeroext true) #13
  br label %4660

4659:                                             ; preds = %4488
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4328, i32 %4490, i32 %4493, i32 %4491, i32 %4494, i32 %4337, i32 %4436, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4465, i1 zeroext true) #13
  br label %4660

4660:                                             ; preds = %4659, %4658, %4649, %4638, %4612, %4602, %4589, %4482, %4464
  %4661 = load i32, i32* %4420, align 4
  %4662 = icmp slt i32 %4432, %4661
  %4663 = select i1 %4662, i32 %4661, i32 %4432
  %4664 = add nsw i32 %4663, 65535
  %4665 = ashr i32 %4664, 16
  br label %4690

4666:                                             ; preds = %4378
  %4667 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  br i1 %4354, label %4670, label %4668

4668:                                             ; preds = %4666
  %4669 = load i32, i32* %4667, align 8
  br label %4679

4670:                                             ; preds = %4666
  %4671 = load i32, i32* %4667, align 4
  %4672 = icmp slt i32 %4671, %3077
  %4673 = select i1 %4672, i32 %3077, i32 %4671
  %4674 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 9
  %4675 = load i32, i32* %4674, align 8
  %4676 = load i32, i32* %4357, align 4
  %4677 = icmp eq i32 %4676, %4316
  %4678 = zext i1 %4677 to i8
  br label %4679

4679:                                             ; preds = %4670, %4668
  %4680 = phi i32 [ %4671, %4670 ], [ %4669, %4668 ]
  %4681 = phi %struct.SkAnalyticEdge* [ %4334, %4670 ], [ %4339, %4668 ]
  %4682 = phi i32 [ %4673, %4670 ], [ %4338, %4668 ]
  %4683 = phi i32 [ %4675, %4670 ], [ %4337, %4668 ]
  %4684 = phi i8 [ %4678, %4670 ], [ %4336, %4668 ]
  %4685 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 6
  store i32 %4316, i32* %4685, align 4
  %4686 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 4
  %4687 = load i32, i32* %4686, align 4
  %4688 = ashr i32 %4687, %4317
  %4689 = add nsw i32 %4688, %4680
  store i32 %4689, i32* %4667, align 8
  br label %4690

4690:                                             ; preds = %4679, %4660, %4416, %4406
  %4691 = phi %struct.SkAnalyticEdge* [ %4339, %4660 ], [ %4681, %4679 ], [ %4339, %4406 ], [ %4339, %4416 ]
  %4692 = phi i32 [ %4338, %4660 ], [ %4682, %4679 ], [ %4338, %4406 ], [ %4338, %4416 ]
  %4693 = phi i32 [ %4337, %4660 ], [ %4683, %4679 ], [ %4337, %4406 ], [ %4337, %4416 ]
  %4694 = phi i8 [ %4336, %4660 ], [ %4684, %4679 ], [ %4336, %4406 ], [ %4336, %4416 ]
  %4695 = phi i32 [ %4665, %4660 ], [ %4335, %4679 ], [ %4335, %4406 ], [ %4335, %4416 ]
  %4696 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 0
  %4697 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4696, align 8
  %4698 = load i32, i32* %4357, align 4
  %4699 = icmp sgt i32 %4698, %4316
  br i1 %4699, label %4729, label %4700

4700:                                             ; preds = %4690
  %4701 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 13
  %4702 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4703 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 2
  %4704 = bitcast %struct.SkAnalyticEdge* %4703 to i32*
  %4705 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 6
  %4706 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %4344, i64 0, i32 3
  %4707 = bitcast %struct.SkAnalyticEdge* %4334 to %struct.SkAnalyticCubicEdge*
  %4708 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 1, i32 7
  %4709 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 2, i32 1
  %4710 = bitcast %struct.SkAnalyticEdge** %4709 to i32*
  br label %4711

4711:                                             ; preds = %4724, %4700
  %4712 = load i8, i8* %4701, align 8
  %4713 = icmp slt i8 %4712, 0
  br i1 %4713, label %4714, label %4718

4714:                                             ; preds = %4711
  %4715 = load i32, i32* %4702, align 8
  store i32 %4715, i32* %4708, align 8
  %4716 = load i32, i32* %4705, align 4
  store i32 %4716, i32* %4710, align 8
  %4717 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* %4707, i1 zeroext true) #13
  br i1 %4717, label %4724, label %4727

4718:                                             ; preds = %4711
  %4719 = icmp eq i8 %4712, 0
  br i1 %4719, label %4727, label %4720

4720:                                             ; preds = %4718
  %4721 = load i32, i32* %4702, align 8
  store i32 %4721, i32* %4704, align 8
  %4722 = load i32, i32* %4705, align 4
  store i32 %4722, i32* %4706, align 4
  %4723 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* %4344) #13
  br i1 %4723, label %4724, label %4727

4724:                                             ; preds = %4720, %4714
  %4725 = load i32, i32* %4357, align 4
  %4726 = icmp sgt i32 %4725, %4316
  br i1 %4726, label %4727, label %4711

4727:                                             ; preds = %4724, %4720, %4718, %4714
  %4728 = load i32, i32* %4357, align 4
  br label %4729

4729:                                             ; preds = %4727, %4690
  %4730 = phi i32 [ %4728, %4727 ], [ %4698, %4690 ]
  %4731 = icmp sgt i32 %4730, %4316
  br i1 %4731, label %4743, label %4732

4732:                                             ; preds = %4729
  %4733 = bitcast %struct.SkAnalyticEdge* %4334 to i64*
  %4734 = load i64, i64* %4733, align 8
  %4735 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 1
  %4736 = bitcast %struct.SkAnalyticEdge** %4735 to i64**
  %4737 = load i64*, i64** %4736, align 8
  store i64 %4734, i64* %4737, align 8
  %4738 = bitcast %struct.SkAnalyticEdge** %4735 to i64*
  %4739 = load i64, i64* %4738, align 8
  %4740 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4696, align 8
  %4741 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4740, i64 0, i32 1
  %4742 = bitcast %struct.SkAnalyticEdge** %4741 to i64*
  store i64 %4739, i64* %4742, align 8
  br label %4808

4743:                                             ; preds = %4729
  %4744 = icmp sgt i32 %4343, %4730
  %4745 = select i1 %4744, i32 %4730, i32 %4343
  %4746 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 3
  %4747 = load i32, i32* %4746, align 8
  %4748 = icmp slt i32 %4747, %4340
  br i1 %4748, label %4749, label %4788

4749:                                             ; preds = %4743
  %4750 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4691, i64 0, i32 2
  %4751 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4750, align 8
  %4752 = icmp ne %struct.SkAnalyticEdge* %4751, %4334
  %4753 = or i1 %4752, %4293
  br i1 %4753, label %4758, label %4754

4754:                                             ; preds = %4749
  %4755 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4691, i64 0, i32 3
  %4756 = load i32, i32* %4755, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4691, i32 %4316, i32 %4756, i32 %4747, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  %4757 = load i32, i32* %4746, align 8
  br label %4758

4758:                                             ; preds = %4754, %4749
  %4759 = phi i32 [ %4747, %4749 ], [ %4757, %4754 ]
  %4760 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 1
  %4761 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4760, align 8
  %4762 = bitcast %struct.SkAnalyticEdge* %4761 to i64*
  br label %4763

4763:                                             ; preds = %4768, %4758
  %4764 = phi %struct.SkAnalyticEdge* [ %4761, %4758 ], [ %4766, %4768 ]
  %4765 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4764, i64 0, i32 1
  %4766 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4765, align 8
  %4767 = icmp eq %struct.SkAnalyticEdge* %4766, null
  br i1 %4767, label %4772, label %4768

4768:                                             ; preds = %4763
  %4769 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4764, i64 0, i32 3
  %4770 = load i32, i32* %4769, align 8
  %4771 = icmp sgt i32 %4770, %4759
  br i1 %4771, label %4763, label %4772

4772:                                             ; preds = %4768, %4763
  %4773 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4764, i64 0, i32 0
  %4774 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4773, align 8
  %4775 = icmp eq %struct.SkAnalyticEdge* %4774, %4334
  br i1 %4775, label %4788, label %4776

4776:                                             ; preds = %4772
  %4777 = bitcast %struct.SkAnalyticEdge* %4334 to i64*
  %4778 = load i64, i64* %4777, align 8
  store i64 %4778, i64* %4762, align 8
  %4779 = bitcast %struct.SkAnalyticEdge** %4760 to i64*
  %4780 = load i64, i64* %4779, align 8
  %4781 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4696, align 8
  %4782 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4781, i64 0, i32 1
  %4783 = bitcast %struct.SkAnalyticEdge** %4782 to i64*
  store i64 %4780, i64* %4783, align 8
  store %struct.SkAnalyticEdge* %4764, %struct.SkAnalyticEdge** %4760, align 8
  %4784 = bitcast %struct.SkAnalyticEdge* %4764 to i64*
  %4785 = load i64, i64* %4784, align 8
  store i64 %4785, i64* %4777, align 8
  %4786 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4773, align 8
  %4787 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4786, i64 0, i32 1
  store %struct.SkAnalyticEdge* %4334, %struct.SkAnalyticEdge** %4787, align 8
  store %struct.SkAnalyticEdge* %4334, %struct.SkAnalyticEdge** %4773, align 8
  br label %4788

4788:                                             ; preds = %4776, %4772, %4743
  %4789 = phi i32 [ %4747, %4743 ], [ %4340, %4772 ], [ %4340, %4776 ]
  br i1 %4229, label %4808, label %4790

4790:                                             ; preds = %4788
  %4791 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 1
  %4792 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4791, align 8
  %4793 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4792, i64 0, i32 1
  %4794 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4793, align 8
  %4795 = icmp eq %struct.SkAnalyticEdge* %4794, null
  br i1 %4795, label %4808, label %4796

4796:                                             ; preds = %4790
  %4797 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4792, i64 0, i32 3
  %4798 = load i32, i32* %4797, align 8
  %4799 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4792, i64 0, i32 4
  %4800 = load i32, i32* %4799, align 4
  %4801 = add nsw i32 %4800, %4798
  %4802 = load i32, i32* %4746, align 8
  %4803 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4334, i64 0, i32 4
  %4804 = load i32, i32* %4803, align 4
  %4805 = add nsw i32 %4804, %4802
  %4806 = icmp sgt i32 %4801, %4805
  %4807 = select i1 %4806, i32 %4331, i32 %4745
  br label %4808

4808:                                             ; preds = %4796, %4790, %4788, %4732
  %4809 = phi i32 [ %4745, %4788 ], [ %4343, %4732 ], [ %4745, %4790 ], [ %4807, %4796 ]
  %4810 = phi i32 [ %4789, %4788 ], [ %4340, %4732 ], [ %4789, %4790 ], [ %4789, %4796 ]
  %4811 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4697, i64 0, i32 7
  %4812 = load i32, i32* %4811, align 8
  %4813 = icmp sgt i32 %4812, %4302
  br i1 %4813, label %4814, label %4333

4814:                                             ; preds = %4808
  %4815 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4697, i64 0, i32 7
  br label %4816

4816:                                             ; preds = %4814, %4300
  %4817 = phi i32 [ 2147483647, %4300 ], [ %4809, %4814 ]
  %4818 = phi i1 [ %4237, %4300 ], [ %4352, %4814 ]
  %4819 = phi %struct.SkAnalyticEdge* [ %4309, %4300 ], [ %4697, %4814 ]
  %4820 = phi %struct.SkAnalyticEdge* [ %8, %4300 ], [ %4691, %4814 ]
  %4821 = phi i32 [ %3077, %4300 ], [ %4692, %4814 ]
  %4822 = phi i32 [ 0, %4300 ], [ %4693, %4814 ]
  %4823 = phi i8 [ 0, %4300 ], [ %4694, %4814 ]
  %4824 = phi i32* [ %4323, %4300 ], [ %4815, %4814 ]
  br i1 %4818, label %4825, label %5068

4825:                                             ; preds = %4816
  br i1 %4228, label %4826, label %4856

4826:                                             ; preds = %4825
  %4827 = and i8 %4823, 1
  %4828 = icmp ne i8 %4827, 0
  %4829 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 2
  %4830 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4829, align 8
  %4831 = icmp eq %struct.SkAnalyticEdge* %4830, null
  %4832 = icmp eq %struct.SkAnalyticEdge* %4830, %9
  %4833 = or i1 %4831, %4832
  br i1 %4833, label %4838, label %4834

4834:                                             ; preds = %4826
  %4835 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4830, i64 0, i32 3
  %4836 = load i32, i32* %4835, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4820, i32 %4302, i32 %4821, i32 %4836, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  %4837 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4829, align 8
  br label %4838

4838:                                             ; preds = %4834, %4826
  %4839 = phi %struct.SkAnalyticEdge* [ %4830, %4826 ], [ %4837, %4834 ]
  %4840 = icmp eq %struct.SkAnalyticEdge* %4839, null
  br i1 %4840, label %4841, label %4847

4841:                                             ; preds = %4838
  %4842 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 10
  store i32 %4821, i32* %4842, align 4
  %4843 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 11
  store i32 %4302, i32* %4843, align 8
  %4844 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 12
  store i32 %4822, i32* %4844, align 4
  %4845 = load i32, i32* %3061, align 8
  %4846 = load i32, i32* %3063, align 8
  store i32 %4845, i32* %4294, align 4
  store i32 %4302, i32* %4295, align 8
  store i32 %4846, i32* %4296, align 4
  store %struct.SkAnalyticEdge* %9, %struct.SkAnalyticEdge** %4829, align 8
  br label %4847

4847:                                             ; preds = %4841, %4838
  store i32 %4316, i32* %4297, align 4
  %4848 = load i32, i32* %3062, align 4
  %4849 = ashr i32 %4848, %4317
  %4850 = load i32, i32* %3061, align 8
  %4851 = add nsw i32 %4850, %4849
  store i32 %4851, i32* %3061, align 8
  %4852 = or i1 %4308, %4828
  br i1 %4852, label %4853, label %5068

4853:                                             ; preds = %4847
  %4854 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 3
  %4855 = load i32, i32* %4854, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %4820, i32 %4316, i32 %4855, i32 %4851, %class.AdditiveBlitter* nonnull %2917, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3077, i32 %3078) #13
  br label %5068

4856:                                             ; preds = %4825
  %4857 = ashr i32 %4302, 16
  %4858 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 3
  %4859 = load i32, i32* %4858, align 4
  %4860 = icmp sgt i32 %4859, %3077
  %4861 = select i1 %4860, i32 %4859, i32 %3077
  br i1 %4, label %4885, label %4862

4862:                                             ; preds = %4856
  %4863 = icmp eq i8 %4322, -1
  br i1 %4863, label %4864, label %4885

4864:                                             ; preds = %4862
  %4865 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 1
  %4866 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4865, align 8
  %4867 = icmp ne %struct.SkAnalyticEdge* %4820, null
  %4868 = icmp ne %struct.SkAnalyticEdge* %4866, null
  %4869 = and i1 %4867, %4868
  br i1 %4869, label %4870, label %4885

4870:                                             ; preds = %4864
  %4871 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 7
  %4872 = load i32, i32* %4871, align 8
  %4873 = icmp slt i32 %4872, %4316
  br i1 %4873, label %4874, label %4885

4874:                                             ; preds = %4870
  %4875 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4866, i64 0, i32 3
  %4876 = load i32, i32* %4875, align 8
  %4877 = add nsw i32 %4876, 65536
  %4878 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4820, i64 0, i32 4
  %4879 = load i32, i32* %4878, align 4
  %4880 = icmp slt i32 %4879, 0
  %4881 = sub nsw i32 0, %4879
  %4882 = select i1 %4880, i32 %4881, i32 %4879
  %4883 = sub nsw i32 %4859, %4882
  %4884 = icmp sge i32 %4877, %4883
  br label %4885

4885:                                             ; preds = %4874, %4870, %4864, %4862, %4856
  %4886 = phi i1 [ true, %4856 ], [ false, %4862 ], [ false, %4870 ], [ false, %4864 ], [ %4884, %4874 ]
  %4887 = icmp sgt i32 %4821, %3078
  br i1 %4887, label %5068, label %4888

4888:                                             ; preds = %4885
  %4889 = icmp sgt i32 %4861, %3078
  br i1 %4889, label %4890, label %4900

4890:                                             ; preds = %4888
  %4891 = icmp sgt i32 %4821, %4861
  %4892 = select i1 %4891, i32 %4861, i32 %4821
  %4893 = select i1 %4891, i32 %4821, i32 %4861
  %4894 = icmp slt i32 %4892, %3078
  %4895 = select i1 %4894, i32 %3078, i32 %4892
  %4896 = icmp sgt i32 %4893, %3078
  %4897 = select i1 %4896, i32 %3078, i32 %4893
  %4898 = add nsw i32 %4895, %4897
  %4899 = sdiv i32 %4898, 2
  br label %4900

4900:                                             ; preds = %4890, %4888
  %4901 = phi i32 [ %4899, %4890 ], [ %4861, %4888 ]
  %4902 = phi i32 [ %4899, %4890 ], [ %3078, %4888 ]
  %4903 = icmp eq i32 %4821, %3078
  %4904 = icmp eq i32 %4901, %4902
  %4905 = and i1 %4903, %4904
  br i1 %4905, label %5068, label %4906

4906:                                             ; preds = %4900
  %4907 = icmp slt i32 %4901, %4821
  %4908 = select i1 %4907, i32 %4901, i32 %4821
  %4909 = select i1 %4907, i32 %4821, i32 %4901
  %4910 = icmp slt i32 %4902, %3078
  %4911 = select i1 %4910, i32 %4902, i32 %3078
  %4912 = select i1 %4910, i32 %3078, i32 %4902
  %4913 = add nsw i32 %4909, 65535
  %4914 = and i32 %4913, -65536
  %4915 = and i32 %4911, -65536
  %4916 = icmp slt i32 %4915, %4914
  br i1 %4916, label %5067, label %4917

4917:                                             ; preds = %4906
  %4918 = icmp sgt i32 %4914, %4908
  br i1 %4918, label %4919, label %4990

4919:                                             ; preds = %4917
  %4920 = sub nsw i32 %4914, %4908
  %4921 = add nsw i32 %4920, 65535
  %4922 = ashr i32 %4921, 16
  switch i32 %4922, label %4989 [
    i32 1, label %4923
    i32 2, label %4950
  ]

4923:                                             ; preds = %4919
  %4924 = sub i32 %4914, %4909
  %4925 = add nsw i32 %4924, %4920
  %4926 = sdiv i32 %4925, 2
  %4927 = lshr i32 %4926, 8
  %4928 = ashr i32 %4908, 16
  %4929 = icmp ne i8 %4322, -1
  %4930 = or i1 %4929, %4886
  br i1 %4930, label %4941, label %4931

4931:                                             ; preds = %4923
  %4932 = trunc i32 %4927 to i8
  %4933 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4934 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4933, i64 14
  %4935 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4934, align 8
  %4936 = call %class.SkBlitter* %4935(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4937 = bitcast %class.SkBlitter* %4936 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4938 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4937, align 8
  %4939 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4938, i64 4
  %4940 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4939, align 8
  call void %4940(%class.SkBlitter* %4936, i32 %4928, i32 %4857, i32 1, i8 zeroext %4932) #13
  br label %4990

4941:                                             ; preds = %4923
  %4942 = and i32 %4927, 255
  %4943 = and i32 %4321, 255
  %4944 = mul nuw nsw i32 %4942, %4943
  %4945 = lshr i32 %4944, 8
  %4946 = trunc i32 %4945 to i8
  %4947 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4948 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4947, i64 16
  %4949 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4948, align 8
  call void %4949(%class.AdditiveBlitter* nonnull %2917, i32 %4928, i32 %4857, i8 zeroext %4946) #13
  br label %4990

4950:                                             ; preds = %4919
  %4951 = sub i32 -65536, %4908
  %4952 = add i32 %4914, %4951
  %4953 = sub i32 %4909, %4908
  %4954 = sub i32 %4953, %4952
  %4955 = ashr i32 %4952, 11
  %4956 = ashr i32 %4822, 11
  %4957 = mul i32 %4955, %4956
  %4958 = mul i32 %4957, %4955
  %4959 = lshr i32 %4958, 8
  %4960 = ashr i32 %4954, 11
  %4961 = mul i32 %4960, %4956
  %4962 = mul i32 %4961, %4960
  %4963 = lshr i32 %4962, 8
  %4964 = trunc i32 %4963 to i8
  %4965 = sub i8 %4322, %4964
  %4966 = ashr i32 %4908, 16
  %4967 = icmp ne i8 %4322, -1
  %4968 = or i1 %4967, %4886
  br i1 %4968, label %4980, label %4969

4969:                                             ; preds = %4950
  %4970 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %4971 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4970, i64 14
  %4972 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4971, align 8
  %4973 = call %class.SkBlitter* %4972(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %4974 = and i32 %4959, 255
  %4975 = zext i8 %4965 to i32
  %4976 = bitcast %class.SkBlitter* %4973 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4977 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4976, align 8
  %4978 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4977, i64 9
  %4979 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4978, align 8
  call void %4979(%class.SkBlitter* %4973, i32 %4966, i32 %4857, i32 %4974, i32 %4975) #13
  br label %4990

4980:                                             ; preds = %4950
  %4981 = trunc i32 %4959 to i8
  %4982 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4983 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4982, i64 16
  %4984 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4983, align 8
  call void %4984(%class.AdditiveBlitter* nonnull %2917, i32 %4966, i32 %4857, i8 zeroext %4981) #13
  %4985 = add nsw i32 %4966, 1
  %4986 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %4987 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4986, i64 16
  %4988 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4987, align 8
  call void %4988(%class.AdditiveBlitter* nonnull %2917, i32 %4985, i32 %4857, i8 zeroext %4965) #13
  br label %4990

4989:                                             ; preds = %4919
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4857, i32 %4908, i32 %4914, i32 %4909, i32 %4914, i32 %4822, i32 2147483647, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4886, i1 zeroext true) #13
  br label %4990

4990:                                             ; preds = %4989, %4980, %4969, %4941, %4931, %4917
  %4991 = icmp sgt i32 %4915, %4914
  br i1 %4991, label %4992, label %5011

4992:                                             ; preds = %4990
  %4993 = ashr i32 %4913, 16
  %4994 = sub nsw i32 %4915, %4914
  %4995 = ashr exact i32 %4994, 16
  %4996 = icmp ne i8 %4322, -1
  %4997 = or i1 %4996, %4886
  br i1 %4997, label %5007, label %4998

4998:                                             ; preds = %4992
  %4999 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %5000 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4999, i64 14
  %5001 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5000, align 8
  %5002 = call %class.SkBlitter* %5001(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %5003 = bitcast %class.SkBlitter* %5002 to void (%class.SkBlitter*, i32, i32, i32)***
  %5004 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %5003, align 8
  %5005 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5004, i64 2
  %5006 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5005, align 8
  call void %5006(%class.SkBlitter* %5002, i32 %4993, i32 %4857, i32 %4995) #13
  br label %5011

5007:                                             ; preds = %4992
  %5008 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4292, align 8
  %5009 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5008, i64 17
  %5010 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5009, align 8
  call void %5010(%class.AdditiveBlitter* nonnull %2917, i32 %4993, i32 %4857, i32 %4995, i8 zeroext %4322) #13
  br label %5011

5011:                                             ; preds = %5007, %4998, %4990
  %5012 = icmp sgt i32 %4912, %4915
  br i1 %5012, label %5013, label %5068

5013:                                             ; preds = %5011
  %5014 = sub nsw i32 %4912, %4915
  %5015 = add nsw i32 %5014, 65535
  %5016 = ashr i32 %5015, 16
  switch i32 %5016, label %5066 [
    i32 1, label %5017
    i32 2, label %5044
  ]

5017:                                             ; preds = %5013
  %5018 = sub i32 %4911, %4915
  %5019 = add nsw i32 %5018, %5014
  %5020 = sdiv i32 %5019, 2
  %5021 = lshr i32 %5020, 8
  %5022 = ashr i32 %4911, 16
  %5023 = icmp ne i8 %4322, -1
  %5024 = or i1 %5023, %4886
  br i1 %5024, label %5035, label %5025

5025:                                             ; preds = %5017
  %5026 = trunc i32 %5021 to i8
  %5027 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %5028 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5027, i64 14
  %5029 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5028, align 8
  %5030 = call %class.SkBlitter* %5029(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %5031 = bitcast %class.SkBlitter* %5030 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5032 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5031, align 8
  %5033 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5032, i64 4
  %5034 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5033, align 8
  call void %5034(%class.SkBlitter* %5030, i32 %5022, i32 %4857, i32 1, i8 zeroext %5026) #13
  br label %5068

5035:                                             ; preds = %5017
  %5036 = and i32 %5021, 255
  %5037 = and i32 %4321, 255
  %5038 = mul nuw nsw i32 %5036, %5037
  %5039 = lshr i32 %5038, 8
  %5040 = trunc i32 %5039 to i8
  %5041 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %5042 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5041, i64 16
  %5043 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5042, align 8
  call void %5043(%class.AdditiveBlitter* nonnull %2917, i32 %5022, i32 %4857, i8 zeroext %5040) #13
  br label %5068

5044:                                             ; preds = %5013
  %5045 = ashr i32 %4911, 16
  %5046 = icmp ne i8 %4322, -1
  %5047 = or i1 %5046, %4886
  br i1 %5047, label %5058, label %5048

5048:                                             ; preds = %5044
  %5049 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4290, align 8
  %5050 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5049, i64 14
  %5051 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5050, align 8
  %5052 = call %class.SkBlitter* %5051(%class.AdditiveBlitter* nonnull %2917, i1 zeroext false) #13
  %5053 = and i32 %4321, 255
  %5054 = bitcast %class.SkBlitter* %5052 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5055 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5054, align 8
  %5056 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5055, i64 9
  %5057 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5056, align 8
  call void %5057(%class.SkBlitter* %5052, i32 %5045, i32 %4857, i32 %5053, i32 0) #13
  br label %5068

5058:                                             ; preds = %5044
  %5059 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %5060 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5059, i64 16
  %5061 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5060, align 8
  call void %5061(%class.AdditiveBlitter* nonnull %2917, i32 %5045, i32 %4857, i8 zeroext %4322) #13
  %5062 = add nsw i32 %5045, 1
  %5063 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4291, align 8
  %5064 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5063, i64 16
  %5065 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5064, align 8
  call void %5065(%class.AdditiveBlitter* nonnull %2917, i32 %5062, i32 %4857, i8 zeroext 0) #13
  br label %5068

5066:                                             ; preds = %5013
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4857, i32 %4915, i32 %4911, i32 %4915, i32 %4912, i32 2147483647, i32 0, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4886, i1 zeroext true) #13
  br label %5068

5067:                                             ; preds = %4906
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2917, i32 %4857, i32 %4908, i32 %4911, i32 %4909, i32 %4912, i32 %4822, i32 0, i8 zeroext %4322, i8* null, i1 zeroext false, i1 zeroext %4886, i1 zeroext true) #13
  br label %5068

5068:                                             ; preds = %5067, %5066, %5058, %5048, %5035, %5025, %5011, %4900, %4885, %4853, %4847, %4816
  br i1 %4, label %5069, label %5073

5069:                                             ; preds = %5068
  %5070 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)**, void (%class.RunBasedAdditiveBlitter*, i32, i32)*** %4298, align 8
  %5071 = getelementptr inbounds void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %5070, i64 19
  %5072 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %5071, align 8
  call void %5072(%class.RunBasedAdditiveBlitter* nonnull %21, i32 %4302, i32 %4316) #13
  br label %5073

5073:                                             ; preds = %5069, %5068
  %5074 = icmp slt i32 %4316, %4299
  br i1 %5074, label %5075, label %5208

5075:                                             ; preds = %5073
  %5076 = load i32, i32* %4824, align 8
  %5077 = icmp sgt i32 %5076, %4316
  br i1 %5077, label %5078, label %5081

5078:                                             ; preds = %5075
  %5079 = icmp sgt i32 %4817, %5076
  %5080 = select i1 %5079, i32 %5076, i32 %4817
  br label %5206

5081:                                             ; preds = %5075
  %5082 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4819, i64 0, i32 1
  %5083 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5082, align 8
  %5084 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5083, i64 0, i32 3
  %5085 = load i32, i32* %5084, align 8
  %5086 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4819, i64 0, i32 3
  %5087 = load i32, i32* %5086, align 8
  %5088 = icmp sgt i32 %5085, %5087
  br i1 %5088, label %5130, label %5089

5089:                                             ; preds = %5081
  %5090 = add nsw i32 %4316, 16384
  br label %5091

5091:                                             ; preds = %5124, %5089
  %5092 = phi i32 [ %4817, %5089 ], [ %5118, %5124 ]
  %5093 = phi %struct.SkAnalyticEdge* [ %5083, %5089 ], [ %5126, %5124 ]
  %5094 = phi %struct.SkAnalyticEdge* [ %4819, %5089 ], [ %5120, %5124 ]
  %5095 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5093, i64 0, i32 1
  %5096 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5095, align 8
  %5097 = icmp eq %struct.SkAnalyticEdge* %5096, null
  br i1 %5097, label %5111, label %5098

5098:                                             ; preds = %5091
  %5099 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5093, i64 0, i32 3
  %5100 = load i32, i32* %5099, align 8
  %5101 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5093, i64 0, i32 4
  %5102 = load i32, i32* %5101, align 4
  %5103 = add nsw i32 %5102, %5100
  %5104 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5094, i64 0, i32 3
  %5105 = load i32, i32* %5104, align 8
  %5106 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5094, i64 0, i32 4
  %5107 = load i32, i32* %5106, align 4
  %5108 = add nsw i32 %5107, %5105
  %5109 = icmp sgt i32 %5103, %5108
  %5110 = select i1 %5109, i32 %5090, i32 %5092
  br label %5111

5111:                                             ; preds = %5098, %5091
  %5112 = phi i32 [ %5092, %5091 ], [ %5110, %5098 ]
  %5113 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5094, i64 0, i32 8
  %5114 = load i32, i32* %5113, align 4
  %5115 = icmp sgt i32 %5114, %4316
  %5116 = icmp sgt i32 %5112, %5114
  %5117 = and i1 %5115, %5116
  %5118 = select i1 %5117, i32 %5114, i32 %5112
  %5119 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5094, i64 0, i32 0
  %5120 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5119, align 8
  %5121 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5120, i64 0, i32 7
  %5122 = load i32, i32* %5121, align 8
  %5123 = icmp sgt i32 %5122, %4316
  br i1 %5123, label %5127, label %5124

5124:                                             ; preds = %5111
  %5125 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5120, i64 0, i32 1
  %5126 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5125, align 8
  br label %5091

5127:                                             ; preds = %5111
  %5128 = icmp sgt i32 %5118, %5122
  %5129 = select i1 %5128, i32 %5122, i32 %5118
  br label %5206

5130:                                             ; preds = %5081, %5135
  %5131 = phi %struct.SkAnalyticEdge* [ %5133, %5135 ], [ %5083, %5081 ]
  %5132 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5131, i64 0, i32 1
  %5133 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5132, align 8
  %5134 = icmp eq %struct.SkAnalyticEdge* %5133, null
  br i1 %5134, label %5139, label %5135

5135:                                             ; preds = %5130
  %5136 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5131, i64 0, i32 3
  %5137 = load i32, i32* %5136, align 8
  %5138 = icmp sgt i32 %5137, %5087
  br i1 %5138, label %5130, label %5139

5139:                                             ; preds = %5135, %5130
  %5140 = add nsw i32 %4316, 16384
  br label %5141

5141:                                             ; preds = %5192, %5139
  %5142 = phi i32 [ %4817, %5139 ], [ %5199, %5192 ]
  %5143 = phi %struct.SkAnalyticEdge* [ %4819, %5139 ], [ %5146, %5192 ]
  %5144 = phi %struct.SkAnalyticEdge* [ %5131, %5139 ], [ %5143, %5192 ]
  %5145 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 0
  %5146 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5145, align 8
  %5147 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 3
  %5148 = ptrtoint %struct.SkAnalyticEdge* %5146 to i64
  br label %5149

5149:                                             ; preds = %5154, %5141
  %5150 = phi %struct.SkAnalyticEdge* [ %5144, %5141 ], [ %5152, %5154 ]
  %5151 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5150, i64 0, i32 0
  %5152 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5151, align 8
  %5153 = icmp eq %struct.SkAnalyticEdge* %5152, %5143
  br i1 %5153, label %5174, label %5154

5154:                                             ; preds = %5149
  %5155 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5152, i64 0, i32 3
  %5156 = load i32, i32* %5155, align 8
  %5157 = load i32, i32* %5147, align 8
  %5158 = icmp slt i32 %5156, %5157
  br i1 %5158, label %5149, label %5159

5159:                                             ; preds = %5154
  %5160 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5150, i64 0, i32 0
  %5161 = bitcast %struct.SkAnalyticEdge* %5143 to i64*
  %5162 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 1
  %5163 = bitcast %struct.SkAnalyticEdge** %5162 to i64**
  %5164 = load i64*, i64** %5163, align 8
  store i64 %5148, i64* %5164, align 8
  %5165 = bitcast %struct.SkAnalyticEdge** %5162 to i64*
  %5166 = load i64, i64* %5165, align 8
  %5167 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5145, align 8
  %5168 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5167, i64 0, i32 1
  %5169 = bitcast %struct.SkAnalyticEdge** %5168 to i64*
  store i64 %5166, i64* %5169, align 8
  store %struct.SkAnalyticEdge* %5150, %struct.SkAnalyticEdge** %5162, align 8
  %5170 = bitcast %struct.SkAnalyticEdge* %5150 to i64*
  %5171 = load i64, i64* %5170, align 8
  store i64 %5171, i64* %5161, align 8
  %5172 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5160, align 8
  %5173 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5172, i64 0, i32 1
  store %struct.SkAnalyticEdge* %5143, %struct.SkAnalyticEdge** %5173, align 8
  store %struct.SkAnalyticEdge* %5143, %struct.SkAnalyticEdge** %5160, align 8
  br label %5174

5174:                                             ; preds = %5149, %5159
  %5175 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 1
  %5176 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5175, align 8
  %5177 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5176, i64 0, i32 1
  %5178 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5177, align 8
  %5179 = icmp eq %struct.SkAnalyticEdge* %5178, null
  br i1 %5179, label %5192, label %5180

5180:                                             ; preds = %5174
  %5181 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5176, i64 0, i32 3
  %5182 = load i32, i32* %5181, align 8
  %5183 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5176, i64 0, i32 4
  %5184 = load i32, i32* %5183, align 4
  %5185 = add nsw i32 %5184, %5182
  %5186 = load i32, i32* %5147, align 8
  %5187 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 4
  %5188 = load i32, i32* %5187, align 4
  %5189 = add nsw i32 %5188, %5186
  %5190 = icmp sgt i32 %5185, %5189
  %5191 = select i1 %5190, i32 %5140, i32 %5142
  br label %5192

5192:                                             ; preds = %5180, %5174
  %5193 = phi i32 [ %5142, %5174 ], [ %5191, %5180 ]
  %5194 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5143, i64 0, i32 8
  %5195 = load i32, i32* %5194, align 4
  %5196 = icmp sgt i32 %5195, %4316
  %5197 = icmp sgt i32 %5193, %5195
  %5198 = and i1 %5196, %5197
  %5199 = select i1 %5198, i32 %5195, i32 %5193
  %5200 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5146, i64 0, i32 7
  %5201 = load i32, i32* %5200, align 8
  %5202 = icmp sgt i32 %5201, %4316
  br i1 %5202, label %5203, label %5141

5203:                                             ; preds = %5192
  %5204 = icmp sgt i32 %5199, %5201
  %5205 = select i1 %5204, i32 %5201, i32 %5199
  br label %5206

5206:                                             ; preds = %5203, %5127, %5078
  %5207 = phi i32 [ %5080, %5078 ], [ %5205, %5203 ], [ %5129, %5127 ]
  br label %4300

5208:                                             ; preds = %5073, %3172, %3133, %3154
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2977) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2976) #13
  br label %5209

5209:                                             ; preds = %2941, %2945, %2959, %2963, %5208
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2922, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %2925) #13
  %5210 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %7, i64 0, i32 0, i32 2
  %5211 = bitcast %class.SkTDArray.16* %5210 to i8**
  %5212 = load i8*, i8** %5211, align 8
  call void @_Z7sk_freePv(i8* %5212) #13
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %2920) #13
  %5213 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %21, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5213, align 8
  call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* nonnull %21) #13
  %5214 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %21, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %5214) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %2916) #13
  br label %7516

5215:                                             ; preds = %2912, %2911
  %5216 = bitcast %class.SafeRLEAdditiveBlitter* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5216) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5216, i8 -86, i64 96, i1 false)
  %5217 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.RunBasedAdditiveBlitter*
  call void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter* nonnull %5217, %class.SkBlitter* %1, %struct.SkIRect* dereferenceable(16) %2, %struct.SkIRect* dereferenceable(16) %3, i1 zeroext %80) #13
  %5218 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV22SafeRLEAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5218, align 8
  %5219 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %22, i64 0, i32 0, i32 0
  %5220 = load i32, i32* %33, align 4
  %5221 = load i32, i32* %30, align 4
  %5222 = bitcast %class.SkAnalyticEdgeBuilder* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %5222) #13
  %5223 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0, i32 3, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5223, i8 -86, i64 544, i1 false) #13
  %5224 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5224, align 8
  %5225 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0, i32 1
  %5226 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %5227 = bitcast i8* %5226 to %class.SkArenaAlloc*
  %5228 = bitcast i8*** %5225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5228, i8 0, i64 24, i1 false) #13
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %5227, i8* %5223, i64 512, i64 512) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5224, align 8
  %5229 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0
  %5230 = select i1 %76, %struct.SkIRect* null, %struct.SkIRect* %3
  %5231 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %5229, %class.SkPath* dereferenceable(16) %0, %struct.SkIRect* %5230) #13
  %5232 = bitcast i8*** %5225 to %struct.SkAnalyticEdge***
  %5233 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %5232, align 8
  %5234 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %5235 = load i32, i32* %5234, align 4
  %5236 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %5237 = load i32, i32* %5236, align 4
  %5238 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %5239 = load i32, i32* %5238, align 4
  %5240 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %5241 = load i32, i32* %5240, align 4
  %5242 = icmp eq i32 %5231, 0
  br i1 %5242, label %5243, label %5277

5243:                                             ; preds = %5215
  %5244 = load i8, i8* %77, align 2
  %5245 = and i8 %5244, 2
  %5246 = icmp eq i8 %5245, 0
  br i1 %5246, label %7511, label %5247

5247:                                             ; preds = %5243
  %5248 = icmp slt i32 %5237, %5220
  %5249 = select i1 %5248, i32 %5220, i32 %5237
  %5250 = icmp sgt i32 %5241, %5221
  %5251 = select i1 %5250, i32 %5221, i32 %5241
  %5252 = sext i32 %5239 to i64
  %5253 = sext i32 %5235 to i64
  %5254 = sub nsw i64 %5252, %5253
  %5255 = sext i32 %5251 to i64
  %5256 = sext i32 %5249 to i64
  %5257 = sub nsw i64 %5255, %5256
  %5258 = icmp slt i64 %5254, 1
  %5259 = icmp slt i64 %5257, 1
  %5260 = or i1 %5258, %5259
  br i1 %5260, label %7511, label %5261

5261:                                             ; preds = %5247
  %5262 = or i64 %5257, %5254
  %5263 = add nsw i64 %5262, 2147483648
  %5264 = icmp ugt i64 %5263, 4294967295
  br i1 %5264, label %7511, label %5265

5265:                                             ; preds = %5261
  %5266 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %5267 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5266, align 8
  %5268 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5267, i64 14
  %5269 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5268, align 8
  %5270 = call %class.SkBlitter* %5269(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5271 = sub i32 %5239, %5235
  %5272 = sub i32 %5251, %5249
  %5273 = bitcast %class.SkBlitter* %5270 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5274 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5273, align 8
  %5275 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5274, i64 5
  %5276 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5275, align 8
  call void %5276(%class.SkBlitter* %5270, i32 %5235, i32 %5249, i32 %5271, i32 %5272) #13
  br label %7511

5277:                                             ; preds = %5215
  %5278 = bitcast %struct.SkAnalyticEdge* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5278) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5278, i8 -86, i64 72, i1 false) #13
  %5279 = bitcast %struct.SkAnalyticEdge* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5279) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5279, i8 -86, i64 72, i1 false) #13
  %5280 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5280) #13
  %5281 = icmp slt i32 %5231, 2
  br i1 %5281, label %5282, label %5283

5282:                                             ; preds = %5277
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5280) #13
  br label %5340

5283:                                             ; preds = %5277
  %5284 = add nsw i32 %5231, -2
  %5285 = call i32 @llvm.ctlz.i32(i32 %5284, i1 false) #13, !range !9
  %5286 = shl nuw nsw i32 %5285, 1
  %5287 = sub nsw i32 64, %5286
  call void @_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %5287, %struct.SkAnalyticEdge** %5233, i32 %5231, %class.anon* nonnull dereferenceable(1) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5280) #13
  %5288 = zext i32 %5231 to i64
  %5289 = add nsw i64 %5288, -1
  %5290 = and i64 %5289, 1
  %5291 = icmp eq i32 %5231, 2
  br i1 %5291, label %5324, label %5292

5292:                                             ; preds = %5283
  %5293 = sub nsw i64 %5289, %5290
  br label %5294

5294:                                             ; preds = %5294, %5292
  %5295 = phi i64 [ 1, %5292 ], [ %5321, %5294 ]
  %5296 = phi i64 [ %5293, %5292 ], [ %5322, %5294 ]
  %5297 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5295
  %5298 = bitcast %struct.SkAnalyticEdge** %5297 to i64*
  %5299 = load i64, i64* %5298, align 8
  %5300 = add nsw i64 %5295, -1
  %5301 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5300
  %5302 = bitcast %struct.SkAnalyticEdge** %5301 to i64**
  %5303 = load i64*, i64** %5302, align 8
  store i64 %5299, i64* %5303, align 8
  %5304 = bitcast %struct.SkAnalyticEdge** %5301 to i64*
  %5305 = load i64, i64* %5304, align 8
  %5306 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5297, align 8
  %5307 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5306, i64 0, i32 1
  %5308 = bitcast %struct.SkAnalyticEdge** %5307 to i64*
  store i64 %5305, i64* %5308, align 8
  %5309 = add nuw nsw i64 %5295, 1
  %5310 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5309
  %5311 = bitcast %struct.SkAnalyticEdge** %5310 to i64*
  %5312 = load i64, i64* %5311, align 8
  %5313 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5295
  %5314 = bitcast %struct.SkAnalyticEdge** %5313 to i64**
  %5315 = load i64*, i64** %5314, align 8
  store i64 %5312, i64* %5315, align 8
  %5316 = bitcast %struct.SkAnalyticEdge** %5313 to i64*
  %5317 = load i64, i64* %5316, align 8
  %5318 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5310, align 8
  %5319 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5318, i64 0, i32 1
  %5320 = bitcast %struct.SkAnalyticEdge** %5319 to i64*
  store i64 %5317, i64* %5320, align 8
  %5321 = add nuw nsw i64 %5295, 2
  %5322 = add i64 %5296, -2
  %5323 = icmp eq i64 %5322, 0
  br i1 %5323, label %5324, label %5294

5324:                                             ; preds = %5294, %5283
  %5325 = phi i64 [ 1, %5283 ], [ %5321, %5294 ]
  %5326 = icmp eq i64 %5290, 0
  br i1 %5326, label %5340, label %5327

5327:                                             ; preds = %5324
  %5328 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5325
  %5329 = bitcast %struct.SkAnalyticEdge** %5328 to i64*
  %5330 = load i64, i64* %5329, align 8
  %5331 = add nsw i64 %5325, -1
  %5332 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5331
  %5333 = bitcast %struct.SkAnalyticEdge** %5332 to i64**
  %5334 = load i64*, i64** %5333, align 8
  store i64 %5330, i64* %5334, align 8
  %5335 = bitcast %struct.SkAnalyticEdge** %5332 to i64*
  %5336 = load i64, i64* %5335, align 8
  %5337 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5328, align 8
  %5338 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5337, i64 0, i32 1
  %5339 = bitcast %struct.SkAnalyticEdge** %5338 to i64*
  store i64 %5336, i64* %5339, align 8
  br label %5340

5340:                                             ; preds = %5327, %5324, %5282
  %5341 = add nsw i32 %5231, -1
  %5342 = sext i32 %5341 to i64
  %5343 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, i64 %5342
  %5344 = bitcast %struct.SkAnalyticEdge** %5343 to i64*
  %5345 = load i64, i64* %5344, align 8
  %5346 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5233, align 8
  %5347 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 1
  %5348 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 0
  %5349 = bitcast %struct.SkAnalyticEdge** %5347 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5349, i8 0, i64 16, i1 false) #13
  store %struct.SkAnalyticEdge* %5346, %struct.SkAnalyticEdge** %5348, align 8
  %5350 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 8
  store i32 -2147483647, i32* %5350, align 4
  %5351 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 7
  store i32 -2147483647, i32* %5351, align 8
  %5352 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 3
  store i32 -2147483647, i32* %5352, align 8
  %5353 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 4
  store i32 0, i32* %5353, align 4
  %5354 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 9
  store i32 2147483647, i32* %5354, align 8
  %5355 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 5
  store i32 -2147483647, i32* %5355, align 8
  %5356 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5346, i64 0, i32 1
  store %struct.SkAnalyticEdge* %18, %struct.SkAnalyticEdge** %5356, align 8
  %5357 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %5357, align 8
  %5358 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 1
  %5359 = bitcast %struct.SkAnalyticEdge** %5358 to i64*
  store i64 %5345, i64* %5359, align 8
  %5360 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %5360, align 8
  %5361 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 8
  store i32 2147483647, i32* %5361, align 4
  %5362 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 7
  store i32 2147483647, i32* %5362, align 8
  %5363 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 3
  store i32 2147483647, i32* %5363, align 8
  %5364 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 4
  store i32 0, i32* %5364, align 4
  %5365 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 9
  store i32 2147483647, i32* %5365, align 8
  %5366 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 5
  store i32 2147483647, i32* %5366, align 8
  %5367 = inttoptr i64 %5345 to %struct.SkAnalyticEdge*
  %5368 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5367, i64 0, i32 0
  store %struct.SkAnalyticEdge* %19, %struct.SkAnalyticEdge** %5368, align 8
  br i1 %76, label %5376, label %5369

5369:                                             ; preds = %5340
  %5370 = load i32, i32* %5236, align 4
  %5371 = icmp sgt i32 %5370, %5220
  %5372 = select i1 %5371, i32 %5370, i32 %5220
  %5373 = load i32, i32* %5240, align 4
  %5374 = icmp slt i32 %5373, %5221
  %5375 = select i1 %5374, i32 %5373, i32 %5221
  br label %5376

5376:                                             ; preds = %5369, %5340
  %5377 = phi i32 [ %5372, %5369 ], [ %5220, %5340 ]
  %5378 = phi i32 [ %5375, %5369 ], [ %5221, %5340 ]
  %5379 = shl i32 %5235, 16
  %5380 = shl i32 %5239, 16
  %5381 = load i8, i8* %77, align 2
  %5382 = and i8 %5381, 2
  %5383 = icmp eq i8 %5382, 0
  br i1 %5383, label %5384, label %6465

5384:                                             ; preds = %5376
  %5385 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #13
  %5386 = icmp eq i32 %5385, 0
  %5387 = icmp sgt i32 %5231, 1
  %5388 = and i1 %5387, %5386
  br i1 %5388, label %5389, label %6465

5389:                                             ; preds = %5384
  %5390 = bitcast %struct.SkAnalyticEdge* %18 to i64*
  %5391 = load i64, i64* %5390, align 8
  %5392 = inttoptr i64 %5391 to %struct.SkAnalyticEdge*
  %5393 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5392, i64 0, i32 0
  %5394 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5393, align 8
  %5395 = ptrtoint %struct.SkAnalyticEdge* %5394 to i64
  %5396 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5394, i64 0, i32 0
  %5397 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5396, align 8
  %5398 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5392, i64 0, i32 7
  %5399 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5394, i64 0, i32 7
  %5400 = load i32, i32* %5398, align 4
  %5401 = load i32, i32* %5399, align 4
  %5402 = icmp slt i32 %5400, %5401
  %5403 = select i1 %5402, i32 %5401, i32 %5400
  %5404 = shl i32 %5378, 16
  %5405 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %5406 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %5407 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %5408 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32)***
  %5409 = or i32 %5379, 2048
  %5410 = or i32 %5380, 2048
  br label %5411

5411:                                             ; preds = %6460, %5389
  %5412 = phi i64 [ %5395, %5389 ], [ %5555, %6460 ]
  %5413 = phi i64 [ %5391, %5389 ], [ %5556, %6460 ]
  %5414 = phi i32 [ %5403, %5389 ], [ %5605, %6460 ]
  %5415 = phi %struct.SkAnalyticEdge* [ %5397, %5389 ], [ %5476, %6460 ]
  %5416 = inttoptr i64 %5413 to %struct.SkAnalyticEdge*
  %5417 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5416, i64 0, i32 8
  %5418 = load i32, i32* %5417, align 4
  %5419 = icmp sgt i32 %5418, %5414
  br i1 %5419, label %5422, label %5430

5420:                                             ; preds = %5444
  %5421 = inttoptr i64 %5445 to %struct.SkAnalyticEdge*
  br label %5422

5422:                                             ; preds = %5420, %5411
  %5423 = phi i64 [ %5413, %5411 ], [ %5445, %5420 ]
  %5424 = phi %struct.SkAnalyticEdge* [ %5415, %5411 ], [ %5446, %5420 ]
  %5425 = phi %struct.SkAnalyticEdge* [ %5416, %5411 ], [ %5421, %5420 ]
  %5426 = inttoptr i64 %5412 to %struct.SkAnalyticEdge*
  %5427 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5426, i64 0, i32 8
  %5428 = load i32, i32* %5427, align 4
  %5429 = icmp sgt i32 %5428, %5414
  br i1 %5429, label %5474, label %5451

5430:                                             ; preds = %5411, %5444
  %5431 = phi %struct.SkAnalyticEdge* [ %5447, %5444 ], [ %5416, %5411 ]
  %5432 = phi %struct.SkAnalyticEdge* [ %5446, %5444 ], [ %5415, %5411 ]
  %5433 = phi i64 [ %5445, %5444 ], [ %5413, %5411 ]
  %5434 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %5431, i32 %5414, i1 zeroext true) #13
  br i1 %5434, label %5444, label %5435

5435:                                             ; preds = %5430
  %5436 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5432, i64 0, i32 7
  %5437 = load i32, i32* %5436, align 8
  %5438 = ashr i32 %5437, 16
  %5439 = icmp slt i32 %5438, %5378
  br i1 %5439, label %5440, label %7510

5440:                                             ; preds = %5435
  %5441 = ptrtoint %struct.SkAnalyticEdge* %5432 to i64
  %5442 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5432, i64 0, i32 0
  %5443 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5442, align 8
  br label %5444

5444:                                             ; preds = %5440, %5430
  %5445 = phi i64 [ %5433, %5430 ], [ %5441, %5440 ]
  %5446 = phi %struct.SkAnalyticEdge* [ %5432, %5430 ], [ %5443, %5440 ]
  %5447 = inttoptr i64 %5445 to %struct.SkAnalyticEdge*
  %5448 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5447, i64 0, i32 8
  %5449 = load i32, i32* %5448, align 4
  %5450 = icmp sgt i32 %5449, %5414
  br i1 %5450, label %5420, label %5430

5451:                                             ; preds = %5422, %5465
  %5452 = phi %struct.SkAnalyticEdge* [ %5468, %5465 ], [ %5426, %5422 ]
  %5453 = phi %struct.SkAnalyticEdge* [ %5467, %5465 ], [ %5424, %5422 ]
  %5454 = phi i64 [ %5466, %5465 ], [ %5412, %5422 ]
  %5455 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %5452, i32 %5414, i1 zeroext true) #13
  br i1 %5455, label %5465, label %5456

5456:                                             ; preds = %5451
  %5457 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5453, i64 0, i32 7
  %5458 = load i32, i32* %5457, align 8
  %5459 = ashr i32 %5458, 16
  %5460 = icmp slt i32 %5459, %5378
  br i1 %5460, label %5461, label %7510

5461:                                             ; preds = %5456
  %5462 = ptrtoint %struct.SkAnalyticEdge* %5453 to i64
  %5463 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5453, i64 0, i32 0
  %5464 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5463, align 8
  br label %5465

5465:                                             ; preds = %5461, %5451
  %5466 = phi i64 [ %5454, %5451 ], [ %5462, %5461 ]
  %5467 = phi %struct.SkAnalyticEdge* [ %5453, %5451 ], [ %5464, %5461 ]
  %5468 = inttoptr i64 %5466 to %struct.SkAnalyticEdge*
  %5469 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5468, i64 0, i32 8
  %5470 = load i32, i32* %5469, align 4
  %5471 = icmp sgt i32 %5470, %5414
  br i1 %5471, label %5472, label %5451

5472:                                             ; preds = %5465
  %5473 = inttoptr i64 %5466 to %struct.SkAnalyticEdge*
  br label %5474

5474:                                             ; preds = %5472, %5422
  %5475 = phi i64 [ %5412, %5422 ], [ %5466, %5472 ]
  %5476 = phi %struct.SkAnalyticEdge* [ %5424, %5422 ], [ %5467, %5472 ]
  %5477 = phi %struct.SkAnalyticEdge* [ %5426, %5422 ], [ %5473, %5472 ]
  %5478 = ashr i32 %5414, 16
  %5479 = icmp slt i32 %5478, %5378
  br i1 %5479, label %5480, label %7510

5480:                                             ; preds = %5474
  %5481 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 6
  %5482 = load i32, i32* %5481, align 4
  %5483 = add nsw i32 %5482, 65536
  %5484 = icmp eq i32 %5483, %5414
  br i1 %5484, label %5485, label %5491

5485:                                             ; preds = %5480
  %5486 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 3
  %5487 = load i32, i32* %5486, align 8
  %5488 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 4
  %5489 = load i32, i32* %5488, align 4
  %5490 = add nsw i32 %5489, %5487
  store i32 %5490, i32* %5486, align 8
  br label %5508

5491:                                             ; preds = %5480
  %5492 = icmp eq i32 %5482, %5414
  br i1 %5492, label %5509, label %5493

5493:                                             ; preds = %5491
  %5494 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 5
  %5495 = load i32, i32* %5494, align 8
  %5496 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 4
  %5497 = load i32, i32* %5496, align 4
  %5498 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 7
  %5499 = load i32, i32* %5498, align 8
  %5500 = sub nsw i32 %5414, %5499
  %5501 = sext i32 %5497 to i64
  %5502 = sext i32 %5500 to i64
  %5503 = mul nsw i64 %5502, %5501
  %5504 = lshr i64 %5503, 16
  %5505 = trunc i64 %5504 to i32
  %5506 = add nsw i32 %5495, %5505
  %5507 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 3
  store i32 %5506, i32* %5507, align 8
  br label %5508

5508:                                             ; preds = %5485, %5493
  store i32 %5414, i32* %5481, align 4
  br label %5509

5509:                                             ; preds = %5508, %5491
  %5510 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 6
  %5511 = load i32, i32* %5510, align 4
  %5512 = add nsw i32 %5511, 65536
  %5513 = icmp eq i32 %5512, %5414
  br i1 %5513, label %5514, label %5520

5514:                                             ; preds = %5509
  %5515 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 3
  %5516 = load i32, i32* %5515, align 8
  %5517 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 4
  %5518 = load i32, i32* %5517, align 4
  %5519 = add nsw i32 %5518, %5516
  store i32 %5519, i32* %5515, align 8
  store i32 %5414, i32* %5510, align 4
  br label %5540

5520:                                             ; preds = %5509
  %5521 = icmp eq i32 %5511, %5414
  br i1 %5521, label %5522, label %5525

5522:                                             ; preds = %5520
  %5523 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 3
  %5524 = load i32, i32* %5523, align 8
  br label %5540

5525:                                             ; preds = %5520
  %5526 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 5
  %5527 = load i32, i32* %5526, align 8
  %5528 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 4
  %5529 = load i32, i32* %5528, align 4
  %5530 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 7
  %5531 = load i32, i32* %5530, align 8
  %5532 = sub nsw i32 %5414, %5531
  %5533 = sext i32 %5529 to i64
  %5534 = sext i32 %5532 to i64
  %5535 = mul nsw i64 %5534, %5533
  %5536 = lshr i64 %5535, 16
  %5537 = trunc i64 %5536 to i32
  %5538 = add nsw i32 %5527, %5537
  %5539 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 3
  store i32 %5538, i32* %5539, align 8
  store i32 %5414, i32* %5510, align 4
  br label %5540

5540:                                             ; preds = %5525, %5522, %5514
  %5541 = phi i32 [ %5524, %5522 ], [ %5519, %5514 ], [ %5538, %5525 ]
  %5542 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 3
  %5543 = load i32, i32* %5542, align 8
  %5544 = icmp sgt i32 %5543, %5541
  br i1 %5544, label %5553, label %5545

5545:                                             ; preds = %5540
  %5546 = icmp eq i32 %5543, %5541
  br i1 %5546, label %5547, label %5554

5547:                                             ; preds = %5545
  %5548 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5425, i64 0, i32 4
  %5549 = load i32, i32* %5548, align 4
  %5550 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5477, i64 0, i32 4
  %5551 = load i32, i32* %5550, align 4
  %5552 = icmp sgt i32 %5549, %5551
  br i1 %5552, label %5553, label %5554

5553:                                             ; preds = %5547, %5540
  br label %5554

5554:                                             ; preds = %5553, %5547, %5545
  %5555 = phi i64 [ %5423, %5553 ], [ %5475, %5547 ], [ %5475, %5545 ]
  %5556 = phi i64 [ %5475, %5553 ], [ %5423, %5547 ], [ %5423, %5545 ]
  %5557 = inttoptr i64 %5556 to %struct.SkAnalyticEdge*
  %5558 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 8
  %5559 = inttoptr i64 %5555 to %struct.SkAnalyticEdge*
  %5560 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 8
  %5561 = load i32, i32* %5560, align 4
  %5562 = load i32, i32* %5558, align 4
  %5563 = icmp slt i32 %5561, %5562
  %5564 = select i1 %5563, i32 %5561, i32 %5562
  %5565 = ptrtoint %struct.SkAnalyticEdge* %5476 to i64
  %5566 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5476, i64 0, i32 7
  %5567 = load i32, i32* %5566, align 8
  %5568 = icmp slt i32 %5567, %5404
  br i1 %5568, label %5569, label %5602

5569:                                             ; preds = %5554
  %5570 = add nsw i32 %5562, 65536
  %5571 = icmp slt i32 %5570, %5561
  br i1 %5571, label %5572, label %5574

5572:                                             ; preds = %5569
  %5573 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %5557, %struct.SkAnalyticEdge* %5476) #13
  br i1 %5573, label %5599, label %5602

5574:                                             ; preds = %5569
  %5575 = add nsw i32 %5561, 65536
  %5576 = icmp sgt i32 %5562, %5575
  br i1 %5576, label %5577, label %5579

5577:                                             ; preds = %5574
  %5578 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %5559, %struct.SkAnalyticEdge* %5476) #13
  br i1 %5578, label %5599, label %5602

5579:                                             ; preds = %5574
  %5580 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5476, i64 0, i32 0
  %5581 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5580, align 8
  %5582 = ptrtoint %struct.SkAnalyticEdge* %5581 to i64
  %5583 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5581, i64 0, i32 7
  %5584 = load i32, i32* %5583, align 8
  %5585 = icmp slt i32 %5584, %5404
  br i1 %5585, label %5586, label %5602

5586:                                             ; preds = %5579
  %5587 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5581, i64 0, i32 5
  %5588 = load i32, i32* %5587, align 8
  %5589 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5476, i64 0, i32 5
  %5590 = load i32, i32* %5589, align 8
  %5591 = icmp slt i32 %5588, %5590
  %5592 = select i1 %5591, i64 %5582, i64 %5565
  %5593 = inttoptr i64 %5592 to %struct.SkAnalyticEdge*
  %5594 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %5557, %struct.SkAnalyticEdge* %5593) #13
  br i1 %5594, label %5595, label %5602

5595:                                             ; preds = %5586
  %5596 = select i1 %5591, i64 %5565, i64 %5582
  %5597 = inttoptr i64 %5596 to %struct.SkAnalyticEdge*
  %5598 = call fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* %5559, %struct.SkAnalyticEdge* %5597) #13
  br i1 %5598, label %5599, label %5602

5599:                                             ; preds = %5595, %5577, %5572
  %5600 = add nsw i32 %5564, 65535
  %5601 = and i32 %5600, -65536
  br label %5602

5602:                                             ; preds = %5599, %5595, %5586, %5579, %5577, %5572, %5554
  %5603 = phi i32 [ %5601, %5599 ], [ %5564, %5595 ], [ %5564, %5572 ], [ %5564, %5577 ], [ %5564, %5554 ], [ %5564, %5579 ], [ %5564, %5586 ]
  %5604 = icmp slt i32 %5404, %5603
  %5605 = select i1 %5604, i32 %5404, i32 %5603
  %5606 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 3
  %5607 = load i32, i32* %5606, align 4
  %5608 = icmp sgt i32 %5607, %5379
  %5609 = select i1 %5608, i32 %5607, i32 %5379
  %5610 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 4
  %5611 = load i32, i32* %5610, align 4
  %5612 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 3
  %5613 = load i32, i32* %5612, align 4
  %5614 = icmp slt i32 %5613, %5380
  %5615 = select i1 %5614, i32 %5613, i32 %5380
  %5616 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 4
  %5617 = load i32, i32* %5616, align 4
  %5618 = or i32 %5617, %5611
  %5619 = icmp eq i32 %5618, 0
  br i1 %5619, label %5620, label %5811

5620:                                             ; preds = %5602
  %5621 = add nsw i32 %5609, 65535
  %5622 = ashr i32 %5621, 16
  %5623 = ashr i32 %5615, 16
  %5624 = and i32 %5621, -65536
  %5625 = sub nsw i32 %5624, %5609
  %5626 = and i32 %5615, 65535
  %5627 = add nsw i32 %5414, 65535
  %5628 = ashr i32 %5627, 16
  %5629 = ashr i32 %5605, 16
  %5630 = and i32 %5627, -65536
  %5631 = sub nsw i32 %5630, %5414
  %5632 = and i32 %5605, 65535
  %5633 = icmp slt i32 %5629, %5628
  %5634 = or i32 %5605, -65536
  %5635 = select i1 %5633, i32 0, i32 %5632
  %5636 = select i1 %5633, i32 %5634, i32 0
  %5637 = add i32 %5636, %5631
  %5638 = icmp slt i32 %5623, %5622
  %5639 = icmp sgt i32 %5637, 0
  br i1 %5638, label %5755, label %5640

5640:                                             ; preds = %5620
  br i1 %5639, label %5641, label %5689

5641:                                             ; preds = %5640
  %5642 = icmp sgt i32 %5625, 0
  br i1 %5642, label %5645, label %5643

5643:                                             ; preds = %5641
  %5644 = add nsw i32 %5628, -1
  br label %5660

5645:                                             ; preds = %5641
  %5646 = add nsw i32 %5622, -1
  %5647 = add nsw i32 %5628, -1
  %5648 = sext i32 %5637 to i64
  %5649 = sext i32 %5625 to i64
  %5650 = mul nsw i64 %5649, %5648
  %5651 = lshr i64 %5650, 16
  %5652 = trunc i64 %5651 to i32
  %5653 = mul nsw i32 %5652, 255
  %5654 = add nsw i32 %5653, 32768
  %5655 = lshr i32 %5654, 16
  %5656 = trunc i32 %5655 to i8
  %5657 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5658 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5657, i64 16
  %5659 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5658, align 8
  call void %5659(%class.AdditiveBlitter* nonnull %5219, i32 %5646, i32 %5647, i8 zeroext %5656) #13
  br label %5660

5660:                                             ; preds = %5645, %5643
  %5661 = phi i32 [ %5644, %5643 ], [ %5647, %5645 ]
  %5662 = sub nsw i32 %5623, %5622
  %5663 = mul nsw i32 %5637, 255
  %5664 = add nsw i32 %5663, 32768
  %5665 = lshr i32 %5664, 16
  %5666 = trunc i32 %5665 to i8
  %5667 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %5668 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5667, i64 17
  %5669 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5668, align 8
  call void %5669(%class.AdditiveBlitter* nonnull %5219, i32 %5622, i32 %5661, i32 %5662, i8 zeroext %5666) #13
  %5670 = icmp eq i32 %5626, 0
  br i1 %5670, label %5684, label %5671

5671:                                             ; preds = %5660
  %5672 = sext i32 %5637 to i64
  %5673 = zext i32 %5626 to i64
  %5674 = mul nsw i64 %5673, %5672
  %5675 = lshr i64 %5674, 16
  %5676 = trunc i64 %5675 to i32
  %5677 = mul nsw i32 %5676, 255
  %5678 = add nsw i32 %5677, 32768
  %5679 = lshr i32 %5678, 16
  %5680 = trunc i32 %5679 to i8
  %5681 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5682 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5681, i64 16
  %5683 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5682, align 8
  call void %5683(%class.AdditiveBlitter* nonnull %5219, i32 %5623, i32 %5661, i8 zeroext %5680) #13
  br label %5684

5684:                                             ; preds = %5671, %5660
  %5685 = add i32 %5636, %5630
  %5686 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5408, align 8
  %5687 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5686, i64 19
  %5688 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5687, align 8
  call void %5688(%class.AdditiveBlitter* nonnull %5219, i32 %5414, i32 %5685) #13
  br label %5689

5689:                                             ; preds = %5684, %5640
  %5690 = icmp sgt i32 %5629, %5628
  br i1 %5690, label %5691, label %5717

5691:                                             ; preds = %5689
  %5692 = icmp sle i32 %5623, %5622
  %5693 = mul nsw i32 %5625, 255
  %5694 = add nsw i32 %5693, 32768
  %5695 = lshr i32 %5694, 16
  %5696 = mul nuw nsw i32 %5626, 255
  %5697 = add nuw nsw i32 %5696, 32768
  %5698 = lshr i32 %5697, 16
  %5699 = or i32 %5695, %5698
  %5700 = trunc i32 %5699 to i8
  %5701 = icmp eq i8 %5700, 0
  %5702 = and i1 %5692, %5701
  br i1 %5702, label %5717, label %5703

5703:                                             ; preds = %5691
  %5704 = trunc i32 %5695 to i8
  %5705 = trunc i32 %5698 to i8
  %5706 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5707 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5706, i64 14
  %5708 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5707, align 8
  %5709 = call %class.SkBlitter* %5708(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5710 = add nsw i32 %5622, -1
  %5711 = sub nsw i32 %5623, %5622
  %5712 = sub nsw i32 %5629, %5628
  %5713 = bitcast %class.SkBlitter* %5709 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %5714 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %5713, align 8
  %5715 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %5714, i64 6
  %5716 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %5715, align 8
  call void %5716(%class.SkBlitter* %5709, i32 %5710, i32 %5628, i32 %5711, i32 %5712, i8 zeroext %5704, i8 zeroext %5705) #13
  br label %5717

5717:                                             ; preds = %5703, %5691, %5689
  %5718 = icmp eq i32 %5635, 0
  br i1 %5718, label %6460, label %5719

5719:                                             ; preds = %5717
  %5720 = icmp sgt i32 %5625, 0
  br i1 %5720, label %5721, label %5735

5721:                                             ; preds = %5719
  %5722 = add nsw i32 %5622, -1
  %5723 = zext i32 %5635 to i64
  %5724 = sext i32 %5625 to i64
  %5725 = mul nsw i64 %5724, %5723
  %5726 = lshr i64 %5725, 16
  %5727 = trunc i64 %5726 to i32
  %5728 = mul nsw i32 %5727, 255
  %5729 = add nsw i32 %5728, 32768
  %5730 = lshr i32 %5729, 16
  %5731 = trunc i32 %5730 to i8
  %5732 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5733 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5732, i64 16
  %5734 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5733, align 8
  call void %5734(%class.AdditiveBlitter* nonnull %5219, i32 %5722, i32 %5629, i8 zeroext %5731) #13
  br label %5735

5735:                                             ; preds = %5721, %5719
  %5736 = sub nsw i32 %5623, %5622
  %5737 = mul nuw nsw i32 %5635, 255
  %5738 = add nuw nsw i32 %5737, 32768
  %5739 = lshr i32 %5738, 16
  %5740 = trunc i32 %5739 to i8
  %5741 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %5742 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5741, i64 17
  %5743 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5742, align 8
  call void %5743(%class.AdditiveBlitter* nonnull %5219, i32 %5622, i32 %5629, i32 %5736, i8 zeroext %5740) #13
  %5744 = icmp eq i32 %5626, 0
  br i1 %5744, label %6460, label %5745

5745:                                             ; preds = %5735
  %5746 = mul nuw i32 %5626, %5635
  %5747 = lshr i32 %5746, 16
  %5748 = mul nuw nsw i32 %5747, 255
  %5749 = add nuw nsw i32 %5748, 32768
  %5750 = lshr i32 %5749, 16
  %5751 = trunc i32 %5750 to i8
  %5752 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5753 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5752, i64 16
  %5754 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5753, align 8
  call void %5754(%class.AdditiveBlitter* nonnull %5219, i32 %5623, i32 %5629, i8 zeroext %5751) #13
  br label %6460

5755:                                             ; preds = %5620
  br i1 %5639, label %5756, label %5776

5756:                                             ; preds = %5755
  %5757 = add nsw i32 %5622, -1
  %5758 = add nsw i32 %5628, -1
  %5759 = sub nsw i32 %5615, %5609
  %5760 = sext i32 %5637 to i64
  %5761 = sext i32 %5759 to i64
  %5762 = mul nsw i64 %5761, %5760
  %5763 = lshr i64 %5762, 16
  %5764 = trunc i64 %5763 to i32
  %5765 = mul nsw i32 %5764, 255
  %5766 = add nsw i32 %5765, 32768
  %5767 = lshr i32 %5766, 16
  %5768 = trunc i32 %5767 to i8
  %5769 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %5770 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5769, i64 17
  %5771 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5770, align 8
  call void %5771(%class.AdditiveBlitter* nonnull %5219, i32 %5757, i32 %5758, i32 1, i8 zeroext %5768) #13
  %5772 = add i32 %5636, %5630
  %5773 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5408, align 8
  %5774 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5773, i64 19
  %5775 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5774, align 8
  call void %5775(%class.AdditiveBlitter* nonnull %5219, i32 %5414, i32 %5772) #13
  br label %5776

5776:                                             ; preds = %5756, %5755
  %5777 = icmp sgt i32 %5629, %5628
  br i1 %5777, label %5778, label %5794

5778:                                             ; preds = %5776
  %5779 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5780 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5779, i64 14
  %5781 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5780, align 8
  %5782 = call %class.SkBlitter* %5781(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5783 = add nsw i32 %5622, -1
  %5784 = sub nsw i32 %5629, %5628
  %5785 = sub nsw i32 %5615, %5609
  %5786 = mul nsw i32 %5785, 255
  %5787 = add nsw i32 %5786, 32768
  %5788 = lshr i32 %5787, 16
  %5789 = trunc i32 %5788 to i8
  %5790 = bitcast %class.SkBlitter* %5782 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5791 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5790, align 8
  %5792 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5791, i64 4
  %5793 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5792, align 8
  call void %5793(%class.SkBlitter* %5782, i32 %5783, i32 %5628, i32 %5784, i8 zeroext %5789) #13
  br label %5794

5794:                                             ; preds = %5778, %5776
  %5795 = icmp eq i32 %5635, 0
  br i1 %5795, label %6460, label %5796

5796:                                             ; preds = %5794
  %5797 = add nsw i32 %5622, -1
  %5798 = sub nsw i32 %5615, %5609
  %5799 = zext i32 %5635 to i64
  %5800 = sext i32 %5798 to i64
  %5801 = mul nsw i64 %5800, %5799
  %5802 = lshr i64 %5801, 16
  %5803 = trunc i64 %5802 to i32
  %5804 = mul nsw i32 %5803, 255
  %5805 = add nsw i32 %5804, 32768
  %5806 = lshr i32 %5805, 16
  %5807 = trunc i32 %5806 to i8
  %5808 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %5809 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5808, i64 17
  %5810 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5809, align 8
  call void %5810(%class.AdditiveBlitter* nonnull %5219, i32 %5797, i32 %5629, i32 1, i8 zeroext %5807) #13
  br label %6460

5811:                                             ; preds = %5602
  %5812 = add nsw i32 %5609, 2048
  %5813 = add nsw i32 %5615, 2048
  %5814 = add nsw i32 %5605, 65535
  %5815 = ashr i32 %5814, 16
  %5816 = sub nsw i32 %5815, %5478
  %5817 = icmp sgt i32 %5816, 1
  br i1 %5817, label %5821, label %5818

5818:                                             ; preds = %5811
  %5819 = and i32 %5812, -4096
  %5820 = and i32 %5813, -4096
  br label %6225

5821:                                             ; preds = %5811
  %5822 = and i32 %5414, -65536
  %5823 = icmp eq i32 %5822, %5414
  br i1 %5823, label %6053, label %5824

5824:                                             ; preds = %5821
  %5825 = add nsw i32 %5816, -1
  %5826 = add nsw i32 %5414, 65536
  %5827 = and i32 %5826, -65536
  %5828 = sub nsw i32 %5827, %5414
  %5829 = sext i32 %5611 to i64
  %5830 = sext i32 %5828 to i64
  %5831 = mul nsw i64 %5829, %5830
  %5832 = lshr i64 %5831, 16
  %5833 = trunc i64 %5832 to i32
  %5834 = add nsw i32 %5812, %5833
  %5835 = sext i32 %5617 to i64
  %5836 = mul nsw i64 %5835, %5830
  %5837 = lshr i64 %5836, 16
  %5838 = trunc i64 %5837 to i32
  %5839 = add nsw i32 %5813, %5838
  %5840 = and i32 %5812, -4096
  %5841 = and i32 %5813, -4096
  %5842 = and i32 %5834, -4096
  %5843 = and i32 %5839, -4096
  %5844 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 9
  %5845 = load i32, i32* %5844, align 8
  %5846 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 9
  %5847 = load i32, i32* %5846, align 8
  %5848 = mul nsw i32 %5828, 255
  %5849 = add nsw i32 %5848, 32768
  %5850 = lshr i32 %5849, 16
  %5851 = trunc i32 %5850 to i8
  %5852 = icmp sgt i32 %5840, %5841
  br i1 %5852, label %6048, label %5853

5853:                                             ; preds = %5824
  %5854 = icmp sgt i32 %5842, %5843
  br i1 %5854, label %5855, label %5868

5855:                                             ; preds = %5853
  %5856 = icmp sgt i32 %5840, %5842
  %5857 = select i1 %5856, i32 %5842, i32 %5840
  %5858 = select i1 %5856, i32 %5840, i32 %5842
  %5859 = icmp sgt i32 %5841, %5843
  %5860 = select i1 %5859, i32 %5843, i32 %5841
  %5861 = select i1 %5859, i32 %5841, i32 %5843
  %5862 = icmp slt i32 %5857, %5860
  %5863 = select i1 %5862, i32 %5860, i32 %5857
  %5864 = icmp slt i32 %5861, %5858
  %5865 = select i1 %5864, i32 %5861, i32 %5858
  %5866 = add nsw i32 %5863, %5865
  %5867 = sdiv i32 %5866, 2
  br label %5868

5868:                                             ; preds = %5855, %5853
  %5869 = phi i32 [ %5867, %5855 ], [ %5842, %5853 ]
  %5870 = phi i32 [ %5867, %5855 ], [ %5843, %5853 ]
  %5871 = icmp eq i32 %5840, %5841
  %5872 = icmp eq i32 %5869, %5870
  %5873 = and i1 %5871, %5872
  br i1 %5873, label %6048, label %5874

5874:                                             ; preds = %5868
  %5875 = icmp slt i32 %5869, %5840
  %5876 = select i1 %5875, i32 %5869, i32 %5840
  %5877 = select i1 %5875, i32 %5840, i32 %5869
  %5878 = icmp slt i32 %5870, %5841
  %5879 = select i1 %5878, i32 %5870, i32 %5841
  %5880 = select i1 %5878, i32 %5841, i32 %5870
  %5881 = add nsw i32 %5877, 65535
  %5882 = and i32 %5881, -65536
  %5883 = and i32 %5879, -65536
  %5884 = icmp slt i32 %5883, %5882
  br i1 %5884, label %6047, label %5885

5885:                                             ; preds = %5874
  %5886 = icmp sgt i32 %5882, %5876
  br i1 %5886, label %5887, label %5956

5887:                                             ; preds = %5885
  %5888 = sub nsw i32 %5882, %5876
  %5889 = add nsw i32 %5888, 65535
  %5890 = ashr i32 %5889, 16
  switch i32 %5890, label %5955 [
    i32 1, label %5891
    i32 2, label %5917
  ]

5891:                                             ; preds = %5887
  %5892 = sub i32 %5882, %5877
  %5893 = add nsw i32 %5892, %5888
  %5894 = sdiv i32 %5893, 2
  %5895 = lshr i32 %5894, 8
  %5896 = ashr i32 %5876, 16
  %5897 = icmp eq i8 %5851, -1
  br i1 %5897, label %5898, label %5908

5898:                                             ; preds = %5891
  %5899 = trunc i32 %5895 to i8
  %5900 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5901 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5900, i64 14
  %5902 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5901, align 8
  %5903 = call %class.SkBlitter* %5902(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5904 = bitcast %class.SkBlitter* %5903 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5905 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5904, align 8
  %5906 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5905, i64 4
  %5907 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5906, align 8
  call void %5907(%class.SkBlitter* %5903, i32 %5896, i32 %5478, i32 1, i8 zeroext %5899) #13
  br label %5956

5908:                                             ; preds = %5891
  %5909 = and i32 %5895, 255
  %5910 = and i32 %5850, 255
  %5911 = mul nuw nsw i32 %5909, %5910
  %5912 = lshr i32 %5911, 8
  %5913 = trunc i32 %5912 to i8
  %5914 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5915 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5914, i64 16
  %5916 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5915, align 8
  call void %5916(%class.AdditiveBlitter* nonnull %5219, i32 %5896, i32 %5478, i8 zeroext %5913) #13
  br label %5956

5917:                                             ; preds = %5887
  %5918 = sub i32 -65536, %5876
  %5919 = add i32 %5882, %5918
  %5920 = sub i32 %5877, %5876
  %5921 = sub i32 %5920, %5919
  %5922 = ashr i32 %5919, 11
  %5923 = ashr i32 %5845, 11
  %5924 = mul i32 %5922, %5923
  %5925 = mul i32 %5924, %5922
  %5926 = lshr i32 %5925, 8
  %5927 = ashr i32 %5921, 11
  %5928 = mul i32 %5927, %5923
  %5929 = mul i32 %5928, %5927
  %5930 = lshr i32 %5929, 8
  %5931 = trunc i32 %5930 to i8
  %5932 = sub i8 %5851, %5931
  %5933 = ashr i32 %5876, 16
  %5934 = icmp eq i8 %5851, -1
  br i1 %5934, label %5935, label %5946

5935:                                             ; preds = %5917
  %5936 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5937 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5936, i64 14
  %5938 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5937, align 8
  %5939 = call %class.SkBlitter* %5938(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5940 = and i32 %5926, 255
  %5941 = zext i8 %5932 to i32
  %5942 = bitcast %class.SkBlitter* %5939 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5943 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5942, align 8
  %5944 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5943, i64 9
  %5945 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5944, align 8
  call void %5945(%class.SkBlitter* %5939, i32 %5933, i32 %5478, i32 %5940, i32 %5941) #13
  br label %5956

5946:                                             ; preds = %5917
  %5947 = trunc i32 %5926 to i8
  %5948 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5949 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5948, i64 16
  %5950 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5949, align 8
  call void %5950(%class.AdditiveBlitter* nonnull %5219, i32 %5933, i32 %5478, i8 zeroext %5947) #13
  %5951 = add nsw i32 %5933, 1
  %5952 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %5953 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5952, i64 16
  %5954 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5953, align 8
  call void %5954(%class.AdditiveBlitter* nonnull %5219, i32 %5951, i32 %5478, i8 zeroext %5932) #13
  br label %5956

5955:                                             ; preds = %5887
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %5478, i32 %5876, i32 %5882, i32 %5877, i32 %5882, i32 %5845, i32 2147483647, i8 zeroext %5851, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %5956

5956:                                             ; preds = %5955, %5946, %5935, %5908, %5898, %5885
  %5957 = icmp sgt i32 %5883, %5882
  br i1 %5957, label %5958, label %5976

5958:                                             ; preds = %5956
  %5959 = ashr i32 %5881, 16
  %5960 = sub nsw i32 %5883, %5882
  %5961 = ashr exact i32 %5960, 16
  %5962 = icmp eq i8 %5851, -1
  br i1 %5962, label %5963, label %5972

5963:                                             ; preds = %5958
  %5964 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5965 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5964, i64 14
  %5966 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5965, align 8
  %5967 = call %class.SkBlitter* %5966(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5968 = bitcast %class.SkBlitter* %5967 to void (%class.SkBlitter*, i32, i32, i32)***
  %5969 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %5968, align 8
  %5970 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5969, i64 2
  %5971 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5970, align 8
  call void %5971(%class.SkBlitter* %5967, i32 %5959, i32 %5478, i32 %5961) #13
  br label %5976

5972:                                             ; preds = %5958
  %5973 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %5974 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5973, i64 17
  %5975 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5974, align 8
  call void %5975(%class.AdditiveBlitter* nonnull %5219, i32 %5959, i32 %5478, i32 %5961, i8 zeroext %5851) #13
  br label %5976

5976:                                             ; preds = %5972, %5963, %5956
  %5977 = icmp sgt i32 %5880, %5883
  br i1 %5977, label %5978, label %6048

5978:                                             ; preds = %5976
  %5979 = sub nsw i32 %5880, %5883
  %5980 = add nsw i32 %5979, 65535
  %5981 = ashr i32 %5980, 16
  switch i32 %5981, label %6046 [
    i32 1, label %5982
    i32 2, label %6008
  ]

5982:                                             ; preds = %5978
  %5983 = sub i32 %5879, %5883
  %5984 = add nsw i32 %5983, %5979
  %5985 = sdiv i32 %5984, 2
  %5986 = lshr i32 %5985, 8
  %5987 = ashr i32 %5879, 16
  %5988 = icmp eq i8 %5851, -1
  br i1 %5988, label %5989, label %5999

5989:                                             ; preds = %5982
  %5990 = trunc i32 %5986 to i8
  %5991 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %5992 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5991, i64 14
  %5993 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5992, align 8
  %5994 = call %class.SkBlitter* %5993(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %5995 = bitcast %class.SkBlitter* %5994 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5996 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5995, align 8
  %5997 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5996, i64 4
  %5998 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5997, align 8
  call void %5998(%class.SkBlitter* %5994, i32 %5987, i32 %5478, i32 1, i8 zeroext %5990) #13
  br label %6048

5999:                                             ; preds = %5982
  %6000 = and i32 %5986, 255
  %6001 = and i32 %5850, 255
  %6002 = mul nuw nsw i32 %6000, %6001
  %6003 = lshr i32 %6002, 8
  %6004 = trunc i32 %6003 to i8
  %6005 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6006 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6005, i64 16
  %6007 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6006, align 8
  call void %6007(%class.AdditiveBlitter* nonnull %5219, i32 %5987, i32 %5478, i8 zeroext %6004) #13
  br label %6048

6008:                                             ; preds = %5978
  %6009 = sub i32 65536, %5879
  %6010 = add i32 %6009, %5883
  %6011 = sub i32 %5880, %5879
  %6012 = sub i32 %6011, %6010
  %6013 = ashr i32 %6010, 11
  %6014 = ashr i32 %5847, 11
  %6015 = mul i32 %6013, %6014
  %6016 = mul i32 %6015, %6013
  %6017 = lshr i32 %6016, 8
  %6018 = trunc i32 %6017 to i8
  %6019 = sub i8 %5851, %6018
  %6020 = ashr i32 %6012, 11
  %6021 = mul i32 %6020, %6014
  %6022 = mul i32 %6021, %6020
  %6023 = lshr i32 %6022, 8
  %6024 = ashr i32 %5879, 16
  %6025 = icmp eq i8 %5851, -1
  br i1 %6025, label %6026, label %6037

6026:                                             ; preds = %6008
  %6027 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6028 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6027, i64 14
  %6029 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6028, align 8
  %6030 = call %class.SkBlitter* %6029(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6031 = zext i8 %6019 to i32
  %6032 = and i32 %6023, 255
  %6033 = bitcast %class.SkBlitter* %6030 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6034 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6033, align 8
  %6035 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6034, i64 9
  %6036 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6035, align 8
  call void %6036(%class.SkBlitter* %6030, i32 %6024, i32 %5478, i32 %6031, i32 %6032) #13
  br label %6048

6037:                                             ; preds = %6008
  %6038 = trunc i32 %6023 to i8
  %6039 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6040 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6039, i64 16
  %6041 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6040, align 8
  call void %6041(%class.AdditiveBlitter* nonnull %5219, i32 %6024, i32 %5478, i8 zeroext %6019) #13
  %6042 = add nsw i32 %6024, 1
  %6043 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6044 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6043, i64 16
  %6045 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6044, align 8
  call void %6045(%class.AdditiveBlitter* nonnull %5219, i32 %6042, i32 %5478, i8 zeroext %6038) #13
  br label %6048

6046:                                             ; preds = %5978
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %5478, i32 %5883, i32 %5879, i32 %5883, i32 %5880, i32 2147483647, i32 %5847, i8 zeroext %5851, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6048

6047:                                             ; preds = %5874
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %5478, i32 %5876, i32 %5879, i32 %5877, i32 %5880, i32 %5845, i32 %5847, i8 zeroext %5851, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6048

6048:                                             ; preds = %6047, %6046, %6037, %6026, %5999, %5989, %5976, %5868, %5824
  %6049 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5408, align 8
  %6050 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6049, i64 19
  %6051 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6050, align 8
  call void %6051(%class.AdditiveBlitter* nonnull %5219, i32 %5414, i32 %5827) #13
  %6052 = icmp sgt i32 %5825, 1
  br i1 %6052, label %6053, label %6225

6053:                                             ; preds = %6048, %5821
  %6054 = phi i32 [ %5827, %6048 ], [ %5414, %5821 ]
  %6055 = phi i32 [ %5834, %6048 ], [ %5812, %5821 ]
  %6056 = phi i32 [ %5839, %6048 ], [ %5813, %5821 ]
  %6057 = phi i32 [ %5825, %6048 ], [ %5816, %5821 ]
  %6058 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 9
  %6059 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 9
  br label %6060

6060:                                             ; preds = %6220, %6053
  %6061 = phi i32 [ %6054, %6053 ], [ %6067, %6220 ]
  %6062 = phi i32 [ %6055, %6053 ], [ %6068, %6220 ]
  %6063 = phi i32 [ %6056, %6053 ], [ %6069, %6220 ]
  %6064 = phi i32 [ %6057, %6053 ], [ %6065, %6220 ]
  %6065 = add nsw i32 %6064, -1
  %6066 = ashr i32 %6061, 16
  %6067 = add nsw i32 %6061, 65536
  %6068 = add nsw i32 %6062, %5611
  %6069 = add nsw i32 %6063, %5617
  %6070 = and i32 %6062, -4096
  %6071 = and i32 %6063, -4096
  %6072 = and i32 %6068, -4096
  %6073 = and i32 %6069, -4096
  %6074 = load i32, i32* %6058, align 8
  %6075 = load i32, i32* %6059, align 8
  %6076 = icmp sgt i32 %6070, %6071
  br i1 %6076, label %6220, label %6077

6077:                                             ; preds = %6060
  %6078 = icmp sgt i32 %6072, %6073
  br i1 %6078, label %6079, label %6092

6079:                                             ; preds = %6077
  %6080 = icmp sgt i32 %6070, %6072
  %6081 = select i1 %6080, i32 %6072, i32 %6070
  %6082 = select i1 %6080, i32 %6070, i32 %6072
  %6083 = icmp sgt i32 %6071, %6073
  %6084 = select i1 %6083, i32 %6073, i32 %6071
  %6085 = select i1 %6083, i32 %6071, i32 %6073
  %6086 = icmp slt i32 %6081, %6084
  %6087 = select i1 %6086, i32 %6084, i32 %6081
  %6088 = icmp slt i32 %6085, %6082
  %6089 = select i1 %6088, i32 %6085, i32 %6082
  %6090 = add nsw i32 %6087, %6089
  %6091 = sdiv i32 %6090, 2
  br label %6092

6092:                                             ; preds = %6079, %6077
  %6093 = phi i32 [ %6091, %6079 ], [ %6072, %6077 ]
  %6094 = phi i32 [ %6091, %6079 ], [ %6073, %6077 ]
  %6095 = icmp eq i32 %6070, %6071
  %6096 = icmp eq i32 %6093, %6094
  %6097 = and i1 %6095, %6096
  br i1 %6097, label %6220, label %6098

6098:                                             ; preds = %6092
  %6099 = icmp slt i32 %6093, %6070
  %6100 = select i1 %6099, i32 %6093, i32 %6070
  %6101 = select i1 %6099, i32 %6070, i32 %6093
  %6102 = icmp slt i32 %6094, %6071
  %6103 = select i1 %6102, i32 %6094, i32 %6071
  %6104 = select i1 %6102, i32 %6071, i32 %6094
  %6105 = add nsw i32 %6101, 65535
  %6106 = and i32 %6105, -65536
  %6107 = and i32 %6103, -65536
  %6108 = icmp slt i32 %6107, %6106
  br i1 %6108, label %6219, label %6109

6109:                                             ; preds = %6098
  %6110 = icmp sgt i32 %6106, %6100
  br i1 %6110, label %6111, label %6157

6111:                                             ; preds = %6109
  %6112 = sub nsw i32 %6106, %6100
  %6113 = add nsw i32 %6112, 65535
  %6114 = ashr i32 %6113, 16
  switch i32 %6114, label %6156 [
    i32 1, label %6115
    i32 2, label %6130
  ]

6115:                                             ; preds = %6111
  %6116 = sub i32 %6106, %6101
  %6117 = add nsw i32 %6116, %6112
  %6118 = sdiv i32 %6117, 2
  %6119 = lshr i32 %6118, 8
  %6120 = trunc i32 %6119 to i8
  %6121 = ashr i32 %6100, 16
  %6122 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6123 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6122, i64 14
  %6124 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6123, align 8
  %6125 = call %class.SkBlitter* %6124(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6126 = bitcast %class.SkBlitter* %6125 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6127 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6126, align 8
  %6128 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6127, i64 4
  %6129 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6128, align 8
  call void %6129(%class.SkBlitter* %6125, i32 %6121, i32 %6066, i32 1, i8 zeroext %6120) #13
  br label %6157

6130:                                             ; preds = %6111
  %6131 = sub i32 -65536, %6100
  %6132 = add i32 %6106, %6131
  %6133 = sub i32 %6101, %6100
  %6134 = sub i32 %6133, %6132
  %6135 = ashr i32 %6132, 11
  %6136 = ashr i32 %6074, 11
  %6137 = mul i32 %6135, %6136
  %6138 = mul i32 %6137, %6135
  %6139 = lshr i32 %6138, 8
  %6140 = ashr i32 %6134, 11
  %6141 = mul i32 %6140, %6136
  %6142 = mul i32 %6141, %6140
  %6143 = lshr i32 %6142, 8
  %6144 = ashr i32 %6100, 16
  %6145 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6146 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6145, i64 14
  %6147 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6146, align 8
  %6148 = call %class.SkBlitter* %6147(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6149 = and i32 %6139, 255
  %6150 = and i32 %6143, 255
  %6151 = xor i32 %6150, 255
  %6152 = bitcast %class.SkBlitter* %6148 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6153 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6152, align 8
  %6154 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6153, i64 9
  %6155 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6154, align 8
  call void %6155(%class.SkBlitter* %6148, i32 %6144, i32 %6066, i32 %6149, i32 %6151) #13
  br label %6157

6156:                                             ; preds = %6111
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6066, i32 %6100, i32 %6106, i32 %6101, i32 %6106, i32 %6074, i32 2147483647, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6157

6157:                                             ; preds = %6156, %6130, %6115, %6109
  %6158 = icmp sgt i32 %6107, %6106
  br i1 %6158, label %6159, label %6171

6159:                                             ; preds = %6157
  %6160 = ashr i32 %6105, 16
  %6161 = sub nsw i32 %6107, %6106
  %6162 = ashr exact i32 %6161, 16
  %6163 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6164 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6163, i64 14
  %6165 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6164, align 8
  %6166 = call %class.SkBlitter* %6165(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6167 = bitcast %class.SkBlitter* %6166 to void (%class.SkBlitter*, i32, i32, i32)***
  %6168 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6167, align 8
  %6169 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6168, i64 2
  %6170 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6169, align 8
  call void %6170(%class.SkBlitter* %6166, i32 %6160, i32 %6066, i32 %6162) #13
  br label %6171

6171:                                             ; preds = %6159, %6157
  %6172 = icmp sgt i32 %6104, %6107
  br i1 %6172, label %6173, label %6220

6173:                                             ; preds = %6171
  %6174 = sub nsw i32 %6104, %6107
  %6175 = add nsw i32 %6174, 65535
  %6176 = ashr i32 %6175, 16
  switch i32 %6176, label %6218 [
    i32 1, label %6177
    i32 2, label %6192
  ]

6177:                                             ; preds = %6173
  %6178 = sub i32 %6103, %6107
  %6179 = add nsw i32 %6178, %6174
  %6180 = sdiv i32 %6179, 2
  %6181 = lshr i32 %6180, 8
  %6182 = trunc i32 %6181 to i8
  %6183 = ashr i32 %6103, 16
  %6184 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6185 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6184, i64 14
  %6186 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6185, align 8
  %6187 = call %class.SkBlitter* %6186(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6188 = bitcast %class.SkBlitter* %6187 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6189 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6188, align 8
  %6190 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6189, i64 4
  %6191 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6190, align 8
  call void %6191(%class.SkBlitter* %6187, i32 %6183, i32 %6066, i32 1, i8 zeroext %6182) #13
  br label %6220

6192:                                             ; preds = %6173
  %6193 = sub i32 65536, %6103
  %6194 = add i32 %6193, %6107
  %6195 = sub i32 %6104, %6103
  %6196 = sub i32 %6195, %6194
  %6197 = ashr i32 %6194, 11
  %6198 = ashr i32 %6075, 11
  %6199 = mul i32 %6197, %6198
  %6200 = mul i32 %6199, %6197
  %6201 = lshr i32 %6200, 8
  %6202 = ashr i32 %6196, 11
  %6203 = mul i32 %6202, %6198
  %6204 = mul i32 %6203, %6202
  %6205 = lshr i32 %6204, 8
  %6206 = ashr i32 %6103, 16
  %6207 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6208 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6207, i64 14
  %6209 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6208, align 8
  %6210 = call %class.SkBlitter* %6209(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6211 = and i32 %6201, 255
  %6212 = xor i32 %6211, 255
  %6213 = and i32 %6205, 255
  %6214 = bitcast %class.SkBlitter* %6210 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6215 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6214, align 8
  %6216 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6215, i64 9
  %6217 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6216, align 8
  call void %6217(%class.SkBlitter* %6210, i32 %6206, i32 %6066, i32 %6212, i32 %6213) #13
  br label %6220

6218:                                             ; preds = %6173
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6066, i32 %6107, i32 %6103, i32 %6107, i32 %6104, i32 2147483647, i32 %6075, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6220

6219:                                             ; preds = %6098
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6066, i32 %6100, i32 %6103, i32 %6101, i32 %6104, i32 %6074, i32 %6075, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6220

6220:                                             ; preds = %6219, %6218, %6192, %6177, %6171, %6092, %6060
  %6221 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5408, align 8
  %6222 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6221, i64 19
  %6223 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6222, align 8
  call void %6223(%class.AdditiveBlitter* nonnull %5219, i32 %6061, i32 %6067) #13
  %6224 = icmp sgt i32 %6065, 1
  br i1 %6224, label %6060, label %6225

6225:                                             ; preds = %6220, %5818, %6048
  %6226 = phi i32 [ %5820, %5818 ], [ %5843, %6048 ], [ %6073, %6220 ]
  %6227 = phi i32 [ %5819, %5818 ], [ %5842, %6048 ], [ %6072, %6220 ]
  %6228 = phi i32 [ %5813, %5818 ], [ %5839, %6048 ], [ %6069, %6220 ]
  %6229 = phi i32 [ %5812, %5818 ], [ %5834, %6048 ], [ %6068, %6220 ]
  %6230 = phi i32 [ %5414, %5818 ], [ %5827, %6048 ], [ %6067, %6220 ]
  %6231 = ashr i32 %6230, 16
  %6232 = sub nsw i32 %5605, %6230
  %6233 = sext i32 %5611 to i64
  %6234 = sext i32 %6232 to i64
  %6235 = mul nsw i64 %6234, %6233
  %6236 = lshr i64 %6235, 16
  %6237 = trunc i64 %6236 to i32
  %6238 = add nsw i32 %6229, %6237
  %6239 = icmp slt i32 %6238, %5409
  %6240 = select i1 %6239, i32 %5409, i32 %6238
  %6241 = sext i32 %5617 to i64
  %6242 = mul nsw i64 %6234, %6241
  %6243 = lshr i64 %6242, 16
  %6244 = trunc i64 %6243 to i32
  %6245 = add nsw i32 %6228, %6244
  %6246 = icmp slt i32 %5410, %6245
  %6247 = select i1 %6246, i32 %5410, i32 %6245
  %6248 = and i32 %6240, -4096
  %6249 = and i32 %6247, -4096
  %6250 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 9
  %6251 = load i32, i32* %6250, align 8
  %6252 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 9
  %6253 = load i32, i32* %6252, align 8
  %6254 = mul nsw i32 %6232, 255
  %6255 = add nsw i32 %6254, 32768
  %6256 = lshr i32 %6255, 16
  %6257 = trunc i32 %6256 to i8
  %6258 = icmp sgt i32 %6227, %6226
  br i1 %6258, label %6454, label %6259

6259:                                             ; preds = %6225
  %6260 = icmp sgt i32 %6248, %6249
  br i1 %6260, label %6261, label %6274

6261:                                             ; preds = %6259
  %6262 = icmp sgt i32 %6227, %6248
  %6263 = select i1 %6262, i32 %6248, i32 %6227
  %6264 = select i1 %6262, i32 %6227, i32 %6248
  %6265 = icmp sgt i32 %6226, %6249
  %6266 = select i1 %6265, i32 %6249, i32 %6226
  %6267 = select i1 %6265, i32 %6226, i32 %6249
  %6268 = icmp slt i32 %6263, %6266
  %6269 = select i1 %6268, i32 %6266, i32 %6263
  %6270 = icmp slt i32 %6267, %6264
  %6271 = select i1 %6270, i32 %6267, i32 %6264
  %6272 = add nsw i32 %6269, %6271
  %6273 = sdiv i32 %6272, 2
  br label %6274

6274:                                             ; preds = %6261, %6259
  %6275 = phi i32 [ %6273, %6261 ], [ %6248, %6259 ]
  %6276 = phi i32 [ %6273, %6261 ], [ %6249, %6259 ]
  %6277 = icmp eq i32 %6227, %6226
  %6278 = icmp eq i32 %6275, %6276
  %6279 = and i1 %6277, %6278
  br i1 %6279, label %6454, label %6280

6280:                                             ; preds = %6274
  %6281 = icmp slt i32 %6275, %6227
  %6282 = select i1 %6281, i32 %6275, i32 %6227
  %6283 = select i1 %6281, i32 %6227, i32 %6275
  %6284 = icmp slt i32 %6276, %6226
  %6285 = select i1 %6284, i32 %6276, i32 %6226
  %6286 = select i1 %6284, i32 %6226, i32 %6276
  %6287 = add nsw i32 %6283, 65535
  %6288 = and i32 %6287, -65536
  %6289 = and i32 %6285, -65536
  %6290 = icmp slt i32 %6289, %6288
  br i1 %6290, label %6453, label %6291

6291:                                             ; preds = %6280
  %6292 = icmp sgt i32 %6288, %6282
  br i1 %6292, label %6293, label %6362

6293:                                             ; preds = %6291
  %6294 = sub nsw i32 %6288, %6282
  %6295 = add nsw i32 %6294, 65535
  %6296 = ashr i32 %6295, 16
  switch i32 %6296, label %6361 [
    i32 1, label %6297
    i32 2, label %6323
  ]

6297:                                             ; preds = %6293
  %6298 = sub i32 %6288, %6283
  %6299 = add nsw i32 %6298, %6294
  %6300 = sdiv i32 %6299, 2
  %6301 = lshr i32 %6300, 8
  %6302 = ashr i32 %6282, 16
  %6303 = icmp eq i8 %6257, -1
  br i1 %6303, label %6304, label %6314

6304:                                             ; preds = %6297
  %6305 = trunc i32 %6301 to i8
  %6306 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6307 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6306, i64 14
  %6308 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6307, align 8
  %6309 = call %class.SkBlitter* %6308(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6310 = bitcast %class.SkBlitter* %6309 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6311 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6310, align 8
  %6312 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6311, i64 4
  %6313 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6312, align 8
  call void %6313(%class.SkBlitter* %6309, i32 %6302, i32 %6231, i32 1, i8 zeroext %6305) #13
  br label %6362

6314:                                             ; preds = %6297
  %6315 = and i32 %6301, 255
  %6316 = and i32 %6256, 255
  %6317 = mul nuw nsw i32 %6315, %6316
  %6318 = lshr i32 %6317, 8
  %6319 = trunc i32 %6318 to i8
  %6320 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6321 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6320, i64 16
  %6322 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6321, align 8
  call void %6322(%class.AdditiveBlitter* nonnull %5219, i32 %6302, i32 %6231, i8 zeroext %6319) #13
  br label %6362

6323:                                             ; preds = %6293
  %6324 = sub i32 -65536, %6282
  %6325 = add i32 %6288, %6324
  %6326 = sub i32 %6283, %6282
  %6327 = sub i32 %6326, %6325
  %6328 = ashr i32 %6325, 11
  %6329 = ashr i32 %6251, 11
  %6330 = mul i32 %6328, %6329
  %6331 = mul i32 %6330, %6328
  %6332 = lshr i32 %6331, 8
  %6333 = ashr i32 %6327, 11
  %6334 = mul i32 %6333, %6329
  %6335 = mul i32 %6334, %6333
  %6336 = lshr i32 %6335, 8
  %6337 = trunc i32 %6336 to i8
  %6338 = sub i8 %6257, %6337
  %6339 = ashr i32 %6282, 16
  %6340 = icmp eq i8 %6257, -1
  br i1 %6340, label %6341, label %6352

6341:                                             ; preds = %6323
  %6342 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6343 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6342, i64 14
  %6344 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6343, align 8
  %6345 = call %class.SkBlitter* %6344(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6346 = and i32 %6332, 255
  %6347 = zext i8 %6338 to i32
  %6348 = bitcast %class.SkBlitter* %6345 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6349 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6348, align 8
  %6350 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6349, i64 9
  %6351 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6350, align 8
  call void %6351(%class.SkBlitter* %6345, i32 %6339, i32 %6231, i32 %6346, i32 %6347) #13
  br label %6362

6352:                                             ; preds = %6323
  %6353 = trunc i32 %6332 to i8
  %6354 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6355 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6354, i64 16
  %6356 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6355, align 8
  call void %6356(%class.AdditiveBlitter* nonnull %5219, i32 %6339, i32 %6231, i8 zeroext %6353) #13
  %6357 = add nsw i32 %6339, 1
  %6358 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6359 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6358, i64 16
  %6360 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6359, align 8
  call void %6360(%class.AdditiveBlitter* nonnull %5219, i32 %6357, i32 %6231, i8 zeroext %6338) #13
  br label %6362

6361:                                             ; preds = %6293
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6231, i32 %6282, i32 %6288, i32 %6283, i32 %6288, i32 %6251, i32 2147483647, i8 zeroext %6257, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6362

6362:                                             ; preds = %6361, %6352, %6341, %6314, %6304, %6291
  %6363 = icmp sgt i32 %6289, %6288
  br i1 %6363, label %6364, label %6382

6364:                                             ; preds = %6362
  %6365 = ashr i32 %6287, 16
  %6366 = sub nsw i32 %6289, %6288
  %6367 = ashr exact i32 %6366, 16
  %6368 = icmp eq i8 %6257, -1
  br i1 %6368, label %6369, label %6378

6369:                                             ; preds = %6364
  %6370 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6371 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6370, i64 14
  %6372 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6371, align 8
  %6373 = call %class.SkBlitter* %6372(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6374 = bitcast %class.SkBlitter* %6373 to void (%class.SkBlitter*, i32, i32, i32)***
  %6375 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6374, align 8
  %6376 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6375, i64 2
  %6377 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6376, align 8
  call void %6377(%class.SkBlitter* %6373, i32 %6365, i32 %6231, i32 %6367) #13
  br label %6382

6378:                                             ; preds = %6364
  %6379 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5407, align 8
  %6380 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6379, i64 17
  %6381 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6380, align 8
  call void %6381(%class.AdditiveBlitter* nonnull %5219, i32 %6365, i32 %6231, i32 %6367, i8 zeroext %6257) #13
  br label %6382

6382:                                             ; preds = %6378, %6369, %6362
  %6383 = icmp sgt i32 %6286, %6289
  br i1 %6383, label %6384, label %6454

6384:                                             ; preds = %6382
  %6385 = sub nsw i32 %6286, %6289
  %6386 = add nsw i32 %6385, 65535
  %6387 = ashr i32 %6386, 16
  switch i32 %6387, label %6452 [
    i32 1, label %6388
    i32 2, label %6414
  ]

6388:                                             ; preds = %6384
  %6389 = sub i32 %6285, %6289
  %6390 = add nsw i32 %6389, %6385
  %6391 = sdiv i32 %6390, 2
  %6392 = lshr i32 %6391, 8
  %6393 = ashr i32 %6285, 16
  %6394 = icmp eq i8 %6257, -1
  br i1 %6394, label %6395, label %6405

6395:                                             ; preds = %6388
  %6396 = trunc i32 %6392 to i8
  %6397 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6398 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6397, i64 14
  %6399 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6398, align 8
  %6400 = call %class.SkBlitter* %6399(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6401 = bitcast %class.SkBlitter* %6400 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6402 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6401, align 8
  %6403 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6402, i64 4
  %6404 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6403, align 8
  call void %6404(%class.SkBlitter* %6400, i32 %6393, i32 %6231, i32 1, i8 zeroext %6396) #13
  br label %6454

6405:                                             ; preds = %6388
  %6406 = and i32 %6392, 255
  %6407 = and i32 %6256, 255
  %6408 = mul nuw nsw i32 %6406, %6407
  %6409 = lshr i32 %6408, 8
  %6410 = trunc i32 %6409 to i8
  %6411 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6412 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6411, i64 16
  %6413 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6412, align 8
  call void %6413(%class.AdditiveBlitter* nonnull %5219, i32 %6393, i32 %6231, i8 zeroext %6410) #13
  br label %6454

6414:                                             ; preds = %6384
  %6415 = sub i32 65536, %6285
  %6416 = add i32 %6415, %6289
  %6417 = sub i32 %6286, %6285
  %6418 = sub i32 %6417, %6416
  %6419 = ashr i32 %6416, 11
  %6420 = ashr i32 %6253, 11
  %6421 = mul i32 %6419, %6420
  %6422 = mul i32 %6421, %6419
  %6423 = lshr i32 %6422, 8
  %6424 = trunc i32 %6423 to i8
  %6425 = sub i8 %6257, %6424
  %6426 = ashr i32 %6418, 11
  %6427 = mul i32 %6426, %6420
  %6428 = mul i32 %6427, %6426
  %6429 = lshr i32 %6428, 8
  %6430 = ashr i32 %6285, 16
  %6431 = icmp eq i8 %6257, -1
  br i1 %6431, label %6432, label %6443

6432:                                             ; preds = %6414
  %6433 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5406, align 8
  %6434 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6433, i64 14
  %6435 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6434, align 8
  %6436 = call %class.SkBlitter* %6435(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6437 = zext i8 %6425 to i32
  %6438 = and i32 %6429, 255
  %6439 = bitcast %class.SkBlitter* %6436 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6440 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6439, align 8
  %6441 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6440, i64 9
  %6442 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6441, align 8
  call void %6442(%class.SkBlitter* %6436, i32 %6430, i32 %6231, i32 %6437, i32 %6438) #13
  br label %6454

6443:                                             ; preds = %6414
  %6444 = trunc i32 %6429 to i8
  %6445 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6446 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6445, i64 16
  %6447 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6446, align 8
  call void %6447(%class.AdditiveBlitter* nonnull %5219, i32 %6430, i32 %6231, i8 zeroext %6425) #13
  %6448 = add nsw i32 %6430, 1
  %6449 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5405, align 8
  %6450 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6449, i64 16
  %6451 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6450, align 8
  call void %6451(%class.AdditiveBlitter* nonnull %5219, i32 %6448, i32 %6231, i8 zeroext %6444) #13
  br label %6454

6452:                                             ; preds = %6384
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6231, i32 %6289, i32 %6285, i32 %6289, i32 %6286, i32 2147483647, i32 %6253, i8 zeroext %6257, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6454

6453:                                             ; preds = %6280
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6231, i32 %6282, i32 %6285, i32 %6283, i32 %6286, i32 %6251, i32 %6253, i8 zeroext %6257, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #13
  br label %6454

6454:                                             ; preds = %6453, %6452, %6443, %6432, %6405, %6395, %6382, %6274, %6225
  %6455 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5408, align 8
  %6456 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6455, i64 19
  %6457 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6456, align 8
  call void %6457(%class.AdditiveBlitter* nonnull %5219, i32 %6230, i32 %5605) #13
  %6458 = add nsw i32 %6240, -2048
  %6459 = add nsw i32 %6247, -2048
  br label %6460

6460:                                             ; preds = %6454, %5796, %5794, %5745, %5735, %5717
  %6461 = phi i32 [ %6459, %6454 ], [ %5615, %5735 ], [ %5615, %5717 ], [ %5615, %5794 ], [ %5615, %5796 ], [ %5615, %5745 ]
  %6462 = phi i32 [ %6458, %6454 ], [ %5609, %5735 ], [ %5609, %5717 ], [ %5609, %5794 ], [ %5609, %5796 ], [ %5609, %5745 ]
  store i32 %6462, i32* %5606, align 8
  store i32 %6461, i32* %5612, align 8
  %6463 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5559, i64 0, i32 6
  store i32 %5605, i32* %6463, align 4
  %6464 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5557, i64 0, i32 6
  store i32 %5605, i32* %6464, align 4
  br label %5411

6465:                                             ; preds = %5384, %5376
  %6466 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5358, align 8
  %6467 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6466, i64 0, i32 8
  %6468 = load i32, i32* %6467, align 4
  %6469 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5348, align 8
  %6470 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6469, i64 0, i32 7
  %6471 = load i32, i32* %6470, align 8
  %6472 = sub nsw i32 %6468, %6471
  %6473 = ashr i32 %6472, 16
  %6474 = shl nsw i32 %6473, 2
  %6475 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %0) #13
  %6476 = sub nsw i32 %5378, %5377
  %6477 = load i8, i8* %77, align 2
  store i32 %5379, i32* %5355, align 8
  store i32 %5379, i32* %5352, align 8
  store i32 %5380, i32* %5366, align 8
  store i32 %5380, i32* %5363, align 8
  %6478 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5348, align 8
  %6479 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6478, i64 0, i32 7
  %6480 = shl i32 %5377, 16
  %6481 = load i32, i32* %6479, align 4
  %6482 = icmp slt i32 %6481, %6480
  %6483 = select i1 %6482, i32 %6480, i32 %6481
  br label %6484

6484:                                             ; preds = %6514, %6465
  %6485 = phi i32 [ %6524, %6514 ], [ %6481, %6465 ]
  %6486 = phi %struct.SkAnalyticEdge* [ %6522, %6514 ], [ %6478, %6465 ]
  %6487 = phi i32 [ %6520, %6514 ], [ 2147483647, %6465 ]
  %6488 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 6
  %6489 = load i32, i32* %6488, align 4
  %6490 = add nsw i32 %6489, 65536
  %6491 = icmp eq i32 %6490, %6483
  br i1 %6491, label %6492, label %6498

6492:                                             ; preds = %6484
  %6493 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 3
  %6494 = load i32, i32* %6493, align 8
  %6495 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 4
  %6496 = load i32, i32* %6495, align 4
  %6497 = add nsw i32 %6496, %6494
  store i32 %6497, i32* %6493, align 8
  br label %6513

6498:                                             ; preds = %6484
  %6499 = icmp eq i32 %6489, %6483
  br i1 %6499, label %6514, label %6500

6500:                                             ; preds = %6498
  %6501 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 5
  %6502 = load i32, i32* %6501, align 8
  %6503 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 4
  %6504 = load i32, i32* %6503, align 4
  %6505 = sub nsw i32 %6483, %6485
  %6506 = sext i32 %6504 to i64
  %6507 = sext i32 %6505 to i64
  %6508 = mul nsw i64 %6506, %6507
  %6509 = lshr i64 %6508, 16
  %6510 = trunc i64 %6509 to i32
  %6511 = add nsw i32 %6502, %6510
  %6512 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 3
  store i32 %6511, i32* %6512, align 8
  br label %6513

6513:                                             ; preds = %6492, %6500
  store i32 %6483, i32* %6488, align 4
  br label %6514

6514:                                             ; preds = %6513, %6498
  %6515 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 8
  %6516 = load i32, i32* %6515, align 4
  %6517 = icmp sgt i32 %6516, %6483
  %6518 = icmp sgt i32 %6487, %6516
  %6519 = and i1 %6517, %6518
  %6520 = select i1 %6519, i32 %6516, i32 %6487
  %6521 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6486, i64 0, i32 0
  %6522 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6521, align 8
  %6523 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6522, i64 0, i32 7
  %6524 = load i32, i32* %6523, align 8
  %6525 = icmp slt i32 %6483, %6524
  br i1 %6525, label %6526, label %6484

6526:                                             ; preds = %6514
  %6527 = add nsw i32 %6474, 4
  %6528 = shl nsw i32 %6476, 1
  %6529 = and i8 %6477, 3
  %6530 = icmp sgt i32 %5231, %6527
  %6531 = icmp sgt i32 %6475, %6528
  %6532 = zext i8 %6529 to i32
  %6533 = icmp sgt i32 %6520, %6524
  %6534 = select i1 %6533, i32 %6524, i32 %6520
  %6535 = and i32 %6532, 1
  %6536 = icmp eq i32 %6535, 0
  %6537 = select i1 %6536, i32 -1, i32 1
  %6538 = and i32 %6532, 2
  %6539 = icmp ne i32 %6538, 0
  %6540 = xor i1 %6539, true
  %6541 = icmp sge i32 %6480, %6481
  %6542 = or i1 %6541, %6540
  br i1 %6542, label %6543, label %6545

6543:                                             ; preds = %6526
  %6544 = ashr exact i32 %5379, 16
  br label %6590

6545:                                             ; preds = %6526
  %6546 = sub nsw i32 %5380, %5379
  %6547 = ashr exact i32 %6546, 16
  %6548 = ashr i32 %6483, 16
  %6549 = icmp eq i32 %6548, %5377
  br i1 %6549, label %6550, label %6552

6550:                                             ; preds = %6545
  %6551 = ashr exact i32 %5379, 16
  br label %6565

6552:                                             ; preds = %6545
  %6553 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6554 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6553, align 8
  %6555 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6554, i64 14
  %6556 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6555, align 8
  %6557 = call %class.SkBlitter* %6556(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6558 = ashr exact i32 %5379, 16
  %6559 = sub nsw i32 %6548, %5377
  %6560 = bitcast %class.SkBlitter* %6557 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6561 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6560, align 8
  %6562 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6561, i64 5
  %6563 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6562, align 8
  call void %6563(%class.SkBlitter* %6557, i32 %6558, i32 %5377, i32 %6547, i32 %6559) #13
  %6564 = and i32 %6483, -65536
  br label %6565

6565:                                             ; preds = %6550, %6552
  %6566 = phi i32 [ %6551, %6550 ], [ %6558, %6552 ]
  %6567 = phi i32 [ %6480, %6550 ], [ %6564, %6552 ]
  %6568 = phi i32 [ %5377, %6550 ], [ %6548, %6552 ]
  %6569 = sub nsw i32 %6483, %6567
  %6570 = mul nsw i32 %6569, 255
  %6571 = add nsw i32 %6570, 32768
  %6572 = lshr i32 %6571, 16
  %6573 = trunc i32 %6572 to i8
  %6574 = icmp eq i8 %6573, -1
  br i1 %6574, label %6575, label %6585

6575:                                             ; preds = %6565
  %6576 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6577 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6576, align 8
  %6578 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6577, i64 14
  %6579 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6578, align 8
  %6580 = call %class.SkBlitter* %6579(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6581 = bitcast %class.SkBlitter* %6580 to void (%class.SkBlitter*, i32, i32, i32)***
  %6582 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6581, align 8
  %6583 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6582, i64 2
  %6584 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6583, align 8
  call void %6584(%class.SkBlitter* %6580, i32 %6566, i32 %6568, i32 %6547) #13
  br label %6590

6585:                                             ; preds = %6565
  %6586 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %6587 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6586, align 8
  %6588 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6587, i64 17
  %6589 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6588, align 8
  call void %6589(%class.AdditiveBlitter* nonnull %5219, i32 %6566, i32 %6568, i32 %6547, i8 zeroext %6573) #13
  br label %6590

6590:                                             ; preds = %6585, %6575, %6543
  %6591 = phi i32 [ %6544, %6543 ], [ %6566, %6585 ], [ %6566, %6575 ]
  %6592 = bitcast %class.SafeRLEAdditiveBlitter* %22 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6593 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %6594 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %6595 = xor i1 %6530, true
  %6596 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 10
  %6597 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 11
  %6598 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 12
  %6599 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 6
  %6600 = bitcast %class.SafeRLEAdditiveBlitter* %22 to void (%class.RunBasedAdditiveBlitter*, i32, i32)***
  %6601 = shl i32 %5378, 16
  br label %6602

6602:                                             ; preds = %7508, %6590
  %6603 = phi i32 [ %6534, %6590 ], [ %7509, %7508 ]
  %6604 = phi i32 [ %6483, %6590 ], [ %6618, %7508 ]
  %6605 = add nsw i32 %6604, 65536
  %6606 = and i32 %6605, -65536
  %6607 = icmp slt i32 %6606, %6603
  %6608 = select i1 %6607, i32 %6606, i32 %6603
  %6609 = and i32 %6608, 65535
  %6610 = icmp eq i32 %6609, 0
  %6611 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5348, align 8
  %6612 = sub nsw i32 %6608, %6604
  %6613 = and i32 %6612, 16384
  %6614 = icmp eq i32 %6613, 0
  %6615 = add nsw i32 %6604, 16384
  %6616 = lshr i32 %6612, 15
  %6617 = and i32 %6616, 1
  %6618 = select i1 %6614, i32 %6608, i32 %6615
  %6619 = select i1 %6614, i32 %6617, i32 2
  %6620 = sub nsw i32 %6618, %6604
  %6621 = mul nsw i32 %6620, 255
  %6622 = add nsw i32 %6621, 32768
  %6623 = lshr i32 %6622, 16
  %6624 = trunc i32 %6623 to i8
  %6625 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6611, i64 0, i32 7
  %6626 = load i32, i32* %6625, align 8
  %6627 = icmp sgt i32 %6626, %6604
  br i1 %6627, label %7118, label %6628

6628:                                             ; preds = %6602
  %6629 = load i32, i32* %5352, align 8
  %6630 = ashr i32 %6604, 16
  %6631 = icmp ne i8 %6624, -1
  %6632 = and i32 %6623, 255
  %6633 = add nsw i32 %6618, 16384
  %6634 = or i1 %6631, %4
  br label %6635

6635:                                             ; preds = %7110, %6628
  %6636 = phi %struct.SkAnalyticEdge* [ %6611, %6628 ], [ %6999, %7110 ]
  %6637 = phi i32 [ %6591, %6628 ], [ %6997, %7110 ]
  %6638 = phi i8 [ 0, %6628 ], [ %6996, %7110 ]
  %6639 = phi i32 [ 0, %6628 ], [ %6995, %7110 ]
  %6640 = phi i32 [ %5379, %6628 ], [ %6994, %7110 ]
  %6641 = phi %struct.SkAnalyticEdge* [ %18, %6628 ], [ %6993, %7110 ]
  %6642 = phi i32 [ %6629, %6628 ], [ %7112, %7110 ]
  %6643 = phi i1 [ %6539, %6628 ], [ %6654, %7110 ]
  %6644 = phi i32 [ 0, %6628 ], [ %6650, %7110 ]
  %6645 = phi i32 [ 2147483647, %6628 ], [ %7111, %7110 ]
  %6646 = bitcast %struct.SkAnalyticEdge* %6636 to %struct.SkAnalyticQuadraticEdge*
  %6647 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 16
  %6648 = load i8, i8* %6647, align 1
  %6649 = sext i8 %6648 to i32
  %6650 = add nsw i32 %6644, %6649
  %6651 = and i32 %6650, %6537
  %6652 = icmp eq i32 %6651, 0
  %6653 = xor i1 %6652, true
  %6654 = xor i1 %6539, %6653
  %6655 = xor i1 %6643, true
  %6656 = and i1 %6654, %6655
  %6657 = xor i1 %6539, %6652
  %6658 = and i1 %6643, %6657
  %6659 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 8
  %6660 = load i32, i32* %6659, align 4
  %6661 = icmp eq i32 %6660, %6618
  br i1 %6530, label %6662, label %6680

6662:                                             ; preds = %6635
  %6663 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 2
  %6664 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6663, align 8
  %6665 = icmp eq %struct.SkAnalyticEdge* %6664, null
  %6666 = or i1 %6656, %6665
  br i1 %6666, label %6672, label %6667

6667:                                             ; preds = %6662
  %6668 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %6669 = load i32, i32* %6668, align 8
  %6670 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6664, i64 0, i32 3
  %6671 = load i32, i32* %6670, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %6636, i32 %6604, i32 %6669, i32 %6671, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  br label %6672

6672:                                             ; preds = %6667, %6662
  %6673 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 2
  %6674 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6673, align 8
  %6675 = icmp ne %struct.SkAnalyticEdge* %6674, %6636
  %6676 = or i1 %6658, %6675
  br i1 %6676, label %6680, label %6677

6677:                                             ; preds = %6672
  %6678 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %6679 = load i32, i32* %6678, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %6641, i32 %6604, i32 %6640, i32 %6679, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  br label %6680

6680:                                             ; preds = %6677, %6672, %6635
  br i1 %6658, label %6681, label %6968

6681:                                             ; preds = %6680
  br i1 %6530, label %6682, label %6721

6682:                                             ; preds = %6681
  %6683 = and i8 %6638, 1
  %6684 = icmp ne i8 %6683, 0
  %6685 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 2
  %6686 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6685, align 8
  %6687 = icmp eq %struct.SkAnalyticEdge* %6686, null
  %6688 = icmp eq %struct.SkAnalyticEdge* %6686, %6636
  %6689 = or i1 %6687, %6688
  br i1 %6689, label %6694, label %6690

6690:                                             ; preds = %6682
  %6691 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6686, i64 0, i32 3
  %6692 = load i32, i32* %6691, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %6641, i32 %6604, i32 %6640, i32 %6692, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  %6693 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6685, align 8
  br label %6694

6694:                                             ; preds = %6690, %6682
  %6695 = phi %struct.SkAnalyticEdge* [ %6686, %6682 ], [ %6693, %6690 ]
  %6696 = icmp eq %struct.SkAnalyticEdge* %6695, null
  br i1 %6696, label %6697, label %6708

6697:                                             ; preds = %6694
  %6698 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 10
  store i32 %6640, i32* %6698, align 4
  %6699 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 11
  store i32 %6604, i32* %6699, align 8
  %6700 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 12
  store i32 %6639, i32* %6700, align 4
  %6701 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %6702 = load i32, i32* %6701, align 8
  %6703 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 9
  %6704 = load i32, i32* %6703, align 8
  %6705 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 10
  store i32 %6702, i32* %6705, align 4
  %6706 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 11
  store i32 %6604, i32* %6706, align 8
  %6707 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 12
  store i32 %6704, i32* %6707, align 4
  store %struct.SkAnalyticEdge* %6636, %struct.SkAnalyticEdge** %6685, align 8
  br label %6708

6708:                                             ; preds = %6697, %6694
  %6709 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 6
  store i32 %6618, i32* %6709, align 4
  %6710 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 4
  %6711 = load i32, i32* %6710, align 4
  %6712 = ashr i32 %6711, %6619
  %6713 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %6714 = load i32, i32* %6713, align 8
  %6715 = add nsw i32 %6714, %6712
  store i32 %6715, i32* %6713, align 8
  %6716 = or i1 %6610, %6684
  %6717 = or i1 %6716, %6661
  br i1 %6717, label %6718, label %6992

6718:                                             ; preds = %6708
  %6719 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 3
  %6720 = load i32, i32* %6719, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %6641, i32 %6618, i32 %6720, i32 %6715, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  br label %6992

6721:                                             ; preds = %6681
  %6722 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %6723 = load i32, i32* %6722, align 8
  %6724 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 6
  store i32 %6618, i32* %6724, align 4
  %6725 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 4
  %6726 = load i32, i32* %6725, align 4
  %6727 = ashr i32 %6726, %6619
  %6728 = add nsw i32 %6727, %6723
  store i32 %6728, i32* %6722, align 8
  %6729 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6641, i64 0, i32 3
  %6730 = load i32, i32* %6729, align 4
  %6731 = icmp sgt i32 %6730, %5379
  %6732 = select i1 %6731, i32 %6730, i32 %5379
  %6733 = icmp slt i32 %6723, %5380
  %6734 = select i1 %6733, i32 %6723, i32 %5380
  %6735 = icmp slt i32 %6728, %5380
  %6736 = select i1 %6735, i32 %6728, i32 %5380
  %6737 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 9
  %6738 = load i32, i32* %6737, align 8
  br i1 %6634, label %6766, label %6739

6739:                                             ; preds = %6721
  %6740 = ashr i32 %6640, 16
  %6741 = icmp slt i32 %6740, %6637
  %6742 = ashr i32 %6730, 16
  %6743 = icmp slt i32 %6742, %6637
  %6744 = or i1 %6741, %6743
  br i1 %6744, label %6766, label %6745

6745:                                             ; preds = %6739
  %6746 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 0
  %6747 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6746, align 8
  %6748 = icmp ne %struct.SkAnalyticEdge* %6747, null
  %6749 = icmp ne %struct.SkAnalyticEdge* %6636, null
  %6750 = and i1 %6749, %6748
  br i1 %6750, label %6751, label %6766

6751:                                             ; preds = %6745
  %6752 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6747, i64 0, i32 7
  %6753 = load i32, i32* %6752, align 8
  %6754 = icmp slt i32 %6753, %6618
  br i1 %6754, label %6755, label %6766

6755:                                             ; preds = %6751
  %6756 = add nsw i32 %6728, 65536
  %6757 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6747, i64 0, i32 3
  %6758 = load i32, i32* %6757, align 8
  %6759 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6747, i64 0, i32 4
  %6760 = load i32, i32* %6759, align 4
  %6761 = icmp slt i32 %6760, 0
  %6762 = sub nsw i32 0, %6760
  %6763 = select i1 %6761, i32 %6762, i32 %6760
  %6764 = sub nsw i32 %6758, %6763
  %6765 = icmp sge i32 %6756, %6764
  br label %6766

6766:                                             ; preds = %6755, %6751, %6745, %6739, %6721
  %6767 = phi i1 [ %4, %6721 ], [ true, %6739 ], [ false, %6751 ], [ false, %6745 ], [ %6765, %6755 ]
  %6768 = icmp sgt i32 %6640, %6734
  br i1 %6768, label %6962, label %6769

6769:                                             ; preds = %6766
  %6770 = icmp sgt i32 %6732, %6736
  br i1 %6770, label %6771, label %6784

6771:                                             ; preds = %6769
  %6772 = icmp sgt i32 %6640, %6732
  %6773 = select i1 %6772, i32 %6732, i32 %6640
  %6774 = select i1 %6772, i32 %6640, i32 %6732
  %6775 = icmp sgt i32 %6734, %6736
  %6776 = select i1 %6775, i32 %6736, i32 %6734
  %6777 = select i1 %6775, i32 %6734, i32 %6736
  %6778 = icmp slt i32 %6773, %6776
  %6779 = select i1 %6778, i32 %6776, i32 %6773
  %6780 = icmp slt i32 %6777, %6774
  %6781 = select i1 %6780, i32 %6777, i32 %6774
  %6782 = add nsw i32 %6779, %6781
  %6783 = sdiv i32 %6782, 2
  br label %6784

6784:                                             ; preds = %6771, %6769
  %6785 = phi i32 [ %6783, %6771 ], [ %6732, %6769 ]
  %6786 = phi i32 [ %6783, %6771 ], [ %6736, %6769 ]
  %6787 = icmp eq i32 %6640, %6734
  %6788 = icmp eq i32 %6785, %6786
  %6789 = and i1 %6787, %6788
  br i1 %6789, label %6962, label %6790

6790:                                             ; preds = %6784
  %6791 = icmp slt i32 %6785, %6640
  %6792 = select i1 %6791, i32 %6785, i32 %6640
  %6793 = select i1 %6791, i32 %6640, i32 %6785
  %6794 = icmp slt i32 %6786, %6734
  %6795 = select i1 %6794, i32 %6786, i32 %6734
  %6796 = select i1 %6794, i32 %6734, i32 %6786
  %6797 = add nsw i32 %6793, 65535
  %6798 = and i32 %6797, -65536
  %6799 = and i32 %6795, -65536
  %6800 = icmp slt i32 %6799, %6798
  br i1 %6800, label %6961, label %6801

6801:                                             ; preds = %6790
  %6802 = icmp sgt i32 %6798, %6792
  br i1 %6802, label %6803, label %6871

6803:                                             ; preds = %6801
  %6804 = sub nsw i32 %6798, %6792
  %6805 = add nsw i32 %6804, 65535
  %6806 = ashr i32 %6805, 16
  switch i32 %6806, label %6870 [
    i32 1, label %6807
    i32 2, label %6832
  ]

6807:                                             ; preds = %6803
  %6808 = sub i32 %6798, %6793
  %6809 = add nsw i32 %6808, %6804
  %6810 = sdiv i32 %6809, 2
  %6811 = lshr i32 %6810, 8
  %6812 = ashr i32 %6792, 16
  %6813 = or i1 %6631, %6767
  br i1 %6813, label %6824, label %6814

6814:                                             ; preds = %6807
  %6815 = trunc i32 %6811 to i8
  %6816 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %6817 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6816, i64 14
  %6818 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6817, align 8
  %6819 = call %class.SkBlitter* %6818(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6820 = bitcast %class.SkBlitter* %6819 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6821 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6820, align 8
  %6822 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6821, i64 4
  %6823 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6822, align 8
  call void %6823(%class.SkBlitter* %6819, i32 %6812, i32 %6630, i32 1, i8 zeroext %6815) #13
  br label %6871

6824:                                             ; preds = %6807
  %6825 = and i32 %6811, 255
  %6826 = mul nuw nsw i32 %6825, %6632
  %6827 = lshr i32 %6826, 8
  %6828 = trunc i32 %6827 to i8
  %6829 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6830 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6829, i64 16
  %6831 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6830, align 8
  call void %6831(%class.AdditiveBlitter* nonnull %5219, i32 %6812, i32 %6630, i8 zeroext %6828) #13
  br label %6871

6832:                                             ; preds = %6803
  %6833 = sub i32 -65536, %6792
  %6834 = add i32 %6798, %6833
  %6835 = sub i32 %6793, %6792
  %6836 = sub i32 %6835, %6834
  %6837 = ashr i32 %6834, 11
  %6838 = ashr i32 %6639, 11
  %6839 = mul i32 %6837, %6838
  %6840 = mul i32 %6839, %6837
  %6841 = lshr i32 %6840, 8
  %6842 = ashr i32 %6836, 11
  %6843 = mul i32 %6842, %6838
  %6844 = mul i32 %6843, %6842
  %6845 = lshr i32 %6844, 8
  %6846 = trunc i32 %6845 to i8
  %6847 = sub i8 %6624, %6846
  %6848 = ashr i32 %6792, 16
  %6849 = or i1 %6631, %6767
  br i1 %6849, label %6861, label %6850

6850:                                             ; preds = %6832
  %6851 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %6852 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6851, i64 14
  %6853 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6852, align 8
  %6854 = call %class.SkBlitter* %6853(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6855 = and i32 %6841, 255
  %6856 = zext i8 %6847 to i32
  %6857 = bitcast %class.SkBlitter* %6854 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6858 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6857, align 8
  %6859 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6858, i64 9
  %6860 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6859, align 8
  call void %6860(%class.SkBlitter* %6854, i32 %6848, i32 %6630, i32 %6855, i32 %6856) #13
  br label %6871

6861:                                             ; preds = %6832
  %6862 = trunc i32 %6841 to i8
  %6863 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6864 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6863, i64 16
  %6865 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6864, align 8
  call void %6865(%class.AdditiveBlitter* nonnull %5219, i32 %6848, i32 %6630, i8 zeroext %6862) #13
  %6866 = add nsw i32 %6848, 1
  %6867 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6868 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6867, i64 16
  %6869 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6868, align 8
  call void %6869(%class.AdditiveBlitter* nonnull %5219, i32 %6866, i32 %6630, i8 zeroext %6847) #13
  br label %6871

6870:                                             ; preds = %6803
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6630, i32 %6792, i32 %6798, i32 %6793, i32 %6798, i32 %6639, i32 2147483647, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %6767, i1 zeroext true) #13
  br label %6871

6871:                                             ; preds = %6870, %6861, %6850, %6824, %6814, %6801
  %6872 = icmp sgt i32 %6799, %6798
  br i1 %6872, label %6873, label %6891

6873:                                             ; preds = %6871
  %6874 = ashr i32 %6797, 16
  %6875 = sub nsw i32 %6799, %6798
  %6876 = ashr exact i32 %6875, 16
  %6877 = or i1 %6631, %6767
  br i1 %6877, label %6887, label %6878

6878:                                             ; preds = %6873
  %6879 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %6880 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6879, i64 14
  %6881 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6880, align 8
  %6882 = call %class.SkBlitter* %6881(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6883 = bitcast %class.SkBlitter* %6882 to void (%class.SkBlitter*, i32, i32, i32)***
  %6884 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6883, align 8
  %6885 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6884, i64 2
  %6886 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6885, align 8
  call void %6886(%class.SkBlitter* %6882, i32 %6874, i32 %6630, i32 %6876) #13
  br label %6891

6887:                                             ; preds = %6873
  %6888 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6594, align 8
  %6889 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6888, i64 17
  %6890 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6889, align 8
  call void %6890(%class.AdditiveBlitter* nonnull %5219, i32 %6874, i32 %6630, i32 %6876, i8 zeroext %6624) #13
  br label %6891

6891:                                             ; preds = %6887, %6878, %6871
  %6892 = icmp sgt i32 %6796, %6799
  br i1 %6892, label %6893, label %6962

6893:                                             ; preds = %6891
  %6894 = sub nsw i32 %6796, %6799
  %6895 = add nsw i32 %6894, 65535
  %6896 = ashr i32 %6895, 16
  switch i32 %6896, label %6960 [
    i32 1, label %6897
    i32 2, label %6922
  ]

6897:                                             ; preds = %6893
  %6898 = sub i32 %6795, %6799
  %6899 = add nsw i32 %6898, %6894
  %6900 = sdiv i32 %6899, 2
  %6901 = lshr i32 %6900, 8
  %6902 = ashr i32 %6795, 16
  %6903 = or i1 %6631, %6767
  br i1 %6903, label %6914, label %6904

6904:                                             ; preds = %6897
  %6905 = trunc i32 %6901 to i8
  %6906 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %6907 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6906, i64 14
  %6908 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6907, align 8
  %6909 = call %class.SkBlitter* %6908(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6910 = bitcast %class.SkBlitter* %6909 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6911 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6910, align 8
  %6912 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6911, i64 4
  %6913 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6912, align 8
  call void %6913(%class.SkBlitter* %6909, i32 %6902, i32 %6630, i32 1, i8 zeroext %6905) #13
  br label %6962

6914:                                             ; preds = %6897
  %6915 = and i32 %6901, 255
  %6916 = mul nuw nsw i32 %6915, %6632
  %6917 = lshr i32 %6916, 8
  %6918 = trunc i32 %6917 to i8
  %6919 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6920 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6919, i64 16
  %6921 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6920, align 8
  call void %6921(%class.AdditiveBlitter* nonnull %5219, i32 %6902, i32 %6630, i8 zeroext %6918) #13
  br label %6962

6922:                                             ; preds = %6893
  %6923 = sub i32 65536, %6795
  %6924 = add i32 %6923, %6799
  %6925 = sub i32 %6796, %6795
  %6926 = sub i32 %6925, %6924
  %6927 = ashr i32 %6924, 11
  %6928 = ashr i32 %6738, 11
  %6929 = mul i32 %6927, %6928
  %6930 = mul i32 %6929, %6927
  %6931 = lshr i32 %6930, 8
  %6932 = trunc i32 %6931 to i8
  %6933 = sub i8 %6624, %6932
  %6934 = ashr i32 %6926, 11
  %6935 = mul i32 %6934, %6928
  %6936 = mul i32 %6935, %6934
  %6937 = lshr i32 %6936, 8
  %6938 = ashr i32 %6795, 16
  %6939 = or i1 %6631, %6767
  br i1 %6939, label %6951, label %6940

6940:                                             ; preds = %6922
  %6941 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %6942 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6941, i64 14
  %6943 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6942, align 8
  %6944 = call %class.SkBlitter* %6943(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %6945 = zext i8 %6933 to i32
  %6946 = and i32 %6937, 255
  %6947 = bitcast %class.SkBlitter* %6944 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6948 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6947, align 8
  %6949 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6948, i64 9
  %6950 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6949, align 8
  call void %6950(%class.SkBlitter* %6944, i32 %6938, i32 %6630, i32 %6945, i32 %6946) #13
  br label %6962

6951:                                             ; preds = %6922
  %6952 = trunc i32 %6937 to i8
  %6953 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6954 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6953, i64 16
  %6955 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6954, align 8
  call void %6955(%class.AdditiveBlitter* nonnull %5219, i32 %6938, i32 %6630, i8 zeroext %6933) #13
  %6956 = add nsw i32 %6938, 1
  %6957 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %6958 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6957, i64 16
  %6959 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6958, align 8
  call void %6959(%class.AdditiveBlitter* nonnull %5219, i32 %6956, i32 %6630, i8 zeroext %6952) #13
  br label %6962

6960:                                             ; preds = %6893
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6630, i32 %6799, i32 %6795, i32 %6799, i32 %6796, i32 2147483647, i32 %6738, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %6767, i1 zeroext true) #13
  br label %6962

6961:                                             ; preds = %6790
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %6630, i32 %6792, i32 %6795, i32 %6793, i32 %6796, i32 %6639, i32 %6738, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %6767, i1 zeroext true) #13
  br label %6962

6962:                                             ; preds = %6961, %6960, %6951, %6940, %6914, %6904, %6891, %6784, %6766
  %6963 = load i32, i32* %6722, align 4
  %6964 = icmp slt i32 %6734, %6963
  %6965 = select i1 %6964, i32 %6963, i32 %6734
  %6966 = add nsw i32 %6965, 65535
  %6967 = ashr i32 %6966, 16
  br label %6992

6968:                                             ; preds = %6680
  %6969 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  br i1 %6656, label %6972, label %6970

6970:                                             ; preds = %6968
  %6971 = load i32, i32* %6969, align 8
  br label %6981

6972:                                             ; preds = %6968
  %6973 = load i32, i32* %6969, align 4
  %6974 = icmp slt i32 %6973, %5379
  %6975 = select i1 %6974, i32 %5379, i32 %6973
  %6976 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 9
  %6977 = load i32, i32* %6976, align 8
  %6978 = load i32, i32* %6659, align 4
  %6979 = icmp eq i32 %6978, %6618
  %6980 = zext i1 %6979 to i8
  br label %6981

6981:                                             ; preds = %6972, %6970
  %6982 = phi i32 [ %6973, %6972 ], [ %6971, %6970 ]
  %6983 = phi %struct.SkAnalyticEdge* [ %6636, %6972 ], [ %6641, %6970 ]
  %6984 = phi i32 [ %6975, %6972 ], [ %6640, %6970 ]
  %6985 = phi i32 [ %6977, %6972 ], [ %6639, %6970 ]
  %6986 = phi i8 [ %6980, %6972 ], [ %6638, %6970 ]
  %6987 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 6
  store i32 %6618, i32* %6987, align 4
  %6988 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 4
  %6989 = load i32, i32* %6988, align 4
  %6990 = ashr i32 %6989, %6619
  %6991 = add nsw i32 %6990, %6982
  store i32 %6991, i32* %6969, align 8
  br label %6992

6992:                                             ; preds = %6981, %6962, %6718, %6708
  %6993 = phi %struct.SkAnalyticEdge* [ %6641, %6962 ], [ %6983, %6981 ], [ %6641, %6708 ], [ %6641, %6718 ]
  %6994 = phi i32 [ %6640, %6962 ], [ %6984, %6981 ], [ %6640, %6708 ], [ %6640, %6718 ]
  %6995 = phi i32 [ %6639, %6962 ], [ %6985, %6981 ], [ %6639, %6708 ], [ %6639, %6718 ]
  %6996 = phi i8 [ %6638, %6962 ], [ %6986, %6981 ], [ %6638, %6708 ], [ %6638, %6718 ]
  %6997 = phi i32 [ %6967, %6962 ], [ %6637, %6981 ], [ %6637, %6708 ], [ %6637, %6718 ]
  %6998 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 0
  %6999 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6998, align 8
  %7000 = load i32, i32* %6659, align 4
  %7001 = icmp sgt i32 %7000, %6618
  br i1 %7001, label %7031, label %7002

7002:                                             ; preds = %6992
  %7003 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 13
  %7004 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %7005 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 2
  %7006 = bitcast %struct.SkAnalyticEdge* %7005 to i32*
  %7007 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 6
  %7008 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %6646, i64 0, i32 3
  %7009 = bitcast %struct.SkAnalyticEdge* %6636 to %struct.SkAnalyticCubicEdge*
  %7010 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 1, i32 7
  %7011 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 2, i32 1
  %7012 = bitcast %struct.SkAnalyticEdge** %7011 to i32*
  br label %7013

7013:                                             ; preds = %7026, %7002
  %7014 = load i8, i8* %7003, align 8
  %7015 = icmp slt i8 %7014, 0
  br i1 %7015, label %7016, label %7020

7016:                                             ; preds = %7013
  %7017 = load i32, i32* %7004, align 8
  store i32 %7017, i32* %7010, align 8
  %7018 = load i32, i32* %7007, align 4
  store i32 %7018, i32* %7012, align 8
  %7019 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* %7009, i1 zeroext true) #13
  br i1 %7019, label %7026, label %7029

7020:                                             ; preds = %7013
  %7021 = icmp eq i8 %7014, 0
  br i1 %7021, label %7029, label %7022

7022:                                             ; preds = %7020
  %7023 = load i32, i32* %7004, align 8
  store i32 %7023, i32* %7006, align 8
  %7024 = load i32, i32* %7007, align 4
  store i32 %7024, i32* %7008, align 4
  %7025 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* %6646) #13
  br i1 %7025, label %7026, label %7029

7026:                                             ; preds = %7022, %7016
  %7027 = load i32, i32* %6659, align 4
  %7028 = icmp sgt i32 %7027, %6618
  br i1 %7028, label %7029, label %7013

7029:                                             ; preds = %7026, %7022, %7020, %7016
  %7030 = load i32, i32* %6659, align 4
  br label %7031

7031:                                             ; preds = %7029, %6992
  %7032 = phi i32 [ %7030, %7029 ], [ %7000, %6992 ]
  %7033 = icmp sgt i32 %7032, %6618
  br i1 %7033, label %7045, label %7034

7034:                                             ; preds = %7031
  %7035 = bitcast %struct.SkAnalyticEdge* %6636 to i64*
  %7036 = load i64, i64* %7035, align 8
  %7037 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 1
  %7038 = bitcast %struct.SkAnalyticEdge** %7037 to i64**
  %7039 = load i64*, i64** %7038, align 8
  store i64 %7036, i64* %7039, align 8
  %7040 = bitcast %struct.SkAnalyticEdge** %7037 to i64*
  %7041 = load i64, i64* %7040, align 8
  %7042 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6998, align 8
  %7043 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7042, i64 0, i32 1
  %7044 = bitcast %struct.SkAnalyticEdge** %7043 to i64*
  store i64 %7041, i64* %7044, align 8
  br label %7110

7045:                                             ; preds = %7031
  %7046 = icmp sgt i32 %6645, %7032
  %7047 = select i1 %7046, i32 %7032, i32 %6645
  %7048 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 3
  %7049 = load i32, i32* %7048, align 8
  %7050 = icmp slt i32 %7049, %6642
  br i1 %7050, label %7051, label %7090

7051:                                             ; preds = %7045
  %7052 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6993, i64 0, i32 2
  %7053 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7052, align 8
  %7054 = icmp ne %struct.SkAnalyticEdge* %7053, %6636
  %7055 = or i1 %7054, %6595
  br i1 %7055, label %7060, label %7056

7056:                                             ; preds = %7051
  %7057 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6993, i64 0, i32 3
  %7058 = load i32, i32* %7057, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %6993, i32 %6618, i32 %7058, i32 %7049, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  %7059 = load i32, i32* %7048, align 8
  br label %7060

7060:                                             ; preds = %7056, %7051
  %7061 = phi i32 [ %7049, %7051 ], [ %7059, %7056 ]
  %7062 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 1
  %7063 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7062, align 8
  %7064 = bitcast %struct.SkAnalyticEdge* %7063 to i64*
  br label %7065

7065:                                             ; preds = %7070, %7060
  %7066 = phi %struct.SkAnalyticEdge* [ %7063, %7060 ], [ %7068, %7070 ]
  %7067 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7066, i64 0, i32 1
  %7068 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7067, align 8
  %7069 = icmp eq %struct.SkAnalyticEdge* %7068, null
  br i1 %7069, label %7074, label %7070

7070:                                             ; preds = %7065
  %7071 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7066, i64 0, i32 3
  %7072 = load i32, i32* %7071, align 8
  %7073 = icmp sgt i32 %7072, %7061
  br i1 %7073, label %7065, label %7074

7074:                                             ; preds = %7070, %7065
  %7075 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7066, i64 0, i32 0
  %7076 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7075, align 8
  %7077 = icmp eq %struct.SkAnalyticEdge* %7076, %6636
  br i1 %7077, label %7090, label %7078

7078:                                             ; preds = %7074
  %7079 = bitcast %struct.SkAnalyticEdge* %6636 to i64*
  %7080 = load i64, i64* %7079, align 8
  store i64 %7080, i64* %7064, align 8
  %7081 = bitcast %struct.SkAnalyticEdge** %7062 to i64*
  %7082 = load i64, i64* %7081, align 8
  %7083 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6998, align 8
  %7084 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7083, i64 0, i32 1
  %7085 = bitcast %struct.SkAnalyticEdge** %7084 to i64*
  store i64 %7082, i64* %7085, align 8
  store %struct.SkAnalyticEdge* %7066, %struct.SkAnalyticEdge** %7062, align 8
  %7086 = bitcast %struct.SkAnalyticEdge* %7066 to i64*
  %7087 = load i64, i64* %7086, align 8
  store i64 %7087, i64* %7079, align 8
  %7088 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7075, align 8
  %7089 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7088, i64 0, i32 1
  store %struct.SkAnalyticEdge* %6636, %struct.SkAnalyticEdge** %7089, align 8
  store %struct.SkAnalyticEdge* %6636, %struct.SkAnalyticEdge** %7075, align 8
  br label %7090

7090:                                             ; preds = %7078, %7074, %7045
  %7091 = phi i32 [ %7049, %7045 ], [ %6642, %7074 ], [ %6642, %7078 ]
  br i1 %6531, label %7110, label %7092

7092:                                             ; preds = %7090
  %7093 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 1
  %7094 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7093, align 8
  %7095 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7094, i64 0, i32 1
  %7096 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7095, align 8
  %7097 = icmp eq %struct.SkAnalyticEdge* %7096, null
  br i1 %7097, label %7110, label %7098

7098:                                             ; preds = %7092
  %7099 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7094, i64 0, i32 3
  %7100 = load i32, i32* %7099, align 8
  %7101 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7094, i64 0, i32 4
  %7102 = load i32, i32* %7101, align 4
  %7103 = add nsw i32 %7102, %7100
  %7104 = load i32, i32* %7048, align 8
  %7105 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6636, i64 0, i32 4
  %7106 = load i32, i32* %7105, align 4
  %7107 = add nsw i32 %7106, %7104
  %7108 = icmp sgt i32 %7103, %7107
  %7109 = select i1 %7108, i32 %6633, i32 %7047
  br label %7110

7110:                                             ; preds = %7098, %7092, %7090, %7034
  %7111 = phi i32 [ %7047, %7090 ], [ %6645, %7034 ], [ %7047, %7092 ], [ %7109, %7098 ]
  %7112 = phi i32 [ %7091, %7090 ], [ %6642, %7034 ], [ %7091, %7092 ], [ %7091, %7098 ]
  %7113 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6999, i64 0, i32 7
  %7114 = load i32, i32* %7113, align 8
  %7115 = icmp sgt i32 %7114, %6604
  br i1 %7115, label %7116, label %6635

7116:                                             ; preds = %7110
  %7117 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6999, i64 0, i32 7
  br label %7118

7118:                                             ; preds = %7116, %6602
  %7119 = phi i32 [ 2147483647, %6602 ], [ %7111, %7116 ]
  %7120 = phi i1 [ %6539, %6602 ], [ %6654, %7116 ]
  %7121 = phi %struct.SkAnalyticEdge* [ %6611, %6602 ], [ %6999, %7116 ]
  %7122 = phi %struct.SkAnalyticEdge* [ %18, %6602 ], [ %6993, %7116 ]
  %7123 = phi i32 [ %5379, %6602 ], [ %6994, %7116 ]
  %7124 = phi i32 [ 0, %6602 ], [ %6995, %7116 ]
  %7125 = phi i8 [ 0, %6602 ], [ %6996, %7116 ]
  %7126 = phi i32* [ %6625, %6602 ], [ %7117, %7116 ]
  br i1 %7120, label %7127, label %7370

7127:                                             ; preds = %7118
  br i1 %6530, label %7128, label %7158

7128:                                             ; preds = %7127
  %7129 = and i8 %7125, 1
  %7130 = icmp ne i8 %7129, 0
  %7131 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 2
  %7132 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7131, align 8
  %7133 = icmp eq %struct.SkAnalyticEdge* %7132, null
  %7134 = icmp eq %struct.SkAnalyticEdge* %7132, %19
  %7135 = or i1 %7133, %7134
  br i1 %7135, label %7140, label %7136

7136:                                             ; preds = %7128
  %7137 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7132, i64 0, i32 3
  %7138 = load i32, i32* %7137, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %7122, i32 %6604, i32 %7123, i32 %7138, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  %7139 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7131, align 8
  br label %7140

7140:                                             ; preds = %7136, %7128
  %7141 = phi %struct.SkAnalyticEdge* [ %7132, %7128 ], [ %7139, %7136 ]
  %7142 = icmp eq %struct.SkAnalyticEdge* %7141, null
  br i1 %7142, label %7143, label %7149

7143:                                             ; preds = %7140
  %7144 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 10
  store i32 %7123, i32* %7144, align 4
  %7145 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 11
  store i32 %6604, i32* %7145, align 8
  %7146 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 12
  store i32 %7124, i32* %7146, align 4
  %7147 = load i32, i32* %5363, align 8
  %7148 = load i32, i32* %5365, align 8
  store i32 %7147, i32* %6596, align 4
  store i32 %6604, i32* %6597, align 8
  store i32 %7148, i32* %6598, align 4
  store %struct.SkAnalyticEdge* %19, %struct.SkAnalyticEdge** %7131, align 8
  br label %7149

7149:                                             ; preds = %7143, %7140
  store i32 %6618, i32* %6599, align 4
  %7150 = load i32, i32* %5364, align 4
  %7151 = ashr i32 %7150, %6619
  %7152 = load i32, i32* %5363, align 8
  %7153 = add nsw i32 %7152, %7151
  store i32 %7153, i32* %5363, align 8
  %7154 = or i1 %6610, %7130
  br i1 %7154, label %7155, label %7370

7155:                                             ; preds = %7149
  %7156 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 3
  %7157 = load i32, i32* %7156, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* %7122, i32 %6618, i32 %7157, i32 %7153, %class.AdditiveBlitter* nonnull %5219, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5379, i32 %5380) #13
  br label %7370

7158:                                             ; preds = %7127
  %7159 = ashr i32 %6604, 16
  %7160 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 3
  %7161 = load i32, i32* %7160, align 4
  %7162 = icmp sgt i32 %7161, %5379
  %7163 = select i1 %7162, i32 %7161, i32 %5379
  br i1 %4, label %7187, label %7164

7164:                                             ; preds = %7158
  %7165 = icmp eq i8 %6624, -1
  br i1 %7165, label %7166, label %7187

7166:                                             ; preds = %7164
  %7167 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 1
  %7168 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7167, align 8
  %7169 = icmp ne %struct.SkAnalyticEdge* %7122, null
  %7170 = icmp ne %struct.SkAnalyticEdge* %7168, null
  %7171 = and i1 %7169, %7170
  br i1 %7171, label %7172, label %7187

7172:                                             ; preds = %7166
  %7173 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 7
  %7174 = load i32, i32* %7173, align 8
  %7175 = icmp slt i32 %7174, %6618
  br i1 %7175, label %7176, label %7187

7176:                                             ; preds = %7172
  %7177 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7168, i64 0, i32 3
  %7178 = load i32, i32* %7177, align 8
  %7179 = add nsw i32 %7178, 65536
  %7180 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7122, i64 0, i32 4
  %7181 = load i32, i32* %7180, align 4
  %7182 = icmp slt i32 %7181, 0
  %7183 = sub nsw i32 0, %7181
  %7184 = select i1 %7182, i32 %7183, i32 %7181
  %7185 = sub nsw i32 %7161, %7184
  %7186 = icmp sge i32 %7179, %7185
  br label %7187

7187:                                             ; preds = %7176, %7172, %7166, %7164, %7158
  %7188 = phi i1 [ true, %7158 ], [ false, %7164 ], [ false, %7172 ], [ false, %7166 ], [ %7186, %7176 ]
  %7189 = icmp sgt i32 %7123, %5380
  br i1 %7189, label %7370, label %7190

7190:                                             ; preds = %7187
  %7191 = icmp sgt i32 %7163, %5380
  br i1 %7191, label %7192, label %7202

7192:                                             ; preds = %7190
  %7193 = icmp sgt i32 %7123, %7163
  %7194 = select i1 %7193, i32 %7163, i32 %7123
  %7195 = select i1 %7193, i32 %7123, i32 %7163
  %7196 = icmp slt i32 %7194, %5380
  %7197 = select i1 %7196, i32 %5380, i32 %7194
  %7198 = icmp sgt i32 %7195, %5380
  %7199 = select i1 %7198, i32 %5380, i32 %7195
  %7200 = add nsw i32 %7197, %7199
  %7201 = sdiv i32 %7200, 2
  br label %7202

7202:                                             ; preds = %7192, %7190
  %7203 = phi i32 [ %7201, %7192 ], [ %7163, %7190 ]
  %7204 = phi i32 [ %7201, %7192 ], [ %5380, %7190 ]
  %7205 = icmp eq i32 %7123, %5380
  %7206 = icmp eq i32 %7203, %7204
  %7207 = and i1 %7205, %7206
  br i1 %7207, label %7370, label %7208

7208:                                             ; preds = %7202
  %7209 = icmp slt i32 %7203, %7123
  %7210 = select i1 %7209, i32 %7203, i32 %7123
  %7211 = select i1 %7209, i32 %7123, i32 %7203
  %7212 = icmp slt i32 %7204, %5380
  %7213 = select i1 %7212, i32 %7204, i32 %5380
  %7214 = select i1 %7212, i32 %5380, i32 %7204
  %7215 = add nsw i32 %7211, 65535
  %7216 = and i32 %7215, -65536
  %7217 = and i32 %7213, -65536
  %7218 = icmp slt i32 %7217, %7216
  br i1 %7218, label %7369, label %7219

7219:                                             ; preds = %7208
  %7220 = icmp sgt i32 %7216, %7210
  br i1 %7220, label %7221, label %7292

7221:                                             ; preds = %7219
  %7222 = sub nsw i32 %7216, %7210
  %7223 = add nsw i32 %7222, 65535
  %7224 = ashr i32 %7223, 16
  switch i32 %7224, label %7291 [
    i32 1, label %7225
    i32 2, label %7252
  ]

7225:                                             ; preds = %7221
  %7226 = sub i32 %7216, %7211
  %7227 = add nsw i32 %7226, %7222
  %7228 = sdiv i32 %7227, 2
  %7229 = lshr i32 %7228, 8
  %7230 = ashr i32 %7210, 16
  %7231 = icmp ne i8 %6624, -1
  %7232 = or i1 %7231, %7188
  br i1 %7232, label %7243, label %7233

7233:                                             ; preds = %7225
  %7234 = trunc i32 %7229 to i8
  %7235 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %7236 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7235, i64 14
  %7237 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7236, align 8
  %7238 = call %class.SkBlitter* %7237(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %7239 = bitcast %class.SkBlitter* %7238 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %7240 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %7239, align 8
  %7241 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7240, i64 4
  %7242 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7241, align 8
  call void %7242(%class.SkBlitter* %7238, i32 %7230, i32 %7159, i32 1, i8 zeroext %7234) #13
  br label %7292

7243:                                             ; preds = %7225
  %7244 = and i32 %7229, 255
  %7245 = and i32 %6623, 255
  %7246 = mul nuw nsw i32 %7244, %7245
  %7247 = lshr i32 %7246, 8
  %7248 = trunc i32 %7247 to i8
  %7249 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7250 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7249, i64 16
  %7251 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7250, align 8
  call void %7251(%class.AdditiveBlitter* nonnull %5219, i32 %7230, i32 %7159, i8 zeroext %7248) #13
  br label %7292

7252:                                             ; preds = %7221
  %7253 = sub i32 -65536, %7210
  %7254 = add i32 %7216, %7253
  %7255 = sub i32 %7211, %7210
  %7256 = sub i32 %7255, %7254
  %7257 = ashr i32 %7254, 11
  %7258 = ashr i32 %7124, 11
  %7259 = mul i32 %7257, %7258
  %7260 = mul i32 %7259, %7257
  %7261 = lshr i32 %7260, 8
  %7262 = ashr i32 %7256, 11
  %7263 = mul i32 %7262, %7258
  %7264 = mul i32 %7263, %7262
  %7265 = lshr i32 %7264, 8
  %7266 = trunc i32 %7265 to i8
  %7267 = sub i8 %6624, %7266
  %7268 = ashr i32 %7210, 16
  %7269 = icmp ne i8 %6624, -1
  %7270 = or i1 %7269, %7188
  br i1 %7270, label %7282, label %7271

7271:                                             ; preds = %7252
  %7272 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %7273 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7272, i64 14
  %7274 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7273, align 8
  %7275 = call %class.SkBlitter* %7274(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %7276 = and i32 %7261, 255
  %7277 = zext i8 %7267 to i32
  %7278 = bitcast %class.SkBlitter* %7275 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %7279 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %7278, align 8
  %7280 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7279, i64 9
  %7281 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7280, align 8
  call void %7281(%class.SkBlitter* %7275, i32 %7268, i32 %7159, i32 %7276, i32 %7277) #13
  br label %7292

7282:                                             ; preds = %7252
  %7283 = trunc i32 %7261 to i8
  %7284 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7285 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7284, i64 16
  %7286 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7285, align 8
  call void %7286(%class.AdditiveBlitter* nonnull %5219, i32 %7268, i32 %7159, i8 zeroext %7283) #13
  %7287 = add nsw i32 %7268, 1
  %7288 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7289 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7288, i64 16
  %7290 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7289, align 8
  call void %7290(%class.AdditiveBlitter* nonnull %5219, i32 %7287, i32 %7159, i8 zeroext %7267) #13
  br label %7292

7291:                                             ; preds = %7221
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %7159, i32 %7210, i32 %7216, i32 %7211, i32 %7216, i32 %7124, i32 2147483647, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %7188, i1 zeroext true) #13
  br label %7292

7292:                                             ; preds = %7291, %7282, %7271, %7243, %7233, %7219
  %7293 = icmp sgt i32 %7217, %7216
  br i1 %7293, label %7294, label %7313

7294:                                             ; preds = %7292
  %7295 = ashr i32 %7215, 16
  %7296 = sub nsw i32 %7217, %7216
  %7297 = ashr exact i32 %7296, 16
  %7298 = icmp ne i8 %6624, -1
  %7299 = or i1 %7298, %7188
  br i1 %7299, label %7309, label %7300

7300:                                             ; preds = %7294
  %7301 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %7302 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7301, i64 14
  %7303 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7302, align 8
  %7304 = call %class.SkBlitter* %7303(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %7305 = bitcast %class.SkBlitter* %7304 to void (%class.SkBlitter*, i32, i32, i32)***
  %7306 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %7305, align 8
  %7307 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %7306, i64 2
  %7308 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %7307, align 8
  call void %7308(%class.SkBlitter* %7304, i32 %7295, i32 %7159, i32 %7297) #13
  br label %7313

7309:                                             ; preds = %7294
  %7310 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6594, align 8
  %7311 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %7310, i64 17
  %7312 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %7311, align 8
  call void %7312(%class.AdditiveBlitter* nonnull %5219, i32 %7295, i32 %7159, i32 %7297, i8 zeroext %6624) #13
  br label %7313

7313:                                             ; preds = %7309, %7300, %7292
  %7314 = icmp sgt i32 %7214, %7217
  br i1 %7314, label %7315, label %7370

7315:                                             ; preds = %7313
  %7316 = sub nsw i32 %7214, %7217
  %7317 = add nsw i32 %7316, 65535
  %7318 = ashr i32 %7317, 16
  switch i32 %7318, label %7368 [
    i32 1, label %7319
    i32 2, label %7346
  ]

7319:                                             ; preds = %7315
  %7320 = sub i32 %7213, %7217
  %7321 = add nsw i32 %7320, %7316
  %7322 = sdiv i32 %7321, 2
  %7323 = lshr i32 %7322, 8
  %7324 = ashr i32 %7213, 16
  %7325 = icmp ne i8 %6624, -1
  %7326 = or i1 %7325, %7188
  br i1 %7326, label %7337, label %7327

7327:                                             ; preds = %7319
  %7328 = trunc i32 %7323 to i8
  %7329 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %7330 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7329, i64 14
  %7331 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7330, align 8
  %7332 = call %class.SkBlitter* %7331(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %7333 = bitcast %class.SkBlitter* %7332 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %7334 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %7333, align 8
  %7335 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7334, i64 4
  %7336 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7335, align 8
  call void %7336(%class.SkBlitter* %7332, i32 %7324, i32 %7159, i32 1, i8 zeroext %7328) #13
  br label %7370

7337:                                             ; preds = %7319
  %7338 = and i32 %7323, 255
  %7339 = and i32 %6623, 255
  %7340 = mul nuw nsw i32 %7338, %7339
  %7341 = lshr i32 %7340, 8
  %7342 = trunc i32 %7341 to i8
  %7343 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7344 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7343, i64 16
  %7345 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7344, align 8
  call void %7345(%class.AdditiveBlitter* nonnull %5219, i32 %7324, i32 %7159, i8 zeroext %7342) #13
  br label %7370

7346:                                             ; preds = %7315
  %7347 = ashr i32 %7213, 16
  %7348 = icmp ne i8 %6624, -1
  %7349 = or i1 %7348, %7188
  br i1 %7349, label %7360, label %7350

7350:                                             ; preds = %7346
  %7351 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6592, align 8
  %7352 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7351, i64 14
  %7353 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7352, align 8
  %7354 = call %class.SkBlitter* %7353(%class.AdditiveBlitter* nonnull %5219, i1 zeroext false) #13
  %7355 = and i32 %6623, 255
  %7356 = bitcast %class.SkBlitter* %7354 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %7357 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %7356, align 8
  %7358 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7357, i64 9
  %7359 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7358, align 8
  call void %7359(%class.SkBlitter* %7354, i32 %7347, i32 %7159, i32 %7355, i32 0) #13
  br label %7370

7360:                                             ; preds = %7346
  %7361 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7362 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7361, i64 16
  %7363 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7362, align 8
  call void %7363(%class.AdditiveBlitter* nonnull %5219, i32 %7347, i32 %7159, i8 zeroext %6624) #13
  %7364 = add nsw i32 %7347, 1
  %7365 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6593, align 8
  %7366 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7365, i64 16
  %7367 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7366, align 8
  call void %7367(%class.AdditiveBlitter* nonnull %5219, i32 %7364, i32 %7159, i8 zeroext 0) #13
  br label %7370

7368:                                             ; preds = %7315
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %7159, i32 %7217, i32 %7213, i32 %7217, i32 %7214, i32 2147483647, i32 0, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %7188, i1 zeroext true) #13
  br label %7370

7369:                                             ; preds = %7208
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5219, i32 %7159, i32 %7210, i32 %7213, i32 %7211, i32 %7214, i32 %7124, i32 0, i8 zeroext %6624, i8* null, i1 zeroext false, i1 zeroext %7188, i1 zeroext true) #13
  br label %7370

7370:                                             ; preds = %7369, %7368, %7360, %7350, %7337, %7327, %7313, %7202, %7187, %7155, %7149, %7118
  br i1 %4, label %7371, label %7375

7371:                                             ; preds = %7370
  %7372 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)**, void (%class.RunBasedAdditiveBlitter*, i32, i32)*** %6600, align 8
  %7373 = getelementptr inbounds void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %7372, i64 19
  %7374 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %7373, align 8
  call void %7374(%class.RunBasedAdditiveBlitter* nonnull %5217, i32 %6604, i32 %6618) #13
  br label %7375

7375:                                             ; preds = %7371, %7370
  %7376 = icmp slt i32 %6618, %6601
  br i1 %7376, label %7377, label %7510

7377:                                             ; preds = %7375
  %7378 = load i32, i32* %7126, align 8
  %7379 = icmp sgt i32 %7378, %6618
  br i1 %7379, label %7380, label %7383

7380:                                             ; preds = %7377
  %7381 = icmp sgt i32 %7119, %7378
  %7382 = select i1 %7381, i32 %7378, i32 %7119
  br label %7508

7383:                                             ; preds = %7377
  %7384 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7121, i64 0, i32 1
  %7385 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7384, align 8
  %7386 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7385, i64 0, i32 3
  %7387 = load i32, i32* %7386, align 8
  %7388 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7121, i64 0, i32 3
  %7389 = load i32, i32* %7388, align 8
  %7390 = icmp sgt i32 %7387, %7389
  br i1 %7390, label %7432, label %7391

7391:                                             ; preds = %7383
  %7392 = add nsw i32 %6618, 16384
  br label %7393

7393:                                             ; preds = %7426, %7391
  %7394 = phi i32 [ %7119, %7391 ], [ %7420, %7426 ]
  %7395 = phi %struct.SkAnalyticEdge* [ %7385, %7391 ], [ %7428, %7426 ]
  %7396 = phi %struct.SkAnalyticEdge* [ %7121, %7391 ], [ %7422, %7426 ]
  %7397 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7395, i64 0, i32 1
  %7398 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7397, align 8
  %7399 = icmp eq %struct.SkAnalyticEdge* %7398, null
  br i1 %7399, label %7413, label %7400

7400:                                             ; preds = %7393
  %7401 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7395, i64 0, i32 3
  %7402 = load i32, i32* %7401, align 8
  %7403 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7395, i64 0, i32 4
  %7404 = load i32, i32* %7403, align 4
  %7405 = add nsw i32 %7404, %7402
  %7406 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7396, i64 0, i32 3
  %7407 = load i32, i32* %7406, align 8
  %7408 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7396, i64 0, i32 4
  %7409 = load i32, i32* %7408, align 4
  %7410 = add nsw i32 %7409, %7407
  %7411 = icmp sgt i32 %7405, %7410
  %7412 = select i1 %7411, i32 %7392, i32 %7394
  br label %7413

7413:                                             ; preds = %7400, %7393
  %7414 = phi i32 [ %7394, %7393 ], [ %7412, %7400 ]
  %7415 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7396, i64 0, i32 8
  %7416 = load i32, i32* %7415, align 4
  %7417 = icmp sgt i32 %7416, %6618
  %7418 = icmp sgt i32 %7414, %7416
  %7419 = and i1 %7417, %7418
  %7420 = select i1 %7419, i32 %7416, i32 %7414
  %7421 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7396, i64 0, i32 0
  %7422 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7421, align 8
  %7423 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7422, i64 0, i32 7
  %7424 = load i32, i32* %7423, align 8
  %7425 = icmp sgt i32 %7424, %6618
  br i1 %7425, label %7429, label %7426

7426:                                             ; preds = %7413
  %7427 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7422, i64 0, i32 1
  %7428 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7427, align 8
  br label %7393

7429:                                             ; preds = %7413
  %7430 = icmp sgt i32 %7420, %7424
  %7431 = select i1 %7430, i32 %7424, i32 %7420
  br label %7508

7432:                                             ; preds = %7383, %7437
  %7433 = phi %struct.SkAnalyticEdge* [ %7435, %7437 ], [ %7385, %7383 ]
  %7434 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7433, i64 0, i32 1
  %7435 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7434, align 8
  %7436 = icmp eq %struct.SkAnalyticEdge* %7435, null
  br i1 %7436, label %7441, label %7437

7437:                                             ; preds = %7432
  %7438 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7433, i64 0, i32 3
  %7439 = load i32, i32* %7438, align 8
  %7440 = icmp sgt i32 %7439, %7389
  br i1 %7440, label %7432, label %7441

7441:                                             ; preds = %7437, %7432
  %7442 = add nsw i32 %6618, 16384
  br label %7443

7443:                                             ; preds = %7494, %7441
  %7444 = phi i32 [ %7119, %7441 ], [ %7501, %7494 ]
  %7445 = phi %struct.SkAnalyticEdge* [ %7121, %7441 ], [ %7448, %7494 ]
  %7446 = phi %struct.SkAnalyticEdge* [ %7433, %7441 ], [ %7445, %7494 ]
  %7447 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 0
  %7448 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7447, align 8
  %7449 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 3
  %7450 = ptrtoint %struct.SkAnalyticEdge* %7448 to i64
  br label %7451

7451:                                             ; preds = %7456, %7443
  %7452 = phi %struct.SkAnalyticEdge* [ %7446, %7443 ], [ %7454, %7456 ]
  %7453 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7452, i64 0, i32 0
  %7454 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7453, align 8
  %7455 = icmp eq %struct.SkAnalyticEdge* %7454, %7445
  br i1 %7455, label %7476, label %7456

7456:                                             ; preds = %7451
  %7457 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7454, i64 0, i32 3
  %7458 = load i32, i32* %7457, align 8
  %7459 = load i32, i32* %7449, align 8
  %7460 = icmp slt i32 %7458, %7459
  br i1 %7460, label %7451, label %7461

7461:                                             ; preds = %7456
  %7462 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7452, i64 0, i32 0
  %7463 = bitcast %struct.SkAnalyticEdge* %7445 to i64*
  %7464 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 1
  %7465 = bitcast %struct.SkAnalyticEdge** %7464 to i64**
  %7466 = load i64*, i64** %7465, align 8
  store i64 %7450, i64* %7466, align 8
  %7467 = bitcast %struct.SkAnalyticEdge** %7464 to i64*
  %7468 = load i64, i64* %7467, align 8
  %7469 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7447, align 8
  %7470 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7469, i64 0, i32 1
  %7471 = bitcast %struct.SkAnalyticEdge** %7470 to i64*
  store i64 %7468, i64* %7471, align 8
  store %struct.SkAnalyticEdge* %7452, %struct.SkAnalyticEdge** %7464, align 8
  %7472 = bitcast %struct.SkAnalyticEdge* %7452 to i64*
  %7473 = load i64, i64* %7472, align 8
  store i64 %7473, i64* %7463, align 8
  %7474 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7462, align 8
  %7475 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7474, i64 0, i32 1
  store %struct.SkAnalyticEdge* %7445, %struct.SkAnalyticEdge** %7475, align 8
  store %struct.SkAnalyticEdge* %7445, %struct.SkAnalyticEdge** %7462, align 8
  br label %7476

7476:                                             ; preds = %7451, %7461
  %7477 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 1
  %7478 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7477, align 8
  %7479 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7478, i64 0, i32 1
  %7480 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7479, align 8
  %7481 = icmp eq %struct.SkAnalyticEdge* %7480, null
  br i1 %7481, label %7494, label %7482

7482:                                             ; preds = %7476
  %7483 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7478, i64 0, i32 3
  %7484 = load i32, i32* %7483, align 8
  %7485 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7478, i64 0, i32 4
  %7486 = load i32, i32* %7485, align 4
  %7487 = add nsw i32 %7486, %7484
  %7488 = load i32, i32* %7449, align 8
  %7489 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 4
  %7490 = load i32, i32* %7489, align 4
  %7491 = add nsw i32 %7490, %7488
  %7492 = icmp sgt i32 %7487, %7491
  %7493 = select i1 %7492, i32 %7442, i32 %7444
  br label %7494

7494:                                             ; preds = %7482, %7476
  %7495 = phi i32 [ %7444, %7476 ], [ %7493, %7482 ]
  %7496 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7445, i64 0, i32 8
  %7497 = load i32, i32* %7496, align 4
  %7498 = icmp sgt i32 %7497, %6618
  %7499 = icmp sgt i32 %7495, %7497
  %7500 = and i1 %7498, %7499
  %7501 = select i1 %7500, i32 %7497, i32 %7495
  %7502 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7448, i64 0, i32 7
  %7503 = load i32, i32* %7502, align 8
  %7504 = icmp sgt i32 %7503, %6618
  br i1 %7504, label %7505, label %7443

7505:                                             ; preds = %7494
  %7506 = icmp sgt i32 %7501, %7503
  %7507 = select i1 %7506, i32 %7503, i32 %7501
  br label %7508

7508:                                             ; preds = %7505, %7429, %7380
  %7509 = phi i32 [ %7382, %7380 ], [ %7507, %7505 ], [ %7431, %7429 ]
  br label %6602

7510:                                             ; preds = %7375, %5474, %5435, %5456
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5279) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5278) #13
  br label %7511

7511:                                             ; preds = %5243, %5247, %5261, %5265, %7510
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5224, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %5227) #13
  %7512 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %17, i64 0, i32 0, i32 2
  %7513 = bitcast %class.SkTDArray.16* %7512 to i8**
  %7514 = load i8*, i8** %7513, align 8
  call void @_Z7sk_freePv(i8* %7514) #13
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %5222) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5218, align 8
  call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* nonnull %5217) #13
  %7515 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %22, i64 0, i32 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %7515) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5216) #13
  br label %7516

7516:                                             ; preds = %138, %5209, %7511, %2900
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitterD2Ev(%class.MaskAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %7 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %8 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, i64 7
  %10 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %9, align 8
  tail call void %10(%class.SkBlitter* %4, %struct.SkMask* dereferenceable(32) %5, %struct.SkIRect* dereferenceable(16) %6) #13
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0)
  %3 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitterD0Ev(%class.MaskAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %7 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %8 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, i64 7
  %10 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %9, align 8
  tail call void %10(%class.SkBlitter* %4, %struct.SkMask* dereferenceable(32) %5, %struct.SkIRect* dereferenceable(16) %6) #13
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %11) #13
  %12 = bitcast %class.MaskAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter5blitHEiii(%class.AdditiveBlitter*, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs(%class.AdditiveBlitter*, i32, i32, i8*, i16*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #5

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #13
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #13
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #13
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #13
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #13
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #13
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBlitter* @_ZN19MaskAdditiveBlitter14getRealBlitterEb(%class.MaskAdditiveBlitter*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  br i1 %1, label %3, label %6

3:                                                ; preds = %2
  %4 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %5 = load %class.SkBlitter*, %class.SkBlitter** %4, align 8
  br label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi %class.SkBlitter* [ %5, %3 ], [ %7, %6 ]
  ret %class.SkBlitter* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN19MaskAdditiveBlitter8getWidthEv(%class.MaskAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitter18flush_if_y_changedEii(%class.MaskAdditiveBlitter*, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23RunBasedAdditiveBlitterD0Ev(%class.RunBasedAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0) #13
  %3 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %3) #13
  %4 = bitcast %class.RunBasedAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter5blitVEiiih(%class.AdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter8blitRectEiiii(%class.AdditiveBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter12blitAntiRectEiiiihh(%class.AdditiveBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBlitter* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb(%class.RunBasedAdditiveBlitter*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  ret %class.SkBlitter* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23RunBasedAdditiveBlitter8getWidthEv(%class.RunBasedAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii(%class.RunBasedAdditiveBlitter*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = xor i32 %2, %1
  %5 = icmp ugt i32 %4, 65535
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %0)
  br label %7

7:                                                ; preds = %6, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SafeRLEAdditiveBlitterD0Ev(%class.SafeRLEAdditiveBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SafeRLEAdditiveBlitter* %0 to %class.RunBasedAdditiveBlitter*
  %3 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter* %2) #13
  %4 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %4) #13
  %5 = bitcast %class.SafeRLEAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23RunBasedAdditiveBlitter5flushEv(%class.RunBasedAdditiveBlitter*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %3, %5
  br i1 %6, label %85, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %8, i64 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i16 %11, 0
  %13 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %14 = load i8*, i8** %13, align 8
  br i1 %12, label %15, label %26

15:                                               ; preds = %26, %7
  %16 = phi i16* [ %10, %7 ], [ %36, %26 ]
  %17 = phi i8* [ %14, %7 ], [ %45, %26 ]
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %46

20:                                               ; preds = %15
  %21 = load i16, i16* %16, align 2
  %22 = sext i16 %21 to i64
  %23 = getelementptr inbounds i16, i16* %16, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %82, label %46

26:                                               ; preds = %7, %26
  %27 = phi i8* [ %45, %26 ], [ %14, %7 ]
  %28 = phi i64 [ %41, %26 ], [ 0, %7 ]
  %29 = phi i32 [ %40, %26 ], [ 0, %7 ]
  %30 = getelementptr inbounds i8, i8* %27, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = icmp ugt i8 %31, -9
  %33 = icmp ult i8 %31, 8
  %34 = select i1 %33, i8 0, i8 %31
  %35 = select i1 %32, i8 -1, i8 %34
  store i8 %35, i8* %30, align 1
  %36 = load i16*, i16** %9, align 8
  %37 = getelementptr inbounds i16, i16* %36, i64 %28
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i32
  %40 = add nsw i32 %29, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i16, i16* %36, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 0
  %45 = load i8*, i8** %13, align 8
  br i1 %44, label %15, label %26

46:                                               ; preds = %15, %20
  %47 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %48 = load %class.SkBlitter*, %class.SkBlitter** %47, align 8
  %49 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = load i32, i32* %2, align 8
  %52 = bitcast %class.SkBlitter* %48 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %53 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %53, i64 3
  %55 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %54, align 8
  tail call void %55(%class.SkBlitter* %48, i32 %50, i32 %51, i8* %17, i16* %16) #13
  %56 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, 1
  %59 = add nsw i32 %57, 2
  %60 = sdiv i32 %59, 2
  %61 = add nsw i32 %58, %60
  %62 = shl i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %65 = load i32, i32* %64, align 8
  %66 = add nsw i32 %65, 1
  %67 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %68 = load i32, i32* %67, align 8
  %69 = srem i32 %66, %68
  store i32 %69, i32* %64, align 8
  %70 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %71 = load i8*, i8** %70, align 8
  %72 = sext i32 %69 to i64
  %73 = mul nsw i64 %63, %72
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = bitcast i8* %74 to i16*
  %76 = bitcast %class.SkAlphaRuns* %8 to i8**
  store i8* %74, i8** %76, align 8
  %77 = sext i32 %57 to i64
  %78 = getelementptr inbounds i16, i16* %75, i64 %77
  %79 = getelementptr inbounds i16, i16* %78, i64 1
  %80 = bitcast i8** %13 to i16**
  store i16* %79, i16** %80, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* %8, i32 %57) #13
  %81 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %81, align 8
  br label %82

82:                                               ; preds = %46, %20
  %83 = load i32, i32* %4, align 4
  %84 = add nsw i32 %83, -1
  store i32 %84, i32* %2, align 8
  br label %85

85:                                               ; preds = %1, %82
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #5

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN9SkBlitter15blitFatAntiRectERK6SkRect(%class.SkBlitter*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #5

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD2Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 512
  %4 = bitcast i8* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #13
  %5 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.SkTDArray.16* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD0Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32, %struct.SkAnalyticEdge**, i32, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp slt i32 %2, 33
  br i1 %5, label %6, label %71

6:                                                ; preds = %223, %4
  %7 = phi i32 [ %2, %4 ], [ %236, %223 ]
  %8 = phi %struct.SkAnalyticEdge** [ %1, %4 ], [ %235, %223 ]
  %9 = sext i32 %7 to i64
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %8, i64 %10
  %12 = icmp slt i32 %7, 2
  br i1 %12, label %238, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %8, i64 1
  br label %15

15:                                               ; preds = %68, %13
  %16 = phi %struct.SkAnalyticEdge** [ %69, %68 ], [ %14, %13 ]
  %17 = phi %struct.SkAnalyticEdge** [ %16, %68 ], [ %8, %13 ]
  %18 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %16, align 8
  %19 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %17, align 8
  %20 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  %25 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = select i1 %24, i32 %26, i32 %21
  %30 = select i1 %24, i32 %28, i32 %23
  %31 = icmp eq i32 %29, %30
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %19, i64 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = select i1 %31, i32 %33, i32 %29
  %37 = select i1 %31, i32 %35, i32 %30
  %38 = icmp slt i32 %36, %37
  %39 = ptrtoint %struct.SkAnalyticEdge* %18 to i64
  br i1 %38, label %40, label %68

40:                                               ; preds = %15, %47
  %41 = phi %struct.SkAnalyticEdge** [ %42, %47 ], [ %16, %15 ]
  %42 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %41, i64 -1
  %43 = bitcast %struct.SkAnalyticEdge** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %struct.SkAnalyticEdge** %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = icmp ugt %struct.SkAnalyticEdge** %42, %8
  br i1 %46, label %47, label %66

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %41, i64 -2
  %49 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %48, align 8
  %50 = load i32, i32* %20, align 8
  %51 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %49, i64 0, i32 7
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  %54 = load i32, i32* %25, align 8
  %55 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %49, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = select i1 %53, i32 %54, i32 %50
  %58 = select i1 %53, i32 %56, i32 %52
  %59 = icmp eq i32 %57, %58
  %60 = load i32, i32* %32, align 4
  %61 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %49, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %59, i32 %60, i32 %57
  %64 = select i1 %59, i32 %62, i32 %58
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %40, label %66

66:                                               ; preds = %47, %40
  %67 = bitcast %struct.SkAnalyticEdge** %42 to i64*
  store i64 %39, i64* %67, align 8
  br label %68

68:                                               ; preds = %66, %15
  %69 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %16, i64 1
  %70 = icmp ugt %struct.SkAnalyticEdge** %69, %11
  br i1 %70, label %238, label %15

71:                                               ; preds = %4, %223
  %72 = phi i32 [ %173, %223 ], [ %0, %4 ]
  %73 = phi %struct.SkAnalyticEdge** [ %235, %223 ], [ %1, %4 ]
  %74 = phi i32 [ %236, %223 ], [ %2, %4 ]
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %76, label %172

76:                                               ; preds = %71
  %77 = sext i32 %74 to i64
  %78 = lshr i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = add nsw i64 %77, -1
  br label %85

82:                                               ; preds = %160
  %83 = add nsw i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %238, label %85

85:                                               ; preds = %80, %82
  %86 = phi i64 [ %81, %80 ], [ %83, %82 ]
  %87 = bitcast %struct.SkAnalyticEdge** %73 to i64*
  br label %164

88:                                               ; preds = %76, %160
  %89 = phi i64 [ %90, %160 ], [ %78, %76 ]
  %90 = add nsw i64 %89, -1
  %91 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %90
  %92 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %91, align 8
  %93 = shl i64 %89, 1
  %94 = icmp ugt i64 %93, %77
  br i1 %94, label %160, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %92, i64 0, i32 7
  %97 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %92, i64 0, i32 3
  %98 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %92, i64 0, i32 4
  br label %99

99:                                               ; preds = %153, %95
  %100 = phi i64 [ %93, %95 ], [ %158, %153 ]
  %101 = phi i64 [ %89, %95 ], [ %131, %153 ]
  %102 = icmp ult i64 %100, %77
  br i1 %102, label %103, label %130

103:                                              ; preds = %99
  %104 = add i64 %100, -1
  %105 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %104
  %106 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %105, align 8
  %107 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %100
  %108 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %107, align 8
  %109 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %106, i64 0, i32 7
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %108, i64 0, i32 7
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %110, %112
  %114 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %106, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %108, i64 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = select i1 %113, i32 %115, i32 %110
  %119 = select i1 %113, i32 %117, i32 %112
  %120 = icmp eq i32 %118, %119
  %121 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %106, i64 0, i32 4
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %108, i64 0, i32 4
  %124 = load i32, i32* %123, align 4
  %125 = select i1 %120, i32 %122, i32 %118
  %126 = select i1 %120, i32 %124, i32 %119
  %127 = icmp slt i32 %125, %126
  %128 = zext i1 %127 to i64
  %129 = or i64 %100, %128
  br label %130

130:                                              ; preds = %103, %99
  %131 = phi i64 [ %100, %99 ], [ %129, %103 ]
  %132 = add i64 %131, -1
  %133 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %132
  %134 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %133, align 8
  %135 = load i32, i32* %96, align 8
  %136 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %134, i64 0, i32 7
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %135, %137
  %139 = load i32, i32* %97, align 8
  %140 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %134, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = select i1 %138, i32 %139, i32 %135
  %143 = select i1 %138, i32 %141, i32 %137
  %144 = icmp eq i32 %142, %143
  %145 = load i32, i32* %98, align 4
  %146 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %134, i64 0, i32 4
  %147 = load i32, i32* %146, align 4
  %148 = select i1 %144, i32 %145, i32 %142
  %149 = select i1 %144, i32 %147, i32 %143
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %130
  %152 = add i64 %101, -1
  br label %160

153:                                              ; preds = %130
  %154 = ptrtoint %struct.SkAnalyticEdge* %134 to i64
  %155 = add i64 %101, -1
  %156 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %155
  %157 = bitcast %struct.SkAnalyticEdge** %156 to i64*
  store i64 %154, i64* %157, align 8
  %158 = shl i64 %131, 1
  %159 = icmp ugt i64 %158, %77
  br i1 %159, label %160, label %99

160:                                              ; preds = %153, %88, %151
  %161 = phi i64 [ %90, %88 ], [ %152, %151 ], [ %132, %153 ]
  %162 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %161
  store %struct.SkAnalyticEdge* %92, %struct.SkAnalyticEdge** %162, align 8
  %163 = icmp eq i64 %90, 0
  br i1 %163, label %82, label %88

164:                                              ; preds = %164, %85
  %165 = phi i64 [ %86, %85 ], [ %170, %164 ]
  %166 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %165
  %167 = load i64, i64* %87, align 8
  %168 = bitcast %struct.SkAnalyticEdge** %166 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %87, align 8
  store i64 %167, i64* %168, align 8
  tail call void @_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EvS4_mmRKT0_(%struct.SkAnalyticEdge** %73, i64 1, i64 %165, %class.anon* dereferenceable(1) %3) #13
  %170 = add i64 %165, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %238, label %164

172:                                              ; preds = %71
  %173 = add nsw i32 %72, -1
  %174 = add nsw i32 %74, -1
  %175 = ashr i32 %174, 1
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %176
  %178 = sext i32 %74 to i64
  %179 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 -1
  %180 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %179, i64 %178
  %181 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %177, align 8
  %182 = bitcast %struct.SkAnalyticEdge** %177 to i64*
  %183 = ptrtoint %struct.SkAnalyticEdge* %181 to i64
  %184 = bitcast %struct.SkAnalyticEdge** %180 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %182, align 8
  store i64 %183, i64* %184, align 8
  %186 = icmp ugt %struct.SkAnalyticEdge** %180, %73
  br i1 %186, label %187, label %223

187:                                              ; preds = %172
  %188 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %181, i64 0, i32 7
  %189 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %181, i64 0, i32 3
  %190 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %181, i64 0, i32 4
  br label %191

191:                                              ; preds = %217, %187
  %192 = phi %struct.SkAnalyticEdge** [ %73, %187 ], [ %218, %217 ]
  %193 = phi %struct.SkAnalyticEdge** [ %73, %187 ], [ %219, %217 ]
  %194 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %193, align 8
  %195 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %194, i64 0, i32 7
  %196 = load i32, i32* %195, align 8
  %197 = load i32, i32* %188, align 8
  %198 = icmp eq i32 %196, %197
  %199 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %194, i64 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = load i32, i32* %189, align 8
  %202 = select i1 %198, i32 %200, i32 %196
  %203 = select i1 %198, i32 %201, i32 %197
  %204 = icmp eq i32 %202, %203
  %205 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %194, i64 0, i32 4
  %206 = load i32, i32* %205, align 4
  %207 = load i32, i32* %190, align 4
  %208 = select i1 %204, i32 %206, i32 %202
  %209 = select i1 %204, i32 %207, i32 %203
  %210 = icmp slt i32 %208, %209
  br i1 %210, label %211, label %217

211:                                              ; preds = %191
  %212 = ptrtoint %struct.SkAnalyticEdge* %194 to i64
  %213 = bitcast %struct.SkAnalyticEdge** %193 to i64*
  %214 = bitcast %struct.SkAnalyticEdge** %192 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  store i64 %212, i64* %214, align 8
  %216 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %192, i64 1
  br label %217

217:                                              ; preds = %211, %191
  %218 = phi %struct.SkAnalyticEdge** [ %216, %211 ], [ %192, %191 ]
  %219 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %193, i64 1
  %220 = icmp ult %struct.SkAnalyticEdge** %219, %180
  br i1 %220, label %191, label %221

221:                                              ; preds = %217
  %222 = load i64, i64* %184, align 8
  br label %223

223:                                              ; preds = %172, %221
  %224 = phi i64 [ %183, %172 ], [ %222, %221 ]
  %225 = phi %struct.SkAnalyticEdge** [ %73, %172 ], [ %218, %221 ]
  %226 = bitcast %struct.SkAnalyticEdge** %225 to i64*
  %227 = load i64, i64* %226, align 8
  store i64 %224, i64* %226, align 8
  store i64 %227, i64* %184, align 8
  %228 = ptrtoint %struct.SkAnalyticEdge** %225 to i64
  %229 = ptrtoint %struct.SkAnalyticEdge** %73 to i64
  %230 = sub i64 %228, %229
  %231 = lshr exact i64 %230, 3
  %232 = trunc i64 %231 to i32
  tail call void @_Z12SkTIntroSortIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %173, %struct.SkAnalyticEdge** %73, i32 %232, %class.anon* dereferenceable(1) %3)
  %233 = add nsw i32 %232, 1
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %234
  %236 = sub nsw i32 %74, %233
  %237 = icmp slt i32 %236, 33
  br i1 %237, label %6, label %71

238:                                              ; preds = %164, %68, %82, %6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EvS4_mmRKT0_(%struct.SkAnalyticEdge**, i64, i64, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = add i64 %1, -1
  %6 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %5
  %7 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6, align 8
  %8 = shl i64 %1, 1
  %9 = icmp ugt i64 %8, %2
  br i1 %9, label %10, label %18

10:                                               ; preds = %49, %4
  %11 = phi i64 [ %1, %4 ], [ %50, %49 ]
  %12 = lshr i64 %11, 1
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %89, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 7
  %16 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 3
  %17 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 4
  br label %60

18:                                               ; preds = %4, %49
  %19 = phi i64 [ %58, %49 ], [ %8, %4 ]
  %20 = phi i64 [ %50, %49 ], [ %1, %4 ]
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %49

22:                                               ; preds = %18
  %23 = add i64 %19, -1
  %24 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %23
  %25 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %24, align 8
  %26 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %19
  %27 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %26, align 8
  %28 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %25, i64 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %27, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  %33 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %25, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %27, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = select i1 %32, i32 %34, i32 %29
  %38 = select i1 %32, i32 %36, i32 %31
  %39 = icmp eq i32 %37, %38
  %40 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %25, i64 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %27, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = select i1 %39, i32 %41, i32 %37
  %45 = select i1 %39, i32 %43, i32 %38
  %46 = icmp slt i32 %44, %45
  %47 = zext i1 %46 to i64
  %48 = or i64 %19, %47
  br label %49

49:                                               ; preds = %22, %18
  %50 = phi i64 [ %19, %18 ], [ %48, %22 ]
  %51 = add i64 %50, -1
  %52 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %51
  %53 = bitcast %struct.SkAnalyticEdge** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %20, -1
  %56 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %55
  %57 = bitcast %struct.SkAnalyticEdge** %56 to i64*
  store i64 %54, i64* %57, align 8
  %58 = shl i64 %50, 1
  %59 = icmp ugt i64 %58, %2
  br i1 %59, label %10, label %18

60:                                               ; preds = %14, %82
  %61 = phi i64 [ %12, %14 ], [ %87, %82 ]
  %62 = phi i64 [ %11, %14 ], [ %61, %82 ]
  %63 = add nsw i64 %61, -1
  %64 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %63
  %65 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %64, align 8
  %66 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %65, i64 0, i32 7
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %15, align 8
  %69 = icmp eq i32 %67, %68
  %70 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %65, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = load i32, i32* %16, align 8
  %73 = select i1 %69, i32 %71, i32 %67
  %74 = select i1 %69, i32 %72, i32 %68
  %75 = icmp eq i32 %73, %74
  %76 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %65, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %17, align 4
  %79 = select i1 %75, i32 %77, i32 %73
  %80 = select i1 %75, i32 %78, i32 %74
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %89

82:                                               ; preds = %60
  %83 = ptrtoint %struct.SkAnalyticEdge* %65 to i64
  %84 = add i64 %62, -1
  %85 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %84
  %86 = bitcast %struct.SkAnalyticEdge** %85 to i64*
  store i64 %83, i64* %86, align 8
  %87 = lshr i64 %61, 1
  %88 = icmp ult i64 %87, %1
  br i1 %88, label %89, label %60

89:                                               ; preds = %60, %82, %10
  %90 = phi i64 [ %11, %10 ], [ %61, %82 ], [ %62, %60 ]
  %91 = add i64 %90, -1
  %92 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %91
  store %struct.SkAnalyticEdge* %7, %struct.SkAnalyticEdge** %92, align 8
  ret void
}

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZL16is_smooth_enoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nocapture readonly, %struct.SkAnalyticEdge* nocapture readonly) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1
  %8 = bitcast %struct.SkAnalyticEdge* %7 to %struct.SkEdge*
  %9 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 0
  %15 = sub nsw i32 0, %13
  %16 = select i1 %14, i32 %15, i32 %13
  %17 = lshr i32 %16, 1
  %18 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, 0
  %21 = sub nsw i32 0, %19
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = lshr i32 %22, %11
  %24 = icmp slt i32 %17, %23
  br i1 %24, label %101, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 10
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 0, %27
  %30 = select i1 %28, i32 %29, i32 %27
  %31 = lshr i32 %30, 1
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 12
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 0, %33
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = lshr i32 %36, %11
  %38 = icmp slt i32 %31, %37
  br i1 %38, label %101, label %39

39:                                               ; preds = %25
  %40 = ashr i32 %33, %11
  %41 = sub nsw i32 %27, %40
  %42 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 8
  %43 = load i8, i8* %42, align 2
  %44 = zext i8 %43 to i32
  %45 = ashr i32 %41, %44
  %46 = icmp sgt i32 %45, 65535
  br label %101

47:                                               ; preds = %2
  %48 = icmp eq i8 %4, 0
  br i1 %48, label %84, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1
  %51 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = lshr i32 %55, 1
  %57 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 11
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp slt i32 %56, %61
  br i1 %62, label %101, label %63

63:                                               ; preds = %49
  %64 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = lshr i32 %68, 1
  %70 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 12
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  %73 = sub nsw i32 0, %71
  %74 = select i1 %72, i32 %73, i32 %71
  %75 = icmp slt i32 %69, %74
  br i1 %75, label %101, label %76

76:                                               ; preds = %63
  %77 = sub nsw i32 %65, %71
  %78 = bitcast %struct.SkAnalyticEdge* %50 to %struct.SkEdge*
  %79 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %78, i64 0, i32 7
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = ashr i32 %77, %81
  %83 = icmp sgt i32 %82, 65535
  br label %101

84:                                               ; preds = %47
  %85 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  %88 = load i32, i32* %87, align 4
  %89 = sub nsw i32 %86, %88
  %90 = icmp slt i32 %89, 0
  %91 = sub nsw i32 0, %89
  %92 = select i1 %90, i32 %91, i32 %89
  %93 = icmp slt i32 %92, 65537
  br i1 %93, label %94, label %101

94:                                               ; preds = %84
  %95 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 8
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 7
  %98 = load i32, i32* %97, align 8
  %99 = sub nsw i32 %96, %98
  %100 = icmp sgt i32 %99, 65535
  br label %101

101:                                              ; preds = %84, %94, %76, %49, %63, %39, %6, %25
  %102 = phi i1 [ false, %25 ], [ false, %6 ], [ %46, %39 ], [ false, %63 ], [ false, %49 ], [ %83, %76 ], [ false, %84 ], [ %100, %94 ]
  ret i1 %102
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter*, i32, i32, i32, i32, i32, i32, i32, i8 zeroext, i8* nocapture, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 {
  %14 = alloca [128 x i8], align 16
  %15 = ashr i32 %2, 16
  %16 = add nsw i32 %5, 65535
  %17 = ashr i32 %16, 16
  %18 = sub nsw i32 %17, %15
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %70

20:                                               ; preds = %13
  %21 = sub i32 %3, %2
  %22 = sub i32 %21, %4
  %23 = add i32 %22, %5
  %24 = sdiv i32 %23, 2
  %25 = lshr i32 %24, 8
  %26 = trunc i32 %25 to i8
  %27 = icmp ne i8 %8, -1
  %28 = or i1 %27, %11
  br i1 %10, label %29, label %49

29:                                               ; preds = %20
  %30 = sext i32 %15 to i64
  %31 = getelementptr inbounds i8, i8* %9, i64 %30
  br i1 %28, label %33, label %32

32:                                               ; preds = %29
  store i8 %26, i8* %31, align 1
  br label %858

33:                                               ; preds = %29
  %34 = and i32 %25, 255
  %35 = zext i8 %8 to i32
  %36 = mul nuw nsw i32 %34, %35
  %37 = lshr i32 %36, 8
  %38 = load i8, i8* %31, align 1
  %39 = zext i8 %38 to i32
  %40 = add nuw nsw i32 %37, %39
  br i1 %12, label %41, label %45

41:                                               ; preds = %33
  %42 = icmp ult i32 %40, 255
  %43 = select i1 %42, i32 %40, i32 255
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %31, align 1
  br label %858

45:                                               ; preds = %33
  %46 = lshr i32 %40, 8
  %47 = sub nsw i32 %40, %46
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %31, align 1
  br label %858

49:                                               ; preds = %20
  br i1 %28, label %60, label %50

50:                                               ; preds = %49
  %51 = bitcast %class.AdditiveBlitter* %0 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %52 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %51, align 8
  %53 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %52, i64 14
  %54 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %53, align 8
  %55 = tail call %class.SkBlitter* %54(%class.AdditiveBlitter* %0, i1 zeroext false) #13
  %56 = bitcast %class.SkBlitter* %55 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %57 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %57, i64 4
  %59 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %58, align 8
  tail call void %59(%class.SkBlitter* %55, i32 %15, i32 %1, i32 1, i8 zeroext %26) #13
  br label %858

60:                                               ; preds = %49
  %61 = and i32 %25, 255
  %62 = zext i8 %8 to i32
  %63 = mul nuw nsw i32 %61, %62
  %64 = lshr i32 %63, 8
  %65 = trunc i32 %64 to i8
  %66 = bitcast %class.AdditiveBlitter* %0 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %67 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %66, align 8
  %68 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %67, i64 16
  %69 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %68, align 8
  tail call void %69(%class.AdditiveBlitter* %0, i32 %15, i32 %1, i8 zeroext %65) #13
  br label %858

70:                                               ; preds = %13
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 128, i1 false)
  %72 = icmp slt i32 %18, 32
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = add nuw nsw i32 %18, 1
  %75 = sext i32 %74 to i64
  %76 = shl nsw i64 %75, 2
  %77 = tail call i8* @_Znam(i64 %76) #15
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi i8* [ %77, %73 ], [ %71, %70 ]
  %80 = sext i32 %18 to i64
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = shl nsw i32 %18, 1
  %84 = add nsw i32 %83, 2
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %79, i64 %85
  %87 = bitcast i8* %86 to i16*
  %88 = icmp sgt i32 %18, 0
  br i1 %88, label %89, label %190

89:                                               ; preds = %78
  %90 = zext i32 %18 to i64
  %91 = icmp ult i32 %18, 16
  br i1 %91, label %92, label %109

92:                                               ; preds = %188, %109, %89
  %93 = phi i64 [ 0, %109 ], [ 0, %89 ], [ %118, %188 ]
  %94 = xor i64 %93, -1
  %95 = add nsw i64 %94, %90
  %96 = and i64 %90, 3
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %92, %98
  %99 = phi i64 [ %103, %98 ], [ %93, %92 ]
  %100 = phi i64 [ %104, %98 ], [ %96, %92 ]
  %101 = getelementptr inbounds i16, i16* %87, i64 %99
  store i16 1, i16* %101, align 2
  %102 = getelementptr inbounds i8, i8* %79, i64 %99
  store i8 %8, i8* %102, align 1
  %103 = add nuw nsw i64 %99, 1
  %104 = add i64 %100, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %98, !llvm.loop !22

106:                                              ; preds = %98, %92
  %107 = phi i64 [ %93, %92 ], [ %103, %98 ]
  %108 = icmp ult i64 %95, 3
  br i1 %108, label %190, label %196

109:                                              ; preds = %89
  %110 = shl nuw nsw i64 %90, 1
  %111 = add nsw i64 %110, %85
  %112 = getelementptr i8, i8* %79, i64 %111
  %113 = getelementptr i8, i8* %79, i64 %90
  %114 = icmp ult i8* %86, %113
  %115 = icmp ult i8* %79, %112
  %116 = and i1 %114, %115
  br i1 %116, label %92, label %117

117:                                              ; preds = %109
  %118 = and i64 %90, 4294967280
  %119 = insertelement <8 x i8> undef, i8 %8, i32 0
  %120 = shufflevector <8 x i8> %119, <8 x i8> undef, <8 x i32> zeroinitializer
  %121 = insertelement <8 x i8> undef, i8 %8, i32 0
  %122 = shufflevector <8 x i8> %121, <8 x i8> undef, <8 x i32> zeroinitializer
  %123 = add nsw i64 %118, -16
  %124 = lshr exact i64 %123, 4
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 3
  %127 = icmp ult i64 %123, 48
  br i1 %127, label %171, label %128

128:                                              ; preds = %117
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %168, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %169, %130 ]
  %133 = getelementptr inbounds i16, i16* %87, i64 %131
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %134, align 2, !alias.scope !23, !noalias !26
  %135 = getelementptr inbounds i16, i16* %133, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %136, align 2, !alias.scope !23, !noalias !26
  %137 = getelementptr inbounds i8, i8* %79, i64 %131
  %138 = bitcast i8* %137 to <8 x i8>*
  store <8 x i8> %120, <8 x i8>* %138, align 1, !alias.scope !26
  %139 = getelementptr inbounds i8, i8* %137, i64 8
  %140 = bitcast i8* %139 to <8 x i8>*
  store <8 x i8> %122, <8 x i8>* %140, align 1, !alias.scope !26
  %141 = or i64 %131, 16
  %142 = getelementptr inbounds i16, i16* %87, i64 %141
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %143, align 2, !alias.scope !23, !noalias !26
  %144 = getelementptr inbounds i16, i16* %142, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %145, align 2, !alias.scope !23, !noalias !26
  %146 = getelementptr inbounds i8, i8* %79, i64 %141
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %120, <8 x i8>* %147, align 1, !alias.scope !26
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = bitcast i8* %148 to <8 x i8>*
  store <8 x i8> %122, <8 x i8>* %149, align 1, !alias.scope !26
  %150 = or i64 %131, 32
  %151 = getelementptr inbounds i16, i16* %87, i64 %150
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %152, align 2, !alias.scope !23, !noalias !26
  %153 = getelementptr inbounds i16, i16* %151, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %154, align 2, !alias.scope !23, !noalias !26
  %155 = getelementptr inbounds i8, i8* %79, i64 %150
  %156 = bitcast i8* %155 to <8 x i8>*
  store <8 x i8> %120, <8 x i8>* %156, align 1, !alias.scope !26
  %157 = getelementptr inbounds i8, i8* %155, i64 8
  %158 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %122, <8 x i8>* %158, align 1, !alias.scope !26
  %159 = or i64 %131, 48
  %160 = getelementptr inbounds i16, i16* %87, i64 %159
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %161, align 2, !alias.scope !23, !noalias !26
  %162 = getelementptr inbounds i16, i16* %160, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %163, align 2, !alias.scope !23, !noalias !26
  %164 = getelementptr inbounds i8, i8* %79, i64 %159
  %165 = bitcast i8* %164 to <8 x i8>*
  store <8 x i8> %120, <8 x i8>* %165, align 1, !alias.scope !26
  %166 = getelementptr inbounds i8, i8* %164, i64 8
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %122, <8 x i8>* %167, align 1, !alias.scope !26
  %168 = add i64 %131, 64
  %169 = add i64 %132, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %130, !llvm.loop !28

171:                                              ; preds = %130, %117
  %172 = phi i64 [ 0, %117 ], [ %168, %130 ]
  %173 = icmp eq i64 %126, 0
  br i1 %173, label %188, label %174

174:                                              ; preds = %171, %174
  %175 = phi i64 [ %185, %174 ], [ %172, %171 ]
  %176 = phi i64 [ %186, %174 ], [ %126, %171 ]
  %177 = getelementptr inbounds i16, i16* %87, i64 %175
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %178, align 2, !alias.scope !23, !noalias !26
  %179 = getelementptr inbounds i16, i16* %177, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %180, align 2, !alias.scope !23, !noalias !26
  %181 = getelementptr inbounds i8, i8* %79, i64 %175
  %182 = bitcast i8* %181 to <8 x i8>*
  store <8 x i8> %120, <8 x i8>* %182, align 1, !alias.scope !26
  %183 = getelementptr inbounds i8, i8* %181, i64 8
  %184 = bitcast i8* %183 to <8 x i8>*
  store <8 x i8> %122, <8 x i8>* %184, align 1, !alias.scope !26
  %185 = add i64 %175, 16
  %186 = add i64 %176, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %174, !llvm.loop !29

188:                                              ; preds = %174, %171
  %189 = icmp eq i64 %118, %90
  br i1 %189, label %190, label %92

190:                                              ; preds = %106, %196, %188, %78
  %191 = getelementptr inbounds i16, i16* %87, i64 %80
  store i16 0, i16* %191, align 2
  %192 = add nsw i32 %4, 65535
  %193 = ashr i32 %192, 16
  %194 = add nsw i32 %15, 2
  %195 = icmp eq i32 %194, %193
  br i1 %195, label %211, label %234

196:                                              ; preds = %106, %196
  %197 = phi i64 [ %209, %196 ], [ %107, %106 ]
  %198 = getelementptr inbounds i16, i16* %87, i64 %197
  store i16 1, i16* %198, align 2
  %199 = getelementptr inbounds i8, i8* %79, i64 %197
  store i8 %8, i8* %199, align 1
  %200 = add nuw nsw i64 %197, 1
  %201 = getelementptr inbounds i16, i16* %87, i64 %200
  store i16 1, i16* %201, align 2
  %202 = getelementptr inbounds i8, i8* %79, i64 %200
  store i8 %8, i8* %202, align 1
  %203 = add nuw nsw i64 %197, 2
  %204 = getelementptr inbounds i16, i16* %87, i64 %203
  store i16 1, i16* %204, align 2
  %205 = getelementptr inbounds i8, i8* %79, i64 %203
  store i8 %8, i8* %205, align 1
  %206 = add nuw nsw i64 %197, 3
  %207 = getelementptr inbounds i16, i16* %87, i64 %206
  store i16 1, i16* %207, align 2
  %208 = getelementptr inbounds i8, i8* %79, i64 %206
  store i8 %8, i8* %208, align 1
  %209 = add nuw nsw i64 %197, 4
  %210 = icmp eq i64 %209, %90
  br i1 %210, label %190, label %196, !llvm.loop !30

211:                                              ; preds = %190
  %212 = add i32 %2, 65536
  %213 = and i32 %212, -65536
  %214 = sub nsw i32 %213, %2
  %215 = sub i32 %4, %2
  %216 = sub i32 %215, %214
  %217 = ashr i32 %214, 11
  %218 = mul nsw i32 %217, %217
  %219 = ashr i32 %6, 11
  %220 = mul nsw i32 %218, %219
  %221 = lshr i32 %220, 8
  %222 = trunc i32 %221 to i8
  %223 = sub i8 %8, %222
  %224 = ashr i32 %216, 11
  %225 = mul nsw i32 %224, %224
  %226 = mul nsw i32 %225, %219
  %227 = lshr i32 %226, 8
  %228 = trunc i32 %227 to i8
  %229 = load i8, i8* %79, align 1
  %230 = tail call i8 @llvm.usub.sat.i8(i8 %229, i8 %223)
  store i8 %230, i8* %79, align 1
  %231 = getelementptr inbounds i8, i8* %79, i64 1
  %232 = load i8, i8* %231, align 1
  %233 = tail call i8 @llvm.usub.sat.i8(i8 %232, i8 %228)
  store i8 %233, i8* %231, align 1
  br label %487

234:                                              ; preds = %190
  %235 = sext i32 %15 to i64
  %236 = getelementptr inbounds i8, i8* %82, i64 %235
  %237 = sub nsw i64 0, %235
  %238 = getelementptr inbounds i8, i8* %236, i64 %237
  %239 = and i32 %2, -65536
  %240 = sub nsw i32 %2, %239
  %241 = sub nsw i32 %4, %239
  %242 = add nsw i32 %241, 65535
  %243 = ashr i32 %242, 16
  switch i32 %243, label %253 [
    i32 0, label %363
    i32 1, label %244
  ]

244:                                              ; preds = %234
  %245 = add nsw i32 %241, %240
  %246 = sdiv i32 %245, 2
  %247 = lshr i32 %246, 8
  %248 = and i32 %247, 255
  %249 = zext i8 %8 to i32
  %250 = mul nuw nsw i32 %248, %249
  %251 = lshr i32 %250, 8
  %252 = trunc i32 %251 to i8
  br label %361

253:                                              ; preds = %234
  %254 = sub nsw i32 65536, %240
  %255 = add nsw i32 %243, -1
  %256 = shl i32 %255, 16
  %257 = sub nsw i32 %241, %256
  %258 = sext i32 %257 to i64
  %259 = sext i32 %6 to i64
  %260 = mul nsw i64 %258, %259
  %261 = lshr i64 %260, 16
  %262 = shl i64 %261, 32
  %263 = ashr exact i64 %262, 32
  %264 = mul nsw i64 %263, %258
  %265 = lshr i64 %264, 25
  %266 = trunc i64 %265 to i8
  %267 = sext i32 %255 to i64
  %268 = getelementptr inbounds i8, i8* %238, i64 %267
  store i8 %266, i8* %268, align 1
  %269 = icmp sgt i32 %242, 196607
  br i1 %269, label %270, label %344

270:                                              ; preds = %253
  %271 = ashr i32 %6, 1
  %272 = trunc i64 %261 to i32
  %273 = add nsw i32 %271, %272
  %274 = add nsw i32 %243, -2
  %275 = sext i32 %274 to i64
  %276 = icmp slt i64 %275, 1
  %277 = select i1 %276, i64 %275, i64 1
  %278 = add nsw i64 %277, -1
  %279 = sub nsw i64 %275, %278
  %280 = icmp ult i64 %279, 16
  br i1 %280, label %281, label %284

281:                                              ; preds = %342, %270
  %282 = phi i64 [ %275, %270 ], [ %286, %342 ]
  %283 = phi i32 [ %273, %270 ], [ %289, %342 ]
  br label %352

284:                                              ; preds = %270
  %285 = and i64 %279, -16
  %286 = sub nsw i64 %275, %285
  %287 = trunc i64 %285 to i32
  %288 = mul i32 %287, %6
  %289 = add i32 %273, %288
  %290 = insertelement <16 x i32> undef, i32 %273, i32 0
  %291 = shufflevector <16 x i32> %290, <16 x i32> undef, <16 x i32> zeroinitializer
  %292 = insertelement <16 x i32> undef, i32 %6, i32 0
  %293 = shufflevector <16 x i32> %292, <16 x i32> undef, <16 x i32> zeroinitializer
  %294 = mul <16 x i32> %293, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %295 = add <16 x i32> %291, %294
  %296 = shl i32 %6, 4
  %297 = insertelement <16 x i32> undef, i32 %296, i32 0
  %298 = shufflevector <16 x i32> %297, <16 x i32> undef, <16 x i32> zeroinitializer
  %299 = add nsw i64 %285, -16
  %300 = lshr exact i64 %299, 4
  %301 = add nuw nsw i64 %300, 1
  %302 = and i64 %301, 1
  %303 = icmp eq i64 %299, 0
  br i1 %303, label %330, label %304

304:                                              ; preds = %284
  %305 = sub nuw nsw i64 %301, %302
  %306 = getelementptr inbounds i8, i8* %238, i64 -15
  %307 = getelementptr inbounds i8, i8* %238, i64 -15
  br label %308

308:                                              ; preds = %308, %304
  %309 = phi i64 [ 0, %304 ], [ %326, %308 ]
  %310 = phi <16 x i32> [ %295, %304 ], [ %327, %308 ]
  %311 = phi i64 [ %305, %304 ], [ %328, %308 ]
  %312 = sub i64 %275, %309
  %313 = lshr <16 x i32> %310, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %314 = trunc <16 x i32> %313 to <16 x i8>
  %315 = shufflevector <16 x i8> %314, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %316 = getelementptr inbounds i8, i8* %306, i64 %312
  %317 = bitcast i8* %316 to <16 x i8>*
  store <16 x i8> %315, <16 x i8>* %317, align 1
  %318 = or i64 %309, 16
  %319 = add <16 x i32> %310, %298
  %320 = sub i64 %275, %318
  %321 = lshr <16 x i32> %319, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %322 = trunc <16 x i32> %321 to <16 x i8>
  %323 = shufflevector <16 x i8> %322, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %324 = getelementptr inbounds i8, i8* %307, i64 %320
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %325, align 1
  %326 = add i64 %309, 32
  %327 = add <16 x i32> %319, %298
  %328 = add i64 %311, -2
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %308, !llvm.loop !31

330:                                              ; preds = %308, %284
  %331 = phi i64 [ 0, %284 ], [ %326, %308 ]
  %332 = phi <16 x i32> [ %295, %284 ], [ %327, %308 ]
  %333 = icmp eq i64 %302, 0
  br i1 %333, label %342, label %334

334:                                              ; preds = %330
  %335 = sub i64 %275, %331
  %336 = lshr <16 x i32> %332, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %337 = trunc <16 x i32> %336 to <16 x i8>
  %338 = getelementptr inbounds i8, i8* %238, i64 -15
  %339 = shufflevector <16 x i8> %337, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %340 = getelementptr inbounds i8, i8* %338, i64 %335
  %341 = bitcast i8* %340 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %341, align 1
  br label %342

342:                                              ; preds = %330, %334
  %343 = icmp eq i64 %279, %285
  br i1 %343, label %344, label %281

344:                                              ; preds = %352, %342, %253
  %345 = ashr i32 %254, 11
  %346 = mul nsw i32 %345, %345
  %347 = ashr i32 %6, 11
  %348 = mul nsw i32 %346, %347
  %349 = lshr i32 %348, 8
  %350 = trunc i32 %349 to i8
  %351 = sub i8 %8, %350
  br label %361

352:                                              ; preds = %281, %352
  %353 = phi i64 [ %359, %352 ], [ %282, %281 ]
  %354 = phi i32 [ %358, %352 ], [ %283, %281 ]
  %355 = lshr i32 %354, 8
  %356 = trunc i32 %355 to i8
  %357 = getelementptr inbounds i8, i8* %238, i64 %353
  store i8 %356, i8* %357, align 1
  %358 = add nsw i32 %354, %6
  %359 = add nsw i64 %353, -1
  %360 = icmp sgt i64 %359, 0
  br i1 %360, label %352, label %344, !llvm.loop !32

361:                                              ; preds = %344, %244
  %362 = phi i8 [ %351, %344 ], [ %252, %244 ]
  store i8 %362, i8* %238, align 1
  br label %363

363:                                              ; preds = %234, %361
  %364 = icmp slt i32 %15, %193
  br i1 %364, label %365, label %487

365:                                              ; preds = %363
  %366 = sext i32 %193 to i64
  %367 = sub nsw i64 %366, %235
  %368 = icmp ult i64 %367, 32
  br i1 %368, label %452, label %369

369:                                              ; preds = %365
  %370 = sub nsw i64 %366, %235
  %371 = getelementptr i8, i8* %79, i64 %370
  %372 = add nsw i32 %193, %17
  %373 = add nsw i32 %372, 1
  %374 = sext i32 %373 to i64
  %375 = shl nsw i64 %235, 1
  %376 = sub nsw i64 %374, %375
  %377 = getelementptr i8, i8* %79, i64 %376
  %378 = icmp ult i8* %79, %377
  %379 = icmp ult i8* %82, %371
  %380 = and i1 %378, %379
  br i1 %380, label %452, label %381

381:                                              ; preds = %369
  %382 = and i64 %367, -32
  %383 = add nsw i64 %382, %235
  %384 = add nsw i64 %382, -32
  %385 = lshr exact i64 %384, 5
  %386 = add nuw nsw i64 %385, 1
  %387 = and i64 %386, 1
  %388 = icmp eq i64 %384, 0
  br i1 %388, label %430, label %389

389:                                              ; preds = %381
  %390 = sub nuw nsw i64 %386, %387
  br label %391

391:                                              ; preds = %391, %389
  %392 = phi i64 [ 0, %389 ], [ %427, %391 ]
  %393 = phi i64 [ %390, %389 ], [ %428, %391 ]
  %394 = getelementptr inbounds i8, i8* %79, i64 %392
  %395 = bitcast i8* %394 to <16 x i8>*
  %396 = load <16 x i8>, <16 x i8>* %395, align 1, !alias.scope !33, !noalias !36
  %397 = getelementptr inbounds i8, i8* %394, i64 16
  %398 = bitcast i8* %397 to <16 x i8>*
  %399 = load <16 x i8>, <16 x i8>* %398, align 1, !alias.scope !33, !noalias !36
  %400 = getelementptr inbounds i8, i8* %82, i64 %392
  %401 = bitcast i8* %400 to <16 x i8>*
  %402 = load <16 x i8>, <16 x i8>* %401, align 1, !alias.scope !36
  %403 = getelementptr inbounds i8, i8* %400, i64 16
  %404 = bitcast i8* %403 to <16 x i8>*
  %405 = load <16 x i8>, <16 x i8>* %404, align 1, !alias.scope !36
  %406 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %396, <16 x i8> %402)
  %407 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %399, <16 x i8> %405)
  %408 = bitcast i8* %394 to <16 x i8>*
  store <16 x i8> %406, <16 x i8>* %408, align 1, !alias.scope !33, !noalias !36
  %409 = bitcast i8* %397 to <16 x i8>*
  store <16 x i8> %407, <16 x i8>* %409, align 1, !alias.scope !33, !noalias !36
  %410 = or i64 %392, 32
  %411 = getelementptr inbounds i8, i8* %79, i64 %410
  %412 = bitcast i8* %411 to <16 x i8>*
  %413 = load <16 x i8>, <16 x i8>* %412, align 1, !alias.scope !33, !noalias !36
  %414 = getelementptr inbounds i8, i8* %411, i64 16
  %415 = bitcast i8* %414 to <16 x i8>*
  %416 = load <16 x i8>, <16 x i8>* %415, align 1, !alias.scope !33, !noalias !36
  %417 = getelementptr inbounds i8, i8* %82, i64 %410
  %418 = bitcast i8* %417 to <16 x i8>*
  %419 = load <16 x i8>, <16 x i8>* %418, align 1, !alias.scope !36
  %420 = getelementptr inbounds i8, i8* %417, i64 16
  %421 = bitcast i8* %420 to <16 x i8>*
  %422 = load <16 x i8>, <16 x i8>* %421, align 1, !alias.scope !36
  %423 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %413, <16 x i8> %419)
  %424 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %416, <16 x i8> %422)
  %425 = bitcast i8* %411 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %425, align 1, !alias.scope !33, !noalias !36
  %426 = bitcast i8* %414 to <16 x i8>*
  store <16 x i8> %424, <16 x i8>* %426, align 1, !alias.scope !33, !noalias !36
  %427 = add i64 %392, 64
  %428 = add i64 %393, -2
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %430, label %391, !llvm.loop !38

430:                                              ; preds = %391, %381
  %431 = phi i64 [ 0, %381 ], [ %427, %391 ]
  %432 = icmp eq i64 %387, 0
  br i1 %432, label %450, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds i8, i8* %79, i64 %431
  %435 = bitcast i8* %434 to <16 x i8>*
  %436 = load <16 x i8>, <16 x i8>* %435, align 1, !alias.scope !33, !noalias !36
  %437 = getelementptr inbounds i8, i8* %434, i64 16
  %438 = bitcast i8* %437 to <16 x i8>*
  %439 = load <16 x i8>, <16 x i8>* %438, align 1, !alias.scope !33, !noalias !36
  %440 = getelementptr inbounds i8, i8* %82, i64 %431
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !36
  %443 = getelementptr inbounds i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !36
  %446 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %436, <16 x i8> %442)
  %447 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %439, <16 x i8> %445)
  %448 = bitcast i8* %434 to <16 x i8>*
  store <16 x i8> %446, <16 x i8>* %448, align 1, !alias.scope !33, !noalias !36
  %449 = bitcast i8* %437 to <16 x i8>*
  store <16 x i8> %447, <16 x i8>* %449, align 1, !alias.scope !33, !noalias !36
  br label %450

450:                                              ; preds = %430, %433
  %451 = icmp eq i64 %367, %382
  br i1 %451, label %487, label %452

452:                                              ; preds = %450, %369, %365
  %453 = phi i64 [ %235, %369 ], [ %235, %365 ], [ %383, %450 ]
  %454 = sub nsw i64 %366, %453
  %455 = xor i64 %453, -1
  %456 = and i64 %454, 1
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %466, label %458

458:                                              ; preds = %452
  %459 = sub nsw i64 %453, %235
  %460 = getelementptr inbounds i8, i8* %79, i64 %459
  %461 = load i8, i8* %460, align 1
  %462 = getelementptr inbounds i8, i8* %82, i64 %459
  %463 = load i8, i8* %462, align 1
  %464 = tail call i8 @llvm.usub.sat.i8(i8 %461, i8 %463)
  store i8 %464, i8* %460, align 1
  %465 = add nsw i64 %453, 1
  br label %466

466:                                              ; preds = %452, %458
  %467 = phi i64 [ %453, %452 ], [ %465, %458 ]
  %468 = sub nsw i64 0, %366
  %469 = icmp eq i64 %455, %468
  br i1 %469, label %487, label %470

470:                                              ; preds = %466, %470
  %471 = phi i64 [ %485, %470 ], [ %467, %466 ]
  %472 = sub nsw i64 %471, %235
  %473 = getelementptr inbounds i8, i8* %79, i64 %472
  %474 = load i8, i8* %473, align 1
  %475 = getelementptr inbounds i8, i8* %82, i64 %472
  %476 = load i8, i8* %475, align 1
  %477 = tail call i8 @llvm.usub.sat.i8(i8 %474, i8 %476)
  store i8 %477, i8* %473, align 1
  %478 = add nsw i64 %471, 1
  %479 = sub nsw i64 %478, %235
  %480 = getelementptr inbounds i8, i8* %79, i64 %479
  %481 = load i8, i8* %480, align 1
  %482 = getelementptr inbounds i8, i8* %82, i64 %479
  %483 = load i8, i8* %482, align 1
  %484 = tail call i8 @llvm.usub.sat.i8(i8 %481, i8 %483)
  store i8 %484, i8* %480, align 1
  %485 = add nsw i64 %471, 2
  %486 = icmp eq i64 %485, %366
  br i1 %486, label %487, label %470, !llvm.loop !39

487:                                              ; preds = %466, %470, %450, %363, %211
  %488 = ashr i32 %3, 16
  %489 = add nsw i32 %488, 2
  %490 = icmp eq i32 %489, %17
  br i1 %490, label %491, label %519

491:                                              ; preds = %487
  %492 = add i32 %3, 65536
  %493 = and i32 %492, -65536
  %494 = sub nsw i32 %493, %3
  %495 = sub i32 %5, %3
  %496 = sub i32 %495, %494
  %497 = ashr i32 %494, 11
  %498 = mul nsw i32 %497, %497
  %499 = ashr i32 %7, 11
  %500 = mul nsw i32 %498, %499
  %501 = lshr i32 %500, 8
  %502 = trunc i32 %501 to i8
  %503 = ashr i32 %496, 11
  %504 = mul nsw i32 %503, %503
  %505 = mul nsw i32 %504, %499
  %506 = lshr i32 %505, 8
  %507 = trunc i32 %506 to i8
  %508 = sub i8 %8, %507
  %509 = add nsw i32 %18, -2
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i8, i8* %79, i64 %510
  %512 = load i8, i8* %511, align 1
  %513 = tail call i8 @llvm.usub.sat.i8(i8 %512, i8 %502)
  store i8 %513, i8* %511, align 1
  %514 = add nsw i32 %18, -1
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds i8, i8* %79, i64 %515
  %517 = load i8, i8* %516, align 1
  %518 = tail call i8 @llvm.usub.sat.i8(i8 %517, i8 %508)
  store i8 %518, i8* %516, align 1
  br label %785

519:                                              ; preds = %487
  %520 = sext i32 %488 to i64
  %521 = getelementptr inbounds i8, i8* %82, i64 %520
  %522 = sub nsw i32 0, %15
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8, i8* %521, i64 %523
  %525 = and i32 %3, -65536
  %526 = sub nsw i32 %3, %525
  %527 = sub nsw i32 %5, %525
  %528 = add nsw i32 %527, 65535
  %529 = ashr i32 %528, 16
  switch i32 %529, label %539 [
    i32 0, label %651
    i32 1, label %530
  ]

530:                                              ; preds = %519
  %531 = add i32 %526, %527
  %532 = sub i32 0, %531
  %533 = lshr i32 %532, 9
  %534 = and i32 %533, 255
  %535 = zext i8 %8 to i32
  %536 = mul nuw nsw i32 %534, %535
  %537 = lshr i32 %536, 8
  %538 = trunc i32 %537 to i8
  store i8 %538, i8* %524, align 1
  br label %651

539:                                              ; preds = %519
  %540 = sub nsw i32 65536, %526
  %541 = add nsw i32 %529, -1
  %542 = shl i32 %541, 16
  %543 = sub nsw i32 %527, %542
  %544 = sext i32 %540 to i64
  %545 = sext i32 %7 to i64
  %546 = mul nsw i64 %545, %544
  %547 = lshr i64 %546, 16
  %548 = shl i64 %547, 32
  %549 = ashr exact i64 %548, 32
  %550 = mul nsw i64 %549, %544
  %551 = lshr i64 %550, 25
  %552 = trunc i64 %551 to i8
  store i8 %552, i8* %524, align 1
  %553 = icmp sgt i32 %541, 1
  br i1 %553, label %554, label %632

554:                                              ; preds = %539
  %555 = ashr i32 %7, 1
  %556 = trunc i64 %547 to i32
  %557 = add nsw i32 %555, %556
  %558 = zext i32 %541 to i64
  %559 = add nsw i64 %558, -1
  %560 = icmp ult i64 %559, 32
  br i1 %560, label %561, label %564

561:                                              ; preds = %630, %554
  %562 = phi i64 [ 1, %554 ], [ %566, %630 ]
  %563 = phi i32 [ %557, %554 ], [ %569, %630 ]
  br label %642

564:                                              ; preds = %554
  %565 = and i64 %559, -32
  %566 = or i64 %565, 1
  %567 = trunc i64 %565 to i32
  %568 = mul i32 %567, %7
  %569 = add i32 %557, %568
  %570 = insertelement <16 x i32> undef, i32 %557, i32 0
  %571 = shufflevector <16 x i32> %570, <16 x i32> undef, <16 x i32> zeroinitializer
  %572 = insertelement <16 x i32> undef, i32 %7, i32 0
  %573 = shufflevector <16 x i32> %572, <16 x i32> undef, <16 x i32> zeroinitializer
  %574 = mul <16 x i32> %573, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %575 = add <16 x i32> %571, %574
  %576 = shl i32 %7, 4
  %577 = insertelement <16 x i32> undef, i32 %576, i32 0
  %578 = shufflevector <16 x i32> %577, <16 x i32> undef, <16 x i32> zeroinitializer
  %579 = add nsw i64 %565, -32
  %580 = lshr exact i64 %579, 5
  %581 = add nuw nsw i64 %580, 1
  %582 = and i64 %581, 1
  %583 = icmp eq i64 %579, 0
  br i1 %583, label %615, label %584

584:                                              ; preds = %564
  %585 = sub nuw nsw i64 %581, %582
  br label %586

586:                                              ; preds = %586, %584
  %587 = phi i64 [ 0, %584 ], [ %611, %586 ]
  %588 = phi <16 x i32> [ %575, %584 ], [ %612, %586 ]
  %589 = phi i64 [ %585, %584 ], [ %613, %586 ]
  %590 = or i64 %587, 1
  %591 = add <16 x i32> %588, %578
  %592 = lshr <16 x i32> %588, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %593 = lshr <16 x i32> %591, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %594 = trunc <16 x i32> %592 to <16 x i8>
  %595 = trunc <16 x i32> %593 to <16 x i8>
  %596 = getelementptr inbounds i8, i8* %524, i64 %590
  %597 = bitcast i8* %596 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %597, align 1
  %598 = getelementptr inbounds i8, i8* %596, i64 16
  %599 = bitcast i8* %598 to <16 x i8>*
  store <16 x i8> %595, <16 x i8>* %599, align 1
  %600 = add <16 x i32> %591, %578
  %601 = or i64 %587, 33
  %602 = add <16 x i32> %600, %578
  %603 = lshr <16 x i32> %600, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %604 = lshr <16 x i32> %602, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %605 = trunc <16 x i32> %603 to <16 x i8>
  %606 = trunc <16 x i32> %604 to <16 x i8>
  %607 = getelementptr inbounds i8, i8* %524, i64 %601
  %608 = bitcast i8* %607 to <16 x i8>*
  store <16 x i8> %605, <16 x i8>* %608, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 16
  %610 = bitcast i8* %609 to <16 x i8>*
  store <16 x i8> %606, <16 x i8>* %610, align 1
  %611 = add i64 %587, 64
  %612 = add <16 x i32> %602, %578
  %613 = add i64 %589, -2
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %586, !llvm.loop !40

615:                                              ; preds = %586, %564
  %616 = phi i64 [ 0, %564 ], [ %611, %586 ]
  %617 = phi <16 x i32> [ %575, %564 ], [ %612, %586 ]
  %618 = icmp eq i64 %582, 0
  br i1 %618, label %630, label %619

619:                                              ; preds = %615
  %620 = or i64 %616, 1
  %621 = add <16 x i32> %617, %578
  %622 = lshr <16 x i32> %617, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %623 = lshr <16 x i32> %621, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %624 = trunc <16 x i32> %622 to <16 x i8>
  %625 = trunc <16 x i32> %623 to <16 x i8>
  %626 = getelementptr inbounds i8, i8* %524, i64 %620
  %627 = bitcast i8* %626 to <16 x i8>*
  store <16 x i8> %624, <16 x i8>* %627, align 1
  %628 = getelementptr inbounds i8, i8* %626, i64 16
  %629 = bitcast i8* %628 to <16 x i8>*
  store <16 x i8> %625, <16 x i8>* %629, align 1
  br label %630

630:                                              ; preds = %615, %619
  %631 = icmp eq i64 %559, %565
  br i1 %631, label %632, label %561

632:                                              ; preds = %642, %630, %539
  %633 = ashr i32 %543, 11
  %634 = ashr i32 %7, 11
  %635 = mul i32 %633, %634
  %636 = mul i32 %635, %633
  %637 = lshr i32 %636, 8
  %638 = trunc i32 %637 to i8
  %639 = sub i8 %8, %638
  %640 = sext i32 %541 to i64
  %641 = getelementptr inbounds i8, i8* %524, i64 %640
  store i8 %639, i8* %641, align 1
  br label %651

642:                                              ; preds = %561, %642
  %643 = phi i64 [ %649, %642 ], [ %562, %561 ]
  %644 = phi i32 [ %648, %642 ], [ %563, %561 ]
  %645 = lshr i32 %644, 8
  %646 = trunc i32 %645 to i8
  %647 = getelementptr inbounds i8, i8* %524, i64 %643
  store i8 %646, i8* %647, align 1
  %648 = add nsw i32 %644, %7
  %649 = add nuw nsw i64 %643, 1
  %650 = icmp eq i64 %649, %558
  br i1 %650, label %632, label %642, !llvm.loop !41

651:                                              ; preds = %519, %530, %632
  %652 = icmp slt i32 %488, %17
  br i1 %652, label %653, label %785

653:                                              ; preds = %651
  %654 = sext i32 %15 to i64
  %655 = sext i32 %17 to i64
  %656 = sub nsw i64 %655, %520
  %657 = icmp ult i64 %656, 32
  br i1 %657, label %750, label %658

658:                                              ; preds = %653
  %659 = sub nsw i64 %520, %654
  %660 = getelementptr i8, i8* %79, i64 %659
  %661 = add nsw i64 %655, %520
  %662 = add nsw i64 %661, 1
  %663 = shl nsw i64 %654, 1
  %664 = sub nsw i64 %662, %663
  %665 = getelementptr i8, i8* %79, i64 %664
  %666 = shl nsw i64 %655, 1
  %667 = or i64 %666, 1
  %668 = sub nsw i64 %667, %663
  %669 = getelementptr i8, i8* %79, i64 %668
  %670 = icmp ult i8* %660, %669
  %671 = icmp ult i8* %665, %81
  %672 = and i1 %670, %671
  br i1 %672, label %750, label %673

673:                                              ; preds = %658
  %674 = and i64 %656, -32
  %675 = add nsw i64 %674, %520
  %676 = add nsw i64 %674, -32
  %677 = lshr exact i64 %676, 5
  %678 = add nuw nsw i64 %677, 1
  %679 = and i64 %678, 1
  %680 = icmp eq i64 %676, 0
  br i1 %680, label %726, label %681

681:                                              ; preds = %673
  %682 = sub nuw nsw i64 %678, %679
  br label %683

683:                                              ; preds = %683, %681
  %684 = phi i64 [ 0, %681 ], [ %723, %683 ]
  %685 = phi i64 [ %682, %681 ], [ %724, %683 ]
  %686 = add i64 %684, %520
  %687 = sub nsw i64 %686, %654
  %688 = getelementptr inbounds i8, i8* %79, i64 %687
  %689 = bitcast i8* %688 to <16 x i8>*
  %690 = load <16 x i8>, <16 x i8>* %689, align 1, !alias.scope !42, !noalias !45
  %691 = getelementptr inbounds i8, i8* %688, i64 16
  %692 = bitcast i8* %691 to <16 x i8>*
  %693 = load <16 x i8>, <16 x i8>* %692, align 1, !alias.scope !42, !noalias !45
  %694 = getelementptr inbounds i8, i8* %82, i64 %687
  %695 = bitcast i8* %694 to <16 x i8>*
  %696 = load <16 x i8>, <16 x i8>* %695, align 1, !alias.scope !45
  %697 = getelementptr inbounds i8, i8* %694, i64 16
  %698 = bitcast i8* %697 to <16 x i8>*
  %699 = load <16 x i8>, <16 x i8>* %698, align 1, !alias.scope !45
  %700 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %690, <16 x i8> %696)
  %701 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %693, <16 x i8> %699)
  %702 = bitcast i8* %688 to <16 x i8>*
  store <16 x i8> %700, <16 x i8>* %702, align 1, !alias.scope !42, !noalias !45
  %703 = bitcast i8* %691 to <16 x i8>*
  store <16 x i8> %701, <16 x i8>* %703, align 1, !alias.scope !42, !noalias !45
  %704 = or i64 %684, 32
  %705 = add i64 %704, %520
  %706 = sub nsw i64 %705, %654
  %707 = getelementptr inbounds i8, i8* %79, i64 %706
  %708 = bitcast i8* %707 to <16 x i8>*
  %709 = load <16 x i8>, <16 x i8>* %708, align 1, !alias.scope !42, !noalias !45
  %710 = getelementptr inbounds i8, i8* %707, i64 16
  %711 = bitcast i8* %710 to <16 x i8>*
  %712 = load <16 x i8>, <16 x i8>* %711, align 1, !alias.scope !42, !noalias !45
  %713 = getelementptr inbounds i8, i8* %82, i64 %706
  %714 = bitcast i8* %713 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !alias.scope !45
  %716 = getelementptr inbounds i8, i8* %713, i64 16
  %717 = bitcast i8* %716 to <16 x i8>*
  %718 = load <16 x i8>, <16 x i8>* %717, align 1, !alias.scope !45
  %719 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %709, <16 x i8> %715)
  %720 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %712, <16 x i8> %718)
  %721 = bitcast i8* %707 to <16 x i8>*
  store <16 x i8> %719, <16 x i8>* %721, align 1, !alias.scope !42, !noalias !45
  %722 = bitcast i8* %710 to <16 x i8>*
  store <16 x i8> %720, <16 x i8>* %722, align 1, !alias.scope !42, !noalias !45
  %723 = add i64 %684, 64
  %724 = add i64 %685, -2
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %726, label %683, !llvm.loop !47

726:                                              ; preds = %683, %673
  %727 = phi i64 [ 0, %673 ], [ %723, %683 ]
  %728 = icmp eq i64 %679, 0
  br i1 %728, label %748, label %729

729:                                              ; preds = %726
  %730 = add i64 %727, %520
  %731 = sub nsw i64 %730, %654
  %732 = getelementptr inbounds i8, i8* %79, i64 %731
  %733 = bitcast i8* %732 to <16 x i8>*
  %734 = load <16 x i8>, <16 x i8>* %733, align 1, !alias.scope !42, !noalias !45
  %735 = getelementptr inbounds i8, i8* %732, i64 16
  %736 = bitcast i8* %735 to <16 x i8>*
  %737 = load <16 x i8>, <16 x i8>* %736, align 1, !alias.scope !42, !noalias !45
  %738 = getelementptr inbounds i8, i8* %82, i64 %731
  %739 = bitcast i8* %738 to <16 x i8>*
  %740 = load <16 x i8>, <16 x i8>* %739, align 1, !alias.scope !45
  %741 = getelementptr inbounds i8, i8* %738, i64 16
  %742 = bitcast i8* %741 to <16 x i8>*
  %743 = load <16 x i8>, <16 x i8>* %742, align 1, !alias.scope !45
  %744 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %734, <16 x i8> %740)
  %745 = call <16 x i8> @llvm.usub.sat.v16i8(<16 x i8> %737, <16 x i8> %743)
  %746 = bitcast i8* %732 to <16 x i8>*
  store <16 x i8> %744, <16 x i8>* %746, align 1, !alias.scope !42, !noalias !45
  %747 = bitcast i8* %735 to <16 x i8>*
  store <16 x i8> %745, <16 x i8>* %747, align 1, !alias.scope !42, !noalias !45
  br label %748

748:                                              ; preds = %726, %729
  %749 = icmp eq i64 %656, %674
  br i1 %749, label %785, label %750

750:                                              ; preds = %748, %658, %653
  %751 = phi i64 [ %520, %658 ], [ %520, %653 ], [ %675, %748 ]
  %752 = sub nsw i64 %655, %751
  %753 = xor i64 %751, -1
  %754 = and i64 %752, 1
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %764, label %756

756:                                              ; preds = %750
  %757 = sub nsw i64 %751, %654
  %758 = getelementptr inbounds i8, i8* %79, i64 %757
  %759 = load i8, i8* %758, align 1
  %760 = getelementptr inbounds i8, i8* %82, i64 %757
  %761 = load i8, i8* %760, align 1
  %762 = tail call i8 @llvm.usub.sat.i8(i8 %759, i8 %761)
  store i8 %762, i8* %758, align 1
  %763 = add nsw i64 %751, 1
  br label %764

764:                                              ; preds = %750, %756
  %765 = phi i64 [ %751, %750 ], [ %763, %756 ]
  %766 = sub nsw i64 0, %655
  %767 = icmp eq i64 %753, %766
  br i1 %767, label %785, label %768

768:                                              ; preds = %764, %768
  %769 = phi i64 [ %783, %768 ], [ %765, %764 ]
  %770 = sub nsw i64 %769, %654
  %771 = getelementptr inbounds i8, i8* %79, i64 %770
  %772 = load i8, i8* %771, align 1
  %773 = getelementptr inbounds i8, i8* %82, i64 %770
  %774 = load i8, i8* %773, align 1
  %775 = tail call i8 @llvm.usub.sat.i8(i8 %772, i8 %774)
  store i8 %775, i8* %771, align 1
  %776 = add nsw i64 %769, 1
  %777 = sub nsw i64 %776, %654
  %778 = getelementptr inbounds i8, i8* %79, i64 %777
  %779 = load i8, i8* %778, align 1
  %780 = getelementptr inbounds i8, i8* %82, i64 %777
  %781 = load i8, i8* %780, align 1
  %782 = tail call i8 @llvm.usub.sat.i8(i8 %779, i8 %781)
  store i8 %782, i8* %778, align 1
  %783 = add nsw i64 %769, 2
  %784 = icmp eq i64 %783, %655
  br i1 %784, label %785, label %768, !llvm.loop !48

785:                                              ; preds = %764, %768, %748, %651, %491
  br i1 %10, label %786, label %836

786:                                              ; preds = %785
  br i1 %88, label %787, label %857

787:                                              ; preds = %786
  %788 = sext i32 %15 to i64
  %789 = zext i32 %18 to i64
  %790 = icmp ult i32 %18, 16
  br i1 %790, label %816, label %791

791:                                              ; preds = %787
  %792 = and i64 %789, 4294967280
  br label %793

793:                                              ; preds = %793, %791
  %794 = phi i64 [ 0, %791 ], [ %812, %793 ]
  %795 = add nsw i64 %794, %788
  %796 = getelementptr inbounds i8, i8* %9, i64 %795
  %797 = getelementptr inbounds i8, i8* %79, i64 %794
  %798 = bitcast i8* %797 to <16 x i8>*
  %799 = load <16 x i8>, <16 x i8>* %798, align 1
  %800 = bitcast i8* %796 to <16 x i8>*
  %801 = load <16 x i8>, <16 x i8>* %800, align 1
  %802 = zext <16 x i8> %801 to <16 x i32>
  %803 = zext <16 x i8> %799 to <16 x i32>
  %804 = add nuw nsw <16 x i32> %802, %803
  %805 = lshr <16 x i32> %804, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %806 = sub nsw <16 x i32> %804, %805
  %807 = icmp ult <16 x i32> %804, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %808 = select <16 x i1> %807, <16 x i32> %804, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %809 = select i1 %12, <16 x i32> %808, <16 x i32> %806
  %810 = trunc <16 x i32> %809 to <16 x i8>
  %811 = bitcast i8* %796 to <16 x i8>*
  store <16 x i8> %810, <16 x i8>* %811, align 1
  %812 = add i64 %794, 16
  %813 = icmp eq i64 %812, %792
  br i1 %813, label %814, label %793, !llvm.loop !49

814:                                              ; preds = %793
  %815 = icmp eq i64 %792, %789
  br i1 %815, label %854, label %816

816:                                              ; preds = %814, %787
  %817 = phi i64 [ 0, %787 ], [ %792, %814 ]
  br label %818

818:                                              ; preds = %816, %818
  %819 = phi i64 [ %834, %818 ], [ %817, %816 ]
  %820 = add nsw i64 %819, %788
  %821 = getelementptr inbounds i8, i8* %9, i64 %820
  %822 = getelementptr inbounds i8, i8* %79, i64 %819
  %823 = load i8, i8* %822, align 1
  %824 = load i8, i8* %821, align 1
  %825 = zext i8 %824 to i32
  %826 = zext i8 %823 to i32
  %827 = add nuw nsw i32 %825, %826
  %828 = lshr i32 %827, 8
  %829 = sub nsw i32 %827, %828
  %830 = icmp ult i32 %827, 255
  %831 = select i1 %830, i32 %827, i32 255
  %832 = select i1 %12, i32 %831, i32 %829
  %833 = trunc i32 %832 to i8
  store i8 %833, i8* %821, align 1
  %834 = add nuw nsw i64 %819, 1
  %835 = icmp eq i64 %834, %789
  br i1 %835, label %854, label %818, !llvm.loop !50

836:                                              ; preds = %785
  %837 = icmp ne i8 %8, -1
  %838 = or i1 %837, %11
  br i1 %838, label %849, label %839

839:                                              ; preds = %836
  %840 = bitcast %class.AdditiveBlitter* %0 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %841 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %840, align 8
  %842 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %841, i64 14
  %843 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %842, align 8
  %844 = tail call %class.SkBlitter* %843(%class.AdditiveBlitter* %0, i1 zeroext false) #13
  %845 = bitcast %class.SkBlitter* %844 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %846 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %845, align 8
  %847 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %846, i64 3
  %848 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %847, align 8
  call void %848(%class.SkBlitter* %844, i32 %15, i32 %1, i8* %79, i16* %87) #13
  br label %854

849:                                              ; preds = %836
  %850 = bitcast %class.AdditiveBlitter* %0 to void (%class.AdditiveBlitter*, i32, i32, i8*, i32)***
  %851 = load void (%class.AdditiveBlitter*, i32, i32, i8*, i32)**, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*** %850, align 8
  %852 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)** %851, i64 15
  %853 = load void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)** %852, align 8
  call void %853(%class.AdditiveBlitter* %0, i32 %15, i32 %1, i8* %79, i32 %18) #13
  br label %854

854:                                              ; preds = %818, %814, %839, %849
  %855 = icmp sgt i32 %18, 31
  br i1 %855, label %856, label %857

856:                                              ; preds = %854
  call void @_ZdaPv(i8* %79) #15
  br label %857

857:                                              ; preds = %786, %856, %854
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %71) #13
  br label %858

858:                                              ; preds = %60, %50, %45, %41, %32, %857
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge*, i32, i32, i32, %class.AdditiveBlitter*, i8* nocapture, i1 zeroext, i1 zeroext, i32, i32) unnamed_addr #0 {
  %11 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 2
  %12 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %11, align 8
  %13 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = ashr i32 %14, 16
  %16 = and i32 %14, -65536
  %17 = sub nsw i32 %1, %16
  %18 = mul nsw i32 %17, 255
  %19 = add nsw i32 %18, 32768
  %20 = lshr i32 %19, 16
  %21 = trunc i32 %20 to i8
  %22 = sub nsw i32 %14, %16
  %23 = mul nsw i32 %22, 255
  %24 = add nsw i32 %23, 32768
  %25 = lshr i32 %24, 16
  %26 = trunc i32 %25 to i8
  %27 = sub i8 %21, %26
  %28 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, %8
  %31 = select i1 %30, i32 %8, i32 %29
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 10
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, %9
  %35 = select i1 %34, i32 %9, i32 %33
  %36 = icmp slt i32 %2, %8
  %37 = select i1 %36, i32 %8, i32 %2
  %38 = icmp slt i32 %9, %3
  %39 = select i1 %38, i32 %9, i32 %3
  %40 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 12
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 12
  %43 = load i32, i32* %42, align 4
  br i1 %7, label %92, label %44

44:                                               ; preds = %10
  %45 = icmp eq i8 %27, -1
  br i1 %45, label %46, label %92

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 1
  %48 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %47, align 8
  %49 = icmp ne %struct.SkAnalyticEdge* %0, null
  %50 = icmp ne %struct.SkAnalyticEdge* %48, null
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %69

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = icmp slt i32 %54, %1
  br i1 %55, label %56, label %69

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %48, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 65536
  %60 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, 0
  %65 = sub nsw i32 0, %63
  %66 = select i1 %64, i32 %65, i32 %63
  %67 = sub nsw i32 %61, %66
  %68 = icmp slt i32 %59, %67
  br i1 %68, label %69, label %92

69:                                               ; preds = %56, %46, %52
  %70 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 0
  %71 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %70, align 8
  %72 = icmp ne %struct.SkAnalyticEdge* %71, null
  %73 = icmp ne %struct.SkAnalyticEdge* %12, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %92

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %71, i64 0, i32 7
  %77 = load i32, i32* %76, align 8
  %78 = icmp slt i32 %77, %1
  br i1 %78, label %79, label %92

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add nsw i32 %81, 65536
  %83 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %71, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %71, i64 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, 0
  %88 = sub nsw i32 0, %86
  %89 = select i1 %87, i32 %88, i32 %86
  %90 = sub nsw i32 %84, %89
  %91 = icmp sge i32 %82, %90
  br label %92

92:                                               ; preds = %56, %79, %75, %69, %44, %10
  %93 = phi i1 [ true, %10 ], [ false, %44 ], [ true, %56 ], [ false, %75 ], [ false, %69 ], [ %91, %79 ]
  %94 = icmp sgt i32 %31, %35
  br i1 %94, label %455, label %95

95:                                               ; preds = %92
  %96 = icmp sgt i32 %37, %39
  br i1 %96, label %97, label %110

97:                                               ; preds = %95
  %98 = icmp sgt i32 %31, %37
  %99 = select i1 %98, i32 %37, i32 %31
  %100 = select i1 %98, i32 %31, i32 %37
  %101 = icmp sgt i32 %35, %39
  %102 = select i1 %101, i32 %39, i32 %35
  %103 = select i1 %101, i32 %35, i32 %39
  %104 = icmp slt i32 %99, %102
  %105 = select i1 %104, i32 %102, i32 %99
  %106 = icmp slt i32 %103, %100
  %107 = select i1 %106, i32 %103, i32 %100
  %108 = add nsw i32 %105, %107
  %109 = sdiv i32 %108, 2
  br label %110

110:                                              ; preds = %97, %95
  %111 = phi i32 [ %109, %97 ], [ %37, %95 ]
  %112 = phi i32 [ %109, %97 ], [ %39, %95 ]
  %113 = icmp eq i32 %31, %35
  %114 = icmp eq i32 %111, %112
  %115 = and i1 %113, %114
  br i1 %115, label %455, label %116

116:                                              ; preds = %110
  %117 = icmp slt i32 %111, %31
  %118 = select i1 %117, i32 %111, i32 %31
  %119 = select i1 %117, i32 %31, i32 %111
  %120 = icmp slt i32 %112, %35
  %121 = select i1 %120, i32 %112, i32 %35
  %122 = select i1 %120, i32 %35, i32 %112
  %123 = add nsw i32 %119, 65535
  %124 = and i32 %123, -65536
  %125 = and i32 %121, -65536
  %126 = icmp slt i32 %125, %124
  br i1 %126, label %454, label %127

127:                                              ; preds = %116
  %128 = icmp sgt i32 %124, %118
  br i1 %128, label %129, label %241

129:                                              ; preds = %127
  %130 = sub nsw i32 %124, %118
  %131 = add nsw i32 %130, 65535
  %132 = ashr i32 %131, 16
  switch i32 %132, label %240 [
    i32 1, label %133
    i32 2, label %178
  ]

133:                                              ; preds = %129
  %134 = sub i32 %124, %119
  %135 = add nsw i32 %134, %130
  %136 = sdiv i32 %135, 2
  %137 = lshr i32 %136, 8
  %138 = trunc i32 %137 to i8
  %139 = ashr i32 %118, 16
  %140 = icmp ne i8 %27, -1
  %141 = or i1 %140, %93
  br i1 %6, label %142, label %157

142:                                              ; preds = %133
  %143 = sext i32 %139 to i64
  %144 = getelementptr inbounds i8, i8* %5, i64 %143
  br i1 %141, label %146, label %145

145:                                              ; preds = %142
  store i8 %138, i8* %144, align 1
  br label %241

146:                                              ; preds = %142
  %147 = and i32 %137, 255
  %148 = zext i8 %27 to i32
  %149 = mul nuw nsw i32 %147, %148
  %150 = lshr i32 %149, 8
  %151 = load i8, i8* %144, align 1
  %152 = zext i8 %151 to i32
  %153 = add nuw nsw i32 %150, %152
  %154 = icmp ult i32 %153, 255
  %155 = select i1 %154, i32 %153, i32 255
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %144, align 1
  br label %241

157:                                              ; preds = %133
  br i1 %141, label %168, label %158

158:                                              ; preds = %157
  %159 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %160 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %159, align 8
  %161 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %160, i64 14
  %162 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %161, align 8
  %163 = tail call %class.SkBlitter* %162(%class.AdditiveBlitter* %4, i1 zeroext false) #13
  %164 = bitcast %class.SkBlitter* %163 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %165 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %164, align 8
  %166 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %165, i64 4
  %167 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %166, align 8
  tail call void %167(%class.SkBlitter* %163, i32 %139, i32 %15, i32 1, i8 zeroext %138) #13
  br label %241

168:                                              ; preds = %157
  %169 = and i32 %137, 255
  %170 = zext i8 %27 to i32
  %171 = mul nuw nsw i32 %169, %170
  %172 = lshr i32 %171, 8
  %173 = trunc i32 %172 to i8
  %174 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %175 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %174, align 8
  %176 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %175, i64 16
  %177 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %176, align 8
  tail call void %177(%class.AdditiveBlitter* %4, i32 %139, i32 %15, i8 zeroext %173) #13
  br label %241

178:                                              ; preds = %129
  %179 = sub i32 -65536, %118
  %180 = add i32 %124, %179
  %181 = sub i32 %119, %118
  %182 = sub i32 %181, %180
  %183 = ashr i32 %180, 11
  %184 = ashr i32 %41, 11
  %185 = mul i32 %183, %184
  %186 = mul i32 %185, %183
  %187 = lshr i32 %186, 8
  %188 = trunc i32 %187 to i8
  %189 = ashr i32 %182, 11
  %190 = mul i32 %189, %184
  %191 = mul i32 %190, %189
  %192 = lshr i32 %191, 8
  %193 = trunc i32 %192 to i8
  %194 = sub i8 %27, %193
  %195 = ashr i32 %118, 16
  br i1 %6, label %196, label %216

196:                                              ; preds = %178
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds i8, i8* %5, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = and i32 %187, 255
  %202 = add nuw nsw i32 %201, %200
  %203 = icmp ult i32 %202, 255
  %204 = select i1 %203, i32 %202, i32 255
  %205 = trunc i32 %204 to i8
  store i8 %205, i8* %198, align 1
  %206 = add nsw i32 %195, 1
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %5, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = zext i8 %194 to i32
  %212 = add nuw nsw i32 %210, %211
  %213 = icmp ult i32 %212, 255
  %214 = select i1 %213, i32 %212, i32 255
  %215 = trunc i32 %214 to i8
  store i8 %215, i8* %208, align 1
  br label %241

216:                                              ; preds = %178
  %217 = icmp ne i8 %27, -1
  %218 = or i1 %217, %93
  br i1 %218, label %231, label %219

219:                                              ; preds = %216
  %220 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %221 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %220, align 8
  %222 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %221, i64 14
  %223 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %222, align 8
  %224 = tail call %class.SkBlitter* %223(%class.AdditiveBlitter* %4, i1 zeroext false) #13
  %225 = and i32 %187, 255
  %226 = zext i8 %194 to i32
  %227 = bitcast %class.SkBlitter* %224 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %228 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %227, align 8
  %229 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %228, i64 9
  %230 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %229, align 8
  tail call void %230(%class.SkBlitter* %224, i32 %195, i32 %15, i32 %225, i32 %226) #13
  br label %241

231:                                              ; preds = %216
  %232 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %233 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %232, align 8
  %234 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %233, i64 16
  %235 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %234, align 8
  tail call void %235(%class.AdditiveBlitter* %4, i32 %195, i32 %15, i8 zeroext %188) #13
  %236 = add nsw i32 %195, 1
  %237 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %232, align 8
  %238 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %237, i64 16
  %239 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %238, align 8
  tail call void %239(%class.AdditiveBlitter* %4, i32 %236, i32 %15, i8 zeroext %194) #13
  br label %241

240:                                              ; preds = %129
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %118, i32 %124, i32 %119, i32 %124, i32 %41, i32 2147483647, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %93, i1 zeroext true) #13
  br label %241

241:                                              ; preds = %240, %231, %219, %196, %168, %158, %146, %145, %127
  %242 = icmp sgt i32 %125, %124
  br i1 %242, label %243, label %340

243:                                              ; preds = %241
  %244 = ashr i32 %123, 16
  %245 = sub nsw i32 %125, %124
  %246 = ashr exact i32 %245, 16
  br i1 %6, label %247, label %322

247:                                              ; preds = %243
  %248 = icmp sgt i32 %245, 0
  br i1 %248, label %249, label %340

249:                                              ; preds = %247
  %250 = zext i8 %27 to i32
  %251 = sext i32 %244 to i64
  %252 = zext i32 %246 to i64
  %253 = icmp ult i32 %246, 16
  br i1 %253, label %308, label %254

254:                                              ; preds = %249
  %255 = and i64 %252, 4294967280
  %256 = insertelement <16 x i32> undef, i32 %250, i32 0
  %257 = shufflevector <16 x i32> %256, <16 x i32> undef, <16 x i32> zeroinitializer
  %258 = add nsw i64 %255, -16
  %259 = lshr exact i64 %258, 4
  %260 = add nuw nsw i64 %259, 1
  %261 = and i64 %260, 1
  %262 = icmp eq i64 %258, 0
  br i1 %262, label %292, label %263

263:                                              ; preds = %254
  %264 = sub nuw nsw i64 %260, %261
  br label %265

265:                                              ; preds = %265, %263
  %266 = phi i64 [ 0, %263 ], [ %289, %265 ]
  %267 = phi i64 [ %264, %263 ], [ %290, %265 ]
  %268 = add nsw i64 %266, %251
  %269 = getelementptr inbounds i8, i8* %5, i64 %268
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1
  %272 = zext <16 x i8> %271 to <16 x i32>
  %273 = add nuw nsw <16 x i32> %257, %272
  %274 = icmp ult <16 x i32> %273, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %275 = select <16 x i1> %274, <16 x i32> %273, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %276 = trunc <16 x i32> %275 to <16 x i8>
  %277 = bitcast i8* %269 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %277, align 1
  %278 = or i64 %266, 16
  %279 = add nsw i64 %278, %251
  %280 = getelementptr inbounds i8, i8* %5, i64 %279
  %281 = bitcast i8* %280 to <16 x i8>*
  %282 = load <16 x i8>, <16 x i8>* %281, align 1
  %283 = zext <16 x i8> %282 to <16 x i32>
  %284 = add nuw nsw <16 x i32> %257, %283
  %285 = icmp ult <16 x i32> %284, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %286 = select <16 x i1> %285, <16 x i32> %284, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %287 = trunc <16 x i32> %286 to <16 x i8>
  %288 = bitcast i8* %280 to <16 x i8>*
  store <16 x i8> %287, <16 x i8>* %288, align 1
  %289 = add i64 %266, 32
  %290 = add i64 %267, -2
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %265, !llvm.loop !51

292:                                              ; preds = %265, %254
  %293 = phi i64 [ 0, %254 ], [ %289, %265 ]
  %294 = icmp eq i64 %261, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %292
  %296 = add nsw i64 %293, %251
  %297 = getelementptr inbounds i8, i8* %5, i64 %296
  %298 = bitcast i8* %297 to <16 x i8>*
  %299 = load <16 x i8>, <16 x i8>* %298, align 1
  %300 = zext <16 x i8> %299 to <16 x i32>
  %301 = add nuw nsw <16 x i32> %257, %300
  %302 = icmp ult <16 x i32> %301, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %303 = select <16 x i1> %302, <16 x i32> %301, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %304 = trunc <16 x i32> %303 to <16 x i8>
  %305 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %304, <16 x i8>* %305, align 1
  br label %306

306:                                              ; preds = %292, %295
  %307 = icmp eq i64 %255, %252
  br i1 %307, label %340, label %308

308:                                              ; preds = %306, %249
  %309 = phi i64 [ 0, %249 ], [ %255, %306 ]
  br label %310

310:                                              ; preds = %308, %310
  %311 = phi i64 [ %320, %310 ], [ %309, %308 ]
  %312 = add nsw i64 %311, %251
  %313 = getelementptr inbounds i8, i8* %5, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = add nuw nsw i32 %315, %250
  %317 = icmp ult i32 %316, 255
  %318 = select i1 %317, i32 %316, i32 255
  %319 = trunc i32 %318 to i8
  store i8 %319, i8* %313, align 1
  %320 = add nuw nsw i64 %311, 1
  %321 = icmp eq i64 %320, %252
  br i1 %321, label %340, label %310, !llvm.loop !52

322:                                              ; preds = %243
  %323 = icmp ne i8 %27, -1
  %324 = or i1 %323, %93
  br i1 %324, label %335, label %325

325:                                              ; preds = %322
  %326 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %327 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %326, align 8
  %328 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %327, i64 14
  %329 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %328, align 8
  %330 = tail call %class.SkBlitter* %329(%class.AdditiveBlitter* %4, i1 zeroext false) #13
  %331 = bitcast %class.SkBlitter* %330 to void (%class.SkBlitter*, i32, i32, i32)***
  %332 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %331, align 8
  %333 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %332, i64 2
  %334 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %333, align 8
  tail call void %334(%class.SkBlitter* %330, i32 %244, i32 %15, i32 %246) #13
  br label %340

335:                                              ; preds = %322
  %336 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %337 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %336, align 8
  %338 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %337, i64 17
  %339 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %338, align 8
  tail call void %339(%class.AdditiveBlitter* %4, i32 %244, i32 %15, i32 %246, i8 zeroext %27) #13
  br label %340

340:                                              ; preds = %310, %306, %335, %325, %247, %241
  %341 = icmp sgt i32 %122, %125
  br i1 %341, label %342, label %455

342:                                              ; preds = %340
  %343 = sub nsw i32 %122, %125
  %344 = add nsw i32 %343, 65535
  %345 = ashr i32 %344, 16
  switch i32 %345, label %453 [
    i32 1, label %346
    i32 2, label %391
  ]

346:                                              ; preds = %342
  %347 = sub i32 %121, %125
  %348 = add nsw i32 %347, %343
  %349 = sdiv i32 %348, 2
  %350 = lshr i32 %349, 8
  %351 = trunc i32 %350 to i8
  %352 = ashr i32 %121, 16
  %353 = icmp ne i8 %27, -1
  %354 = or i1 %353, %93
  br i1 %6, label %355, label %370

355:                                              ; preds = %346
  %356 = sext i32 %352 to i64
  %357 = getelementptr inbounds i8, i8* %5, i64 %356
  br i1 %354, label %359, label %358

358:                                              ; preds = %355
  store i8 %351, i8* %357, align 1
  br label %455

359:                                              ; preds = %355
  %360 = and i32 %350, 255
  %361 = zext i8 %27 to i32
  %362 = mul nuw nsw i32 %360, %361
  %363 = lshr i32 %362, 8
  %364 = load i8, i8* %357, align 1
  %365 = zext i8 %364 to i32
  %366 = add nuw nsw i32 %363, %365
  %367 = icmp ult i32 %366, 255
  %368 = select i1 %367, i32 %366, i32 255
  %369 = trunc i32 %368 to i8
  store i8 %369, i8* %357, align 1
  br label %455

370:                                              ; preds = %346
  br i1 %354, label %381, label %371

371:                                              ; preds = %370
  %372 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %373 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %372, align 8
  %374 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %373, i64 14
  %375 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %374, align 8
  %376 = tail call %class.SkBlitter* %375(%class.AdditiveBlitter* %4, i1 zeroext false) #13
  %377 = bitcast %class.SkBlitter* %376 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %378 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %377, align 8
  %379 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %378, i64 4
  %380 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %379, align 8
  tail call void %380(%class.SkBlitter* %376, i32 %352, i32 %15, i32 1, i8 zeroext %351) #13
  br label %455

381:                                              ; preds = %370
  %382 = and i32 %350, 255
  %383 = zext i8 %27 to i32
  %384 = mul nuw nsw i32 %382, %383
  %385 = lshr i32 %384, 8
  %386 = trunc i32 %385 to i8
  %387 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %388 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %387, align 8
  %389 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %388, i64 16
  %390 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %389, align 8
  tail call void %390(%class.AdditiveBlitter* %4, i32 %352, i32 %15, i8 zeroext %386) #13
  br label %455

391:                                              ; preds = %342
  %392 = sub i32 65536, %121
  %393 = add i32 %392, %125
  %394 = sub i32 %122, %121
  %395 = sub i32 %394, %393
  %396 = ashr i32 %393, 11
  %397 = ashr i32 %43, 11
  %398 = mul i32 %396, %397
  %399 = mul i32 %398, %396
  %400 = lshr i32 %399, 8
  %401 = trunc i32 %400 to i8
  %402 = sub i8 %27, %401
  %403 = ashr i32 %395, 11
  %404 = mul i32 %403, %397
  %405 = mul i32 %404, %403
  %406 = lshr i32 %405, 8
  %407 = trunc i32 %406 to i8
  %408 = ashr i32 %121, 16
  br i1 %6, label %409, label %429

409:                                              ; preds = %391
  %410 = sext i32 %408 to i64
  %411 = getelementptr inbounds i8, i8* %5, i64 %410
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i32
  %414 = zext i8 %402 to i32
  %415 = add nuw nsw i32 %413, %414
  %416 = icmp ult i32 %415, 255
  %417 = select i1 %416, i32 %415, i32 255
  %418 = trunc i32 %417 to i8
  store i8 %418, i8* %411, align 1
  %419 = add nsw i32 %408, 1
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, i8* %5, i64 %420
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = and i32 %406, 255
  %425 = add nuw nsw i32 %424, %423
  %426 = icmp ult i32 %425, 255
  %427 = select i1 %426, i32 %425, i32 255
  %428 = trunc i32 %427 to i8
  store i8 %428, i8* %421, align 1
  br label %455

429:                                              ; preds = %391
  %430 = icmp ne i8 %27, -1
  %431 = or i1 %430, %93
  br i1 %431, label %444, label %432

432:                                              ; preds = %429
  %433 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %434 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %433, align 8
  %435 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %434, i64 14
  %436 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %435, align 8
  %437 = tail call %class.SkBlitter* %436(%class.AdditiveBlitter* %4, i1 zeroext false) #13
  %438 = zext i8 %402 to i32
  %439 = and i32 %406, 255
  %440 = bitcast %class.SkBlitter* %437 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %441 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %440, align 8
  %442 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %441, i64 9
  %443 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %442, align 8
  tail call void %443(%class.SkBlitter* %437, i32 %408, i32 %15, i32 %438, i32 %439) #13
  br label %455

444:                                              ; preds = %429
  %445 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %446 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %445, align 8
  %447 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %446, i64 16
  %448 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %447, align 8
  tail call void %448(%class.AdditiveBlitter* %4, i32 %408, i32 %15, i8 zeroext %402) #13
  %449 = add nsw i32 %408, 1
  %450 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %445, align 8
  %451 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %450, i64 16
  %452 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %451, align 8
  tail call void %452(%class.AdditiveBlitter* %4, i32 %449, i32 %15, i8 zeroext %407) #13
  br label %455

453:                                              ; preds = %342
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %125, i32 %121, i32 %125, i32 %122, i32 2147483647, i32 %43, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %93, i1 zeroext true) #13
  br label %455

454:                                              ; preds = %116
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %118, i32 %121, i32 %119, i32 %122, i32 %41, i32 %43, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %93, i1 zeroext true) #13
  br label %455

455:                                              ; preds = %92, %110, %340, %358, %359, %371, %381, %409, %432, %444, %453, %454
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %11, align 8
  ret void
}

declare zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge*, i1 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge*) local_unnamed_addr #5

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare i8 @llvm.usub.sat.i8(i8, i8) #9

; Function Attrs: nounwind readnone speculatable
declare <16 x i8> @llvm.usub.sat.v16i8(<16 x i8>, <16 x i8>) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = !{i32 0, i32 33}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !5, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !5, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !5, !3}
!22 = distinct !{!22, !7}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !7}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !5, !3}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !5, !3}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !3}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !5, !3}
!51 = distinct !{!51, !3}
!52 = distinct !{!52, !5, !3}
