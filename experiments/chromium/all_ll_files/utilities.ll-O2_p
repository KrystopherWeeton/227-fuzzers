; ModuleID = '../../third_party/angle/src/common/utilities.cpp'
source_filename = "../../third_party/angle/src/common/utilities.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [15 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.angle::BitSetT" = type { i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str.1 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"bvec2\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"bvec3\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"bvec4\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"ivec2\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"ivec3\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"ivec4\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"uvec2\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"uvec3\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"uvec4\00", align 1
@_ZN2gl4priv10gLineModesE = hidden local_unnamed_addr constant %"class.angle::PackedEnumMap" { %"struct.std::__1::array" { [15 x i8] c"\00\01\01\01\00\00\00\00\00\00\00\01\00\00\00" } }, align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"gl_\00", align 1
@_ZZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kZERO_ELEMENT = internal constant [4 x i8] c"[0]\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Invalid enum.\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"Invalid value.\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"Invalid operation.\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"Stack overflow.\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"Stack underflow.\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"Out of memory.\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"Invalid framebuffer operation.\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"Unknown error.\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"API\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"Window System\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"Shader Compiler\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"Third Party\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"Application\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"Unknown Source\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"Deprecated behavior\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"Undefined behavior\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"Portability\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"Performance\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"Marker\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"Unknown Type\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"High\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"Medium\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"Low\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"Notification\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"Unknown Severity\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"Not initialized.\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"Bad access.\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"Bad allocation.\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"Bad attribute.\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"Bad config.\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"Bad context.\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"Bad current surface.\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"Bad display.\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"Bad match.\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"Bad native window.\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"Bad native pixmap.\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"Bad parameter.\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"Bad surface.\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"Context lost.\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"Bad stream.\00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"Bad state.\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"Bad device.\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@switch.table._ZN2gl19TransposeMatrixTypeEj = private unnamed_addr constant [17 x i32] [i32 35674, i32 35675, i32 35676, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 35687, i32 35689, i32 35685, i32 35690, i32 35686, i32 35688], align 4
@switch.table._ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE = private unnamed_addr constant [3 x i32] [i32 255, i32 65535, i32 -1], align 4
@switch.table._ZN2gl15ElementTypeSizeEj = private unnamed_addr constant [5 x i32] [i32 1, i32 0, i32 2, i32 0, i32 4], align 4
@switch.table._ZN2gl27GetDebugMessageSourceStringEj = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)], align 8
@switch.table._ZN2gl25GetBitfieldFromShaderTypeENS_10ShaderTypeE = private unnamed_addr constant [6 x i32] [i32 1, i32 8, i32 16, i32 4, i32 2, i32 32], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl22VariableComponentCountEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0)
  %3 = tail call i32 @_ZN2gl19VariableColumnCountEj(i32 %0)
  %4 = mul nsw i32 %3, %2
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl16VariableRowCountEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %6 [
    i32 35688, label %5
    i32 35670, label %2
    i32 5126, label %2
    i32 5124, label %2
    i32 5125, label %2
    i32 35671, label %2
    i32 35664, label %2
    i32 35667, label %2
    i32 36294, label %2
    i32 35672, label %2
    i32 35665, label %2
    i32 35668, label %2
    i32 36295, label %2
    i32 35673, label %2
    i32 35666, label %2
    i32 35669, label %2
    i32 36296, label %2
    i32 35678, label %2
    i32 35679, label %2
    i32 35680, label %2
    i32 36289, label %2
    i32 36198, label %2
    i32 35683, label %2
    i32 37128, label %2
    i32 37131, label %2
    i32 36876, label %2
    i32 36290, label %2
    i32 36298, label %2
    i32 36299, label %2
    i32 36300, label %2
    i32 36303, label %2
    i32 37129, label %2
    i32 37132, label %2
    i32 36878, label %2
    i32 36304, label %2
    i32 36306, label %2
    i32 36307, label %2
    i32 36308, label %2
    i32 36311, label %2
    i32 37130, label %2
    i32 37133, label %2
    i32 36879, label %2
    i32 36312, label %2
    i32 35682, label %2
    i32 36293, label %2
    i32 36292, label %2
    i32 36877, label %2
    i32 36941, label %2
    i32 36952, label %2
    i32 36963, label %2
    i32 36947, label %2
    i32 36958, label %2
    i32 36969, label %2
    i32 36942, label %2
    i32 36953, label %2
    i32 36964, label %2
    i32 36944, label %2
    i32 36955, label %2
    i32 36966, label %2
    i32 37595, label %2
    i32 36948, label %2
    i32 36959, label %2
    i32 36970, label %2
    i32 36945, label %2
    i32 36956, label %2
    i32 36967, label %2
    i32 37449, label %2
    i32 35815, label %2
    i32 35674, label %3
    i32 35687, label %3
    i32 35689, label %3
    i32 35675, label %4
    i32 35685, label %4
    i32 35690, label %4
    i32 35676, label %5
    i32 35686, label %5
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

3:                                                ; preds = %1, %1, %1
  br label %6

4:                                                ; preds = %1, %1, %1
  br label %6

5:                                                ; preds = %1, %1, %1
  br label %6

6:                                                ; preds = %1, %5, %4, %3, %2
  %7 = phi i32 [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl19VariableColumnCountEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %6 [
    i32 35690, label %5
    i32 35670, label %2
    i32 5126, label %2
    i32 5124, label %2
    i32 5125, label %2
    i32 35678, label %2
    i32 35679, label %2
    i32 35680, label %2
    i32 36289, label %2
    i32 37128, label %2
    i32 37131, label %2
    i32 36876, label %2
    i32 36290, label %2
    i32 36298, label %2
    i32 36299, label %2
    i32 36300, label %2
    i32 36303, label %2
    i32 37129, label %2
    i32 37132, label %2
    i32 36878, label %2
    i32 36304, label %2
    i32 36198, label %2
    i32 35683, label %2
    i32 36306, label %2
    i32 36307, label %2
    i32 36308, label %2
    i32 36311, label %2
    i32 37130, label %2
    i32 37133, label %2
    i32 36879, label %2
    i32 36312, label %2
    i32 35682, label %2
    i32 36293, label %2
    i32 36292, label %2
    i32 36877, label %2
    i32 36941, label %2
    i32 36952, label %2
    i32 36963, label %2
    i32 36942, label %2
    i32 36953, label %2
    i32 36964, label %2
    i32 36947, label %2
    i32 36958, label %2
    i32 36969, label %2
    i32 36948, label %2
    i32 36959, label %2
    i32 36970, label %2
    i32 36945, label %2
    i32 36956, label %2
    i32 36967, label %2
    i32 36944, label %2
    i32 36955, label %2
    i32 36966, label %2
    i32 37595, label %2
    i32 37449, label %2
    i32 35815, label %2
    i32 35671, label %3
    i32 35664, label %3
    i32 35667, label %3
    i32 36294, label %3
    i32 35674, label %3
    i32 35685, label %3
    i32 35686, label %3
    i32 35672, label %4
    i32 35665, label %4
    i32 35668, label %4
    i32 36295, label %4
    i32 35675, label %4
    i32 35687, label %4
    i32 35688, label %4
    i32 35673, label %5
    i32 35666, label %5
    i32 35669, label %5
    i32 36296, label %5
    i32 35676, label %5
    i32 35689, label %5
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %6

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %6

6:                                                ; preds = %1, %5, %4, %3, %2
  %7 = phi i32 [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl21VariableComponentTypeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %5 [
    i32 35670, label %6
    i32 35671, label %6
    i32 35672, label %6
    i32 35673, label %6
    i32 5126, label %2
    i32 35664, label %2
    i32 35665, label %2
    i32 35666, label %2
    i32 35674, label %2
    i32 35675, label %2
    i32 35676, label %2
    i32 35685, label %2
    i32 35687, label %2
    i32 35686, label %2
    i32 35689, label %2
    i32 35688, label %2
    i32 35690, label %2
    i32 5124, label %3
    i32 35678, label %3
    i32 35683, label %3
    i32 35679, label %3
    i32 35680, label %3
    i32 36289, label %3
    i32 36198, label %3
    i32 37128, label %3
    i32 37131, label %3
    i32 36298, label %3
    i32 36299, label %3
    i32 36300, label %3
    i32 36303, label %3
    i32 37129, label %3
    i32 37132, label %3
    i32 36306, label %3
    i32 36307, label %3
    i32 36308, label %3
    i32 36311, label %3
    i32 37130, label %3
    i32 37133, label %3
    i32 35682, label %3
    i32 36293, label %3
    i32 36292, label %3
    i32 35667, label %3
    i32 35668, label %3
    i32 35669, label %3
    i32 36941, label %3
    i32 36952, label %3
    i32 36963, label %3
    i32 36942, label %3
    i32 36953, label %3
    i32 36964, label %3
    i32 36947, label %3
    i32 36958, label %3
    i32 36969, label %3
    i32 36944, label %3
    i32 36955, label %3
    i32 36966, label %3
    i32 36948, label %3
    i32 36959, label %3
    i32 36970, label %3
    i32 36945, label %3
    i32 36956, label %3
    i32 36967, label %3
    i32 37595, label %3
    i32 37449, label %3
    i32 35815, label %3
    i32 5125, label %4
    i32 36294, label %4
    i32 36295, label %4
    i32 36296, label %4
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

4:                                                ; preds = %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %1, %1, %1, %1, %5, %4, %3, %2
  %7 = phi i32 [ 0, %5 ], [ 5125, %4 ], [ 5124, %3 ], [ 5126, %2 ], [ 35670, %1 ], [ 35670, %1 ], [ 35670, %1 ], [ 35670, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl21VariableComponentSizeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 35670, label %3
    i32 5126, label %3
    i32 5124, label %3
    i32 5125, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %2
  %4 = phi i64 [ 0, %2 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ]
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl20VariableInternalSizeEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl21VariableComponentTypeEj(i32 %0)
  switch i32 %2, label %3 [
    i32 35670, label %4
    i32 5126, label %4
    i32 5124, label %4
    i32 5125, label %4
  ]

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %3
  %5 = phi i64 [ 0, %3 ], [ 16, %1 ], [ 16, %1 ], [ 16, %1 ], [ 16, %1 ]
  %6 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0)
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %5, %7
  ret i64 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl20VariableExternalSizeEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl21VariableComponentTypeEj(i32 %0)
  switch i32 %2, label %3 [
    i32 35670, label %4
    i32 5126, label %4
    i32 5124, label %4
    i32 5125, label %4
  ]

3:                                                ; preds = %1
  br label %4

4:                                                ; preds = %1, %1, %1, %1, %3
  %5 = phi i64 [ 0, %3 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ]
  %6 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0) #16
  %7 = tail call i32 @_ZN2gl19VariableColumnCountEj(i32 %0) #16
  %8 = mul nsw i32 %7, %6
  %9 = sext i32 %8 to i64
  %10 = mul nsw i64 %5, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17GetGLSLTypeStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #1 {
  switch i32 %1, label %106 [
    i32 35670, label %3
    i32 5124, label %9
    i32 5125, label %14
    i32 5126, label %20
    i32 35671, label %25
    i32 35672, label %30
    i32 35673, label %35
    i32 35667, label %40
    i32 35668, label %45
    i32 35669, label %50
    i32 35664, label %55
    i32 35665, label %61
    i32 35666, label %67
    i32 36294, label %73
    i32 36295, label %78
    i32 36296, label %83
    i32 35674, label %88
    i32 35675, label %94
    i32 35676, label %100
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 4, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819242338, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %8, align 4
  br label %132

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 3, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #16
  %13 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 0, i8* %13, align 1
  br label %132

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 4, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1953393013, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  store i8 0, i8* %19, align 4
  br label %132

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 5, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5, i1 false) #16
  %24 = getelementptr inbounds i8, i8* %23, i64 5
  store i8 0, i8* %24, align 1
  br label %132

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 5, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #16
  %29 = getelementptr inbounds i8, i8* %28, i64 5
  store i8 0, i8* %29, align 1
  br label %132

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 5, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5, i1 false) #16
  %34 = getelementptr inbounds i8, i8* %33, i64 5
  store i8 0, i8* %34, align 1
  br label %132

35:                                               ; preds = %2
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 5, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5, i1 false) #16
  %39 = getelementptr inbounds i8, i8* %38, i64 5
  store i8 0, i8* %39, align 1
  br label %132

40:                                               ; preds = %2
  %41 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 5, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5, i1 false) #16
  %44 = getelementptr inbounds i8, i8* %43, i64 5
  store i8 0, i8* %44, align 1
  br label %132

45:                                               ; preds = %2
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 5, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #16
  %49 = getelementptr inbounds i8, i8* %48, i64 5
  store i8 0, i8* %49, align 1
  br label %132

50:                                               ; preds = %2
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 5, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5, i1 false) #16
  %54 = getelementptr inbounds i8, i8* %53, i64 5
  store i8 0, i8* %54, align 1
  br label %132

55:                                               ; preds = %2
  %56 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 4, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 845374838, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 4
  store i8 0, i8* %60, align 4
  br label %132

61:                                               ; preds = %2
  %62 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 4, i8* %63, align 1
  %64 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 862152054, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 4
  store i8 0, i8* %66, align 4
  br label %132

67:                                               ; preds = %2
  %68 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 4, i8* %69, align 1
  %70 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %71 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 878929270, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 4
  store i8 0, i8* %72, align 4
  br label %132

73:                                               ; preds = %2
  %74 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  store i8 5, i8* %75, align 1
  %76 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5, i1 false) #16
  %77 = getelementptr inbounds i8, i8* %76, i64 5
  store i8 0, i8* %77, align 1
  br label %132

78:                                               ; preds = %2
  %79 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  store i8 5, i8* %80, align 1
  %81 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5, i1 false) #16
  %82 = getelementptr inbounds i8, i8* %81, i64 5
  store i8 0, i8* %82, align 1
  br label %132

83:                                               ; preds = %2
  %84 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 5, i8* %85, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5, i1 false) #16
  %87 = getelementptr inbounds i8, i8* %86, i64 5
  store i8 0, i8* %87, align 1
  br label %132

88:                                               ; preds = %2
  %89 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 4, i8* %90, align 1
  %91 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 846487917, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 4
  store i8 0, i8* %93, align 4
  br label %132

94:                                               ; preds = %2
  %95 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 4, i8* %96, align 1
  %97 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 863265133, i32* %98, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 4
  store i8 0, i8* %99, align 4
  br label %132

100:                                              ; preds = %2
  %101 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 4, i8* %102, align 1
  %103 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 880042349, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %103, i64 4
  store i8 0, i8* %105, align 4
  br label %132

106:                                              ; preds = %2
  %107 = tail call i64 @strlen(i8* null) #16
  %108 = icmp ugt i64 %107, -17
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %110) #17
  unreachable

111:                                              ; preds = %106
  %112 = icmp ult i64 %107, 23
  br i1 %112, label %121, label %113

113:                                              ; preds = %111
  %114 = add nuw i64 %107, 16
  %115 = and i64 %114, -16
  %116 = tail call i8* @_Znwm(i64 %115) #18
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %116, i8** %117, align 8
  %118 = or i64 %115, -9223372036854775808
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %107, i64* %120, align 8
  br label %127

121:                                              ; preds = %111
  %122 = trunc i64 %107 to i8
  %123 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  store i8 %122, i8* %124, align 1
  %125 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %126 = icmp eq i64 %107, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %121, %113
  %128 = phi i8* [ %116, %113 ], [ %125, %121 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 536870912 null, i64 %107, i1 false) #16
  br label %129

129:                                              ; preds = %121, %127
  %130 = phi i8* [ %125, %121 ], [ %128, %127 ]
  %131 = getelementptr inbounds i8, i8* %130, i64 %107
  store i8 0, i8* %131, align 1
  br label %132

132:                                              ; preds = %129, %100, %94, %88, %83, %78, %73, %67, %61, %55, %50, %45, %40, %35, %30, %25, %20, %14, %9, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl22VariableBoolVectorTypeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %5 [
    i32 5126, label %6
    i32 5124, label %6
    i32 5125, label %6
    i32 35664, label %2
    i32 35667, label %2
    i32 36294, label %2
    i32 35665, label %3
    i32 35668, label %3
    i32 36295, label %3
    i32 35666, label %4
    i32 35669, label %4
    i32 36296, label %4
  ]

2:                                                ; preds = %1, %1, %1
  br label %6

3:                                                ; preds = %1, %1, %1
  br label %6

4:                                                ; preds = %1, %1, %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %1, %1, %1, %5, %4, %3, %2
  %7 = phi i32 [ 0, %5 ], [ 35673, %4 ], [ 35672, %3 ], [ 35671, %2 ], [ 35670, %1 ], [ 35670, %1 ], [ 35670, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl13IsSamplerTypeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 35678, label %3
    i32 35679, label %3
    i32 35680, label %3
    i32 36289, label %3
    i32 36198, label %3
    i32 37128, label %3
    i32 37131, label %3
    i32 36876, label %3
    i32 36290, label %3
    i32 35683, label %3
    i32 36298, label %3
    i32 36299, label %3
    i32 36300, label %3
    i32 36303, label %3
    i32 37129, label %3
    i32 37132, label %3
    i32 36878, label %3
    i32 36304, label %3
    i32 36306, label %3
    i32 36307, label %3
    i32 36308, label %3
    i32 36311, label %3
    i32 37130, label %3
    i32 37133, label %3
    i32 36879, label %3
    i32 36312, label %3
    i32 35682, label %3
    i32 36293, label %3
    i32 36292, label %3
    i32 36877, label %3
    i32 37449, label %3
    i32 35815, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl17IsSamplerCubeTypeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 35680, label %3
    i32 36300, label %3
    i32 36308, label %3
    i32 36293, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 35815
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl11IsImageTypeEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -36941
  %3 = icmp ult i32 %2, 30
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i30
  %6 = lshr i30 -154740517, %5
  %7 = and i30 %6, 1
  %8 = icmp ne i30 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl13IsImage2DTypeEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -36941
  %3 = icmp ult i32 %2, 30
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i30
  %6 = lshr i30 4196353, %5
  %7 = and i30 %6, 1
  %8 = icmp ne i30 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl19IsAtomicCounterTypeEj(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 37595
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl12IsOpaqueTypeEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 36941, label %6
    i32 36952, label %6
    i32 36963, label %6
    i32 36942, label %6
    i32 36953, label %6
    i32 36964, label %6
    i32 36947, label %6
    i32 36958, label %6
    i32 36969, label %6
    i32 36948, label %6
    i32 36959, label %6
    i32 36970, label %6
    i32 36945, label %6
    i32 36956, label %6
    i32 36967, label %6
    i32 36944, label %6
    i32 36955, label %6
    i32 36966, label %6
  ]

2:                                                ; preds = %1
  %3 = tail call zeroext i1 @_ZN2gl13IsSamplerTypeEj(i32 %0)
  %4 = icmp eq i32 %0, 37595
  %5 = or i1 %4, %3
  ret i1 %5

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl12IsMatrixTypeEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0)
  %3 = icmp sgt i32 %2, 1
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl19TransposeMatrixTypeEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0) #16
  %3 = icmp sgt i32 %2, 1
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = add i32 %0, -35674
  %6 = icmp ult i32 %5, 17
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [17 x i32], [17 x i32]* @switch.table._ZN2gl19TransposeMatrixTypeEj, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10

11:                                               ; preds = %4, %1
  %12 = phi i32 [ %0, %1 ], [ 0, %4 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl19MatrixRegisterCountEjb(i32, i1 zeroext) local_unnamed_addr #0 {
  br i1 %1, label %3, label %5

3:                                                ; preds = %2
  %4 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0)
  br label %7

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN2gl19VariableColumnCountEj(i32 %0)
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i32 [ %4, %3 ], [ %6, %5 ]
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl20MatrixComponentCountEjb(i32, i1 zeroext) local_unnamed_addr #0 {
  br i1 %1, label %3, label %5

3:                                                ; preds = %2
  %4 = tail call i32 @_ZN2gl19VariableColumnCountEj(i32 %0)
  br label %7

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0)
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i32 [ %4, %3 ], [ %6, %5 ]
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl21VariableRegisterCountEj(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN2gl16VariableRowCountEj(i32 %0) #16
  %3 = icmp sgt i32 %2, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN2gl19VariableColumnCountEj(i32 %0)
  br label %6

6:                                                ; preds = %1, %4
  %7 = phi i32 [ %5, %4 ], [ 1, %1 ]
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2gl21AllocateFirstFreeBitsEPjjj(i32* nocapture, i32, i32) local_unnamed_addr #2 {
  %4 = sub i32 1, %1
  %5 = add i32 %4, %2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  %8 = sub i32 32, %1
  %9 = lshr i32 -1, %8
  %10 = load i32, i32* %0, align 4
  br label %11

11:                                               ; preds = %16, %7
  %12 = phi i32 [ 0, %7 ], [ %18, %16 ]
  %13 = phi i32 [ %9, %7 ], [ %17, %16 ]
  %14 = and i32 %10, %13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = shl i32 %13, 1
  %18 = add nuw i32 %12, 1
  %19 = icmp eq i32 %18, %5
  br i1 %19, label %22, label %11

20:                                               ; preds = %11
  %21 = or i32 %10, %13
  store i32 %21, i32* %0, align 4
  br label %22

22:                                               ; preds = %16, %3, %20
  %23 = phi i32 [ %12, %20 ], [ -1, %3 ], [ -1, %16 ]
  ret i32 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* noalias nocapture sret, i64, i8* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #1 {
  switch i64 %1, label %641 [
    i64 0, label %6
    i64 1, label %223
    i64 2, label %435
  ]

6:                                                ; preds = %5
  br i1 %4, label %7, label %74

7:                                                ; preds = %6
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %7, %14
  %10 = phi i64 [ %15, %14 ], [ 0, %7 ]
  %11 = getelementptr inbounds i8, i8* %2, i64 %10
  %12 = load i8, i8* %11, align 1, !noalias !2
  %13 = icmp eq i8 %12, -1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = add nuw i64 %10, 1
  %16 = icmp eq i64 %15, %3
  br i1 %16, label %214, label %9

17:                                               ; preds = %9, %7
  %18 = phi i64 [ 0, %7 ], [ %10, %9 ]
  %19 = phi i8 [ 0, %7 ], [ %12, %9 ]
  %20 = phi i64 [ 0, %7 ], [ 1, %9 ]
  %21 = icmp ult i64 %18, %3
  br i1 %21, label %22, label %214

22:                                               ; preds = %17
  %23 = sub i64 %3, %18
  %24 = xor i64 %18, -1
  %25 = and i64 %23, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, i8* %2, i64 %18
  %29 = load i8, i8* %28, align 1, !noalias !2
  %30 = icmp eq i8 %29, -1
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = icmp ugt i8 %19, %29
  %33 = select i1 %32, i8 %29, i8 %19
  %34 = icmp ult i8 %19, %29
  %35 = select i1 %34, i8 %29, i8 %19
  %36 = add nuw nsw i64 %20, 1
  br label %37

37:                                               ; preds = %31, %27
  %38 = phi i8 [ %33, %31 ], [ %19, %27 ]
  %39 = phi i8 [ %35, %31 ], [ %19, %27 ]
  %40 = phi i64 [ %36, %31 ], [ %20, %27 ]
  %41 = add nuw i64 %18, 1
  br label %42

42:                                               ; preds = %22, %37
  %43 = phi i8 [ undef, %22 ], [ %38, %37 ]
  %44 = phi i8 [ undef, %22 ], [ %39, %37 ]
  %45 = phi i64 [ undef, %22 ], [ %40, %37 ]
  %46 = phi i64 [ %18, %22 ], [ %41, %37 ]
  %47 = phi i64 [ %20, %22 ], [ %40, %37 ]
  %48 = phi i8 [ %19, %22 ], [ %39, %37 ]
  %49 = phi i8 [ %19, %22 ], [ %38, %37 ]
  %50 = sub i64 0, %3
  %51 = icmp eq i64 %24, %50
  br i1 %51, label %214, label %52

52:                                               ; preds = %42, %650
  %53 = phi i64 [ %654, %650 ], [ %46, %42 ]
  %54 = phi i64 [ %653, %650 ], [ %47, %42 ]
  %55 = phi i8 [ %652, %650 ], [ %48, %42 ]
  %56 = phi i8 [ %651, %650 ], [ %49, %42 ]
  %57 = getelementptr inbounds i8, i8* %2, i64 %53
  %58 = load i8, i8* %57, align 1, !noalias !2
  %59 = icmp eq i8 %58, -1
  br i1 %59, label %66, label %60

60:                                               ; preds = %52
  %61 = icmp ugt i8 %56, %58
  %62 = select i1 %61, i8 %58, i8 %56
  %63 = icmp ult i8 %55, %58
  %64 = select i1 %63, i8 %58, i8 %55
  %65 = add i64 %54, 1
  br label %66

66:                                               ; preds = %60, %52
  %67 = phi i8 [ %62, %60 ], [ %56, %52 ]
  %68 = phi i8 [ %64, %60 ], [ %55, %52 ]
  %69 = phi i64 [ %65, %60 ], [ %54, %52 ]
  %70 = add nuw i64 %53, 1
  %71 = getelementptr inbounds i8, i8* %2, i64 %70
  %72 = load i8, i8* %71, align 1, !noalias !2
  %73 = icmp eq i8 %72, -1
  br i1 %73, label %650, label %644

74:                                               ; preds = %6
  %75 = load i8, i8* %2, align 1, !noalias !2
  %76 = icmp ugt i64 %3, 1
  br i1 %76, label %77, label %214

77:                                               ; preds = %74
  %78 = add i64 %3, -1
  %79 = icmp ult i64 %78, 32
  br i1 %79, label %198, label %80

80:                                               ; preds = %77
  %81 = and i64 %78, -32
  %82 = or i64 %81, 1
  %83 = insertelement <16 x i8> undef, i8 %75, i32 0
  %84 = shufflevector <16 x i8> %83, <16 x i8> undef, <16 x i32> zeroinitializer
  %85 = insertelement <16 x i8> undef, i8 %75, i32 0
  %86 = shufflevector <16 x i8> %85, <16 x i8> undef, <16 x i32> zeroinitializer
  %87 = add i64 %81, -32
  %88 = lshr exact i64 %87, 5
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %87, 0
  br i1 %91, label %136, label %92

92:                                               ; preds = %80
  %93 = sub nuw nsw i64 %89, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %131, %94 ]
  %96 = phi <16 x i8> [ %84, %92 ], [ %129, %94 ]
  %97 = phi <16 x i8> [ %84, %92 ], [ %130, %94 ]
  %98 = phi <16 x i8> [ %86, %92 ], [ %125, %94 ]
  %99 = phi <16 x i8> [ %86, %92 ], [ %126, %94 ]
  %100 = phi i64 [ %93, %92 ], [ %132, %94 ]
  %101 = or i64 %95, 1
  %102 = getelementptr inbounds i8, i8* %2, i64 %101
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !noalias !2
  %105 = getelementptr inbounds i8, i8* %102, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !noalias !2
  %108 = icmp ugt <16 x i8> %98, %104
  %109 = icmp ugt <16 x i8> %99, %107
  %110 = select <16 x i1> %108, <16 x i8> %104, <16 x i8> %98
  %111 = select <16 x i1> %109, <16 x i8> %107, <16 x i8> %99
  %112 = icmp ult <16 x i8> %96, %104
  %113 = icmp ult <16 x i8> %97, %107
  %114 = select <16 x i1> %112, <16 x i8> %104, <16 x i8> %96
  %115 = select <16 x i1> %113, <16 x i8> %107, <16 x i8> %97
  %116 = or i64 %95, 33
  %117 = getelementptr inbounds i8, i8* %2, i64 %116
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !noalias !2
  %120 = getelementptr inbounds i8, i8* %117, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !noalias !2
  %123 = icmp ugt <16 x i8> %110, %119
  %124 = icmp ugt <16 x i8> %111, %122
  %125 = select <16 x i1> %123, <16 x i8> %119, <16 x i8> %110
  %126 = select <16 x i1> %124, <16 x i8> %122, <16 x i8> %111
  %127 = icmp ult <16 x i8> %114, %119
  %128 = icmp ult <16 x i8> %115, %122
  %129 = select <16 x i1> %127, <16 x i8> %119, <16 x i8> %114
  %130 = select <16 x i1> %128, <16 x i8> %122, <16 x i8> %115
  %131 = add i64 %95, 64
  %132 = add i64 %100, -2
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %94, !llvm.loop !5

134:                                              ; preds = %94
  %135 = or i64 %131, 1
  br label %136

136:                                              ; preds = %134, %80
  %137 = phi <16 x i8> [ undef, %80 ], [ %125, %134 ]
  %138 = phi <16 x i8> [ undef, %80 ], [ %126, %134 ]
  %139 = phi <16 x i8> [ undef, %80 ], [ %129, %134 ]
  %140 = phi <16 x i8> [ undef, %80 ], [ %130, %134 ]
  %141 = phi i64 [ 1, %80 ], [ %135, %134 ]
  %142 = phi <16 x i8> [ %84, %80 ], [ %129, %134 ]
  %143 = phi <16 x i8> [ %84, %80 ], [ %130, %134 ]
  %144 = phi <16 x i8> [ %86, %80 ], [ %125, %134 ]
  %145 = phi <16 x i8> [ %86, %80 ], [ %126, %134 ]
  %146 = icmp eq i64 %90, 0
  br i1 %146, label %162, label %147

147:                                              ; preds = %136
  %148 = getelementptr inbounds i8, i8* %2, i64 %141
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !noalias !2
  %151 = getelementptr inbounds i8, i8* %148, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !noalias !2
  %154 = icmp ult <16 x i8> %143, %153
  %155 = select <16 x i1> %154, <16 x i8> %153, <16 x i8> %143
  %156 = icmp ult <16 x i8> %142, %150
  %157 = select <16 x i1> %156, <16 x i8> %150, <16 x i8> %142
  %158 = icmp ugt <16 x i8> %145, %153
  %159 = select <16 x i1> %158, <16 x i8> %153, <16 x i8> %145
  %160 = icmp ugt <16 x i8> %144, %150
  %161 = select <16 x i1> %160, <16 x i8> %150, <16 x i8> %144
  br label %162

162:                                              ; preds = %136, %147
  %163 = phi <16 x i8> [ %137, %136 ], [ %161, %147 ]
  %164 = phi <16 x i8> [ %138, %136 ], [ %159, %147 ]
  %165 = phi <16 x i8> [ %139, %136 ], [ %157, %147 ]
  %166 = phi <16 x i8> [ %140, %136 ], [ %155, %147 ]
  %167 = icmp ult <16 x i8> %163, %164
  %168 = select <16 x i1> %167, <16 x i8> %163, <16 x i8> %164
  %169 = shufflevector <16 x i8> %168, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %170 = icmp ult <16 x i8> %168, %169
  %171 = select <16 x i1> %170, <16 x i8> %168, <16 x i8> %169
  %172 = shufflevector <16 x i8> %171, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %173 = icmp ult <16 x i8> %171, %172
  %174 = select <16 x i1> %173, <16 x i8> %171, <16 x i8> %172
  %175 = shufflevector <16 x i8> %174, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %176 = icmp ult <16 x i8> %174, %175
  %177 = select <16 x i1> %176, <16 x i8> %174, <16 x i8> %175
  %178 = shufflevector <16 x i8> %177, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %179 = icmp ult <16 x i8> %177, %178
  %180 = select <16 x i1> %179, <16 x i8> %177, <16 x i8> %178
  %181 = extractelement <16 x i8> %180, i32 0
  %182 = icmp ugt <16 x i8> %165, %166
  %183 = select <16 x i1> %182, <16 x i8> %165, <16 x i8> %166
  %184 = shufflevector <16 x i8> %183, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %185 = icmp ugt <16 x i8> %183, %184
  %186 = select <16 x i1> %185, <16 x i8> %183, <16 x i8> %184
  %187 = shufflevector <16 x i8> %186, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %188 = icmp ugt <16 x i8> %186, %187
  %189 = select <16 x i1> %188, <16 x i8> %186, <16 x i8> %187
  %190 = shufflevector <16 x i8> %189, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %191 = icmp ugt <16 x i8> %189, %190
  %192 = select <16 x i1> %191, <16 x i8> %189, <16 x i8> %190
  %193 = shufflevector <16 x i8> %192, <16 x i8> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %194 = icmp ugt <16 x i8> %192, %193
  %195 = select <16 x i1> %194, <16 x i8> %192, <16 x i8> %193
  %196 = extractelement <16 x i8> %195, i32 0
  %197 = icmp eq i64 %78, %81
  br i1 %197, label %214, label %198

198:                                              ; preds = %162, %77
  %199 = phi i64 [ 1, %77 ], [ %82, %162 ]
  %200 = phi i8 [ %75, %77 ], [ %196, %162 ]
  %201 = phi i8 [ %75, %77 ], [ %181, %162 ]
  br label %202

202:                                              ; preds = %198, %202
  %203 = phi i64 [ %212, %202 ], [ %199, %198 ]
  %204 = phi i8 [ %211, %202 ], [ %200, %198 ]
  %205 = phi i8 [ %209, %202 ], [ %201, %198 ]
  %206 = getelementptr inbounds i8, i8* %2, i64 %203
  %207 = load i8, i8* %206, align 1, !noalias !2
  %208 = icmp ugt i8 %205, %207
  %209 = select i1 %208, i8 %207, i8 %205
  %210 = icmp ult i8 %204, %207
  %211 = select i1 %210, i8 %207, i8 %204
  %212 = add nuw i64 %203, 1
  %213 = icmp eq i64 %212, %3
  br i1 %213, label %214, label %202, !llvm.loop !7

214:                                              ; preds = %202, %14, %42, %650, %162, %17, %74
  %215 = phi i8 [ %19, %17 ], [ %75, %74 ], [ %181, %162 ], [ %43, %42 ], [ %651, %650 ], [ 0, %14 ], [ %209, %202 ]
  %216 = phi i8 [ %19, %17 ], [ %75, %74 ], [ %196, %162 ], [ %44, %42 ], [ %652, %650 ], [ 0, %14 ], [ %211, %202 ]
  %217 = phi i64 [ %20, %17 ], [ %3, %74 ], [ %3, %162 ], [ %45, %42 ], [ %653, %650 ], [ 0, %14 ], [ %3, %202 ]
  %218 = zext i8 %215 to i64
  %219 = zext i8 %216 to i64
  %220 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 0
  store i64 %218, i64* %220, align 8, !alias.scope !2
  %221 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 1
  store i64 %219, i64* %221, align 8, !alias.scope !2
  %222 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 2
  store i64 %217, i64* %222, align 8, !alias.scope !2
  br label %643

223:                                              ; preds = %5
  %224 = bitcast i8* %2 to i16*
  br i1 %4, label %225, label %292

225:                                              ; preds = %223
  %226 = icmp eq i64 %3, 0
  br i1 %226, label %235, label %227

227:                                              ; preds = %225, %232
  %228 = phi i64 [ %233, %232 ], [ 0, %225 ]
  %229 = getelementptr inbounds i16, i16* %224, i64 %228
  %230 = load i16, i16* %229, align 2, !noalias !9
  %231 = icmp eq i16 %230, -1
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = add nuw i64 %228, 1
  %234 = icmp eq i64 %233, %3
  br i1 %234, label %426, label %227

235:                                              ; preds = %227, %225
  %236 = phi i64 [ 0, %225 ], [ %228, %227 ]
  %237 = phi i16 [ 0, %225 ], [ %230, %227 ]
  %238 = phi i64 [ 0, %225 ], [ 1, %227 ]
  %239 = icmp ult i64 %236, %3
  br i1 %239, label %240, label %426

240:                                              ; preds = %235
  %241 = sub i64 %3, %236
  %242 = xor i64 %236, -1
  %243 = and i64 %241, 1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %260, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds i16, i16* %224, i64 %236
  %247 = load i16, i16* %246, align 2, !noalias !9
  %248 = icmp eq i16 %247, -1
  br i1 %248, label %255, label %249

249:                                              ; preds = %245
  %250 = icmp ugt i16 %237, %247
  %251 = select i1 %250, i16 %247, i16 %237
  %252 = icmp ult i16 %237, %247
  %253 = select i1 %252, i16 %247, i16 %237
  %254 = add nuw nsw i64 %238, 1
  br label %255

255:                                              ; preds = %249, %245
  %256 = phi i16 [ %251, %249 ], [ %237, %245 ]
  %257 = phi i16 [ %253, %249 ], [ %237, %245 ]
  %258 = phi i64 [ %254, %249 ], [ %238, %245 ]
  %259 = add nuw i64 %236, 1
  br label %260

260:                                              ; preds = %240, %255
  %261 = phi i16 [ undef, %240 ], [ %256, %255 ]
  %262 = phi i16 [ undef, %240 ], [ %257, %255 ]
  %263 = phi i64 [ undef, %240 ], [ %258, %255 ]
  %264 = phi i64 [ %236, %240 ], [ %259, %255 ]
  %265 = phi i64 [ %238, %240 ], [ %258, %255 ]
  %266 = phi i16 [ %237, %240 ], [ %257, %255 ]
  %267 = phi i16 [ %237, %240 ], [ %256, %255 ]
  %268 = sub i64 0, %3
  %269 = icmp eq i64 %242, %268
  br i1 %269, label %426, label %270

270:                                              ; preds = %260, %662
  %271 = phi i64 [ %666, %662 ], [ %264, %260 ]
  %272 = phi i64 [ %665, %662 ], [ %265, %260 ]
  %273 = phi i16 [ %664, %662 ], [ %266, %260 ]
  %274 = phi i16 [ %663, %662 ], [ %267, %260 ]
  %275 = getelementptr inbounds i16, i16* %224, i64 %271
  %276 = load i16, i16* %275, align 2, !noalias !9
  %277 = icmp eq i16 %276, -1
  br i1 %277, label %284, label %278

278:                                              ; preds = %270
  %279 = icmp ugt i16 %274, %276
  %280 = select i1 %279, i16 %276, i16 %274
  %281 = icmp ult i16 %273, %276
  %282 = select i1 %281, i16 %276, i16 %273
  %283 = add i64 %272, 1
  br label %284

284:                                              ; preds = %278, %270
  %285 = phi i16 [ %280, %278 ], [ %274, %270 ]
  %286 = phi i16 [ %282, %278 ], [ %273, %270 ]
  %287 = phi i64 [ %283, %278 ], [ %272, %270 ]
  %288 = add nuw i64 %271, 1
  %289 = getelementptr inbounds i16, i16* %224, i64 %288
  %290 = load i16, i16* %289, align 2, !noalias !9
  %291 = icmp eq i16 %290, -1
  br i1 %291, label %662, label %656

292:                                              ; preds = %223
  %293 = load i16, i16* %224, align 2, !noalias !9
  %294 = icmp ugt i64 %3, 1
  br i1 %294, label %295, label %426

295:                                              ; preds = %292
  %296 = add i64 %3, -1
  %297 = icmp ult i64 %296, 16
  br i1 %297, label %410, label %298

298:                                              ; preds = %295
  %299 = and i64 %296, -16
  %300 = or i64 %299, 1
  %301 = insertelement <8 x i16> undef, i16 %293, i32 0
  %302 = shufflevector <8 x i16> %301, <8 x i16> undef, <8 x i32> zeroinitializer
  %303 = insertelement <8 x i16> undef, i16 %293, i32 0
  %304 = shufflevector <8 x i16> %303, <8 x i16> undef, <8 x i32> zeroinitializer
  %305 = add i64 %299, -16
  %306 = lshr exact i64 %305, 4
  %307 = add nuw nsw i64 %306, 1
  %308 = and i64 %307, 1
  %309 = icmp eq i64 %305, 0
  br i1 %309, label %354, label %310

310:                                              ; preds = %298
  %311 = sub nuw nsw i64 %307, %308
  br label %312

312:                                              ; preds = %312, %310
  %313 = phi i64 [ 0, %310 ], [ %349, %312 ]
  %314 = phi <8 x i16> [ %302, %310 ], [ %347, %312 ]
  %315 = phi <8 x i16> [ %302, %310 ], [ %348, %312 ]
  %316 = phi <8 x i16> [ %304, %310 ], [ %343, %312 ]
  %317 = phi <8 x i16> [ %304, %310 ], [ %344, %312 ]
  %318 = phi i64 [ %311, %310 ], [ %350, %312 ]
  %319 = or i64 %313, 1
  %320 = getelementptr inbounds i16, i16* %224, i64 %319
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !noalias !9
  %323 = getelementptr inbounds i16, i16* %320, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  %325 = load <8 x i16>, <8 x i16>* %324, align 2, !noalias !9
  %326 = icmp ugt <8 x i16> %316, %322
  %327 = icmp ugt <8 x i16> %317, %325
  %328 = select <8 x i1> %326, <8 x i16> %322, <8 x i16> %316
  %329 = select <8 x i1> %327, <8 x i16> %325, <8 x i16> %317
  %330 = icmp ult <8 x i16> %314, %322
  %331 = icmp ult <8 x i16> %315, %325
  %332 = select <8 x i1> %330, <8 x i16> %322, <8 x i16> %314
  %333 = select <8 x i1> %331, <8 x i16> %325, <8 x i16> %315
  %334 = or i64 %313, 17
  %335 = getelementptr inbounds i16, i16* %224, i64 %334
  %336 = bitcast i16* %335 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !noalias !9
  %338 = getelementptr inbounds i16, i16* %335, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !noalias !9
  %341 = icmp ugt <8 x i16> %328, %337
  %342 = icmp ugt <8 x i16> %329, %340
  %343 = select <8 x i1> %341, <8 x i16> %337, <8 x i16> %328
  %344 = select <8 x i1> %342, <8 x i16> %340, <8 x i16> %329
  %345 = icmp ult <8 x i16> %332, %337
  %346 = icmp ult <8 x i16> %333, %340
  %347 = select <8 x i1> %345, <8 x i16> %337, <8 x i16> %332
  %348 = select <8 x i1> %346, <8 x i16> %340, <8 x i16> %333
  %349 = add i64 %313, 32
  %350 = add i64 %318, -2
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %312, !llvm.loop !12

352:                                              ; preds = %312
  %353 = or i64 %349, 1
  br label %354

354:                                              ; preds = %352, %298
  %355 = phi <8 x i16> [ undef, %298 ], [ %343, %352 ]
  %356 = phi <8 x i16> [ undef, %298 ], [ %344, %352 ]
  %357 = phi <8 x i16> [ undef, %298 ], [ %347, %352 ]
  %358 = phi <8 x i16> [ undef, %298 ], [ %348, %352 ]
  %359 = phi i64 [ 1, %298 ], [ %353, %352 ]
  %360 = phi <8 x i16> [ %302, %298 ], [ %347, %352 ]
  %361 = phi <8 x i16> [ %302, %298 ], [ %348, %352 ]
  %362 = phi <8 x i16> [ %304, %298 ], [ %343, %352 ]
  %363 = phi <8 x i16> [ %304, %298 ], [ %344, %352 ]
  %364 = icmp eq i64 %308, 0
  br i1 %364, label %380, label %365

365:                                              ; preds = %354
  %366 = getelementptr inbounds i16, i16* %224, i64 %359
  %367 = bitcast i16* %366 to <8 x i16>*
  %368 = load <8 x i16>, <8 x i16>* %367, align 2, !noalias !9
  %369 = getelementptr inbounds i16, i16* %366, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !noalias !9
  %372 = icmp ult <8 x i16> %361, %371
  %373 = select <8 x i1> %372, <8 x i16> %371, <8 x i16> %361
  %374 = icmp ult <8 x i16> %360, %368
  %375 = select <8 x i1> %374, <8 x i16> %368, <8 x i16> %360
  %376 = icmp ugt <8 x i16> %363, %371
  %377 = select <8 x i1> %376, <8 x i16> %371, <8 x i16> %363
  %378 = icmp ugt <8 x i16> %362, %368
  %379 = select <8 x i1> %378, <8 x i16> %368, <8 x i16> %362
  br label %380

380:                                              ; preds = %354, %365
  %381 = phi <8 x i16> [ %355, %354 ], [ %379, %365 ]
  %382 = phi <8 x i16> [ %356, %354 ], [ %377, %365 ]
  %383 = phi <8 x i16> [ %357, %354 ], [ %375, %365 ]
  %384 = phi <8 x i16> [ %358, %354 ], [ %373, %365 ]
  %385 = icmp ult <8 x i16> %381, %382
  %386 = select <8 x i1> %385, <8 x i16> %381, <8 x i16> %382
  %387 = shufflevector <8 x i16> %386, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %388 = icmp ult <8 x i16> %386, %387
  %389 = select <8 x i1> %388, <8 x i16> %386, <8 x i16> %387
  %390 = shufflevector <8 x i16> %389, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %391 = icmp ult <8 x i16> %389, %390
  %392 = select <8 x i1> %391, <8 x i16> %389, <8 x i16> %390
  %393 = shufflevector <8 x i16> %392, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %394 = icmp ult <8 x i16> %392, %393
  %395 = select <8 x i1> %394, <8 x i16> %392, <8 x i16> %393
  %396 = extractelement <8 x i16> %395, i32 0
  %397 = icmp ugt <8 x i16> %383, %384
  %398 = select <8 x i1> %397, <8 x i16> %383, <8 x i16> %384
  %399 = shufflevector <8 x i16> %398, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %400 = icmp ugt <8 x i16> %398, %399
  %401 = select <8 x i1> %400, <8 x i16> %398, <8 x i16> %399
  %402 = shufflevector <8 x i16> %401, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %403 = icmp ugt <8 x i16> %401, %402
  %404 = select <8 x i1> %403, <8 x i16> %401, <8 x i16> %402
  %405 = shufflevector <8 x i16> %404, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %406 = icmp ugt <8 x i16> %404, %405
  %407 = select <8 x i1> %406, <8 x i16> %404, <8 x i16> %405
  %408 = extractelement <8 x i16> %407, i32 0
  %409 = icmp eq i64 %296, %299
  br i1 %409, label %426, label %410

410:                                              ; preds = %380, %295
  %411 = phi i64 [ 1, %295 ], [ %300, %380 ]
  %412 = phi i16 [ %293, %295 ], [ %408, %380 ]
  %413 = phi i16 [ %293, %295 ], [ %396, %380 ]
  br label %414

414:                                              ; preds = %410, %414
  %415 = phi i64 [ %424, %414 ], [ %411, %410 ]
  %416 = phi i16 [ %423, %414 ], [ %412, %410 ]
  %417 = phi i16 [ %421, %414 ], [ %413, %410 ]
  %418 = getelementptr inbounds i16, i16* %224, i64 %415
  %419 = load i16, i16* %418, align 2, !noalias !9
  %420 = icmp ugt i16 %417, %419
  %421 = select i1 %420, i16 %419, i16 %417
  %422 = icmp ult i16 %416, %419
  %423 = select i1 %422, i16 %419, i16 %416
  %424 = add nuw i64 %415, 1
  %425 = icmp eq i64 %424, %3
  br i1 %425, label %426, label %414, !llvm.loop !13

426:                                              ; preds = %414, %232, %260, %662, %380, %235, %292
  %427 = phi i16 [ %237, %235 ], [ %293, %292 ], [ %396, %380 ], [ %261, %260 ], [ %663, %662 ], [ 0, %232 ], [ %421, %414 ]
  %428 = phi i16 [ %237, %235 ], [ %293, %292 ], [ %408, %380 ], [ %262, %260 ], [ %664, %662 ], [ 0, %232 ], [ %423, %414 ]
  %429 = phi i64 [ %238, %235 ], [ %3, %292 ], [ %3, %380 ], [ %263, %260 ], [ %665, %662 ], [ 0, %232 ], [ %3, %414 ]
  %430 = zext i16 %427 to i64
  %431 = zext i16 %428 to i64
  %432 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 0
  store i64 %430, i64* %432, align 8, !alias.scope !9
  %433 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 1
  store i64 %431, i64* %433, align 8, !alias.scope !9
  %434 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 2
  store i64 %429, i64* %434, align 8, !alias.scope !9
  br label %643

435:                                              ; preds = %5
  %436 = bitcast i8* %2 to i32*
  br i1 %4, label %437, label %504

437:                                              ; preds = %435
  %438 = icmp eq i64 %3, 0
  br i1 %438, label %447, label %439

439:                                              ; preds = %437, %444
  %440 = phi i64 [ %445, %444 ], [ 0, %437 ]
  %441 = getelementptr inbounds i32, i32* %436, i64 %440
  %442 = load i32, i32* %441, align 4, !noalias !14
  %443 = icmp eq i32 %442, -1
  br i1 %443, label %444, label %447

444:                                              ; preds = %439
  %445 = add nuw i64 %440, 1
  %446 = icmp eq i64 %445, %3
  br i1 %446, label %632, label %439

447:                                              ; preds = %439, %437
  %448 = phi i64 [ 0, %437 ], [ %440, %439 ]
  %449 = phi i32 [ 0, %437 ], [ %442, %439 ]
  %450 = phi i64 [ 0, %437 ], [ 1, %439 ]
  %451 = icmp ult i64 %448, %3
  br i1 %451, label %452, label %632

452:                                              ; preds = %447
  %453 = sub i64 %3, %448
  %454 = xor i64 %448, -1
  %455 = and i64 %453, 1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %472, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds i32, i32* %436, i64 %448
  %459 = load i32, i32* %458, align 4, !noalias !14
  %460 = icmp eq i32 %459, -1
  br i1 %460, label %467, label %461

461:                                              ; preds = %457
  %462 = icmp ugt i32 %449, %459
  %463 = select i1 %462, i32 %459, i32 %449
  %464 = icmp ult i32 %449, %459
  %465 = select i1 %464, i32 %459, i32 %449
  %466 = add nuw nsw i64 %450, 1
  br label %467

467:                                              ; preds = %461, %457
  %468 = phi i32 [ %463, %461 ], [ %449, %457 ]
  %469 = phi i32 [ %465, %461 ], [ %449, %457 ]
  %470 = phi i64 [ %466, %461 ], [ %450, %457 ]
  %471 = add nuw i64 %448, 1
  br label %472

472:                                              ; preds = %452, %467
  %473 = phi i32 [ undef, %452 ], [ %468, %467 ]
  %474 = phi i32 [ undef, %452 ], [ %469, %467 ]
  %475 = phi i64 [ undef, %452 ], [ %470, %467 ]
  %476 = phi i64 [ %448, %452 ], [ %471, %467 ]
  %477 = phi i64 [ %450, %452 ], [ %470, %467 ]
  %478 = phi i32 [ %449, %452 ], [ %469, %467 ]
  %479 = phi i32 [ %449, %452 ], [ %468, %467 ]
  %480 = sub i64 0, %3
  %481 = icmp eq i64 %454, %480
  br i1 %481, label %632, label %482

482:                                              ; preds = %472, %674
  %483 = phi i64 [ %678, %674 ], [ %476, %472 ]
  %484 = phi i64 [ %677, %674 ], [ %477, %472 ]
  %485 = phi i32 [ %676, %674 ], [ %478, %472 ]
  %486 = phi i32 [ %675, %674 ], [ %479, %472 ]
  %487 = getelementptr inbounds i32, i32* %436, i64 %483
  %488 = load i32, i32* %487, align 4, !noalias !14
  %489 = icmp eq i32 %488, -1
  br i1 %489, label %496, label %490

490:                                              ; preds = %482
  %491 = icmp ugt i32 %486, %488
  %492 = select i1 %491, i32 %488, i32 %486
  %493 = icmp ult i32 %485, %488
  %494 = select i1 %493, i32 %488, i32 %485
  %495 = add i64 %484, 1
  br label %496

496:                                              ; preds = %490, %482
  %497 = phi i32 [ %492, %490 ], [ %486, %482 ]
  %498 = phi i32 [ %494, %490 ], [ %485, %482 ]
  %499 = phi i64 [ %495, %490 ], [ %484, %482 ]
  %500 = add nuw i64 %483, 1
  %501 = getelementptr inbounds i32, i32* %436, i64 %500
  %502 = load i32, i32* %501, align 4, !noalias !14
  %503 = icmp eq i32 %502, -1
  br i1 %503, label %674, label %668

504:                                              ; preds = %435
  %505 = load i32, i32* %436, align 4, !noalias !14
  %506 = icmp ugt i64 %3, 1
  br i1 %506, label %507, label %632

507:                                              ; preds = %504
  %508 = add i64 %3, -1
  %509 = icmp ult i64 %508, 8
  br i1 %509, label %616, label %510

510:                                              ; preds = %507
  %511 = and i64 %508, -8
  %512 = or i64 %511, 1
  %513 = insertelement <4 x i32> undef, i32 %505, i32 0
  %514 = shufflevector <4 x i32> %513, <4 x i32> undef, <4 x i32> zeroinitializer
  %515 = insertelement <4 x i32> undef, i32 %505, i32 0
  %516 = shufflevector <4 x i32> %515, <4 x i32> undef, <4 x i32> zeroinitializer
  %517 = add i64 %511, -8
  %518 = lshr exact i64 %517, 3
  %519 = add nuw nsw i64 %518, 1
  %520 = and i64 %519, 1
  %521 = icmp eq i64 %517, 0
  br i1 %521, label %566, label %522

522:                                              ; preds = %510
  %523 = sub nuw nsw i64 %519, %520
  br label %524

524:                                              ; preds = %524, %522
  %525 = phi i64 [ 0, %522 ], [ %561, %524 ]
  %526 = phi <4 x i32> [ %514, %522 ], [ %559, %524 ]
  %527 = phi <4 x i32> [ %514, %522 ], [ %560, %524 ]
  %528 = phi <4 x i32> [ %516, %522 ], [ %555, %524 ]
  %529 = phi <4 x i32> [ %516, %522 ], [ %556, %524 ]
  %530 = phi i64 [ %523, %522 ], [ %562, %524 ]
  %531 = or i64 %525, 1
  %532 = getelementptr inbounds i32, i32* %436, i64 %531
  %533 = bitcast i32* %532 to <4 x i32>*
  %534 = load <4 x i32>, <4 x i32>* %533, align 4, !noalias !14
  %535 = getelementptr inbounds i32, i32* %532, i64 4
  %536 = bitcast i32* %535 to <4 x i32>*
  %537 = load <4 x i32>, <4 x i32>* %536, align 4, !noalias !14
  %538 = icmp ugt <4 x i32> %528, %534
  %539 = icmp ugt <4 x i32> %529, %537
  %540 = select <4 x i1> %538, <4 x i32> %534, <4 x i32> %528
  %541 = select <4 x i1> %539, <4 x i32> %537, <4 x i32> %529
  %542 = icmp ult <4 x i32> %526, %534
  %543 = icmp ult <4 x i32> %527, %537
  %544 = select <4 x i1> %542, <4 x i32> %534, <4 x i32> %526
  %545 = select <4 x i1> %543, <4 x i32> %537, <4 x i32> %527
  %546 = or i64 %525, 9
  %547 = getelementptr inbounds i32, i32* %436, i64 %546
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4, !noalias !14
  %550 = getelementptr inbounds i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4, !noalias !14
  %553 = icmp ugt <4 x i32> %540, %549
  %554 = icmp ugt <4 x i32> %541, %552
  %555 = select <4 x i1> %553, <4 x i32> %549, <4 x i32> %540
  %556 = select <4 x i1> %554, <4 x i32> %552, <4 x i32> %541
  %557 = icmp ult <4 x i32> %544, %549
  %558 = icmp ult <4 x i32> %545, %552
  %559 = select <4 x i1> %557, <4 x i32> %549, <4 x i32> %544
  %560 = select <4 x i1> %558, <4 x i32> %552, <4 x i32> %545
  %561 = add i64 %525, 16
  %562 = add i64 %530, -2
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %564, label %524, !llvm.loop !17

564:                                              ; preds = %524
  %565 = or i64 %561, 1
  br label %566

566:                                              ; preds = %564, %510
  %567 = phi <4 x i32> [ undef, %510 ], [ %555, %564 ]
  %568 = phi <4 x i32> [ undef, %510 ], [ %556, %564 ]
  %569 = phi <4 x i32> [ undef, %510 ], [ %559, %564 ]
  %570 = phi <4 x i32> [ undef, %510 ], [ %560, %564 ]
  %571 = phi i64 [ 1, %510 ], [ %565, %564 ]
  %572 = phi <4 x i32> [ %514, %510 ], [ %559, %564 ]
  %573 = phi <4 x i32> [ %514, %510 ], [ %560, %564 ]
  %574 = phi <4 x i32> [ %516, %510 ], [ %555, %564 ]
  %575 = phi <4 x i32> [ %516, %510 ], [ %556, %564 ]
  %576 = icmp eq i64 %520, 0
  br i1 %576, label %592, label %577

577:                                              ; preds = %566
  %578 = getelementptr inbounds i32, i32* %436, i64 %571
  %579 = bitcast i32* %578 to <4 x i32>*
  %580 = load <4 x i32>, <4 x i32>* %579, align 4, !noalias !14
  %581 = getelementptr inbounds i32, i32* %578, i64 4
  %582 = bitcast i32* %581 to <4 x i32>*
  %583 = load <4 x i32>, <4 x i32>* %582, align 4, !noalias !14
  %584 = icmp ult <4 x i32> %573, %583
  %585 = select <4 x i1> %584, <4 x i32> %583, <4 x i32> %573
  %586 = icmp ult <4 x i32> %572, %580
  %587 = select <4 x i1> %586, <4 x i32> %580, <4 x i32> %572
  %588 = icmp ugt <4 x i32> %575, %583
  %589 = select <4 x i1> %588, <4 x i32> %583, <4 x i32> %575
  %590 = icmp ugt <4 x i32> %574, %580
  %591 = select <4 x i1> %590, <4 x i32> %580, <4 x i32> %574
  br label %592

592:                                              ; preds = %566, %577
  %593 = phi <4 x i32> [ %567, %566 ], [ %591, %577 ]
  %594 = phi <4 x i32> [ %568, %566 ], [ %589, %577 ]
  %595 = phi <4 x i32> [ %569, %566 ], [ %587, %577 ]
  %596 = phi <4 x i32> [ %570, %566 ], [ %585, %577 ]
  %597 = icmp ult <4 x i32> %593, %594
  %598 = select <4 x i1> %597, <4 x i32> %593, <4 x i32> %594
  %599 = shufflevector <4 x i32> %598, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %600 = icmp ult <4 x i32> %598, %599
  %601 = select <4 x i1> %600, <4 x i32> %598, <4 x i32> %599
  %602 = shufflevector <4 x i32> %601, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %603 = icmp ult <4 x i32> %601, %602
  %604 = select <4 x i1> %603, <4 x i32> %601, <4 x i32> %602
  %605 = extractelement <4 x i32> %604, i32 0
  %606 = icmp ugt <4 x i32> %595, %596
  %607 = select <4 x i1> %606, <4 x i32> %595, <4 x i32> %596
  %608 = shufflevector <4 x i32> %607, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %609 = icmp ugt <4 x i32> %607, %608
  %610 = select <4 x i1> %609, <4 x i32> %607, <4 x i32> %608
  %611 = shufflevector <4 x i32> %610, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %612 = icmp ugt <4 x i32> %610, %611
  %613 = select <4 x i1> %612, <4 x i32> %610, <4 x i32> %611
  %614 = extractelement <4 x i32> %613, i32 0
  %615 = icmp eq i64 %508, %511
  br i1 %615, label %632, label %616

616:                                              ; preds = %592, %507
  %617 = phi i64 [ 1, %507 ], [ %512, %592 ]
  %618 = phi i32 [ %505, %507 ], [ %614, %592 ]
  %619 = phi i32 [ %505, %507 ], [ %605, %592 ]
  br label %620

620:                                              ; preds = %616, %620
  %621 = phi i64 [ %630, %620 ], [ %617, %616 ]
  %622 = phi i32 [ %629, %620 ], [ %618, %616 ]
  %623 = phi i32 [ %627, %620 ], [ %619, %616 ]
  %624 = getelementptr inbounds i32, i32* %436, i64 %621
  %625 = load i32, i32* %624, align 4, !noalias !14
  %626 = icmp ugt i32 %623, %625
  %627 = select i1 %626, i32 %625, i32 %623
  %628 = icmp ult i32 %622, %625
  %629 = select i1 %628, i32 %625, i32 %622
  %630 = add nuw i64 %621, 1
  %631 = icmp eq i64 %630, %3
  br i1 %631, label %632, label %620, !llvm.loop !18

632:                                              ; preds = %620, %444, %472, %674, %592, %447, %504
  %633 = phi i32 [ %449, %447 ], [ %505, %504 ], [ %605, %592 ], [ %473, %472 ], [ %675, %674 ], [ 0, %444 ], [ %627, %620 ]
  %634 = phi i32 [ %449, %447 ], [ %505, %504 ], [ %614, %592 ], [ %474, %472 ], [ %676, %674 ], [ 0, %444 ], [ %629, %620 ]
  %635 = phi i64 [ %450, %447 ], [ %3, %504 ], [ %3, %592 ], [ %475, %472 ], [ %677, %674 ], [ 0, %444 ], [ %3, %620 ]
  %636 = zext i32 %633 to i64
  %637 = zext i32 %634 to i64
  %638 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 0
  store i64 %636, i64* %638, align 8, !alias.scope !14
  %639 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 1
  store i64 %637, i64* %639, align 8, !alias.scope !14
  %640 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %0, i64 0, i32 2
  store i64 %635, i64* %640, align 8, !alias.scope !14
  br label %643

641:                                              ; preds = %5
  %642 = bitcast %"struct.gl::IndexRange"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %642, i8 0, i64 24, i1 false) #16
  br label %643

643:                                              ; preds = %641, %632, %426, %214
  ret void

644:                                              ; preds = %66
  %645 = icmp ugt i8 %67, %72
  %646 = select i1 %645, i8 %72, i8 %67
  %647 = icmp ult i8 %68, %72
  %648 = select i1 %647, i8 %72, i8 %68
  %649 = add i64 %69, 1
  br label %650

650:                                              ; preds = %644, %66
  %651 = phi i8 [ %646, %644 ], [ %67, %66 ]
  %652 = phi i8 [ %648, %644 ], [ %68, %66 ]
  %653 = phi i64 [ %649, %644 ], [ %69, %66 ]
  %654 = add nuw i64 %53, 2
  %655 = icmp eq i64 %654, %3
  br i1 %655, label %214, label %52

656:                                              ; preds = %284
  %657 = icmp ugt i16 %285, %290
  %658 = select i1 %657, i16 %290, i16 %285
  %659 = icmp ult i16 %286, %290
  %660 = select i1 %659, i16 %290, i16 %286
  %661 = add i64 %287, 1
  br label %662

662:                                              ; preds = %656, %284
  %663 = phi i16 [ %658, %656 ], [ %285, %284 ]
  %664 = phi i16 [ %660, %656 ], [ %286, %284 ]
  %665 = phi i64 [ %661, %656 ], [ %287, %284 ]
  %666 = add nuw i64 %271, 2
  %667 = icmp eq i64 %666, %3
  br i1 %667, label %426, label %270

668:                                              ; preds = %496
  %669 = icmp ugt i32 %497, %502
  %670 = select i1 %669, i32 %502, i32 %497
  %671 = icmp ult i32 %498, %502
  %672 = select i1 %671, i32 %502, i32 %498
  %673 = add i64 %499, 1
  br label %674

674:                                              ; preds = %668, %496
  %675 = phi i32 [ %670, %668 ], [ %497, %496 ]
  %676 = phi i32 [ %672, %668 ], [ %498, %496 ]
  %677 = phi i64 [ %673, %668 ], [ %499, %496 ]
  %678 = add nuw i64 %483, 2
  %679 = icmp eq i64 %678, %3
  br i1 %679, label %632, label %482
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 3
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE, i64 0, i64 %0
  %5 = load i32, i32* %4, align 4
  ret i32 %5

6:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl14IsTriangleModeENS_13PrimitiveModeE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp ult i8 %0, 7
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i8 %0 to i7
  %5 = lshr i7 -16, %4
  %6 = and i7 %5, 1
  %7 = icmp ne i7 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl13IsPolygonModeENS_13PrimitiveModeE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp ult i8 %0, 12
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = zext i8 %0 to i12
  %5 = lshr i12 1008, %4
  %6 = and i12 %5, 1
  %7 = icmp ne i12 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl15IsIntegerFormatEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 36249, label %3
    i32 36248, label %3
    i32 33320, label %3
    i32 36244, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl17VariableSortOrderEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %8 [
    i32 35815, label %7
    i32 37449, label %7
    i32 37595, label %7
    i32 36966, label %7
    i32 36955, label %7
    i32 35674, label %2
    i32 35666, label %3
    i32 35669, label %3
    i32 35673, label %3
    i32 36296, label %3
    i32 35675, label %4
    i32 35685, label %4
    i32 35687, label %4
    i32 35665, label %5
    i32 35668, label %5
    i32 35672, label %5
    i32 36295, label %5
    i32 35664, label %6
    i32 35667, label %6
    i32 35671, label %6
    i32 36294, label %6
    i32 5126, label %7
    i32 5124, label %7
    i32 35670, label %7
    i32 5125, label %7
    i32 35678, label %7
    i32 35680, label %7
    i32 36198, label %7
    i32 35683, label %7
    i32 36289, label %7
    i32 37128, label %7
    i32 37131, label %7
    i32 35679, label %7
    i32 36298, label %7
    i32 36299, label %7
    i32 36300, label %7
    i32 36303, label %7
    i32 37129, label %7
    i32 37132, label %7
    i32 36306, label %7
    i32 36307, label %7
    i32 36308, label %7
    i32 36311, label %7
    i32 37130, label %7
    i32 37133, label %7
    i32 35682, label %7
    i32 36292, label %7
    i32 36293, label %7
    i32 36941, label %7
    i32 36952, label %7
    i32 36963, label %7
    i32 36942, label %7
    i32 36953, label %7
    i32 36964, label %7
    i32 36947, label %7
    i32 36958, label %7
    i32 36969, label %7
    i32 36944, label %7
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1, %1, %1, %1
  br label %8

4:                                                ; preds = %1, %1, %1
  br label %8

5:                                                ; preds = %1, %1, %1, %1
  br label %8

6:                                                ; preds = %1, %1, %1, %1
  br label %8

7:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 6, %7 ], [ 5, %6 ], [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp ne %"class.std::__1::vector"* %2, null
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  br i1 %5, label %7, label %11

7:                                                ; preds = %3
  %8 = load i64, i64* %6, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  store i64 %8, i64* %10, align 8
  br label %11

11:                                               ; preds = %3, %7
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i32** %25 to i64*
  %28 = bitcast i32** %26 to i64*
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %11, %170
  %31 = phi i64 [ %19, %11 ], [ %171, %170 ]
  %32 = add i64 %31, -1
  %33 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* %1, i8 signext 91, i64 %32) #16
  %34 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* %1, i8 signext 93, i64 %32) #16
  %35 = icmp ne i64 %33, -1
  %36 = icmp eq i64 %34, %32
  %37 = and i1 %35, %36
  %38 = and i1 %5, %37
  %39 = select i1 %37, i64 %33, i64 %31
  br i1 %38, label %40, label %170

40:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %41 = add nuw i64 %33, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %41, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %21) #16
  %42 = load i8, i8* %23, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %24, align 8
  %45 = select i1 %43, i8* %44, i8* %20
  %46 = call i64 @strtol(i8* nocapture %45, i8** null, i32 10) #16
  %47 = trunc i64 %46 to i32
  %48 = load i8, i8* %23, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %40
  %51 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %40, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  %53 = icmp sgt i32 %47, -1
  %54 = load i32*, i32** %25, align 8
  %55 = load i32*, i32** %26, align 8
  %56 = icmp ult i32* %54, %55
  %57 = ptrtoint i32* %55 to i64
  br i1 %53, label %58, label %114

58:                                               ; preds = %52
  br i1 %56, label %59, label %62

59:                                               ; preds = %58
  store i32 %47, i32* %54, align 4
  %60 = getelementptr inbounds i32, i32* %54, i64 1
  %61 = ptrtoint i32* %60 to i64
  store i64 %61, i64* %27, align 8
  br label %170

62:                                               ; preds = %58
  %63 = ptrtoint i32* %54 to i64
  %64 = load i64, i64* %6, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 2
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %70) #17
  unreachable

71:                                               ; preds = %62
  %72 = sub i64 %57, %64
  %73 = ashr exact i64 %72, 2
  %74 = icmp ult i64 %73, 2305843009213693951
  br i1 %74, label %75, label %83

75:                                               ; preds = %71
  %76 = ashr exact i64 %72, 1
  %77 = icmp ult i64 %76, %67
  %78 = select i1 %77, i64 %67, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %75
  %81 = icmp ugt i64 %78, 4611686018427387903
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  call void @abort() #17
  unreachable

83:                                               ; preds = %80, %71
  %84 = phi i64 [ %78, %80 ], [ 4611686018427387903, %71 ]
  %85 = shl i64 %84, 2
  %86 = call i8* @_Znwm(i64 %85) #18
  %87 = bitcast i8* %86 to i32*
  br label %88

88:                                               ; preds = %83, %75
  %89 = phi i64 [ %84, %83 ], [ 0, %75 ]
  %90 = phi i32* [ %87, %83 ], [ null, %75 ]
  %91 = getelementptr inbounds i32, i32* %90, i64 %66
  %92 = getelementptr inbounds i32, i32* %90, i64 %89
  %93 = ptrtoint i32* %92 to i64
  store i32 %47, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %91, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = load i32*, i32** %29, align 8
  %97 = load i64, i64* %27, align 8
  %98 = ptrtoint i32* %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 2
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds i32, i32* %91, i64 %101
  %103 = ptrtoint i32* %102 to i64
  %104 = icmp sgt i64 %99, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %88
  %106 = bitcast i32* %102 to i8*
  %107 = bitcast i32* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %99, i1 false) #16
  %108 = load i32*, i32** %29, align 8
  br label %109

109:                                              ; preds = %105, %88
  %110 = phi i32* [ %96, %88 ], [ %108, %105 ]
  store i64 %103, i64* %6, align 8
  store i64 %95, i64* %27, align 8
  store i64 %93, i64* %28, align 8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %170, label %112

112:                                              ; preds = %109
  %113 = bitcast i32* %110 to i8*
  call void @_ZdlPv(i8* %113) #18
  br label %170

114:                                              ; preds = %52
  br i1 %56, label %115, label %118

115:                                              ; preds = %114
  store i32 -1, i32* %54, align 4
  %116 = getelementptr inbounds i32, i32* %54, i64 1
  %117 = ptrtoint i32* %116 to i64
  store i64 %117, i64* %27, align 8
  br label %170

118:                                              ; preds = %114
  %119 = ptrtoint i32* %54 to i64
  %120 = load i64, i64* %6, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 2
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 4611686018427387903
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %126) #17
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %57, %120
  %129 = ashr exact i64 %128, 2
  %130 = icmp ult i64 %129, 2305843009213693951
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = ashr exact i64 %128, 1
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 4611686018427387903
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  call void @abort() #17
  unreachable

139:                                              ; preds = %136, %127
  %140 = phi i64 [ %134, %136 ], [ 4611686018427387903, %127 ]
  %141 = shl i64 %140, 2
  %142 = call i8* @_Znwm(i64 %141) #18
  %143 = bitcast i8* %142 to i32*
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi i32* [ %143, %139 ], [ null, %131 ]
  %147 = getelementptr inbounds i32, i32* %146, i64 %122
  %148 = getelementptr inbounds i32, i32* %146, i64 %145
  %149 = ptrtoint i32* %148 to i64
  store i32 -1, i32* %147, align 4
  %150 = getelementptr inbounds i32, i32* %147, i64 1
  %151 = ptrtoint i32* %150 to i64
  %152 = load i32*, i32** %29, align 8
  %153 = load i64, i64* %27, align 8
  %154 = ptrtoint i32* %152 to i64
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = sub nsw i64 0, %156
  %158 = getelementptr inbounds i32, i32* %147, i64 %157
  %159 = ptrtoint i32* %158 to i64
  %160 = icmp sgt i64 %155, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %144
  %162 = bitcast i32* %158 to i8*
  %163 = bitcast i32* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %163, i64 %155, i1 false) #16
  %164 = load i32*, i32** %29, align 8
  br label %165

165:                                              ; preds = %161, %144
  %166 = phi i32* [ %152, %144 ], [ %164, %161 ]
  store i64 %159, i64* %6, align 8
  store i64 %151, i64* %27, align 8
  store i64 %149, i64* %28, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %169) #18
  br label %170

170:                                              ; preds = %30, %168, %165, %115, %112, %109, %59
  %171 = phi i64 [ %39, %30 ], [ %33, %59 ], [ %33, %109 ], [ %33, %112 ], [ %33, %115 ], [ %33, %165 ], [ %33, %168 ]
  br i1 %37, label %30, label %172

172:                                              ; preds = %170
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %171, %"class.std::__1::allocator"* dereferenceable(1) %21) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13IsBuiltInNameEPKc(i8*) local_unnamed_addr #1 {
  %2 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #16
  ret i1 %2
}

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19StripLastArrayIndexERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 {
  %3 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* %1, i8 signext 91, i64 -1) #16
  %4 = icmp eq i64 %3, -1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  br i1 %4, label %24, label %8

8:                                                ; preds = %2
  %9 = icmp slt i8 %7, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %7 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 93
  br i1 %21, label %22, label %24

22:                                               ; preds = %8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %3, %"class.std::__1::allocator"* dereferenceable(1) %23) #16
  br label %34

24:                                               ; preds = %2, %8
  %25 = icmp slt i8 %7, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #16
  br label %34

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %31, i64 %33) #16
  br label %34

34:                                               ; preds = %29, %26, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 {
  %2 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 0) #16
  %3 = icmp eq i64 %2, -1
  br i1 %3, label %12, label %8

4:                                                ; preds = %8
  %5 = add nuw i64 %9, 1
  %6 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 %5) #16
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %12, label %8

8:                                                ; preds = %1, %4
  %9 = phi i64 [ %6, %4 ], [ %2, %1 ]
  %10 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"* %0, i64 %9, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kZERO_ELEMENT, i64 0, i64 0)) #16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %12

12:                                               ; preds = %8, %4, %1
  %13 = phi i1 [ false, %1 ], [ false, %4 ], [ true, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"*, i64, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2gl16ArraySizeProductERKNSt3__16vectorIjNS0_9allocatorIjEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %3, %5
  br i1 %6, label %104, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i32* %3 to i64
  %9 = getelementptr i32, i32* %5, i64 -1
  %10 = ptrtoint i32* %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 2
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %13, 8
  br i1 %14, label %15, label %18

15:                                               ; preds = %94, %7
  %16 = phi i32 [ 1, %7 ], [ %102, %94 ]
  %17 = phi i32* [ %3, %7 ], [ %20, %94 ]
  br label %106

18:                                               ; preds = %7
  %19 = and i64 %13, 9223372036854775800
  %20 = getelementptr i32, i32* %3, i64 %19
  %21 = add nsw i64 %19, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = and i64 %23, 3
  %25 = icmp ult i64 %21, 24
  br i1 %25, label %71, label %26

26:                                               ; preds = %18
  %27 = sub nsw i64 %23, %24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %68, %28 ]
  %30 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %26 ], [ %66, %28 ]
  %31 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %26 ], [ %67, %28 ]
  %32 = phi i64 [ %27, %26 ], [ %69, %28 ]
  %33 = getelementptr i32, i32* %3, i64 %29
  %34 = bitcast i32* %33 to <4 x i32>*
  %35 = load <4 x i32>, <4 x i32>* %34, align 4
  %36 = getelementptr i32, i32* %33, i64 4
  %37 = bitcast i32* %36 to <4 x i32>*
  %38 = load <4 x i32>, <4 x i32>* %37, align 4
  %39 = mul <4 x i32> %35, %30
  %40 = mul <4 x i32> %38, %31
  %41 = or i64 %29, 8
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 4
  %45 = getelementptr i32, i32* %42, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = mul <4 x i32> %44, %39
  %49 = mul <4 x i32> %47, %40
  %50 = or i64 %29, 16
  %51 = getelementptr i32, i32* %3, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 4
  %54 = getelementptr i32, i32* %51, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = mul <4 x i32> %53, %48
  %58 = mul <4 x i32> %56, %49
  %59 = or i64 %29, 24
  %60 = getelementptr i32, i32* %3, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = mul <4 x i32> %62, %57
  %67 = mul <4 x i32> %65, %58
  %68 = add i64 %29, 32
  %69 = add i64 %32, -4
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %28, !llvm.loop !19

71:                                               ; preds = %28, %18
  %72 = phi <4 x i32> [ undef, %18 ], [ %66, %28 ]
  %73 = phi <4 x i32> [ undef, %18 ], [ %67, %28 ]
  %74 = phi i64 [ 0, %18 ], [ %68, %28 ]
  %75 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %18 ], [ %66, %28 ]
  %76 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %18 ], [ %67, %28 ]
  %77 = icmp eq i64 %24, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %71, %78
  %79 = phi i64 [ %91, %78 ], [ %74, %71 ]
  %80 = phi <4 x i32> [ %89, %78 ], [ %75, %71 ]
  %81 = phi <4 x i32> [ %90, %78 ], [ %76, %71 ]
  %82 = phi i64 [ %92, %78 ], [ %24, %71 ]
  %83 = getelementptr i32, i32* %3, i64 %79
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = getelementptr i32, i32* %83, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = mul <4 x i32> %85, %80
  %90 = mul <4 x i32> %88, %81
  %91 = add i64 %79, 8
  %92 = add i64 %82, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %78, !llvm.loop !20

94:                                               ; preds = %78, %71
  %95 = phi <4 x i32> [ %72, %71 ], [ %89, %78 ]
  %96 = phi <4 x i32> [ %73, %71 ], [ %90, %78 ]
  %97 = mul <4 x i32> %96, %95
  %98 = shufflevector <4 x i32> %97, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %99 = mul <4 x i32> %97, %98
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %101 = mul <4 x i32> %99, %100
  %102 = extractelement <4 x i32> %101, i32 0
  %103 = icmp eq i64 %13, %19
  br i1 %103, label %104, label %15

104:                                              ; preds = %106, %94, %1
  %105 = phi i32 [ 1, %1 ], [ %102, %94 ], [ %110, %106 ]
  ret i32 %105

106:                                              ; preds = %15, %106
  %107 = phi i32 [ %110, %106 ], [ %16, %15 ]
  %108 = phi i32* [ %111, %106 ], [ %17, %15 ]
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, %107
  %111 = getelementptr inbounds i32, i32* %108, i64 1
  %112 = icmp eq i32* %111, %5
  br i1 %112, label %104, label %106, !llvm.loop !22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl15ParseArrayIndexERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPm(%"class.std::__1::basic_string"* dereferenceable(24), i64* nocapture) local_unnamed_addr #1 {
  %3 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 -1) #16
  %4 = icmp eq i64 %3, -1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %4, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 93
  br i1 %21, label %22, label %65

22:                                               ; preds = %6
  %23 = add nuw i64 %3, 1
  %24 = add i64 %17, -1
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %26, label %48

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %16, i64 %23
  %28 = add nuw i64 %3, 2
  %29 = getelementptr inbounds i8, i8* %16, i64 %28
  br label %30

30:                                               ; preds = %26, %45
  %31 = phi i64 [ %23, %26 ], [ %46, %45 ]
  %32 = getelementptr inbounds i8, i8* %16, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = add nsw i32 %34, -48
  %36 = icmp ult i32 %35, 10
  br i1 %36, label %37, label %65

37:                                               ; preds = %30
  %38 = icmp eq i64 %31, %23
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = load i8, i8* %27, align 1
  %41 = icmp eq i8 %40, 48
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load i8, i8* %29, align 1
  %44 = icmp eq i8 %43, 93
  br i1 %44, label %45, label %65

45:                                               ; preds = %42, %37, %39
  %46 = add nuw i64 %31, 1
  %47 = icmp ult i64 %46, %24
  br i1 %47, label %30, label %48

48:                                               ; preds = %45, %22
  %49 = tail call i32* @__errno_location() #19
  store i32 0, i32* %49, align 4
  %50 = load i8, i8* %7, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %10, align 8
  %53 = select i1 %51, i8* %52, i8* %14
  %54 = getelementptr inbounds i8, i8* %53, i64 %3
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  %56 = tail call i64 @strtoul(i8* nocapture %55, i8** null, i32 10) #16
  %57 = icmp ult i64 %56, 4294967296
  br i1 %57, label %58, label %65

58:                                               ; preds = %48
  %59 = load i32, i32* %49, align 4
  %60 = icmp ne i32 %59, 0
  %61 = icmp eq i64 %56, 0
  %62 = and i1 %61, %60
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  store i64 %3, i64* %1, align 8
  %64 = trunc i64 %56 to i32
  br label %73

65:                                               ; preds = %42, %30, %2, %48, %58, %6
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  store i64 %72, i64* %1, align 8
  br label %73

73:                                               ; preds = %63, %65
  %74 = phi i32 [ -1, %65 ], [ %64, %63 ]
  ret i32 %74
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2gl22GetGenericErrorMessageEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %9 [
    i32 0, label %10
    i32 1280, label %2
    i32 1281, label %3
    i32 1282, label %4
    i32 1283, label %5
    i32 1284, label %6
    i32 1285, label %7
    i32 1286, label %8
  ]

2:                                                ; preds = %1
  br label %10

3:                                                ; preds = %1
  br label %10

4:                                                ; preds = %1
  br label %10

5:                                                ; preds = %1
  br label %10

6:                                                ; preds = %1
  br label %10

7:                                                ; preds = %1
  br label %10

8:                                                ; preds = %1
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %1, %9, %8, %7, %6, %5, %4, %3, %2
  %11 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), %9 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), %8 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), %7 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), %6 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), %5 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), %4 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), %2 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %1 ]
  ret i8* %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl15ElementTypeSizeEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -5121
  %3 = icmp ult i32 %2, 5
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2gl15ElementTypeSizeEj, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl15GetPipelineTypeENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp eq i8 %0, 5
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2gl27GetDebugMessageSourceStringEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -33350
  %3 = icmp ult i32 %2, 6
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN2gl27GetDebugMessageSourceStringEj, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2gl25GetDebugMessageTypeStringEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %8 [
    i32 33356, label %9
    i32 33357, label %2
    i32 33358, label %3
    i32 33359, label %4
    i32 33360, label %5
    i32 33361, label %6
    i32 33384, label %7
  ]

2:                                                ; preds = %1
  br label %9

3:                                                ; preds = %1
  br label %9

4:                                                ; preds = %1
  br label %9

5:                                                ; preds = %1
  br label %9

6:                                                ; preds = %1
  br label %9

7:                                                ; preds = %1
  br label %9

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %1, %8, %7, %6, %5, %4, %3, %2
  %10 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), %8 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), %7 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), %6 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0), %5 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), %4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), %3 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), %1 ]
  ret i8* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN2gl29GetDebugMessageSeverityStringEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %5 [
    i32 37190, label %6
    i32 37191, label %2
    i32 37192, label %3
    i32 33387, label %4
  ]

2:                                                ; preds = %1
  br label %6

3:                                                ; preds = %1
  br label %6

4:                                                ; preds = %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %1, %5, %4, %3, %2
  %7 = phi i8* [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0), %5 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), %4 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), %3 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), %2 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %1 ]
  ret i8* %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN2gl25GetShaderTypeFromBitfieldEm(i64) local_unnamed_addr #0 {
  switch i64 %0, label %7 [
    i64 1, label %8
    i64 2, label %2
    i64 32, label %3
    i64 4, label %4
    i64 8, label %5
    i64 16, label %6
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3, %2
  %9 = phi i8 [ 6, %7 ], [ 2, %6 ], [ 1, %5 ], [ 3, %4 ], [ 5, %3 ], [ 4, %2 ], [ 0, %1 ]
  ret i8 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl25GetBitfieldFromShaderTypeENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp ult i8 %0, 6
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i8 %0 to i64
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN2gl25GetBitfieldFromShaderTypeENS_10ShaderTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #0 {
  %2 = icmp ult i8 %0, 4
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i8 %0 to i4
  %5 = lshr i4 -3, %4
  %6 = and i4 %5, 1
  %7 = icmp ne i4 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT"* nocapture) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, -49
  store i8 %4, i8* %2, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = zext i8 %4 to i32
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 true) #16, !range !23
  %9 = trunc i32 %8 to i8
  %10 = xor i8 %9, 31
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i8 [ %10, %6 ], [ 6, %1 ]
  ret i8 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3egl22IsCubeMapTextureTargetEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -12467
  %3 = icmp ult i32 %2, 6
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3egl32CubeMapTextureTargetToLayerIndexEj(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = add nsw i64 %2, -12467
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3egl32LayerIndexToCubeMapTextureTargetEm(i64) local_unnamed_addr #0 {
  %2 = trunc i64 %0 to i32
  %3 = add i32 %2, 12467
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3egl15IsTextureTargetEj(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -12465
  %3 = icmp ult i32 %2, 8
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3egl20IsRenderbufferTargetEj(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 12473
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3egl21IsExternalImageTargetEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 12608, label %3
    i32 13444, label %3
    i32 12912, label %3
    i32 13479, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3egl22GetGenericErrorMessageEi(i32) local_unnamed_addr #0 {
  switch i32 %0, label %19 [
    i32 12288, label %20
    i32 12289, label %2
    i32 12290, label %3
    i32 12291, label %4
    i32 12292, label %5
    i32 12293, label %6
    i32 12294, label %7
    i32 12295, label %8
    i32 12296, label %9
    i32 12297, label %10
    i32 12299, label %11
    i32 12298, label %12
    i32 12300, label %13
    i32 12301, label %14
    i32 12302, label %15
    i32 12827, label %16
    i32 12828, label %17
    i32 12843, label %18
  ]

2:                                                ; preds = %1
  br label %20

3:                                                ; preds = %1
  br label %20

4:                                                ; preds = %1
  br label %20

5:                                                ; preds = %1
  br label %20

6:                                                ; preds = %1
  br label %20

7:                                                ; preds = %1
  br label %20

8:                                                ; preds = %1
  br label %20

9:                                                ; preds = %1
  br label %20

10:                                               ; preds = %1
  br label %20

11:                                               ; preds = %1
  br label %20

12:                                               ; preds = %1
  br label %20

13:                                               ; preds = %1
  br label %20

14:                                               ; preds = %1
  br label %20

15:                                               ; preds = %1
  br label %20

16:                                               ; preds = %1
  br label %20

17:                                               ; preds = %1
  br label %20

18:                                               ; preds = %1
  br label %20

19:                                               ; preds = %1
  br label %20

20:                                               ; preds = %1, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %21 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), %19 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0), %18 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i64 0, i64 0), %17 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i64 0, i64 0), %16 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i64 0, i64 0), %15 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0), %14 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %13 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), %12 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i64 0, i64 0), %11 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), %10 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0), %9 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), %8 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), %7 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), %6 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0), %5 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i64 0, i64 0), %4 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0), %3 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0), %2 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %1 ]
  ret i8* %21
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6egl_gl31EGLClientBufferToGLObjectHandleEPv(i8*) local_unnamed_addr #0 {
  %2 = ptrtoint i8* %0 to i64
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6gl_egl38GLComponentTypeToEGLColorComponentTypeEj(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 35863
  %3 = select i1 %2, i32 13114, i32 12344
  %4 = icmp eq i32 %0, 5126
  %5 = select i1 %4, i32 13115, i32 %3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN6gl_egl31GLObjectHandleToEGLClientBufferEj(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = inttoptr i64 %2 to i8*
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11getTempPathv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  store i8 0, i8* %3, align 1
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z9writeFilePKcPKvm(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #9 {
  %4 = tail call %struct._IO_FILE* @fopen64(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0))
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @fwrite(i8* %1, i64 1, i64 %2, %struct._IO_FILE* nonnull %4)
  %8 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4)
  br label %9

9:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeIhEEN2gl10IndexRangeEPKT_mbj: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeIhEEN2gl10IndexRangeEPKT_mbj"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8, !6}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeItEEN2gl10IndexRangeEPKT_mbj: argument 0"}
!11 = distinct !{!11, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeItEEN2gl10IndexRangeEPKT_mbj"}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !8, !6}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeIjEEN2gl10IndexRangeEPKT_mbj: argument 0"}
!16 = distinct !{!16, !"_ZN12_GLOBAL__N_122ComputeTypedIndexRangeIjEEN2gl10IndexRangeEPKT_mbj"}
!17 = distinct !{!17, !6}
!18 = distinct !{!18, !8, !6}
!19 = distinct !{!19, !6}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !8, !6}
!23 = !{i32 0, i32 33}
