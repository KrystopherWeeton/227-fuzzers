; ModuleID = '../../third_party/libjingle_xmpp/xmpp/xmppclient.cc'
source_filename = "../../third_party/libjingle_xmpp/xmpp/xmppclient.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.jingle_xmpp::XmppClient" = type <{ %"class.jingle_xmpp::XmppTaskParentInterface.base", [4 x i8], %"class.jingle_xmpp::XmppClientInterface", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.12", %"class.sigslot::signal_with_thread_policy.14", %"class.sigslot::signal_with_thread_policy.14", %"class.std::__1::unique_ptr.16", i8, i8, [6 x i8] }>
%"class.jingle_xmpp::XmppTaskParentInterface.base" = type { %"class.jingle_xmpp::Task.base" }
%"class.jingle_xmpp::Task.base" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32 }>
%"class.jingle_xmpp::TaskParent" = type { i32 (...)**, %"class.jingle_xmpp::TaskParent"*, %"class.jingle_xmpp::TaskRunner"*, i8, %"class.std::__1::unique_ptr" }
%"class.jingle_xmpp::TaskRunner" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::set"* }
%"class.std::__1::set" = type opaque
%"class.jingle_xmpp::XmppClientInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy" }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set.4" }
%"class.std::__1::set.4" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.sigslot::signal_with_thread_policy.12" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.14" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.jingle_xmpp::XmppClient::Private"* }
%"class.jingle_xmpp::XmppClient::Private" = type <{ %"class.sigslot::has_slots", %"class.jingle_xmpp::XmppSessionHandler", %"class.jingle_xmpp::XmppOutputHandler", %"class.jingle_xmpp::XmppClient"*, %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.net::HostPortPair", i32, i32, %"class.jingle_xmpp::CaptchaChallenge", i8, i8, [6 x i8] }>
%"class.jingle_xmpp::XmppSessionHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppOutputHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.jingle_xmpp::AsyncSocket"* }
%"class.jingle_xmpp::AsyncSocket" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.jingle_xmpp::XmppEngine"* }
%"class.jingle_xmpp::XmppEngine" = type { i32 (...)** }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.jingle_xmpp::PreXmppAuth"* }
%"class.jingle_xmpp::PreXmppAuth" = type { %"class.jingle_xmpp::SaslHandler", %"class.sigslot::signal_with_thread_policy" }
%"class.jingle_xmpp::SaslHandler" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.jingle_xmpp::CaptchaChallenge" = type { i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmppClientSettings" = type <{ %"class.jingle_xmpp::XmppUserSettings", %"class.net::HostPortPair", i32, [4 x i8] }>
%"class.jingle_xmpp::XmppUserSettings" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string" }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::Task" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.sigslot::_signal_base_interface"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.jingle_xmpp::XmppTask" = type { %"class.jingle_xmpp::XmppTaskBase", %"class.jingle_xmpp::XmppStanzaHandler", %"class.sigslot::has_slots", i8, %"class.std::__1::deque", %"class.std::__1::unique_ptr.54", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmppTaskBase" = type { %"class.jingle_xmpp::XmppTaskParentInterface.base", %"class.jingle_xmpp::XmppTaskParentInterface"* }
%"class.jingle_xmpp::XmppTaskParentInterface" = type { %"class.jingle_xmpp::Task.base", [4 x i8] }
%"class.jingle_xmpp::XmppStanzaHandler" = type { i32 (...)** }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::__split_buffer" = type { %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.jingle_xmpp::XmlElement"*** }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.jingle_xmpp::PlainSaslHandler" = type <{ %"class.jingle_xmpp::SaslHandler", %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::basic_string"* }
%"class.jingle_xmpp::SaslMechanism" = type { i32 (...)** }
%"class.jingle_xmpp::SaslPlainMechanism" = type { %"class.jingle_xmpp::SaslMechanism", %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN11jingle_xmpp10XmppClient7Private11ResetSocketEv = comdat any

$_ZN11jingle_xmpp10XmppClient7PrivateD2Ev = comdat any

$_ZN11jingle_xmpp10XmppClient7PrivateD0Ev = comdat any

$_ZThn56_N11jingle_xmpp10XmppClient7PrivateD1Ev = comdat any

$_ZThn56_N11jingle_xmpp10XmppClient7PrivateD0Ev = comdat any

$_ZThn64_N11jingle_xmpp10XmppClient7PrivateD1Ev = comdat any

$_ZThn64_N11jingle_xmpp10XmppClient7PrivateD0Ev = comdat any

$_ZNK11jingle_xmpp10XmppClient12GetStateNameEi = comdat any

$_ZN11jingle_xmpp10XmppClient7ProcessEi = comdat any

$_ZN11jingle_xmpp10XmppClient9GetClientEv = comdat any

$_ZN11jingle_xmpp16PlainSaslHandlerD2Ev = comdat any

$_ZN11jingle_xmpp16PlainSaslHandlerD0Ev = comdat any

$_ZN11jingle_xmpp16PlainSaslHandler23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb = comdat any

$_ZN11jingle_xmpp16PlainSaslHandler19CreateSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZN11jingle_xmpp18SaslPlainMechanismD2Ev = comdat any

$_ZN11jingle_xmpp18SaslPlainMechanismD0Ev = comdat any

$_ZN11jingle_xmpp18SaslPlainMechanism16GetMechanismNameEv = comdat any

$_ZN11jingle_xmpp18SaslPlainMechanism13StartSaslAuthEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN11jingle_xmpp23XmppTaskParentInterfaceD0Ev = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEE17do_signal_connectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEE20do_signal_disconnectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEE17do_disconnect_allEPNS_19has_slots_interfaceE = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClient7PrivateEJEEEvPKS0_DpT0_ = comdat any

$_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClientEJEEEvPKS0_DpT0_ = comdat any

$_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE = comdat any

$_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_ = comdat any

$_ZTVN11jingle_xmpp16PlainSaslHandlerE = comdat any

$_ZTVN11jingle_xmpp18SaslPlainMechanismE = comdat any

$_ZTVN11jingle_xmpp23XmppTaskParentInterfaceE = comdat any

$_ZTVN7sigslot9has_slotsINS_15single_threadedEEE = comdat any

@_ZN11jingle_xmpp19STR_TALK_GOOGLE_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp22STR_TALKX_L_GOOGLE_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp19STR_XMPP_GOOGLE_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp22STR_XMPPX_L_GOOGLE_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp13STR_GMAIL_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp18STR_GOOGLEMAIL_COME = external constant [0 x i8], align 1
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@_ZTVN11jingle_xmpp10XmppClientE = hidden unnamed_addr constant { [17 x i8*], [11 x i8*], [4 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClientD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClientD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppClient"*, i32)* @_ZNK11jingle_xmpp10XmppClient12GetStateNameEi to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*, i32)* @_ZN11jingle_xmpp10XmppClient7ProcessEi to i8*), i8* bitcast (void (%"class.jingle_xmpp::Task"*)* @_ZN11jingle_xmpp4Task4StopEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClient12ProcessStartEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClient15ProcessResponseEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClient9GetClientEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*)* @_ZNK11jingle_xmpp10XmppClient8GetStateEv to i8*), i8* bitcast (%"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppClient"*)* @_ZNK11jingle_xmpp10XmppClient3jidEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClient6NextIdEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp10XmppClient10SendStanzaEPKNS_10XmlElementE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp10XmppClient15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppTask"*, i32)* @_ZN11jingle_xmpp10XmppClient11AddXmppTaskEPNS_8XmppTaskENS_10XmppEngine12HandlerLevelE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppTask"*)* @_ZN11jingle_xmpp10XmppClient14RemoveXmppTaskEPNS_8XmppTaskE to i8*)], [11 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZThn88_N11jingle_xmpp10XmppClientD1Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZThn88_N11jingle_xmpp10XmppClientD0Ev to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*)* @_ZThn88_NK11jingle_xmpp10XmppClient8GetStateEv to i8*), i8* bitcast (%"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppClient"*)* @_ZThn88_NK11jingle_xmpp10XmppClient3jidEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppClient"*)* @_ZThn88_N11jingle_xmpp10XmppClient6NextIdEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmlElement"*)* @_ZThn88_N11jingle_xmpp10XmppClient10SendStanzaEPKNS_10XmlElementE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)* @_ZThn88_N11jingle_xmpp10XmppClient15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppTask"*, i32)* @_ZThn88_N11jingle_xmpp10XmppClient11AddXmppTaskEPNS_8XmppTaskENS_10XmppEngine12HandlerLevelE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppTask"*)* @_ZThn88_N11jingle_xmpp10XmppClient14RemoveXmppTaskEPNS_8XmppTaskE to i8*)], [4 x i8*] [i8* inttoptr (i64 -152 to i8*), i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZThn152_N11jingle_xmpp10XmppClientD1Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient"*)* @_ZThn152_N11jingle_xmpp10XmppClientD0Ev to i8*)] }, align 8
@_ZTVN11jingle_xmpp10XmppClient7PrivateE = hidden unnamed_addr constant { [8 x i8*], [5 x i8*], [7 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7PrivateD0Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, i32)* @_ZN11jingle_xmpp10XmppClient7Private13OnStateChangeEi to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, i8*, i64)* @_ZN11jingle_xmpp10XmppClient7Private11WriteOutputEPKcm to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp10XmppClient7Private8StartTlsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7Private15CloseConnectionEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZThn56_N11jingle_xmpp10XmppClient7PrivateD1Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZThn56_N11jingle_xmpp10XmppClient7PrivateD0Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, i32)* @_ZThn56_N11jingle_xmpp10XmppClient7Private13OnStateChangeEi to i8*)], [7 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZThn64_N11jingle_xmpp10XmppClient7PrivateD1Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZThn64_N11jingle_xmpp10XmppClient7PrivateD0Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, i8*, i64)* @_ZThn64_N11jingle_xmpp10XmppClient7Private11WriteOutputEPKcm to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*, %"class.std::__1::basic_string"*)* @_ZThn64_N11jingle_xmpp10XmppClient7Private8StartTlsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZThn64_N11jingle_xmpp10XmppClient7Private15CloseConnectionEv to i8*)] }, align 8
@_ZTVN11jingle_xmpp16PlainSaslHandlerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::PlainSaslHandler"*)* @_ZN11jingle_xmpp16PlainSaslHandlerD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::PlainSaslHandler"*)* @_ZN11jingle_xmpp16PlainSaslHandlerD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PlainSaslHandler"*, %"class.std::__1::vector"*, i1)* @_ZN11jingle_xmpp16PlainSaslHandler23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb to i8*), i8* bitcast (%"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::PlainSaslHandler"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp16PlainSaslHandler19CreateSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"PLAIN\00", align 1
@_ZTVN11jingle_xmpp18SaslPlainMechanismE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::SaslPlainMechanism"*)* @_ZN11jingle_xmpp18SaslPlainMechanismD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslPlainMechanism"*)* @_ZN11jingle_xmpp18SaslPlainMechanismD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslPlainMechanism"*)* @_ZN11jingle_xmpp18SaslPlainMechanism16GetMechanismNameEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslPlainMechanism"*)* @_ZN11jingle_xmpp18SaslPlainMechanism13StartSaslAuthEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism19HandleSaslChallengeEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslSuccessEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslFailureEPKNS_10XmlElementE to i8*)] }, comdat, align 8
@_ZN11jingle_xmpp12QN_SASL_AUTHE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp12QN_MECHANISME = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.2 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN11jingle_xmpp23XmppTaskParentInterfaceE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::Task"*)* @_ZN11jingle_xmpp4TaskD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppTaskParentInterface"*)* @_ZN11jingle_xmpp23XmppTaskParentInterfaceD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::Task"*, i32)* @_ZNK11jingle_xmpp4Task12GetStateNameEi to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::Task"*, i32)* @_ZN11jingle_xmpp4Task7ProcessEi to i8*), i8* bitcast (void (%"class.jingle_xmpp::Task"*)* @_ZN11jingle_xmpp4Task4StopEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::Task"*)* @_ZN11jingle_xmpp4Task15ProcessResponseEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"PRE_XMPP_LOGIN\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"START_XMPP_LOGIN\00", align 1
@_ZTVN7sigslot9has_slotsINS_15single_threadedEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sigslot::has_slots"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev to i8*), i8* bitcast (void (%"class.sigslot::has_slots"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev to i8*)] }, comdat, align 8

@_ZN11jingle_xmpp10XmppClientC1EPNS_10TaskParentE = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::TaskParent"*), void (%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::TaskParent"*)* @_ZN11jingle_xmpp10XmppClientC2EPNS_10TaskParentE
@_ZN11jingle_xmpp10XmppClientD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppClient"*), void (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient7ConnectERKNS_18XmppClientSettingsERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_11AsyncSocketEPNS_11PreXmppAuthE(%"class.jingle_xmpp::XmppClient"* readonly, %"class.jingle_xmpp::XmppClientSettings"* dereferenceable(216), %"class.std::__1::basic_string"* dereferenceable(24), %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::PreXmppAuth"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.jingle_xmpp::Jid", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %3, null
  br i1 %11, label %533, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %14 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %15, align 8
  %17 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %16, null
  br i1 %17, label %18, label %533

18:                                               ; preds = %12
  store %"class.jingle_xmpp::AsyncSocket"* %3, %"class.jingle_xmpp::AsyncSocket"** %15, align 8
  %19 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %20, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %21, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %19, i64 0, i32 0, i32 0
  %24 = tail call i8* @_Znwm(i64 48) #11, !noalias !2
  %25 = bitcast i8* %24 to %"struct.std::__1::__list_node_base"**
  %26 = getelementptr inbounds i8, i8* %24, i64 16
  %27 = bitcast i8* %26 to void (%"class.sigslot::_opaque_connection"*)**
  store void (%"class.sigslot::_opaque_connection"*)* @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClient7PrivateEJEEEvPKS0_DpT0_, void (%"class.sigslot::_opaque_connection"*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 24
  %29 = bitcast i8* %28 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %23, %"class.sigslot::has_slots_interface"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 32
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7Private17OnSocketConnectedEv to i64), i64 0>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %22, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds i8, i8* %24, i64 8
  %34 = bitcast i8* %33 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %32, %"struct.std::__1::__list_node_base"** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %22, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %25, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 0, i32 1
  %38 = bitcast %"struct.std::__1::__list_node_base"** %37 to i8**
  store i8* %24, i8** %38, align 8
  %39 = bitcast %"class.std::__1::list"* %22 to i8**
  store i8* %24, i8** %39, align 8
  %40 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %21, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %21, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %19, i64 0, i32 0, i32 0, i32 1
  %45 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %44, align 8
  tail call void %45(%"class.sigslot::has_slots_interface"* %23, %"class.sigslot::_signal_base_interface"* %43) #12
  %46 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %47 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %47, align 8
  %49 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %48, i64 0, i32 4, i32 0, i32 1
  %50 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %46, i64 0, i32 0, i32 0
  %51 = tail call i8* @_Znwm(i64 48) #11, !noalias !5
  %52 = bitcast i8* %51 to %"struct.std::__1::__list_node_base"**
  %53 = getelementptr inbounds i8, i8* %51, i64 16
  %54 = bitcast i8* %53 to void (%"class.sigslot::_opaque_connection"*)**
  store void (%"class.sigslot::_opaque_connection"*)* @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClient7PrivateEJEEEvPKS0_DpT0_, void (%"class.sigslot::_opaque_connection"*)** %54, align 8
  %55 = getelementptr inbounds i8, i8* %51, i64 24
  %56 = bitcast i8* %55 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %50, %"class.sigslot::has_slots_interface"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 32
  %58 = bitcast i8* %57 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7Private12OnSocketReadEv to i64), i64 0>, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %49, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds i8, i8* %51, i64 8
  %61 = bitcast i8* %60 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %59, %"struct.std::__1::__list_node_base"** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %49, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  store %"struct.std::__1::__list_node_base"* %63, %"struct.std::__1::__list_node_base"** %52, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = bitcast %"struct.std::__1::__list_node_base"** %64 to i8**
  store i8* %51, i8** %65, align 8
  %66 = bitcast %"class.std::__1::list"* %49 to i8**
  store i8* %51, i8** %66, align 8
  %67 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %48, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %48, i64 0, i32 4, i32 0, i32 0
  %71 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %46, i64 0, i32 0, i32 0, i32 1
  %72 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %71, align 8
  tail call void %72(%"class.sigslot::has_slots_interface"* %50, %"class.sigslot::_signal_base_interface"* %70) #12
  %73 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %74 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %73, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %74, align 8
  %76 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %75, i64 0, i32 3, i32 0, i32 1
  %77 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %73, i64 0, i32 0, i32 0
  %78 = tail call i8* @_Znwm(i64 48) #11, !noalias !8
  %79 = bitcast i8* %78 to %"struct.std::__1::__list_node_base"**
  %80 = getelementptr inbounds i8, i8* %78, i64 16
  %81 = bitcast i8* %80 to void (%"class.sigslot::_opaque_connection"*)**
  store void (%"class.sigslot::_opaque_connection"*)* @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClient7PrivateEJEEEvPKS0_DpT0_, void (%"class.sigslot::_opaque_connection"*)** %81, align 8
  %82 = getelementptr inbounds i8, i8* %78, i64 24
  %83 = bitcast i8* %82 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %77, %"class.sigslot::has_slots_interface"** %83, align 8
  %84 = getelementptr inbounds i8, i8* %78, i64 32
  %85 = bitcast i8* %84 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_xmpp::XmppClient::Private"*)* @_ZN11jingle_xmpp10XmppClient7Private14OnSocketClosedEv to i64), i64 0>, <2 x i64>* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %76, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds i8, i8* %78, i64 8
  %88 = bitcast i8* %87 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %86, %"struct.std::__1::__list_node_base"** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %76, i64 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %89, align 8
  store %"struct.std::__1::__list_node_base"* %90, %"struct.std::__1::__list_node_base"** %79, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %90, i64 0, i32 1
  %92 = bitcast %"struct.std::__1::__list_node_base"** %91 to i8**
  store i8* %78, i8** %92, align 8
  %93 = bitcast %"class.std::__1::list"* %76 to i8**
  store i8* %78, i8** %93, align 8
  %94 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %75, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %94, align 8
  %97 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %75, i64 0, i32 3, i32 0, i32 0
  %98 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %73, i64 0, i32 0, i32 0, i32 1
  %99 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %98, align 8
  tail call void %99(%"class.sigslot::has_slots_interface"* %77, %"class.sigslot::_signal_base_interface"* %97) #12
  %100 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %101 = tail call %"class.jingle_xmpp::XmppEngine"* @_ZN11jingle_xmpp10XmppEngine6CreateEv() #12
  %102 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %100, i64 0, i32 5, i32 0, i32 0, i32 0
  %103 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %102, align 8
  store %"class.jingle_xmpp::XmppEngine"* %101, %"class.jingle_xmpp::XmppEngine"** %102, align 8
  %104 = icmp eq %"class.jingle_xmpp::XmppEngine"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %18
  %106 = bitcast %"class.jingle_xmpp::XmppEngine"* %103 to void (%"class.jingle_xmpp::XmppEngine"*)***
  %107 = load void (%"class.jingle_xmpp::XmppEngine"*)**, void (%"class.jingle_xmpp::XmppEngine"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.jingle_xmpp::XmppEngine"*)*, void (%"class.jingle_xmpp::XmppEngine"*)** %107, i64 1
  %109 = load void (%"class.jingle_xmpp::XmppEngine"*)*, void (%"class.jingle_xmpp::XmppEngine"*)** %108, align 8
  tail call void %109(%"class.jingle_xmpp::XmppEngine"* nonnull %103) #12
  br label %110

110:                                              ; preds = %18, %105
  %111 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %112 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %111, i64 0, i32 5, i32 0, i32 0, i32 0
  %113 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %112, align 8
  %114 = icmp eq %"class.jingle_xmpp::XmppClient::Private"* %111, null
  %115 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %111, i64 0, i32 1
  %116 = select i1 %114, %"class.jingle_xmpp::XmppSessionHandler"* null, %"class.jingle_xmpp::XmppSessionHandler"* %115
  %117 = bitcast %"class.jingle_xmpp::XmppEngine"* %113 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)***
  %118 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)** %118, i64 14
  %120 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppSessionHandler"*)** %119, align 8
  %121 = tail call i32 %120(%"class.jingle_xmpp::XmppEngine"* %113, %"class.jingle_xmpp::XmppSessionHandler"* %116) #12
  %122 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %123 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %122, i64 0, i32 5, i32 0, i32 0, i32 0
  %124 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %123, align 8
  %125 = icmp eq %"class.jingle_xmpp::XmppClient::Private"* %122, null
  %126 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %122, i64 0, i32 2
  %127 = select i1 %125, %"class.jingle_xmpp::XmppOutputHandler"* null, %"class.jingle_xmpp::XmppOutputHandler"* %126
  %128 = bitcast %"class.jingle_xmpp::XmppEngine"* %124 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)***
  %129 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)*** %128, align 8
  %130 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)** %129, i64 2
  %131 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppOutputHandler"*)** %130, align 8
  %132 = tail call i32 %131(%"class.jingle_xmpp::XmppEngine"* %124, %"class.jingle_xmpp::XmppOutputHandler"* %127) #12
  %133 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 5
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %110
  %139 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  br label %143

141:                                              ; preds = %110
  %142 = zext i8 %136 to i64
  br label %143

143:                                              ; preds = %138, %141
  %144 = phi i64 [ %140, %138 ], [ %142, %141 ]
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %143
  %147 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %148 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %147, i64 0, i32 5, i32 0, i32 0, i32 0
  %149 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %148, align 8
  %150 = bitcast %"class.jingle_xmpp::XmppEngine"* %149 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)***
  %151 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*** %150, align 8
  %152 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %151, i64 11
  %153 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %152, align 8
  %154 = tail call i32 %153(%"class.jingle_xmpp::XmppEngine"* %149, %"class.std::__1::basic_string"* dereferenceable(24) %133) #12
  br label %155

155:                                              ; preds = %146, %143
  %156 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %157 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %156, i64 0, i32 5, i32 0, i32 0, i32 0
  %158 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %157, align 8
  %159 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 6
  %160 = load i32, i32* %159, align 8
  %161 = bitcast %"class.jingle_xmpp::XmppEngine"* %158 to i32 (%"class.jingle_xmpp::XmppEngine"*, i32)***
  %162 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32)**, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*** %161, align 8
  %163 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)** %162, i64 8
  %164 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)** %163, align 8
  %165 = tail call i32 %164(%"class.jingle_xmpp::XmppEngine"* %158, i32 %160) #12
  %166 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #12
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 1
  %170 = bitcast %"class.net::HostPortPair"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 24, i1 false)
  %173 = load i8, i8* %171, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %155
  %176 = bitcast %"class.net::HostPortPair"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* align 8 %176, i64 24, i1 false) #12
  br label %182

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %179, i64 %181) #12
  br label %182

182:                                              ; preds = %175, %177
  %183 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_TALK_GOOGLE_COME, i64 0, i64 0)) #12
  %184 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = load i64, i64* %168, align 8
  %189 = zext i8 %186 to i64
  %190 = select i1 %187, i64 %188, i64 %189
  %191 = icmp eq i64 %183, %190
  br i1 %191, label %192, label %199

192:                                              ; preds = %182
  %193 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_TALK_GOOGLE_COME, i64 0, i64 0), i64 %183) #12
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %240, label %195

195:                                              ; preds = %192
  %196 = load i8, i8* %185, align 1
  %197 = load i64, i64* %168, align 8
  %198 = zext i8 %196 to i64
  br label %199

199:                                              ; preds = %195, %182
  %200 = phi i64 [ %198, %195 ], [ %189, %182 ]
  %201 = phi i64 [ %197, %195 ], [ %188, %182 ]
  %202 = phi i8 [ %196, %195 ], [ %186, %182 ]
  %203 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp22STR_TALKX_L_GOOGLE_COME, i64 0, i64 0)) #12
  %204 = icmp slt i8 %202, 0
  %205 = select i1 %204, i64 %201, i64 %200
  %206 = icmp eq i64 %203, %205
  br i1 %206, label %207, label %214

207:                                              ; preds = %199
  %208 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp22STR_TALKX_L_GOOGLE_COME, i64 0, i64 0), i64 %203) #12
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %240, label %210

210:                                              ; preds = %207
  %211 = load i8, i8* %185, align 1
  %212 = load i64, i64* %168, align 8
  %213 = zext i8 %211 to i64
  br label %214

214:                                              ; preds = %210, %199
  %215 = phi i64 [ %213, %210 ], [ %200, %199 ]
  %216 = phi i64 [ %212, %210 ], [ %201, %199 ]
  %217 = phi i8 [ %211, %210 ], [ %202, %199 ]
  %218 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_XMPP_GOOGLE_COME, i64 0, i64 0)) #12
  %219 = icmp slt i8 %217, 0
  %220 = select i1 %219, i64 %216, i64 %215
  %221 = icmp eq i64 %218, %220
  br i1 %221, label %222, label %229

222:                                              ; preds = %214
  %223 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_XMPP_GOOGLE_COME, i64 0, i64 0), i64 %218) #12
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %240, label %225

225:                                              ; preds = %222
  %226 = load i8, i8* %185, align 1
  %227 = load i64, i64* %168, align 8
  %228 = zext i8 %226 to i64
  br label %229

229:                                              ; preds = %225, %214
  %230 = phi i64 [ %228, %225 ], [ %215, %214 ]
  %231 = phi i64 [ %227, %225 ], [ %216, %214 ]
  %232 = phi i8 [ %226, %225 ], [ %217, %214 ]
  %233 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp22STR_XMPPX_L_GOOGLE_COME, i64 0, i64 0)) #12
  %234 = icmp slt i8 %232, 0
  %235 = select i1 %234, i64 %231, i64 %230
  %236 = icmp eq i64 %233, %235
  br i1 %236, label %237, label %323

237:                                              ; preds = %229
  %238 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp22STR_XMPPX_L_GOOGLE_COME, i64 0, i64 0), i64 %233) #12
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %323

240:                                              ; preds = %237, %222, %207, %192
  %241 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 1
  %242 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp13STR_GMAIL_COME, i64 0, i64 0)) #12
  %243 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  %247 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = zext i8 %245 to i64
  %250 = select i1 %246, i64 %248, i64 %249
  %251 = icmp eq i64 %242, %250
  br i1 %251, label %252, label %259

252:                                              ; preds = %240
  %253 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %241, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp13STR_GMAIL_COME, i64 0, i64 0), i64 %242) #12
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %323, label %255

255:                                              ; preds = %252
  %256 = load i8, i8* %244, align 1
  %257 = load i64, i64* %247, align 8
  %258 = zext i8 %256 to i64
  br label %259

259:                                              ; preds = %255, %240
  %260 = phi i64 [ %258, %255 ], [ %249, %240 ]
  %261 = phi i64 [ %257, %255 ], [ %248, %240 ]
  %262 = phi i8 [ %256, %255 ], [ %245, %240 ]
  %263 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp18STR_GOOGLEMAIL_COME, i64 0, i64 0)) #12
  %264 = icmp slt i8 %262, 0
  %265 = select i1 %264, i64 %261, i64 %260
  %266 = icmp eq i64 %263, %265
  br i1 %266, label %267, label %270

267:                                              ; preds = %259
  %268 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %241, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp18STR_GOOGLEMAIL_COME, i64 0, i64 0), i64 %263) #12
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %323, label %270

270:                                              ; preds = %267, %259
  %271 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %272 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %271, i64 0, i32 5, i32 0, i32 0, i32 0
  %273 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %272, align 8
  %274 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #12
  %275 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  store i8 0, i8* %276, align 1
  store i8 0, i8* %274, align 8
  %277 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #12
  %278 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_TALK_GOOGLE_COME, i64 0, i64 0)) #12
  %279 = icmp ugt i64 %278, -17
  br i1 %279, label %280, label %282

280:                                              ; preds = %270
  %281 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %281) #13
  unreachable

282:                                              ; preds = %270
  %283 = icmp ult i64 %278, 23
  br i1 %283, label %293, label %284

284:                                              ; preds = %282
  %285 = add nuw i64 %278, 16
  %286 = and i64 %285, -16
  %287 = call i8* @_Znwm(i64 %286) #11
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %287, i8** %288, align 8
  %289 = or i64 %286, -9223372036854775808
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %278, i64* %291, align 8
  %292 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %298

293:                                              ; preds = %282
  %294 = trunc i64 %278 to i8
  %295 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  store i8 %294, i8* %296, align 1
  %297 = icmp eq i64 %278, 0
  br i1 %297, label %301, label %298

298:                                              ; preds = %293, %284
  %299 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %295, %293 ], [ %292, %284 ]
  %300 = phi i8* [ %277, %293 ], [ %287, %284 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %300, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp19STR_TALK_GOOGLE_COME, i64 0, i64 0), i64 %278, i1 false) #12
  br label %301

301:                                              ; preds = %293, %298
  %302 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %295, %293 ], [ %299, %298 ]
  %303 = phi i8* [ %277, %293 ], [ %300, %298 ]
  %304 = getelementptr inbounds i8, i8* %303, i64 %278
  store i8 0, i8* %304, align 1
  %305 = bitcast %"class.jingle_xmpp::XmppEngine"* %273 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %306 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %305, align 8
  %307 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %306, i64 9
  %308 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %307, align 8
  %309 = call i32 %308(%"class.jingle_xmpp::XmppEngine"* %273, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %301
  %314 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  call void @_ZdlPv(i8* %315) #11
  br label %316

316:                                              ; preds = %301, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #12
  %317 = load i8, i8* %276, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %316
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  call void @_ZdlPv(i8* %321) #11
  br label %322

322:                                              ; preds = %316, %319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #12
  br label %323

323:                                              ; preds = %252, %267, %229, %322, %237
  %324 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %325 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %324, i64 0, i32 5, i32 0, i32 0, i32 0
  %326 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %325, align 8
  %327 = bitcast %"class.jingle_xmpp::XmppEngine"* %326 to void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)***
  %328 = load void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)**, void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %328, i64 13
  %330 = load void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %329, align 8
  call void %330(%"class.jingle_xmpp::XmppEngine"* %326, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  %331 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %332 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %331, i64 0, i32 5, i32 0, i32 0, i32 0
  %333 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %332, align 8
  %334 = bitcast %"class.jingle_xmpp::Jid"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %334) #12
  %335 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 1
  %337 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #12
  %338 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %339 = icmp ugt i64 %338, -17
  br i1 %339, label %340, label %342

340:                                              ; preds = %323
  %341 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %341) #13
  unreachable

342:                                              ; preds = %323
  %343 = icmp ult i64 %338, 23
  br i1 %343, label %353, label %344

344:                                              ; preds = %342
  %345 = add nuw i64 %338, 16
  %346 = and i64 %345, -16
  %347 = call i8* @_Znwm(i64 %346) #11
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %347, i8** %348, align 8
  %349 = or i64 %346, -9223372036854775808
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %338, i64* %351, align 8
  %352 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %358

353:                                              ; preds = %342
  %354 = trunc i64 %338 to i8
  %355 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %355, i64 0, i32 1, i32 0
  store i8 %354, i8* %356, align 1
  %357 = icmp eq i64 %338, 0
  br i1 %357, label %361, label %358

358:                                              ; preds = %353, %344
  %359 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %355, %353 ], [ %352, %344 ]
  %360 = phi i8* [ %337, %353 ], [ %347, %344 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %360, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %338, i1 false) #12
  br label %361

361:                                              ; preds = %353, %358
  %362 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %355, %353 ], [ %359, %358 ]
  %363 = phi i8* [ %337, %353 ], [ %360, %358 ]
  %364 = getelementptr inbounds i8, i8* %363, i64 %338
  store i8 0, i8* %364, align 1
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.jingle_xmpp::Jid"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %335, %"class.std::__1::basic_string"* dereferenceable(24) %336, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %365 = bitcast %"class.jingle_xmpp::XmppEngine"* %333 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)***
  %366 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)*** %365, align 8
  %367 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)** %366, i64 5
  %368 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::Jid"*)** %367, align 8
  %369 = call i32 %368(%"class.jingle_xmpp::XmppEngine"* %333, %"class.jingle_xmpp::Jid"* nonnull dereferenceable(72) %9) #12
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %9) #12
  %370 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %371 = load i8, i8* %370, align 1
  %372 = icmp slt i8 %371, 0
  br i1 %372, label %373, label %376

373:                                              ; preds = %361
  %374 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load i8*, i8** %374, align 8
  call void @_ZdlPv(i8* %375) #11
  br label %376

376:                                              ; preds = %361, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %334) #12
  %377 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 2
  %378 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %379 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %378, i64 0, i32 7
  %380 = icmp eq %"class.std::__1::basic_string"* %379, %377
  br i1 %380, label %410, label %381

381:                                              ; preds = %376
  %382 = bitcast %"class.std::__1::basic_string"* %379 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %382, i64 0, i32 1, i32 0
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  %386 = bitcast %"class.std::__1::basic_string"* %377 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %387 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %386, i64 0, i32 1, i32 0
  %388 = load i8, i8* %387, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %385, label %400, label %390

390:                                              ; preds = %381
  br i1 %389, label %394, label %391

391:                                              ; preds = %390
  %392 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  %393 = bitcast %"class.std::__1::basic_string"* %377 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* align 8 %393, i64 24, i1 false) #12
  br label %410

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %398 = load i64, i64* %397, align 8
  %399 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %379, i8* %396, i64 %398) #12
  br label %410

400:                                              ; preds = %381
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.std::__1::basic_string"* %377 to i8*
  %406 = zext i8 %388 to i64
  %407 = select i1 %389, i8* %402, i8* %405
  %408 = select i1 %389, i64 %404, i64 %406
  %409 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %379, i8* %407, i64 %408) #12
  br label %410

410:                                              ; preds = %376, %391, %394, %400
  %411 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 3
  %412 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %413 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %412, i64 0, i32 8
  %414 = icmp eq %"class.std::__1::basic_string"* %413, %411
  br i1 %414, label %444, label %415

415:                                              ; preds = %410
  %416 = bitcast %"class.std::__1::basic_string"* %413 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %416, i64 0, i32 1, i32 0
  %418 = load i8, i8* %417, align 1
  %419 = icmp slt i8 %418, 0
  %420 = bitcast %"class.std::__1::basic_string"* %411 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %421 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %420, i64 0, i32 1, i32 0
  %422 = load i8, i8* %421, align 1
  %423 = icmp slt i8 %422, 0
  br i1 %419, label %434, label %424

424:                                              ; preds = %415
  br i1 %423, label %428, label %425

425:                                              ; preds = %424
  %426 = bitcast %"class.std::__1::basic_string"* %413 to i8*
  %427 = bitcast %"class.std::__1::basic_string"* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* align 8 %427, i64 24, i1 false) #12
  br label %444

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load i8*, i8** %429, align 8
  %431 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %432 = load i64, i64* %431, align 8
  %433 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %413, i8* %430, i64 %432) #12
  br label %444

434:                                              ; preds = %415
  %435 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load i8*, i8** %435, align 8
  %437 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %438 = load i64, i64* %437, align 8
  %439 = bitcast %"class.std::__1::basic_string"* %411 to i8*
  %440 = zext i8 %422 to i64
  %441 = select i1 %423, i8* %436, i8* %439
  %442 = select i1 %423, i64 %438, i64 %440
  %443 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %413, i8* %441, i64 %442) #12
  br label %444

444:                                              ; preds = %410, %425, %428, %434
  %445 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 4
  %446 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %447 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %446, i64 0, i32 9
  %448 = icmp eq %"class.std::__1::basic_string"* %447, %445
  br i1 %448, label %478, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.std::__1::basic_string"* %447 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %451 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %450, i64 0, i32 1, i32 0
  %452 = load i8, i8* %451, align 1
  %453 = icmp slt i8 %452, 0
  %454 = bitcast %"class.std::__1::basic_string"* %445 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %455 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %454, i64 0, i32 1, i32 0
  %456 = load i8, i8* %455, align 1
  %457 = icmp slt i8 %456, 0
  br i1 %453, label %468, label %458

458:                                              ; preds = %449
  br i1 %457, label %462, label %459

459:                                              ; preds = %458
  %460 = bitcast %"class.std::__1::basic_string"* %447 to i8*
  %461 = bitcast %"class.std::__1::basic_string"* %445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %460, i8* align 8 %461, i64 24, i1 false) #12
  br label %478

462:                                              ; preds = %458
  %463 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %445, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %466 = load i64, i64* %465, align 8
  %467 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %447, i8* %464, i64 %466) #12
  br label %478

468:                                              ; preds = %449
  %469 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %445, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  %471 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %472 = load i64, i64* %471, align 8
  %473 = bitcast %"class.std::__1::basic_string"* %445 to i8*
  %474 = zext i8 %456 to i64
  %475 = select i1 %457, i8* %470, i8* %473
  %476 = select i1 %457, i64 %472, i64 %474
  %477 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %447, i8* %475, i64 %476) #12
  br label %478

478:                                              ; preds = %444, %459, %462, %468
  %479 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %480 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %479, i64 0, i32 10
  %481 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %480, i64 0, i32 0
  %482 = icmp eq %"class.net::HostPortPair"* %480, %169
  br i1 %482, label %510, label %483

483:                                              ; preds = %478
  %484 = bitcast %"class.net::HostPortPair"* %480 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %485 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %484, i64 0, i32 1, i32 0
  %486 = load i8, i8* %485, align 1
  %487 = icmp slt i8 %486, 0
  %488 = load i8, i8* %171, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %487, label %500, label %490

490:                                              ; preds = %483
  br i1 %489, label %494, label %491

491:                                              ; preds = %490
  %492 = bitcast %"class.net::HostPortPair"* %480 to i8*
  %493 = bitcast %"class.net::HostPortPair"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %492, i8* align 8 %493, i64 24, i1 false) #12
  br label %510

494:                                              ; preds = %490
  %495 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load i8*, i8** %495, align 8
  %497 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %498 = load i64, i64* %497, align 8
  %499 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %481, i8* %496, i64 %498) #12
  br label %510

500:                                              ; preds = %483
  %501 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = load i8*, i8** %501, align 8
  %503 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.net::HostPortPair"* %169 to i8*
  %506 = zext i8 %488 to i64
  %507 = select i1 %489, i8* %502, i8* %505
  %508 = select i1 %489, i64 %504, i64 %506
  %509 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %481, i8* %507, i64 %508) #12
  br label %510

510:                                              ; preds = %478, %491, %494, %500
  %511 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 1, i32 1
  %512 = load i16, i16* %511, align 8
  %513 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %479, i64 0, i32 10, i32 1
  store i16 %512, i16* %513, align 8
  %514 = getelementptr inbounds %"class.jingle_xmpp::XmppClientSettings", %"class.jingle_xmpp::XmppClientSettings"* %1, i64 0, i32 0, i32 7
  %515 = load i8, i8* %514, align 4, !range !11
  %516 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %517 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %516, i64 0, i32 15
  store i8 %515, i8* %517, align 1
  %518 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %13, align 8
  %519 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %518, i64 0, i32 6, i32 0, i32 0, i32 0
  %520 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %519, align 8
  store %"class.jingle_xmpp::PreXmppAuth"* %4, %"class.jingle_xmpp::PreXmppAuth"** %519, align 8
  %521 = icmp eq %"class.jingle_xmpp::PreXmppAuth"* %520, null
  br i1 %521, label %527, label %522

522:                                              ; preds = %510
  %523 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %520 to void (%"class.jingle_xmpp::PreXmppAuth"*)***
  %524 = load void (%"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.jingle_xmpp::PreXmppAuth"*)*** %523, align 8
  %525 = getelementptr inbounds void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %524, i64 1
  %526 = load void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %525, align 8
  call void %526(%"class.jingle_xmpp::PreXmppAuth"* nonnull %520) #12
  br label %527

527:                                              ; preds = %510, %522
  %528 = load i8, i8* %185, align 1
  %529 = icmp slt i8 %528, 0
  br i1 %529, label %530, label %532

530:                                              ; preds = %527
  %531 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %531) #11
  br label %532

532:                                              ; preds = %527, %530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #12
  br label %533

533:                                              ; preds = %12, %5, %532
  %534 = phi i32 [ 0, %532 ], [ 1, %5 ], [ 2, %12 ]
  ret i32 %534
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private17OnSocketConnectedEv(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %2, align 8
  %4 = bitcast %"class.jingle_xmpp::XmppEngine"* %3 to i32 (%"class.jingle_xmpp::XmppEngine"*)***
  %5 = load i32 (%"class.jingle_xmpp::XmppEngine"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %5, i64 15
  %7 = load i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %6, align 8
  %8 = tail call i32 %7(%"class.jingle_xmpp::XmppEngine"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private12OnSocketReadEv(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly) #0 align 2 {
  %2 = alloca [4096 x i8], align 16
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 4096, i1 false)
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store i64 -6148914691236517206, i64* %3, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %6, align 8
  %8 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %7, null
  br i1 %8, label %62, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %9, %52
  %13 = phi %"class.jingle_xmpp::AsyncSocket"* [ %7, %9 ], [ %60, %52 ]
  %14 = bitcast %"class.jingle_xmpp::AsyncSocket"* %13 to i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)***
  %15 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)** %15, i64 6
  %17 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64, i64*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.jingle_xmpp::AsyncSocket"* nonnull %13, i8* nonnull %4, i64 4096, i64* nonnull %3) #12
  br i1 %18, label %19, label %62

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %19
  %23 = load %"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppClient"** %10, align 8
  %24 = trunc i64 %20 to i32
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %23, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %23, i64 0, i32 5, i32 0, i32 2, i32 0
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %23, i64 0, i32 5, i32 0, i32 2
  %31 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %23, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %30, i64 0, i32 0
  %33 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %31, %33
  br i1 %34, label %52, label %35

35:                                               ; preds = %22
  %36 = inttoptr i64 %27 to %"struct.std::__1::__list_node"*
  %37 = bitcast %"class.std::__1::__list_iterator"* %30 to i64*
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"struct.std::__1::__list_node"* [ %36, %35 ], [ %49, %38 ]
  %40 = phi %"struct.std::__1::__list_node_base"* [ %33, %35 ], [ %47, %38 ]
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %39, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %37, align 8
  %45 = bitcast %"class.sigslot::_opaque_connection"* %41 to void (%"class.sigslot::_opaque_connection"*, i8*, i32)**
  %46 = load void (%"class.sigslot::_opaque_connection"*, i8*, i32)*, void (%"class.sigslot::_opaque_connection"*, i8*, i32)** %45, align 8
  call void %46(%"class.sigslot::_opaque_connection"* %41, i8* nonnull %4, i32 %24) #12
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %47, %31
  %49 = bitcast %"struct.std::__1::__list_node_base"* %47 to %"struct.std::__1::__list_node"*
  br i1 %48, label %50, label %38

50:                                               ; preds = %38
  %51 = load i64, i64* %3, align 8
  br label %52

52:                                               ; preds = %50, %22
  %53 = phi i64 [ %51, %50 ], [ %20, %22 ]
  %54 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %11, align 8
  %55 = bitcast %"class.jingle_xmpp::XmppEngine"* %54 to i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)***
  %56 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)**, i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)** %56, i64 3
  %58 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i8*, i64)** %57, align 8
  %59 = call i32 %58(%"class.jingle_xmpp::XmppEngine"* %54, i8* nonnull %4, i64 %53) #12
  %60 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %6, align 8
  %61 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %60, null
  br i1 %61, label %62, label %12

62:                                               ; preds = %12, %19, %52, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private14OnSocketClosedEv(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  %4 = bitcast %"class.jingle_xmpp::AsyncSocket"* %3 to i32 (%"class.jingle_xmpp::AsyncSocket"*)***
  %5 = load i32 (%"class.jingle_xmpp::AsyncSocket"*)**, i32 (%"class.jingle_xmpp::AsyncSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.jingle_xmpp::AsyncSocket"*)*, i32 (%"class.jingle_xmpp::AsyncSocket"*)** %5, i64 4
  %7 = load i32 (%"class.jingle_xmpp::AsyncSocket"*)*, i32 (%"class.jingle_xmpp::AsyncSocket"*)** %6, align 8
  %8 = tail call i32 %7(%"class.jingle_xmpp::AsyncSocket"* %3) #12
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %9, align 8
  %11 = bitcast %"class.jingle_xmpp::XmppEngine"* %10 to i32 (%"class.jingle_xmpp::XmppEngine"*, i32)***
  %12 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32)**, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)** %12, i64 4
  %14 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.jingle_xmpp::XmppEngine"* %10, i32 %8) #12
  ret void
}

declare %"class.jingle_xmpp::XmppEngine"* @_ZN11jingle_xmpp10XmppEngine6CreateEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11jingle_xmpp10XmppClient8GetStateEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %4, align 8
  %6 = icmp eq %"class.jingle_xmpp::XmppEngine"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.jingle_xmpp::XmppEngine"* %5 to i32 (%"class.jingle_xmpp::XmppEngine"*)***
  %9 = load i32 (%"class.jingle_xmpp::XmppEngine"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %9, i64 16
  %11 = load i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %10, align 8
  %12 = tail call i32 %11(%"class.jingle_xmpp::XmppEngine"* nonnull %5) #12
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i32 [ %12, %7 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn88_NK11jingle_xmpp10XmppClient8GetStateEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 47
  %4 = bitcast %"class.std::__1::__list_iterator"* %3 to %"class.jingle_xmpp::XmppClient::Private"**
  %5 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %4, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %6, align 8
  %8 = icmp eq %"class.jingle_xmpp::XmppEngine"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.jingle_xmpp::XmppEngine"* %7 to i32 (%"class.jingle_xmpp::XmppEngine"*)***
  %11 = load i32 (%"class.jingle_xmpp::XmppEngine"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %11, i64 16
  %13 = load i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %12, align 8
  %14 = tail call i32 %13(%"class.jingle_xmpp::XmppEngine"* nonnull %7) #12
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i32 [ %14, %9 ], [ 0, %1 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient8GetErrorEPi(%"class.jingle_xmpp::XmppClient"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = icmp ne i32* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 0, i32* %1, align 4
  br label %5

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::XmppEngine"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  br i1 %3, label %16, label %28

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 12
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %1, align 4
  %19 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %19, i64 0, i32 11
  %21 = load i32, i32* %20, align 8
  br label %28

22:                                               ; preds = %11
  %23 = bitcast %"class.jingle_xmpp::XmppEngine"* %9 to i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)***
  %24 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)** %24, i64 18
  %26 = load i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, i32*)** %25, align 8
  %27 = tail call i32 %26(%"class.jingle_xmpp::XmppEngine"* nonnull %9, i32* %1) #12
  br label %28

28:                                               ; preds = %15, %16, %5, %22
  %29 = phi i32 [ %27, %22 ], [ 0, %5 ], [ %21, %16 ], [ %13, %15 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmppClient14GetStreamErrorEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %4, align 8
  %6 = icmp eq %"class.jingle_xmpp::XmppEngine"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.jingle_xmpp::XmppEngine"* %5 to %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)***
  %9 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)**, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)** %9, i64 19
  %11 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngine"*)** %10, align 8
  %12 = tail call %"class.jingle_xmpp::XmlElement"* %11(%"class.jingle_xmpp::XmppEngine"* nonnull %5) #12
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi %"class.jingle_xmpp::XmlElement"* [ %12, %7 ], [ null, %1 ]
  ret %"class.jingle_xmpp::XmlElement"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient19GetCaptchaChallengeEv(%"class.jingle_xmpp::CaptchaChallenge"* noalias sret, %"class.jingle_xmpp::XmppClient"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = icmp eq %"class.jingle_xmpp::XmppEngine"* %6, null
  %8 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 0
  br i1 %7, label %9, label %12

9:                                                ; preds = %2
  store i8 0, i8* %8, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #12
  br label %44

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 13, i32 0
  %14 = load i8, i8* %13, align 8, !range !11
  store i8 %14, i8* %8, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 13, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #12
  br label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 13, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %26, i64 %28) #12
  br label %29

29:                                               ; preds = %24, %21
  %30 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 13, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 13, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %41, i64 %43) #12
  br label %44

44:                                               ; preds = %39, %36, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient16GetAuthMechanismEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppClient"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = icmp eq %"class.jingle_xmpp::XmppEngine"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %11, align 8
  br label %26

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  br label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %23, i64 %25) #12
  br label %26

26:                                               ; preds = %21, %18, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient12GetAuthTokenEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppClient"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = icmp eq %"class.jingle_xmpp::XmppEngine"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %11, align 8
  br label %26

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 9
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  br label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %23, i64 %25) #12
  br label %26

26:                                               ; preds = %21, %18, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient12ProcessStartEv(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %4, align 8
  %6 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %5, null
  br i1 %6, label %160, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::PreXmppAuth"* %9, null
  br i1 %10, label %68, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %9, i64 0, i32 1, i32 0, i32 1
  %13 = icmp eq %"class.jingle_xmpp::XmppClient"* %0, null
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0
  %15 = select i1 %13, %"class.sigslot::has_slots_interface"* null, %"class.sigslot::has_slots_interface"* %14
  %16 = tail call i8* @_Znwm(i64 48) #11, !noalias !12
  %17 = bitcast i8* %16 to %"struct.std::__1::__list_node_base"**
  %18 = getelementptr inbounds i8, i8* %16, i64 16
  %19 = bitcast i8* %18 to void (%"class.sigslot::_opaque_connection"*)**
  store void (%"class.sigslot::_opaque_connection"*)* @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClientEJEEEvPKS0_DpT0_, void (%"class.sigslot::_opaque_connection"*)** %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 24
  %21 = bitcast i8* %20 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %15, %"class.sigslot::has_slots_interface"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.jingle_xmpp::XmppClient"*)* @_ZN11jingle_xmpp10XmppClient10OnAuthDoneEv to i64), i64 0>, <2 x i64>* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds i8, i8* %16, i64 8
  %26 = bitcast i8* %25 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %24, %"struct.std::__1::__list_node_base"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  store %"struct.std::__1::__list_node_base"* %28, %"struct.std::__1::__list_node_base"** %17, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %30 = bitcast %"struct.std::__1::__list_node_base"** %29 to i8**
  store i8* %16, i8** %30, align 8
  %31 = bitcast %"class.std::__1::list"* %12 to i8**
  store i8* %16, i8** %31, align 8
  %32 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %9, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %9, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %36, align 8
  tail call void %37(%"class.sigslot::has_slots_interface"* %14, %"class.sigslot::_signal_base_interface"* %35) #12
  %38 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %39 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %38, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %39, align 8
  %41 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %38, i64 0, i32 5, i32 0, i32 0, i32 0
  %42 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %41, align 8
  %43 = bitcast %"class.jingle_xmpp::XmppEngine"* %42 to %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)***
  %44 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)**, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %44, i64 6
  %46 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %45, align 8
  %47 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* %46(%"class.jingle_xmpp::XmppEngine"* %42) #12
  %48 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %49 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %48, i64 0, i32 7
  %50 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %48, i64 0, i32 8
  %51 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %48, i64 0, i32 9
  %52 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %40 to void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %53 = load void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %53, i64 4
  %55 = load void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %54, align 8
  tail call void %55(%"class.jingle_xmpp::PreXmppAuth"* %40, %"class.jingle_xmpp::Jid"* dereferenceable(72) %47, %"class.std::__1::basic_string"* dereferenceable(24) %49, %"class.std::__1::basic_string"* dereferenceable(24) %50, %"class.std::__1::basic_string"* dereferenceable(24) %51) #12
  %56 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %57 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %56, i64 0, i32 7
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %11
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %56, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %65, align 8
  br label %160

66:                                               ; preds = %11
  %67 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  store i8 0, i8* %67, align 1
  store i8 0, i8* %59, align 1
  br label %160

68:                                               ; preds = %7
  %69 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %70 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %69, align 8
  %71 = tail call i8* @_Znwm(i64 112) #11
  %72 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %69, align 8
  %73 = bitcast %"class.jingle_xmpp::XmppEngine"* %72 to %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)***
  %74 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)**, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %74, i64 6
  %76 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %75, align 8
  %77 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* %76(%"class.jingle_xmpp::XmppEngine"* %72) #12
  %78 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %79 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %78, i64 0, i32 7
  %80 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %78, i64 0, i32 15
  %81 = load i8, i8* %80, align 1, !range !11
  %82 = bitcast i8* %71 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11jingle_xmpp16PlainSaslHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %71, i64 8
  %84 = bitcast %"class.jingle_xmpp::Jid"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %68
  %89 = bitcast %"class.jingle_xmpp::Jid"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %89, i64 24, i1 false) #12
  br label %96

90:                                               ; preds = %68
  %91 = bitcast i8* %83 to %"class.std::__1::basic_string"*
  %92 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %91, i8* %93, i64 %95) #12
  br label %96

96:                                               ; preds = %90, %88
  %97 = getelementptr inbounds i8, i8* %71, i64 32
  %98 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 1
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %104, i64 24, i1 false) #12
  br label %111

105:                                              ; preds = %96
  %106 = bitcast i8* %97 to %"class.std::__1::basic_string"*
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %106, i8* %108, i64 %110) #12
  br label %111

111:                                              ; preds = %105, %103
  %112 = getelementptr inbounds i8, i8* %71, i64 56
  %113 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 2
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %119, i64 24, i1 false) #12
  br label %126

120:                                              ; preds = %111
  %121 = bitcast i8* %112 to %"class.std::__1::basic_string"*
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %121, i8* %123, i64 %125) #12
  br label %126

126:                                              ; preds = %118, %120
  %127 = getelementptr inbounds i8, i8* %71, i64 80
  %128 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %126
  %133 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %133, i64 24, i1 false) #12
  br label %140

134:                                              ; preds = %126
  %135 = bitcast i8* %127 to %"class.std::__1::basic_string"*
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %78, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %135, i8* %137, i64 %139) #12
  br label %140

140:                                              ; preds = %132, %134
  %141 = getelementptr inbounds i8, i8* %71, i64 104
  store i8 %81, i8* %141, align 8
  %142 = bitcast i8* %71 to %"class.jingle_xmpp::SaslHandler"*
  %143 = bitcast %"class.jingle_xmpp::XmppEngine"* %70 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)***
  %144 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*** %143, align 8
  %145 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)** %144, i64 7
  %146 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)** %145, align 8
  %147 = tail call i32 %146(%"class.jingle_xmpp::XmppEngine"* %70, %"class.jingle_xmpp::SaslHandler"* nonnull %142) #12
  %148 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %149 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %148, i64 0, i32 7
  %150 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %140
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  store i8 0, i8* %156, align 1
  %157 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %148, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %157, align 8
  br label %160

158:                                              ; preds = %140
  %159 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  store i8 0, i8* %159, align 1
  store i8 0, i8* %151, align 1
  br label %160

160:                                              ; preds = %1, %158, %154, %66, %62
  %161 = phi i32 [ 2, %1 ], [ 5, %62 ], [ 5, %66 ], [ 6, %154 ], [ 6, %158 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient10OnAuthDoneEv(%"class.jingle_xmpp::XmppClient"*) #0 align 2 {
  %2 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task4WakeEv(%"class.jingle_xmpp::Task"* %2) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN11jingle_xmpp4Task4WakeEv(%"class.jingle_xmpp::Task"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient17ProcessTokenLoginEv(%"class.jingle_xmpp::XmppClient"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.jingle_xmpp::CaptchaChallenge", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %7, align 8
  %9 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %8, null
  br i1 %9, label %230, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %11, align 8
  %13 = icmp eq %"class.jingle_xmpp::PreXmppAuth"* %12, null
  br i1 %13, label %14, label %48

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 11
  store i32 6, i32* %15, align 8
  %16 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %16, i64 0, i32 14
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %230

20:                                               ; preds = %14
  store i8 1, i8* %17, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %27, i64 0, i32 0
  %30 = inttoptr i64 %24 to %"struct.std::__1::__list_node_base"*
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %28, %30
  br i1 %31, label %47, label %32

32:                                               ; preds = %20
  %33 = inttoptr i64 %24 to %"struct.std::__1::__list_node"*
  %34 = bitcast %"class.std::__1::__list_iterator"* %27 to i64*
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi %"struct.std::__1::__list_node"* [ %33, %32 ], [ %46, %35 ]
  %37 = phi %"struct.std::__1::__list_node_base"* [ %30, %32 ], [ %44, %35 ]
  %38 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %36, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %34, align 8
  %42 = bitcast %"class.sigslot::_opaque_connection"* %38 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %43 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %42, align 8
  tail call void %43(%"class.sigslot::_opaque_connection"* %38, i32 4) #12
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %45 = icmp eq %"struct.std::__1::__list_node_base"* %44, %28
  %46 = bitcast %"struct.std::__1::__list_node_base"* %44 to %"struct.std::__1::__list_node"*
  br i1 %45, label %47, label %35

47:                                               ; preds = %35, %20
  store i8 0, i8* %21, align 8
  br label %230

48:                                               ; preds = %10
  %49 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %12 to i1 (%"class.jingle_xmpp::PreXmppAuth"*)***
  %50 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)**, i1 (%"class.jingle_xmpp::PreXmppAuth"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %50, i64 5
  %52 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.jingle_xmpp::PreXmppAuth"* nonnull %12) #12
  br i1 %53, label %54, label %230

54:                                               ; preds = %48
  %55 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %56 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %55, i64 0, i32 6, i32 0, i32 0, i32 0
  %57 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %56, align 8
  %58 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %57 to i1 (%"class.jingle_xmpp::PreXmppAuth"*)***
  %59 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)**, i1 (%"class.jingle_xmpp::PreXmppAuth"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %59, i64 6
  %61 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.jingle_xmpp::PreXmppAuth"* %57) #12
  br i1 %62, label %180, label %63

63:                                               ; preds = %54
  %64 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %65 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %64, i64 0, i32 6, i32 0, i32 0, i32 0
  %66 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %65, align 8
  %67 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %66 to i1 (%"class.jingle_xmpp::PreXmppAuth"*)***
  %68 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)**, i1 (%"class.jingle_xmpp::PreXmppAuth"*)*** %67, align 8
  %69 = getelementptr inbounds i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %68, i64 7
  %70 = load i1 (%"class.jingle_xmpp::PreXmppAuth"*)*, i1 (%"class.jingle_xmpp::PreXmppAuth"*)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.jingle_xmpp::PreXmppAuth"* %66) #12
  %72 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %73 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %72, i64 0, i32 11
  br i1 %71, label %74, label %85

74:                                               ; preds = %63
  store i32 6, i32* %73, align 8
  %75 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %76 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %75, i64 0, i32 6, i32 0, i32 0, i32 0
  %77 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %76, align 8
  %78 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %77 to i32 (%"class.jingle_xmpp::PreXmppAuth"*)***
  %79 = load i32 (%"class.jingle_xmpp::PreXmppAuth"*)**, i32 (%"class.jingle_xmpp::PreXmppAuth"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.jingle_xmpp::PreXmppAuth"*)*, i32 (%"class.jingle_xmpp::PreXmppAuth"*)** %79, i64 8
  %81 = load i32 (%"class.jingle_xmpp::PreXmppAuth"*)*, i32 (%"class.jingle_xmpp::PreXmppAuth"*)** %80, align 8
  %82 = tail call i32 %81(%"class.jingle_xmpp::PreXmppAuth"* %77) #12
  %83 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %84 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %83, i64 0, i32 12
  store i32 %82, i32* %84, align 4
  br label %137

85:                                               ; preds = %63
  store i32 4, i32* %73, align 8
  %86 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %86, i64 0, i32 12
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %88) #12
  %89 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %90 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %89, i64 0, i32 6, i32 0, i32 0, i32 0
  %91 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %90, align 8
  %92 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %91 to void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)***
  %93 = load void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)** %93, i64 9
  %95 = load void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.jingle_xmpp::PreXmppAuth"*)** %94, align 8
  call void %95(%"class.jingle_xmpp::CaptchaChallenge"* nonnull sret %2, %"class.jingle_xmpp::PreXmppAuth"* %91) #12
  %96 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %97 = load i8, i8* %88, align 8, !range !11
  %98 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %96, i64 0, i32 13, i32 0
  store i8 %97, i8* %98, align 8
  %99 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %96, i64 0, i32 13, i32 1
  %100 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %2, i64 0, i32 1
  %101 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %85
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %105, %85
  %109 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  %110 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #12
  %111 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 0, i8* %112, align 1
  store i8 0, i8* %110, align 8
  %113 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %96, i64 0, i32 13, i32 2
  %114 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %2, i64 0, i32 2
  %115 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %108
  %120 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  %121 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 24, i1 false) #12
  %122 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 0, i8* %123, align 1
  store i8 0, i8* %121, align 8
  br label %136

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #11
  %127 = load i8, i8* %112, align 1
  %128 = icmp slt i8 %127, 0
  %129 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  %130 = bitcast %"class.std::__1::basic_string"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  %131 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 0, i8* %132, align 1
  store i8 0, i8* %130, align 8
  br i1 %128, label %133, label %136

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %119, %124, %133
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %88) #12
  br label %137

137:                                              ; preds = %136, %74
  %138 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %139 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %138, i64 0, i32 6, i32 0, i32 0, i32 0
  %140 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %139, align 8
  store %"class.jingle_xmpp::PreXmppAuth"* null, %"class.jingle_xmpp::PreXmppAuth"** %139, align 8
  %141 = icmp eq %"class.jingle_xmpp::PreXmppAuth"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %140 to void (%"class.jingle_xmpp::PreXmppAuth"*)***
  %144 = load void (%"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.jingle_xmpp::PreXmppAuth"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %144, i64 1
  %146 = load void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %145, align 8
  call void %146(%"class.jingle_xmpp::PreXmppAuth"* nonnull %140) #12
  br label %147

147:                                              ; preds = %137, %142
  %148 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %149 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %148, i64 0, i32 14
  %150 = load i8, i8* %149, align 8, !range !11
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %230

152:                                              ; preds = %147
  store i8 1, i8* %149, align 8
  %153 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 1, i8* %153, align 8
  %154 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %155 = bitcast %"struct.std::__1::__list_node_base"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  %158 = bitcast %"struct.std::__1::__list_node_base"** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2
  %160 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %161 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %159, i64 0, i32 0
  %162 = inttoptr i64 %156 to %"struct.std::__1::__list_node_base"*
  %163 = icmp eq %"struct.std::__1::__list_node_base"* %160, %162
  br i1 %163, label %179, label %164

164:                                              ; preds = %152
  %165 = inttoptr i64 %156 to %"struct.std::__1::__list_node"*
  %166 = bitcast %"class.std::__1::__list_iterator"* %159 to i64*
  br label %167

167:                                              ; preds = %167, %164
  %168 = phi %"struct.std::__1::__list_node"* [ %165, %164 ], [ %178, %167 ]
  %169 = phi %"struct.std::__1::__list_node_base"* [ %162, %164 ], [ %176, %167 ]
  %170 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %168, i64 0, i32 1
  %171 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %169, i64 0, i32 1
  %172 = bitcast %"struct.std::__1::__list_node_base"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %166, align 8
  %174 = bitcast %"class.sigslot::_opaque_connection"* %170 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %175 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %174, align 8
  call void %175(%"class.sigslot::_opaque_connection"* %170, i32 4) #12
  %176 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %161, align 8
  %177 = icmp eq %"struct.std::__1::__list_node_base"* %176, %160
  %178 = bitcast %"struct.std::__1::__list_node_base"* %176 to %"struct.std::__1::__list_node"*
  br i1 %177, label %179, label %167

179:                                              ; preds = %167, %152
  store i8 0, i8* %153, align 8
  br label %230

180:                                              ; preds = %54
  %181 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #12
  %182 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %183 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %182, i64 0, i32 6, i32 0, i32 0, i32 0
  %184 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %183, align 8
  %185 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %184 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)***
  %186 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)** %186, i64 10
  %188 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)** %187, align 8
  call void %188(%"class.std::__1::basic_string"* nonnull sret %3, %"class.jingle_xmpp::PreXmppAuth"* %184) #12
  %189 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %190 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %189, i64 0, i32 8
  %191 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %180
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %195, %180
  %199 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* nonnull align 8 %181, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #12
  %200 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #12
  %201 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %202 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %201, i64 0, i32 6, i32 0, i32 0, i32 0
  %203 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %202, align 8
  %204 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %203 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)***
  %205 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)** %205, i64 11
  %207 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::PreXmppAuth"*)** %206, align 8
  call void %207(%"class.std::__1::basic_string"* nonnull sret %4, %"class.jingle_xmpp::PreXmppAuth"* %203) #12
  %208 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %209 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %208, i64 0, i32 9
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %198
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #11
  br label %217

217:                                              ; preds = %214, %198
  %218 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* nonnull align 8 %200, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #12
  %219 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %220 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %219, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %220, align 8
  %222 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %219, i64 0, i32 6, i32 0, i32 0, i32 0
  %223 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %222, align 8
  store %"class.jingle_xmpp::PreXmppAuth"* null, %"class.jingle_xmpp::PreXmppAuth"** %222, align 8
  %224 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %223, i64 0, i32 0
  %225 = bitcast %"class.jingle_xmpp::XmppEngine"* %221 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)***
  %226 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*** %225, align 8
  %227 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)** %226, i64 7
  %228 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::SaslHandler"*)** %227, align 8
  %229 = call i32 %228(%"class.jingle_xmpp::XmppEngine"* %221, %"class.jingle_xmpp::SaslHandler"* %224) #12
  br label %230

230:                                              ; preds = %1, %179, %147, %47, %14, %48, %217
  %231 = phi i32 [ 6, %217 ], [ 2, %1 ], [ -1, %48 ], [ 3, %14 ], [ 3, %47 ], [ 3, %147 ], [ 3, %179 ]
  ret i32 %231
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient12EnsureClosedEv(%"class.jingle_xmpp::XmppClient"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 14
  %5 = load i8, i8* %4, align 8, !range !11
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %35

7:                                                ; preds = %1
  store i8 1, i8* %4, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %14, i64 0, i32 0
  %17 = inttoptr i64 %11 to %"struct.std::__1::__list_node_base"*
  %18 = icmp eq %"struct.std::__1::__list_node_base"* %15, %17
  br i1 %18, label %34, label %19

19:                                               ; preds = %7
  %20 = inttoptr i64 %11 to %"struct.std::__1::__list_node"*
  %21 = bitcast %"class.std::__1::__list_iterator"* %14 to i64*
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"struct.std::__1::__list_node"* [ %20, %19 ], [ %33, %22 ]
  %24 = phi %"struct.std::__1::__list_node_base"* [ %17, %19 ], [ %31, %22 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %21, align 8
  %29 = bitcast %"class.sigslot::_opaque_connection"* %25 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %30 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %29, align 8
  tail call void %30(%"class.sigslot::_opaque_connection"* %25, i32 4) #12
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %31, %15
  %33 = bitcast %"struct.std::__1::__list_node_base"* %31 to %"struct.std::__1::__list_node"*
  br i1 %32, label %34, label %22

34:                                               ; preds = %22, %7
  store i8 0, i8* %8, align 8
  br label %35

35:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient21ProcessStartXmppLoginEv(%"class.jingle_xmpp::XmppClient"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %4, align 8
  %6 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %5, null
  br i1 %6, label %47, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 10
  %9 = bitcast %"class.jingle_xmpp::AsyncSocket"* %5 to i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)***
  %10 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)** %10, i64 5
  %12 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.jingle_xmpp::AsyncSocket"* nonnull %5, %"class.net::HostPortPair"* dereferenceable(32) %8) #12
  br i1 %13, label %47, label %14

14:                                               ; preds = %7
  %15 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %15, i64 0, i32 14
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %14
  store i8 1, i8* %16, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %26, i64 0, i32 0
  %29 = inttoptr i64 %23 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %27, %29
  br i1 %30, label %46, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %23 to %"struct.std::__1::__list_node"*
  %33 = bitcast %"class.std::__1::__list_iterator"* %26 to i64*
  br label %34

34:                                               ; preds = %34, %31
  %35 = phi %"struct.std::__1::__list_node"* [ %32, %31 ], [ %45, %34 ]
  %36 = phi %"struct.std::__1::__list_node_base"* [ %29, %31 ], [ %43, %34 ]
  %37 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %35, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 0, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %33, align 8
  %41 = bitcast %"class.sigslot::_opaque_connection"* %37 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %42 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %41, align 8
  tail call void %42(%"class.sigslot::_opaque_connection"* %37, i32 4) #12
  %43 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %44 = icmp eq %"struct.std::__1::__list_node_base"* %43, %27
  %45 = bitcast %"struct.std::__1::__list_node_base"* %43 to %"struct.std::__1::__list_node"*
  br i1 %44, label %46, label %34

46:                                               ; preds = %34, %19
  store i8 0, i8* %20, align 8
  br label %47

47:                                               ; preds = %1, %46, %14, %7
  %48 = phi i32 [ 2, %1 ], [ 4, %7 ], [ 3, %14 ], [ 3, %46 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient15ProcessResponseEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::XmppEngine"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.jingle_xmpp::XmppEngine"* %9 to i32 (%"class.jingle_xmpp::XmppEngine"*)***
  %13 = load i32 (%"class.jingle_xmpp::XmppEngine"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %13, i64 16
  %15 = load i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %14, align 8
  %16 = tail call i32 %15(%"class.jingle_xmpp::XmppEngine"* nonnull %9) #12
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %19, label %18

18:                                               ; preds = %1, %11
  br label %19

19:                                               ; preds = %5, %11, %18
  %20 = phi i32 [ -1, %18 ], [ 2, %11 ], [ 2, %5 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient10DisconnectEv(%"class.jingle_xmpp::XmppClient"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %4, align 8
  %6 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4Task5AbortEb(%"class.jingle_xmpp::Task"* %8, i1 zeroext false) #12
  %9 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %10, align 8
  %12 = bitcast %"class.jingle_xmpp::XmppEngine"* %11 to i32 (%"class.jingle_xmpp::XmppEngine"*)***
  %13 = load i32 (%"class.jingle_xmpp::XmppEngine"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %13, i64 20
  %15 = load i32 (%"class.jingle_xmpp::XmppEngine"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*)** %14, align 8
  %16 = tail call i32 %15(%"class.jingle_xmpp::XmppEngine"* %11) #12
  %17 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  tail call void @_ZN11jingle_xmpp10XmppClient7Private11ResetSocketEv(%"class.jingle_xmpp::XmppClient::Private"* %17)
  br label %18

18:                                               ; preds = %1, %7
  %19 = phi i32 [ 0, %7 ], [ 2, %1 ]
  ret i32 %19
}

declare void @_ZN11jingle_xmpp4Task5AbortEb(%"class.jingle_xmpp::Task"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp10XmppClient7Private11ResetSocketEv(%"class.jingle_xmpp::XmppClient::Private"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  %4 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %3, null
  br i1 %4, label %151, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::__list_node_base"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"struct.std::__1::__list_node_base"*
  %12 = icmp eq %"struct.std::__1::__list_node_base"* %8, %11
  br i1 %12, label %51, label %13

13:                                               ; preds = %5, %45
  %14 = phi %"struct.std::__1::__list_node_base"* [ %49, %45 ], [ %11, %5 ]
  %15 = phi i64 [ %48, %45 ], [ %10, %5 ]
  %16 = inttoptr i64 %15 to %"struct.std::__1::__list_node"*
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 1
  %18 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %17, align 8
  %19 = icmp eq %"class.sigslot::has_slots_interface"* %18, %6
  br i1 %19, label %20, label %45

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %3, i64 0, i32 1, i32 0, i32 2, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %22, %14
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = ptrtoint %"struct.std::__1::__list_node_base"* %25 to i64
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 0
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %30 = bitcast %"struct.std::__1::__list_node_base"** %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = inttoptr i64 %15 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64**
  %34 = load i64*, i64** %33, align 8
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = inttoptr i64 %15 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br i1 %23, label %39, label %40

39:                                               ; preds = %20
  store %"struct.std::__1::__list_node_base"* %25, %"struct.std::__1::__list_node_base"** %21, align 8
  br label %40

40:                                               ; preds = %39, %20
  %41 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %3, i64 0, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %42, align 8
  tail call void %43(%"class.sigslot::has_slots_interface"* %6, %"class.sigslot::_signal_base_interface"* %41) #12
  %44 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  br label %51

45:                                               ; preds = %13
  %46 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %47 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %48 to %"struct.std::__1::__list_node_base"*
  %50 = icmp eq %"struct.std::__1::__list_node_base"* %8, %49
  br i1 %50, label %51, label %13

51:                                               ; preds = %45, %5, %40
  %52 = phi %"class.jingle_xmpp::AsyncSocket"* [ %3, %5 ], [ %44, %40 ], [ %3, %45 ]
  %53 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %52, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %52, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"struct.std::__1::__list_node_base"** %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = inttoptr i64 %56 to %"struct.std::__1::__list_node_base"*
  %58 = icmp eq %"struct.std::__1::__list_node_base"* %54, %57
  br i1 %58, label %97, label %59

59:                                               ; preds = %51, %91
  %60 = phi %"struct.std::__1::__list_node_base"* [ %95, %91 ], [ %57, %51 ]
  %61 = phi i64 [ %94, %91 ], [ %56, %51 ]
  %62 = inttoptr i64 %61 to %"struct.std::__1::__list_node"*
  %63 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %62, i64 0, i32 1, i32 1
  %64 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %63, align 8
  %65 = icmp eq %"class.sigslot::has_slots_interface"* %64, %6
  br i1 %65, label %66, label %91

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %52, i64 0, i32 4, i32 0, i32 2, i32 0
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__list_node_base"* %68, %60
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = ptrtoint %"struct.std::__1::__list_node_base"* %71 to i64
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 0
  %74 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  %76 = bitcast %"struct.std::__1::__list_node_base"** %75 to i64*
  store i64 %72, i64* %76, align 8
  %77 = inttoptr i64 %61 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64**
  %80 = load i64*, i64** %79, align 8
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %52, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %84) #11
  br i1 %69, label %85, label %86

85:                                               ; preds = %66
  store %"struct.std::__1::__list_node_base"* %71, %"struct.std::__1::__list_node_base"** %67, align 8
  br label %86

86:                                               ; preds = %85, %66
  %87 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %52, i64 0, i32 4, i32 0, i32 0
  %88 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0, i32 2
  %89 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %88, align 8
  tail call void %89(%"class.sigslot::has_slots_interface"* %6, %"class.sigslot::_signal_base_interface"* %87) #12
  %90 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  br label %97

91:                                               ; preds = %59
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %94 to %"struct.std::__1::__list_node_base"*
  %96 = icmp eq %"struct.std::__1::__list_node_base"* %54, %95
  br i1 %96, label %97, label %59

97:                                               ; preds = %91, %51, %86
  %98 = phi %"class.jingle_xmpp::AsyncSocket"* [ %52, %51 ], [ %90, %86 ], [ %52, %91 ]
  %99 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %98, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %98, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %101 = bitcast %"struct.std::__1::__list_node_base"** %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %102 to %"struct.std::__1::__list_node_base"*
  %104 = icmp eq %"struct.std::__1::__list_node_base"* %100, %103
  br i1 %104, label %143, label %105

105:                                              ; preds = %97, %137
  %106 = phi %"struct.std::__1::__list_node_base"* [ %141, %137 ], [ %103, %97 ]
  %107 = phi i64 [ %140, %137 ], [ %102, %97 ]
  %108 = inttoptr i64 %107 to %"struct.std::__1::__list_node"*
  %109 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %108, i64 0, i32 1, i32 1
  %110 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %109, align 8
  %111 = icmp eq %"class.sigslot::has_slots_interface"* %110, %6
  br i1 %111, label %112, label %137

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %98, i64 0, i32 3, i32 0, i32 2, i32 0
  %114 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__list_node_base"* %114, %106
  %116 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %106, i64 0, i32 1
  %117 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %116, align 8
  %118 = ptrtoint %"struct.std::__1::__list_node_base"* %117 to i64
  %119 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %106, i64 0, i32 0
  %120 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %120, i64 0, i32 1
  %122 = bitcast %"struct.std::__1::__list_node_base"** %121 to i64*
  store i64 %118, i64* %122, align 8
  %123 = inttoptr i64 %107 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__list_node_base"** %116 to i64**
  %126 = load i64*, i64** %125, align 8
  store i64 %124, i64* %126, align 8
  %127 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %98, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, -1
  store i64 %129, i64* %127, align 8
  %130 = inttoptr i64 %107 to i8*
  tail call void @_ZdlPv(i8* %130) #11
  br i1 %115, label %131, label %132

131:                                              ; preds = %112
  store %"struct.std::__1::__list_node_base"* %117, %"struct.std::__1::__list_node_base"** %113, align 8
  br label %132

132:                                              ; preds = %131, %112
  %133 = getelementptr inbounds %"class.jingle_xmpp::AsyncSocket", %"class.jingle_xmpp::AsyncSocket"* %98, i64 0, i32 3, i32 0, i32 0
  %134 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0, i32 2
  %135 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %134, align 8
  tail call void %135(%"class.sigslot::has_slots_interface"* %6, %"class.sigslot::_signal_base_interface"* %133) #12
  %136 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  br label %143

137:                                              ; preds = %105
  %138 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %106, i64 0, i32 1
  %139 = bitcast %"struct.std::__1::__list_node_base"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = inttoptr i64 %140 to %"struct.std::__1::__list_node_base"*
  %142 = icmp eq %"struct.std::__1::__list_node_base"* %100, %141
  br i1 %142, label %143, label %105

143:                                              ; preds = %137, %97, %132
  %144 = phi %"class.jingle_xmpp::AsyncSocket"* [ %98, %97 ], [ %136, %132 ], [ %98, %137 ]
  store %"class.jingle_xmpp::AsyncSocket"* null, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  %145 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = bitcast %"class.jingle_xmpp::AsyncSocket"* %144 to void (%"class.jingle_xmpp::AsyncSocket"*)***
  %148 = load void (%"class.jingle_xmpp::AsyncSocket"*)**, void (%"class.jingle_xmpp::AsyncSocket"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.jingle_xmpp::AsyncSocket"*)*, void (%"class.jingle_xmpp::AsyncSocket"*)** %148, i64 1
  %150 = load void (%"class.jingle_xmpp::AsyncSocket"*)*, void (%"class.jingle_xmpp::AsyncSocket"*)** %149, align 8
  tail call void %150(%"class.jingle_xmpp::AsyncSocket"* nonnull %144) #12
  br label %151

151:                                              ; preds = %1, %146, %143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClientC2EPNS_10TaskParentE(%"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::TaskParent"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4TaskC2EPNS_10TaskParentE(%"class.jingle_xmpp::Task"* %3, %"class.jingle_xmpp::TaskParent"* %1) #12
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN11jingle_xmpp23XmppTaskParentInterfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 2
  tail call void @_ZN11jingle_xmpp19XmppClientInterfaceC2Ev(%"class.jingle_xmpp::XmppClientInterface"* %5) #12
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %7 to <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*>*
  store <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*> <void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_signal_connectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE20do_signal_disconnectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE>, <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*>* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0, i32 3
  store void (%"class.sigslot::has_slots_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_disconnect_allEPNS_19has_slots_interfaceE, void (%"class.sigslot::has_slots_interface"*)** %9, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClientInterface", %"class.jingle_xmpp::XmppClientInterface"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)** %15, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %16, align 8
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %17, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %19, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %20, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)** %24, align 8
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %25, align 8
  %26 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %28, align 8
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %29, align 8
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %31, align 8
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 3
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)** %33, align 8
  %34 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %34, align 8
  %35 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %35, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %35, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %37, align 8
  %38 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %38, align 8
  %39 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %40, align 8
  %41 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 3
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7
  %43 = bitcast %"class.std::__1::unique_ptr.16"* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 9
  store i8 0, i8* %45, align 1
  %46 = tail call i8* @_Znwm(i64 280) #11
  %47 = bitcast i8* %46 to i32 (...)***
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*>*
  store <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*> <void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_signal_connectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE20do_signal_disconnectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE>, <2 x void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*>* %49, align 8
  %50 = getelementptr inbounds i8, i8* %46, i64 24
  %51 = bitcast i8* %50 to void (%"class.sigslot::has_slots_interface"*)**
  store void (%"class.sigslot::has_slots_interface"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_disconnect_allEPNS_19has_slots_interfaceE, void (%"class.sigslot::has_slots_interface"*)** %51, align 8
  %52 = getelementptr inbounds i8, i8* %46, i64 40
  %53 = getelementptr inbounds i8, i8* %46, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #12
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %46, i64 56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %56 = bitcast i8* %55 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %56, align 8
  %57 = getelementptr inbounds i8, i8* %46, i64 72
  %58 = bitcast i8* %57 to %"class.jingle_xmpp::XmppClient"**
  store %"class.jingle_xmpp::XmppClient"* %0, %"class.jingle_xmpp::XmppClient"** %58, align 8
  %59 = getelementptr inbounds i8, i8* %46, i64 80
  %60 = getelementptr inbounds i8, i8* %46, i64 176
  %61 = bitcast i8* %60 to %"class.net::HostPortPair"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 96, i1 false) #12
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %61) #12
  %62 = getelementptr inbounds i8, i8* %46, i64 208
  %63 = getelementptr inbounds i8, i8* %46, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 9, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 50, i1 false) #12
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %42, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.16"* %42 to i8**
  store i8* %46, i8** %66, align 8
  %67 = icmp eq %"class.jingle_xmpp::XmppClient::Private"* %65, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %2
  %69 = bitcast %"class.jingle_xmpp::XmppClient::Private"* %65 to void (%"class.jingle_xmpp::XmppClient::Private"*)***
  %70 = load void (%"class.jingle_xmpp::XmppClient::Private"*)**, void (%"class.jingle_xmpp::XmppClient::Private"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.jingle_xmpp::XmppClient::Private"*)*, void (%"class.jingle_xmpp::XmppClient::Private"*)** %70, i64 1
  %72 = load void (%"class.jingle_xmpp::XmppClient::Private"*)*, void (%"class.jingle_xmpp::XmppClient::Private"*)** %71, align 8
  tail call void %72(%"class.jingle_xmpp::XmppClient::Private"* nonnull %65) #12
  br label %73

73:                                               ; preds = %2, %68
  store i8 1, i8* %45, align 1
  ret void
}

declare void @_ZN11jingle_xmpp19XmppClientInterfaceC2Ev(%"class.jingle_xmpp::XmppClientInterface"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClientInterface", %"class.jingle_xmpp::XmppClientInterface"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [11 x i8*], [4 x i8*] }, { [17 x i8*], [11 x i8*], [4 x i8*] }* @_ZTVN11jingle_xmpp10XmppClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %8, align 8
  store %"class.jingle_xmpp::XmppClient::Private"* null, %"class.jingle_xmpp::XmppClient::Private"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::XmppClient::Private"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.jingle_xmpp::XmppClient::Private"* %9 to void (%"class.jingle_xmpp::XmppClient::Private"*)***
  %13 = load void (%"class.jingle_xmpp::XmppClient::Private"*)**, void (%"class.jingle_xmpp::XmppClient::Private"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.jingle_xmpp::XmppClient::Private"*)*, void (%"class.jingle_xmpp::XmppClient::Private"*)** %13, i64 1
  %15 = load void (%"class.jingle_xmpp::XmppClient::Private"*)*, void (%"class.jingle_xmpp::XmppClient::Private"*)** %14, align 8
  tail call void %15(%"class.jingle_xmpp::XmppClient::Private"* nonnull %9) #12
  br label %16

16:                                               ; preds = %1, %11
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to %"struct.std::__1::__list_node"**
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 0
  br label %24

24:                                               ; preds = %24, %20
  %25 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %22, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %25, i64 0, i32 1, i32 1
  %27 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %25, i64 0, i32 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %25, i64 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"struct.std::__1::__list_node"* %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64 %36, i64* %38, align 8
  %39 = load i64, i64* %17, align 8
  %40 = add i64 %39, -1
  store i64 %40, i64* %17, align 8
  %41 = bitcast %"struct.std::__1::__list_node"* %25 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  %42 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %27, i64 0, i32 2
  %43 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %42, align 8
  tail call void %43(%"class.sigslot::has_slots_interface"* %27, %"class.sigslot::_signal_base_interface"* %23) #12
  %44 = load i64, i64* %17, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %24

46:                                               ; preds = %24, %16
  %47 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 6, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %47, %"struct.std::__1::__list_node_base"** %48, align 8
  %49 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::__list_node_base"** %53 to %"struct.std::__1::__list_node"**
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 0
  br label %56

56:                                               ; preds = %56, %52
  %57 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %54, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %57, i64 0, i32 1, i32 1
  %59 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %57, i64 0, i32 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %57, i64 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 0, i32 1
  %66 = bitcast %"struct.std::__1::__list_node_base"** %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast %"struct.std::__1::__list_node"* %57 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64**
  %70 = load i64*, i64** %69, align 8
  store i64 %68, i64* %70, align 8
  %71 = load i64, i64* %49, align 8
  %72 = add i64 %71, -1
  store i64 %72, i64* %49, align 8
  %73 = bitcast %"struct.std::__1::__list_node"* %57 to i8*
  tail call void @_ZdlPv(i8* %73) #11
  %74 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %59, i64 0, i32 2
  %75 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %74, align 8
  tail call void %75(%"class.sigslot::has_slots_interface"* %59, %"class.sigslot::_signal_base_interface"* %55) #12
  %76 = load i64, i64* %49, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %56

78:                                               ; preds = %56, %46
  %79 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %80 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 5, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %79, %"struct.std::__1::__list_node_base"** %80, align 8
  %81 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %110, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.std::__1::__list_node_base"** %85 to %"struct.std::__1::__list_node"**
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 0
  br label %88

88:                                               ; preds = %88, %84
  %89 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %86, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %89, i64 0, i32 1, i32 1
  %91 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %89, i64 0, i32 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %89, i64 0, i32 0, i32 0
  %96 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %96, i64 0, i32 1
  %98 = bitcast %"struct.std::__1::__list_node_base"** %97 to i64*
  store i64 %94, i64* %98, align 8
  %99 = bitcast %"struct.std::__1::__list_node"* %89 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64**
  %102 = load i64*, i64** %101, align 8
  store i64 %100, i64* %102, align 8
  %103 = load i64, i64* %81, align 8
  %104 = add i64 %103, -1
  store i64 %104, i64* %81, align 8
  %105 = bitcast %"struct.std::__1::__list_node"* %89 to i8*
  tail call void @_ZdlPv(i8* %105) #11
  %106 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %91, i64 0, i32 2
  %107 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %106, align 8
  tail call void %107(%"class.sigslot::has_slots_interface"* %91, %"class.sigslot::_signal_base_interface"* %87) #12
  %108 = load i64, i64* %81, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %88

110:                                              ; preds = %88, %78
  %111 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %112 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %111, %"struct.std::__1::__list_node_base"** %112, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %113 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %5, i64 0, i32 0
  %114 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 0, i32 3
  %115 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %114, align 8
  tail call void %115(%"class.sigslot::has_slots_interface"* %113) #12
  %116 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 1, i32 0
  %117 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node"**
  %119 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %116, %"class.std::__1::__tree_node"* %119) #12
  tail call void @_ZN11jingle_xmpp19XmppClientInterfaceD2Ev(%"class.jingle_xmpp::XmppClientInterface"* %3) #12
  %120 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to %"class.jingle_xmpp::Task"*
  tail call void @_ZN11jingle_xmpp4TaskD2Ev(%"class.jingle_xmpp::Task"* %120) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp19XmppClientInterfaceD2Ev(%"class.jingle_xmpp::XmppClientInterface"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N11jingle_xmpp10XmppClientD1Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.jingle_xmpp::XmppClient"*
  tail call void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn152_N11jingle_xmpp10XmppClientD1Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast %"class.std::__1::__compressed_pair.1"* %2 to %"class.jingle_xmpp::XmppClient"*
  tail call void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClientD0Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"* %0) #12
  %2 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N11jingle_xmpp10XmppClientD0Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.jingle_xmpp::XmppClient"*
  tail call void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"* %3) #12
  %4 = bitcast %"class.std::__1::__list_iterator"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn152_N11jingle_xmpp10XmppClientD0Ev(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast %"class.std::__1::__compressed_pair.1"* %2 to %"class.jingle_xmpp::XmppClient"*
  tail call void @_ZN11jingle_xmpp10XmppClientD2Ev(%"class.jingle_xmpp::XmppClient"* %3) #12
  %4 = bitcast %"class.std::__1::__compressed_pair.1"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZNK11jingle_xmpp10XmppClient3jidEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %4, align 8
  %6 = bitcast %"class.jingle_xmpp::XmppEngine"* %5 to %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)***
  %7 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)**, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %7, i64 28
  %9 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %8, align 8
  %10 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* %9(%"class.jingle_xmpp::XmppEngine"* %5) #12
  ret %"class.jingle_xmpp::Jid"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZThn88_NK11jingle_xmpp10XmppClient3jidEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 47
  %4 = bitcast %"class.std::__1::__list_iterator"* %3 to %"class.jingle_xmpp::XmppClient::Private"**
  %5 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %4, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %6, align 8
  %8 = bitcast %"class.jingle_xmpp::XmppEngine"* %7 to %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)***
  %9 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)**, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %9, i64 28
  %11 = load %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)*, %"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngine"*)** %10, align 8
  %12 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* %11(%"class.jingle_xmpp::XmppEngine"* %7) #12
  ret %"class.jingle_xmpp::Jid"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient6NextIdEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = bitcast %"class.jingle_xmpp::XmppEngine"* %6 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)***
  %8 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)** %8, i64 29
  %10 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)** %9, align 8
  tail call void %10(%"class.std::__1::basic_string"* sret %0, %"class.jingle_xmpp::XmppEngine"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N11jingle_xmpp10XmppClient6NextIdEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %1, i64 -1, i32 5, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %3, i64 47
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to %"class.jingle_xmpp::XmppClient::Private"**
  %6 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8, !noalias !15
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %7, align 8, !noalias !15
  %9 = bitcast %"class.jingle_xmpp::XmppEngine"* %8 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)***
  %10 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*** %9, align 8, !noalias !15
  %11 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)** %10, i64 29
  %12 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngine"*)** %11, align 8, !noalias !15
  tail call void %12(%"class.std::__1::basic_string"* sret %0, %"class.jingle_xmpp::XmppEngine"* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient10SendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = bitcast %"class.jingle_xmpp::XmppEngine"* %6 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)***
  %8 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)** %8, i64 23
  %10 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)** %9, align 8
  %11 = tail call i32 %10(%"class.jingle_xmpp::XmppEngine"* %6, %"class.jingle_xmpp::XmlElement"* %1) #12
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn88_N11jingle_xmpp10XmppClient10SendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %3, i64 47
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to %"class.jingle_xmpp::XmppClient::Private"**
  %6 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %7, align 8
  %9 = bitcast %"class.jingle_xmpp::XmppEngine"* %8 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)***
  %10 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)** %10, i64 23
  %12 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*)** %11, align 8
  %13 = tail call i32 %12(%"class.jingle_xmpp::XmppEngine"* %8, %"class.jingle_xmpp::XmlElement"* %1) #12
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %7, align 8
  %9 = bitcast %"class.jingle_xmpp::XmppEngine"* %8 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)***
  %10 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %10, i64 27
  %12 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %11, align 8
  %13 = tail call i32 %12(%"class.jingle_xmpp::XmppEngine"* %8, %"class.jingle_xmpp::XmlElement"* %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn88_N11jingle_xmpp10XmppClient15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %5, i64 47
  %7 = bitcast %"class.std::__1::__list_iterator"* %6 to %"class.jingle_xmpp::XmppClient::Private"**
  %8 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %7, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %9, align 8
  %11 = bitcast %"class.jingle_xmpp::XmppEngine"* %10 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)***
  %12 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %12, i64 27
  %14 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %13, align 8
  %15 = tail call i32 %14(%"class.jingle_xmpp::XmppEngine"* %10, %"class.jingle_xmpp::XmlElement"* %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp10XmppClient7SendRawERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = bitcast %"class.jingle_xmpp::XmppEngine"* %6 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)***
  %8 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %8, i64 24
  %10 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.std::__1::basic_string"*)** %9, align 8
  %11 = tail call i32 %10(%"class.jingle_xmpp::XmppEngine"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.jingle_xmpp::XmppEngine"* @_ZN11jingle_xmpp10XmppClient6engineEv(%"class.jingle_xmpp::XmppClient"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %4, align 8
  ret %"class.jingle_xmpp::XmppEngine"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private13OnStateChangeEi(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 4
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 3
  %5 = load %"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppClient"** %4, align 8
  br i1 %3, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %7, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %8, i64 0, i32 14
  %10 = load i8, i8* %9, align 8, !range !11
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %66

12:                                               ; preds = %6
  store i8 1, i8* %9, align 8
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 8
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__list_node_base"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 2, i32 0
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 2
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %19, i64 0, i32 0
  %22 = inttoptr i64 %16 to %"struct.std::__1::__list_node_base"*
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %20, %22
  br i1 %23, label %39, label %24

24:                                               ; preds = %12
  %25 = inttoptr i64 %16 to %"struct.std::__1::__list_node"*
  %26 = bitcast %"class.std::__1::__list_iterator"* %19 to i64*
  br label %27

27:                                               ; preds = %27, %24
  %28 = phi %"struct.std::__1::__list_node"* [ %25, %24 ], [ %38, %27 ]
  %29 = phi %"struct.std::__1::__list_node_base"* [ %22, %24 ], [ %36, %27 ]
  %30 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %28, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %26, align 8
  %34 = bitcast %"class.sigslot::_opaque_connection"* %30 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %35 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %34, align 8
  tail call void %35(%"class.sigslot::_opaque_connection"* %30, i32 4) #12
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %36, %20
  %38 = bitcast %"struct.std::__1::__list_node_base"* %36 to %"struct.std::__1::__list_node"*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27, %12
  store i8 0, i8* %13, align 8
  br label %66

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 2, i32 0
  %45 = bitcast %"struct.std::__1::__list_node_base"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 2
  %47 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %46, i64 0, i32 0
  %49 = inttoptr i64 %43 to %"struct.std::__1::__list_node_base"*
  %50 = icmp eq %"struct.std::__1::__list_node_base"* %47, %49
  br i1 %50, label %66, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %43 to %"struct.std::__1::__list_node"*
  %53 = bitcast %"class.std::__1::__list_iterator"* %46 to i64*
  br label %54

54:                                               ; preds = %54, %51
  %55 = phi %"struct.std::__1::__list_node"* [ %52, %51 ], [ %65, %54 ]
  %56 = phi %"struct.std::__1::__list_node_base"* [ %49, %51 ], [ %63, %54 ]
  %57 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %55, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %56, i64 0, i32 1
  %59 = bitcast %"struct.std::__1::__list_node_base"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %53, align 8
  %61 = bitcast %"class.sigslot::_opaque_connection"* %57 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %62 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %61, align 8
  tail call void %62(%"class.sigslot::_opaque_connection"* %57, i32 %1) #12
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %48, align 8
  %64 = icmp eq %"struct.std::__1::__list_node_base"* %63, %47
  %65 = bitcast %"struct.std::__1::__list_node_base"* %63 to %"struct.std::__1::__list_node"*
  br i1 %64, label %66, label %54

66:                                               ; preds = %54, %40, %39, %6
  %67 = bitcast %"class.jingle_xmpp::XmppClient"** %4 to %"class.jingle_xmpp::Task"**
  %68 = load %"class.jingle_xmpp::Task"*, %"class.jingle_xmpp::Task"** %67, align 8
  tail call void @_ZN11jingle_xmpp4Task4WakeEv(%"class.jingle_xmpp::Task"* %68) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N11jingle_xmpp10XmppClient7Private13OnStateChangeEi(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 1
  %4 = icmp eq i32 %1, 4
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"class.jingle_xmpp::XmppClient"**
  %7 = load %"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppClient"** %6, align 8
  br i1 %4, label %8, label %42

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %9, align 8
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %10, i64 0, i32 14
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %68

14:                                               ; preds = %8
  store i8 1, i8* %11, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 8
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 2, i32 0
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 2
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %21, i64 0, i32 0
  %24 = inttoptr i64 %18 to %"struct.std::__1::__list_node_base"*
  %25 = icmp eq %"struct.std::__1::__list_node_base"* %22, %24
  br i1 %25, label %41, label %26

26:                                               ; preds = %14
  %27 = inttoptr i64 %18 to %"struct.std::__1::__list_node"*
  %28 = bitcast %"class.std::__1::__list_iterator"* %21 to i64*
  br label %29

29:                                               ; preds = %29, %26
  %30 = phi %"struct.std::__1::__list_node"* [ %27, %26 ], [ %40, %29 ]
  %31 = phi %"struct.std::__1::__list_node_base"* [ %24, %26 ], [ %38, %29 ]
  %32 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %30, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %28, align 8
  %36 = bitcast %"class.sigslot::_opaque_connection"* %32 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %37 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %36, align 8
  tail call void %37(%"class.sigslot::_opaque_connection"* %32, i32 4) #12
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %38, %22
  %40 = bitcast %"struct.std::__1::__list_node_base"* %38 to %"struct.std::__1::__list_node"*
  br i1 %39, label %41, label %29

41:                                               ; preds = %29, %14
  store i8 0, i8* %15, align 8
  br label %68

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 2, i32 0
  %47 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 2
  %49 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %48, i64 0, i32 0
  %51 = inttoptr i64 %45 to %"struct.std::__1::__list_node_base"*
  %52 = icmp eq %"struct.std::__1::__list_node_base"* %49, %51
  br i1 %52, label %68, label %53

53:                                               ; preds = %42
  %54 = inttoptr i64 %45 to %"struct.std::__1::__list_node"*
  %55 = bitcast %"class.std::__1::__list_iterator"* %48 to i64*
  br label %56

56:                                               ; preds = %56, %53
  %57 = phi %"struct.std::__1::__list_node"* [ %54, %53 ], [ %67, %56 ]
  %58 = phi %"struct.std::__1::__list_node_base"* [ %51, %53 ], [ %65, %56 ]
  %59 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %57, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %55, align 8
  %63 = bitcast %"class.sigslot::_opaque_connection"* %59 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %64 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %63, align 8
  tail call void %64(%"class.sigslot::_opaque_connection"* %59, i32 %1) #12
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %65, %49
  %67 = bitcast %"struct.std::__1::__list_node_base"* %65 to %"struct.std::__1::__list_node"*
  br i1 %66, label %68, label %56

68:                                               ; preds = %56, %8, %41, %42
  %69 = bitcast %"class.std::__1::basic_string"* %5 to %"class.jingle_xmpp::Task"**
  %70 = load %"class.jingle_xmpp::Task"*, %"class.jingle_xmpp::Task"** %69, align 8
  tail call void @_ZN11jingle_xmpp4Task4WakeEv(%"class.jingle_xmpp::Task"* %70) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private11WriteOutputEPKcm(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 3
  %5 = load %"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppClient"** %4, align 8
  %6 = trunc i64 %2 to i32
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::__list_node_base"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 6, i32 0, i32 2, i32 0
  %11 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 6, i32 0, i32 2
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %5, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %12, i64 0, i32 0
  %15 = inttoptr i64 %9 to %"struct.std::__1::__list_node_base"*
  %16 = icmp eq %"struct.std::__1::__list_node_base"* %13, %15
  br i1 %16, label %32, label %17

17:                                               ; preds = %3
  %18 = inttoptr i64 %9 to %"struct.std::__1::__list_node"*
  %19 = bitcast %"class.std::__1::__list_iterator"* %12 to i64*
  br label %20

20:                                               ; preds = %20, %17
  %21 = phi %"struct.std::__1::__list_node"* [ %18, %17 ], [ %31, %20 ]
  %22 = phi %"struct.std::__1::__list_node_base"* [ %15, %17 ], [ %29, %20 ]
  %23 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %19, align 8
  %27 = bitcast %"class.sigslot::_opaque_connection"* %23 to void (%"class.sigslot::_opaque_connection"*, i8*, i32)**
  %28 = load void (%"class.sigslot::_opaque_connection"*, i8*, i32)*, void (%"class.sigslot::_opaque_connection"*, i8*, i32)** %27, align 8
  tail call void %28(%"class.sigslot::_opaque_connection"* %23, i8* %1, i32 %6) #12
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %29, %13
  %31 = bitcast %"struct.std::__1::__list_node_base"* %29 to %"struct.std::__1::__list_node"*
  br i1 %30, label %32, label %20

32:                                               ; preds = %20, %3
  %33 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %33, align 8
  %35 = bitcast %"class.jingle_xmpp::AsyncSocket"* %34 to i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)***
  %36 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)** %36, i64 7
  %38 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.jingle_xmpp::AsyncSocket"* %34, i8* %1, i64 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N11jingle_xmpp10XmppClient7Private11WriteOutputEPKcm(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 72
  %6 = bitcast i8* %5 to %"class.jingle_xmpp::XmppClient"**
  %7 = load %"class.jingle_xmpp::XmppClient"*, %"class.jingle_xmpp::XmppClient"** %6, align 8
  %8 = trunc i64 %2 to i32
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 6, i32 0, i32 2, i32 0
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 6, i32 0, i32 2
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %7, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %14, i64 0, i32 0
  %17 = inttoptr i64 %11 to %"struct.std::__1::__list_node_base"*
  %18 = icmp eq %"struct.std::__1::__list_node_base"* %15, %17
  br i1 %18, label %34, label %19

19:                                               ; preds = %3
  %20 = inttoptr i64 %11 to %"struct.std::__1::__list_node"*
  %21 = bitcast %"class.std::__1::__list_iterator"* %14 to i64*
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"struct.std::__1::__list_node"* [ %20, %19 ], [ %33, %22 ]
  %24 = phi %"struct.std::__1::__list_node_base"* [ %17, %19 ], [ %31, %22 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %21, align 8
  %29 = bitcast %"class.sigslot::_opaque_connection"* %25 to void (%"class.sigslot::_opaque_connection"*, i8*, i32)**
  %30 = load void (%"class.sigslot::_opaque_connection"*, i8*, i32)*, void (%"class.sigslot::_opaque_connection"*, i8*, i32)** %29, align 8
  tail call void %30(%"class.sigslot::_opaque_connection"* %25, i8* %1, i32 %8) #12
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %31, %15
  %33 = bitcast %"struct.std::__1::__list_node_base"* %31 to %"struct.std::__1::__list_node"*
  br i1 %32, label %34, label %22

34:                                               ; preds = %22, %3
  %35 = getelementptr inbounds i8, i8* %4, i64 80
  %36 = bitcast i8* %35 to %"class.jingle_xmpp::AsyncSocket"**
  %37 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %36, align 8
  %38 = bitcast %"class.jingle_xmpp::AsyncSocket"* %37 to i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)***
  %39 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)** %39, i64 7
  %41 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, i8*, i64)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.jingle_xmpp::AsyncSocket"* %37, i8* %1, i64 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private8StartTlsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %3, align 8
  %5 = bitcast %"class.jingle_xmpp::AsyncSocket"* %4 to i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)***
  %6 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)** %6, i64 9
  %8 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.jingle_xmpp::AsyncSocket"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N11jingle_xmpp10XmppClient7Private8StartTlsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 80
  %5 = bitcast i8* %4 to %"class.jingle_xmpp::AsyncSocket"**
  %6 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %5, align 8
  %7 = bitcast %"class.jingle_xmpp::AsyncSocket"* %6 to i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)***
  %8 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)** %8, i64 9
  %10 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.std::__1::basic_string"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.jingle_xmpp::AsyncSocket"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient7Private15CloseConnectionEv(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %2, align 8
  %4 = bitcast %"class.jingle_xmpp::AsyncSocket"* %3 to i1 (%"class.jingle_xmpp::AsyncSocket"*)***
  %5 = load i1 (%"class.jingle_xmpp::AsyncSocket"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*)** %5, i64 8
  %7 = load i1 (%"class.jingle_xmpp::AsyncSocket"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.jingle_xmpp::AsyncSocket"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N11jingle_xmpp10XmppClient7Private15CloseConnectionEv(%"class.jingle_xmpp::XmppClient::Private"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 80
  %4 = bitcast i8* %3 to %"class.jingle_xmpp::AsyncSocket"**
  %5 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %4, align 8
  %6 = bitcast %"class.jingle_xmpp::AsyncSocket"* %5 to i1 (%"class.jingle_xmpp::AsyncSocket"*)***
  %7 = load i1 (%"class.jingle_xmpp::AsyncSocket"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*)** %7, i64 8
  %9 = load i1 (%"class.jingle_xmpp::AsyncSocket"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.jingle_xmpp::AsyncSocket"* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient11AddXmppTaskEPNS_8XmppTaskENS_10XmppEngine12HandlerLevelE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmppTask"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %4, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %6, align 8
  %8 = icmp eq %"class.jingle_xmpp::XmppTask"* %1, null
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppTask", %"class.jingle_xmpp::XmppTask"* %1, i64 0, i32 1
  %10 = select i1 %8, %"class.jingle_xmpp::XmppStanzaHandler"* null, %"class.jingle_xmpp::XmppStanzaHandler"* %9
  %11 = bitcast %"class.jingle_xmpp::XmppEngine"* %7 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)***
  %12 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)** %12, i64 21
  %14 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.jingle_xmpp::XmppEngine"* %7, %"class.jingle_xmpp::XmppStanzaHandler"* %10, i32 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N11jingle_xmpp10XmppClient11AddXmppTaskEPNS_8XmppTaskENS_10XmppEngine12HandlerLevelE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmppTask"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %4, i64 47
  %6 = bitcast %"class.std::__1::__list_iterator"* %5 to %"class.jingle_xmpp::XmppClient::Private"**
  %7 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::XmppTask"* %1, null
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppTask", %"class.jingle_xmpp::XmppTask"* %1, i64 0, i32 1
  %12 = select i1 %10, %"class.jingle_xmpp::XmppStanzaHandler"* null, %"class.jingle_xmpp::XmppStanzaHandler"* %11
  %13 = bitcast %"class.jingle_xmpp::XmppEngine"* %9 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)***
  %14 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)** %14, i64 21
  %16 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)** %15, align 8
  %17 = tail call i32 %16(%"class.jingle_xmpp::XmppEngine"* %9, %"class.jingle_xmpp::XmppStanzaHandler"* %12, i32 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp10XmppClient14RemoveXmppTaskEPNS_8XmppTaskE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmppTask"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %5, align 8
  %7 = icmp eq %"class.jingle_xmpp::XmppTask"* %1, null
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppTask", %"class.jingle_xmpp::XmppTask"* %1, i64 0, i32 1
  %9 = select i1 %7, %"class.jingle_xmpp::XmppStanzaHandler"* null, %"class.jingle_xmpp::XmppStanzaHandler"* %8
  %10 = bitcast %"class.jingle_xmpp::XmppEngine"* %6 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)***
  %11 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)** %11, i64 22
  %13 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)** %12, align 8
  %14 = tail call i32 %13(%"class.jingle_xmpp::XmppEngine"* %6, %"class.jingle_xmpp::XmppStanzaHandler"* %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N11jingle_xmpp10XmppClient14RemoveXmppTaskEPNS_8XmppTaskE(%"class.jingle_xmpp::XmppClient"* nocapture readonly, %"class.jingle_xmpp::XmppTask"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 -1, i32 5, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %3, i64 47
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to %"class.jingle_xmpp::XmppClient::Private"**
  %6 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %5, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %7, align 8
  %9 = icmp eq %"class.jingle_xmpp::XmppTask"* %1, null
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppTask", %"class.jingle_xmpp::XmppTask"* %1, i64 0, i32 1
  %11 = select i1 %9, %"class.jingle_xmpp::XmppStanzaHandler"* null, %"class.jingle_xmpp::XmppStanzaHandler"* %10
  %12 = bitcast %"class.jingle_xmpp::XmppEngine"* %8 to i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)***
  %13 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)**, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)** %13, i64 22
  %15 = load i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)*, i32 (%"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppStanzaHandler"*)** %14, align 8
  %16 = tail call i32 %15(%"class.jingle_xmpp::XmppEngine"* %8, %"class.jingle_xmpp::XmppStanzaHandler"* %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [7 x i8*] }, { [8 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN11jingle_xmpp10XmppClient7PrivateE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  tail call void @_ZN11jingle_xmpp10XmppClient7Private11ResetSocketEv(%"class.jingle_xmpp::XmppClient::Private"* %0)
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 13, i32 2
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %10, %1
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 13, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %13, %19
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 10
  %24 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %22, %28
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 9
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %31, %37
  %41 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 8
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %40, %46
  %50 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 7
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %49, %55
  %59 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %60 = load %"class.jingle_xmpp::PreXmppAuth"*, %"class.jingle_xmpp::PreXmppAuth"** %59, align 8
  store %"class.jingle_xmpp::PreXmppAuth"* null, %"class.jingle_xmpp::PreXmppAuth"** %59, align 8
  %61 = icmp eq %"class.jingle_xmpp::PreXmppAuth"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.jingle_xmpp::PreXmppAuth"* %60 to void (%"class.jingle_xmpp::PreXmppAuth"*)***
  %64 = load void (%"class.jingle_xmpp::PreXmppAuth"*)**, void (%"class.jingle_xmpp::PreXmppAuth"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %64, i64 1
  %66 = load void (%"class.jingle_xmpp::PreXmppAuth"*)*, void (%"class.jingle_xmpp::PreXmppAuth"*)** %65, align 8
  tail call void %66(%"class.jingle_xmpp::PreXmppAuth"* nonnull %60) #12
  br label %67

67:                                               ; preds = %58, %62
  %68 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"class.jingle_xmpp::XmppEngine"*, %"class.jingle_xmpp::XmppEngine"** %68, align 8
  store %"class.jingle_xmpp::XmppEngine"* null, %"class.jingle_xmpp::XmppEngine"** %68, align 8
  %70 = icmp eq %"class.jingle_xmpp::XmppEngine"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.jingle_xmpp::XmppEngine"* %69 to void (%"class.jingle_xmpp::XmppEngine"*)***
  %73 = load void (%"class.jingle_xmpp::XmppEngine"*)**, void (%"class.jingle_xmpp::XmppEngine"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.jingle_xmpp::XmppEngine"*)*, void (%"class.jingle_xmpp::XmppEngine"*)** %73, i64 1
  %75 = load void (%"class.jingle_xmpp::XmppEngine"*)*, void (%"class.jingle_xmpp::XmppEngine"*)** %74, align 8
  tail call void %75(%"class.jingle_xmpp::XmppEngine"* nonnull %69) #12
  br label %76

76:                                               ; preds = %67, %71
  %77 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %77, align 8
  store %"class.jingle_xmpp::AsyncSocket"* null, %"class.jingle_xmpp::AsyncSocket"** %77, align 8
  %79 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.jingle_xmpp::AsyncSocket"* %78 to void (%"class.jingle_xmpp::AsyncSocket"*)***
  %82 = load void (%"class.jingle_xmpp::AsyncSocket"*)**, void (%"class.jingle_xmpp::AsyncSocket"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.jingle_xmpp::AsyncSocket"*)*, void (%"class.jingle_xmpp::AsyncSocket"*)** %82, i64 1
  %84 = load void (%"class.jingle_xmpp::AsyncSocket"*)*, void (%"class.jingle_xmpp::AsyncSocket"*)** %83, align 8
  tail call void %84(%"class.jingle_xmpp::AsyncSocket"* nonnull %78) #12
  br label %85

85:                                               ; preds = %76, %80
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %86 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 0, i32 3
  %88 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %87, align 8
  tail call void %88(%"class.sigslot::has_slots_interface"* %86) #12
  %89 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node"**
  %92 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %91, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %89, %"class.std::__1::__tree_node"* %92) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp10XmppClient7PrivateD0Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"* %0) #12
  %2 = bitcast %"class.jingle_xmpp::XmppClient::Private"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn56_N11jingle_xmpp10XmppClient7PrivateD1Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"class.jingle_xmpp::XmppClient::Private"*
  tail call void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn56_N11jingle_xmpp10XmppClient7PrivateD0Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"class.jingle_xmpp::XmppClient::Private"*
  tail call void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"* %3) #12
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn64_N11jingle_xmpp10XmppClient7PrivateD1Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 0
  %3 = bitcast i8* %2 to %"class.jingle_xmpp::XmppClient::Private"*
  tail call void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn64_N11jingle_xmpp10XmppClient7PrivateD0Ev(%"class.jingle_xmpp::XmppClient::Private"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %0, i64 -1, i32 13, i32 0
  %3 = bitcast i8* %2 to %"class.jingle_xmpp::XmppClient::Private"*
  tail call void @_ZN11jingle_xmpp10XmppClient7PrivateD2Ev(%"class.jingle_xmpp::XmppClient::Private"* %3) #12
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11jingle_xmpp10XmppClient12GetStateNameEi(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppClient"*, i32) unnamed_addr #0 comdat align 2 {
  switch i32 %2, label %15 [
    i32 5, label %4
    i32 6, label %9
  ]

4:                                                ; preds = %3
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 14, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14, i1 false) #12
  %8 = getelementptr inbounds i8, i8* %7, i64 14
  store i8 0, i8* %8, align 2
  br label %17

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 16, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16, i1 false) #12
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i64* %13 to i8*
  store i8 0, i8* %14, align 8
  br label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.jingle_xmpp::XmppClient"* %1 to %"class.jingle_xmpp::Task"*
  tail call void @_ZNK11jingle_xmpp4Task12GetStateNameEi(%"class.std::__1::basic_string"* sret %0, %"class.jingle_xmpp::Task"* %16, i32 %2) #12
  br label %17

17:                                               ; preds = %15, %9, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11jingle_xmpp10XmppClient7ProcessEi(%"class.jingle_xmpp::XmppClient"*, i32) unnamed_addr #0 comdat align 2 {
  switch i32 %1, label %51 [
    i32 5, label %3
    i32 6, label %5
  ]

3:                                                ; preds = %2
  %4 = tail call i32 @_ZN11jingle_xmpp10XmppClient17ProcessTokenLoginEv(%"class.jingle_xmpp::XmppClient"* %0)
  br label %54

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::AsyncSocket"*, %"class.jingle_xmpp::AsyncSocket"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::AsyncSocket"* %9, null
  br i1 %10, label %54, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %7, i64 0, i32 10
  %13 = bitcast %"class.jingle_xmpp::AsyncSocket"* %9 to i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)***
  %14 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)**, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)** %14, i64 5
  %16 = load i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)*, i1 (%"class.jingle_xmpp::AsyncSocket"*, %"class.net::HostPortPair"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.jingle_xmpp::AsyncSocket"* nonnull %9, %"class.net::HostPortPair"* dereferenceable(32) %12) #12
  br i1 %17, label %54, label %18

18:                                               ; preds = %11
  %19 = load %"class.jingle_xmpp::XmppClient::Private"*, %"class.jingle_xmpp::XmppClient::Private"** %6, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppClient::Private", %"class.jingle_xmpp::XmppClient::Private"* %19, i64 0, i32 14
  %21 = load i8, i8* %20, align 8, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %54

23:                                               ; preds = %18
  store i8 1, i8* %20, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 8
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2, i32 0
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 2
  %31 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %30, i64 0, i32 0
  %33 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %31, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %23
  %36 = inttoptr i64 %27 to %"struct.std::__1::__list_node"*
  %37 = bitcast %"class.std::__1::__list_iterator"* %30 to i64*
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"struct.std::__1::__list_node"* [ %36, %35 ], [ %49, %38 ]
  %40 = phi %"struct.std::__1::__list_node_base"* [ %33, %35 ], [ %47, %38 ]
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %39, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %37, align 8
  %45 = bitcast %"class.sigslot::_opaque_connection"* %41 to void (%"class.sigslot::_opaque_connection"*, i32)**
  %46 = load void (%"class.sigslot::_opaque_connection"*, i32)*, void (%"class.sigslot::_opaque_connection"*, i32)** %45, align 8
  tail call void %46(%"class.sigslot::_opaque_connection"* %41, i32 4) #12
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %47, %31
  %49 = bitcast %"struct.std::__1::__list_node_base"* %47 to %"struct.std::__1::__list_node"*
  br i1 %48, label %50, label %38

50:                                               ; preds = %38, %23
  store i8 0, i8* %24, align 8
  br label %54

51:                                               ; preds = %2
  %52 = bitcast %"class.jingle_xmpp::XmppClient"* %0 to %"class.jingle_xmpp::Task"*
  %53 = tail call i32 @_ZN11jingle_xmpp4Task7ProcessEi(%"class.jingle_xmpp::Task"* %52, i32 %1) #12
  br label %54

54:                                               ; preds = %50, %18, %11, %5, %51, %3
  %55 = phi i32 [ %53, %51 ], [ %4, %3 ], [ 2, %5 ], [ 4, %11 ], [ 3, %18 ], [ 3, %50 ]
  ret i32 %55
}

declare void @_ZN11jingle_xmpp4Task4StopEv(%"class.jingle_xmpp::Task"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::XmppClientInterface"* @_ZN11jingle_xmpp10XmppClient9GetClientEv(%"class.jingle_xmpp::XmppClient"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppClient", %"class.jingle_xmpp::XmppClient"* %0, i64 0, i32 2
  ret %"class.jingle_xmpp::XmppClientInterface"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp16PlainSaslHandlerD2Ev(%"class.jingle_xmpp::PlainSaslHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11jingle_xmpp16PlainSaslHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp16PlainSaslHandlerD0Ev(%"class.jingle_xmpp::PlainSaslHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11jingle_xmpp16PlainSaslHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %12) #12
  %13 = bitcast %"class.jingle_xmpp::PlainSaslHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp16PlainSaslHandler23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::PlainSaslHandler"*, %"class.std::__1::vector"* dereferenceable(24), i1 zeroext) unnamed_addr #0 comdat align 2 {
  br i1 %3, label %13, label %5

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 0, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %12, align 8
  br label %51

13:                                               ; preds = %5, %4
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %15, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  br label %45

22:                                               ; preds = %13, %36
  %23 = phi %"class.std::__1::basic_string"* [ %37, %36 ], [ %15, %13 ]
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 5
  br i1 %32, label %33, label %36

33:                                               ; preds = %22
  %34 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %23, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33, %22
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 1
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %17
  br i1 %38, label %39, label %22

39:                                               ; preds = %33, %36
  %40 = phi %"class.std::__1::basic_string"* [ %17, %36 ], [ %23, %33 ]
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %42 = icmp eq %"class.std::__1::basic_string"* %40, %41
  %43 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  br i1 %42, label %45, label %48

45:                                               ; preds = %19, %39
  %46 = phi i8* [ %21, %19 ], [ %44, %39 ]
  store i8 0, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %47, align 8
  br label %51

48:                                               ; preds = %39
  store i8 5, i8* %44, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 5
  store i8 0, i8* %50, align 1
  br label %51

51:                                               ; preds = %45, %48, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::SaslMechanism"* @_ZN11jingle_xmpp16PlainSaslHandler19CreateSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::PlainSaslHandler"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.jingle_xmpp::Jid", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 5
  br i1 %12, label %13, label %122

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %122

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 104) #11
  %18 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1
  %19 = bitcast %"class.jingle_xmpp::Jid"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.jingle_xmpp::Jid"* %3 to i8*
  %25 = bitcast %"class.jingle_xmpp::Jid"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  br label %32

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %29, i64 %31) #12
  br label %32

32:                                               ; preds = %26, %23
  %33 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 1
  %34 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  br label %47

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %44, i64 %46) #12
  br label %47

47:                                               ; preds = %42, %39
  %48 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 2
  %49 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1, i32 2
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  br label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %59, i64 %61) #12
  br label %62

62:                                               ; preds = %54, %57
  %63 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 2
  %64 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp18SaslPlainMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %17, i64 8
  %66 = bitcast %"class.jingle_xmpp::Jid"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = bitcast %"class.jingle_xmpp::Jid"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %71, i64 24, i1 false) #12
  br label %78

72:                                               ; preds = %62
  %73 = bitcast i8* %65 to %"class.std::__1::basic_string"*
  %74 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %73, i8* %75, i64 %77) #12
  br label %78

78:                                               ; preds = %72, %70
  %79 = getelementptr inbounds i8, i8* %17, i64 32
  %80 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %85, i64 24, i1 false) #12
  br label %92

86:                                               ; preds = %78
  %87 = bitcast i8* %79 to %"class.std::__1::basic_string"*
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %87, i8* %89, i64 %91) #12
  br label %92

92:                                               ; preds = %86, %84
  %93 = getelementptr inbounds i8, i8* %17, i64 56
  %94 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %99, i64 24, i1 false) #12
  br label %106

100:                                              ; preds = %92
  %101 = bitcast i8* %93 to %"class.std::__1::basic_string"*
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %101, i8* %103, i64 %105) #12
  br label %106

106:                                              ; preds = %98, %100
  %107 = getelementptr inbounds i8, i8* %17, i64 80
  %108 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %113, i64 24, i1 false) #12
  br label %120

114:                                              ; preds = %106
  %115 = bitcast i8* %107 to %"class.std::__1::basic_string"*
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.jingle_xmpp::PlainSaslHandler", %"class.jingle_xmpp::PlainSaslHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %115, i8* %117, i64 %119) #12
  br label %120

120:                                              ; preds = %112, %114
  %121 = bitcast i8* %17 to %"class.jingle_xmpp::SaslMechanism"*
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %3) #12
  br label %122

122:                                              ; preds = %2, %13, %120
  %123 = phi %"class.jingle_xmpp::SaslMechanism"* [ %121, %120 ], [ null, %13 ], [ null, %2 ]
  ret %"class.jingle_xmpp::SaslMechanism"* %123
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp18SaslPlainMechanismD2Ev(%"class.jingle_xmpp::SaslPlainMechanism"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp18SaslPlainMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %12) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp18SaslPlainMechanismD0Ev(%"class.jingle_xmpp::SaslPlainMechanism"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp18SaslPlainMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 1
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %12) #12
  %13 = bitcast %"class.jingle_xmpp::SaslPlainMechanism"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp18SaslPlainMechanism16GetMechanismNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::SaslPlainMechanism"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 5, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %6 = getelementptr inbounds i8, i8* %5, i64 5
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp18SaslPlainMechanism13StartSaslAuthEv(%"class.jingle_xmpp::SaslPlainMechanism"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.jingle_xmpp::QName", align 8
  %3 = alloca %"class.jingle_xmpp::QName", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = tail call i8* @_Znwm(i64 104) #11
  %10 = bitcast i8* %9 to %"class.jingle_xmpp::XmlElement"*
  %11 = bitcast %"class.jingle_xmpp::QName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %2, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_SASL_AUTHE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %10, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %2, i1 zeroext true) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #12
  %12 = bitcast %"class.jingle_xmpp::QName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_MECHANISME) #12
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 5, i8* %15, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %16 = getelementptr inbounds i8, i8* %13, i64 5
  store i8 0, i8* %16, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %10, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %17 = load i8, i8* %15, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  %23 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 272, i1 false)
  %26 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %29, i64 0, i32 0
  %31 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %32 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %31, i64* %32, align 8
  %33 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %34 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8**
  %35 = inttoptr i64 %31 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to i64*
  store i64 %33, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %41, align 8
  %42 = load i8*, i8** %34, align 8
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %23, i64 %45
  %47 = bitcast i8* %46 to %"class.std::__1::ios_base"*
  %48 = bitcast %"class.std::__1::basic_stringbuf"* %29 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %47, i8* %48) #12
  %49 = getelementptr inbounds i8, i8* %46, i64 136
  %50 = bitcast i8* %49 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %46, i64 144
  %52 = bitcast i8* %51 to i32*
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %54 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %55 = bitcast %"class.std::__1::basic_ostream.base"* %53 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %57 = inttoptr i64 %54 to i8*
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::basic_ostream.base"* %53 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  %63 = bitcast i8* %62 to i64*
  store i64 %56, i64* %63, align 8
  %64 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %64, i64* %32, align 8
  %65 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %66 = inttoptr i64 %64 to i8*
  %67 = getelementptr i8, i8* %66, i64 -24
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %23, i64 %69
  %71 = bitcast i8* %70 to i64*
  store i64 %65, i64* %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %28, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %30) #12
  %72 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %74 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 3
  %75 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 32, i1 false) #12
  store i32 24, i32* %74, align 8
  %76 = bitcast %"class.std::__1::basic_ostream.base"* %53 to %"class.std::__1::basic_ostream"*
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #12
  %78 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %88 = zext i8 %81 to i64
  %89 = select i1 %82, i8* %84, i8* %87
  %90 = select i1 %82, i64 %86, i64 %88
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* %89, i64 %90) #12
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #12
  %93 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 2
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.jingle_xmpp::SaslPlainMechanism", %"class.jingle_xmpp::SaslPlainMechanism"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %103 = zext i8 %96 to i64
  %104 = select i1 %97, i8* %99, i8* %102
  %105 = select i1 %97, i64 %101, i64 %103
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* %104, i64 %105) #12
  %107 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  %108 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %29) #12
  %109 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = select i1 %112, i8* %114, i8* %108
  %116 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #12
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %29) #12
  %117 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %119 to i64
  %124 = select i1 %120, i64 %122, i64 %123
  call void @_ZN11jingle_xmpp13SaslMechanism21Base64EncodeFromArrayEPKcm(%"class.std::__1::basic_string"* nonnull sret %6, i8* %115, i64 %124) #12
  call void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %125 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %22
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %22, %129
  %133 = load i8, i8* %118, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %132, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #12
  %139 = load i8, i8* %110, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %142) #11
  br label %143

143:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  %144 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %144, i64* %32, align 8
  %145 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %146 = inttoptr i64 %144 to i8*
  %147 = getelementptr i8, i8* %146, i64 -24
  %148 = bitcast i8* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds i8, i8* %23, i64 %149
  %151 = bitcast i8* %150 to i64*
  store i64 %145, i64* %151, align 8
  %152 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %152, i64* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %153 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %143
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #11
  br label %160

160:                                              ; preds = %143, %157
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %30) #12
  %161 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %161, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %162 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %163 = bitcast %"class.std::__1::basic_ios.base"* %162 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %163) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %23) #12
  ret %"class.jingle_xmpp::XmlElement"* %10
}

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp13SaslMechanism19HandleSaslChallengeEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp13SaslMechanism17HandleSaslSuccessEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp13SaslMechanism17HandleSaslFailureEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #1

declare void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #3

declare void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN11jingle_xmpp13SaslMechanism21Base64EncodeFromArrayEPKcm(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZN11jingle_xmpp4TaskC2EPNS_10TaskParentE(%"class.jingle_xmpp::Task"*, %"class.jingle_xmpp::TaskParent"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp4TaskD2Ev(%"class.jingle_xmpp::Task"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp23XmppTaskParentInterfaceD0Ev(%"class.jingle_xmpp::XmppTaskParentInterface"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @_ZNK11jingle_xmpp4Task12GetStateNameEi(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::Task"*, i32) unnamed_addr #1

declare i32 @_ZN11jingle_xmpp4Task7ProcessEi(%"class.jingle_xmpp::Task"*, i32) unnamed_addr #1

declare i32 @_ZN11jingle_xmpp4Task15ProcessResponseEv(%"class.jingle_xmpp::Task"*) unnamed_addr #1

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_signal_connectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE(%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*) #0 comdat align 2 {
  %3 = ptrtoint %"class.sigslot::_signal_base_interface"* %1 to i64
  %4 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1
  %5 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 1
  %6 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %2
  %10 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %5 to %"class.std::__1::__tree_node_base"**
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load %"class.sigslot::_signal_base_interface"*, %"class.sigslot::_signal_base_interface"** %14, align 8
  %16 = icmp ugt %"class.sigslot::_signal_base_interface"* %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %40

23:                                               ; preds = %11
  %24 = icmp ult %"class.sigslot::_signal_base_interface"* %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %40

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %40

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %2
  %38 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %5 to %"class.std::__1::__tree_end_node"*
  %39 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %5 to %"class.std::__1::__tree_node_base"**
  br label %40

40:                                               ; preds = %37, %31, %29, %21
  %41 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %71

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 40) #11, !noalias !18
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 %3, i64* %49, align 8, !noalias !18
  %50 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  %52 = bitcast i8* %51 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %52, align 8
  %53 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %53, align 8
  %54 = bitcast %"class.sigslot::has_slots_interface"* %4 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %46
  %60 = ptrtoint %"class.std::__1::__tree_node_base"* %57 to i64
  %61 = bitcast %"class.sigslot::has_slots_interface"* %4 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %63

63:                                               ; preds = %59, %46
  %64 = phi %"class.std::__1::__tree_node_base"* [ %50, %46 ], [ %62, %59 ]
  %65 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %5 to %"class.std::__1::__tree_node_base"**
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %66, %"class.std::__1::__tree_node_base"* %64) #12
  %67 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 2
  %68 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %40, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEE20do_signal_disconnectEPNS_19has_slots_interfaceEPNS_22_signal_base_interfaceE(%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1
  %4 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 1
  %5 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %4 to %"class.std::__1::__tree_end_node"*
  %6 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %4 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  %9 = bitcast %"class.std::__1::__tree_node"* %7 to %"class.std::__1::__tree_node_base"*
  br i1 %8, label %74, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %5, %2 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %7, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %14 = load %"class.sigslot::_signal_base_interface"*, %"class.sigslot::_signal_base_interface"** %13, align 8
  %15 = icmp ult %"class.sigslot::_signal_base_interface"* %14, %1
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %5
  br i1 %25, label %74, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.sigslot::_signal_base_interface"**
  %29 = load %"class.sigslot::_signal_base_interface"*, %"class.sigslot::_signal_base_interface"** %28, align 8
  %30 = icmp ugt %"class.sigslot::_signal_base_interface"* %29, %1
  br i1 %30, label %74, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = bitcast %"class.sigslot::has_slots_interface"* %3 to %"class.std::__1::__tree_end_node"**
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.sigslot::has_slots_interface"* %3 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %64, %59
  %68 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 2
  %69 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %9, %"class.std::__1::__tree_node_base"* %72) #12
  %73 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %2, %24, %26, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEE17do_disconnect_allEPNS_19has_slots_interfaceE(%"class.sigslot::has_slots_interface"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__1::set.4", align 8
  %3 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1
  %4 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %83, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::set.4"* %2 to i8*
  %10 = getelementptr inbounds %"class.std::__1::set.4", %"class.std::__1::set.4"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::set.4", %"class.std::__1::set.4"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set.4"* %2 to i64*
  %13 = ptrtoint %"class.std::__1::__tree_end_node"* %11 to i64
  %14 = bitcast %"class.sigslot::has_slots_interface"* %3 to i64*
  %15 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %0, i64 1, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i64*
  %17 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %15 to i64*
  %18 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %15 to %"class.std::__1::__tree_node_base"**
  %19 = bitcast %"class.sigslot::has_slots_interface"* %3 to void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)***
  %20 = getelementptr inbounds %"class.std::__1::set.4", %"class.std::__1::set.4"* %2, i64 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %22 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %15 to <2 x i64>*
  br label %23

23:                                               ; preds = %8, %79
  %24 = phi i64 [ %6, %8 ], [ %81, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %25 = load i64, i64* %14, align 8
  store i64 %25, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %26 = load i64, i64* %17, align 8
  store i64 %26, i64* %16, align 8
  store i64 %24, i64* %10, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %22, align 8
  %27 = inttoptr i64 %26 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %28, align 8
  %29 = load i64, i64* %5, align 8
  %30 = icmp eq i64 %29, 0
  %31 = inttoptr i64 %25 to %"class.std::__1::__tree_end_node"*
  %32 = inttoptr i64 %26 to %"class.std::__1::__tree_node"*
  br i1 %30, label %37, label %33

33:                                               ; preds = %23
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %36 = bitcast %"class.std::__1::__tree_end_node"** %35 to void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)***
  br label %37

37:                                               ; preds = %23, %33
  %38 = phi void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*** [ %36, %33 ], [ %19, %23 ]
  store void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %15, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*** %38, align 8
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %11, %31
  br i1 %39, label %79, label %40

40:                                               ; preds = %37, %72
  %41 = phi %"class.std::__1::__tree_end_node"* [ %73, %72 ], [ %31, %37 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.sigslot::_signal_base_interface"**
  %44 = load %"class.sigslot::_signal_base_interface"*, %"class.sigslot::_signal_base_interface"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 1, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %56

48:                                               ; preds = %40
  %49 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 2
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_end_node"**
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %49
  br i1 %55, label %72, label %63

56:                                               ; preds = %40, %56
  %57 = phi %"class.std::__1::__tree_node_base"* [ %59, %56 ], [ %46, %40 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0
  br label %72

63:                                               ; preds = %48, %63
  %64 = phi %"class.std::__1::__tree_end_node"** [ %67, %63 ], [ %51, %48 ]
  %65 = bitcast %"class.std::__1::__tree_end_node"** %64 to %"class.std::__1::__tree_node_base"**
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 2
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %66
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %48, %61
  %73 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %52, %48 ], [ %68, %63 ]
  %74 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %44, i64 0, i32 0
  %75 = load void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)** %74, align 8
  call void %75(%"class.sigslot::_signal_base_interface"* %44, %"class.sigslot::has_slots_interface"* %0) #12
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %73, %11
  br i1 %76, label %77, label %40

77:                                               ; preds = %72
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  br label %79

79:                                               ; preds = %77, %37
  %80 = phi %"class.std::__1::__tree_node"* [ %78, %77 ], [ %32, %37 ]
  call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* nonnull %20, %"class.std::__1::__tree_node"* %80) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  %81 = load i64, i64* %5, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %23

83:                                               ; preds = %79, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev(%"class.sigslot::has_slots"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 3
  %5 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %4, align 8
  tail call void %5(%"class.sigslot::has_slots_interface"* %3) #12
  %6 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev(%"class.sigslot::has_slots"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 3
  %5 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %4, align 8
  tail call void %5(%"class.sigslot::has_slots_interface"* %3) #12
  %6 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.sigslot::has_slots"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !11
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !11
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !11
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !11
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !11
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !11
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !11
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !11
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !11
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !11
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !11
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !11
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !11
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClient7PrivateEJEEEvPKS0_DpT0_(%"class.sigslot::_opaque_connection"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 2
  %3 = bitcast [16 x i8]* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 2, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 1
  %9 = bitcast %"class.sigslot::has_slots_interface"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %7
  %12 = bitcast i8* %11 to %"class.jingle_xmpp::XmppClient::Private"*
  %13 = and i64 %4, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %4, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.jingle_xmpp::XmppClient::Private"*)**
  %21 = load void (%"class.jingle_xmpp::XmppClient::Private"*)*, void (%"class.jingle_xmpp::XmppClient::Private"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %4 to void (%"class.jingle_xmpp::XmppClient::Private"*)*
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi void (%"class.jingle_xmpp::XmppClient::Private"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.jingle_xmpp::XmppClient::Private"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot18_opaque_connection7emitterIN11jingle_xmpp10XmppClientEJEEEvPKS0_DpT0_(%"class.sigslot::_opaque_connection"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 2
  %3 = bitcast [16 x i8]* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 2, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %0, i64 0, i32 1
  %9 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %8, align 8
  %10 = icmp eq %"class.sigslot::has_slots_interface"* %9, null
  %11 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %9, i64 -5, i32 1
  %12 = bitcast void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %11 to i8*
  %13 = select i1 %10, i8* null, i8* %12
  %14 = getelementptr inbounds i8, i8* %13, i64 %7
  %15 = bitcast i8* %14 to %"class.jingle_xmpp::XmppClient"*
  %16 = and i64 %4, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %4, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.jingle_xmpp::XmppClient"*)**
  %24 = load void (%"class.jingle_xmpp::XmppClient"*)*, void (%"class.jingle_xmpp::XmppClient"*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %4 to void (%"class.jingle_xmpp::XmppClient"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.jingle_xmpp::XmppClient"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.jingle_xmpp::XmppClient"* %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE(%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1
  %4 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1, i32 1
  %5 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.sigslot::_signal_base_interface"* %3 to %"struct.std::__1::__list_node_base"*
  %8 = inttoptr i64 %6 to %"struct.std::__1::__list_node_base"*
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %8, %7
  br i1 %9, label %43, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2, i32 1
  %12 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %11 to %"struct.std::__1::__list_node_base"**
  %13 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2
  %14 = bitcast %"class.sigslot::_signal_base_interface"* %13 to i64*
  br label %15

15:                                               ; preds = %10, %41
  %16 = phi %"struct.std::__1::__list_node_base"* [ %8, %10 ], [ %25, %41 ]
  %17 = phi i64 [ %6, %10 ], [ %20, %41 ]
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %17 to %"struct.std::__1::__list_node"*
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 1
  %23 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %22, align 8
  %24 = icmp eq %"class.sigslot::has_slots_interface"* %23, %1
  %25 = inttoptr i64 %20 to %"struct.std::__1::__list_node_base"*
  br i1 %24, label %26, label %41

26:                                               ; preds = %15
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %28 = icmp eq %"struct.std::__1::__list_node_base"* %27, %16
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  store i64 %20, i64* %32, align 8
  %33 = inttoptr i64 %17 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  %37 = load i64, i64* %14, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %14, align 8
  %39 = inttoptr i64 %17 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br i1 %28, label %40, label %41

40:                                               ; preds = %26
  store %"struct.std::__1::__list_node_base"* %25, %"struct.std::__1::__list_node_base"** %12, align 8
  br label %41

41:                                               ; preds = %26, %40, %15
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %25, %7
  br i1 %42, label %43, label %15

43:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_(%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*) #0 comdat align 2 {
  %4 = alloca [16 x i8], align 8
  %5 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1
  %6 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1, i32 1
  %7 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %6 to i64*
  %8 = bitcast %"class.sigslot::_signal_base_interface"* %5 to %"struct.std::__1::__list_node_base"*
  %9 = load i64, i64* %7, align 8
  %10 = inttoptr i64 %9 to %"struct.std::__1::__list_node_base"*
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %10, %8
  br i1 %11, label %50, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %14 = bitcast %"class.sigslot::_signal_base_interface"* %5 to %"struct.std::__1::__list_node_base"**
  %15 = bitcast %"class.sigslot::_signal_base_interface"* %5 to i8**
  %16 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2
  %17 = bitcast %"class.sigslot::_signal_base_interface"* %16 to i64*
  br label %18

18:                                               ; preds = %12, %44
  %19 = phi %"struct.std::__1::__list_node_base"* [ %10, %12 ], [ %48, %44 ]
  %20 = phi i64 [ %9, %12 ], [ %47, %44 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__list_node"*
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 1
  %23 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %22, align 8
  %24 = icmp eq %"class.sigslot::has_slots_interface"* %23, %1
  br i1 %24, label %25, label %44

25:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 0
  %27 = bitcast void (%"class.sigslot::_opaque_connection"*)** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %29, i64 16, i1 false)
  %30 = tail call i8* @_Znwm(i64 48) #11, !noalias !21
  %31 = bitcast i8* %30 to %"struct.std::__1::__list_node_base"**
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to i64*
  store i64 %28, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  %35 = bitcast i8* %34 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %2, %"class.sigslot::has_slots_interface"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %13, i64 16, i1 false)
  %37 = getelementptr inbounds i8, i8* %30, i64 8
  %38 = bitcast i8* %37 to %"class.sigslot::_signal_base_interface"**
  store %"class.sigslot::_signal_base_interface"* %5, %"class.sigslot::_signal_base_interface"** %38, align 8
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %31, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i8**
  store i8* %30, i8** %41, align 8
  store i8* %30, i8** %15, align 8
  %42 = load i64, i64* %17, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  br label %44

44:                                               ; preds = %25, %18
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %49 = icmp eq %"struct.std::__1::__list_node_base"* %48, %8
  br i1 %49, label %50, label %18

50:                                               ; preds = %44, %3
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN11jingle_xmpp10XmppClient6NextIdEv: argument 0"}
!17 = distinct !{!17, !"_ZN11jingle_xmpp10XmppClient6NextIdEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
