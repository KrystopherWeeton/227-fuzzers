; ModuleID = '../../third_party/blink/renderer/core/editing/text_segments.cc'
source_filename = "../../third_party/blink/renderer/core/editing/text_segments.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.blink::TextSegments::Finder::Position" = type { i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.151", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.160", double, double, i64, i64, %"class.blink::HeapHashSet.162", %"class.blink::HeapHashSet.169", i16, i8, %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::TextLinkColors", %"class.blink::Member.184", i8, [7 x i8], %"class.blink::HeapHashMap.186", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.193", %"class.blink::Member.198", %"class.blink::Member.200", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.202", %"class.blink::HeapVector.204", %"class.std::__1::unique_ptr.212", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.218", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.230", %"class.WTF::Vector.232", i8, i8, %"class.std::__1::unique_ptr.237", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.243", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.251", i8, i32, %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.259", %"class.WTF::HashMap.261", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.274", i8, i32, %"class.blink::Member.281", %"class.blink::Member.283", i32, %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.std::__1::unique_ptr.291", i64, %"class.std::__1::unique_ptr.297", i32, i32, %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.309", %"class.WTF::Vector.311", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.316", %"class.blink::Member.323", %"class.std::__1::unique_ptr.325", %"class.blink::Member.331", i8, i8, %"class.WTF::String", %"class.blink::Member.333", i8, [7 x i8], %"class.blink::HeapHashMap.335", %"class.blink::HeapObserverSet", %"class.blink::Member.349", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.351", i32, i8, i8, %"class.blink::WeakMember.353", %"class.blink::Member.354" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.153" }
%"class.blink::HeapHashMap.153" = type { %"class.WTF::HashMap.156" }
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.159" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.162" = type { %"class.WTF::HashSet.165" }
%"class.WTF::HashSet.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"class.blink::WeakMember.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.168" = type opaque
%"class.blink::HeapHashSet.169" = type { %"class.WTF::HashSet.172" }
%"class.WTF::HashSet.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"class.blink::WeakMember.175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.175" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type opaque
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.204" = type { %"class.WTF::Vector.207" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::Member.210"*, i32, i32 }
%"class.blink::Member.210" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.218" = type { %"class.WTF::HashSet.221" }
%"class.WTF::HashSet.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"class.blink::WeakMember.224"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.224" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.225", i32, [4 x i8] }>
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.265" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.150", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.141, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.141 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.144", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.274" = type { %"class.WTF::HashSet.277" }
%"class.WTF::HashSet.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"class.blink::Member.280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.280" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.316" = type { %"class.WTF::HashMap.319" }
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.322" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.342" }
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.358", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.365", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.358" = type { %"class.WTF::HashSet.361" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::Member.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.364" = type opaque
%"class.blink::HeapTaskRunnerTimer.365" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.366", { i64, i64 } }
%"class.blink::WeakMember.366" = type { %"class.blink::MemberBase.352" }
%"class.blink::WeakMember.353" = type { %"class.blink::MemberBase" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::TextSegments::Finder" = type { i32 (...)** }
%"class.blink::TextOffsetMapping::ForwardRange" = type { %"class.blink::TextOffsetMapping::InlineContents" }
%"class.blink::TextOffsetMapping::InlineContents" = type { %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutBlockFlow" = type opaque
%"class.blink::LayoutObject" = type opaque
%"class.blink::TextOffsetMapping::ForwardRange::Iterator" = type { %"class.blink::TextOffsetMapping::InlineContents" }
%"class.blink::TextOffsetMapping" = type { %"class.blink::TextIteratorBehavior", %"class.blink::EphemeralRangeTemplate", %"class.WTF::String" }
%"class.blink::TextIteratorBehavior" = type { %union.anon }
%union.anon = type { i32 }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::TextOffsetMapping::BackwardRange" = type { %"class.blink::TextOffsetMapping::InlineContents" }
%"class.blink::TextOffsetMapping::BackwardRange::Iterator" = type { %"class.blink::TextOffsetMapping::InlineContents" }

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink12TextSegments6Finder8PositionC1Ev = hidden unnamed_addr alias void (%"class.blink::TextSegments::Finder::Position"*), void (%"class.blink::TextSegments::Finder::Position"*)* @_ZN5blink12TextSegments6Finder8PositionC2Ev
@_ZN5blink12TextSegments6Finder8PositionC1EjNS2_4TypeE = hidden unnamed_addr alias void (%"class.blink::TextSegments::Finder::Position"*, i32, i32), void (%"class.blink::TextSegments::Finder::Position"*, i32, i32)* @_ZN5blink12TextSegments6Finder8PositionC2EjNS2_4TypeE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12TextSegments6Finder8PositionC2Ev(%"class.blink::TextSegments::Finder::Position"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextSegments::Finder::Position", %"class.blink::TextSegments::Finder::Position"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::TextSegments::Finder::Position", %"class.blink::TextSegments::Finder::Position"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12TextSegments6Finder8PositionC2EjNS2_4TypeE(%"class.blink::TextSegments::Finder::Position"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextSegments::Finder::Position", %"class.blink::TextSegments::Finder::Position"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::TextSegments::Finder::Position", %"class.blink::TextSegments::Finder::Position"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN5blink12TextSegments6Finder8Position6BeforeEj(i32) local_unnamed_addr #1 align 2 {
  %2 = zext i32 %0 to i64
  %3 = or i64 %2, 4294967296
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN5blink12TextSegments6Finder8Position5AfterEj(i32) local_unnamed_addr #1 align 2 {
  %2 = zext i32 %0 to i64
  %3 = or i64 %2, 8589934592
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink12TextSegments6Finder8Position6OffsetEv(%"class.blink::TextSegments::Finder::Position"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextSegments::Finder::Position", %"class.blink::TextSegments::Finder::Position"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12TextSegments19FindBoundaryForwardERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPNS0_6FinderE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::TextSegments::Finder"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::TextOffsetMapping::ForwardRange", align 8
  %6 = alloca %"class.blink::TextOffsetMapping::ForwardRange::Iterator", align 8
  %7 = alloca %"class.blink::TextOffsetMapping::ForwardRange::Iterator", align 8
  %8 = alloca %"class.blink::TextOffsetMapping::InlineContents", align 8
  %9 = alloca %"class.blink::TextOffsetMapping", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %12 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %14 = bitcast %"class.blink::TextOffsetMapping::ForwardRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  call void @_ZN5blink17TextOffsetMapping14ForwardRangeOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping::ForwardRange"* nonnull sret %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %15 = bitcast %"class.blink::TextOffsetMapping::ForwardRange::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 24, i1 false) #9
  %16 = bitcast %"class.blink::TextOffsetMapping::ForwardRange::Iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %17 = getelementptr inbounds %"class.blink::TextOffsetMapping::ForwardRange::Iterator", %"class.blink::TextOffsetMapping::ForwardRange::Iterator"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::TextOffsetMapping::ForwardRange::Iterator", %"class.blink::TextOffsetMapping::ForwardRange::Iterator"* %7, i64 0, i32 0
  %19 = call zeroext i1 @_ZNK5blink17TextOffsetMapping14InlineContentseqERKS1_(%"class.blink::TextOffsetMapping::InlineContents"* nonnull %17, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %18) #9
  br i1 %19, label %130, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %22 = bitcast %"class.blink::TextOffsetMapping::InlineContents"* %8 to i8*
  %23 = bitcast %"class.blink::TextOffsetMapping"* %9 to i8*
  %24 = getelementptr inbounds %"class.blink::TextOffsetMapping", %"class.blink::TextOffsetMapping"* %9, i64 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.blink::TextSegments::Finder"* %2 to i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)***
  %26 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %27 = bitcast %"class.blink::EphemeralRangeTemplate"* %11 to i8*
  %28 = getelementptr inbounds %"class.blink::TextOffsetMapping", %"class.blink::TextOffsetMapping"* %9, i64 0, i32 1
  %29 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %30 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %32 = bitcast i32* %31 to i64*
  %33 = bitcast i32* %21 to i64*
  br label %34

34:                                               ; preds = %20, %128
  %35 = phi i1 [ true, %20 ], [ false, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  call void @_ZNK5blink17TextOffsetMapping12ForwardRange8IteratordeEv(%"class.blink::TextOffsetMapping::InlineContents"* nonnull sret %8, %"class.blink::TextOffsetMapping::ForwardRange::Iterator"* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 48, i1 false)
  call void @_ZN5blink17TextOffsetMappingC1ERKNS0_14InlineContentsE(%"class.blink::TextOffsetMapping"* nonnull %9, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %8) #9
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !5

52:                                               ; preds = %43
  call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %34, %38, %53
  br i1 %35, label %56, label %58

56:                                               ; preds = %55
  %57 = call i32 @_ZNK5blink17TextOffsetMapping17ComputeTextOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping"* nonnull %9, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br label %58

58:                                               ; preds = %55, %56
  %59 = phi i32 [ %57, %56 ], [ 0, %55 ]
  br i1 %37, label %77, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #9
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !5

74:                                               ; preds = %65
  call void @llvm.trap() #9
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %58, %60, %75
  %78 = load i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)**, i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)*** %25, align 8
  %79 = load i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)*, i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)** %78, align 8
  %80 = call i64 %79(%"class.blink::TextSegments::Finder"* %2, %"class.WTF::StringImpl"* %36, i32 %59) #9
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  switch i32 %83, label %86 [
    i32 1, label %84
    i32 2, label %85
  ]

84:                                               ; preds = %77
  call void @_ZNK5blink17TextOffsetMapping17GetPositionBeforeEj(%"class.blink::PositionTemplate"* sret %0, %"class.blink::TextOffsetMapping"* nonnull %9, i32 %81) #9
  br label %95

85:                                               ; preds = %77
  call void @_ZNK5blink17TextOffsetMapping16GetPositionAfterEj(%"class.blink::PositionTemplate"* sret %0, %"class.blink::TextOffsetMapping"* nonnull %9, i32 %81) #9
  br label %95

86:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::EphemeralRangeTemplate"* nonnull %11, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %28) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* nonnull %11) #9
  %87 = load i64, i64* %29, align 8
  store atomic i64 %87, i64* %30 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = inttoptr i64 %87 to i8*
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #9
  br label %93

93:                                               ; preds = %86, %90
  %94 = load i64, i64* %32, align 8
  store i64 %94, i64* %33, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br label %95

95:                                               ; preds = %93, %85, %84
  %96 = phi i32 [ 1, %84 ], [ 1, %85 ], [ 0, %93 ]
  br i1 %37, label %110, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %110

110:                                              ; preds = %95, %106, %109
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* %28) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #9
  %127 = icmp eq i32 %96, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  br i1 %127, label %128, label %131

128:                                              ; preds = %126
  call void @_ZN5blink17TextOffsetMapping12ForwardRange8IteratorppEv(%"class.blink::TextOffsetMapping::ForwardRange::Iterator"* nonnull %6) #9
  %129 = call zeroext i1 @_ZNK5blink17TextOffsetMapping14InlineContentseqERKS1_(%"class.blink::TextOffsetMapping::InlineContents"* nonnull %17, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %18) #9
  br i1 %129, label %130, label %34

130:                                              ; preds = %128, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  br label %132

131:                                              ; preds = %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br label %132

132:                                              ; preds = %131, %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #5

declare void @_ZN5blink17TextOffsetMapping14ForwardRangeOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping::ForwardRange"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNK5blink17TextOffsetMapping12ForwardRange8IteratordeEv(%"class.blink::TextOffsetMapping::InlineContents"* sret, %"class.blink::TextOffsetMapping::ForwardRange::Iterator"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink17TextOffsetMappingC1ERKNS0_14InlineContentsE(%"class.blink::TextOffsetMapping"*, %"class.blink::TextOffsetMapping::InlineContents"* dereferenceable(24)) unnamed_addr #5

declare i32 @_ZNK5blink17TextOffsetMapping17ComputeTextOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNK5blink17TextOffsetMapping17GetPositionBeforeEj(%"class.blink::PositionTemplate"* sret, %"class.blink::TextOffsetMapping"*, i32) local_unnamed_addr #5

declare void @_ZNK5blink17TextOffsetMapping16GetPositionAfterEj(%"class.blink::PositionTemplate"* sret, %"class.blink::TextOffsetMapping"*, i32) local_unnamed_addr #5

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink17TextOffsetMapping12ForwardRange8IteratorppEv(%"class.blink::TextOffsetMapping::ForwardRange::Iterator"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12TextSegments20FindBoundaryBackwardERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEPNS0_6FinderE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::TextSegments::Finder"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::TextOffsetMapping::BackwardRange", align 8
  %6 = alloca %"class.blink::TextOffsetMapping::BackwardRange::Iterator", align 8
  %7 = alloca %"class.blink::TextOffsetMapping::BackwardRange::Iterator", align 8
  %8 = alloca %"class.blink::TextOffsetMapping::InlineContents", align 8
  %9 = alloca %"class.blink::TextOffsetMapping", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %12 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %14 = bitcast %"class.blink::TextOffsetMapping::BackwardRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  call void @_ZN5blink17TextOffsetMapping15BackwardRangeOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping::BackwardRange"* nonnull sret %5, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %15 = bitcast %"class.blink::TextOffsetMapping::BackwardRange::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 24, i1 false) #9
  %16 = bitcast %"class.blink::TextOffsetMapping::BackwardRange::Iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9, !alias.scope !6
  %17 = getelementptr inbounds %"class.blink::TextOffsetMapping::BackwardRange::Iterator", %"class.blink::TextOffsetMapping::BackwardRange::Iterator"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::TextOffsetMapping::BackwardRange::Iterator", %"class.blink::TextOffsetMapping::BackwardRange::Iterator"* %7, i64 0, i32 0
  %19 = call zeroext i1 @_ZNK5blink17TextOffsetMapping14InlineContentseqERKS1_(%"class.blink::TextOffsetMapping::InlineContents"* nonnull %17, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %18) #9
  br i1 %19, label %136, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %22 = bitcast %"class.blink::TextOffsetMapping::InlineContents"* %8 to i8*
  %23 = bitcast %"class.blink::TextOffsetMapping"* %9 to i8*
  %24 = getelementptr inbounds %"class.blink::TextOffsetMapping", %"class.blink::TextOffsetMapping"* %9, i64 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.blink::TextSegments::Finder"* %2 to i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)***
  %26 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %27 = bitcast %"class.blink::EphemeralRangeTemplate"* %11 to i8*
  %28 = getelementptr inbounds %"class.blink::TextOffsetMapping", %"class.blink::TextOffsetMapping"* %9, i64 0, i32 1
  %29 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %30 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  %31 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %32 = bitcast i32* %31 to i64*
  %33 = bitcast i32* %21 to i64*
  br label %34

34:                                               ; preds = %20, %134
  %35 = phi i1 [ true, %20 ], [ false, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  call void @_ZNK5blink17TextOffsetMapping13BackwardRange8IteratordeEv(%"class.blink::TextOffsetMapping::InlineContents"* nonnull sret %8, %"class.blink::TextOffsetMapping::BackwardRange::Iterator"* nonnull %6) #9
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 48, i1 false)
  call void @_ZN5blink17TextOffsetMappingC1ERKNS0_14InlineContentsE(%"class.blink::TextOffsetMapping"* nonnull %9, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %8) #9
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !5

52:                                               ; preds = %43
  call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %34, %38, %53
  br i1 %35, label %56, label %58

56:                                               ; preds = %55
  %57 = call i32 @_ZNK5blink17TextOffsetMapping17ComputeTextOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping"* nonnull %9, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br label %64

58:                                               ; preds = %55
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  br label %64

64:                                               ; preds = %61, %58, %56
  %65 = phi i32 [ %57, %56 ], [ %63, %61 ], [ 0, %58 ]
  br i1 %37, label %83, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #9
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !5

80:                                               ; preds = %71
  call void @llvm.trap() #9
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %64, %66, %81
  %84 = load i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)**, i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)*** %25, align 8
  %85 = load i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)*, i64 (%"class.blink::TextSegments::Finder"*, %"class.WTF::StringImpl"*, i32)** %84, align 8
  %86 = call i64 %85(%"class.blink::TextSegments::Finder"* %2, %"class.WTF::StringImpl"* %36, i32 %65) #9
  %87 = trunc i64 %86 to i32
  %88 = lshr i64 %86, 32
  %89 = trunc i64 %88 to i32
  switch i32 %89, label %92 [
    i32 1, label %90
    i32 2, label %91
  ]

90:                                               ; preds = %83
  call void @_ZNK5blink17TextOffsetMapping17GetPositionBeforeEj(%"class.blink::PositionTemplate"* sret %0, %"class.blink::TextOffsetMapping"* nonnull %9, i32 %87) #9
  br label %101

91:                                               ; preds = %83
  call void @_ZNK5blink17TextOffsetMapping16GetPositionAfterEj(%"class.blink::PositionTemplate"* sret %0, %"class.blink::TextOffsetMapping"* nonnull %9, i32 %87) #9
  br label %101

92:                                               ; preds = %83
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::EphemeralRangeTemplate"* nonnull %11, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %28) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* nonnull %11) #9
  %93 = load i64, i64* %29, align 8
  store atomic i64 %93, i64* %30 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #9
  br label %99

99:                                               ; preds = %92, %96
  %100 = load i64, i64* %32, align 8
  store i64 %100, i64* %33, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br label %101

101:                                              ; preds = %99, %91, %90
  %102 = phi i32 [ 1, %90 ], [ 1, %91 ], [ 0, %99 ]
  br i1 %37, label %116, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %116

116:                                              ; preds = %101, %112, %115
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #9
  br label %132

132:                                              ; preds = %116, %128, %131
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* %28) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #9
  %133 = icmp eq i32 %102, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  br i1 %133, label %134, label %137

134:                                              ; preds = %132
  call void @_ZN5blink17TextOffsetMapping13BackwardRange8IteratorppEv(%"class.blink::TextOffsetMapping::BackwardRange::Iterator"* nonnull %6) #9
  %135 = call zeroext i1 @_ZNK5blink17TextOffsetMapping14InlineContentseqERKS1_(%"class.blink::TextOffsetMapping::InlineContents"* nonnull %17, %"class.blink::TextOffsetMapping::InlineContents"* nonnull dereferenceable(24) %18) #9
  br i1 %135, label %136, label %34

136:                                              ; preds = %134, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  br label %138

137:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br label %138

138:                                              ; preds = %137, %136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

declare void @_ZN5blink17TextOffsetMapping15BackwardRangeOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::TextOffsetMapping::BackwardRange"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNK5blink17TextOffsetMapping13BackwardRange8IteratordeEv(%"class.blink::TextOffsetMapping::InlineContents"* sret, %"class.blink::TextOffsetMapping::BackwardRange::Iterator"*) local_unnamed_addr #5

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #5

declare void @_ZN5blink17TextOffsetMapping13BackwardRange8IteratorppEv(%"class.blink::TextOffsetMapping::BackwardRange::Iterator"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZNK5blink17TextOffsetMapping14InlineContentseqERKS1_(%"class.blink::TextOffsetMapping::InlineContents"*, %"class.blink::TextOffsetMapping::InlineContents"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKS4_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) unnamed_addr #5

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink17TextOffsetMapping12ForwardRange3endEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink17TextOffsetMapping12ForwardRange3endEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink17TextOffsetMapping13BackwardRange3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink17TextOffsetMapping13BackwardRange3endEv"}
