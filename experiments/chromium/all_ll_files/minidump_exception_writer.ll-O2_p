; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_exception_writer.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_exception_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::MinidumpExceptionWriter" = type { %"class.crashpad::internal::MinidumpStreamWriter", %struct.MINIDUMP_EXCEPTION_STREAM, %"class.std::__1::unique_ptr" }
%"class.crashpad::internal::MinidumpStreamWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %struct.MINIDUMP_DIRECTORY }
%"class.crashpad::internal::MinidumpWritable.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%struct.MINIDUMP_DIRECTORY = type { i32, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_EXCEPTION_STREAM = type { i32, i32, %struct.MINIDUMP_EXCEPTION, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_EXCEPTION = type { i32, i32, i64, i64, i32, i32, [15 x i64] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.crashpad::MinidumpContextWriter"* }
%"class.crashpad::MinidumpContextWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", [4 x i8] }
%"class.crashpad::ExceptionSnapshot" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i64*, i64*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64* }
%"struct.crashpad::CPUContext" = type { i32, %union.anon }
%union.anon = type { %"struct.crashpad::CPUContextX86"* }
%"struct.crashpad::CPUContextX86" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, %"struct.crashpad::CPUContextX86::Fxsave", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.crashpad::CPUContextX86::Fxsave" = type { i16, i16, i8, i8, i16, i32, i16, i16, i32, i16, i16, i32, i32, [8 x %"union.crashpad::CPUContextX86::X87OrMMXRegister"], [8 x [16 x i8]], [176 x i8], [48 x i8] }
%"union.crashpad::CPUContextX86::X87OrMMXRegister" = type { %struct.anon }
%struct.anon = type { [10 x i8], [6 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"**, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.crashpad::internal::MinidumpWritable"** }
%"class.crashpad::FileWriterInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }

@_ZTVN8crashpad23MinidumpExceptionWriterE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriter6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriter12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void (%"class.std::__1::vector.36"*, %"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriter8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpExceptionWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad23MinidumpExceptionWriter11WriteObjectEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i32 (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZNK8crashpad23MinidumpExceptionWriter10StreamTypeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"parameters <= kMaxParameters\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/crashpad/crashpad/minidump/minidump_exception_writer.cc\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"context_\00", align 1

@_ZN8crashpad23MinidumpExceptionWriterC1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpExceptionWriter"*), void (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriterC2Ev
@_ZN8crashpad23MinidumpExceptionWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpExceptionWriter"*), void (%"class.crashpad::MinidumpExceptionWriter"*)* @_ZN8crashpad23MinidumpExceptionWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriterC2Ev(%"class.crashpad::MinidumpExceptionWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %2) #8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad23MinidumpExceptionWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1
  %5 = bitcast %struct.MINIDUMP_EXCEPTION_STREAM* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 176, i1 false)
  ret void
}

declare void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriterD2Ev(%"class.crashpad::MinidumpExceptionWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad23MinidumpExceptionWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.crashpad::MinidumpContextWriter"*, %"class.crashpad::MinidumpContextWriter"** %3, align 8
  store %"class.crashpad::MinidumpContextWriter"* null, %"class.crashpad::MinidumpContextWriter"** %3, align 8
  %5 = icmp eq %"class.crashpad::MinidumpContextWriter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.crashpad::MinidumpContextWriter"* %4 to void (%"class.crashpad::MinidumpContextWriter"*)***
  %8 = load void (%"class.crashpad::MinidumpContextWriter"*)**, void (%"class.crashpad::MinidumpContextWriter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %8, i64 1
  %10 = load void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %9, align 8
  tail call void %10(%"class.crashpad::MinidumpContextWriter"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %12) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriterD0Ev(%"class.crashpad::MinidumpExceptionWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad23MinidumpExceptionWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.crashpad::MinidumpContextWriter"*, %"class.crashpad::MinidumpContextWriter"** %3, align 8
  store %"class.crashpad::MinidumpContextWriter"* null, %"class.crashpad::MinidumpContextWriter"** %3, align 8
  %5 = icmp eq %"class.crashpad::MinidumpContextWriter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.crashpad::MinidumpContextWriter"* %4 to void (%"class.crashpad::MinidumpContextWriter"*)***
  %8 = load void (%"class.crashpad::MinidumpContextWriter"*)**, void (%"class.crashpad::MinidumpContextWriter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %8, i64 1
  %10 = load void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %9, align 8
  tail call void %10(%"class.crashpad::MinidumpContextWriter"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %12) #8
  %13 = bitcast %"class.crashpad::MinidumpExceptionWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriter22InitializeFromSnapshotEPKNS_17ExceptionSnapshotERKNSt3__13mapImjNS4_4lessImEENS4_9allocatorINS4_4pairIKmjEEEEEE(%"class.crashpad::MinidumpExceptionWriter"* nocapture, %"class.crashpad::ExceptionSnapshot"*, %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.crashpad::ExceptionSnapshot"* %1 to i64 (%"class.crashpad::ExceptionSnapshot"*)***
  %5 = load i64 (%"class.crashpad::ExceptionSnapshot"*)**, i64 (%"class.crashpad::ExceptionSnapshot"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.crashpad::ExceptionSnapshot"*)*, i64 (%"class.crashpad::ExceptionSnapshot"*)** %5, i64 3
  %7 = load i64 (%"class.crashpad::ExceptionSnapshot"*)*, i64 (%"class.crashpad::ExceptionSnapshot"*)** %6, align 8
  %8 = tail call i64 %7(%"class.crashpad::ExceptionSnapshot"* %1) #8
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %3, %13
  %14 = phi %"class.std::__1::__tree_end_node"* [ %24, %13 ], [ %9, %3 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %25, %13 ], [ %11, %3 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %8
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__tree_node_base"** %19 to %"class.std::__1::__tree_node"**
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %23 = select i1 %18, %"class.std::__1::__tree_node"** %20, %"class.std::__1::__tree_node"** %22
  %24 = select i1 %18, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %21
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %27, label %13

27:                                               ; preds = %13
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %24, %9
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %8, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29, %27, %3
  br label %35

35:                                               ; preds = %29, %34
  %36 = phi %"class.std::__1::__tree_end_node"* [ %9, %34 ], [ %24, %29 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 5
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  %41 = bitcast %"class.crashpad::ExceptionSnapshot"* %1 to i32 (%"class.crashpad::ExceptionSnapshot"*)***
  %42 = load i32 (%"class.crashpad::ExceptionSnapshot"*)**, i32 (%"class.crashpad::ExceptionSnapshot"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.crashpad::ExceptionSnapshot"*)*, i32 (%"class.crashpad::ExceptionSnapshot"*)** %42, i64 4
  %44 = load i32 (%"class.crashpad::ExceptionSnapshot"*)*, i32 (%"class.crashpad::ExceptionSnapshot"*)** %43, align 8
  %45 = tail call i32 %44(%"class.crashpad::ExceptionSnapshot"* %1) #8
  %46 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %45, i32* %46, align 8
  %47 = load i32 (%"class.crashpad::ExceptionSnapshot"*)**, i32 (%"class.crashpad::ExceptionSnapshot"*)*** %41, align 8
  %48 = getelementptr inbounds i32 (%"class.crashpad::ExceptionSnapshot"*)*, i32 (%"class.crashpad::ExceptionSnapshot"*)** %47, i64 5
  %49 = load i32 (%"class.crashpad::ExceptionSnapshot"*)*, i32 (%"class.crashpad::ExceptionSnapshot"*)** %48, align 8
  %50 = tail call i32 %49(%"class.crashpad::ExceptionSnapshot"* %1) #8
  %51 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 2, i32 1
  store i32 %50, i32* %51, align 4
  %52 = load i64 (%"class.crashpad::ExceptionSnapshot"*)**, i64 (%"class.crashpad::ExceptionSnapshot"*)*** %4, align 8
  %53 = getelementptr inbounds i64 (%"class.crashpad::ExceptionSnapshot"*)*, i64 (%"class.crashpad::ExceptionSnapshot"*)** %52, i64 6
  %54 = load i64 (%"class.crashpad::ExceptionSnapshot"*)*, i64 (%"class.crashpad::ExceptionSnapshot"*)** %53, align 8
  %55 = tail call i64 %54(%"class.crashpad::ExceptionSnapshot"* %1) #8
  %56 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 2, i32 3
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.crashpad::ExceptionSnapshot"* %1 to %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)***
  %58 = load %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)**, %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)*, %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)** %58, i64 7
  %60 = load %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)*, %"class.std::__1::vector.19"* (%"class.crashpad::ExceptionSnapshot"*)** %59, align 8
  %61 = tail call dereferenceable(24) %"class.std::__1::vector.19"* %60(%"class.crashpad::ExceptionSnapshot"* %1) #8
  tail call void @_ZN8crashpad23MinidumpExceptionWriter23SetExceptionInformationERKNSt3__16vectorImNS1_9allocatorImEEEE(%"class.crashpad::MinidumpExceptionWriter"* %0, %"class.std::__1::vector.19"* dereferenceable(24) %61)
  %62 = bitcast %"class.crashpad::ExceptionSnapshot"* %1 to %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)***
  %63 = load %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)**, %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)*** %62, align 8
  %64 = getelementptr inbounds %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)*, %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)** %63, i64 2
  %65 = load %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)*, %"struct.crashpad::CPUContext"* (%"class.crashpad::ExceptionSnapshot"*)** %64, align 8
  %66 = tail call %"struct.crashpad::CPUContext"* %65(%"class.crashpad::ExceptionSnapshot"* %1) #8
  %67 = tail call %"class.crashpad::MinidumpContextWriter"* @_ZN8crashpad21MinidumpContextWriter18CreateFromSnapshotEPKNS_10CPUContextE(%"struct.crashpad::CPUContext"* %66) #8
  %68 = ptrtoint %"class.crashpad::MinidumpContextWriter"* %67 to i64
  %69 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.crashpad::MinidumpContextWriter"*, %"class.crashpad::MinidumpContextWriter"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  store i64 %68, i64* %72, align 8
  %73 = icmp eq %"class.crashpad::MinidumpContextWriter"* %71, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %35
  %75 = bitcast %"class.crashpad::MinidumpContextWriter"* %71 to void (%"class.crashpad::MinidumpContextWriter"*)***
  %76 = load void (%"class.crashpad::MinidumpContextWriter"*)**, void (%"class.crashpad::MinidumpContextWriter"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %76, i64 1
  %78 = load void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %77, align 8
  tail call void %78(%"class.crashpad::MinidumpContextWriter"* nonnull %71) #8
  br label %79

79:                                               ; preds = %74, %35
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriter23SetExceptionInformationERKNSt3__16vectorImNS1_9allocatorImEEEE(%"class.crashpad::MinidumpExceptionWriter"* nocapture, %"class.std::__1::vector.19"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.crashpad::MinidumpExceptionWriter"* %0 to i8*
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.19"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp ugt i64 %13, 15
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %31

19:                                               ; preds = %2
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %13) #8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 15) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %20, i8* %21) #8
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %23, i8** %15, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 69, %"class.logging::CheckOpResult"* nonnull %5) #8
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %28

28:                                               ; preds = %19, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %29 = icmp ult i64 %13, 4294967296
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %28
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %18, %28
  %32 = trunc i64 %13 to i32
  %33 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 2, i32 4
  store i32 %32, i32* %33, align 8
  %34 = icmp eq i64 %12, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 0
  br label %45

37:                                               ; preds = %45
  %38 = icmp ult i64 %51, 15
  br i1 %38, label %39, label %53

39:                                               ; preds = %31, %37
  %40 = phi i64 [ %51, %37 ], [ 0, %31 ]
  %41 = shl i64 %40, 3
  %42 = add nuw nsw i64 %41, 120
  %43 = getelementptr i8, i8* %3, i64 %42
  %44 = sub nuw nsw i64 120, %41
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %44, i1 false)
  br label %53

45:                                               ; preds = %35, %45
  %46 = phi i64 [ 0, %35 ], [ %51, %45 ]
  %47 = load i64*, i64** %36, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 %46
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 2, i32 6, i64 %46
  store i64 %49, i64* %50, align 8
  %51 = add nuw i64 %46, 1
  %52 = icmp ult i64 %51, %13
  br i1 %52, label %45, label %37

53:                                               ; preds = %39, %37
  ret void
}

declare %"class.crashpad::MinidumpContextWriter"* @_ZN8crashpad21MinidumpContextWriter18CreateFromSnapshotEPKNS_10CPUContextE(%"struct.crashpad::CPUContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriter10SetContextENSt3__110unique_ptrINS_21MinidumpContextWriterENS1_14default_deleteIS3_EEEE(%"class.crashpad::MinidumpExceptionWriter"* nocapture, %"class.crashpad::MinidumpContextWriter"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.crashpad::MinidumpContextWriter"* %1 to i64
  %4 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.crashpad::MinidumpContextWriter"*, %"class.crashpad::MinidumpContextWriter"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.crashpad::MinidumpContextWriter"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.crashpad::MinidumpContextWriter"* %6 to void (%"class.crashpad::MinidumpContextWriter"*)***
  %11 = load void (%"class.crashpad::MinidumpContextWriter"*)**, void (%"class.crashpad::MinidumpContextWriter"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %11, i64 1
  %13 = load void (%"class.crashpad::MinidumpContextWriter"*)*, void (%"class.crashpad::MinidumpContextWriter"*)** %12, align 8
  tail call void %13(%"class.crashpad::MinidumpContextWriter"* nonnull %6) #8
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad23MinidumpExceptionWriter6FreezeEv(%"class.crashpad::MinidumpExceptionWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.crashpad::MinidumpContextWriter"*, %"class.crashpad::MinidumpContextWriter"** %3, align 8
  %5 = icmp eq %"class.crashpad::MinidumpContextWriter"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #8
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 0
  %11 = call zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"* %10) #8
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = bitcast %"class.crashpad::MinidumpContextWriter"** %3 to %"class.crashpad::internal::MinidumpWritable"**
  %14 = load %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %13, align 8
  %15 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1, i32 3
  call void @_ZN8crashpad8internal16MinidumpWritable26RegisterLocationDescriptorEP28MINIDUMP_LOCATION_DESCRIPTOR(%"class.crashpad::internal::MinidumpWritable"* %14, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %15) #8
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi i1 [ true, %12 ], [ false, %9 ]
  ret i1 %17
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

declare void @_ZN8crashpad8internal16MinidumpWritable26RegisterLocationDescriptorEP28MINIDUMP_LOCATION_DESCRIPTOR(%"class.crashpad::internal::MinidumpWritable"*, %struct.MINIDUMP_LOCATION_DESCRIPTOR*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8crashpad23MinidumpExceptionWriter12SizeOfObjectEv(%"class.crashpad::MinidumpExceptionWriter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 168
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad23MinidumpExceptionWriter8ChildrenEv(%"class.std::__1::vector.36"* noalias sret, %"class.crashpad::MinidumpExceptionWriter"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = bitcast %"class.crashpad::MinidumpContextWriter"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %10 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %3 to i64*
  %11 = tail call i8* @_Znwm(i64 8) #9
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast i8* %11 to i64*
  store i64 %6, i64* %14, align 8
  %15 = ptrtoint i8* %11 to i64
  store i64 %15, i64* %9, align 8
  store i64 %13, i64* %8, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad23MinidumpExceptionWriter11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::MinidumpExceptionWriter"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::MinidumpExceptionWriter", %"class.crashpad::MinidumpExceptionWriter"* %0, i64 0, i32 1
  %4 = bitcast %struct.MINIDUMP_EXCEPTION_STREAM* %3 to i8*
  %5 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)***
  %6 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)**, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %6, i64 3
  %8 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.crashpad::FileWriterInterface"* %1, i8* %4, i64 168) #8
  ret i1 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8crashpad23MinidumpExceptionWriter10StreamTypeEv(%"class.crashpad::MinidumpExceptionWriter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 6
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #1

declare i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"*, i64) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
