; ModuleID = '../../third_party/blink/common/widget/visual_properties.cc'
source_filename = "../../third_party/blink/common/widget/visual_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::VisualProperties" = type <{ %"struct.blink::ScreenInfos", i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Rect", %"struct.cc::BrowserControlsParams", i8, [7 x i8], %"class.absl::optional.1", i8, [3 x i8], i32, i32, [4 x i8], double, float, float, %"class.std::__1::vector.6", i8, [7 x i8] }>
%"struct.blink::ScreenInfos" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ScreenInfo"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gfx::Rect"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZN5blink16VisualPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.blink::VisualProperties"*), void (%"struct.blink::VisualProperties"*)* @_ZN5blink16VisualPropertiesC2Ev
@_ZN5blink16VisualPropertiesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.blink::VisualProperties"*, %"struct.blink::VisualProperties"*), void (%"struct.blink::VisualProperties"*, %"struct.blink::VisualProperties"*)* @_ZN5blink16VisualPropertiesC2ERKS0_
@_ZN5blink16VisualPropertiesD1Ev = hidden unnamed_addr alias void (%"struct.blink::VisualProperties"*), void (%"struct.blink::VisualProperties"*)* @_ZN5blink16VisualPropertiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisualPropertiesC2Ev(%"struct.blink::VisualProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 0
  tail call void @_ZN5blink11ScreenInfosC1Ev(%"struct.blink::ScreenInfos"* %2) #8
  %3 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 3, i32 0
  %5 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 9
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 14
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 15
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 17
  store double 0.000000e+00, double* %10, align 8
  %11 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 18
  %12 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 67, i1 false)
  %13 = bitcast %union.anon.5* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  store float 1.000000e+00, float* %11, align 8
  %14 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 19
  store float 1.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20
  %16 = bitcast %"class.std::__1::vector.6"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN5blink11ScreenInfosC1Ev(%"struct.blink::ScreenInfos"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisualPropertiesC2ERKS0_(%"struct.blink::VisualProperties"*, %"struct.blink::VisualProperties"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 0
  tail call void @_ZN5blink11ScreenInfosC1ERKS0_(%"struct.blink::ScreenInfos"* %3, %"struct.blink::ScreenInfos"* dereferenceable(32) %4) #8
  %5 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 73, i1 false)
  %7 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #8
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %15, align 4
  %18 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %19 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %20 = bitcast %"class.base::UnguessableToken"* %18 to i8*
  %21 = bitcast %"class.base::UnguessableToken"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false) #8
  store i8 1, i8* %7, align 8
  br label %22

22:                                               ; preds = %2, %11
  %23 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 12
  %24 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false)
  %25 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20
  %26 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20
  %27 = bitcast %"class.std::__1::vector.6"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #8
  %28 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20, i32 0, i32 1
  %29 = bitcast %"class.gfx::Rect"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.6"* %26 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 4
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %22
  %37 = icmp ugt i64 %34, 1152921504606846975
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector.6"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #9
  unreachable

40:                                               ; preds = %36
  %41 = tail call i8* @_Znwm(i64 %33) #10
  %42 = bitcast i8* %41 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20, i32 0, i32 1
  %44 = bitcast %"class.gfx::Rect"** %43 to i8**
  store i8* %41, i8** %44, align 8
  %45 = bitcast %"class.std::__1::vector.6"* %25 to i8**
  store i8* %41, i8** %45, align 8
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %34
  %47 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Rect"* %46, %"class.gfx::Rect"** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %26, i64 0, i32 0, i32 0
  %49 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %48, align 8
  %50 = load i64, i64* %29, align 8
  %51 = bitcast %"class.gfx::Rect"** %43 to i64*
  %52 = ptrtoint i8* %41 to i64
  %53 = ptrtoint %"class.gfx::Rect"* %49 to i64
  %54 = sub i64 %50, %53
  %55 = icmp sgt i64 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %40
  %57 = lshr exact i64 %54, 4
  %58 = bitcast %"class.gfx::Rect"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %58, i64 %54, i1 false) #8
  %59 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %57
  %60 = ptrtoint %"class.gfx::Rect"* %59 to i64
  br label %61

61:                                               ; preds = %56, %40
  %62 = phi i64 [ %60, %56 ], [ %52, %40 ]
  store i64 %62, i64* %51, align 8
  br label %63

63:                                               ; preds = %22, %61
  %64 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 21
  %65 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 21
  %66 = load i8, i8* %65, align 8, !range !2
  store i8 %66, i8* %64, align 8
  ret void
}

declare void @_ZN5blink11ScreenInfosC1ERKS0_(%"struct.blink::ScreenInfos"*, %"struct.blink::ScreenInfos"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisualPropertiesD2Ev(%"struct.blink::VisualProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %2, align 8
  %4 = icmp eq %"class.gfx::Rect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Rect"* %3 to i64
  %7 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 0
  tail call void @_ZN5blink11ScreenInfosD1Ev(%"struct.blink::ScreenInfos"* %11) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11ScreenInfosD1Ev(%"struct.blink::ScreenInfos"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"struct.blink::VisualProperties"* @_ZN5blink16VisualPropertiesaSERKS0_(%"struct.blink::VisualProperties"* returned, %"struct.blink::VisualProperties"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(32) %"struct.blink::ScreenInfos"* @_ZN5blink11ScreenInfosaSERKS0_(%"struct.blink::ScreenInfos"* %3, %"struct.blink::ScreenInfos"* dereferenceable(32) %4) #8
  %6 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 73, i1 false)
  %8 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.viz::LocalSurfaceId"* %18 to i8*
  %20 = bitcast %"class.viz::LocalSurfaceId"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #8
  br label %34

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %13, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %25, align 4
  %28 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %30 = bitcast %"class.base::UnguessableToken"* %28 to i8*
  %31 = bitcast %"class.base::UnguessableToken"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false) #8
  store i8 1, i8* %14, align 8
  br label %34

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 8
  br label %34

34:                                               ; preds = %17, %21, %32
  %35 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 12
  %36 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  %37 = icmp eq %"struct.blink::VisualProperties"* %0, %1
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20
  %40 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20, i32 0, i32 0
  %41 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %40, align 8
  %42 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20, i32 0, i32 1
  %43 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %42, align 8
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.6"* %39, %"class.gfx::Rect"* %41, %"class.gfx::Rect"* %43) #8
  br label %44

44:                                               ; preds = %34, %38
  %45 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 21
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 21
  store i8 %46, i8* %47, align 8
  ret %"struct.blink::VisualProperties"* %0
}

declare dereferenceable(32) %"struct.blink::ScreenInfos"* @_ZN5blink11ScreenInfosaSERKS0_(%"struct.blink::ScreenInfos"*, %"struct.blink::ScreenInfos"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16VisualPropertieseqERKS0_(%"struct.blink::VisualProperties"*, %"struct.blink::VisualProperties"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink11ScreenInfoseqERKS0_(%"struct.blink::ScreenInfos"* %3, %"struct.blink::ScreenInfos"* dereferenceable(32) %4) #8
  br i1 %5, label %6, label %226

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %8, %10
  br i1 %11, label %12, label %226

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 3, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %226

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 3, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %226

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %226

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 4, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %226

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 5, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 5, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %226

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 5, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 5, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %226

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 6, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 6, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %226

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 6, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 6, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %226

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 7, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 7, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %226

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 7, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %226

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 7, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 7, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %226

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 7, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 7, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %84, label %226

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 8
  %86 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 8
  %87 = tail call zeroext i1 @_ZNK2cc21BrowserControlsParamseqERKS0_(%"struct.cc::BrowserControlsParams"* %85, %"struct.cc::BrowserControlsParams"* dereferenceable(20) %86) #8
  br i1 %87, label %88, label %226

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 9
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 9
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %90, %92
  br i1 %93, label %94, label %226

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp ne i8 %96, 0
  %98 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  %101 = xor i1 %97, %100
  %102 = xor i1 %97, true
  %103 = or i1 %101, %102
  br i1 %103, label %131, label %104

104:                                              ; preds = %94
  %105 = icmp eq i8 %99, 0
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %104
  tail call void @llvm.trap() #8
  unreachable

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %113, label %226

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %226

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %121, %123
  br i1 %124, label %125, label %226

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %127, %129
  br i1 %130, label %132, label %226

131:                                              ; preds = %94
  br i1 %101, label %226, label %132

132:                                              ; preds = %131, %125
  %133 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 12
  %134 = load i8, i8* %133, align 8, !range !2
  %135 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 12
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %134, %136
  br i1 %137, label %138, label %226

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 14
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 14
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %144, label %226

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 15
  %146 = load i32, i32* %145, align 8
  %147 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 15
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %226

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 17
  %152 = load double, double* %151, align 8
  %153 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 17
  %154 = load double, double* %153, align 8
  %155 = fcmp oeq double %152, %154
  br i1 %155, label %156, label %226

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 18
  %158 = load float, float* %157, align 8
  %159 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 18
  %160 = load float, float* %159, align 8
  %161 = fcmp oeq float %158, %160
  br i1 %161, label %162, label %226

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 19
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 19
  %166 = load float, float* %165, align 4
  %167 = fcmp oeq float %164, %166
  br i1 %167, label %168, label %226

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20
  %170 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20
  %171 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 20, i32 0, i32 1
  %172 = bitcast %"class.gfx::Rect"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::vector.6"* %169 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 20, i32 0, i32 1
  %178 = bitcast %"class.gfx::Rect"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::vector.6"* %170 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %179, %181
  %183 = icmp eq i64 %176, %182
  %184 = inttoptr i64 %175 to %"class.gfx::Rect"*
  %185 = inttoptr i64 %173 to %"class.gfx::Rect"*
  br i1 %183, label %186, label %226

186:                                              ; preds = %168
  %187 = icmp eq %"class.gfx::Rect"* %184, %185
  br i1 %187, label %220, label %188

188:                                              ; preds = %186
  %189 = inttoptr i64 %181 to %"class.gfx::Rect"*
  br label %190

190:                                              ; preds = %188, %216
  %191 = phi %"class.gfx::Rect"* [ %218, %216 ], [ %189, %188 ]
  %192 = phi %"class.gfx::Rect"* [ %217, %216 ], [ %184, %188 ]
  %193 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %192, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %191, i64 0, i32 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %198, label %226

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %192, i64 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %191, i64 0, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %200, %202
  br i1 %203, label %204, label %226

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %192, i64 0, i32 1, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %191, i64 0, i32 1, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %206, %208
  br i1 %209, label %210, label %226

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %192, i64 0, i32 1, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %191, i64 0, i32 1, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %216, label %226

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %192, i64 1
  %218 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %191, i64 1
  %219 = icmp eq %"class.gfx::Rect"* %217, %185
  br i1 %219, label %220, label %190

220:                                              ; preds = %216, %186
  %221 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %0, i64 0, i32 21
  %222 = load i8, i8* %221, align 8, !range !2
  %223 = getelementptr inbounds %"struct.blink::VisualProperties", %"struct.blink::VisualProperties"* %1, i64 0, i32 21
  %224 = load i8, i8* %223, align 8, !range !2
  %225 = icmp eq i8 %222, %224
  br label %226

226:                                              ; preds = %210, %198, %204, %190, %131, %168, %119, %107, %113, %60, %72, %66, %48, %36, %24, %12, %125, %220, %162, %156, %150, %144, %138, %132, %88, %84, %78, %54, %42, %30, %18, %6, %2
  %227 = phi i1 [ false, %162 ], [ false, %156 ], [ false, %150 ], [ false, %144 ], [ false, %138 ], [ false, %132 ], [ false, %131 ], [ false, %88 ], [ false, %84 ], [ false, %78 ], [ false, %54 ], [ false, %42 ], [ false, %30 ], [ false, %18 ], [ false, %6 ], [ false, %2 ], [ %225, %220 ], [ false, %125 ], [ false, %12 ], [ false, %24 ], [ false, %36 ], [ false, %48 ], [ false, %66 ], [ false, %72 ], [ false, %60 ], [ false, %113 ], [ false, %107 ], [ false, %119 ], [ false, %168 ], [ false, %190 ], [ false, %204 ], [ false, %198 ], [ false, %210 ]
  ret i1 %227
}

declare zeroext i1 @_ZNK5blink11ScreenInfoseqERKS0_(%"struct.blink::ScreenInfos"*, %"struct.blink::ScreenInfos"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc21BrowserControlsParamseqERKS0_(%"struct.cc::BrowserControlsParams"*, %"struct.cc::BrowserControlsParams"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16VisualPropertiesneERKS0_(%"struct.blink::VisualProperties"*, %"struct.blink::VisualProperties"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink16VisualPropertieseqERKS0_(%"struct.blink::VisualProperties"* %0, %"struct.blink::VisualProperties"* dereferenceable(208) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.6"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Rect"* %2 to i64
  %5 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Rect"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Rect"* %24, %"class.gfx::Rect"* %2
  %26 = ptrtoint %"class.gfx::Rect"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Rect"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Rect"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 %28
  store %"class.gfx::Rect"* %48, %"class.gfx::Rect"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #9
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  %76 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Rect"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %72
  store %"class.gfx::Rect"* %79, %"class.gfx::Rect"** %8, align 8
  %80 = bitcast %"class.gfx::Rect"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #8
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Rect"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
