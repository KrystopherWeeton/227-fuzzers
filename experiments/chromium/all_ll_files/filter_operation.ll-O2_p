; ModuleID = '../../cc/paint/filter_operation.cc'
source_filename = "../../cc/paint/filter_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"class.std::__1::basic_string" }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@__const._ZN2cc15FilterOperation5BlendEPKS0_S2_d.blended_filter = private unnamed_addr constant %"class.cc::FilterOperation" <{ i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %class.sk_sp { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, [20 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*), %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"amount\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"std_deviation\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"inset\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"is_null\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"filter_type\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"inner_threshold\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"outer_threshold\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"shape\00", align 1

@_ZN2cc15FilterOperationC1Ev = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*), void (%"class.cc::FilterOperation"*)* @_ZN2cc15FilterOperationC2Ev
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeEf = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, float), void (%"class.cc::FilterOperation"*, i32, float)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEf
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeEf10SkTileMode = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, float, i32), void (%"class.cc::FilterOperation"*, i32, float, i32)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEf10SkTileMode
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeERKN3gfx5PointEfj = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, %"class.gfx::Point"*, float, i32), void (%"class.cc::FilterOperation"*, i32, %"class.gfx::Point"*, float, i32)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERKN3gfx5PointEfj
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeERA20_Kf = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, [20 x float]*), void (%"class.cc::FilterOperation"*, i32, [20 x float]*)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERA20_Kf
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeEfi = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, float, i32), void (%"class.cc::FilterOperation"*, i32, float, i32)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEfi
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeE5sk_spINS_11PaintFilterEE = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, %class.sk_sp*), void (%"class.cc::FilterOperation"*, i32, %class.sk_sp*)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeE5sk_spINS_11PaintFilterEE
@_ZN2cc15FilterOperationC1ENS0_10FilterTypeERKNSt3__16vectorIN3gfx4RectENS2_9allocatorIS5_EEEEff = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, i32, %"class.std::__1::vector"*, float, float), void (%"class.cc::FilterOperation"*, i32, %"class.std::__1::vector"*, float, float)* @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERKNSt3__16vectorIN3gfx4RectENS2_9allocatorIS5_EEEEff
@_ZN2cc15FilterOperationC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*), void (%"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*)* @_ZN2cc15FilterOperationC2ERKS0_
@_ZN2cc15FilterOperationD1Ev = hidden unnamed_addr alias void (%"class.cc::FilterOperation"*), void (%"class.cc::FilterOperation"*)* @_ZN2cc15FilterOperationD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc15FilterOperationeqERKS0_(%"class.cc::FilterOperation"* nocapture readonly, %"class.cc::FilterOperation"* nocapture readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %128

8:                                                ; preds = %2
  switch i32 %4, label %122 [
    i32 10, label %9
    i32 8, label %16
    i32 9, label %28
    i32 12, label %52
    i32 14, label %58
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %11 = bitcast float* %10 to i8*
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 6, i64 0
  %13 = bitcast float* %12 to i8*
  %14 = tail call i32 @bcmp(i8* %11, i8* %13, i64 80)
  %15 = icmp eq i32 %14, 0
  br label %128

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %128

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 10
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 10
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br label %128

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %128

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 3, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %128

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 3, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %128

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br label %128

52:                                               ; preds = %8
  %53 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %54 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %53, align 8
  %55 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 5, i32 0
  %56 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %55, align 8
  %57 = icmp eq %"class.cc::PaintFilter"* %54, %56
  br label %128

58:                                               ; preds = %8
  %59 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %60 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 9
  %61 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 1
  %62 = bitcast %"class.gfx::Rect"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 9, i32 0, i32 1
  %68 = bitcast %"class.gfx::Rect"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector"* %60 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = icmp eq i64 %66, %72
  %74 = inttoptr i64 %65 to %"class.gfx::Rect"*
  %75 = inttoptr i64 %63 to %"class.gfx::Rect"*
  br i1 %73, label %76, label %128

76:                                               ; preds = %58
  %77 = icmp eq %"class.gfx::Rect"* %74, %75
  br i1 %77, label %110, label %78

78:                                               ; preds = %76
  %79 = inttoptr i64 %71 to %"class.gfx::Rect"*
  br label %80

80:                                               ; preds = %78, %106
  %81 = phi %"class.gfx::Rect"* [ %108, %106 ], [ %79, %78 ]
  %82 = phi %"class.gfx::Rect"* [ %107, %106 ], [ %74, %78 ]
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %128

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %128

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 0, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %128

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 0, i32 1, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 0, i32 1, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %128

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 1
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 1
  %109 = icmp eq %"class.gfx::Rect"* %107, %75
  br i1 %109, label %110, label %80

110:                                              ; preds = %106, %76
  %111 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %112 = load float, float* %111, align 4
  %113 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 1
  %114 = load float, float* %113, align 4
  %115 = fcmp oeq float %112, %114
  br i1 %115, label %116, label %128

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %118 = load float, float* %117, align 8
  %119 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 2
  %120 = load float, float* %119, align 8
  %121 = fcmp oeq float %118, %120
  br label %128

122:                                              ; preds = %8
  %123 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 1
  %126 = load float, float* %125, align 4
  %127 = fcmp oeq float %124, %126
  br label %128

128:                                              ; preds = %100, %88, %94, %80, %58, %34, %110, %116, %28, %40, %46, %16, %22, %2, %122, %52, %9
  %129 = phi i1 [ %15, %9 ], [ %57, %52 ], [ %127, %122 ], [ false, %2 ], [ false, %16 ], [ %27, %22 ], [ false, %40 ], [ false, %28 ], [ %51, %46 ], [ false, %110 ], [ %121, %116 ], [ false, %34 ], [ false, %58 ], [ false, %80 ], [ false, %94 ], [ false, %88 ], [ false, %100 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2Ev(%"class.cc::FilterOperation"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.cc::FilterOperation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 116, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEf(%"class.cc::FilterOperation"* nocapture, i32, float) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %2, float* %5, align 4
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 108, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEf10SkTileMode(%"class.cc::FilterOperation"* nocapture, i32, float, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 10
  %12 = bitcast float* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  store i32 %3, i32* %11, align 8
  %13 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %14 = bitcast float* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERKN3gfx5PointEfj(%"class.cc::FilterOperation"* nocapture, i32, %"class.gfx::Point"* nocapture readonly dereferenceable(8), float, i32) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %3, float* %7, align 4
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3
  %10 = bitcast %"class.gfx::Point"* %2 to i64*
  %11 = bitcast %"class.gfx::Point"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 4
  %13 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 4
  store i32 %4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %15 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %16 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %17 = bitcast %"class.cc::PaintFilter"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 92, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERA20_Kf(%"class.cc::FilterOperation"* nocapture, i32, [20 x float]* nocapture readonly dereferenceable(80)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %10 = bitcast float* %9 to i8*
  %11 = bitcast [20 x float]* %2 to i8*
  %12 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 28, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeEfi(%"class.cc::FilterOperation"* nocapture, i32, float, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  %9 = bitcast float* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false)
  store i32 %3, i32* %8, align 8
  %10 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %13 = bitcast float* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeE5sk_spINS_11PaintFilterEE(%"class.cc::FilterOperation"* nocapture, i32, %class.sk_sp* nocapture) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %8 = bitcast %class.sk_sp* %2 to i64*
  %9 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 20, i1 false)
  %10 = load i64, i64* %8, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %7, align 8
  %11 = bitcast %class.sk_sp* %6 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %15 = bitcast float* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 84, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ENS0_10FilterTypeERKNSt3__16vectorIN3gfx4RectENS2_9allocatorIS5_EEEEff(%"class.cc::FilterOperation"*, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %3, float* %7, align 4
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  store float %4, float* %8, align 8
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %12 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"class.gfx::Rect"** %13 to i64*
  %15 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 20, i1 false)
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.std::__1::vector"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %5
  %23 = icmp ugt i64 %20, 1152921504606846975
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #12
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %19) #13
  %28 = bitcast i8* %27 to %"class.gfx::Rect"*
  %29 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 1
  %30 = bitcast %"class.gfx::Rect"** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 %20
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Rect"* %32, %"class.gfx::Rect"** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %34, align 8
  %36 = load i64, i64* %14, align 8
  %37 = bitcast %"class.gfx::Rect"** %29 to i64*
  %38 = ptrtoint i8* %27 to i64
  %39 = ptrtoint %"class.gfx::Rect"* %35 to i64
  %40 = sub i64 %36, %39
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %26
  %43 = lshr exact i64 %40, 4
  %44 = bitcast %"class.gfx::Rect"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 %44, i64 %40, i1 false) #11
  %45 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 %43
  %46 = ptrtoint %"class.gfx::Rect"* %45 to i64
  br label %47

47:                                               ; preds = %42, %26
  %48 = phi i64 [ %46, %42 ], [ %38, %26 ]
  store i64 %48, i64* %37, align 8
  br label %49

49:                                               ; preds = %5, %47
  %50 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %51 = bitcast float* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationC2ERKS0_(%"class.cc::FilterOperation"*, %"class.cc::FilterOperation"* nocapture readonly dereferenceable(152)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast float* %6 to i32*
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 2
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = bitcast float* %11 to i32*
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 3
  %18 = bitcast %"class.gfx::Point"* %17 to i64*
  %19 = bitcast %"class.gfx::Point"* %16 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %25 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 5, i32 0
  %26 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %25, align 8
  %27 = icmp eq %"class.cc::PaintFilter"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %2, %28
  store %"class.cc::PaintFilter"* %26, %"class.cc::PaintFilter"** %24, align 8
  %32 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 9
  %37 = bitcast %"class.std::__1::vector"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 9, i32 0, i32 1
  %39 = bitcast %"class.gfx::Rect"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 4
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 1152921504606846975
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #12
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #13
  %52 = bitcast i8* %51 to %"class.gfx::Rect"*
  %53 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 1
  %54 = bitcast %"class.gfx::Rect"** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector"* %35 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %52, i64 %44
  %57 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Rect"* %56, %"class.gfx::Rect"** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 0
  %59 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast %"class.gfx::Rect"** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint %"class.gfx::Rect"* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 4
  %68 = bitcast %"class.gfx::Rect"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %68, i64 %64, i1 false) #11
  %69 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %52, i64 %67
  %70 = ptrtoint %"class.gfx::Rect"* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 10
  %75 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 10
  %76 = load i32, i32* %75, align 8
  store i32 %76, i32* %74, align 8
  %77 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %78 = bitcast float* %77 to i8*
  %79 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 6, i64 0
  %80 = bitcast float* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %80, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperationD2Ev(%"class.cc::FilterOperation"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %2, align 8
  %4 = icmp eq %"class.gfx::Rect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Rect"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %11, align 8
  %13 = icmp eq %"class.cc::PaintFilter"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %"class.cc::PaintFilter"* %12 to %class.SkRefCntBase*
  %20 = bitcast %"class.cc::PaintFilter"* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  tail call void %23(%class.SkRefCntBase* nonnull %19) #11
  br label %24

24:                                               ; preds = %10, %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15FilterOperation5BlendEPKS0_S2_d(%"class.cc::FilterOperation"* noalias sret, %"class.cc::FilterOperation"* readonly, %"class.cc::FilterOperation"* readonly, double) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.cc::FilterOperation", align 8
  %6 = alloca %"class.cc::FilterOperation", align 8
  %7 = bitcast %"class.cc::FilterOperation"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 bitcast (%"class.cc::FilterOperation"* @__const._ZN2cc15FilterOperation5BlendEPKS0_S2_d.blended_filter to i8*), i64 152, i1 false)
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11, !alias.scope !2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 116, i1 false) #11, !alias.scope !2
  %10 = icmp ne %"class.cc::FilterOperation"* %1, null
  %11 = icmp ne %"class.cc::FilterOperation"* %2, null
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %222

13:                                               ; preds = %4
  %14 = bitcast %"class.cc::FilterOperation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %14) #11
  br i1 %10, label %15, label %16

15:                                               ; preds = %13
  call void @_ZN2cc15FilterOperationC2ERKS0_(%"class.cc::FilterOperation"* nonnull %5, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %1)
  br label %19

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  call fastcc void @_ZN2ccL16CreateNoOpFilterENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperation"* nonnull sret %5, i32 %18)
  br label %19

19:                                               ; preds = %16, %15
  %20 = bitcast %"class.cc::FilterOperation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %20) #11
  br i1 %11, label %21, label %22

21:                                               ; preds = %19
  call void @_ZN2cc15FilterOperationC2ERKS0_(%"class.cc::FilterOperation"* nonnull %6, %"class.cc::FilterOperation"* nonnull dereferenceable(152) %2)
  br label %25

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  call fastcc void @_ZN2ccL16CreateNoOpFilterENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperation"* nonnull sret %6, i32 %24)
  br label %25

25:                                               ; preds = %22, %21
  %26 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %175

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 %27, i32* %32, align 8
  %33 = icmp eq i32 %27, 12
  br i1 %33, label %34, label %84

34:                                               ; preds = %31
  %35 = fcmp ogt double %3, 5.000000e-01
  br i1 %35, label %36, label %60

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 5, i32 0
  %38 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %37, align 8
  %39 = icmp eq %"class.cc::PaintFilter"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %36, %40
  %44 = ptrtoint %"class.cc::PaintFilter"* %38 to i64
  %45 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %45, i64 0, i32 0
  %47 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %46, align 8
  %48 = bitcast %class.sk_sp* %45 to i64*
  store i64 %44, i64* %48, align 8
  %49 = icmp eq %"class.cc::PaintFilter"* %47, null
  br i1 %49, label %175, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %175

54:                                               ; preds = %50
  %55 = bitcast %"class.cc::PaintFilter"* %47 to %class.SkRefCntBase*
  %56 = bitcast %"class.cc::PaintFilter"* %47 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #11
  br label %175

60:                                               ; preds = %34
  %61 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 5, i32 0
  %62 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %61, align 8
  %63 = icmp eq %"class.cc::PaintFilter"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %60, %64
  %68 = ptrtoint %"class.cc::PaintFilter"* %62 to i64
  %69 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5
  %70 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %69, i64 0, i32 0
  %71 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %70, align 8
  %72 = bitcast %class.sk_sp* %69 to i64*
  store i64 %68, i64* %72, align 8
  %73 = icmp eq %"class.cc::PaintFilter"* %71, null
  br i1 %73, label %175, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %175

78:                                               ; preds = %74
  %79 = bitcast %"class.cc::PaintFilter"* %71 to %class.SkRefCntBase*
  %80 = bitcast %"class.cc::PaintFilter"* %71 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #11
  br label %175

84:                                               ; preds = %31
  %85 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 1
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %3, float %86, float %88) #11
  %90 = load i32, i32* %28, align 8
  switch i32 %90, label %103 [
    i32 0, label %91
    i32 1, label %91
    i32 4, label %91
    i32 7, label %91
    i32 14, label %91
    i32 2, label %96
    i32 5, label %96
    i32 6, label %96
    i32 8, label %96
    i32 9, label %96
    i32 11, label %99
  ]

91:                                               ; preds = %84, %84, %84, %84, %84
  %92 = fcmp olt float %89, 0.000000e+00
  %93 = select i1 %92, float 0.000000e+00, float %89
  %94 = fcmp ogt float %93, 1.000000e+00
  %95 = select i1 %94, float 1.000000e+00, float %93
  br label %103

96:                                               ; preds = %84, %84, %84, %84, %84
  %97 = fcmp olt float %89, 0.000000e+00
  %98 = select i1 %97, float 0.000000e+00, float %89
  br label %103

99:                                               ; preds = %84
  %100 = fcmp olt float %89, 1.000000e+00
  %101 = select i1 %100, float 1.000000e+00, float %89
  %102 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %101, float* %102, align 4
  br label %139

103:                                              ; preds = %84, %91, %96
  %104 = phi float [ %98, %96 ], [ %95, %91 ], [ %89, %84 ]
  %105 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float %104, float* %105, align 4
  switch i32 %90, label %175 [
    i32 8, label %106
    i32 9, label %110
    i32 11, label %139
    i32 14, label %148
  ]

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 10
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 10
  store i32 %108, i32* %109, align 8
  br label %175

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 3
  %112 = bitcast %"class.gfx::Point"* %111 to i64*
  %113 = load i64, i64* %112, align 4
  %114 = trunc i64 %113 to i32
  %115 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 3
  %116 = bitcast %"class.gfx::Point"* %115 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = trunc i64 %117 to i32
  %119 = call i32 @_ZN3gfx5Tween21LinearIntValueBetweenEdii(double %3, i32 %114, i32 %118) #11
  %120 = load i64, i64* %112, align 4
  %121 = lshr i64 %120, 32
  %122 = trunc i64 %121 to i32
  %123 = load i64, i64* %116, align 4
  %124 = lshr i64 %123, 32
  %125 = trunc i64 %124 to i32
  %126 = call i32 @_ZN3gfx5Tween21LinearIntValueBetweenEdii(double %3, i32 %122, i32 %125) #11
  %127 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3
  %128 = bitcast %"class.gfx::Point"* %127 to i64*
  %129 = zext i32 %126 to i64
  %130 = shl nuw i64 %129, 32
  %131 = zext i32 %119 to i64
  %132 = or i64 %130, %131
  store i64 %132, i64* %128, align 4
  %133 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 4
  %136 = load i32, i32* %135, align 4
  %137 = call i32 @_ZN3gfx5Tween17ColorValueBetweenEdjj(double %3, i32 %134, i32 %136) #11
  %138 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 4
  store i32 %137, i32* %138, align 4
  br label %175

139:                                              ; preds = %103, %99
  %140 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 7
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 7
  %143 = load i32, i32* %142, align 8
  %144 = call i32 @_ZN3gfx5Tween21LinearIntValueBetweenEdii(double %3, i32 %141, i32 %143) #11
  %145 = icmp sgt i32 %144, 0
  %146 = select i1 %145, i32 %144, i32 0
  %147 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 %146, i32* %147, align 8
  br label %175

148:                                              ; preds = %103
  %149 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 2
  %150 = load float, float* %149, align 8
  %151 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 2
  %152 = load float, float* %151, align 8
  %153 = call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %3, float %150, float %152) #11
  %154 = load i32, i32* %28, align 8
  switch i32 %154, label %166 [
    i32 0, label %155
    i32 1, label %155
    i32 4, label %155
    i32 7, label %155
    i32 14, label %155
    i32 2, label %160
    i32 5, label %160
    i32 6, label %160
    i32 8, label %160
    i32 9, label %160
    i32 11, label %163
  ]

155:                                              ; preds = %148, %148, %148, %148, %148
  %156 = fcmp olt float %153, 0.000000e+00
  %157 = select i1 %156, float 0.000000e+00, float %153
  %158 = fcmp ogt float %157, 1.000000e+00
  %159 = select i1 %158, float 1.000000e+00, float %157
  br label %166

160:                                              ; preds = %148, %148, %148, %148, %148
  %161 = fcmp olt float %153, 0.000000e+00
  %162 = select i1 %161, float 0.000000e+00, float %153
  br label %166

163:                                              ; preds = %148
  %164 = fcmp olt float %153, 1.000000e+00
  %165 = select i1 %164, float 1.000000e+00, float %153
  br label %166

166:                                              ; preds = %148, %155, %160, %163
  %167 = phi float [ %165, %163 ], [ %162, %160 ], [ %159, %155 ], [ %153, %148 ]
  %168 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  store float %167, float* %168, align 8
  %169 = icmp eq %"class.cc::FilterOperation"* %6, %0
  br i1 %169, label %175, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 9, i32 0, i32 0
  %172 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %171, align 8
  %173 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 9, i32 0, i32 1
  %174 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %173, align 8
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %8, %"class.gfx::Rect"* %172, %"class.gfx::Rect"* %174) #11
  br label %175

175:                                              ; preds = %103, %170, %166, %67, %74, %78, %43, %50, %54, %106, %139, %110, %25
  %176 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 9, i32 0, i32 0
  %177 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %176, align 8
  %178 = icmp eq %"class.gfx::Rect"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint %"class.gfx::Rect"* %177 to i64
  %181 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 9, i32 0, i32 1
  %182 = bitcast %"class.gfx::Rect"** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast %"class.gfx::Rect"* %177 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %175
  %185 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %6, i64 0, i32 5, i32 0
  %186 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %185, align 8
  %187 = icmp eq %"class.cc::PaintFilter"* %186, null
  br i1 %187, label %198, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %186, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw add i32* %189, i32 -1 acq_rel
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %198

192:                                              ; preds = %188
  %193 = bitcast %"class.cc::PaintFilter"* %186 to %class.SkRefCntBase*
  %194 = bitcast %"class.cc::PaintFilter"* %186 to void (%class.SkRefCntBase*)***
  %195 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %194, align 8
  %196 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %195, i64 2
  %197 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, align 8
  call void %197(%class.SkRefCntBase* nonnull %193) #11
  br label %198

198:                                              ; preds = %184, %188, %192
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %20) #11
  %199 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 9, i32 0, i32 0
  %200 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %199, align 8
  %201 = icmp eq %"class.gfx::Rect"* %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %198
  %203 = ptrtoint %"class.gfx::Rect"* %200 to i64
  %204 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 9, i32 0, i32 1
  %205 = bitcast %"class.gfx::Rect"** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = bitcast %"class.gfx::Rect"* %200 to i8*
  call void @_ZdlPv(i8* %206) #13
  br label %207

207:                                              ; preds = %202, %198
  %208 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %5, i64 0, i32 5, i32 0
  %209 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %208, align 8
  %210 = icmp eq %"class.cc::PaintFilter"* %209, null
  br i1 %210, label %221, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %209, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = bitcast %"class.cc::PaintFilter"* %209 to %class.SkRefCntBase*
  %217 = bitcast %"class.cc::PaintFilter"* %209 to void (%class.SkRefCntBase*)***
  %218 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %217, align 8
  %219 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %218, i64 2
  %220 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %219, align 8
  call void %220(%class.SkRefCntBase* nonnull %216) #11
  br label %221

221:                                              ; preds = %207, %211, %215
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %14) #11
  br label %222

222:                                              ; preds = %221, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ccL16CreateNoOpFilterENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperation"* noalias sret, i32) unnamed_addr #1 {
  switch i32 %1, label %113 [
    i32 0, label %3
    i32 1, label %7
    i32 2, label %13
    i32 3, label %20
    i32 4, label %26
    i32 5, label %32
    i32 6, label %39
    i32 7, label %46
    i32 8, label %53
    i32 9, label %63
    i32 10, label %69
    i32 11, label %87
    i32 13, label %94
    i32 12, label %100
    i32 14, label %106
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11, !alias.scope !5
  %6 = bitcast %"class.cc::FilterOperation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 116, i1 false)
  br label %117

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 1, i32* %8, align 8, !alias.scope !8
  %9 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11, !alias.scope !8
  %12 = bitcast float* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 112, i1 false)
  br label %117

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 2, i32* %14, align 8, !alias.scope !11
  %15 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %15, align 4, !alias.scope !11
  %16 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %18 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !11
  %19 = bitcast float* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 108, i1 false) #11, !alias.scope !11
  br label %117

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 3, i32* %21, align 8, !alias.scope !14
  %22 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %24 = bitcast %"class.std::__1::vector"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #11, !alias.scope !14
  %25 = bitcast float* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 112, i1 false)
  br label %117

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 4, i32* %27, align 8, !alias.scope !17
  %28 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %30 = bitcast %"class.std::__1::vector"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11, !alias.scope !17
  %31 = bitcast float* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 112, i1 false)
  br label %117

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 5, i32* %33, align 8, !alias.scope !20
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %34, align 4, !alias.scope !20
  %35 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %36 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %37 = bitcast %"class.std::__1::vector"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11, !alias.scope !20
  %38 = bitcast float* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 108, i1 false) #11, !alias.scope !20
  br label %117

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 6, i32* %40, align 8, !alias.scope !23
  %41 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %41, align 4, !alias.scope !23
  %42 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %44 = bitcast %"class.std::__1::vector"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #11, !alias.scope !23
  %45 = bitcast float* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 108, i1 false) #11, !alias.scope !23
  br label %117

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 7, i32* %47, align 8, !alias.scope !26
  %48 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %48, align 4, !alias.scope !26
  %49 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %51 = bitcast %"class.std::__1::vector"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11, !alias.scope !26
  %52 = bitcast float* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 108, i1 false) #11, !alias.scope !26
  br label %117

53:                                               ; preds = %2
  %54 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 8, i32* %54, align 8, !alias.scope !29
  %55 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 0, i32* %56, align 8, !alias.scope !29
  %57 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %58 = bitcast %"class.std::__1::vector"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #11, !alias.scope !29
  %59 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 10
  %60 = bitcast float* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 28, i1 false)
  store i32 3, i32* %59, align 8, !alias.scope !29
  %61 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %62 = bitcast float* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 80, i1 false) #11, !alias.scope !29
  br label %117

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 9, i32* %64, align 8, !alias.scope !32
  %65 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %67 = bitcast %"class.std::__1::vector"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #11, !alias.scope !32
  %68 = bitcast float* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 112, i1 false)
  br label %117

69:                                               ; preds = %2
  %70 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 10, i32* %70, align 8, !alias.scope !35
  %71 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %72 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  store i32 0, i32* %72, align 8, !alias.scope !35
  %73 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %74 = bitcast %"class.std::__1::vector"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #11, !alias.scope !35
  %75 = bitcast float* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 28, i1 false) #11, !alias.scope !35
  %76 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  store float 1.000000e+00, float* %76, align 8
  %77 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 1
  %78 = bitcast float* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 20, i1 false)
  %79 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 6
  store float 1.000000e+00, float* %79, align 8
  %80 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 7
  %81 = bitcast float* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 20, i1 false)
  %82 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 12
  store float 1.000000e+00, float* %82, align 8
  %83 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 13
  %84 = bitcast float* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 20, i1 false)
  %85 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 18
  store float 1.000000e+00, float* %85, align 8
  %86 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 19
  store float 0.000000e+00, float* %86, align 4
  br label %117

87:                                               ; preds = %2
  %88 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 11, i32* %88, align 8, !alias.scope !38
  %89 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %89, align 4, !alias.scope !38
  %90 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %91 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %92 = bitcast %"class.std::__1::vector"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #11, !alias.scope !38
  %93 = bitcast float* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 108, i1 false)
  br label %117

94:                                               ; preds = %2
  %95 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 13, i32* %95, align 8, !alias.scope !41
  %96 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %97 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %98 = bitcast %"class.std::__1::vector"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #11, !alias.scope !41
  %99 = bitcast float* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 112, i1 false)
  br label %117

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 12, i32* %101, align 8, !alias.scope !44
  %102 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %103 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %104 = bitcast %"class.std::__1::vector"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #11, !alias.scope !44
  %105 = bitcast float* %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 112, i1 false)
  br label %117

106:                                              ; preds = %2
  %107 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  store i32 14, i32* %107, align 8, !alias.scope !47
  %108 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %108, align 4, !alias.scope !47
  %109 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %110 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %111 = bitcast %"class.std::__1::vector"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #11, !alias.scope !47
  %112 = bitcast float* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 108, i1 false)
  br label %117

113:                                              ; preds = %2
  %114 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9
  %115 = bitcast %"class.std::__1::vector"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #11, !alias.scope !50
  %116 = bitcast %"class.cc::FilterOperation"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 116, i1 false) #11, !alias.scope !50
  br label %117

117:                                              ; preds = %113, %106, %100, %94, %87, %69, %63, %53, %46, %39, %32, %26, %20, %13, %7, %3
  ret void
}

declare float @_ZN3gfx5Tween17FloatValueBetweenEdff(double, float, float) local_unnamed_addr #3

declare i32 @_ZN3gfx5Tween21LinearIntValueBetweenEdii(double, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN3gfx5Tween17ColorValueBetweenEdjj(double, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15FilterOperation11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::FilterOperation"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %5) #11
  %6 = load i32, i32* %4, align 8
  switch i32 %6, label %140 [
    i32 0, label %7
    i32 1, label %7
    i32 2, label %7
    i32 3, label %7
    i32 4, label %7
    i32 5, label %7
    i32 6, label %7
    i32 7, label %7
    i32 8, label %7
    i32 13, label %7
    i32 9, label %11
    i32 10, label %18
    i32 11, label %79
    i32 12, label %86
    i32 14, label %112
  ]

7:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %8 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), double %10) #11
  br label %140

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), double %14) #11
  %15 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5PointEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %"class.gfx::Point"* dereferenceable(8) %15, %"class.base::trace_event::TracedValue"* %1) #11
  %16 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 %17) #11
  br label %140

18:                                               ; preds = %2
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #11
  %19 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 0
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %21) #11
  %22 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 1
  %23 = load float, float* %22, align 4
  %24 = fpext float %23 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %24) #11
  %25 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 2
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %27) #11
  %28 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 3
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %30) #11
  %31 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 4
  %32 = load float, float* %31, align 4
  %33 = fpext float %32 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %33) #11
  %34 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 5
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %36) #11
  %37 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 6
  %38 = load float, float* %37, align 4
  %39 = fpext float %38 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %39) #11
  %40 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 7
  %41 = load float, float* %40, align 4
  %42 = fpext float %41 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %42) #11
  %43 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 8
  %44 = load float, float* %43, align 4
  %45 = fpext float %44 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %45) #11
  %46 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 9
  %47 = load float, float* %46, align 4
  %48 = fpext float %47 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %48) #11
  %49 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 10
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %51) #11
  %52 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 11
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %54) #11
  %55 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 12
  %56 = load float, float* %55, align 4
  %57 = fpext float %56 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %57) #11
  %58 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 13
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %60) #11
  %61 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 14
  %62 = load float, float* %61, align 4
  %63 = fpext float %62 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %63) #11
  %64 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 15
  %65 = load float, float* %64, align 4
  %66 = fpext float %65 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %66) #11
  %67 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 16
  %68 = load float, float* %67, align 4
  %69 = fpext float %68 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %69) #11
  %70 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 17
  %71 = load float, float* %70, align 4
  %72 = fpext float %71 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %72) #11
  %73 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 18
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %75) #11
  %76 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 6, i64 19
  %77 = load float, float* %76, align 4
  %78 = fpext float %77 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %78) #11
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #11
  br label %140

79:                                               ; preds = %2
  %80 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %81 = load float, float* %80, align 4
  %82 = fpext float %81 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), double %82) #11
  %83 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 7
  %84 = load i32, i32* %83, align 8
  %85 = sitofp i32 %84 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), double %85) #11
  br label %140

86:                                               ; preds = %2
  %87 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %88 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %87, align 8
  %89 = icmp eq %"class.cc::PaintFilter"* %88, null
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i1 zeroext %89) #11
  %90 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %87, align 8
  %91 = icmp eq %"class.cc::PaintFilter"* %90, null
  br i1 %91, label %140, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %90, i64 0, i32 2
  %95 = load i32, i32* %94, align 8
  call void @_ZN2cc11PaintFilter12TypeToStringENS0_4TypeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %95) #11
  %96 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = select i1 %99, i8* %101, i8* %93
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = zext i8 %98 to i64
  %106 = select i1 %99, i64 %104, i64 %105
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8* %102, i64 %106) #11
  %107 = load i8, i8* %97, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %92
  %110 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %92, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  br label %140

112:                                              ; preds = %2
  %113 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %114 = load float, float* %113, align 4
  %115 = fpext float %114 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), double %115) #11
  %116 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 2
  %117 = load float, float* %116, align 8
  %118 = fpext float %117 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), double %118) #11
  %119 = tail call i8* @_Znwm(i64 32) #13
  %120 = bitcast i8* %119 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %120) #11
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #11
  %121 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 0
  %122 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %121, align 8
  %123 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 9, i32 0, i32 1
  %124 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %123, align 8
  %125 = icmp eq %"class.gfx::Rect"* %122, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %128, %112
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #11
  %127 = bitcast i8* %119 to %"class.base::Value"*
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %127) #11
  tail call void @_ZdlPv(i8* nonnull %119) #13
  br label %140

128:                                              ; preds = %112, %128
  %129 = phi %"class.gfx::Rect"* [ %138, %128 ], [ %122, %112 ]
  %130 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %129, i64 0, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  tail call void @_ZN4base11trace_event11TracedValue13AppendIntegerEi(%"class.base::trace_event::TracedValue"* %1, i32 %131) #11
  %132 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %129, i64 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  tail call void @_ZN4base11trace_event11TracedValue13AppendIntegerEi(%"class.base::trace_event::TracedValue"* %1, i32 %133) #11
  %134 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %129, i64 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  tail call void @_ZN4base11trace_event11TracedValue13AppendIntegerEi(%"class.base::trace_event::TracedValue"* %1, i32 %135) #11
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %129, i64 0, i32 1, i32 1
  %137 = load i32, i32* %136, align 4
  tail call void @_ZN4base11trace_event11TracedValue13AppendIntegerEi(%"class.base::trace_event::TracedValue"* %1, i32 %137) #11
  %138 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %129, i64 1
  %139 = icmp eq %"class.gfx::Rect"* %138, %124
  br i1 %139, label %126, label %128

140:                                              ; preds = %86, %111, %2, %126, %79, %18, %11, %7
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #3

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5PointEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Point"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"*, double) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN2cc11PaintFilter12TypeToStringENS0_4TypeE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue13AppendIntegerEi(%"class.base::trace_event::TracedValue"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc15FilterOperation7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = tail call fastcc { i64, i64 } @_ZN2cc12_GLOBAL__N_115MapRectInternalERKNS_15FilterOperationERKN3gfx4RectERK8SkMatrixN13SkImageFilter12MapDirectionE(%"class.cc::FilterOperation"* dereferenceable(152) %0, %"class.gfx::Rect"* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 0)
  ret { i64, i64 } %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN2cc12_GLOBAL__N_115MapRectInternalERKNS_15FilterOperationERKN3gfx4RectERK8SkMatrixN13SkImageFilter12MapDirectionE(%"class.cc::FilterOperation"* nocapture readonly dereferenceable(152), %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) unnamed_addr #5 {
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca %struct.SkPoint, align 4
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca %"class.gfx::RectF", align 4
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %struct.SkPoint*
  %12 = alloca %"class.gfx::Vector2dF", align 4
  %13 = alloca %"class.gfx::RectF", align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %struct.SkIRect*
  %18 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %184 [
    i32 8, label %20
    i32 9, label %63
    i32 12, label %151
  ]

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %24 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 0, i32 1
  %27 = insertelement <2 x float> undef, float %22, i32 0
  %28 = shufflevector <2 x float> %27, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %28, <2 x float>* %6, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %23, %struct.SkPoint* nonnull %23, i32 1) #11
  %29 = load float, float* %25, align 8
  %30 = fmul float %29, 3.000000e+00
  %31 = load float, float* %26, align 4
  %32 = fmul float %31, 3.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %33 = icmp eq i32 %3, 0
  %34 = select i1 %33, float -1.000000e+00, float 1.000000e+00
  %35 = call float @llvm.fabs.f32(float %30) #11
  %36 = fmul float %34, %35
  %37 = call float @llvm.fabs.f32(float %32) #11
  %38 = fmul float %34, %37
  %39 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to float
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %53 = load i32, i32* %52, align 4
  store float %46, float* %40, align 4
  store float %49, float* %41, align 4
  %54 = icmp sgt i32 %51, 0
  %55 = select i1 %54, i32 %51, i32 0
  %56 = sitofp i32 %55 to float
  store float %56, float* %42, align 4
  %57 = icmp sgt i32 %53, 0
  %58 = select i1 %57, i32 %53, i32 0
  %59 = sitofp i32 %58 to float
  store float %59, float* %43, align 4
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %8, float %36, float %38, float %36, float %38) #11
  %60 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %8) #11
  %61 = extractvalue { i64, i64 } %60, 0
  %62 = extractvalue { i64, i64 } %60, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #11
  br label %190

63:                                               ; preds = %4
  %64 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 1
  %65 = load float, float* %64, align 4
  %66 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %67 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %66, i64 0, i32 1
  %70 = insertelement <2 x float> undef, float %65, i32 0
  %71 = shufflevector <2 x float> %70, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %71, <2 x float>* %5, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %66, %struct.SkPoint* nonnull %66, i32 1) #11
  %72 = load float, float* %68, align 8
  %73 = fmul float %72, 3.000000e+00
  %74 = load float, float* %69, align 4
  %75 = fmul float %74, 3.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %76 = call float @llvm.fabs.f32(float %73) #11
  %77 = call float @llvm.fabs.f32(float %75) #11
  %78 = bitcast %"class.gfx::RectF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 1
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = sitofp i32 %84 to float
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sitofp i32 %87 to float
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %92 = load i32, i32* %91, align 4
  store float %85, float* %79, align 4
  store float %88, float* %80, align 4
  %93 = icmp sgt i32 %90, 0
  %94 = select i1 %93, i32 %90, i32 0
  %95 = sitofp i32 %94 to float
  store float %95, float* %81, align 4
  %96 = icmp sgt i32 %92, 0
  %97 = select i1 %96, i32 %92, i32 0
  %98 = sitofp i32 %97 to float
  store float %98, float* %82, align 4
  %99 = fsub float -0.000000e+00, %76
  %100 = fsub float -0.000000e+00, %77
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %9, float %99, float %100, float %99, float %100) #11
  %101 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 3
  %102 = bitcast %"class.gfx::Point"* %101 to i64*
  %103 = load i64, i64* %102, align 4
  %104 = trunc i64 %103 to i32
  %105 = lshr i64 %103, 32
  %106 = trunc i64 %105 to i32
  %107 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  %108 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %108, align 8
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %109, align 4
  %110 = sitofp i32 %104 to float
  %111 = sitofp i32 %106 to float
  %112 = bitcast %struct.SkPoint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  %113 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  store float %110, float* %113, align 4
  store float %111, float* %114, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %7, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %115 = icmp eq i32 %3, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %63
  %117 = bitcast <2 x float>* %10 to <2 x i32>*
  %118 = load <2 x i32>, <2 x i32>* %117, align 8
  br label %123

119:                                              ; preds = %63
  %120 = load <2 x float>, <2 x float>* %10, align 8
  %121 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %120
  store <2 x float> %121, <2 x float>* %10, align 8
  %122 = bitcast <2 x float> %121 to <2 x i32>
  br label %123

123:                                              ; preds = %116, %119
  %124 = phi <2 x i32> [ %118, %116 ], [ %122, %119 ]
  %125 = bitcast %"class.gfx::Vector2dF"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #11
  %126 = bitcast %"class.gfx::Vector2dF"* %12 to i32*
  %127 = extractelement <2 x i32> %124, i32 0
  store i32 %127, i32* %126, align 4
  %128 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 1
  %129 = bitcast float* %128 to i32*
  %130 = extractelement <2 x i32> %124, i32 1
  store i32 %130, i32* %129, align 4
  call void @_ZN3gfx5RectFpLERKNS_9Vector2dFE(%"class.gfx::RectF"* nonnull %9, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #11
  %131 = bitcast %"class.gfx::RectF"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #11
  %132 = load i32, i32* %83, align 4
  %133 = sitofp i32 %132 to float
  %134 = load i32, i32* %86, align 4
  %135 = sitofp i32 %134 to float
  %136 = load i32, i32* %89, align 4
  %137 = load i32, i32* %91, align 4
  %138 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 0
  store float %133, float* %138, align 4
  %139 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 1
  store float %135, float* %139, align 4
  %140 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 0
  %141 = icmp sgt i32 %136, 0
  %142 = select i1 %141, i32 %136, i32 0
  %143 = sitofp i32 %142 to float
  store float %143, float* %140, align 4
  %144 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 1
  %145 = icmp sgt i32 %137, 0
  %146 = select i1 %145, i32 %137, i32 0
  %147 = sitofp i32 %146 to float
  store float %147, float* %144, align 4
  call void @_ZN3gfx5RectF5UnionERKS0_(%"class.gfx::RectF"* nonnull %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #11
  %148 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %9) #11
  %149 = extractvalue { i64, i64 } %148, 0
  %150 = extractvalue { i64, i64 } %148, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #11
  br label %190

151:                                              ; preds = %4
  %152 = getelementptr inbounds %"class.cc::FilterOperation", %"class.cc::FilterOperation"* %0, i64 0, i32 5, i32 0
  %153 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %152, align 8
  %154 = icmp eq %"class.cc::PaintFilter"* %153, null
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = bitcast %"class.gfx::Rect"* %1 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %159 = bitcast %"class.gfx::Size"* %158 to i64*
  %160 = load i64, i64* %159, align 4
  br label %190

161:                                              ; preds = %151
  %162 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #11
  %163 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #11
  %164 = tail call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %1) #11
  %165 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %166 = extractvalue { i64, i64 } %164, 0
  store i64 %166, i64* %165, align 8
  %167 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %168 = extractvalue { i64, i64 } %164, 1
  store i64 %168, i64* %167, align 8
  %169 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %153, i64 0, i32 1, i32 0
  %170 = load %class.SkImageFilter*, %class.SkImageFilter** %169, align 8
  %171 = icmp eq %class.SkImageFilter* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %161
  %173 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* nonnull %170, %struct.SkIRect* nonnull dereferenceable(16) %17, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* null) #11
  %174 = extractvalue { i64, i64 } %173, 0
  %175 = extractvalue { i64, i64 } %173, 1
  br label %176

176:                                              ; preds = %161, %172
  %177 = phi i64 [ %174, %172 ], [ 0, %161 ]
  %178 = phi i64 [ %175, %172 ], [ 0, %161 ]
  %179 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %177, i64* %179, align 8
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  store i64 %178, i64* %180, align 8
  %181 = call { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* nonnull dereferenceable(16) %15) #11
  %182 = extractvalue { i64, i64 } %181, 0
  %183 = extractvalue { i64, i64 } %181, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #11
  br label %190

184:                                              ; preds = %4
  %185 = bitcast %"class.gfx::Rect"* %1 to i64*
  %186 = load i64, i64* %185, align 4
  %187 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %188 = bitcast %"class.gfx::Size"* %187 to i64*
  %189 = load i64, i64* %188, align 4
  br label %190

190:                                              ; preds = %184, %176, %155, %123, %20
  %191 = phi i64 [ %186, %184 ], [ %182, %176 ], [ %157, %155 ], [ %149, %123 ], [ %61, %20 ]
  %192 = phi i64 [ %189, %184 ], [ %183, %176 ], [ %160, %155 ], [ %150, %123 ], [ %62, %20 ]
  %193 = insertvalue { i64, i64 } undef, i64 %191, 0
  %194 = insertvalue { i64, i64 } %193, i64 %192, 1
  ret { i64, i64 } %194
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc15FilterOperation14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperation"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = tail call fastcc { i64, i64 } @_ZN2cc12_GLOBAL__N_115MapRectInternalERKNS_15FilterOperationERKN3gfx4RectERK8SkMatrixN13SkImageFilter12MapDirectionE(%"class.cc::FilterOperation"* dereferenceable(152) %0, %"class.gfx::Rect"* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1)
  ret { i64, i64 } %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Rect"* %2 to i64
  %5 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Rect"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Rect"* %24, %"class.gfx::Rect"* %2
  %26 = ptrtoint %"class.gfx::Rect"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Rect"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Rect"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 %28
  store %"class.gfx::Rect"* %48, %"class.gfx::Rect"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Rect"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %72
  store %"class.gfx::Rect"* %79, %"class.gfx::Rect"** %8, align 8
  %80 = bitcast %"class.gfx::Rect"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Rect"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3gfx5RectFpLERKNS_9Vector2dFE(%"class.gfx::RectF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3gfx5RectF5UnionERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2cc15FilterOperation17CreateEmptyFilterEv: argument 0"}
!4 = distinct !{!4, !"_ZN2cc15FilterOperation17CreateEmptyFilterEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2cc15FilterOperation21CreateGrayscaleFilterEf: argument 0"}
!7 = distinct !{!7, !"_ZN2cc15FilterOperation21CreateGrayscaleFilterEf"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2cc15FilterOperation17CreateSepiaFilterEf: argument 0"}
!10 = distinct !{!10, !"_ZN2cc15FilterOperation17CreateSepiaFilterEf"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2cc15FilterOperation20CreateSaturateFilterEf: argument 0"}
!13 = distinct !{!13, !"_ZN2cc15FilterOperation20CreateSaturateFilterEf"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN2cc15FilterOperation21CreateHueRotateFilterEf: argument 0"}
!16 = distinct !{!16, !"_ZN2cc15FilterOperation21CreateHueRotateFilterEf"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN2cc15FilterOperation18CreateInvertFilterEf: argument 0"}
!19 = distinct !{!19, !"_ZN2cc15FilterOperation18CreateInvertFilterEf"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2cc15FilterOperation22CreateBrightnessFilterEf: argument 0"}
!22 = distinct !{!22, !"_ZN2cc15FilterOperation22CreateBrightnessFilterEf"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN2cc15FilterOperation20CreateContrastFilterEf: argument 0"}
!25 = distinct !{!25, !"_ZN2cc15FilterOperation20CreateContrastFilterEf"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2cc15FilterOperation19CreateOpacityFilterEf: argument 0"}
!28 = distinct !{!28, !"_ZN2cc15FilterOperation19CreateOpacityFilterEf"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN2cc15FilterOperation16CreateBlurFilterEf10SkTileMode: argument 0"}
!31 = distinct !{!31, !"_ZN2cc15FilterOperation16CreateBlurFilterEf10SkTileMode"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN2cc15FilterOperation22CreateDropShadowFilterERKN3gfx5PointEfj: argument 0"}
!34 = distinct !{!34, !"_ZN2cc15FilterOperation22CreateDropShadowFilterERKN3gfx5PointEfj"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN2cc15FilterOperation23CreateColorMatrixFilterERA20_Kf: argument 0"}
!37 = distinct !{!37, !"_ZN2cc15FilterOperation23CreateColorMatrixFilterERA20_Kf"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN2cc15FilterOperation16CreateZoomFilterEfi: argument 0"}
!40 = distinct !{!40, !"_ZN2cc15FilterOperation16CreateZoomFilterEfi"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2cc15FilterOperation32CreateSaturatingBrightnessFilterEf: argument 0"}
!43 = distinct !{!43, !"_ZN2cc15FilterOperation32CreateSaturatingBrightnessFilterEf"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2cc15FilterOperation21CreateReferenceFilterE5sk_spINS_11PaintFilterEE: argument 0"}
!46 = distinct !{!46, !"_ZN2cc15FilterOperation21CreateReferenceFilterE5sk_spINS_11PaintFilterEE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN2cc15FilterOperation26CreateAlphaThresholdFilterERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEff: argument 0"}
!49 = distinct !{!49, !"_ZN2cc15FilterOperation26CreateAlphaThresholdFilterERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEff"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN2cc15FilterOperation17CreateEmptyFilterEv: argument 0"}
!52 = distinct !{!52, !"_ZN2cc15FilterOperation17CreateEmptyFilterEv"}
