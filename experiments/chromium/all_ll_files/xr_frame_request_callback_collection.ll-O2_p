; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_frame_request_callback_collection.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_frame_request_callback_collection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.127", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { float }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.130", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.461" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.359" }
%"struct.std::__1::atomic.359" = type { %"struct.std::__1::__atomic_base.360" }
%"struct.std::__1::__atomic_base.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__cxx_atomic_impl.362" }
%"struct.std::__1::__cxx_atomic_impl.362" = type { %"struct.std::__1::__cxx_atomic_base_impl.363" }
%"struct.std::__1::__cxx_atomic_base_impl.363" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::XRFrameRequestCallbackCollection" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap", %"class.WTF::HashMap.192", %"class.WTF::Vector.203", %"class.blink::HeapHashMap", %"class.WTF::HashMap.192", i32, %"class.blink::Member.208" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { i32*, i32, i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::V8XRFrameRequestCallback"* }
%"class.blink::V8XRFrameRequestCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.188", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.10" }
%"class.blink::HeapHashMap.10" = type { %"class.WTF::HashMap.13" }
%"class.WTF::HashMap.13" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair.16"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.16" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.190" }
%"class.blink::Persistent.190" = type { %"class.blink::PersistentBase.191" }
%"class.blink::PersistentBase.191" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::HashMap.192" = type { %"class.WTF::HashTable.193" }
%"class.WTF::HashTable.193" = type <{ %"struct.WTF::KeyValuePair.196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.196" = type { i32, %"class.std::__1::unique_ptr.197" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::probe::AsyncTaskId"* }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.285", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.294", %"class.blink::Member.296", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.305", %"class.blink::Member.446", %"class.blink::Member.448", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.210" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.210" = type { %"class.WTF::HashMap.213" }
%"class.WTF::HashMap.213" = type { %"class.WTF::HashTable.214" }
%"class.WTF::HashTable.214" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.222" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"class.blink::WeakMember.221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.221" = type opaque
%"class.blink::Supplementable.222" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.223" }
%"class.blink::HeapHashMap.223" = type { %"class.WTF::HashMap.226" }
%"class.WTF::HashMap.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { i8*, %"class.blink::Member.1923" }
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1925" }
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.230, %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275", %"class.blink::Member.208", i32, [4 x i8], %"class.WTF::HashSet.281", i32, i32 }
%class.scoped_refptr.230 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.231", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.239", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.244 }
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.233 }
%class.scoped_refptr.233 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.234" }
%"struct.std::__1::atomic.234" = type { %"struct.std::__1::__atomic_base.235" }
%"struct.std::__1::__atomic_base.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__cxx_atomic_impl.237" }
%"struct.std::__1::__cxx_atomic_impl.237" = type { %"struct.std::__1::__cxx_atomic_base_impl.238" }
%"struct.std::__1::__cxx_atomic_base_impl.238" = type { i32 }
%"class.absl::optional.239" = type { %"class.absl::optional_internal::optional_data.240" }
%"class.absl::optional_internal::optional_data.240" = type { %"class.absl::optional_internal::optional_data_base.241" }
%"class.absl::optional_internal::optional_data_base.241" = type { %"class.absl::optional_internal::optional_data_dtor_base.242" }
%"class.absl::optional_internal::optional_data_dtor_base.242" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.244 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.262", %"class.std::__1::map.271"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.239" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.250 }
%union.anon.250 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.262" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.271" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.281" = type { %"class.WTF::HashTable.282" }
%"class.WTF::HashTable.282" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.298", i32, i32 }
%"class.blink::HeapHashMap.298" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.308" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.311" }
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { %"class.mojo::StructPtr.314"*, i32, i32 }
%"class.mojo::StructPtr.314" = type { %"class.std::__1::unique_ptr.315" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.318", %"class.WTF::HashMap.325", %"class.WTF::HashMap.330", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.335", i32, %"class.mojo::StructPtr.340", %"class.WTF::Vector.335" }
%"class.mojo::StructPtr.318" = type { %"class.std::__1::unique_ptr.319" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.325" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"struct.WTF::KeyValuePair.329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.329" = type opaque
%"class.WTF::HashMap.330" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.340" = type { %"class.std::__1::unique_ptr.341" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.335", i8, i8, [6 x i8] }>
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.437" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.355", i32 }>
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.364", %"class.absl::optional.369", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.390", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.412", %"class.std::__1::map.423", i64, %"class.base::OnceCallback.383", %"class.base::OnceCallback.432", i8, %class.scoped_refptr.374, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.433" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.359" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.364" = type { %"class.absl::optional_internal::optional_data.365" }
%"class.absl::optional_internal::optional_data.365" = type { %"class.absl::optional_internal::optional_data_base.366" }
%"class.absl::optional_internal::optional_data_base.366" = type { %"class.absl::optional_internal::optional_data_dtor_base.367" }
%"class.absl::optional_internal::optional_data_dtor_base.367" = type { i8, %union.anon.368 }
%union.anon.368 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.383" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.374, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.377", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.377" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.378" }
%"struct.std::__1::atomic.378" = type { %"struct.std::__1::__atomic_base.379" }
%"struct.std::__1::__atomic_base.379" = type { %"struct.std::__1::__atomic_base.380" }
%"struct.std::__1::__atomic_base.380" = type { %"struct.std::__1::__cxx_atomic_impl.381" }
%"struct.std::__1::__cxx_atomic_impl.381" = type { %"struct.std::__1::__cxx_atomic_base_impl.382" }
%"struct.std::__1::__cxx_atomic_base_impl.382" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.388 }
%class.scoped_refptr.388 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.460", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.374, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.234", [4 x i8] }>
%"class.base::RefCountedThreadSafe.460" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.389 }
%class.scoped_refptr.389 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.393", %class.scoped_refptr.394 }
%"class.base::RepeatingCallback.393" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.394 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.395", [4 x i8] }>
%"class.base::RefCountedThreadSafe.395" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.405", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.411" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.411" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.412" = type { %"class.std::__1::__tree.413" }
%"class.std::__1::__tree.413" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.423" = type { %"class.std::__1::__tree.424" }
%"class.std::__1::__tree.424" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::OnceCallback.383" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.432" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.374 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.375" }>
%"class.base::RefCountedThreadSafe.375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.383" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.433" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.296", i8, [7 x i8], %"class.WTF::Vector.311", %"class.blink::HeapVector.452", i8, [7 x i8], %"class.WTF::HashSet.281", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.452" = type { %"class.WTF::Vector.455" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.blink::Member.458"*, i32, i32 }
%"class.blink::Member.458" = type opaque
%"class.blink::XRSession" = type <{ %"class.blink::EventTargetWithInlineData", %"class.device::mojom::blink::XRSessionClient", %"class.device::mojom::blink::XRInputSourceButtonListener", %"class.blink::ActiveScriptWrappable", %"class.blink::HeapVector.488", i8, [7 x i8], %"class.WTF::Vector.335", %"class.blink::HeapVector.496", %"class.blink::Member.517", i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::HeapVector.523", %"class.blink::Member.502", i8, i8, [6 x i8], %"class.WTF::HashSet.531", %"class.std::__1::unique_ptr.535", i8, [7 x i8], %"class.blink::HeapHashMap.639", %"class.blink::HeapHashSet.646", %"class.blink::HeapHashMap.652", %"class.blink::HeapHashMap.659", %"class.blink::HeapHashMap.666", %"class.WTF::HashSet.673", %"class.WTF::HashSet.673", %"class.blink::Member.677", %"class.blink::Member.679", %"class.absl::optional.681", [4 x i8], %"class.blink::HeapVector.686", %"class.WTF::Vector.694", %"class.blink::Member.707", %"class.blink::Member.716", %"class.blink::Member.718", %"class.blink::Member.720", %"class.blink::Member.722", %"class.blink::Member.751", i8, [7 x i8], %"class.blink::HeapHashSet.646", %"class.blink::HeapVector.753", i32, [4 x i8], %"class.mojo::StructPtr.761", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver", %"class.WTF::Vector.782", %"class.blink::Member.788", %"class.std::__1::unique_ptr.790", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, [3 x i8], float, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.796", i8, i8, i16, i8, [3 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.481" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.469" }
%"class.blink::HeapVector.469" = type { %"class.WTF::Vector.472" }
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474", [32 x i8] }
%"class.WTF::VectorBufferBase.474" = type { %"struct.std::__1::pair.475"*, i32, i32 }
%"struct.std::__1::pair.475" = type { %"class.WTF::AtomicString", %"class.blink::Member.476" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::HeapVector.478"* }
%"class.blink::HeapVector.478" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.WTF::Vector.484"* }
%"class.WTF::Vector.484" = type opaque
%"class.device::mojom::blink::XRSessionClient" = type { i32 (...)** }
%"class.device::mojom::blink::XRInputSourceButtonListener" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapVector.488" = type { %"class.WTF::Vector.491" }
%"class.WTF::Vector.491" = type { %"class.WTF::VectorBuffer.492" }
%"class.WTF::VectorBuffer.492" = type { %"class.WTF::VectorBufferBase.493" }
%"class.WTF::VectorBufferBase.493" = type { %"class.blink::Member.494"*, i32, i32 }
%"class.blink::Member.494" = type opaque
%"class.blink::HeapVector.496" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::Member.502"*, i32, i32 }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::XRSystem"* }
%"class.blink::XRSystem" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::XRRenderState"* }
%"class.blink::XRRenderState" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::XRLightProbe"* }
%"class.blink::XRLightProbe" = type opaque
%"class.blink::HeapVector.523" = type { %"class.WTF::Vector.526" }
%"class.WTF::Vector.526" = type { %"class.WTF::VectorBuffer.527" }
%"class.WTF::VectorBuffer.527" = type { %"class.WTF::VectorBufferBase.528" }
%"class.WTF::VectorBufferBase.528" = type { %"class.blink::Member.529"*, i32, i32 }
%"class.blink::Member.529" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.4", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.509", %"class.blink::SelfKeepAlive.513" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.506" }
%"class.blink::WeakMember.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.508 }
%class.scoped_refptr.508 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.4", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.509", %class.scoped_refptr.512 }
%class.scoped_refptr.512 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.509" = type { %"class.v8::TracedReference.510" }
%"class.v8::TracedReference.510" = type { %"class.v8::BasicTracedReference.511" }
%"class.v8::BasicTracedReference.511" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.513" = type { %"class.blink::Persistent.514" }
%"class.blink::Persistent.514" = type { %"class.blink::PersistentBase.515" }
%"class.blink::PersistentBase.515" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.blink::XRSession::MetricsReporter"* }
%"struct.blink::XRSession::MetricsReporter" = type { %"class.mojo::Remote", %"class.WTF::HashSet.531" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.630" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.538, %"class.std::__1::unique_ptr.355", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.374, i32 }>
%class.scoped_refptr.538 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.374, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.596", %"class.absl::optional.601", %"class.absl::optional.555", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.621", i8, [7 x i8], %class.scoped_refptr.374, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.395" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.383", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.374, %"class.std::__1::unique_ptr.539", %"class.absl::optional.549", %"struct.std::__1::atomic.184", i8, i8, i8, i8, i32, i32, %"class.absl::optional.555", %"class.std::__1::unique_ptr.560", i8, i64, %class.scoped_refptr.593, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.595" }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.374, i8, %"class.mojo::ScopedHandleBase.542", %class.scoped_refptr.543, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.544", i8*, %"class.base::WeakPtrFactory.545" }
%"class.mojo::ScopedHandleBase.542" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.543 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.544" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.545" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.549" = type { %"class.absl::optional_internal::optional_data.550" }
%"class.absl::optional_internal::optional_data.550" = type { %"class.absl::optional_internal::optional_data_base.551" }
%"class.absl::optional_internal::optional_data_base.551" = type { %"class.absl::optional_internal::optional_data_dtor_base.552" }
%"class.absl::optional_internal::optional_data_dtor_base.552" = type { i8, %union.anon.553 }
%union.anon.553 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.554", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.554" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.563", i8, i64, %class.scoped_refptr.564, %class.scoped_refptr.589 }
%"class.base::RepeatingCallback.563" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.564 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.565", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.567", %"class.std::__1::map.578", i8, [7 x i8] }>
%"class.base::RefCounted.565" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.566 }
%class.scoped_refptr.566 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.567" = type { %"class.std::__1::__tree.568" }
%"class.std::__1::__tree.568" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%class.scoped_refptr.589 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.593 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.594 }
%class.scoped_refptr.594 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.595" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.596" = type { %"class.absl::optional_internal::optional_data.597" }
%"class.absl::optional_internal::optional_data.597" = type { %"class.absl::optional_internal::optional_data_base.598" }
%"class.absl::optional_internal::optional_data_base.598" = type { %"class.absl::optional_internal::optional_data_dtor_base.599" }
%"class.absl::optional_internal::optional_data_dtor_base.599" = type { i8, %union.anon.600 }
%union.anon.600 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.601" = type { %"class.absl::optional_internal::optional_data.602" }
%"class.absl::optional_internal::optional_data.602" = type { %"class.absl::optional_internal::optional_data_base.603" }
%"class.absl::optional_internal::optional_data_base.603" = type { %"class.absl::optional_internal::optional_data_dtor_base.604" }
%"class.absl::optional_internal::optional_data_dtor_base.604" = type { i8, [7 x i8], %union.anon.605 }
%union.anon.605 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.555" = type { %"class.absl::optional_internal::optional_data.556" }
%"class.absl::optional_internal::optional_data.556" = type { %"class.absl::optional_internal::optional_data_base.557" }
%"class.absl::optional_internal::optional_data_base.557" = type { %"class.absl::optional_internal::optional_data_dtor_base.558" }
%"class.absl::optional_internal::optional_data_dtor_base.558" = type { i8, %union.anon.559 }
%union.anon.559 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.606 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.606 = type { %"class.std::__1::map.609" }
%"class.std::__1::map.609" = type { %"class.std::__1::__tree.610" }
%"class.std::__1::__tree.610" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.620"*, i64 }
%"class.std::__1::unique_ptr.620" = type opaque
%"class.std::__1::map.621" = type { %"class.std::__1::__tree.622" }
%"class.std::__1::__tree.622" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.device::mojom::blink::XRSessionMetricsRecorderProxy"* }
%"class.device::mojom::blink::XRSessionMetricsRecorderProxy" = type { %"class.device::mojom::blink::XRSessionMetricsRecorder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::blink::XRSessionMetricsRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap.639" = type { %"class.WTF::HashMap.642" }
%"class.WTF::HashMap.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"struct.WTF::KeyValuePair.645"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.645" = type opaque
%"class.blink::HeapHashMap.652" = type { %"class.WTF::HashMap.655" }
%"class.WTF::HashMap.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type opaque
%"class.blink::HeapHashMap.659" = type { %"class.WTF::HashMap.662" }
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.665" = type opaque
%"class.blink::HeapHashMap.666" = type { %"class.WTF::HashMap.669" }
%"class.WTF::HashMap.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ %"struct.WTF::KeyValuePair.672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.672" = type opaque
%"class.WTF::HashSet.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::XRPlaneManager"* }
%"class.blink::XRPlaneManager" = type opaque
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::XRDepthManager"* }
%"class.blink::XRDepthManager" = type opaque
%"class.absl::optional.681" = type { %"class.absl::optional_internal::optional_data.682" }
%"class.absl::optional_internal::optional_data.682" = type { %"class.absl::optional_internal::optional_data_base.683" }
%"class.absl::optional_internal::optional_data_base.683" = type { %"class.absl::optional_internal::optional_data_dtor_base.684" }
%"class.absl::optional_internal::optional_data_dtor_base.684" = type { i8, %union.anon.685 }
%union.anon.685 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::HeapVector.686" = type { %"class.WTF::Vector.689" }
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { %"class.blink::Member.692"*, i32, i32 }
%"class.blink::Member.692" = type opaque
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696" }
%"class.WTF::VectorBufferBase.696" = type { %"class.mojo::StructPtr.697"*, i32, i32 }
%"class.mojo::StructPtr.697" = type { %"class.std::__1::unique_ptr.698" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.device::mojom::blink::XRView"* }
%"class.device::mojom::blink::XRView" = type { i32, %"class.mojo::InlinedStructPtr.701", %"class.gfx::Transform", %"class.gfx::Size" }
%"class.mojo::InlinedStructPtr.701" = type { %"class.device::mojom::blink::VRFieldOfView", i32 }
%"class.device::mojom::blink::VRFieldOfView" = type { float, float, float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::XRInputSourceArray"* }
%"class.blink::XRInputSourceArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapHashMap.709" }
%"class.blink::HeapHashMap.709" = type { %"class.WTF::HashMap.712" }
%"class.WTF::HashMap.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"struct.WTF::KeyValuePair.715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.715" = type opaque
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::XRWebGLLayer"* }
%"class.blink::XRWebGLLayer" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::XRCanvasInputProvider"* }
%"class.blink::XRCanvasInputProvider" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.735" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.724", %"class.blink::Member.724" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.724", %"class.blink::Member.726", %"class.blink::Member.724", %"class.blink::Member.724", %"class.blink::Member.728" }
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.802", %"class.blink::Member.804", %"class.blink::Member.726", %"class.blink::Member.806", %"class.blink::Member.806", %"class.blink::Member.828", %"class.blink::Member.830", %"class.blink::Member.832", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.837", %"class.blink::HeapVector.839" }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.882", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.890", %"class.WTF::Vector.890", i8, i32, %"class.blink::Member.895", %"class.blink::Member.208", %"class.blink::Member.897", %"class.blink::Member.899", %"class.blink::Member.901", %"class.blink::Member.903", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.911", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.845", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.921", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.821", %"class.blink::Member.722", %"class.blink::Member.929", %"class.blink::Member.722", %"class.blink::Member.722", %"class.blink::Member.722", %"class.blink::UserActionElementSet", %"class.blink::Member.938", double, double, i64, i64, %"class.blink::HeapHashSet.940", %"class.blink::HeapHashSet.947", i16, i8, %"class.blink::Member.954", %"class.blink::Member.956", %"class.blink::Member.958", %"class.blink::Member.960", %"class.blink::TextLinkColors", %"class.blink::Member.962", i8, [7 x i8], %"class.blink::HeapHashMap.964", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.722", %"class.WTF::Vector.971", %"class.blink::Member.976", %"class.blink::Member.980", i8, %"class.blink::Member.722", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.982", %"class.blink::HeapVector.984", %"class.std::__1::unique_ptr.992", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.998", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1011", %"class.WTF::Vector.1013", i8, i8, %"class.std::__1::unique_ptr.1018", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.821", %"class.blink::HeapVector.1024", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1032", i8, i32, %"class.blink::Member.1034", %"class.blink::Member.1036", %"class.blink::Member.1038", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1040", %"class.WTF::HashMap.1042", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.1051", %"class.blink::Member.1053", %"class.blink::Member.804", %"class.blink::Member.804", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1055", i8, i32, %"class.blink::Member.1062", %"class.blink::Member.1064", i32, %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.std::__1::unique_ptr.1072", i64, %"class.std::__1::unique_ptr.1078", i32, i32, %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1090", %"class.WTF::Vector.1092", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1097", %"class.blink::Member.1104", %"class.std::__1::unique_ptr.1106", %"class.blink::Member.1112", i8, i8, %"class.WTF::String", %"class.blink::Member.1114", i8, [7 x i8], %"class.blink::HeapHashMap.1116", %"class.blink::HeapObserverSet.1123", %"class.blink::Member.1131", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1133", i32, i8, i8, %"class.blink::WeakMember.1135", %"class.blink::Member.1136" }
%"class.blink::Supplementable.882" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.883" }
%"class.blink::HeapHashMap.883" = type { %"class.WTF::HashMap.886" }
%"class.WTF::HashMap.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"struct.WTF::KeyValuePair.889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.889" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.890" = type { %"class.WTF::VectorBuffer.891" }
%"class.WTF::VectorBuffer.891" = type { %"class.WTF::VectorBufferBase.892" }
%"class.WTF::VectorBufferBase.892" = type { %"class.base::OnceCallback.383"*, i32, i32 }
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.905" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::KURL"* }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.847", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.849, %"class.WTF::Vector.850", %"class.WTF::Vector.850", %"class.blink::Member.724", %"class.blink::Member.855", %"class.blink::HeapHashSet.859", %"class.blink::Member.804", %"class.WTF::HashSet.866", %"class.WTF::TextPosition", %"class.blink::Member.870", %"class.blink::HeapVector.872", %"class.blink::Member.879" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.849 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.857" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.859" = type { %"class.WTF::HashSet.862" }
%"class.WTF::HashSet.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"class.blink::WeakMember.865"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.865" = type { %"class.blink::MemberBase.727" }
%"class.WTF::HashSet.866" = type { %"class.WTF::HashTable.867" }
%"class.WTF::HashTable.867" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.872" = type { %"class.WTF::Vector.875" }
%"class.WTF::Vector.875" = type { %"class.WTF::VectorBuffer.876" }
%"class.WTF::VectorBuffer.876" = type { %"class.WTF::VectorBufferBase.877" }
%"class.WTF::VectorBufferBase.877" = type { %"class.blink::Member.855"*, i32, i32 }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923" }
%"class.WTF::VectorBufferBase.923" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.512 }
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.804", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.724", %"class.blink::Member.724", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.931" }
%"class.blink::HeapHashMap.931" = type { %"class.WTF::HashMap.934" }
%"class.WTF::HashMap.934" = type { %"class.WTF::HashTable.935" }
%"class.WTF::HashTable.935" = type <{ %"struct.WTF::KeyValuePair.937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.937" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.940" = type { %"class.WTF::HashSet.943" }
%"class.WTF::HashSet.943" = type { %"class.WTF::HashTable.944" }
%"class.WTF::HashTable.944" = type <{ %"class.blink::WeakMember.946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.946" = type opaque
%"class.blink::HeapHashSet.947" = type { %"class.WTF::HashSet.950" }
%"class.WTF::HashSet.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"class.blink::WeakMember.953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.953" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.726", %"class.blink::HeapVector.839" }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.964" = type { %"class.WTF::HashMap.967" }
%"class.WTF::HashMap.967" = type { %"class.WTF::HashTable.968" }
%"class.WTF::HashTable.968" = type <{ %"struct.WTF::KeyValuePair.970"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.970" = type opaque
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase.973" }
%"class.WTF::VectorBufferBase.973" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.984" = type { %"class.WTF::Vector.987" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989" }
%"class.WTF::VectorBufferBase.989" = type { %"class.blink::Member.990"*, i32, i32 }
%"class.blink::Member.990" = type opaque
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.998" = type { %"class.WTF::HashSet.1001" }
%"class.WTF::HashSet.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"class.blink::WeakMember.1004"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1004" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1005", i32, [4 x i8] }>
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"struct.std::__1::pair.1008"*, i32, i32 }
%"struct.std::__1::pair.1008" = type opaque
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.821" = type { %"class.WTF::Vector.824" }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %"class.blink::Member.722"*, i32, i32 }
%"class.blink::HeapVector.1024" = type { %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.blink::Member.1030"*, i32, i32 }
%"class.blink::Member.1030" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.804" }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"struct.WTF::KeyValuePair.1046"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1046" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.928", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.926, %"class.base::WeakPtrFactory.927" }
%class.scoped_refptr.926 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.927" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.928" = type { %"class.blink::MemberBase.805" }
%"class.blink::HeapHashSet.1055" = type { %"class.WTF::HashSet.1058" }
%"class.WTF::HashSet.1058" = type { %"class.WTF::HashTable.1059" }
%"class.WTF::HashTable.1059" = type <{ %"class.blink::Member.1061"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1061" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.1094" }
%"class.WTF::VectorBufferBase.1094" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1097" = type { %"class.WTF::HashMap.1100" }
%"class.WTF::HashMap.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"struct.WTF::KeyValuePair.1103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1103" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapObserverSet.1123" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1124" }
%"class.blink::HeapHashSet.1124" = type { %"class.WTF::HashSet.1127" }
%"class.WTF::HashSet.1127" = type { %"class.WTF::HashTable.1128" }
%"class.WTF::HashTable.1128" = type <{ %"class.blink::WeakMember.1130"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1130" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.804", %"class.blink::HeapHashSet.1140", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1147", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1140" = type { %"class.WTF::HashSet.1143" }
%"class.WTF::HashSet.1143" = type { %"class.WTF::HashTable.1144" }
%"class.WTF::HashTable.1144" = type <{ %"class.blink::Member.1146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1146" = type opaque
%"class.blink::HeapTaskRunnerTimer.1147" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1148", { i64, i64 } }
%"class.blink::WeakMember.1148" = type { %"class.blink::MemberBase.1134" }
%"class.blink::WeakMember.1135" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::Node"* }
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.810" }
%"class.blink::HeapHashMap.810" = type { %"class.WTF::HashMap.813" }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type { %"class.WTF::AtomicString", %"class.blink::Member.817" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.722", i32, %"class.blink::HeapVector.821" }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.834" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::HeapHashMap.836"* }
%"class.blink::HeapHashMap.836" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.839" = type { %"class.WTF::Vector.842" }
%"class.WTF::Vector.842" = type { %"class.WTF::VectorBuffer.843" }
%"class.WTF::VectorBuffer.843" = type { %"class.WTF::VectorBufferBase.844" }
%"class.WTF::VectorBufferBase.844" = type { %"class.blink::Member.845"*, i32, i32 }
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.732 }
%class.scoped_refptr.732 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.733", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.733" = type { %"class.base::RefCounted.734" }
%"class.base::RefCounted.734" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.739", %"class.blink::Member.741", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.739" = type { %"class.WTF::SingleThreadedBitField.740" }
%"class.WTF::SingleThreadedBitField.740" = type { i32 }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.743 }
%class.scoped_refptr.743 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.744", %"class.WTF::AtomicString", %"class.WTF::Vector.746" }
%"class.WTF::RefCounted.744" = type { %"class.base::RefCounted.745" }
%"class.base::RefCounted.745" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.746" = type { %"class.WTF::VectorBuffer.747" }
%"class.WTF::VectorBuffer.747" = type { %"class.WTF::VectorBufferBase.748", [32 x i8] }
%"class.WTF::VectorBufferBase.748" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.751" = type { %"class.blink::MemberBase.752" }
%"class.blink::MemberBase.752" = type { %"class.blink::XRDOMOverlayState"* }
%"class.blink::XRDOMOverlayState" = type opaque
%"class.blink::HeapHashSet.646" = type { %"class.WTF::HashSet.649" }
%"class.WTF::HashSet.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"class.blink::Member.502"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.753" = type { %"class.WTF::Vector.756" }
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { %"class.blink::Member.759"*, i32, i32 }
%"class.blink::Member.759" = type opaque
%"class.mojo::StructPtr.761" = type { %"class.std::__1::unique_ptr.762" }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.device::mojom::blink::VRStageParameters"* }
%"class.device::mojom::blink::VRStageParameters" = type { %"class.gfx::Transform", %"class.absl::optional.765" }
%"class.absl::optional.765" = type { %"class.absl::optional_internal::optional_data.766" }
%"class.absl::optional_internal::optional_data.766" = type { %"class.absl::optional_internal::optional_data_base.767" }
%"class.absl::optional_internal::optional_data_base.767" = type { %"class.absl::optional_internal::optional_data_dtor_base.768" }
%"class.absl::optional_internal::optional_data_dtor_base.768" = type { i8, %union.anon.769 }
%union.anon.769 = type { %"class.WTF::Vector.770" }
%"class.WTF::Vector.770" = type { %"class.WTF::VectorBuffer.771" }
%"class.WTF::VectorBuffer.771" = type { %"class.WTF::VectorBufferBase.772" }
%"class.WTF::VectorBufferBase.772" = type { %"class.gfx::Point3F"*, i32, i32 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.778" }
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.780" }
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { %"class.base::OnceCallback.785"*, i32, i32 }
%"class.base::OnceCallback.785" = type opaque
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::XRFrameRequestCallbackCollection"* }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::XRSessionViewportScaler"* }
%"class.blink::XRSessionViewportScaler" = type opaque
%"class.blink::XRFrame" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1149", i8, i8, [6 x i8] }>
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::XRSession"* }
%"class.blink::probe::AsyncTask" = type { %"class.blink::ThreadDebugger"*, %"class.blink::probe::AsyncTaskId"*, i8, i8, %"class.blink::Persistent.1154" }
%"class.blink::ThreadDebugger" = type opaque
%"class.blink::Persistent.1154" = type { %"class.blink::PersistentBase.1155" }
%"class.blink::PersistentBase.1155" = type { %"class.blink::AdTracker"*, %"class.blink::PersistentNodePtr" }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1158", %"class.WTF::Vector.1092", i32, [4 x i8], %"class.blink::HeapHashMap.1160", i32, i8, [3 x i8] }>
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1227", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1235", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1249", %"class.blink::FrameLoader", %"class.blink::Member.1270", %"class.blink::Member.722", %"class.blink::Member.1272", %"class.blink::Member.1274", %"class.blink::Member.1276", %"class.blink::Member.1278", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1280", %class.scoped_refptr.1500, %"class.blink::Member.1501", %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.blink::Member.1509", %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1519", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1525", %"class.std::__1::unique_ptr.1526", %"class.absl::optional.1215", i32, [4 x i8], %"class.std::__1::unique_ptr.1532", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1540", %"class.blink::HeapMojoAssociatedReceiver.1543", %"class.blink::HeapMojoAssociatedReceiver.1546", %"class.blink::HeapMojoReceiver.1549", %"class.blink::HeapMojoAssociatedReceiver.1552", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.mojo::StructPtr.1564", %"class.blink::Member.1573", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1575", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1171", %"class.blink::Member.1173", %"class.blink::Member.1175", i8, i32, i8, i32, %"class.blink::Member.1198", %"class.blink::Member.1177", %"class.blink::FrameLifecycle", %"class.blink::Member.1169", %"class.blink::Member.1169", %"class.blink::Member.1169", %"class.blink::Member.1169", %"class.blink::Member.1169", %"class.blink::Member.1169", %"class.blink::Member.1158", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1208", i8, %"class.base::UnguessableToken", %"class.absl::optional.1210", %"class.absl::optional.1215", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1169", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1169", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.1181", i8, %"class.WTF::Vector.1183" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.1186", %"class.mojo::Remote.1188", i8, %"class.WTF::String" }
%"class.util::TokenType.1186" = type { %"class.base::StrongAlias.1187" }
%"class.base::StrongAlias.1187" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote.1188" = type { %"class.mojo::internal::InterfacePtrState.1189" }
%"class.mojo::internal::InterfacePtrState.1189" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1190" }
%"class.std::__1::unique_ptr.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1169", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1200" }
%"class.std::__1::vector.1200" = type { %"class.std::__1::__vector_base.1201" }
%"class.std::__1::__vector_base.1201" = type { %"struct.std::__1::pair.1202"*, %"struct.std::__1::pair.1202"*, %"class.std::__1::__compressed_pair.1203" }
%"struct.std::__1::pair.1202" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"struct.std::__1::pair.1202"* }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1210" = type { %"class.absl::optional_internal::optional_data.1211" }
%"class.absl::optional_internal::optional_data.1211" = type { %"class.absl::optional_internal::optional_data_base.1212" }
%"class.absl::optional_internal::optional_data_base.1212" = type { %"class.absl::optional_internal::optional_data_dtor_base.1213" }
%"class.absl::optional_internal::optional_data_dtor_base.1213" = type { i8, %union.anon.1214 }
%union.anon.1214 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1220" }
%"class.blink::HeapHashSet.1220" = type { %"class.WTF::HashSet.1223" }
%"class.WTF::HashSet.1223" = type { %"class.WTF::HashTable.1224" }
%"class.WTF::HashTable.1224" = type <{ %"class.blink::WeakMember.1226"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1226" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1227" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1228" }
%"class.blink::HeapHashMap.1228" = type { %"class.WTF::HashMap.1231" }
%"class.WTF::HashMap.1231" = type { %"class.WTF::HashTable.1232" }
%"class.WTF::HashTable.1232" = type <{ %"struct.WTF::KeyValuePair.1234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1234" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1238", %"class.base::WeakPtrFactory.1243" }
%"class.WTF::HashMap.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %"struct.WTF::KeyValuePair.1242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1242" = type opaque
%"class.base::WeakPtrFactory.1243" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1247" }
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1929", i64, %"class.std::__1::map.1930", i8*, i64, %"class.base::WeakPtrFactory.1939" }
%"class.base::RepeatingCallback.1929" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1930" = type { %"class.std::__1::__tree.1931" }
%"class.std::__1::__tree.1931" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1932", %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::WeakPtrFactory.1939" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1249" = type { %"class.WTF::HashSet.1252" }
%"class.WTF::HashSet.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"class.blink::WeakMember.1255"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1255" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1158", %"class.blink::Member.1256", %"class.blink::Member.1258", %"class.std::__1::unique_ptr.1260", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1266" }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.233 }
%"class.WTF::HashSet.1266" = type { %"class.WTF::HashTable.1267" }
%"class.WTF::HashTable.1267" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1654", %"class.blink::Member.1158", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1659", i8, i32, %"class.blink::Color", %"class.absl::optional.1661", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1666", %"class.blink::Member.1668", %"class.blink::Member.1668", %"class.std::__1::unique_ptr.1671", i32, [4 x i8], %"class.WTF::HashSet.1674", %"class.blink::Member.1681", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1683", %"class.blink::HeapHashSet.1690", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1698", i8, %"class.blink::Member.1704", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1716", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1730", i8, %"class.std::__1::unique_ptr.1736", %"class.std::__1::unique_ptr.1852", %"class.WTF::Vector.1858", i32, %class.scoped_refptr.1863, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1864", %"class.blink::Member.1866", %"class.blink::Member.1868", %"class.blink::HeapHashSet.1870", %"class.blink::HeapHashSet.1877", %"class.std::__1::unique_ptr.1884", %"class.std::__1::unique_ptr.1891", %"class.WTF::Vector.890" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1654" = type { %"class.WTF::HashTable.1655" }
%"class.WTF::HashTable.1655" = type <{ %class.scoped_refptr.1658*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1658 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1659" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1660", { i64, i64 } }
%"class.blink::WeakMember.1660" = type { %"class.blink::MemberBase.1271" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, %union.anon.1665 }
%union.anon.1665 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::HeapHashSet.1670"* }
%"class.blink::HeapHashSet.1670" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.WTF::HashSet.1674"* }
%"class.WTF::HashSet.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1683" = type { %"class.WTF::HashSet.1686" }
%"class.WTF::HashSet.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"class.blink::Member.1689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1689" = type opaque
%"class.blink::HeapHashSet.1690" = type { %"class.WTF::HashSet.1693" }
%"class.WTF::HashSet.1693" = type { %"class.WTF::HashTable.1694" }
%"class.WTF::HashTable.1694" = type <{ %"class.blink::Member.1696"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1696" = type { %"class.blink::MemberBase.1697" }
%"class.blink::MemberBase.1697" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1698" = type { %"class.std::__1::__compressed_pair.1699" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1708", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1708" = type { %"class.WTF::HashTable.1709" }
%"class.WTF::HashTable.1709" = type <{ %"struct.WTF::KeyValuePair.1711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1711" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1712", i32, i32 }
%"class.WTF::Vector.1712" = type { %"class.WTF::VectorBuffer.1713" }
%"class.WTF::VectorBuffer.1713" = type { %"class.WTF::VectorBufferBase.1714" }
%"class.WTF::VectorBufferBase.1714" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1716" = type { %"class.WTF::LinkedHashSet.1719" }
%"class.WTF::LinkedHashSet.1719" = type { %"class.WTF::HashMap.1720", %"class.WTF::VectorBackedLinkedList.1724" }
%"class.WTF::HashMap.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"struct.WTF::KeyValuePair.1723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1723" = type opaque
%"class.WTF::VectorBackedLinkedList.1724" = type { %"class.WTF::Vector.1725", i32, i32 }
%"class.WTF::Vector.1725" = type { %"class.WTF::VectorBuffer.1726" }
%"class.WTF::VectorBuffer.1726" = type { %"class.WTF::VectorBufferBase.1727" }
%"class.WTF::VectorBufferBase.1727" = type { %"class.WTF::VectorBackedLinkedListNode.1728"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1728" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1739, %class.scoped_refptr.1739, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1829", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1834", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1739 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1740", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1747" }
%"class.WTF::RefCounted.1740" = type { %"class.base::RefCounted.1741" }
%"class.base::RefCounted.1741" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1742", i32, [4 x i8] }>
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1753", %"class.std::__1::unique_ptr.1802", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1750, %class.scoped_refptr.1751, %class.scoped_refptr.1752 }
%class.scoped_refptr.1750 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1766", i8, i8, %class.scoped_refptr.1750, i32, i32 }
%"class.WTF::RefCounted.1766" = type { %"class.base::RefCounted.1767" }
%"class.base::RefCounted.1767" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1751 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1920" }
%"class.blink::PaintPropertyNode.1920" = type { %"class.WTF::RefCounted.1921", i8, i8, %class.scoped_refptr.1751, i32, i32 }
%"class.WTF::RefCounted.1921" = type { %"class.base::RefCounted.1922" }
%"class.base::RefCounted.1922" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1752 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1917" }
%"class.blink::PaintPropertyNode.1917" = type { %"class.WTF::RefCounted.1918", i8, i8, %class.scoped_refptr.1752, i32, i32 }
%"class.WTF::RefCounted.1918" = type { %"class.base::RefCounted.1919" }
%"class.base::RefCounted.1919" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1756", %"class.WTF::Vector.1761", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1756" = type { %"class.WTF::VectorBuffer.1757" }
%"class.WTF::VectorBuffer.1757" = type { %"class.WTF::VectorBufferBase.1758" }
%"class.WTF::VectorBufferBase.1758" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.WTF::VectorBufferBase.1763" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1781" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1774, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1775", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1768" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1774 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1902", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1902" = type { %"class.WTF::RefCounted.1903", i8, i8, %class.scoped_refptr.1774, i32, i32 }
%"class.WTF::RefCounted.1903" = type { %"class.base::RefCounted.1904" }
%"class.base::RefCounted.1904" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1905" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1905" = type { %"class.absl::optional_internal::optional_data.1906" }
%"class.absl::optional_internal::optional_data.1906" = type { %"class.absl::optional_internal::optional_data_base.1907" }
%"class.absl::optional_internal::optional_data_base.1907" = type { %"class.absl::optional_internal::optional_data_dtor_base.1908" }
%"class.absl::optional_internal::optional_data_dtor_base.1908" = type { i8, %union.anon.1909 }
%union.anon.1909 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1910", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1910" = type { %"class.std::__1::__vector_base.1911" }
%"class.std::__1::__vector_base.1911" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1912" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1913" }
%"struct.std::__1::__compressed_pair_elem.1913" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1784", %"class.std::__1::unique_ptr.1790", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1784" = type { %"class.std::__1::__compressed_pair.1785" }
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1805", %"class.absl::optional.1805" }
%"class.absl::optional.1805" = type { %"class.absl::optional_internal::optional_data.1806" }
%"class.absl::optional_internal::optional_data.1806" = type { %"class.absl::optional_internal::optional_data_base.1807" }
%"class.absl::optional_internal::optional_data_base.1807" = type { %"class.absl::optional_internal::optional_data_dtor_base.1808" }
%"class.absl::optional_internal::optional_data_dtor_base.1808" = type { i8, [3 x i8], %union.anon.1809 }
%union.anon.1809 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1747"*, %"class.absl::optional.1815", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1820", %"class.WTF::Vector.1824" }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.205", [128 x i8] }
%"class.WTF::Vector.1824" = type { %"class.WTF::VectorBuffer.1825" }
%"class.WTF::VectorBuffer.1825" = type { %"class.WTF::VectorBufferBase.1826", [128 x i8] }
%"class.WTF::VectorBufferBase.1826" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1834" = type { %"class.WTF::HashTable.1835" }
%"class.WTF::HashTable.1835" = type <{ %"struct.WTF::KeyValuePair.1838"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1838" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1839", %"class.WTF::Vector.1844" }
%"class.WTF::HashMap.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"struct.WTF::KeyValuePair.1843"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1843" = type opaque
%"class.WTF::Vector.1844" = type { %"class.WTF::VectorBuffer.1845" }
%"class.WTF::VectorBuffer.1845" = type { %"class.WTF::VectorBufferBase.1846" }
%"class.WTF::VectorBufferBase.1846" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1852" = type { %"class.std::__1::__compressed_pair.1853" }
%"class.std::__1::__compressed_pair.1853" = type { %"struct.std::__1::__compressed_pair_elem.1854" }
%"struct.std::__1::__compressed_pair_elem.1854" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1863 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1870" = type { %"class.WTF::HashSet.1873" }
%"class.WTF::HashSet.1873" = type { %"class.WTF::HashTable.1874" }
%"class.WTF::HashTable.1874" = type <{ %"class.blink::WeakMember.1876"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1876" = type opaque
%"class.blink::HeapHashSet.1877" = type { %"class.WTF::HashSet.1880" }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"class.blink::WeakMember.1883"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1883" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1887" }
%"class.base::time_internal::TimeBase.1887" = type { i64 }
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1894", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1894" = type { %"class.absl::optional_internal::optional_data.1895" }
%"class.absl::optional_internal::optional_data.1895" = type { %"class.absl::optional_internal::optional_data_base.1896" }
%"class.absl::optional_internal::optional_data_base.1896" = type { %"class.absl::optional_internal::optional_data_dtor_base.1897" }
%"class.absl::optional_internal::optional_data_dtor_base.1897" = type { i8, %union.anon.1898 }
%union.anon.1898 = type { %"class.base::Time" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1291", %"class.blink::HeapListHashSet.1302", %"class.blink::HeapListHashSet.1313", %"class.blink::HeapListHashSet.1324", %"class.blink::HeapListHashSet.1335", %"class.blink::HeapListHashSet.1346", %"class.blink::HeapListHashSet.1357", %"class.blink::HeapListHashSet.1368", %"class.blink::HeapListHashSet.1379", %"class.blink::HeapListHashSet.1390", %"class.blink::HeapListHashSet.1401", %"class.blink::HeapListHashSet.1412", %"class.blink::HeapListHashSet.1423", %"class.blink::HeapListHashSet.1434", %"class.blink::HeapListHashSet.1445", %"class.blink::HeapListHashSet.1456", %"class.blink::HeapListHashSet.1467", %"class.blink::HeapListHashSet.1478", %"class.blink::HeapListHashSet.1489" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1287", %"class.blink::Member.1289", %"class.blink::Member.1289", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1287" = type <{ %"class.blink::Member.1289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1503", %"class.blink::Member.1289", %"class.blink::Member.1289" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1291" = type { %"class.WTF::ListHashSet.base.1301", [7 x i8] }
%"class.WTF::ListHashSet.base.1301" = type <{ %"class.WTF::HashTable.1296", %"class.blink::Member.1298", %"class.blink::Member.1298", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1296" = type <{ %"class.blink::Member.1298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::HeapListHashSetNode.1300"* }
%"class.blink::HeapListHashSetNode.1300" = type { %"class.blink::Member.1648", %"class.blink::Member.1298", %"class.blink::Member.1298" }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1302" = type { %"class.WTF::ListHashSet.base.1312", [7 x i8] }
%"class.WTF::ListHashSet.base.1312" = type <{ %"class.WTF::HashTable.1307", %"class.blink::Member.1309", %"class.blink::Member.1309", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1307" = type <{ %"class.blink::Member.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::HeapListHashSetNode.1311"* }
%"class.blink::HeapListHashSetNode.1311" = type { %"class.blink::Member.1644", %"class.blink::Member.1309", %"class.blink::Member.1309" }
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1313" = type { %"class.WTF::ListHashSet.base.1323", [7 x i8] }
%"class.WTF::ListHashSet.base.1323" = type <{ %"class.WTF::HashTable.1318", %"class.blink::Member.1320", %"class.blink::Member.1320", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1318" = type <{ %"class.blink::Member.1320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HeapListHashSetNode.1322"* }
%"class.blink::HeapListHashSetNode.1322" = type { %"class.blink::Member.1640", %"class.blink::Member.1320", %"class.blink::Member.1320" }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1324" = type { %"class.WTF::ListHashSet.base.1334", [7 x i8] }
%"class.WTF::ListHashSet.base.1334" = type <{ %"class.WTF::HashTable.1329", %"class.blink::Member.1331", %"class.blink::Member.1331", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1329" = type <{ %"class.blink::Member.1331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::HeapListHashSetNode.1333"* }
%"class.blink::HeapListHashSetNode.1333" = type { %"class.blink::Member.1636", %"class.blink::Member.1331", %"class.blink::Member.1331" }
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1335" = type { %"class.WTF::ListHashSet.base.1345", [7 x i8] }
%"class.WTF::ListHashSet.base.1345" = type <{ %"class.WTF::HashTable.1340", %"class.blink::Member.1342", %"class.blink::Member.1342", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1340" = type <{ %"class.blink::Member.1342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::HeapListHashSetNode.1344"* }
%"class.blink::HeapListHashSetNode.1344" = type { %"class.blink::Member.1632", %"class.blink::Member.1342", %"class.blink::Member.1342" }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1346" = type { %"class.WTF::ListHashSet.base.1356", [7 x i8] }
%"class.WTF::ListHashSet.base.1356" = type <{ %"class.WTF::HashTable.1351", %"class.blink::Member.1353", %"class.blink::Member.1353", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1351" = type <{ %"class.blink::Member.1353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::HeapListHashSetNode.1355"* }
%"class.blink::HeapListHashSetNode.1355" = type { %"class.blink::Member.1628", %"class.blink::Member.1353", %"class.blink::Member.1353" }
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1357" = type { %"class.WTF::ListHashSet.base.1367", [7 x i8] }
%"class.WTF::ListHashSet.base.1367" = type <{ %"class.WTF::HashTable.1362", %"class.blink::Member.1364", %"class.blink::Member.1364", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1362" = type <{ %"class.blink::Member.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::HeapListHashSetNode.1366"* }
%"class.blink::HeapListHashSetNode.1366" = type { %"class.blink::Member.1624", %"class.blink::Member.1364", %"class.blink::Member.1364" }
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1368" = type { %"class.WTF::ListHashSet.base.1378", [7 x i8] }
%"class.WTF::ListHashSet.base.1378" = type <{ %"class.WTF::HashTable.1373", %"class.blink::Member.1375", %"class.blink::Member.1375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1373" = type <{ %"class.blink::Member.1375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::HeapListHashSetNode.1377"* }
%"class.blink::HeapListHashSetNode.1377" = type { %"class.blink::Member.1620", %"class.blink::Member.1375", %"class.blink::Member.1375" }
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1379" = type { %"class.WTF::ListHashSet.base.1389", [7 x i8] }
%"class.WTF::ListHashSet.base.1389" = type <{ %"class.WTF::HashTable.1384", %"class.blink::Member.1386", %"class.blink::Member.1386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1384" = type <{ %"class.blink::Member.1386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::HeapListHashSetNode.1388"* }
%"class.blink::HeapListHashSetNode.1388" = type { %"class.blink::Member.1616", %"class.blink::Member.1386", %"class.blink::Member.1386" }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1390" = type { %"class.WTF::ListHashSet.base.1400", [7 x i8] }
%"class.WTF::ListHashSet.base.1400" = type <{ %"class.WTF::HashTable.1395", %"class.blink::Member.1397", %"class.blink::Member.1397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1395" = type <{ %"class.blink::Member.1397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::HeapListHashSetNode.1399"* }
%"class.blink::HeapListHashSetNode.1399" = type { %"class.blink::Member.1507", %"class.blink::Member.1397", %"class.blink::Member.1397" }
%"class.blink::HeapListHashSet.1401" = type { %"class.WTF::ListHashSet.base.1411", [7 x i8] }
%"class.WTF::ListHashSet.base.1411" = type <{ %"class.WTF::HashTable.1406", %"class.blink::Member.1408", %"class.blink::Member.1408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1406" = type <{ %"class.blink::Member.1408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::HeapListHashSetNode.1410"* }
%"class.blink::HeapListHashSetNode.1410" = type { %"class.blink::Member.1610", %"class.blink::Member.1408", %"class.blink::Member.1408" }
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1412" = type { %"class.WTF::ListHashSet.base.1422", [7 x i8] }
%"class.WTF::ListHashSet.base.1422" = type <{ %"class.WTF::HashTable.1417", %"class.blink::Member.1419", %"class.blink::Member.1419", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::HeapListHashSetNode.1421"* }
%"class.blink::HeapListHashSetNode.1421" = type { %"class.blink::Member.1606", %"class.blink::Member.1419", %"class.blink::Member.1419" }
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1423" = type { %"class.WTF::ListHashSet.base.1433", [7 x i8] }
%"class.WTF::ListHashSet.base.1433" = type <{ %"class.WTF::HashTable.1428", %"class.blink::Member.1430", %"class.blink::Member.1430", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1428" = type <{ %"class.blink::Member.1430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::HeapListHashSetNode.1432"* }
%"class.blink::HeapListHashSetNode.1432" = type { %"class.blink::Member.1602", %"class.blink::Member.1430", %"class.blink::Member.1430" }
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1434" = type { %"class.WTF::ListHashSet.base.1444", [7 x i8] }
%"class.WTF::ListHashSet.base.1444" = type <{ %"class.WTF::HashTable.1439", %"class.blink::Member.1441", %"class.blink::Member.1441", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1439" = type <{ %"class.blink::Member.1441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::HeapListHashSetNode.1443"* }
%"class.blink::HeapListHashSetNode.1443" = type { %"class.blink::Member.1598", %"class.blink::Member.1441", %"class.blink::Member.1441" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1445" = type { %"class.WTF::ListHashSet.base.1455", [7 x i8] }
%"class.WTF::ListHashSet.base.1455" = type <{ %"class.WTF::HashTable.1450", %"class.blink::Member.1452", %"class.blink::Member.1452", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1450" = type <{ %"class.blink::Member.1452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::HeapListHashSetNode.1454"* }
%"class.blink::HeapListHashSetNode.1454" = type { %"class.blink::Member.1594", %"class.blink::Member.1452", %"class.blink::Member.1452" }
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1456" = type { %"class.WTF::ListHashSet.base.1466", [7 x i8] }
%"class.WTF::ListHashSet.base.1466" = type <{ %"class.WTF::HashTable.1461", %"class.blink::Member.1463", %"class.blink::Member.1463", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1461" = type <{ %"class.blink::Member.1463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::HeapListHashSetNode.1465"* }
%"class.blink::HeapListHashSetNode.1465" = type { %"class.blink::Member.1590", %"class.blink::Member.1463", %"class.blink::Member.1463" }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1467" = type { %"class.WTF::ListHashSet.base.1477", [7 x i8] }
%"class.WTF::ListHashSet.base.1477" = type <{ %"class.WTF::HashTable.1472", %"class.blink::Member.1474", %"class.blink::Member.1474", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1472" = type <{ %"class.blink::Member.1474"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::HeapListHashSetNode.1476"* }
%"class.blink::HeapListHashSetNode.1476" = type { %"class.blink::Member.1586", %"class.blink::Member.1474", %"class.blink::Member.1474" }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1478" = type { %"class.WTF::ListHashSet.base.1488", [7 x i8] }
%"class.WTF::ListHashSet.base.1488" = type <{ %"class.WTF::HashTable.1483", %"class.blink::Member.1485", %"class.blink::Member.1485", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1483" = type <{ %"class.blink::Member.1485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::HeapListHashSetNode.1487"* }
%"class.blink::HeapListHashSetNode.1487" = type { %"class.blink::Member.1509", %"class.blink::Member.1485", %"class.blink::Member.1485" }
%"class.blink::HeapListHashSet.1489" = type { %"class.WTF::ListHashSet.base.1499", [7 x i8] }
%"class.WTF::ListHashSet.base.1499" = type <{ %"class.WTF::HashTable.1494", %"class.blink::Member.1496", %"class.blink::Member.1496", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1494" = type <{ %"class.blink::Member.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::HeapListHashSetNode.1498"* }
%"class.blink::HeapListHashSetNode.1498" = type { %"class.blink::Member.1501", %"class.blink::Member.1496", %"class.blink::Member.1496" }
%class.scoped_refptr.1500 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::AdTracker"* }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1517" }
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1942" }
%"class.mojo::Remote.1942" = type { %"class.mojo::internal::InterfacePtrState.1943" }
%"class.mojo::internal::InterfacePtrState.1943" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1944" }
%"class.std::__1::unique_ptr.1944" = type { %"class.std::__1::__compressed_pair.1945" }
%"class.std::__1::__compressed_pair.1945" = type { %"struct.std::__1::__compressed_pair_elem.1946" }
%"struct.std::__1::__compressed_pair_elem.1946" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1525" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1526" = type { %"class.std::__1::__compressed_pair.1527" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1215" = type { %"class.absl::optional_internal::optional_data.1216" }
%"class.absl::optional_internal::optional_data.1216" = type { %"class.absl::optional_internal::optional_data_base.1217" }
%"class.absl::optional_internal::optional_data_base.1217" = type { %"class.absl::optional_internal::optional_data_dtor_base.1218" }
%"class.absl::optional_internal::optional_data_dtor_base.1218" = type { i8, %union.anon.1219 }
%union.anon.1219 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1538" }
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1952" }
%"class.mojo::AssociatedRemote.1952" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1953" }
%"class.mojo::internal::AssociatedInterfacePtrState.1953" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1954" }
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1540" = type { %"class.blink::Member.1541" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1962" }
%"class.mojo::AssociatedRemote.1962" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1963" }
%"class.mojo::internal::AssociatedInterfacePtrState.1963" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1964" }
%"class.std::__1::unique_ptr.1964" = type { %"class.std::__1::__compressed_pair.1965" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1966" }
%"struct.std::__1::__compressed_pair_elem.1966" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver.1543" = type { %"class.blink::Member.1544" }
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1972", %"class.blink::Member.1158", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1972" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1973" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.355" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1973" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1546" = type { %"class.blink::Member.1547" }
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1976", %"class.blink::Member.1158", %"class.mojo::AssociatedReceiver.1977" }
%"class.blink::ThreadState::PrefinalizerRegistration.1976" = type { i8 }
%"class.mojo::AssociatedReceiver.1977" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1978" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1978" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver.1549" = type { %"class.blink::Member.1550" }
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1981", %"class.blink::Member.1158", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1981" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.538, %"class.std::__1::unique_ptr.355", %"class.base::WeakPtrFactory.1982" }
%"class.base::WeakPtrFactory.1982" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1552" = type { %"class.blink::Member.1553" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1985", %"class.blink::Member.1158", %"class.mojo::AssociatedReceiver.1986" }
%"class.blink::ThreadState::PrefinalizerRegistration.1985" = type { i8 }
%"class.mojo::AssociatedReceiver.1986" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1987" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1987" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::HeapHashMap.1563"* }
%"class.blink::HeapHashMap.1563" = type opaque
%"class.mojo::StructPtr.1564" = type { %"class.std::__1::unique_ptr.1565" }
%"class.std::__1::unique_ptr.1565" = type { %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1568", %"class.mojo::InlinedStructPtr.1569" }
%"class.mojo::InlinedStructPtr.1568" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1569" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1575" = type { %"class.absl::optional_internal::optional_data.1576" }
%"class.absl::optional_internal::optional_data.1576" = type { %"class.absl::optional_internal::optional_data_base.1577" }
%"class.absl::optional_internal::optional_data_base.1577" = type { %"class.absl::optional_internal::optional_data_dtor_base.1578" }
%"class.absl::optional_internal::optional_data_dtor_base.1578" = type { i8, %union.anon.1579 }
%union.anon.1579 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::HeapHashMap.1160" = type { %"class.WTF::HashMap.1163" }
%"class.WTF::HashMap.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"struct.WTF::KeyValuePair.1166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1166" = type opaque
%"class.blink::probe::UserCallback" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, i8*, %"class.WTF::AtomicString"*, i8, %"class.blink::EventTarget"* }
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.v8::Value" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1991", %"class.blink::FreeList", %"class.WTF::Vector.1996" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1991" = type { %"class.WTF::VectorBuffer.1992" }
%"class.WTF::VectorBuffer.1992" = type { %"class.WTF::VectorBufferBase.1993" }
%"class.WTF::VectorBufferBase.1993" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1996" = type { %"class.WTF::VectorBuffer.1997" }
%"class.WTF::VectorBuffer.1997" = type { %"class.WTF::VectorBufferBase.1998" }
%"class.WTF::VectorBufferBase.1998" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN3WTF7HashMapIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS1_14default_deleteIS5_EEEENS_7IntHashIiEENS_10HashTraitsIiEENSB_IS8_EENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZNK5blink32XRFrameRequestCallbackCollection18NameInHeapSnapshotEv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_24V8XRFrameRequestCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZTVN5blink32XRFrameRequestCallbackCollectionE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink32XRFrameRequestCallbackCollectionE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::XRFrameRequestCallbackCollection"*)* @_ZNK5blink32XRFrameRequestCallbackCollection18NameInHeapSnapshotEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [15 x i8] c"XRRequestFrame\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [174 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::unique_ptr<blink::probe::AsyncTaskId, std::__1::default_delete<blink::probe::AsyncTaskId> > >]\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"XRFrameRequestCallbackCollection\00", align 1

@_ZN5blink32XRFrameRequestCallbackCollectionC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::XRFrameRequestCallbackCollection"*, %"class.blink::ExecutionContext"*), void (%"class.blink::XRFrameRequestCallbackCollection"*, %"class.blink::ExecutionContext"*)* @_ZN5blink32XRFrameRequestCallbackCollectionC2EPNS_16ExecutionContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32XRFrameRequestCallbackCollectionC2EPNS_16ExecutionContextE(%"class.blink::XRFrameRequestCallbackCollection"* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink32XRFrameRequestCallbackCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashMap"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #9
  %6 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2
  %7 = bitcast %"class.WTF::HashMap.192"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #9
  %8 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5
  %10 = bitcast %"class.WTF::HashMap.192"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #9
  %11 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = bitcast %"class.WTF::Vector.203"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false)
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink32XRFrameRequestCallbackCollection16RegisterCallbackEPNS_24V8XRFrameRequestCallbackE(%"class.blink::XRFrameRequestCallbackCollection"*, %"class.blink::V8XRFrameRequestCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::V8XRFrameRequestCallback"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::unique_ptr.197", align 8
  store %"class.blink::V8XRFrameRequestCallback"* %1, %"class.blink::V8XRFrameRequestCallback"** %3, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  store i32 %9, i32* %4, align 4
  %10 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %10, i32* nonnull dereferenceable(4) %4, %"class.blink::V8XRFrameRequestCallback"** nonnull dereferenceable(8) %3) #9
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %11, 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %2
  %16 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %11, 0
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1
  %18 = load %"class.blink::V8XRFrameRequestCallback"*, %"class.blink::V8XRFrameRequestCallback"** %3, align 8
  %19 = ptrtoint %"class.blink::V8XRFrameRequestCallback"* %18 to i64
  %20 = bitcast %"class.blink::Member"* %17 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.blink::V8XRFrameRequestCallback"* %18 to i8*
  %25 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %26

26:                                               ; preds = %2, %15, %23
  %27 = bitcast %"class.std::__1::unique_ptr.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = call i8* @_Znwm(i64 24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #9
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr.197"* %5 to i8**
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2, i32 0
  %32 = call { %"struct.WTF::KeyValuePair.196"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.193"* %31, i32* nonnull dereferenceable(4) %4, %"class.std::__1::unique_ptr.197"* nonnull dereferenceable(8) %5) #9
  %33 = extractvalue { %"struct.WTF::KeyValuePair.196"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  %36 = extractvalue { %"struct.WTF::KeyValuePair.196"*, i8 } %32, 0
  br i1 %35, label %37, label %47

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %36, i64 0, i32 1
  %39 = bitcast %"class.std::__1::unique_ptr.197"* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %29, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.197"* %38 to i64*
  store i64 %40, i64* %43, align 8
  %44 = icmp eq %"class.blink::probe::AsyncTaskId"* %42, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %42, i64 0, i32 0
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %26, %37, %45
  %48 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %29, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %29, align 8
  %49 = icmp eq %"class.blink::probe::AsyncTaskId"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %48, i64 0, i32 0
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %53 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3
  %54 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %67, label %59, !prof !2

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %53, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = load i32, i32* %4, align 4
  store i32 %64, i32* %63, align 4
  %65 = load i32, i32* %54, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %54, align 4
  br label %68

67:                                               ; preds = %52
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.203"* %53, i32* nonnull dereferenceable(4) %4) #9
  br label %68

68:                                               ; preds = %59, %67
  %69 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 7, i32 0, i32 0
  %70 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %69, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %36, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %71, align 8
  call void @_ZN5blink5probe27AsyncTaskScheduledBreakableEPNS_16ExecutionContextEPKcPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"* %70, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.blink::probe::AsyncTaskId"* %72) #9
  %73 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  ret i32 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink5probe27AsyncTaskScheduledBreakableEPNS_16ExecutionContextEPKcPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"*, i8*, %"class.blink::probe::AsyncTaskId"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32XRFrameRequestCallbackCollection14CancelCallbackEi(%"class.blink::XRFrameRequestCallbackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = add i32 %1, 1
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %6, label %154

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  %11 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %68, label %13

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = shl i32 %1, 15
  %17 = xor i32 %16, -1
  %18 = add i32 %17, %1
  %19 = lshr i32 %18, 10
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, 9
  %22 = lshr i32 %21, 6
  %23 = xor i32 %22, %21
  %24 = shl i32 %23, 11
  %25 = xor i32 %24, -1
  %26 = add i32 %23, %25
  %27 = lshr i32 %26, 16
  %28 = xor i32 %27, %26
  %29 = and i32 %14, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %1
  br i1 %34, label %63, label %35

35:                                               ; preds = %13
  %36 = xor i32 %28, -1
  %37 = lshr i32 %26, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %54, %35
  %50 = phi i32 [ %33, %35 ], [ %61, %54 ]
  %51 = phi i64 [ %30, %35 ], [ %58, %54 ]
  %52 = phi i64 [ 0, %35 ], [ %56, %54 ]
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %49
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 %48, i64 %52
  %57 = add i64 %56, %51
  %58 = and i64 %57, %15
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %63, label %49

63:                                               ; preds = %54, %13
  %64 = phi %"struct.WTF::KeyValuePair"* [ %31, %13 ], [ %59, %54 ]
  %65 = icmp eq %"struct.WTF::KeyValuePair"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = zext i32 %12 to i64
  br label %71

68:                                               ; preds = %49, %63, %6
  %69 = zext i32 %12 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %69
  br label %71

71:                                               ; preds = %68, %66
  %72 = phi i64 [ %67, %66 ], [ %69, %68 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ %64, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %72
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %74, %73
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"* %77, %"struct.WTF::KeyValuePair"* %73) #9
  br label %78

78:                                               ; preds = %71, %76
  %79 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2
  call void @_ZN3WTF7HashMapIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS1_14default_deleteIS5_EEEENS_7IntHashIiEENS_10HashTraitsIiEENSB_IS8_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.192"* %79, i32* nonnull dereferenceable(4) %3)
  %80 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0
  %81 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %80, i64 0, i32 0, i32 0
  %82 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %81, align 8
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, null
  %84 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  br i1 %83, label %142, label %86

86:                                               ; preds = %78
  %87 = add i32 %85, -1
  %88 = zext i32 %87 to i64
  %89 = load i32, i32* %3, align 4
  %90 = shl i32 %89, 15
  %91 = xor i32 %90, -1
  %92 = add i32 %89, %91
  %93 = lshr i32 %92, 10
  %94 = xor i32 %93, %92
  %95 = mul i32 %94, 9
  %96 = lshr i32 %95, 6
  %97 = xor i32 %96, %95
  %98 = shl i32 %97, 11
  %99 = xor i32 %98, -1
  %100 = add i32 %97, %99
  %101 = lshr i32 %100, 16
  %102 = xor i32 %101, %100
  %103 = and i32 %102, %87
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %104
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %89
  br i1 %108, label %137, label %109

109:                                              ; preds = %86
  %110 = xor i32 %102, -1
  %111 = lshr i32 %100, 23
  %112 = add i32 %111, %110
  %113 = shl i32 %112, 12
  %114 = xor i32 %113, %112
  %115 = lshr i32 %114, 7
  %116 = xor i32 %115, %114
  %117 = shl i32 %116, 2
  %118 = xor i32 %117, %116
  %119 = lshr i32 %118, 20
  %120 = xor i32 %119, %118
  %121 = or i32 %120, 1
  %122 = zext i32 %121 to i64
  br label %123

123:                                              ; preds = %128, %109
  %124 = phi i32 [ %107, %109 ], [ %135, %128 ]
  %125 = phi i64 [ %104, %109 ], [ %132, %128 ]
  %126 = phi i64 [ 0, %109 ], [ %130, %128 ]
  %127 = icmp eq i32 %124, 0
  br i1 %127, label %142, label %128

128:                                              ; preds = %123
  %129 = icmp eq i64 %126, 0
  %130 = select i1 %129, i64 %122, i64 %126
  %131 = add i64 %130, %125
  %132 = and i64 %131, %88
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %132
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, %89
  br i1 %136, label %137, label %123

137:                                              ; preds = %128, %86
  %138 = phi %"struct.WTF::KeyValuePair"* [ %105, %86 ], [ %133, %128 ]
  %139 = icmp eq %"struct.WTF::KeyValuePair"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = zext i32 %85 to i64
  br label %145

142:                                              ; preds = %123, %137, %78
  %143 = zext i32 %85 to i64
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %143
  br label %145

145:                                              ; preds = %142, %140
  %146 = phi i64 [ %141, %140 ], [ %143, %142 ]
  %147 = phi %"struct.WTF::KeyValuePair"* [ %138, %140 ], [ %144, %142 ]
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %146
  %149 = icmp eq %"struct.WTF::KeyValuePair"* %148, %147
  br i1 %149, label %152, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %80, i64 0, i32 0
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"* %151, %"struct.WTF::KeyValuePair"* %147) #9
  br label %152

152:                                              ; preds = %145, %150
  %153 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5
  call void @_ZN3WTF7HashMapIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS1_14default_deleteIS5_EEEENS_7IntHashIiEENS_10HashTraitsIiEENSB_IS8_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.192"* %153, i32* nonnull dereferenceable(4) %3)
  br label %154

154:                                              ; preds = %152, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS1_14default_deleteIS5_EEEENS_7IntHashIiEENS_10HashTraitsIiEENSB_IS8_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.192"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.196"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair.196"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.196"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair.196"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair.196"* %71, %69
  br i1 %72, label %102, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %69, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %74, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %74, align 8
  %76 = icmp eq %"class.blink::probe::AsyncTaskId"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %75, i64 0, i32 0
  tail call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %69, i64 0, i32 0
  store i32 -1, i32* %80, align 4
  %81 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %0, i64 0, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 1
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %0, i64 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, -1
  store i32 %89, i32* %87, align 4
  %90 = mul i32 %89, 6
  %91 = load i32, i32* %6, align 8
  %92 = icmp ult i32 %90, %91
  %93 = icmp ugt i32 %91, 8
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %102

95:                                               ; preds = %79
  %96 = lshr i32 %91, 1
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 4
  %99 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %98, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %98, i1 false) #9
  %100 = bitcast i8* %99 to %"struct.WTF::KeyValuePair.196"*
  %101 = tail call %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.193"* %70, %"struct.WTF::KeyValuePair.196"* %100, i32 %96, %"struct.WTF::KeyValuePair.196"* null) #9
  br label %102

102:                                              ; preds = %67, %79, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32XRFrameRequestCallbackCollection16ExecuteCallbacksEPNS_9XRSessionEdPNS_7XRFrameE(%"class.blink::XRFrameRequestCallbackCollection"* nocapture, %"class.blink::XRSession"*, double, %"class.blink::XRFrame"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::probe::AsyncTask", align 8
  %6 = alloca %"class.blink::probe::UserCallback", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0
  %10 = bitcast %"class.WTF::HashMap"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::HashMap"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = inttoptr i64 %11 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #9
  br label %19

19:                                               ; preds = %16, %4
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.WTF::HashMap"* %9 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %26

26:                                               ; preds = %19, %22
  %27 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  %31 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %31, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %31, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2147483647
  %38 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  %41 = and i32 %36, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %35, align 8
  %43 = and i32 %39, -2147483648
  %44 = or i32 %43, %37
  store i32 %44, i32* %38, align 8
  %45 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2
  %47 = bitcast %"class.WTF::HashMap.192"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::HashMap.192"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  store atomic i64 %50, i64* %47 monotonic, align 8
  store atomic i64 %48, i64* %49 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5, i32 0, i32 1
  %52 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2, i32 0, i32 1
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %51, align 4
  store i32 %53, i32* %52, align 4
  %55 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5, i32 0, i32 2
  %56 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2, i32 0, i32 2
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  %59 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 5, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 2147483647
  %62 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 2, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 2147483647
  %65 = and i32 %60, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %59, align 8
  %67 = and i32 %63, -2147483648
  %68 = or i32 %67, %61
  store i32 %68, i32* %62, align 8
  %69 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3
  %70 = bitcast %"class.WTF::Vector.203"* %69 to i64*
  %71 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  %73 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  store i32 0, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %72, i64 %76
  %78 = icmp eq i32 %75, 0
  %79 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 0
  %80 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %79, align 8
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %80, null
  br i1 %78, label %90, label %82

82:                                               ; preds = %26
  %83 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %45, i64 0, i32 0, i32 0
  %84 = bitcast %"class.blink::probe::AsyncTask"* %5 to i8*
  %85 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 7, i32 0, i32 0
  %86 = bitcast %"class.blink::probe::UserCallback"* %6 to i8*
  %87 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %1, i64 0, i32 0, i32 0, i32 0
  br label %125

90:                                               ; preds = %278, %26
  %91 = phi %"struct.WTF::KeyValuePair"* [ %80, %26 ], [ %279, %278 ]
  %92 = phi i1 [ %81, %26 ], [ %282, %278 ]
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.WTF::KeyValuePair"* %91 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %94) #9
  store atomic i64 0, i64* %12 monotonic, align 8
  store i32 0, i32* %27, align 8
  store i32 0, i32* %31, align 4
  br label %95

95:                                               ; preds = %90, %93
  %96 = getelementptr inbounds %"class.WTF::HashMap.192", %"class.WTF::HashMap.192"* %45, i64 0, i32 0, i32 0
  %97 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %96, align 8
  %98 = icmp eq %"struct.WTF::KeyValuePair.196"* %97, null
  br i1 %98, label %120, label %99

99:                                               ; preds = %95
  %100 = load i32, i32* %51, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99
  %103 = zext i32 %100 to i64
  br label %104

104:                                              ; preds = %115, %102
  %105 = phi i64 [ 0, %102 ], [ %116, %115 ]
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %97, i64 %105, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %97, i64 %105, i32 1, i32 0, i32 0, i32 0
  %111 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %110, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %110, align 8
  %112 = icmp eq %"class.blink::probe::AsyncTaskId"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %111, i64 0, i32 0
  call void @_ZdlPv(i8* %114) #10
  br label %115

115:                                              ; preds = %113, %109, %104
  %116 = add nuw nsw i64 %105, 1
  %117 = icmp eq i64 %116, %103
  br i1 %117, label %118, label %104

118:                                              ; preds = %115, %99
  %119 = bitcast %"struct.WTF::KeyValuePair.196"* %97 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %119) #9
  store atomic i64 0, i64* %49 monotonic, align 8
  store i32 0, i32* %51, align 8
  store i32 0, i32* %55, align 4
  br label %120

120:                                              ; preds = %95, %118
  %121 = icmp eq i32* %72, null
  br i1 %121, label %124, label %122, !prof !3

122:                                              ; preds = %120
  %123 = bitcast i32* %72 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #9
  br label %124

124:                                              ; preds = %120, %122
  ret void

125:                                              ; preds = %283, %82
  %126 = phi %"struct.WTF::KeyValuePair"* [ %80, %82 ], [ %279, %283 ]
  %127 = phi i32 [ %30, %82 ], [ %284, %283 ]
  %128 = phi i1 [ %81, %82 ], [ %282, %283 ]
  %129 = phi i32* [ %72, %82 ], [ %280, %283 ]
  br i1 %128, label %184, label %130

130:                                              ; preds = %125
  %131 = add i32 %127, -1
  %132 = zext i32 %131 to i64
  %133 = load i32, i32* %129, align 4
  %134 = shl i32 %133, 15
  %135 = xor i32 %134, -1
  %136 = add i32 %133, %135
  %137 = lshr i32 %136, 10
  %138 = xor i32 %137, %136
  %139 = mul i32 %138, 9
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = shl i32 %141, 11
  %143 = xor i32 %142, -1
  %144 = add i32 %141, %143
  %145 = lshr i32 %144, 16
  %146 = xor i32 %145, %144
  %147 = and i32 %146, %131
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %148
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, %133
  br i1 %152, label %181, label %153

153:                                              ; preds = %130
  %154 = xor i32 %146, -1
  %155 = lshr i32 %144, 23
  %156 = add i32 %155, %154
  %157 = shl i32 %156, 12
  %158 = xor i32 %157, %156
  %159 = lshr i32 %158, 7
  %160 = xor i32 %159, %158
  %161 = shl i32 %160, 2
  %162 = xor i32 %161, %160
  %163 = lshr i32 %162, 20
  %164 = xor i32 %163, %162
  %165 = or i32 %164, 1
  %166 = zext i32 %165 to i64
  br label %167

167:                                              ; preds = %172, %153
  %168 = phi i32 [ %151, %153 ], [ %179, %172 ]
  %169 = phi i64 [ %148, %153 ], [ %176, %172 ]
  %170 = phi i64 [ 0, %153 ], [ %174, %172 ]
  %171 = icmp eq i32 %168, 0
  br i1 %171, label %184, label %172

172:                                              ; preds = %167
  %173 = icmp eq i64 %170, 0
  %174 = select i1 %173, i64 %166, i64 %170
  %175 = add i64 %174, %169
  %176 = and i64 %175, %132
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %176
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %177, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, %133
  br i1 %180, label %181, label %167

181:                                              ; preds = %172, %130
  %182 = phi %"struct.WTF::KeyValuePair"* [ %149, %130 ], [ %177, %172 ]
  %183 = icmp eq %"struct.WTF::KeyValuePair"* %182, null
  br i1 %183, label %184, label %187

184:                                              ; preds = %167, %181, %125
  %185 = zext i32 %127 to i64
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %185
  br label %187

187:                                              ; preds = %181, %184
  %188 = phi %"struct.WTF::KeyValuePair"* [ %186, %184 ], [ %182, %181 ]
  %189 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %83, align 8
  %190 = icmp eq %"struct.WTF::KeyValuePair.196"* %189, null
  %191 = load i32, i32* %51, align 8
  br i1 %190, label %246, label %192

192:                                              ; preds = %187
  %193 = add i32 %191, -1
  %194 = zext i32 %193 to i64
  %195 = load i32, i32* %129, align 4
  %196 = shl i32 %195, 15
  %197 = xor i32 %196, -1
  %198 = add i32 %195, %197
  %199 = lshr i32 %198, 10
  %200 = xor i32 %199, %198
  %201 = mul i32 %200, 9
  %202 = lshr i32 %201, 6
  %203 = xor i32 %202, %201
  %204 = shl i32 %203, 11
  %205 = xor i32 %204, -1
  %206 = add i32 %203, %205
  %207 = lshr i32 %206, 16
  %208 = xor i32 %207, %206
  %209 = and i32 %208, %193
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %189, i64 %210
  %212 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %211, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, %195
  br i1 %214, label %243, label %215

215:                                              ; preds = %192
  %216 = xor i32 %208, -1
  %217 = lshr i32 %206, 23
  %218 = add i32 %217, %216
  %219 = shl i32 %218, 12
  %220 = xor i32 %219, %218
  %221 = lshr i32 %220, 7
  %222 = xor i32 %221, %220
  %223 = shl i32 %222, 2
  %224 = xor i32 %223, %222
  %225 = lshr i32 %224, 20
  %226 = xor i32 %225, %224
  %227 = or i32 %226, 1
  %228 = zext i32 %227 to i64
  br label %229

229:                                              ; preds = %234, %215
  %230 = phi i32 [ %213, %215 ], [ %241, %234 ]
  %231 = phi i64 [ %210, %215 ], [ %238, %234 ]
  %232 = phi i64 [ 0, %215 ], [ %236, %234 ]
  %233 = icmp eq i32 %230, 0
  br i1 %233, label %246, label %234

234:                                              ; preds = %229
  %235 = icmp eq i64 %232, 0
  %236 = select i1 %235, i64 %228, i64 %232
  %237 = add i64 %236, %231
  %238 = and i64 %237, %194
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %189, i64 %238
  %240 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, %195
  br i1 %242, label %243, label %229

243:                                              ; preds = %234, %192
  %244 = phi %"struct.WTF::KeyValuePair.196"* [ %211, %192 ], [ %239, %234 ]
  %245 = icmp eq %"struct.WTF::KeyValuePair.196"* %244, null
  br i1 %245, label %246, label %249

246:                                              ; preds = %229, %243, %187
  %247 = zext i32 %191 to i64
  %248 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %189, i64 %247
  br label %249

249:                                              ; preds = %243, %246
  %250 = phi %"struct.WTF::KeyValuePair.196"* [ %248, %246 ], [ %244, %243 ]
  %251 = zext i32 %127 to i64
  %252 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %251
  %253 = icmp eq %"struct.WTF::KeyValuePair"* %188, %252
  br i1 %253, label %278, label %254

254:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 40, i1 false)
  %255 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %85, align 8
  %256 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %250, i64 0, i32 1, i32 0, i32 0, i32 0
  %257 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %256, align 8
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %5, %"class.blink::ExecutionContext"* %255, %"class.blink::probe::AsyncTaskId"* %257, i8* null, i1 zeroext true, i32 1) #9
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %86) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 64, i1 false)
  %258 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  call void @_ZN5blink5probe12UserCallbackC1EPNS_16ExecutionContextEPKcRKN3WTF12AtomicStringEbPNS_11EventTargetE(%"class.blink::probe::UserCallback"* nonnull %6, %"class.blink::ExecutionContext"* %258, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, i1 zeroext true, %"class.blink::EventTarget"* null) #9
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #9
  br label %274

274:                                              ; preds = %254, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #9
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %188, i64 0, i32 1, i32 0, i32 0
  %276 = load %"class.blink::V8XRFrameRequestCallback"*, %"class.blink::V8XRFrameRequestCallback"** %275, align 8
  call void @_ZN5blink24V8XRFrameRequestCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterEdPNS_7XRFrameE(%"class.blink::V8XRFrameRequestCallback"* %276, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* %89, double %2, %"class.blink::XRFrame"* %3) #9
  call void @_ZN5blink5probe12UserCallbackD1Ev(%"class.blink::probe::UserCallback"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %86) #9
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #9
  %277 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %79, align 8
  br label %278

278:                                              ; preds = %249, %274
  %279 = phi %"struct.WTF::KeyValuePair"* [ %126, %249 ], [ %277, %274 ]
  %280 = getelementptr inbounds i32, i32* %129, i64 1
  %281 = icmp eq i32* %280, %77
  %282 = icmp eq %"struct.WTF::KeyValuePair"* %279, null
  br i1 %281, label %90, label %283

283:                                              ; preds = %278
  %284 = load i32, i32* %27, align 8
  br label %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"*, %"class.blink::ExecutionContext"*, %"class.blink::probe::AsyncTaskId"*, i8*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink5probe12UserCallbackC1EPNS_16ExecutionContextEPKcRKN3WTF12AtomicStringEbPNS_11EventTargetE(%"class.blink::probe::UserCallback"*, %"class.blink::ExecutionContext"*, i8*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, %"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink24V8XRFrameRequestCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterEdPNS_7XRFrameE(%"class.blink::V8XRFrameRequestCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, double, %"class.blink::XRFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5probe12UserCallbackD1Ev(%"class.blink::probe::UserCallback"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink32XRFrameRequestCallbackCollection5TraceEPNS_7VisitorE(%"class.blink::XRFrameRequestCallbackCollection"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 4
  %20 = bitcast %"class.blink::HeapHashMap"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapHashMap"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #9
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::XRFrameRequestCallbackCollection", %"class.blink::XRFrameRequestCallbackCollection"* %0, i64 0, i32 7
  %35 = bitcast %"class.blink::Member.208"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %104, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = and i64 %36, -131072
  %41 = inttoptr i64 %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 4138
  %43 = load i8, i8* %42, align 2
  %44 = icmp eq i8 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, i8* %41, i64 4160
  br label %85

47:                                               ; preds = %38
  %48 = getelementptr inbounds i8, i8* %41, i64 4096
  %49 = bitcast i8* %48 to %"class.blink::NormalPage"*
  %50 = getelementptr inbounds i8, i8* %41, i64 4400
  %51 = bitcast i8* %50 to i8**
  %52 = bitcast i8* %50 to i64*
  %53 = load i64, i64* %52, align 16
  %54 = sub i64 %36, %53
  %55 = lshr i64 %54, 3
  %56 = lshr i64 %54, 6
  %57 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %49, i64 0, i32 2, i32 0, i32 1, i64 %56
  %58 = load atomic i8, i8* %57 acquire, align 1
  %59 = trunc i64 %55 to i32
  %60 = and i32 %59, 7
  %61 = shl i32 2, %60
  %62 = trunc i32 %61 to i8
  %63 = add i8 %62, -1
  %64 = and i8 %63, %58
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %47, %66
  %67 = phi i64 [ %68, %66 ], [ %56, %47 ]
  %68 = add i64 %67, -1
  %69 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %49, i64 0, i32 2, i32 0, i32 1, i64 %68
  %70 = load atomic i8, i8* %69 acquire, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %66, label %72

72:                                               ; preds = %66, %47
  %73 = phi i64 [ %56, %47 ], [ %68, %66 ]
  %74 = phi i8 [ %64, %47 ], [ %70, %66 ]
  %75 = zext i8 %74 to i32
  %76 = tail call i32 @llvm.ctlz.i32(i32 %75, i1 true) #9, !range !4
  %77 = add nsw i32 %76, -24
  %78 = shl i64 %73, 3
  %79 = or i64 %78, 7
  %80 = sext i32 %77 to i64
  %81 = sub i64 %79, %80
  %82 = shl i64 %81, 3
  %83 = load i8*, i8** %51, align 16
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  br label %85

85:                                               ; preds = %72, %45
  %86 = phi i8* [ %46, %45 ], [ %84, %72 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = getelementptr inbounds i8, i8* %86, i64 4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 acquire, align 2
  %91 = lshr i16 %90, 2
  %92 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %93 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %92, i64 0, i32 0
  %94 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %93, align 8
  %95 = zext i16 %91 to i64
  %96 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %94, i64 %95
  %97 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %96, align 8
  %98 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %97, i64 0, i32 0
  %99 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %98, align 8
  %100 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* %87, void (%"class.blink::Visitor"*, i8*)* %99) #9
  br label %104

104:                                              ; preds = %33, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink32XRFrameRequestCallbackCollection18NameInHeapSnapshotEv(%"class.blink::XRFrameRequestCallbackCollection"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.blink::V8XRFrameRequestCallback"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = load %"class.blink::V8XRFrameRequestCallback"*, %"class.blink::V8XRFrameRequestCallback"** %2, align 8
  %85 = ptrtoint %"class.blink::V8XRFrameRequestCallback"* %84 to i64
  %86 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.blink::V8XRFrameRequestCallback"* %84 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #9
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #9
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #9
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !5
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24V8XRFrameRequestCallbackEE5TraceEPNS_7VisitorEPKv) #9
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #9
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair"* %112, %"struct.WTF::KeyValuePair"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.5, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.234"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.234"*)) #9
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #9
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #9
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24V8XRFrameRequestCallbackEE5TraceEPNS_7VisitorEPKv) #9
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24V8XRFrameRequestCallbackEE5TraceEPNS_7VisitorEPKv) #9
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.234"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24V8XRFrameRequestCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.196"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERiS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.193"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr.197"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.196"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.193"* %0, %"struct.WTF::KeyValuePair.196"* null)
  %9 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.196"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.196"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.196"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %105, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.196"* %52, %"struct.WTF::KeyValuePair.196"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.196"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.196"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.196"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.197"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.197"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.blink::probe::AsyncTaskId"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %88, i64 0, i32 0
  tail call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %79, %91
  %94 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = tail call %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.193"* %0, %"struct.WTF::KeyValuePair.196"* %81)
  br label %105

105:                                              ; preds = %50, %93, %103
  %106 = phi i8 [ 1, %93 ], [ 1, %103 ], [ 0, %50 ]
  %107 = phi %"struct.WTF::KeyValuePair.196"* [ %81, %93 ], [ %104, %103 ], [ %52, %50 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.196"*, i8 } undef, %"struct.WTF::KeyValuePair.196"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.196"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.196"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.193"*, %"struct.WTF::KeyValuePair.196"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.196"*
  %37 = call %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.193"* %0, %"struct.WTF::KeyValuePair.196"* %36, i32 %32, %"struct.WTF::KeyValuePair.196"* %1) #9
  ret %"struct.WTF::KeyValuePair.196"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.196"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN5blink5probe11AsyncTaskIdENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.193"*, %"struct.WTF::KeyValuePair.196"*, i32, %"struct.WTF::KeyValuePair.196"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.196"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.193"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.196"* %16 to i64
  br label %51

18:                                               ; preds = %148
  %19 = bitcast %"class.WTF::HashTable.193"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %149, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.196"* [ null, %10 ], [ %152, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %150, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.196"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %37, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %37, align 8
  %39 = icmp eq %"class.blink::probe::AsyncTaskId"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %38, i64 0, i32 0
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #9
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.193", %"class.WTF::HashTable.193"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.196"* %23

51:                                               ; preds = %13, %148
  %52 = phi i64 [ %17, %13 ], [ %149, %148 ]
  %53 = phi i32 [ %7, %13 ], [ %150, %148 ]
  %54 = phi %"struct.WTF::KeyValuePair.196"* [ %16, %13 ], [ %151, %148 ]
  %55 = phi %"struct.WTF::KeyValuePair.196"* [ null, %13 ], [ %152, %148 ]
  %56 = phi i32 [ 0, %13 ], [ %153, %148 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %148, label %62

62:                                               ; preds = %51
  %63 = shl i32 %59, 15
  %64 = xor i32 %63, -1
  %65 = add i32 %59, %64
  %66 = lshr i32 %65, 10
  %67 = xor i32 %66, %65
  %68 = mul i32 %67, 9
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 11
  %72 = xor i32 %71, -1
  %73 = add i32 %70, %72
  %74 = lshr i32 %73, 16
  %75 = xor i32 %74, %73
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %1, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.196"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %62
  %84 = xor i32 %75, -1
  %85 = lshr i32 %73, 23
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %106

97:                                               ; preds = %113
  %98 = ptrtoint %"struct.WTF::KeyValuePair.196"* %120 to i64
  %99 = inttoptr i64 %115 to %"struct.WTF::KeyValuePair.196"*
  br label %100

100:                                              ; preds = %97, %62
  %101 = phi i64 [ %98, %97 ], [ %79, %62 ]
  %102 = phi %"struct.WTF::KeyValuePair.196"* [ %99, %97 ], [ null, %62 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.196"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.196"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %125

106:                                              ; preds = %113, %83
  %107 = phi i64 [ 0, %83 ], [ %115, %113 ]
  %108 = phi i32 [ %81, %83 ], [ %123, %113 ]
  %109 = phi i64 [ %79, %83 ], [ %121, %113 ]
  %110 = phi i64 [ %77, %83 ], [ %119, %113 ]
  %111 = phi i64 [ 0, %83 ], [ %117, %113 ]
  %112 = icmp eq i32 %108, %59
  br i1 %112, label %125, label %113

113:                                              ; preds = %106
  %114 = icmp eq i32 %108, -1
  %115 = select i1 %114, i64 %109, i64 %107
  %116 = icmp eq i64 %111, 0
  %117 = select i1 %116, i64 %96, i64 %111
  %118 = add i64 %117, %110
  %119 = and i64 %118, %15
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %1, i64 %119
  %121 = ptrtoint %"struct.WTF::KeyValuePair.196"* %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %97, label %106

125:                                              ; preds = %106, %100
  %126 = phi i64 [ %105, %100 ], [ %109, %106 ]
  %127 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair.196"*
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.blink::probe::AsyncTaskId"*, %"class.blink::probe::AsyncTaskId"** %128, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %128, align 8
  %130 = icmp eq %"class.blink::probe::AsyncTaskId"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %129, i64 0, i32 0
  tail call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %127, i64 0, i32 0
  %135 = load i32, i32* %58, align 8
  store i32 %135, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %127, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %54, i64 %57, i32 1
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.197"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.blink::probe::AsyncTaskId"* null, %"class.blink::probe::AsyncTaskId"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.197"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = load %"struct.WTF::KeyValuePair.196"*, %"struct.WTF::KeyValuePair.196"** %9, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.196", %"struct.WTF::KeyValuePair.196"* %142, i64 %57
  %144 = icmp eq %"struct.WTF::KeyValuePair.196"* %143, %3
  %145 = select i1 %144, %"struct.WTF::KeyValuePair.196"* %127, %"struct.WTF::KeyValuePair.196"* %55
  %146 = load i32, i32* %6, align 8
  %147 = ptrtoint %"struct.WTF::KeyValuePair.196"* %142 to i64
  br label %148

148:                                              ; preds = %51, %133
  %149 = phi i64 [ %52, %51 ], [ %147, %133 ]
  %150 = phi i32 [ %53, %51 ], [ %146, %133 ]
  %151 = phi %"struct.WTF::KeyValuePair.196"* [ %54, %51 ], [ %142, %133 ]
  %152 = phi %"struct.WTF::KeyValuePair.196"* [ %55, %51 ], [ %145, %133 ]
  %153 = add i32 %56, 1
  %154 = icmp eq i32 %153, %150
  br i1 %154, label %18, label %51
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.203"*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.203"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.203"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.203"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.203", %"class.WTF::Vector.203"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.203"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.203"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.203"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #9
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #9
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_24V8XRFrameRequestCallbackEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #9
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair"*
  %49 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_24V8XRFrameRequestCallbackEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %48, i32 %45, %"struct.WTF::KeyValuePair"* null) #9
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 24, i32 33}
!5 = !{i8 0, i8 2}
