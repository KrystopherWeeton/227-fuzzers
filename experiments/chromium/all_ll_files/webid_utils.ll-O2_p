; ModuleID = '../../content/browser/webid/webid_utils.cc'
source_filename = "../../content/browser/webid/webid_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }

@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content25IsSameOriginWithAncestorsEPNS_15RenderFrameHostERKN3url6OriginE(%"class.content::RenderFrameHost"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 {
  %3 = bitcast %"class.content::RenderFrameHost"* %0 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %4 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %4, i64 20
  %6 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %5, align 8
  %7 = tail call %"class.content::RenderFrameHost"* %6(%"class.content::RenderFrameHost"* %0) #3
  %8 = icmp eq %"class.content::RenderFrameHost"* %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %2, %17
  %10 = phi %"class.content::RenderFrameHost"* [ %22, %17 ], [ %7, %2 ]
  %11 = bitcast %"class.content::RenderFrameHost"* %10 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %12 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %12, i64 36
  %14 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %13, align 8
  %15 = tail call dereferenceable(80) %"class.url::Origin"* %14(%"class.content::RenderFrameHost"* nonnull %10) #3
  %16 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %15, %"class.url::Origin"* dereferenceable(80) %1) #3
  br i1 %16, label %17, label %24

17:                                               ; preds = %9
  %18 = bitcast %"class.content::RenderFrameHost"* %10 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %19 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %19, i64 20
  %21 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %20, align 8
  %22 = tail call %"class.content::RenderFrameHost"* %21(%"class.content::RenderFrameHost"* nonnull %10) #3
  %23 = icmp eq %"class.content::RenderFrameHost"* %22, null
  br i1 %23, label %24, label %9

24:                                               ; preds = %9, %17, %2
  %25 = phi i1 [ true, %2 ], [ true, %17 ], [ false, %9 ]
  ret i1 %25
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13IdpUrlIsValidERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #3
  %7 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %6) #3
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
