; ModuleID = '../../third_party/blink/renderer/platform/peerconnection/rtc_ice_candidate_platform.cc'
source_filename = "../../third_party/blink/renderer/platform/peerconnection/rtc_ice_candidate_platform.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RTCIceCandidatePlatform" = type { %"class.WTF::String", %"class.WTF::String", %"class.absl::optional", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional", %"class.WTF::String", %"class.absl::optional.6", %"class.WTF::String", %"class.absl::optional", %"class.WTF::String" }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { i32 }
%"class.absl::optional.6" = type { %"class.absl::optional_internal::optional_data.7" }
%"class.absl::optional_internal::optional_data.7" = type { %"class.absl::optional_internal::optional_data_base.8" }
%"class.absl::optional_internal::optional_data_base.8" = type { %"class.absl::optional_internal::optional_data_dtor_base.9" }
%"class.absl::optional_internal::optional_data_dtor_base.9" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"class.WTF::String" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i16 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cricket::Candidate" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::SocketAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.rtc::SocketAddress", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string" }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.13, [4 x i8] }>
%union.anon.13 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.14 }
%union.anon.14 = type { [4 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.webrtc::SdpParseError" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN7cricket27ICE_CANDIDATE_COMPONENT_RTPE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [4 x i8] c"rtp\00", align 1
@_ZN7cricket28ICE_CANDIDATE_COMPONENT_RTCPE = external local_unnamed_addr constant i32, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"rtcp\00", align 1
@_ZN7cricket15LOCAL_PORT_TYPEE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@_ZN7cricket14STUN_PORT_TYPEE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"srflx\00", align 1
@_ZN7cricket15PRFLX_PORT_TYPEE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"prflx\00", align 1
@_ZN7cricket15RELAY_PORT_TYPEE = external constant [0 x i8], align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"relay\00", align 1

@_ZN5blink23RTCIceCandidatePlatformC1EN3WTF6StringES2_N4absl8optionalItEES2_ = hidden unnamed_addr alias void (%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32, %"class.WTF::StringImpl"*), void (%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32, %"class.WTF::StringImpl"*)* @_ZN5blink23RTCIceCandidatePlatformC2EN3WTF6StringES2_N4absl8optionalItEES2_
@_ZN5blink23RTCIceCandidatePlatformC1EN3WTF6StringES2_N4absl8optionalItEE = hidden unnamed_addr alias void (%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32), void (%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32)* @_ZN5blink23RTCIceCandidatePlatformC2EN3WTF6StringES2_N4absl8optionalItEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23RTCIceCandidatePlatformC2EN3WTF6StringES2_N4absl8optionalItEES2_(%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %7 = ptrtoint %"class.WTF::StringImpl"* %2 to i64
  %8 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %9 = bitcast %"class.blink::RTCIceCandidatePlatform"* %0 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 1
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast i8* %12 to i32*
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 13
  %21 = bitcast %"class.WTF::String"* %20 to i64*
  %22 = bitcast %"class.WTF::StringImpl"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 17, i1 false)
  %23 = bitcast %"class.WTF::StringImpl"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 17, i1 false)
  store i64 %8, i64* %21, align 8
  tail call void @_ZN5blink23RTCIceCandidatePlatform14PopulateFieldsEb(%"class.blink::RTCIceCandidatePlatform"* %0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23RTCIceCandidatePlatform14PopulateFieldsEb(%"class.blink::RTCIceCandidatePlatform"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.cricket::Candidate", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.cricket::Candidate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 440, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 440, i1 false)
  call void @_ZN7cricket9CandidateC1Ev(%"class.cricket::Candidate"* nonnull %5) #6
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %11, i32 0) #6
  %12 = call zeroext i1 @_ZN6webrtc14ParseCandidateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN7cricket9CandidateEPNS_13SdpParseErrorEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.cricket::Candidate"* nonnull %5, %"struct.webrtc::SdpParseError"* null, i1 zeroext true) #6
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #7
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  br i1 %12, label %21, label %370

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 12
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %30) #6
  %32 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %33 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 3
  %34 = bitcast %"class.WTF::String"* %33 to i64*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  store i64 %32, i64* %34, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #6
  br label %51

51:                                               ; preds = %50, %47, %21
  %52 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = load i32, i32* @_ZN7cricket27ICE_CANDIDATE_COMPONENT_RTPE, align 4
  %56 = icmp eq i32 %55, %53
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #6
  br label %64

58:                                               ; preds = %51
  %59 = load i32, i32* @_ZN7cricket28ICE_CANDIDATE_COMPONENT_RTCPE, align 4
  %60 = icmp eq i32 %59, %53
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #6
  br label %64

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  br label %64

64:                                               ; preds = %57, %61, %62
  %65 = bitcast %"class.WTF::String"* %4 to i64*
  %66 = load i64, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %67 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 4
  %68 = bitcast %"class.WTF::String"* %67 to i64*
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  store i64 %66, i64* %68, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #6
  br label %85

85:                                               ; preds = %84, %81, %64
  %86 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast i8* %88 to i64*
  %90 = zext i32 %87 to i64
  %91 = shl nuw i64 %90, 32
  %92 = or i64 %91, 1
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 2
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %101 = select i1 %97, i8* %99, i8* %100
  %102 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %101) #6
  %103 = ptrtoint %"class.WTF::StringImpl"* %102 to i64
  %104 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 7
  %105 = bitcast %"class.WTF::String"* %104 to i64*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %103, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %85
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #6
  br label %122

122:                                              ; preds = %121, %118, %85
  %123 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 4
  %124 = call zeroext i1 @_ZNK3rtc13SocketAddress5IsNilEv(%"class.rtc::SocketAddress"* %123) #6
  br i1 %124, label %166, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #6
  call void @_ZNK3rtc13SocketAddress15HostAsURIStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.rtc::SocketAddress"* %123) #6
  %127 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = select i1 %130, i8* %132, i8* %126
  %134 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %133) #6
  %135 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  %136 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 6
  %137 = bitcast %"class.WTF::String"* %136 to i64*
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store i64 %135, i64* %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #6
  br label %154

154:                                              ; preds = %153, %150, %125
  %155 = load i8, i8* %128, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  %158 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %158) #7
  br label %159

159:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #6
  %160 = call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %123) #6
  %161 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %162 = bitcast i8* %161 to i32*
  %163 = zext i16 %160 to i32
  %164 = shl nuw i32 %163, 16
  %165 = or i32 %164, 1
  store i32 %165, i32* %162, align 8
  br label %166

166:                                              ; preds = %159, %122
  %167 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 8
  %168 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168)
  %169 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15LOCAL_PORT_TYPEE, i64 0, i64 0)) #6
  %170 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  %174 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = zext i8 %172 to i64
  %177 = select i1 %173, i64 %175, i64 %176
  %178 = icmp eq i64 %169, %177
  br i1 %178, label %179, label %187

179:                                              ; preds = %166
  %180 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %167, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15LOCAL_PORT_TYPEE, i64 0, i64 0), i64 %169) #6
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = load i8, i8* %171, align 1
  %184 = load i64, i64* %174, align 8
  %185 = zext i8 %183 to i64
  br label %187

186:                                              ; preds = %179
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #6
  br label %233

187:                                              ; preds = %182, %166
  %188 = phi i64 [ %185, %182 ], [ %176, %166 ]
  %189 = phi i64 [ %184, %182 ], [ %175, %166 ]
  %190 = phi i8 [ %183, %182 ], [ %172, %166 ]
  %191 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket14STUN_PORT_TYPEE, i64 0, i64 0)) #6
  %192 = icmp slt i8 %190, 0
  %193 = select i1 %192, i64 %189, i64 %188
  %194 = icmp eq i64 %191, %193
  br i1 %194, label %195, label %203

195:                                              ; preds = %187
  %196 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %167, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket14STUN_PORT_TYPEE, i64 0, i64 0), i64 %191) #6
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %195
  %199 = load i8, i8* %171, align 1
  %200 = load i64, i64* %174, align 8
  %201 = zext i8 %199 to i64
  br label %203

202:                                              ; preds = %195
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #6
  br label %233

203:                                              ; preds = %198, %187
  %204 = phi i64 [ %201, %198 ], [ %188, %187 ]
  %205 = phi i64 [ %200, %198 ], [ %189, %187 ]
  %206 = phi i8 [ %199, %198 ], [ %190, %187 ]
  %207 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15PRFLX_PORT_TYPEE, i64 0, i64 0)) #6
  %208 = icmp slt i8 %206, 0
  %209 = select i1 %208, i64 %205, i64 %204
  %210 = icmp eq i64 %207, %209
  br i1 %210, label %211, label %219

211:                                              ; preds = %203
  %212 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %167, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15PRFLX_PORT_TYPEE, i64 0, i64 0), i64 %207) #6
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %218, label %214

214:                                              ; preds = %211
  %215 = load i8, i8* %171, align 1
  %216 = load i64, i64* %174, align 8
  %217 = zext i8 %215 to i64
  br label %219

218:                                              ; preds = %211
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5) #6
  br label %233

219:                                              ; preds = %214, %203
  %220 = phi i64 [ %217, %214 ], [ %204, %203 ]
  %221 = phi i64 [ %216, %214 ], [ %205, %203 ]
  %222 = phi i8 [ %215, %214 ], [ %206, %203 ]
  %223 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #6
  %224 = icmp slt i8 %222, 0
  %225 = select i1 %224, i64 %221, i64 %220
  %226 = icmp eq i64 %223, %225
  br i1 %226, label %227, label %231

227:                                              ; preds = %219
  %228 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %167, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %223) #6
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #6
  br label %233

231:                                              ; preds = %227, %219
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %232, align 8
  br label %233

233:                                              ; preds = %186, %202, %218, %230, %231
  %234 = bitcast %"class.WTF::String"* %3 to i64*
  %235 = load i64, i64* %234, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168)
  %236 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 9
  %237 = bitcast %"class.WTF::String"* %236 to i64*
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %236, i64 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  store i64 %235, i64* %237, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #6
  br label %254

254:                                              ; preds = %253, %250, %233
  %255 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 14
  %256 = bitcast %"class.std::__1::basic_string"* %255 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  %260 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = zext i8 %258 to i64
  %263 = select i1 %259, i64 %261, i64 %262
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %295, label %265

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = bitcast %"class.std::__1::basic_string"* %255 to i8*
  %269 = select i1 %259, i8* %267, i8* %268
  %270 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %269) #6
  %271 = ptrtoint %"class.WTF::StringImpl"* %270 to i64
  %272 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %273 = load i8, i8* %272, align 8, !range !2
  %274 = icmp eq i8 %273, 0
  %275 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %276 = bitcast %"class.WTF::String"* %275 to i64*
  br i1 %274, label %294, label %277

277:                                              ; preds = %265
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %275, i64 0, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  store i64 %271, i64* %276, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %295, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #6
  br label %295

294:                                              ; preds = %265
  store i64 %271, i64* %276, align 8
  store i8 1, i8* %272, align 8
  br label %295

295:                                              ; preds = %277, %290, %293, %294, %254
  %296 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 13
  %297 = call zeroext i1 @_ZNK3rtc13SocketAddress5IsNilEv(%"class.rtc::SocketAddress"* %296) #6
  br i1 %297, label %339, label %298

298:                                              ; preds = %295
  %299 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #6
  call void @_ZNK3rtc13SocketAddress15HostAsURIStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.rtc::SocketAddress"* %296) #6
  %300 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = select i1 %303, i8* %305, i8* %299
  %307 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %306) #6
  %308 = ptrtoint %"class.WTF::StringImpl"* %307 to i64
  %309 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 11
  %310 = bitcast %"class.WTF::String"* %309 to i64*
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %309, i64 0, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  store i64 %308, i64* %310, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %298
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #6
  br label %327

327:                                              ; preds = %326, %323, %298
  %328 = load i8, i8* %301, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  %331 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %331) #7
  br label %332

332:                                              ; preds = %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #6
  %333 = call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %296) #6
  %334 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %335 = bitcast i8* %334 to i32*
  %336 = zext i16 %333 to i32
  %337 = shl nuw i32 %336, 16
  %338 = or i32 %337, 1
  store i32 %338, i32* %335, align 8
  br label %339

339:                                              ; preds = %332, %295
  br i1 %1, label %340, label %370

340:                                              ; preds = %339
  %341 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %5, i64 0, i32 6
  %342 = bitcast %"class.std::__1::basic_string"* %341 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %343 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %342, i64 0, i32 1, i32 0
  %344 = load i8, i8* %343, align 1
  %345 = icmp slt i8 %344, 0
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %341, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = bitcast %"class.std::__1::basic_string"* %341 to i8*
  %349 = select i1 %345, i8* %347, i8* %348
  %350 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8* %349) #6
  %351 = ptrtoint %"class.WTF::StringImpl"* %350 to i64
  %352 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 13
  %353 = bitcast %"class.WTF::String"* %352 to i64*
  %354 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %352, i64 0, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  store i64 %351, i64* %353, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %340
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #6
  br label %370

370:                                              ; preds = %340, %366, %369, %339, %20
  call void @_ZN7cricket9CandidateD1Ev(%"class.cricket::Candidate"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 440, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23RTCIceCandidatePlatformC2EN3WTF6StringES2_N4absl8optionalItEE(%"class.blink::RTCIceCandidatePlatform"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i32) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %6 = ptrtoint %"class.WTF::StringImpl"* %2 to i64
  %7 = bitcast %"class.blink::RTCIceCandidatePlatform"* %0 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::String"* %8 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast i8* %10 to i32*
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.blink::RTCIceCandidatePlatform", %"class.blink::RTCIceCandidatePlatform"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 17, i1 false)
  %20 = bitcast %"class.WTF::StringImpl"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 17, i1 false)
  tail call void @_ZN5blink23RTCIceCandidatePlatform14PopulateFieldsEb(%"class.blink::RTCIceCandidatePlatform"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7cricket9CandidateC1Ev(%"class.cricket::Candidate"*) unnamed_addr #2

declare zeroext i1 @_ZN6webrtc14ParseCandidateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN7cricket9CandidateEPNS_13SdpParseErrorEb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.cricket::Candidate"*, %"struct.webrtc::SdpParseError"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK3rtc13SocketAddress5IsNilEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #2

declare void @_ZNK3rtc13SocketAddress15HostAsURIStringEv(%"class.std::__1::basic_string"* sret, %"class.rtc::SocketAddress"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7cricket9CandidateD1Ev(%"class.cricket::Candidate"*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKh(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
