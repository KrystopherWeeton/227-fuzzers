; ModuleID = 'gen/third_party/blink/public/mojom/frame/intrinsic_sizing_info.mojom-blink.cc'
source_filename = "gen/third_party/blink/public/mojom/frame/intrinsic_sizing_info.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::IntrinsicSizingInfo" = type <{ %"class.gfx::SizeF", %"class.gfx::SizeF", i8, i8, [2 x i8] }>
%"class.gfx::SizeF" = type { float, float }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.blink::mojom::internal::IntrinsicSizingInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", i8, [7 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::mojom::blink::IntrinsicSizingInfo"* }

@.str = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"aspect_ratio\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"has_width\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"has_height\00", align 1

@_ZN5blink5mojom5blink19IntrinsicSizingInfoC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*), void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*)* @_ZN5blink5mojom5blink19IntrinsicSizingInfoC2Ev
@_ZN5blink5mojom5blink19IntrinsicSizingInfoC1ERKN3gfx5SizeFES6_bb = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*, %"class.gfx::SizeF"*, %"class.gfx::SizeF"*, i1, i1), void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*, %"class.gfx::SizeF"*, %"class.gfx::SizeF"*, i1, i1)* @_ZN5blink5mojom5blink19IntrinsicSizingInfoC2ERKN3gfx5SizeFES6_bb
@_ZN5blink5mojom5blink19IntrinsicSizingInfoD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*), void (%"class.blink::mojom::blink::IntrinsicSizingInfo"*)* @_ZN5blink5mojom5blink19IntrinsicSizingInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink19IntrinsicSizingInfoC2Ev(%"class.blink::mojom::blink::IntrinsicSizingInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 18, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink19IntrinsicSizingInfoC2ERKN3gfx5SizeFES6_bb(%"class.blink::mojom::blink::IntrinsicSizingInfo"* nocapture, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8), %"class.gfx::SizeF"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #1 align 2 {
  %6 = zext i1 %3 to i8
  %7 = zext i1 %4 to i8
  %8 = bitcast %"class.gfx::SizeF"* %1 to i64*
  %9 = bitcast %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.blink::mojom::blink::IntrinsicSizingInfo", %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0, i64 0, i32 1
  %12 = bitcast %"class.gfx::SizeF"* %2 to i64*
  %13 = bitcast %"class.gfx::SizeF"* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  %15 = getelementptr inbounds %"class.blink::mojom::blink::IntrinsicSizingInfo", %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0, i64 0, i32 2
  store i8 %6, i8* %15, align 4
  %16 = getelementptr inbounds %"class.blink::mojom::blink::IntrinsicSizingInfo", %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0, i64 0, i32 3
  store i8 %7, i8* %16, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink19IntrinsicSizingInfoD2Ev(%"class.blink::mojom::blink::IntrinsicSizingInfo"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom5blink19IntrinsicSizingInfo14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::blink::IntrinsicSizingInfo"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 7, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %17 = getelementptr inbounds i8, i8* %14, i64 7
  store i8 0, i8* %17, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #8
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #8
  %24 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 7, i8* %26, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %27 = getelementptr inbounds i8, i8* %24, i64 7
  store i8 0, i8* %27, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #8
  %28 = load i8, i8* %26, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %23, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #8
  %34 = getelementptr inbounds %"class.blink::mojom::blink::IntrinsicSizingInfo", %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0, i64 0, i32 2
  %35 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %36 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %35, i64 16, i1 false) #8
  %37 = load i8, i8* %34, align 1, !range !2
  %38 = icmp ne i8 %37, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %3, i1 zeroext %38) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #8
  %39 = getelementptr inbounds %"class.blink::mojom::blink::IntrinsicSizingInfo", %"class.blink::mojom::blink::IntrinsicSizingInfo"* %0, i64 0, i32 3
  %40 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %41 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %40, i64 16, i1 false) #8
  %42 = load i8, i8* %39, align 1, !range !2
  %43 = icmp ne i8 %42, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %4, i1 zeroext %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #5

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom5blink19IntrinsicSizingInfo8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal24IntrinsicSizingInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal24IntrinsicSizingInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom27IntrinsicSizingInfoDataViewENS_9StructPtrINS2_5blink19IntrinsicSizingInfoEEEE4ReadES3_PS7_(%"class.blink::mojom::internal::IntrinsicSizingInfo_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #4 align 2 {
  %4 = tail call i8* @_Znwm(i64 20) #9, !noalias !3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 18, i1 false) #8, !noalias !3
  %5 = ptrtoint i8* %4 to i64
  %6 = getelementptr inbounds %"class.blink::mojom::internal::IntrinsicSizingInfo_Data", %"class.blink::mojom::internal::IntrinsicSizingInfo_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = bitcast %"struct.mojo::internal::Pointer"* %6 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  br i1 %9, label %30, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to float*
  %15 = load float, float* %14, align 1
  %16 = fcmp olt float %15, 0.000000e+00
  br i1 %16, label %64, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %11, i64 12
  %19 = bitcast i8* %18 to float*
  %20 = load float, float* %19, align 1
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %64, label %22

22:                                               ; preds = %17
  %23 = fcmp ogt float %15, 0x3EB0000000000000
  %24 = select i1 %23, float %15, float 0.000000e+00
  %25 = bitcast i8* %4 to float*
  store float %24, float* %25, align 4
  %26 = fcmp ogt float %20, 0x3EB0000000000000
  %27 = select i1 %26, float %20, float 0.000000e+00
  %28 = getelementptr inbounds i8, i8* %4, i64 4
  %29 = bitcast i8* %28 to float*
  store float %27, float* %29, align 4
  br label %30

30:                                               ; preds = %3, %22
  %31 = getelementptr inbounds i8, i8* %4, i64 8
  %32 = getelementptr inbounds %"class.blink::mojom::internal::IntrinsicSizingInfo_Data", %"class.blink::mojom::internal::IntrinsicSizingInfo_Data"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %32, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  %36 = bitcast %"struct.mojo::internal::Pointer"* %32 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %34
  br i1 %35, label %56, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to float*
  %41 = load float, float* %40, align 1
  %42 = fcmp olt float %41, 0.000000e+00
  br i1 %42, label %64, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %37, i64 12
  %45 = bitcast i8* %44 to float*
  %46 = load float, float* %45, align 1
  %47 = fcmp olt float %46, 0.000000e+00
  br i1 %47, label %64, label %48

48:                                               ; preds = %43
  %49 = fcmp ogt float %41, 0x3EB0000000000000
  %50 = select i1 %49, float %41, float 0.000000e+00
  %51 = bitcast i8* %31 to float*
  store float %50, float* %51, align 4
  %52 = fcmp ogt float %46, 0x3EB0000000000000
  %53 = select i1 %52, float %46, float 0.000000e+00
  %54 = getelementptr inbounds i8, i8* %4, i64 12
  %55 = bitcast i8* %54 to float*
  store float %53, float* %55, align 4
  br label %56

56:                                               ; preds = %48, %30
  %57 = getelementptr inbounds %"class.blink::mojom::internal::IntrinsicSizingInfo_Data", %"class.blink::mojom::internal::IntrinsicSizingInfo_Data"* %0, i64 0, i32 3
  %58 = load i8, i8* %57, align 1
  %59 = and i8 %58, 1
  %60 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 %59, i8* %60, align 4
  %61 = getelementptr inbounds i8, i8* %4, i64 17
  %62 = lshr i8 %58, 1
  %63 = and i8 %62, 1
  store i8 %63, i8* %61, align 1
  br label %64

64:                                               ; preds = %17, %12, %43, %38, %56
  %65 = phi i1 [ true, %56 ], [ false, %38 ], [ false, %43 ], [ false, %12 ], [ false, %17 ]
  %66 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::mojom::blink::IntrinsicSizingInfo"*, %"class.blink::mojom::blink::IntrinsicSizingInfo"** %66, align 8
  store %"class.blink::mojom::blink::IntrinsicSizingInfo"* null, %"class.blink::mojom::blink::IntrinsicSizingInfo"** %66, align 8
  %68 = icmp eq %"class.blink::mojom::blink::IntrinsicSizingInfo"* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %70, align 8
  br label %78

71:                                               ; preds = %64
  %72 = bitcast %"class.blink::mojom::blink::IntrinsicSizingInfo"* %67 to i8*
  tail call void @_ZdlPv(i8* %72) #9
  %73 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %74 = load %"class.blink::mojom::blink::IntrinsicSizingInfo"*, %"class.blink::mojom::blink::IntrinsicSizingInfo"** %66, align 8
  store i64 %5, i64* %73, align 8
  %75 = icmp eq %"class.blink::mojom::blink::IntrinsicSizingInfo"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.blink::mojom::blink::IntrinsicSizingInfo"* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %69, %71, %76
  ret i1 %65
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom5blink19IntrinsicSizingInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom5blink19IntrinsicSizingInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
