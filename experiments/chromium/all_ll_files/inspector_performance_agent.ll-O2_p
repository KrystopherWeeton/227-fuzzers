; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_performance_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_performance_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.280" }
%"struct.std::__1::atomic.280" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__cxx_atomic_impl.283" }
%"struct.std::__1::__cxx_atomic_impl.283" = type { %"struct.std::__1::__cxx_atomic_base_impl.284" }
%"struct.std::__1::__cxx_atomic_base_impl.284" = type { i32 }
%"class.blink::InspectorPerformanceAgent" = type { %"class.blink::InspectorBaseAgent", %"class.base::sequence_manager::TaskTimeObserver", %"class.blink::Member.233", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i64, i32, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Performance::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Performance::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.578", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.237", %"class.WTF::Vector.582", i32, [4 x i8], %"class.blink::HeapHashMap.587", i32, i8, [3 x i8] }>
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.496", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.510", %"class.blink::FrameLoader", %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::Member.567", %"class.blink::Member.569", %"class.blink::Member.571", %"class.blink::Member.573", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.575, %"class.blink::Member.576", %"class.blink::Member.578", %"class.blink::Member.594", %"class.blink::Member.596", %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.606", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.627", %"class.std::__1::unique_ptr.628", %"class.absl::optional.480", i32, [4 x i8], %"class.std::__1::unique_ptr.634", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.642", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.647", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.652", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.655", %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.661", %"class.mojo::StructPtr.664", %"class.blink::Member.672", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.674", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.243", %"class.blink::Member.245", %"class.blink::Member.247", i8, i32, i8, i32, %"class.blink::Member.465", %"class.blink::Member.270", %"class.blink::FrameLifecycle", %"class.blink::Member.241", %"class.blink::Member.241", %"class.blink::Member.241", %"class.blink::Member.241", %"class.blink::Member.241", %"class.blink::Member.241", %"class.blink::Member.237", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.473", i8, %"class.base::UnguessableToken", %"class.absl::optional.475", %"class.absl::optional.480", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.241", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.241", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.274", i8, %"class.WTF::Vector.276" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.263" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.255" }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257", [32 x i8] }
%"class.WTF::VectorBufferBase.257" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.258" }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::HeapVector.260"* }
%"class.blink::HeapVector.260" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.WTF::Vector.266"* }
%"class.WTF::Vector.266" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.457" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.279, %"class.std::__1::unique_ptr.407", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.285, i32 }>
%class.scoped_refptr.279 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.285, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.373", %"class.absl::optional.378", %"class.absl::optional.335", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.398", i8, [7 x i8], %class.scoped_refptr.285, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.280" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.289 }
%union.anon.289 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.297", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.304", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.304" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.305" }
%"struct.std::__1::atomic.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__cxx_atomic_impl.308" }
%"struct.std::__1::__cxx_atomic_impl.308" = type { %"struct.std::__1::__cxx_atomic_base_impl.309" }
%"struct.std::__1::__cxx_atomic_base_impl.309" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.285, %"class.std::__1::unique_ptr.312", %"class.absl::optional.321", %"struct.std::__1::atomic.331", i8, i8, i8, i8, i32, i32, %"class.absl::optional.335", %"class.std::__1::unique_ptr.340", i8, i64, %class.scoped_refptr.369, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.372" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.311", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.285, i8, %"class.mojo::ScopedHandleBase.315", %class.scoped_refptr.316, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.317" }
%"class.mojo::ScopedHandleBase.315" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.316 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.317" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.321" = type { %"class.absl::optional_internal::optional_data.322" }
%"class.absl::optional_internal::optional_data.322" = type { %"class.absl::optional_internal::optional_data_base.323" }
%"class.absl::optional_internal::optional_data_base.323" = type { %"class.absl::optional_internal::optional_data_dtor_base.324" }
%"class.absl::optional_internal::optional_data_dtor_base.324" = type { i8, %union.anon.325 }
%union.anon.325 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.326", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.326" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.343", i8, i64, %class.scoped_refptr.344, %class.scoped_refptr.365 }
%"class.base::RepeatingCallback.343" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.344 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.354", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { i64 }
%"class.std::__1::map.354" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%class.scoped_refptr.365 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.369 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2007", [4 x i8], %"class.base::RepeatingCallback.410", %class.scoped_refptr.285, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2007" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.410" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.371 }
%class.scoped_refptr.371 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.372" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.373" = type { %"class.absl::optional_internal::optional_data.374" }
%"class.absl::optional_internal::optional_data.374" = type { %"class.absl::optional_internal::optional_data_base.375" }
%"class.absl::optional_internal::optional_data_base.375" = type { %"class.absl::optional_internal::optional_data_dtor_base.376" }
%"class.absl::optional_internal::optional_data_dtor_base.376" = type { i8, %union.anon.377 }
%union.anon.377 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.378" = type { %"class.absl::optional_internal::optional_data.379" }
%"class.absl::optional_internal::optional_data.379" = type { %"class.absl::optional_internal::optional_data_base.380" }
%"class.absl::optional_internal::optional_data_base.380" = type { %"class.absl::optional_internal::optional_data_dtor_base.381" }
%"class.absl::optional_internal::optional_data_dtor_base.381" = type { i8, [7 x i8], %union.anon.382 }
%union.anon.382 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.335" = type { %"class.absl::optional_internal::optional_data.336" }
%"class.absl::optional_internal::optional_data.336" = type { %"class.absl::optional_internal::optional_data_base.337" }
%"class.absl::optional_internal::optional_data_base.337" = type { %"class.absl::optional_internal::optional_data_dtor_base.338" }
%"class.absl::optional_internal::optional_data_dtor_base.338" = type { i8, %union.anon.339 }
%union.anon.339 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.383 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.383 = type { %"class.std::__1::map.386" }
%"class.std::__1::map.386" = type { %"class.std::__1::__tree.387" }
%"class.std::__1::__tree.387" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.397"*, i64 }
%"class.std::__1::unique_ptr.397" = type opaque
%"class.std::__1::map.398" = type { %"class.std::__1::__tree.399" }
%"class.std::__1::__tree.399" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.410", %"class.base::OnceCallback.411", %"class.absl::optional.412", %"class.absl::optional.417", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.424", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.432", %"class.std::__1::map.443", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.452", i8, %class.scoped_refptr.285, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.453" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.411" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.412" = type { %"class.absl::optional_internal::optional_data.413" }
%"class.absl::optional_internal::optional_data.413" = type { %"class.absl::optional_internal::optional_data_base.414" }
%"class.absl::optional_internal::optional_data_base.414" = type { %"class.absl::optional_internal::optional_data_dtor_base.415" }
%"class.absl::optional_internal::optional_data_dtor_base.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { %"class.base::TimeDelta" }
%"class.absl::optional.417" = type { %"class.absl::optional_internal::optional_data.418" }
%"class.absl::optional_internal::optional_data.418" = type { %"class.absl::optional_internal::optional_data_base.419" }
%"class.absl::optional_internal::optional_data_base.419" = type { %"class.absl::optional_internal::optional_data_dtor_base.420" }
%"class.absl::optional_internal::optional_data_dtor_base.420" = type { i8, %union.anon.421 }
%union.anon.421 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.285, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.422" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.422" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.423 }
%class.scoped_refptr.423 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.427", %class.scoped_refptr.428 }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.428 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.432" = type { %"class.std::__1::__tree.433" }
%"class.std::__1::__tree.433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::map.443" = type { %"class.std::__1::__tree.444" }
%"class.std::__1::__tree.444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.base::OnceCallback.452" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.453" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.285 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.286" }>
%"class.base::RefCountedThreadSafe.286" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.241", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.467"*, %"struct.std::__1::pair.467"*, %"class.std::__1::__compressed_pair.468" }
%"struct.std::__1::pair.467" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::pair.467"* }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.475" = type { %"class.absl::optional_internal::optional_data.476" }
%"class.absl::optional_internal::optional_data.476" = type { %"class.absl::optional_internal::optional_data_base.477" }
%"class.absl::optional_internal::optional_data_base.477" = type { %"class.absl::optional_internal::optional_data_dtor_base.478" }
%"class.absl::optional_internal::optional_data_dtor_base.478" = type { i8, %union.anon.479 }
%union.anon.479 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.492" }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.499", %"class.base::WeakPtrFactory.504" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.base::WeakPtrFactory.504" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.508" }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2143" }
%"class.blink::WeakMember.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1225" }
%"class.blink::HeapObserverSet.1225" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1226" }
%"class.blink::HeapHashSet.1226" = type { %"class.WTF::HashSet.1229" }
%"class.WTF::HashSet.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"class.blink::WeakMember.1232"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1232" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.410", %"class.base::RepeatingCallback.2145", i64, %"class.std::__1::map.2146", i8*, i64, %"class.base::WeakPtrFactory.2155" }
%"class.base::RepeatingCallback.2145" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2146" = type { %"class.std::__1::__tree.2147" }
%"class.std::__1::__tree.2147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2148", %"class.std::__1::__compressed_pair.2152" }
%"class.std::__1::__compressed_pair.2148" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.2152" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.base::WeakPtrFactory.2155" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.510" = type { %"class.WTF::HashSet.513" }
%"class.WTF::HashSet.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"class.blink::WeakMember.516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.516" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.237", %"class.blink::Member.517", %"class.blink::Member.519", %"class.std::__1::unique_ptr.521", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.533" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1667", %"class.blink::Member.1672", %"class.std::__1::unique_ptr.1674", %"class.std::__1::unique_ptr.1318", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1856, %"class.WTF::AtomicString", i32, %"class.absl::optional.1754", %class.scoped_refptr.1249, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1719", i8, %"class.absl::optional.1726", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.237", %"class.blink::Member.1857", %"class.blink::Member.778", %"class.blink::Member.1929", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1931", %class.scoped_refptr.1241, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1944", %"class.std::__1::unique_ptr.1731", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1946", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1951, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1965, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1966", %"class.blink::Member.1981", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1994", %"class.WTF::Vector.1350", i8, i8, i8, %"class.blink::WebVector.1845", %"class.blink::WebVector.1845", %"class.mojo::Remote.1999" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1667" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1678", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1719", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1726", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1731", %"class.base::UnguessableToken", %"class.blink::WebVector.1737", %"class.base::TickClock"*, %"class.blink::WebVector.1746", %"class.absl::optional.1754", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1759", %"class.blink::WebVector", i8, %"class.blink::WebVector.1778", i8, %"class.std::__1::unique_ptr.1786", %"class.blink::WebVector.1845", %"class.blink::WebVector.1845" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector.1678" = type { %"class.std::__1::vector.1679" }
%"class.std::__1::vector.1679" = type { %"class.std::__1::__vector_base.1680" }
%"class.std::__1::__vector_base.1680" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1714" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1715" }
%"struct.std::__1::__compressed_pair_elem.1715" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1681", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1725", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1725" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1677" }
%"class.blink::WebPrivatePtr.1677" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1737" = type { %"class.std::__1::vector.1738" }
%"class.std::__1::vector.1738" = type { %"class.std::__1::__vector_base.1739" }
%"class.std::__1::__vector_base.1739" = type { %"class.std::__1::unique_ptr.1740"*, %"class.std::__1::unique_ptr.1740"*, %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::unique_ptr.1740" = type opaque
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.std::__1::unique_ptr.1740"* }
%"class.blink::WebVector.1746" = type { %"class.std::__1::vector.1747" }
%"class.std::__1::vector.1747" = type { %"class.std::__1::__vector_base.1748" }
%"class.std::__1::__vector_base.1748" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1749" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1759" = type { %"class.absl::optional_internal::optional_data.1760" }
%"class.absl::optional_internal::optional_data.1760" = type { %"class.absl::optional_internal::optional_data_base.1761" }
%"class.absl::optional_internal::optional_data_base.1761" = type { %"class.absl::optional_internal::optional_data_dtor_base.1762" }
%"class.absl::optional_internal::optional_data_dtor_base.1762" = type { i8, [7 x i8], %union.anon.1763 }
%union.anon.1763 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.611" }
%"class.std::__1::vector.611" = type { %"class.std::__1::__vector_base.612" }
%"class.std::__1::__vector_base.612" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1778" = type { %"class.std::__1::vector.1779" }
%"class.std::__1::vector.1779" = type { %"class.std::__1::__vector_base.1780" }
%"class.std::__1::__vector_base.1780" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.1782" }
%"struct.std::__1::__compressed_pair_elem.1782" = type { i32* }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1789" }
%"class.blink::WebVector.1789" = type { %"class.std::__1::vector.1790" }
%"class.std::__1::vector.1790" = type { %"class.std::__1::__vector_base.1791" }
%"class.std::__1::__vector_base.1791" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1837" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1792", %"class.blink::WebVector.1800", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1832", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1792" = type { %"class.std::__1::vector.1793" }
%"class.std::__1::vector.1793" = type { %"class.std::__1::__vector_base.1794" }
%"class.std::__1::__vector_base.1794" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1795" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1800" = type { %"class.std::__1::vector.1801" }
%"class.std::__1::vector.1801" = type { %"class.std::__1::__vector_base.1802" }
%"class.std::__1::__vector_base.1802" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1827" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1803", %"class.blink::WebVector", %"class.blink::WebVector.1811", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1803" = type { %"class.std::__1::vector.1804" }
%"class.std::__1::vector.1804" = type { %"class.std::__1::__vector_base.1805" }
%"class.std::__1::__vector_base.1805" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1811" = type { %"class.std::__1::vector.1812" }
%"class.std::__1::vector.1812" = type { %"class.std::__1::__vector_base.1813" }
%"class.std::__1::__vector_base.1813" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1822" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1814" }
%"class.blink::WebVector.1814" = type { %"class.std::__1::vector.1815" }
%"class.std::__1::vector.1815" = type { %"class.std::__1::__vector_base.1816" }
%"class.std::__1::__vector_base.1816" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { i8* }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1832" = type { %"class.absl::optional_internal::optional_data.1833" }
%"class.absl::optional_internal::optional_data.1833" = type { %"class.absl::optional_internal::optional_data_base.1834" }
%"class.absl::optional_internal::optional_data_base.1834" = type { %"class.absl::optional_internal::optional_data_dtor_base.1835" }
%"class.absl::optional_internal::optional_data_dtor_base.1835" = type { i8, [7 x i8], %union.anon.1836 }
%union.anon.1836 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1321", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1321" = type { %"class.std::__1::unique_ptr.1322" }
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1325" }
%"class.WTF::Vector.1325" = type { %"class.WTF::VectorBuffer.1326" }
%"class.WTF::VectorBuffer.1326" = type { %"class.WTF::VectorBufferBase.1327" }
%"class.WTF::VectorBufferBase.1327" = type { %"class.mojo::StructPtr.1328"*, i32, i32 }
%"class.mojo::StructPtr.1328" = type { %"class.std::__1::unique_ptr.1329" }
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1332", %"class.WTF::HashMap.1339", %"class.WTF::HashMap.1344", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1349", i8, %"class.WTF::Vector.1350", i32, %"class.mojo::StructPtr.1355", %"class.WTF::Vector.1350" }
%"class.mojo::StructPtr.1332" = type { %"class.std::__1::unique_ptr.1333" }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1339" = type { %"class.WTF::HashTable.1340" }
%"class.WTF::HashTable.1340" = type <{ %"struct.WTF::KeyValuePair.1343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1343" = type opaque
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type opaque
%"class.mojo::InlinedStructPtr.1349" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1355" = type { %"class.std::__1::unique_ptr.1356" }
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1350", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1370" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.407", i32 }>
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.1856 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, %union.anon.1758 }
%union.anon.1758 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.1249 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1242", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1244", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1249 }
%"class.WTF::RefCounted.1242" = type { %"class.base::RefCounted.1243" }
%"class.base::RefCounted.1243" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1244" = type { %"class.absl::optional_internal::optional_data.1245" }
%"class.absl::optional_internal::optional_data.1245" = type { %"class.absl::optional_internal::optional_data_base.1246" }
%"class.absl::optional_internal::optional_data_base.1246" = type { %"class.absl::optional_internal::optional_data_dtor_base.1247" }
%"class.absl::optional_internal::optional_data_dtor_base.1247" = type { i8, %union.anon.1248 }
%union.anon.1248 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1726" = type { %"class.absl::optional_internal::optional_data.1727" }
%"class.absl::optional_internal::optional_data.1727" = type { %"class.absl::optional_internal::optional_data_base.1728" }
%"class.absl::optional_internal::optional_data_base.1728" = type { %"class.absl::optional_internal::optional_data_dtor_base.1729" }
%"class.absl::optional_internal::optional_data_dtor_base.1729" = type { i8, %union.anon.1730 }
%union.anon.1730 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1764", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1764" = type { %"class.std::__1::__vector_base.1765" }
%"class.std::__1::__vector_base.1765" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1773" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1766", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1766" = type { %"class.std::__1::__vector_base.1767" }
%"class.std::__1::__vector_base.1767" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1768" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1244" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.1769" }
%"struct.std::__1::__compressed_pair_elem.1769" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1350", %"class.blink::Member.1861", %"class.absl::optional.1863", i64, i64, i32, %class.scoped_refptr.1868, %class.scoped_refptr.1856, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1868 }
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1863" = type { %"class.absl::optional_internal::optional_data.1864" }
%"class.absl::optional_internal::optional_data.1864" = type { %"class.absl::optional_internal::optional_data_base.1865" }
%"class.absl::optional_internal::optional_data_base.1865" = type { %"class.absl::optional_internal::optional_data_dtor_base.1866" }
%"class.absl::optional_internal::optional_data_dtor_base.1866" = type { i8, %union.anon.1867 }
%union.anon.1867 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1868 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1870", i64, %"class.WTF::Vector.1873", %"class.WTF::Vector.1878", %"class.WTF::Vector.1884", %"class.WTF::Vector.1902", %class.scoped_refptr.1241, %"class.WTF::HashMap.1908", %"class.WTF::Vector.1913", %"class.WTF::Vector.1873", %"class.WTF::Vector.1919", %"class.WTF::HashMap.1924", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1869" }
%"class.base::RefCountedThreadSafe.1869" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880", [8 x i8] }
%"class.WTF::VectorBufferBase.1880" = type { %class.scoped_refptr.1881*, i32, i32 }
%class.scoped_refptr.1881 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1888", %"class.std::__1::unique_ptr.1894" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1887 }
%class.scoped_refptr.1887 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1888" = type { %"class.std::__1::__compressed_pair.1889" }
%"class.std::__1::__compressed_pair.1889" = type { %"struct.std::__1::__compressed_pair_elem.1890" }
%"struct.std::__1::__compressed_pair_elem.1890" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1894" = type { %"class.std::__1::__compressed_pair.1895" }
%"class.std::__1::__compressed_pair.1895" = type { %"struct.std::__1::__compressed_pair_elem.1896" }
%"struct.std::__1::__compressed_pair_elem.1896" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1905", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1905" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %"struct.WTF::KeyValuePair.1912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1912" = type opaque
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"class.mojo::ScopedHandleBase.1916"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1916" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875", [16 x i8] }
%"class.WTF::VectorBufferBase.1875" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1919" = type { %"class.WTF::VectorBuffer.1920" }
%"class.WTF::VectorBuffer.1920" = type { %"class.WTF::VectorBufferBase.1921" }
%"class.WTF::VectorBufferBase.1921" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1924" = type { %"class.WTF::HashTable.1925" }
%"class.WTF::HashTable.1925" = type <{ %"struct.WTF::KeyValuePair.1928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1928" = type { i8**, %"class.std::__1::unique_ptr.2130" }
%"class.std::__1::unique_ptr.2130" = type { %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.2132" }
%"struct.std::__1::__compressed_pair_elem.2132" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1690", %class.scoped_refptr.1704, %class.scoped_refptr.1705, %"struct.blink::CacheControlHeader", %"class.absl::optional.412", %"class.absl::optional.1636", %"class.absl::optional.1636", %"class.absl::optional.1636", i64, %"class.blink::KURL", %"class.WTF::Vector.1667", %"class.WTF::String", %"class.WTF::Vector.1350", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.480", %"class.WTF::Vector.1350", %"class.blink::KURL", %"class.absl::optional.1706" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1684" }
%"class.WTF::HashMap.1684" = type { %"class.WTF::HashTable.1685" }
%"class.WTF::HashTable.1685" = type <{ %"struct.WTF::KeyValuePair.1688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1688" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1689", i8 }
%"struct.std::__1::array.1689" = type { [16 x i8] }
%"class.absl::optional.1690" = type { %"class.absl::optional_internal::optional_data.1691" }
%"class.absl::optional_internal::optional_data.1691" = type { %"class.absl::optional_internal::optional_data_base.1692" }
%"class.absl::optional_internal::optional_data_base.1692" = type { %"class.absl::optional_internal::optional_data_dtor_base.1693" }
%"class.absl::optional_internal::optional_data_dtor_base.1693" = type { i8, %union.anon.1694 }
%union.anon.1694 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1350", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1695", %"class.WTF::Vector.1699" }
%"class.WTF::Vector.1695" = type { %"class.WTF::VectorBuffer.1696" }
%"class.WTF::VectorBuffer.1696" = type { %"class.WTF::VectorBufferBase.564" }
%"class.WTF::VectorBufferBase.564" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1699" = type { %"class.WTF::VectorBuffer.1700" }
%"class.WTF::VectorBuffer.1700" = type { %"class.WTF::VectorBufferBase.1701" }
%"class.WTF::VectorBufferBase.1701" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1704 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1705 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.412", %"class.absl::optional.412" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1629" }
%"class.base::time_internal::TimeBase.1629" = type { i64 }
%"class.absl::optional.1706" = type { %"class.absl::optional_internal::optional_data.1707" }
%"class.absl::optional_internal::optional_data.1707" = type { %"class.absl::optional_internal::optional_data_base.1708" }
%"class.absl::optional_internal::optional_data_base.1708" = type { %"class.absl::optional_internal::optional_data_dtor_base.1709" }
%"class.absl::optional_internal::optional_data_dtor_base.1709" = type { i8, %union.anon.1710 }
%union.anon.1710 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.1931" = type { %"class.mojo::internal::InterfacePtrState.1932" }
%"class.mojo::internal::InterfacePtrState.1932" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1933" }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1241 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.412", %"class.absl::optional.412", %"class.absl::optional.412", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1939", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.519" }
%"class.WTF::Vector.1939" = type { %"class.WTF::VectorBuffer.1940" }
%"class.WTF::VectorBuffer.1940" = type { %"class.WTF::VectorBufferBase.1941" }
%"class.WTF::VectorBufferBase.1941" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1280" }
%"class.base::flat_map.1280" = type { %"class.base::internal::flat_tree.1281" }
%"class.base::internal::flat_tree.1281" = type { %"class.std::__1::vector.1282" }
%"class.std::__1::vector.1282" = type { %"class.std::__1::__vector_base.1283" }
%"class.std::__1::__vector_base.1283" = type { %"struct.std::__1::pair.1284"*, %"struct.std::__1::pair.1284"*, %"class.std::__1::__compressed_pair.1285" }
%"struct.std::__1::pair.1284" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"struct.std::__1::pair.1284"* }
%"class.WTF::Vector.1946" = type { %"class.WTF::VectorBuffer.1947" }
%"class.WTF::VectorBuffer.1947" = type { %"class.WTF::VectorBufferBase.1948" }
%"class.WTF::VectorBufferBase.1948" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1951 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1952", i64, %"class.WTF::Vector.1954", %"class.WTF::Vector.1959" }
%"class.WTF::RefCounted.1952" = type { %"class.base::RefCounted.1953" }
%"class.base::RefCounted.1953" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { i8*, i32, i32 }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"class.std::__1::unique_ptr.1962"*, i32, i32 }
%"class.std::__1::unique_ptr.1962" = type opaque
%class.scoped_refptr.1965 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1970", %"class.std::__1::unique_ptr.1975", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1970" = type { %"class.WTF::HashTable.1971" }
%"class.WTF::HashTable.1971" = type <{ %"struct.WTF::KeyValuePair.1974"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1974" = type { %"class.WTF::Vector.2203", %class.scoped_refptr.2207 }
%"class.WTF::Vector.2203" = type { %"class.WTF::VectorBuffer.2204" }
%"class.WTF::VectorBuffer.2204" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%class.scoped_refptr.2207 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2208", %"class.WTF::Vector.219", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2208" = type { %"class.base::RefCounted.2209" }
%"class.base::RefCounted.2209" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2210", i64, %"class.absl::optional.2215" }
%"class.std::__1::unique_ptr.2210" = type { %"class.std::__1::__compressed_pair.2211" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"class.absl::optional.2215" = type { %"class.absl::optional_internal::optional_data.2216" }
%"class.absl::optional_internal::optional_data.2216" = type { %"class.absl::optional_internal::optional_data_base.2217" }
%"class.absl::optional_internal::optional_data_base.2217" = type { %"class.absl::optional_internal::optional_data_dtor_base.2218" }
%"class.absl::optional_internal::optional_data_dtor_base.2218" = type { i8, %union.anon.2219 }
%union.anon.2219 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2220", %"class.std::__1::unique_ptr.2221" }
%"class.mojo::ScopedHandleBase.2220" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2221" = type { %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { i8* }
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.524" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1987" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1983", %"class.std::__1::bitset.1983", %"class.std::__1::bitset.1985" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1983" = type { %"class.std::__1::__bitset.1984" }
%"class.std::__1::__bitset.1984" = type { [11 x i64] }
%"class.std::__1::bitset.1985" = type { %"class.std::__1::__bitset.1986" }
%"class.std::__1::__bitset.1986" = type { [2 x i64] }
%"class.blink::HeapHashSet.1987" = type { %"class.WTF::HashSet.1990" }
%"class.WTF::HashSet.1990" = type { %"class.WTF::HashTable.1991" }
%"class.WTF::HashTable.1991" = type <{ %"class.blink::Member.1993"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1993" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1994" = type { %"class.WTF::VectorBuffer.1995" }
%"class.WTF::VectorBuffer.1995" = type { %"class.WTF::VectorBufferBase.1996" }
%"class.WTF::VectorBufferBase.1996" = type { i32*, i32, i32 }
%"class.WTF::Vector.1350" = type { %"class.WTF::VectorBuffer.1351" }
%"class.WTF::VectorBuffer.1351" = type { %"class.WTF::VectorBufferBase.1352" }
%"class.WTF::VectorBufferBase.1352" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.1845" = type { %"class.std::__1::vector.1846" }
%"class.std::__1::vector.1846" = type { %"class.std::__1::__vector_base.1847" }
%"class.std::__1::__vector_base.1847" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1999" = type { %"class.mojo::internal::InterfacePtrState.2000" }
%"class.mojo::internal::InterfacePtrState.2000" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2001" }
%"class.std::__1::unique_ptr.2001" = type { %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.2003" }
%"struct.std::__1::__compressed_pair_elem.2003" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1395", %"class.blink::Member.237", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1400", i8, i32, %"class.blink::Color", %"class.absl::optional.1402", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1409", %"class.std::__1::unique_ptr.1412", i32, [4 x i8], %"class.WTF::HashSet.1415", %"class.blink::Member.1422", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1424", %"class.blink::HeapHashSet.1431", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1439", i8, %"class.blink::Member.1445", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1457", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1471", i8, %"class.std::__1::unique_ptr.1477", %"class.std::__1::unique_ptr.1594", %"class.WTF::Vector.1600", i32, %class.scoped_refptr.1605, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1606", %"class.blink::Member.1608", %"class.blink::Member.1610", %"class.blink::HeapHashSet.1612", %"class.blink::HeapHashSet.1619", %"class.std::__1::unique_ptr.1626", %"class.std::__1::unique_ptr.1633", %"class.WTF::Vector.767" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %class.scoped_refptr.1399*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1399 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1400" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1401", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.993, %"class.base::WeakPtrFactory.994" }
%class.scoped_refptr.993 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.994" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1401" = type { %"class.blink::MemberBase.538" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1402" = type { %"class.absl::optional_internal::optional_data.1403" }
%"class.absl::optional_internal::optional_data.1403" = type { %"class.absl::optional_internal::optional_data_base.1404" }
%"class.absl::optional_internal::optional_data_base.1404" = type { %"class.absl::optional_internal::optional_data_dtor_base.1405" }
%"class.absl::optional_internal::optional_data_dtor_base.1405" = type { i8, %union.anon.1406 }
%union.anon.1406 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::HeapHashSet.1411"* }
%"class.blink::HeapHashSet.1411" = type opaque
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.WTF::HashSet.1415"* }
%"class.WTF::HashSet.1415" = type { %"class.WTF::HashTable.1416" }
%"class.WTF::HashTable.1416" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1424" = type { %"class.WTF::HashSet.1427" }
%"class.WTF::HashSet.1427" = type { %"class.WTF::HashTable.1428" }
%"class.WTF::HashTable.1428" = type <{ %"class.blink::Member.1430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1430" = type opaque
%"class.blink::HeapHashSet.1431" = type { %"class.WTF::HashSet.1434" }
%"class.WTF::HashSet.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"class.blink::Member.1437"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1449", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"struct.WTF::KeyValuePair.1452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1452" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1453", i32, i32 }
%"class.WTF::Vector.1453" = type { %"class.WTF::VectorBuffer.1454" }
%"class.WTF::VectorBuffer.1454" = type { %"class.WTF::VectorBufferBase.1455" }
%"class.WTF::VectorBufferBase.1455" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1457" = type { %"class.WTF::LinkedHashSet.1460" }
%"class.WTF::LinkedHashSet.1460" = type { %"class.WTF::HashMap.1461", %"class.WTF::VectorBackedLinkedList.1465" }
%"class.WTF::HashMap.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"struct.WTF::KeyValuePair.1464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1464" = type opaque
%"class.WTF::VectorBackedLinkedList.1465" = type { %"class.WTF::Vector.1466", i32, i32 }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.WTF::VectorBackedLinkedListNode.1469"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1469" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1480, %class.scoped_refptr.1480, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1571", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1576", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1480 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1481", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1488" }
%"class.WTF::RefCounted.1481" = type { %"class.base::RefCounted.1482" }
%"class.base::RefCounted.1482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1483", i32, [4 x i8] }>
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1494", %"class.std::__1::unique_ptr.1543", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1491, %class.scoped_refptr.1492, %class.scoped_refptr.1493 }
%class.scoped_refptr.1491 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1507", i8, i8, %class.scoped_refptr.1491, i32, i32 }
%"class.WTF::RefCounted.1507" = type { %"class.base::RefCounted.1508" }
%"class.base::RefCounted.1508" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1492 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1662" }
%"class.blink::PaintPropertyNode.1662" = type { %"class.WTF::RefCounted.1663", i8, i8, %class.scoped_refptr.1492, i32, i32 }
%"class.WTF::RefCounted.1663" = type { %"class.base::RefCounted.1664" }
%"class.base::RefCounted.1664" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1493 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1659" }
%"class.blink::PaintPropertyNode.1659" = type { %"class.WTF::RefCounted.1660", i8, i8, %class.scoped_refptr.1493, i32, i32 }
%"class.WTF::RefCounted.1660" = type { %"class.base::RefCounted.1661" }
%"class.base::RefCounted.1661" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1497", %"class.WTF::Vector.1502", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1497" = type { %"class.WTF::VectorBuffer.1498" }
%"class.WTF::VectorBuffer.1498" = type { %"class.WTF::VectorBufferBase.1499" }
%"class.WTF::VectorBufferBase.1499" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1502" = type { %"class.WTF::VectorBuffer.1503" }
%"class.WTF::VectorBuffer.1503" = type { %"class.WTF::VectorBufferBase.1504" }
%"class.WTF::VectorBufferBase.1504" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1522" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1515, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1516", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1509" }
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1515 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1644", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1644" = type { %"class.WTF::RefCounted.1645", i8, i8, %class.scoped_refptr.1515, i32, i32 }
%"class.WTF::RefCounted.1645" = type { %"class.base::RefCounted.1646" }
%"class.base::RefCounted.1646" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1647" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1647" = type { %"class.absl::optional_internal::optional_data.1648" }
%"class.absl::optional_internal::optional_data.1648" = type { %"class.absl::optional_internal::optional_data_base.1649" }
%"class.absl::optional_internal::optional_data_base.1649" = type { %"class.absl::optional_internal::optional_data_dtor_base.1650" }
%"class.absl::optional_internal::optional_data_dtor_base.1650" = type { i8, %union.anon.1651 }
%union.anon.1651 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1652", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1652" = type { %"class.std::__1::__vector_base.1653" }
%"class.std::__1::__vector_base.1653" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1654" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1522" = type { %"class.std::__1::__compressed_pair.1523" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1525", %"class.std::__1::unique_ptr.1531", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1531" = type { %"class.std::__1::__compressed_pair.1532" }
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1543" = type { %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1546", %"class.absl::optional.1546" }
%"class.absl::optional.1546" = type { %"class.absl::optional_internal::optional_data.1547" }
%"class.absl::optional_internal::optional_data.1547" = type { %"class.absl::optional_internal::optional_data_base.1548" }
%"class.absl::optional_internal::optional_data_base.1548" = type { %"class.absl::optional_internal::optional_data_dtor_base.1549" }
%"class.absl::optional_internal::optional_data_dtor_base.1549" = type { i8, [3 x i8], %union.anon.1550 }
%union.anon.1550 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1488"*, %"class.absl::optional.1556", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1556" = type { %"class.absl::optional_internal::optional_data.1557" }
%"class.absl::optional_internal::optional_data.1557" = type { %"class.absl::optional_internal::optional_data_base.1558" }
%"class.absl::optional_internal::optional_data_base.1558" = type { %"class.absl::optional_internal::optional_data_dtor_base.1559" }
%"class.absl::optional_internal::optional_data_dtor_base.1559" = type { i8, %union.anon.1560 }
%union.anon.1560 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1561", %"class.WTF::Vector.1566" }
%"class.WTF::Vector.1561" = type { %"class.WTF::VectorBuffer.1562" }
%"class.WTF::VectorBuffer.1562" = type { %"class.WTF::VectorBufferBase.1563", [128 x i8] }
%"class.WTF::VectorBufferBase.1563" = type { i32*, i32, i32 }
%"class.WTF::Vector.1566" = type { %"class.WTF::VectorBuffer.1567" }
%"class.WTF::VectorBuffer.1567" = type { %"class.WTF::VectorBufferBase.1568", [128 x i8] }
%"class.WTF::VectorBufferBase.1568" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1571" = type { %"class.WTF::VectorBuffer.1572" }
%"class.WTF::VectorBuffer.1572" = type { %"class.WTF::VectorBufferBase.1573" }
%"class.WTF::VectorBufferBase.1573" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1576" = type { %"class.WTF::HashTable.1577" }
%"class.WTF::HashTable.1577" = type <{ %"struct.WTF::KeyValuePair.1580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1580" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1581", %"class.WTF::Vector.1586" }
%"class.WTF::HashMap.1581" = type { %"class.WTF::HashTable.1582" }
%"class.WTF::HashTable.1582" = type <{ %"struct.WTF::KeyValuePair.1585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1585" = type opaque
%"class.WTF::Vector.1586" = type { %"class.WTF::VectorBuffer.1587" }
%"class.WTF::VectorBuffer.1587" = type { %"class.WTF::VectorBufferBase.1588" }
%"class.WTF::VectorBufferBase.1588" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1594" = type { %"class.std::__1::__compressed_pair.1595" }
%"class.std::__1::__compressed_pair.1595" = type { %"struct.std::__1::__compressed_pair_elem.1596" }
%"struct.std::__1::__compressed_pair_elem.1596" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1600" = type { %"class.WTF::VectorBuffer.1601" }
%"class.WTF::VectorBuffer.1601" = type { %"class.WTF::VectorBufferBase.1602" }
%"class.WTF::VectorBufferBase.1602" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1605 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1612" = type { %"class.WTF::HashSet.1615" }
%"class.WTF::HashSet.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"class.blink::WeakMember.1618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1618" = type opaque
%"class.blink::HeapHashSet.1619" = type { %"class.WTF::HashSet.1622" }
%"class.WTF::HashSet.1622" = type { %"class.WTF::HashTable.1623" }
%"class.WTF::HashTable.1623" = type <{ %"class.blink::WeakMember.1625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1625" = type opaque
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1636", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.551" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.541", %"class.blink::Member.541" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.541", %"class.blink::Member.541", %"class.blink::Member.545" }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.543", %"class.blink::Member.683", %"class.blink::Member.683", %"class.blink::Member.705", %"class.blink::Member.707", %"class.blink::Member.709", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.714", %"class.blink::HeapVector.716" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.759", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.767", %"class.WTF::Vector.767", i8, i32, %"class.blink::Member.772", %"class.blink::Member.774", %"class.blink::Member.776", %"class.blink::Member.778", %"class.blink::Member.780", %"class.blink::Member.782", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.784", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.790", %"class.blink::Member.792", %"class.blink::Member.722", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.794", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.698", %"class.blink::Member.539", %"class.blink::Member.996", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::UserActionElementSet", %"class.blink::Member.1005", double, double, i64, i64, %"class.blink::HeapHashSet.1007", %"class.blink::HeapHashSet.1014", i16, i8, %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::Member.1025", %"class.blink::Member.1027", %"class.blink::TextLinkColors", %"class.blink::Member.1029", i8, [7 x i8], %"class.blink::HeapHashMap.1031", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.539", %"class.WTF::Vector.1038", %"class.blink::Member.1043", %"class.blink::Member.1047", i8, %"class.blink::Member.539", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1049", %"class.blink::HeapVector.1051", %"class.std::__1::unique_ptr.1059", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1065", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1078", %"class.WTF::Vector.1080", i8, i8, %"class.std::__1::unique_ptr.1085", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.698", %"class.blink::HeapVector.1091", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1099", i8, i32, %"class.blink::Member.1101", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1107", %"class.WTF::HashMap.1109", %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.blink::Member.1118", %"class.blink::Member.1120", %"class.blink::Member.681", %"class.blink::Member.681", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1122", i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1131", i32, %"class.blink::Member.1133", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.std::__1::unique_ptr.1139", i64, %"class.std::__1::unique_ptr.1145", i32, i32, %"class.blink::Member.1151", %"class.blink::Member.1153", %"class.blink::Member.1155", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1157", %"class.WTF::Vector.582", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1159", %"class.blink::Member.1166", %"class.std::__1::unique_ptr.1168", %"class.blink::Member.1174", i8, i8, %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8], %"class.blink::HeapHashMap.1178", %"class.blink::HeapObserverSet", %"class.blink::Member.1192", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1194", i32, i8, i8, %"class.blink::WeakMember.1196", %"class.blink::Member.1197" }
%"class.blink::Supplementable.759" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.760" }
%"class.blink::HeapHashMap.760" = type { %"class.WTF::HashMap.763" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1217", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1297", i32, i8, [3 x i8], %"class.blink::HeapVector.1299", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1307", %"class.blink::Member.1309", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1318", %"class.blink::Member.1379", %"class.blink::Member.1381", i8, [7 x i8] }>
%"class.blink::Supplementable.1217" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1218" }
%"class.blink::HeapHashMap.1218" = type { %"class.WTF::HashMap.1221" }
%"class.WTF::HashMap.1221" = type { %"class.WTF::HashTable.1222" }
%"class.WTF::HashTable.1222" = type <{ %"struct.WTF::KeyValuePair.1224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1224" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1233" }
%"class.blink::Supplementable.1233" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1234" }
%"class.blink::HeapHashMap.1234" = type { %"class.WTF::HashMap.1237" }
%"class.WTF::HashMap.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type { i8*, %"class.blink::Member.2136" }
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::Supplement.2138"* }
%"class.blink::Supplement.2138" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2139" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1241, %"class.std::__1::unique_ptr.1250", %"class.std::__1::unique_ptr.1250", %"class.std::__1::unique_ptr.1277", %"class.std::__1::unique_ptr.1277", %"class.blink::Member.774", i32, [4 x i8], %"class.WTF::HashSet.1293", i32, i32 }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1253", %"class.std::__1::map.1264", %"class.std::__1::map.1273"* }
%"class.std::__1::map.1253" = type { %"class.std::__1::__tree.1254" }
%"class.std::__1::__tree.1254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1255", %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::map.1264" = type { %"class.std::__1::__tree.1265" }
%"class.std::__1::__tree.1265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1266", %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::map.1273" = type opaque
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.1280" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.1293" = type { %"class.WTF::HashTable.1294" }
%"class.WTF::HashTable.1294" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1299" = type { %"class.WTF::Vector.1302" }
%"class.WTF::Vector.1302" = type { %"class.WTF::VectorBuffer.1303" }
%"class.WTF::VectorBuffer.1303" = type { %"class.WTF::VectorBufferBase.1304" }
%"class.WTF::VectorBufferBase.1304" = type { %"class.blink::Member.1305"*, i32, i32 }
%"class.blink::Member.1305" = type opaque
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1311", i32, i32 }
%"class.blink::HeapHashMap.1311" = type { %"class.WTF::HashMap.1314" }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1317" = type opaque
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1309", i8, [7 x i8], %"class.WTF::Vector.1325", %"class.blink::HeapVector.1385", i8, [7 x i8], %"class.WTF::HashSet.1293", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1385" = type { %"class.WTF::Vector.1388" }
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { %"class.blink::Member.1391"*, i32, i32 }
%"class.blink::Member.1391" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.724", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.726, %"class.WTF::Vector.727", %"class.WTF::Vector.727", %"class.blink::Member.541", %"class.blink::Member.732", %"class.blink::HeapHashSet.736", %"class.blink::Member.681", %"class.WTF::HashSet.743", %"class.WTF::TextPosition", %"class.blink::Member.747", %"class.blink::HeapVector.749", %"class.blink::Member.756" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.726 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.727" = type { %"class.WTF::VectorBuffer.728" }
%"class.WTF::VectorBuffer.728" = type { %"class.WTF::VectorBufferBase.729" }
%"class.WTF::VectorBufferBase.729" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.734" }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.736" = type { %"class.WTF::HashSet.739" }
%"class.WTF::HashSet.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"class.blink::WeakMember.742"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.742" = type { %"class.blink::MemberBase.544" }
%"class.WTF::HashSet.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.749" = type { %"class.WTF::Vector.752" }
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"class.blink::Member.732"*, i32, i32 }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.794" = type { %"class.WTF::VectorBuffer.795" }
%"class.WTF::VectorBuffer.795" = type { %"class.WTF::VectorBufferBase.796" }
%"class.WTF::VectorBufferBase.796" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.797 }
%class.scoped_refptr.797 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.798", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.798" = type { %"class.base::RefCounted.799" }
%"class.base::RefCounted.799" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.802" }
%"class.blink::HeapHashMap.802" = type { %"class.WTF::HashMap.805" }
%"class.WTF::HashMap.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"struct.WTF::KeyValuePair.808"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.808" = type { %"class.blink::WeakMember.809", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.811", i32, [4 x i8], %"class.std::__1::unique_ptr.949", %"class.std::__1::unique_ptr.949", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.960", %"class.std::__1::unique_ptr.966", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.978", %"class.std::__1::unique_ptr.984", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.820", %"class.std::__1::unique_ptr.826", %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.844", %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.862", %"class.std::__1::unique_ptr.862", %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.876", %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.890", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.929", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"struct.std::__1::atomic.847" = type { %"struct.std::__1::__atomic_base.848" }
%"struct.std::__1::__atomic_base.848" = type { %"struct.std::__1::__atomic_base.849" }
%"struct.std::__1::__atomic_base.849" = type { %"struct.std::__1::__cxx_atomic_impl.850" }
%"struct.std::__1::__cxx_atomic_impl.850" = type { %"struct.std::__1::__cxx_atomic_base_impl.851" }
%"struct.std::__1::__cxx_atomic_base_impl.851" = type { i64 }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::Worklist.858"* }
%"class.blink::Worklist.858" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::Worklist.865"* }
%"class.blink::Worklist.865" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::Worklist.872"* }
%"class.blink::Worklist.872" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::Worklist.879"* }
%"class.blink::Worklist.879" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.blink::Worklist.886"* }
%"class.blink::Worklist.886" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.blink::Worklist.893"* }
%"class.blink::Worklist.893" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.blink::Worklist.900"* }
%"class.blink::Worklist.900" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.847" }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.907", %"class.std::__1::__compressed_pair.915", %"class.std::__1::__compressed_pair.920", %"class.std::__1::__compressed_pair.922", [4 x i8] }>
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909", %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { float }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.932", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.941" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { %"struct.std::__1::pair.959"*, i32, i32 }
%"struct.std::__1::pair.959" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.972" }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.858"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.865"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.872"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.879"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.886"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1210", i64 }
%"class.std::__1::vector.1210" = type { %"class.std::__1::__vector_base.1211" }
%"class.std::__1::__vector_base.1211" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1212" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.990 }
%class.scoped_refptr.990 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.681", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.541", %"class.blink::Member.541", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.998" }
%"class.blink::HeapHashMap.998" = type { %"class.WTF::HashMap.1001" }
%"class.WTF::HashMap.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"struct.WTF::KeyValuePair.1004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1004" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1007" = type { %"class.WTF::HashSet.1010" }
%"class.WTF::HashSet.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"class.blink::WeakMember.1013"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1013" = type opaque
%"class.blink::HeapHashSet.1014" = type { %"class.WTF::HashSet.1017" }
%"class.WTF::HashSet.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"class.blink::WeakMember.1020"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1020" = type opaque
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.543", %"class.blink::HeapVector.716" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1051" = type { %"class.WTF::Vector.1054" }
%"class.WTF::Vector.1054" = type { %"class.WTF::VectorBuffer.1055" }
%"class.WTF::VectorBuffer.1055" = type { %"class.WTF::VectorBufferBase.1056" }
%"class.WTF::VectorBufferBase.1056" = type { %"class.blink::Member.1057"*, i32, i32 }
%"class.blink::Member.1057" = type opaque
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1065" = type { %"class.WTF::HashSet.1068" }
%"class.WTF::HashSet.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"class.blink::WeakMember.1071"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1071" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1072", i32, [4 x i8] }>
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"struct.std::__1::pair.1075"*, i32, i32 }
%"struct.std::__1::pair.1075" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1080" = type { %"class.WTF::VectorBuffer.1081" }
%"class.WTF::VectorBuffer.1081" = type { %"class.WTF::VectorBufferBase.1082" }
%"class.WTF::VectorBufferBase.1082" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.698" = type { %"class.WTF::Vector.701" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Member.539"*, i32, i32 }
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.681" }
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1109" = type { %"class.WTF::HashTable.1110" }
%"class.WTF::HashTable.1110" = type <{ %"struct.WTF::KeyValuePair.1113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1113" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.995", { i64, i64 } }
%"class.blink::WeakMember.995" = type { %"class.blink::MemberBase.682" }
%"class.blink::HeapHashSet.1122" = type { %"class.WTF::HashSet.1125" }
%"class.WTF::HashSet.1125" = type { %"class.WTF::HashTable.1126" }
%"class.WTF::HashTable.1126" = type <{ %"class.blink::Member.1128"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1128" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1159" = type { %"class.WTF::HashMap.1162" }
%"class.WTF::HashMap.1162" = type { %"class.WTF::HashTable.1163" }
%"class.WTF::HashTable.1163" = type <{ %"struct.WTF::KeyValuePair.1165"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1165" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1178" = type { %"class.WTF::HashMap.1181" }
%"class.WTF::HashMap.1181" = type { %"class.WTF::HashTable.1182" }
%"class.WTF::HashTable.1182" = type <{ %"struct.WTF::KeyValuePair.1184"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1184" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1185" }
%"class.blink::HeapHashSet.1185" = type { %"class.WTF::HashSet.1188" }
%"class.WTF::HashSet.1188" = type { %"class.WTF::HashTable.1189" }
%"class.WTF::HashTable.1189" = type <{ %"class.blink::WeakMember.1191"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1191" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.681", %"class.blink::HeapHashSet.1201", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1208", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1201" = type { %"class.WTF::HashSet.1204" }
%"class.WTF::HashSet.1204" = type { %"class.WTF::HashTable.1205" }
%"class.WTF::HashTable.1205" = type <{ %"class.blink::Member.1207"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1207" = type opaque
%"class.blink::HeapTaskRunnerTimer.1208" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1209", { i64, i64 } }
%"class.blink::WeakMember.1209" = type { %"class.blink::MemberBase.1195" }
%"class.blink::WeakMember.1196" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::Node"* }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type { %"class.WTF::AtomicString", %"class.blink::Member.694" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.539", i32, %"class.blink::HeapVector.698" }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.711" }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::HeapHashMap.713"* }
%"class.blink::HeapHashMap.713" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.716" = type { %"class.WTF::Vector.719" }
%"class.WTF::Vector.719" = type { %"class.WTF::VectorBuffer.720" }
%"class.WTF::VectorBuffer.720" = type { %"class.WTF::VectorBufferBase.721" }
%"class.WTF::VectorBufferBase.721" = type { %"class.blink::Member.722"*, i32, i32 }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.549 }
%class.scoped_refptr.549 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.550" }
%"class.base::RefCounted.550" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.555", %"class.blink::Member.557", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.555" = type { %"class.WTF::SingleThreadedBitField.556" }
%"class.WTF::SingleThreadedBitField.556" = type { i32 }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.559 }
%class.scoped_refptr.559 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.560", %"class.WTF::AtomicString", %"class.WTF::Vector.562" }
%"class.WTF::RefCounted.560" = type { %"class.base::RefCounted.561" }
%"class.base::RefCounted.561" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.562" = type { %"class.WTF::VectorBuffer.563" }
%"class.WTF::VectorBuffer.563" = type { %"class.WTF::VectorBufferBase.564", [32 x i8] }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.575 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2158" }
%"class.mojo::Remote.2158" = type { %"class.mojo::internal::InterfacePtrState.2159" }
%"class.mojo::internal::InterfacePtrState.2159" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2160" }
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.609, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.609 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.610", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.610" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.618, i8, [7 x i8] }>
%class.scoped_refptr.618 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.619", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.620" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.627" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.480" = type { %"class.absl::optional_internal::optional_data.481" }
%"class.absl::optional_internal::optional_data.481" = type { %"class.absl::optional_internal::optional_data_base.482" }
%"class.absl::optional_internal::optional_data_base.482" = type { %"class.absl::optional_internal::optional_data_dtor_base.483" }
%"class.absl::optional_internal::optional_data_dtor_base.483" = type { i8, %union.anon.484 }
%union.anon.484 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.640" }
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2168" }
%"class.mojo::AssociatedRemote.2168" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2169" }
%"class.mojo::internal::AssociatedInterfacePtrState.2169" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2170" }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.642" = type { %"class.blink::Member.643" }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2178" }
%"class.mojo::AssociatedRemote.2178" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2179" }
%"class.mojo::internal::AssociatedInterfacePtrState.2179" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2180" }
%"class.std::__1::unique_ptr.2180" = type { %"class.std::__1::__compressed_pair.2181" }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.2182" }
%"struct.std::__1::__compressed_pair_elem.2182" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2188" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.407" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2188" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.647" = type { %"class.blink::Member.648" }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2191", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2192" }
%"class.blink::ThreadState::PrefinalizerRegistration.2191" = type { i8 }
%"class.mojo::AssociatedReceiver.2192" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2193" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.650" }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2196", %"class.blink::Member.237", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2196" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.279, %"class.std::__1::unique_ptr.407", %"class.base::WeakPtrFactory.2197" }
%"class.base::WeakPtrFactory.2197" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.652" = type { %"class.blink::Member.653" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2200", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2201" }
%"class.blink::ThreadState::PrefinalizerRegistration.2200" = type { i8 }
%"class.mojo::AssociatedReceiver.2201" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2202" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2202" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::HeapHashMap.663"* }
%"class.blink::HeapHashMap.663" = type opaque
%"class.mojo::StructPtr.664" = type { %"class.std::__1::unique_ptr.665" }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.668" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.668" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.674" = type { %"class.absl::optional_internal::optional_data.675" }
%"class.absl::optional_internal::optional_data.675" = type { %"class.absl::optional_internal::optional_data_base.676" }
%"class.absl::optional_internal::optional_data_base.676" = type { %"class.absl::optional_internal::optional_data_dtor_base.677" }
%"class.absl::optional_internal::optional_data_dtor_base.677" = type { i8, %union.anon.678 }
%union.anon.678 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.587" = type { %"class.WTF::HashMap.590" }
%"class.WTF::HashMap.590" = type { %"class.WTF::HashTable.591" }
%"class.WTF::HashTable.591" = type <{ %"struct.WTF::KeyValuePair.593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.593" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2076", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.2072", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.2068", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.2064", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.2060", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.2056", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.2052", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.2048", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.2044", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.596", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.2038", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.2034", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.2030", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.2026", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.2022", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.2018", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.2014", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.598", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.576", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Performance::Frontend"* }
%"class.blink::protocol::Performance::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::InspectedFrames"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.237" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2081" = type { %"class.std::__1::__compressed_pair.2082" }
%"class.std::__1::__compressed_pair.2082" = type { %"struct.std::__1::__compressed_pair_elem.2083" }
%"struct.std::__1::__compressed_pair_elem.2083" = type { %"class.std::__1::vector.2084"* }
%"class.std::__1::vector.2084" = type { %"class.std::__1::__vector_base.2085" }
%"class.std::__1::__vector_base.2085" = type { %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::__compressed_pair.2092" }
%"class.std::__1::unique_ptr.2086" = type { %"class.std::__1::__compressed_pair.2087" }
%"class.std::__1::__compressed_pair.2087" = type { %"struct.std::__1::__compressed_pair_elem.2088" }
%"struct.std::__1::__compressed_pair_elem.2088" = type { %"class.blink::protocol::Performance::Metric"* }
%"class.blink::protocol::Performance::Metric" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", double }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2092" = type { %"struct.std::__1::__compressed_pair_elem.2093" }
%"struct.std::__1::__compressed_pair_elem.2093" = type { %"class.std::__1::unique_ptr.2086"* }
%"class.base::Process" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::HeapStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64 }
%"class.base::ProcessMetrics" = type { i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64 }
%"class.blink::PaintTiming" = type { %"class.blink::Supplement", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1939", %"class.WTF::Vector.2102", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.2108", i32, %"class.base::TickClock"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.681" }
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104" }
%"class.WTF::VectorBufferBase.2104" = type { %"struct.std::__1::array.2105"*, i32, i32 }
%"struct.std::__1::array.2105" = type { [3 x %"class.base::TimeTicks"] }
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::FirstMeaningfulPaintDetector"* }
%"class.blink::FirstMeaningfulPaintDetector" = type { i32 (...)**, i8, i32, i32, %"class.blink::Member.2112", %"class.base::TimeTicks", %"class.base::TimeTicks", double, double, i32, i8, i8, %"class.base::TimeTicks", i32, i32 }
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::PaintTiming"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::probe::CallFunction" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.v8::Local", i32, [4 x i8] }>
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.v8::Local" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.blink::probe::ExecuteScript" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, i32, [4 x i8] }>
%"class.blink::probe::RecalculateStyle" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"* }
%"class.blink::probe::UpdateLayout" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"* }
%"class.blink::probe::V8Compile" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, i32, i32 }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2114", %"class.std::__1::vector.2122" }
%"class.std::__1::vector.2114" = type { %"class.std::__1::__vector_base.2115" }
%"class.std::__1::__vector_base.2115" = type { %"struct.std::__1::pair.2116"*, %"struct.std::__1::pair.2116"*, %"class.std::__1::__compressed_pair.2117" }
%"struct.std::__1::pair.2116" = type opaque
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"struct.std::__1::pair.2116"* }
%"class.std::__1::vector.2122" = type { %"class.std::__1::__vector_base.2123" }
%"class.std::__1::__vector_base.2123" = type { %"struct.std::__1::pair.2124"*, %"struct.std::__1::pair.2124"*, %"class.std::__1::__compressed_pair.2125" }
%"struct.std::__1::pair.2124" = type opaque
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"struct.std::__1::pair.2124"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

@_ZTVN5blink25InspectorPerformanceAgentE = hidden unnamed_addr constant { [16 x i8*], [8 x i8*], [6 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZN5blink25InspectorPerformanceAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZN5blink25InspectorPerformanceAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink25InspectorPerformanceAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZN5blink25InspectorPerformanceAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*)* @_ZN5blink25InspectorPerformanceAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink25InspectorPerformanceAgent6enableEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.WTF::String"*)* @_ZN5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.std::__1::unique_ptr.2081"*)* @_ZN5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*, i64)* @_ZN5blink25InspectorPerformanceAgent15WillProcessTaskEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*, i64, i64)* @_ZN5blink25InspectorPerformanceAgent14DidProcessTaskEN4base9TimeTicksES2_ to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZThn8_N5blink25InspectorPerformanceAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZThn8_N5blink25InspectorPerformanceAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*)* @_ZThn8_N5blink25InspectorPerformanceAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink25InspectorPerformanceAgent6enableEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPerformanceAgent"*, %"class.std::__1::unique_ptr.2081"*)* @_ZThn8_N5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*)], [6 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZThn56_N5blink25InspectorPerformanceAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*)* @_ZThn56_N5blink25InspectorPerformanceAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*, i64)* @_ZThn56_N5blink25InspectorPerformanceAgent15WillProcessTaskEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::InspectorPerformanceAgent"*, i64, i64)* @_ZThn56_N5blink25InspectorPerformanceAgent14DidProcessTaskEN4base9TimeTicksES2_ to i8*)] }, align 8
@_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum9TimeTicksE = external local_unnamed_addr global i8*, align 8
@.str = private unnamed_addr constant [75 x i8] c"Cannot change time domain while performance metrics collection is enabled.\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"Cannot set time domain while performance metrics collection is enabled.\00", align 1
@_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum11ThreadTicksE = external local_unnamed_addr global i8*, align 8
@.str.3 = private unnamed_addr constant [35 x i8] c"Invalid time domain specification.\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"Timestamp\00", align 1
@_ZN5blink12_GLOBAL__N_121kInstanceCounterNamesE = internal unnamed_addr constant [18 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [12 x i8] c"LayoutCount\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"RecalcStyleCount\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"LayoutDuration\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"RecalcStyleDuration\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"DevToolsCommandDuration\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ScriptDuration\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"V8CompileDuration\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"TaskDuration\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"TaskOtherDuration\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"ThreadTime\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"ProcessTime\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"JSHeapUsedSize\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"JSHeapTotalSize\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"FirstMeaningfulPaint\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"DomContentLoaded\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"NavigationStart\00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [8 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink8protocol11Performance6MetricE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.22 = private unnamed_addr constant [14 x i8] c"AudioHandlers\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"Documents\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Frames\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"JSEventListeners\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"LayoutObjects\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"MediaKeySessions\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"MediaKeys\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Nodes\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"Resources\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"ContextLifecycleStateObservers\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"V8PerContextDatas\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"WorkerGlobalScopes\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"UACSSResources\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"RTCPeerConnections\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"ResourceFetchers\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"AdSubframes\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"DetachedScriptStates\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"ArrayBufferContents\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol11Performance8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink25InspectorPerformanceAgentC1EPNS_15InspectedFramesE = hidden unnamed_addr alias void (%"class.blink::InspectorPerformanceAgent"*, %"class.blink::InspectedFrames"*), void (%"class.blink::InspectorPerformanceAgent"*, %"class.blink::InspectedFrames"*)* @_ZN5blink25InspectorPerformanceAgentC2EPNS_15InspectedFramesE
@_ZN5blink25InspectorPerformanceAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorPerformanceAgent"*), void (%"class.blink::InspectorPerformanceAgent"*)* @_ZN5blink25InspectorPerformanceAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgentC2EPNS_15InspectedFramesE(%"class.blink::InspectorPerformanceAgent"*, %"class.blink::InspectedFrames"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::InspectorPerformanceAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11Performance8Metainfo10domainNameE, i64 0, i64 0)) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11Performance8Metainfo10domainNameE, i64 0, i64 0), i64 %8) #12
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %26 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.227"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 1, i32 0
  %29 = bitcast %"class.blink::InspectorPerformanceAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0, i32 0
  %35 = bitcast i64* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 128, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %6, %"class.blink::InspectorAgentState::Field"* %33) #12
  %37 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 1
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 2
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21
  %41 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %40, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %6, %"class.blink::InspectorAgentState::Field"* %41) #12
  %44 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %45 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 1
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  store i8 0, i8* %46, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorPerformanceAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [6 x i8*] }, { [16 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink25InspectorPerformanceAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #12
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %21, %35, %38
  %40 = bitcast %"class.blink::InspectorPerformanceAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %41, align 8
  store %"class.blink::protocol::Performance::Frontend"* null, %"class.blink::protocol::Performance::Frontend"** %41, align 8
  %43 = icmp eq %"class.blink::protocol::Performance::Frontend"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.blink::protocol::Performance::Frontend"* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %44, %39
  %47 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %47, align 8
  %49 = icmp eq %"class.blink::InspectorAgentState::Field"** %48, null
  %50 = bitcast %"class.blink::InspectorAgentState::Field"** %48 to i8*
  br i1 %49, label %57, label %51, !prof !2

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #12
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %47, align 8
  br label %57

57:                                               ; preds = %56, %46
  %58 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgentD1Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 21, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink25InspectorPerformanceAgentD1Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 20, i32 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgentD0Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgentD0Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 21, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink25InspectorPerformanceAgentD0Ev(%"class.blink::InspectorPerformanceAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 20, i32 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgentD2Ev(%"class.blink::InspectorPerformanceAgent"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent7RestoreEv(%"class.blink::InspectorPerformanceAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %6, align 8
  tail call void @_ZN5blink13CoreProbeSink28AddInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"* %7, %"class.blink::InspectorPerformanceAgent"* %0) #12
  %8 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #12
  %9 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 1
  %10 = bitcast %"class.blink::Thread"* %8 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %11 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %11, i64 4
  %13 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %12, align 8
  tail call void %13(%"class.blink::Thread"* %8, %"class.base::sequence_manager::TaskTimeObserver"* %9) #12
  %14 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %21 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 15, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent11InnerEnableEv(%"class.blink::InspectorPerformanceAgent"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %2, align 8
  tail call void @_ZN5blink13CoreProbeSink28AddInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"* %3, %"class.blink::InspectorPerformanceAgent"* %0) #12
  %4 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #12
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::Thread"* %4 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %7 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %7, i64 4
  %9 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %8, align 8
  tail call void %9(%"class.blink::Thread"* %4, %"class.base::sequence_manager::TaskTimeObserver"* %5) #12
  %10 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %17 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 15, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  ret void
}

declare void @_ZN5blink13CoreProbeSink28AddInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorPerformanceAgent"*) local_unnamed_addr #1

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink25InspectorPerformanceAgent16GetThreadTimeNowEv(%"class.blink::InspectorPerformanceAgent"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent6enableEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.1814", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = load i8*, i8** @_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum9TimeTicksE, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = tail call i64 @strlen(i8* nonnull %12) #13
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %12, i64 %17) #12
  %18 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1
  %22 = select i1 %20, %"class.WTF::String"* %6, %"class.WTF::String"* %21
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %10, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %16, %26, %41
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %60

60:                                               ; preds = %43, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %61 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20
  %62 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 2
  %63 = load i8, i8* %62, align 1, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = call zeroext i1 @_ZN5blink25InspectorPerformanceAgent13HasTimeDomainERKN3WTF6StringE(%"class.blink::InspectorPerformanceAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  br i1 %66, label %79, label %67

67:                                               ; preds = %65
  %68 = call i8* @_Znwm(i64 80) #14
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> <i64 74, i64 -9223372036854775728>, <2 x i64>* %71, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i64 74, i1 false) #12
  %72 = getelementptr inbounds i8, i8* %68, i64 74
  store i8 0, i8* %72, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #12
  %73 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %142

77:                                               ; preds = %67
  %78 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %78) #14
  br label %142

79:                                               ; preds = %65
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  br label %142

80:                                               ; preds = %60
  %81 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 32, i1 false)
  call void @_ZN5blink25InspectorPerformanceAgent18InnerSetTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorPerformanceAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %82 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %91, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %83, i32* %86, align 8
  %87 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %88 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %89 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #12
  br label %141

91:                                               ; preds = %80
  %92 = load i8, i8* %62, align 1, !range !4
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %116, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 1
  %96 = load i8, i8* %95, align 8, !range !4
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %61 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %100 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %100, i64 2
  %102 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %101, align 8
  call void %102(%"class.blink::InspectorAgentState::SimpleField"* %61) #12
  br label %116

103:                                              ; preds = %94
  store i8 1, i8* %62, align 1
  %104 = bitcast %"class.blink::WebVector.1814"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = getelementptr inbounds %"class.blink::WebVector.1814", %"class.blink::WebVector.1814"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #12
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.1814"* nonnull %4) #12
  %106 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 0, i32 2
  %107 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %107, %"class.WTF::String"* dereferenceable(8) %108, %"class.blink::WebVector.1814"* nonnull %4) #12
  %109 = load i8*, i8** %105, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::WebVector.1814", %"class.blink::WebVector.1814"* %4, i64 0, i32 0, i32 0, i32 1
  %113 = ptrtoint i8* %109 to i64
  %114 = bitcast i8** %112 to i64*
  store i64 %113, i64* %114, align 8
  call void @_ZdlPv(i8* nonnull %109) #14
  br label %115

115:                                              ; preds = %111, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %116

116:                                              ; preds = %115, %98, %91
  %117 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %117, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"* %118, %"class.blink::InspectorPerformanceAgent"* %1) #12
  %119 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #12
  %120 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 1
  %121 = bitcast %"class.blink::Thread"* %119 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %122 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %122, i64 4
  %124 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %123, align 8
  call void %124(%"class.blink::Thread"* %119, %"class.base::sequence_manager::TaskTimeObserver"* %120) #12
  %125 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 8, i32 0, i32 0
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 14, i32 0, i32 0
  store i64 0, i64* %130, align 8
  %131 = call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %132 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 15, i32 0, i32 0
  store i64 %131, i64* %132, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  %133 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %116
  %139 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %85, %116, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #12
  br label %142

142:                                              ; preds = %77, %67, %141, %79
  br i1 %25, label %156, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %156

156:                                              ; preds = %142, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25InspectorPerformanceAgent13HasTimeDomainERKN3WTF6StringE(%"class.blink::InspectorPerformanceAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %2
  %11 = load i8*, i8** @_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum11ThreadTicksE, align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %20, %16
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = icmp eq i8* %11, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = tail call i64 @strlen(i8* nonnull %11) #13
  %34 = icmp ult i64 %33, 4294967296
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %32
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %32
  %37 = trunc i64 %33 to i32
  br label %38

38:                                               ; preds = %27, %36
  %39 = phi i32 [ %37, %36 ], [ 0, %27 ]
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %11, i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %39, i32* %43, align 8
  %44 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  br label %80

45:                                               ; preds = %2
  %46 = load i8*, i8** @_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum9TimeTicksE, align 8
  %47 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %53, i64* %54, align 8
  br label %62

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  br label %62

62:                                               ; preds = %55, %51
  %63 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = icmp eq i8* %46, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = tail call i64 @strlen(i8* nonnull %46) #13
  %69 = icmp ult i64 %68, 4294967296
  br i1 %69, label %71, label %70, !prof !2

70:                                               ; preds = %67
  tail call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %67
  %72 = trunc i64 %68 to i32
  br label %73

73:                                               ; preds = %62, %71
  %74 = phi i32 [ %72, %71 ], [ 0, %62 ]
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %76 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %46, i8** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %74, i32* %78, align 8
  %79 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  br label %80

80:                                               ; preds = %73, %38
  %81 = phi i8* [ %65, %73 ], [ %30, %38 ]
  %82 = phi i8* [ %47, %73 ], [ %12, %38 ]
  %83 = phi i1 [ %79, %73 ], [ %44, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #12
  ret i1 %83
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent18InnerSetTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.1814", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = load i8*, i8** @_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum9TimeTicksE, align 8
  %11 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %16, align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %17, i64* %18, align 8
  br label %26

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  br label %26

26:                                               ; preds = %19, %15
  %27 = phi i32 [ %22, %19 ], [ 0, %15 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = icmp eq i8* %10, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %10) #13
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %37

37:                                               ; preds = %26, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %26 ]
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %10, i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  %43 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %43, label %44, label %55

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 1
  %46 = load i8, i8* %45, align 8, !range !4
  %47 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 2
  %48 = load i8, i8* %47, align 1, !range !4
  %49 = icmp eq i8 %46, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %44
  store i8 %46, i8* %47, align 1
  %51 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 0, i32 2
  %52 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %52, %"class.WTF::String"* dereferenceable(8) %53, %"class.blink::WebVector.1814"* null) #12
  br label %54

54:                                               ; preds = %44, %50
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  br label %129

55:                                               ; preds = %37
  %56 = load i8*, i8** @_ZN5blink8protocol11Performance13SetTimeDomain14TimeDomainEnum11ThreadTicksE, align 8
  %57 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %63 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %62, i64* %63, align 8
  br label %71

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 1
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %70 = bitcast i8** %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8
  br label %71

71:                                               ; preds = %64, %60
  %72 = phi i32 [ %67, %64 ], [ 0, %60 ]
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %75 = icmp eq i8* %56, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = call i64 @strlen(i8* nonnull %56) #13
  %78 = icmp ult i64 %77, 4294967296
  br i1 %78, label %80, label %79, !prof !2

79:                                               ; preds = %76
  call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %76
  %81 = trunc i64 %77 to i32
  br label %82

82:                                               ; preds = %71, %80
  %83 = phi i32 [ %81, %80 ], [ 0, %71 ]
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %56, i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %83, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  br i1 %88, label %89, label %117

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21
  %91 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 2
  %92 = load i8, i8* %91, align 1, !range !4
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %116, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 1
  %96 = load i8, i8* %95, align 8, !range !4
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %90 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %100 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %100, i64 2
  %102 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %101, align 8
  call void %102(%"class.blink::InspectorAgentState::SimpleField"* %90) #12
  br label %116

103:                                              ; preds = %94
  store i8 1, i8* %91, align 1
  %104 = bitcast %"class.blink::WebVector.1814"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = getelementptr inbounds %"class.blink::WebVector.1814", %"class.blink::WebVector.1814"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #12
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.1814"* nonnull %4) #12
  %106 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 0, i32 2
  %107 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %107, %"class.WTF::String"* dereferenceable(8) %108, %"class.blink::WebVector.1814"* nonnull %4) #12
  %109 = load i8*, i8** %105, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::WebVector.1814", %"class.blink::WebVector.1814"* %4, i64 0, i32 0, i32 0, i32 1
  %113 = ptrtoint i8* %109 to i64
  %114 = bitcast i8** %112 to i64*
  store i64 %113, i64* %114, align 8
  call void @_ZdlPv(i8* nonnull %109) #14
  br label %115

115:                                              ; preds = %111, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %116

116:                                              ; preds = %89, %98, %115
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  br label %129

117:                                              ; preds = %82
  %118 = call i8* @_Znwm(i64 48) #14
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %118, i8** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %121, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i64 34, i1 false) #12
  %122 = getelementptr inbounds i8, i8* %118, i64 34
  store i8 0, i8* %122, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #12
  %123 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %117
  %128 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %127, %117, %116, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgent6enableEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 -1, i32 21, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgent6enableEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPerformanceAgent"* %5, %"class.crdtp::detail::ValueMaybe"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 1
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, %4
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  store i8 %8, i8* %3, align 1
  %11 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 0, i32 2
  %12 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %12, %"class.WTF::String"* dereferenceable(8) %13, %"class.blink::WebVector.1814"* null) #12
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %15, align 8
  tail call void @_ZN5blink13CoreProbeSink31RemoveInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"* %16, %"class.blink::InspectorPerformanceAgent"* %1) #12
  %17 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #12
  %18 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 1
  %19 = bitcast %"class.blink::Thread"* %17 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %20 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %20, i64 5
  %22 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %21, align 8
  tail call void %22(%"class.blink::Thread"* %17, %"class.base::sequence_manager::TaskTimeObserver"* %18) #12
  br label %23

23:                                               ; preds = %2, %14
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.1814"* null) #12
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink13CoreProbeSink31RemoveInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorPerformanceAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 -1, i32 21, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorPerformanceAgent"*
  %5 = getelementptr inbounds i8, i8* %3, i64 225
  %6 = load i8, i8* %5, align 1, !range !4, !noalias !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %3, i64 224
  %10 = load i8, i8* %9, align 8, !range !4, !noalias !5
  %11 = icmp eq i8 %10, %6
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  store i8 %10, i8* %5, align 1, !noalias !5
  %13 = getelementptr inbounds i8, i8* %3, i64 216
  %14 = bitcast i8* %13 to %"class.blink::InspectorSessionState"**
  %15 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %14, align 8, !noalias !5
  %16 = getelementptr inbounds i8, i8* %3, i64 208
  %17 = bitcast i8* %16 to %"class.WTF::String"*
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %15, %"class.WTF::String"* dereferenceable(8) %17, %"class.blink::WebVector.1814"* null) #12
  br label %18

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds i8, i8* %3, i64 16
  %20 = bitcast i8* %19 to %"class.blink::CoreProbeSink"**
  %21 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %20, align 8, !noalias !5
  tail call void @_ZN5blink13CoreProbeSink31RemoveInspectorPerformanceAgentEPNS_25InspectorPerformanceAgentE(%"class.blink::CoreProbeSink"* %21, %"class.blink::InspectorPerformanceAgent"* %4) #12
  %22 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #12
  %23 = getelementptr inbounds i8, i8* %3, i64 56
  %24 = bitcast i8* %23 to %"class.base::sequence_manager::TaskTimeObserver"*
  %25 = bitcast %"class.blink::Thread"* %22 to void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)***
  %26 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)**, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %26, i64 5
  %28 = load void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)*, void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)** %27, align 8
  tail call void %28(%"class.blink::Thread"* %22, %"class.base::sequence_manager::TaskTimeObserver"* %24) #12
  br label %29

29:                                               ; preds = %2, %18
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 80) #14
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 71, i64 -9223372036854775728>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i64 71, i1 false) #12
  %13 = getelementptr inbounds i8, i8* %9, i64 71
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #12
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #14
  br label %22

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 14, i32 0, i32 0
  store i64 0, i64* %21, align 8
  tail call void @_ZN5blink25InspectorPerformanceAgent18InnerSetTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPerformanceAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2)
  br label %22

22:                                               ; preds = %18, %8, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 -1, i32 21, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = getelementptr inbounds i8, i8* %5, i64 225
  %8 = load i8, i8* %7, align 1, !range !4, !noalias !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 80) #14
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8, !noalias !8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 71, i64 -9223372036854775728>, <2 x i64>* %14, align 8, !noalias !8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i64 71, i1 false) #12
  %15 = getelementptr inbounds i8, i8* %11, i64 71
  store i8 0, i8* %15, align 1, !noalias !8
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #12
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8, !noalias !8
  call void @_ZdlPv(i8* %21) #14
  br label %26

22:                                               ; preds = %3
  %23 = bitcast i8* %5 to %"class.blink::InspectorPerformanceAgent"*
  %24 = getelementptr inbounds i8, i8* %5, i64 160
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8, !noalias !8
  tail call void @_ZN5blink25InspectorPerformanceAgent18InnerSetTimeDomainERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPerformanceAgent"* %23, %"class.WTF::String"* dereferenceable(8) %2) #12
  br label %26

26:                                               ; preds = %10, %20, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink25InspectorPerformanceAgent15GetTimeTicksNowEv(%"class.blink::InspectorPerformanceAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %9

7:                                                ; preds = %1
  %8 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ %6, %5 ], [ %8, %7 ]
  ret i64 %10
}

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN4base11ThreadTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"* readonly, %"class.std::__1::unique_ptr.2081"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %5 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %6 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %7 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %8 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %9 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %10 = alloca %"class.base::Process", align 4
  %11 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %12 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %18 = alloca %"class.logging::CheckError", align 8
  %19 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %20 = alloca %"class.logging::CheckError", align 8
  %21 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %22 = alloca %"class.logging::CheckError", align 8
  %23 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %24 = alloca %"class.logging::CheckError", align 8
  %25 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %26 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %27 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %28 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %29 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %30 = alloca %"class.std::__1::unique_ptr.2086", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.WTF::String", align 8
  %39 = alloca %"class.WTF::String", align 8
  %40 = alloca %"class.base::TimeDelta", align 8
  %41 = alloca %"class.WTF::String", align 8
  %42 = alloca %"class.WTF::String", align 8
  %43 = alloca %"class.WTF::String", align 8
  %44 = alloca %"class.WTF::String", align 8
  %45 = alloca %"class.v8::HeapStatistics", align 8
  %46 = alloca %"class.WTF::String", align 8
  %47 = alloca %"class.WTF::String", align 8
  %48 = alloca %"class.WTF::String", align 8
  %49 = alloca %"class.WTF::String", align 8
  %50 = alloca %"class.WTF::String", align 8
  %51 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 20, i32 2
  %52 = load i8, i8* %51, align 1, !range !4
  %53 = icmp eq i8 %52, 0
  %54 = tail call i8* @_Znwm(i64 24) #14
  %55 = bitcast i8* %54 to %"class.std::__1::vector.2084"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #12
  %56 = ptrtoint i8* %54 to i64
  br i1 %53, label %57, label %92

57:                                               ; preds = %3
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2081", %"class.std::__1::unique_ptr.2081"* %2, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::vector.2084"*, %"class.std::__1::vector.2084"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.2081"* %2 to i64*
  store i64 %56, i64* %60, align 8
  %61 = icmp eq %"class.std::__1::vector.2084"* %59, null
  br i1 %61, label %91, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %59, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %63, align 8
  %65 = icmp eq %"class.std::__1::unique_ptr.2086"* %64, null
  br i1 %65, label %89, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::unique_ptr.2086"* %64 to i8*
  %68 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %59, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %68, align 8
  %70 = icmp eq %"class.std::__1::unique_ptr.2086"* %69, %64
  br i1 %70, label %87, label %71

71:                                               ; preds = %66, %82
  %72 = phi %"class.std::__1::unique_ptr.2086"* [ %73, %82 ], [ %69, %66 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %72, i64 -1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %74, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %74, align 8
  %76 = icmp eq %"class.blink::protocol::Performance::Metric"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.blink::protocol::Performance::Metric"* %75 to void (%"class.blink::protocol::Performance::Metric"*)***
  %79 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %79, i64 2
  %81 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %80, align 8
  tail call void %81(%"class.blink::protocol::Performance::Metric"* nonnull %75) #12
  br label %82

82:                                               ; preds = %77, %71
  %83 = icmp eq %"class.std::__1::unique_ptr.2086"* %73, %64
  br i1 %83, label %84, label %71

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector.2084"* %59 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %66
  %88 = phi i8* [ %86, %84 ], [ %67, %66 ]
  store %"class.std::__1::unique_ptr.2086"* %64, %"class.std::__1::unique_ptr.2086"** %68, align 8
  tail call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %87, %62
  %90 = bitcast %"class.std::__1::vector.2084"* %59 to i8*
  tail call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %89, %57
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  br label %2042

92:                                               ; preds = %3
  %93 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #12
  %94 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %95 = add i64 %94, -9223372036854775807
  %96 = icmp ult i64 %95, 2
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = sitofp i64 %94 to double
  %99 = fdiv double %98, 1.000000e+06
  br label %103

100:                                              ; preds = %92
  %101 = icmp slt i64 %94, 0
  %102 = select i1 %101, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %103

103:                                              ; preds = %97, %100
  %104 = phi double [ %102, %100 ], [ %99, %97 ]
  %105 = bitcast %"class.std::__1::unique_ptr.2086"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = call i8* @_Znwm(i64 24) #14
  %107 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #12
  %109 = ptrtoint i8* %106 to i64
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %128, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %128

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %131, !prof !3

127:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %113, %103
  %129 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %130 = bitcast i8* %108 to i64*
  store i64 %129, i64* %130, align 8
  br label %151

131:                                              ; preds = %118
  %132 = trunc i33 %124 to i32
  store i32 %132, i32* %119, align 4
  %133 = bitcast i8* %108 to %"class.WTF::StringImpl"**
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %136 = bitcast i8* %108 to i64*
  store i64 %135, i64* %136, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #12
  br label %151

151:                                              ; preds = %128, %131, %147, %150
  %152 = getelementptr inbounds i8, i8* %106, i64 16
  %153 = bitcast i8* %152 to double*
  store double %104, double* %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %30, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.2086"* %30 to i64*
  store i64 %109, i64* %155, align 8
  %156 = getelementptr inbounds i8, i8* %54, i64 8
  %157 = bitcast i8* %156 to %"class.std::__1::unique_ptr.2086"**
  %158 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %159 = getelementptr inbounds i8, i8* %54, i64 16
  %160 = bitcast i8* %159 to %"class.std::__1::unique_ptr.2086"**
  %161 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %162 = icmp ult %"class.std::__1::unique_ptr.2086"* %158, %161
  br i1 %162, label %163, label %168

163:                                              ; preds = %151
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %154, align 8
  %164 = bitcast %"class.std::__1::unique_ptr.2086"* %158 to i64*
  store i64 %109, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %158, i64 1
  %166 = ptrtoint %"class.std::__1::unique_ptr.2086"* %165 to i64
  %167 = bitcast i8* %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %169

168:                                              ; preds = %151
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %30) #12
  br label %169

169:                                              ; preds = %163, %168
  %170 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %154, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %154, align 8
  %171 = icmp eq %"class.blink::protocol::Performance::Metric"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %169
  %173 = bitcast %"class.blink::protocol::Performance::Metric"* %170 to void (%"class.blink::protocol::Performance::Metric"*)***
  %174 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %174, i64 2
  %176 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %175, align 8
  call void %176(%"class.blink::protocol::Performance::Metric"* nonnull %170) #12
  br label %177

177:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #12
  br label %193

193:                                              ; preds = %177, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  %194 = bitcast %"class.WTF::String"* %32 to i8*
  %195 = bitcast %"class.std::__1::unique_ptr.2086"* %25 to i8*
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %25, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr.2086"* %25 to i64*
  %199 = bitcast i8* %156 to i64*
  br label %585

200:                                              ; preds = %672
  %201 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 21, i32 2
  %202 = load i8, i8* %201, align 1, !range !4
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %200
  %205 = call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %208

206:                                              ; preds = %200
  %207 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %208

208:                                              ; preds = %204, %206
  %209 = phi i64 [ %205, %204 ], [ %207, %206 ]
  %210 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #12
  %211 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 16
  %212 = load i64, i64* %211, align 8
  %213 = uitofp i64 %212 to double
  %214 = bitcast %"class.std::__1::unique_ptr.2086"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #12
  %215 = call i8* @_Znwm(i64 24) #14
  %216 = bitcast i8* %215 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %217 = getelementptr inbounds i8, i8* %215, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false) #12
  %218 = ptrtoint i8* %215 to i64
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %237, label %222

222:                                              ; preds = %208
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %237

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i33
  %231 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #12
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %240, !prof !3

236:                                              ; preds = %227
  call void @llvm.trap() #12
  unreachable

237:                                              ; preds = %222, %208
  %238 = ptrtoint %"class.WTF::StringImpl"* %220 to i64
  %239 = bitcast i8* %217 to i64*
  store i64 %238, i64* %239, align 8
  br label %260

240:                                              ; preds = %227
  %241 = trunc i33 %233 to i32
  store i32 %241, i32* %228, align 4
  %242 = bitcast i8* %217 to %"class.WTF::StringImpl"**
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = ptrtoint %"class.WTF::StringImpl"* %220 to i64
  %245 = bitcast i8* %217 to i64*
  store i64 %244, i64* %245, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #12
  br label %260

260:                                              ; preds = %237, %240, %256, %259
  %261 = getelementptr inbounds i8, i8* %215, i64 16
  %262 = bitcast i8* %261 to double*
  store double %213, double* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %29, i64 0, i32 0, i32 0, i32 0
  %264 = bitcast %"class.std::__1::unique_ptr.2086"* %29 to i64*
  store i64 %218, i64* %264, align 8
  %265 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %266 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %267 = icmp ult %"class.std::__1::unique_ptr.2086"* %265, %266
  br i1 %267, label %268, label %272

268:                                              ; preds = %260
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %263, align 8
  %269 = bitcast %"class.std::__1::unique_ptr.2086"* %265 to i64*
  store i64 %218, i64* %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %265, i64 1
  %271 = ptrtoint %"class.std::__1::unique_ptr.2086"* %270 to i64
  store i64 %271, i64* %199, align 8
  br label %273

272:                                              ; preds = %260
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %29) #12
  br label %273

273:                                              ; preds = %268, %272
  %274 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %263, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %263, align 8
  %275 = icmp eq %"class.blink::protocol::Performance::Metric"* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %273
  %277 = bitcast %"class.blink::protocol::Performance::Metric"* %274 to void (%"class.blink::protocol::Performance::Metric"*)***
  %278 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %278, i64 2
  %280 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %279, align 8
  call void %280(%"class.blink::protocol::Performance::Metric"* nonnull %274) #12
  br label %281

281:                                              ; preds = %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #12
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #12
  br label %297

297:                                              ; preds = %281, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #12
  %298 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i64 16) #12
  %299 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 17
  %300 = load i64, i64* %299, align 8
  %301 = uitofp i64 %300 to double
  %302 = bitcast %"class.std::__1::unique_ptr.2086"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #12
  %303 = call i8* @_Znwm(i64 24) #14
  %304 = bitcast i8* %303 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds i8, i8* %303, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 16, i1 false) #12
  %306 = ptrtoint i8* %303 to i64
  %307 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %325, label %310

310:                                              ; preds = %297
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %325

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #12
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %328, !prof !3

324:                                              ; preds = %315
  call void @llvm.trap() #12
  unreachable

325:                                              ; preds = %310, %297
  %326 = ptrtoint %"class.WTF::StringImpl"* %308 to i64
  %327 = bitcast i8* %305 to i64*
  store i64 %326, i64* %327, align 8
  br label %348

328:                                              ; preds = %315
  %329 = trunc i33 %321 to i32
  store i32 %329, i32* %316, align 4
  %330 = bitcast i8* %305 to %"class.WTF::StringImpl"**
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  %332 = ptrtoint %"class.WTF::StringImpl"* %308 to i64
  %333 = bitcast i8* %305 to i64*
  store i64 %332, i64* %333, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %334, label %348, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  br i1 %339, label %342, label %344

342:                                              ; preds = %335
  %343 = add i32 %341, -1
  store i32 %343, i32* %340, align 4
  br label %344

344:                                              ; preds = %342, %335
  %345 = phi i32 [ %343, %342 ], [ %341, %335 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #12
  br label %348

348:                                              ; preds = %325, %328, %344, %347
  %349 = getelementptr inbounds i8, i8* %303, i64 16
  %350 = bitcast i8* %349 to double*
  store double %301, double* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %28, i64 0, i32 0, i32 0, i32 0
  %352 = bitcast %"class.std::__1::unique_ptr.2086"* %28 to i64*
  store i64 %306, i64* %352, align 8
  %353 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %354 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %355 = icmp ult %"class.std::__1::unique_ptr.2086"* %353, %354
  br i1 %355, label %356, label %360

356:                                              ; preds = %348
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %351, align 8
  %357 = bitcast %"class.std::__1::unique_ptr.2086"* %353 to i64*
  store i64 %306, i64* %357, align 8
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %353, i64 1
  %359 = ptrtoint %"class.std::__1::unique_ptr.2086"* %358 to i64
  store i64 %359, i64* %199, align 8
  br label %361

360:                                              ; preds = %348
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %28) #12
  br label %361

361:                                              ; preds = %356, %360
  %362 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %351, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %351, align 8
  %363 = icmp eq %"class.blink::protocol::Performance::Metric"* %362, null
  br i1 %363, label %369, label %364

364:                                              ; preds = %361
  %365 = bitcast %"class.blink::protocol::Performance::Metric"* %362 to void (%"class.blink::protocol::Performance::Metric"*)***
  %366 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %365, align 8
  %367 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %366, i64 2
  %368 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %367, align 8
  call void %368(%"class.blink::protocol::Performance::Metric"* nonnull %362) #12
  br label %369

369:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #12
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #12
  br label %385

385:                                              ; preds = %369, %381, %384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #12
  %386 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 14) #12
  %387 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 3, i32 0
  %388 = load i64, i64* %387, align 8
  %389 = add i64 %388, -9223372036854775807
  %390 = icmp ult i64 %389, 2
  br i1 %390, label %394, label %391

391:                                              ; preds = %385
  %392 = sitofp i64 %388 to double
  %393 = fdiv double %392, 1.000000e+06
  br label %397

394:                                              ; preds = %385
  %395 = icmp slt i64 %388, 0
  %396 = select i1 %395, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %397

397:                                              ; preds = %391, %394
  %398 = phi double [ %396, %394 ], [ %393, %391 ]
  %399 = bitcast %"class.std::__1::unique_ptr.2086"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399) #12
  %400 = call i8* @_Znwm(i64 24) #14
  %401 = bitcast i8* %400 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %401, align 8
  %402 = getelementptr inbounds i8, i8* %400, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %402, i8 0, i64 16, i1 false) #12
  %403 = ptrtoint i8* %400 to i64
  %404 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %422, label %407

407:                                              ; preds = %397
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %422

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = zext i32 %414 to i33
  %416 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %415, i33 1) #12
  %417 = extractvalue { i33, i1 } %416, 1
  %418 = extractvalue { i33, i1 } %416, 0
  %419 = icmp slt i33 %418, 0
  %420 = or i1 %417, %419
  br i1 %420, label %421, label %425, !prof !3

421:                                              ; preds = %412
  call void @llvm.trap() #12
  unreachable

422:                                              ; preds = %407, %397
  %423 = ptrtoint %"class.WTF::StringImpl"* %405 to i64
  %424 = bitcast i8* %402 to i64*
  store i64 %423, i64* %424, align 8
  br label %445

425:                                              ; preds = %412
  %426 = trunc i33 %418 to i32
  store i32 %426, i32* %413, align 4
  %427 = bitcast i8* %402 to %"class.WTF::StringImpl"**
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = ptrtoint %"class.WTF::StringImpl"* %405 to i64
  %430 = bitcast i8* %402 to i64*
  store i64 %429, i64* %430, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %431, label %445, label %432

432:                                              ; preds = %425
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  br i1 %436, label %439, label %441

439:                                              ; preds = %432
  %440 = add i32 %438, -1
  store i32 %440, i32* %437, align 4
  br label %441

441:                                              ; preds = %439, %432
  %442 = phi i32 [ %440, %439 ], [ %438, %432 ]
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #12
  br label %445

445:                                              ; preds = %422, %425, %441, %444
  %446 = getelementptr inbounds i8, i8* %400, i64 16
  %447 = bitcast i8* %446 to double*
  store double %398, double* %447, align 8
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %27, i64 0, i32 0, i32 0, i32 0
  %449 = bitcast %"class.std::__1::unique_ptr.2086"* %27 to i64*
  store i64 %403, i64* %449, align 8
  %450 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %451 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %452 = icmp ult %"class.std::__1::unique_ptr.2086"* %450, %451
  br i1 %452, label %453, label %457

453:                                              ; preds = %445
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %448, align 8
  %454 = bitcast %"class.std::__1::unique_ptr.2086"* %450 to i64*
  store i64 %403, i64* %454, align 8
  %455 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %450, i64 1
  %456 = ptrtoint %"class.std::__1::unique_ptr.2086"* %455 to i64
  store i64 %456, i64* %199, align 8
  br label %458

457:                                              ; preds = %445
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %27) #12
  br label %458

458:                                              ; preds = %453, %457
  %459 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %448, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %448, align 8
  %460 = icmp eq %"class.blink::protocol::Performance::Metric"* %459, null
  br i1 %460, label %466, label %461

461:                                              ; preds = %458
  %462 = bitcast %"class.blink::protocol::Performance::Metric"* %459 to void (%"class.blink::protocol::Performance::Metric"*)***
  %463 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %462, align 8
  %464 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %463, i64 2
  %465 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %464, align 8
  call void %465(%"class.blink::protocol::Performance::Metric"* nonnull %459) #12
  br label %466

466:                                              ; preds = %458, %461
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399) #12
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #12
  br label %482

482:                                              ; preds = %466, %478, %481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #12
  %483 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %483) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %36, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 19) #12
  %484 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 5, i32 0
  %485 = load i64, i64* %484, align 8
  %486 = add i64 %485, -9223372036854775807
  %487 = icmp ult i64 %486, 2
  br i1 %487, label %491, label %488

488:                                              ; preds = %482
  %489 = sitofp i64 %485 to double
  %490 = fdiv double %489, 1.000000e+06
  br label %494

491:                                              ; preds = %482
  %492 = icmp slt i64 %485, 0
  %493 = select i1 %492, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %494

494:                                              ; preds = %488, %491
  %495 = phi double [ %493, %491 ], [ %490, %488 ]
  %496 = bitcast %"class.std::__1::unique_ptr.2086"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %496) #12
  %497 = call i8* @_Znwm(i64 24) #14
  %498 = bitcast i8* %497 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %498, align 8
  %499 = getelementptr inbounds i8, i8* %497, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %499, i8 0, i64 16, i1 false) #12
  %500 = ptrtoint i8* %497 to i64
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %503 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %503, label %519, label %504

504:                                              ; preds = %494
  %505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %519

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i33
  %513 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %512, i33 1) #12
  %514 = extractvalue { i33, i1 } %513, 1
  %515 = extractvalue { i33, i1 } %513, 0
  %516 = icmp slt i33 %515, 0
  %517 = or i1 %514, %516
  br i1 %517, label %518, label %522, !prof !3

518:                                              ; preds = %509
  call void @llvm.trap() #12
  unreachable

519:                                              ; preds = %504, %494
  %520 = ptrtoint %"class.WTF::StringImpl"* %502 to i64
  %521 = bitcast i8* %499 to i64*
  store i64 %520, i64* %521, align 8
  br label %542

522:                                              ; preds = %509
  %523 = trunc i33 %515 to i32
  store i32 %523, i32* %510, align 4
  %524 = bitcast i8* %499 to %"class.WTF::StringImpl"**
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %524, align 8
  %526 = ptrtoint %"class.WTF::StringImpl"* %502 to i64
  %527 = bitcast i8* %499 to i64*
  store i64 %526, i64* %527, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %522
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %525) #12
  br label %542

542:                                              ; preds = %519, %522, %538, %541
  %543 = getelementptr inbounds i8, i8* %497, i64 16
  %544 = bitcast i8* %543 to double*
  store double %495, double* %544, align 8
  %545 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %26, i64 0, i32 0, i32 0, i32 0
  %546 = bitcast %"class.std::__1::unique_ptr.2086"* %26 to i64*
  store i64 %500, i64* %546, align 8
  %547 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %548 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %549 = icmp ult %"class.std::__1::unique_ptr.2086"* %547, %548
  br i1 %549, label %550, label %554

550:                                              ; preds = %542
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %545, align 8
  %551 = bitcast %"class.std::__1::unique_ptr.2086"* %547 to i64*
  store i64 %500, i64* %551, align 8
  %552 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %547, i64 1
  %553 = ptrtoint %"class.std::__1::unique_ptr.2086"* %552 to i64
  store i64 %553, i64* %199, align 8
  br label %555

554:                                              ; preds = %542
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %26) #12
  br label %555

555:                                              ; preds = %550, %554
  %556 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %545, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %545, align 8
  %557 = icmp eq %"class.blink::protocol::Performance::Metric"* %556, null
  br i1 %557, label %563, label %558

558:                                              ; preds = %555
  %559 = bitcast %"class.blink::protocol::Performance::Metric"* %556 to void (%"class.blink::protocol::Performance::Metric"*)***
  %560 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %559, align 8
  %561 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %560, i64 2
  %562 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %561, align 8
  call void %562(%"class.blink::protocol::Performance::Metric"* nonnull %556) #12
  br label %563

563:                                              ; preds = %555, %558
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %496) #12
  %564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %564, null
  br i1 %565, label %579, label %566

566:                                              ; preds = %563
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = load atomic i32, i32* %567 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %564, i64 0, i32 0
  %572 = load i32, i32* %571, align 4
  br i1 %570, label %573, label %575

573:                                              ; preds = %566
  %574 = add i32 %572, -1
  store i32 %574, i32* %571, align 4
  br label %575

575:                                              ; preds = %573, %566
  %576 = phi i32 [ %574, %573 ], [ %572, %566 ]
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %579

578:                                              ; preds = %575
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %564) #12
  br label %579

579:                                              ; preds = %563, %575, %578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %483) #12
  %580 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 13, i32 0
  %581 = load i64, i64* %580, align 8
  %582 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %583 = load i64, i64* %582, align 8
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %694, label %675

585:                                              ; preds = %672, %193
  %586 = phi i64 [ 0, %193 ], [ %673, %672 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #12
  %587 = getelementptr inbounds [18 x i8*], [18 x i8*]* @_ZN5blink12_GLOBAL__N_121kInstanceCounterNamesE, i64 0, i64 %586
  %588 = load i8*, i8** %587, align 8
  %589 = call i64 @strlen(i8* nonnull %588) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %32, i8* %588, i64 %589) #12
  %590 = trunc i64 %586 to i32
  %591 = call i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32 %590) #12
  %592 = sitofp i32 %591 to double
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #12
  %593 = call i8* @_Znwm(i64 24) #14
  %594 = bitcast i8* %593 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %594, align 8
  %595 = getelementptr inbounds i8, i8* %593, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %595, i8 0, i64 16, i1 false) #12
  %596 = ptrtoint i8* %593 to i64
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %614, label %599

599:                                              ; preds = %585
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %614

604:                                              ; preds = %599
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  %607 = zext i32 %606 to i33
  %608 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %607, i33 1) #12
  %609 = extractvalue { i33, i1 } %608, 1
  %610 = extractvalue { i33, i1 } %608, 0
  %611 = icmp slt i33 %610, 0
  %612 = or i1 %609, %611
  br i1 %612, label %613, label %617, !prof !3

613:                                              ; preds = %604
  call void @llvm.trap() #12
  unreachable

614:                                              ; preds = %599, %585
  %615 = ptrtoint %"class.WTF::StringImpl"* %597 to i64
  %616 = bitcast i8* %595 to i64*
  store i64 %615, i64* %616, align 8
  br label %637

617:                                              ; preds = %604
  %618 = trunc i33 %610 to i32
  store i32 %618, i32* %605, align 4
  %619 = bitcast i8* %595 to %"class.WTF::StringImpl"**
  %620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %619, align 8
  %621 = ptrtoint %"class.WTF::StringImpl"* %597 to i64
  %622 = bitcast i8* %595 to i64*
  store i64 %621, i64* %622, align 8
  %623 = icmp eq %"class.WTF::StringImpl"* %620, null
  br i1 %623, label %637, label %624

624:                                              ; preds = %617
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = load atomic i32, i32* %625 monotonic, align 4
  %627 = and i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 0
  %630 = load i32, i32* %629, align 4
  br i1 %628, label %631, label %633

631:                                              ; preds = %624
  %632 = add i32 %630, -1
  store i32 %632, i32* %629, align 4
  br label %633

633:                                              ; preds = %631, %624
  %634 = phi i32 [ %632, %631 ], [ %630, %624 ]
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %637

636:                                              ; preds = %633
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #12
  br label %637

637:                                              ; preds = %614, %617, %633, %636
  %638 = getelementptr inbounds i8, i8* %593, i64 16
  %639 = bitcast i8* %638 to double*
  store double %592, double* %639, align 8
  store i64 %596, i64* %198, align 8
  %640 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %641 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %642 = icmp ult %"class.std::__1::unique_ptr.2086"* %640, %641
  br i1 %642, label %643, label %647

643:                                              ; preds = %637
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %197, align 8
  %644 = bitcast %"class.std::__1::unique_ptr.2086"* %640 to i64*
  store i64 %596, i64* %644, align 8
  %645 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %640, i64 1
  %646 = ptrtoint %"class.std::__1::unique_ptr.2086"* %645 to i64
  store i64 %646, i64* %199, align 8
  br label %648

647:                                              ; preds = %637
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %25) #12
  br label %648

648:                                              ; preds = %643, %647
  %649 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %197, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %197, align 8
  %650 = icmp eq %"class.blink::protocol::Performance::Metric"* %649, null
  br i1 %650, label %656, label %651

651:                                              ; preds = %648
  %652 = bitcast %"class.blink::protocol::Performance::Metric"* %649 to void (%"class.blink::protocol::Performance::Metric"*)***
  %653 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %652, align 8
  %654 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %653, i64 2
  %655 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %654, align 8
  call void %655(%"class.blink::protocol::Performance::Metric"* nonnull %649) #12
  br label %656

656:                                              ; preds = %648, %651
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #12
  %657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %658 = icmp eq %"class.WTF::StringImpl"* %657, null
  br i1 %658, label %672, label %659

659:                                              ; preds = %656
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load atomic i32, i32* %660 monotonic, align 4
  %662 = and i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 0
  %665 = load i32, i32* %664, align 4
  br i1 %663, label %666, label %668

666:                                              ; preds = %659
  %667 = add i32 %665, -1
  store i32 %667, i32* %664, align 4
  br label %668

668:                                              ; preds = %666, %659
  %669 = phi i32 [ %667, %666 ], [ %665, %659 ]
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %672

671:                                              ; preds = %668
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %657) #12
  br label %672

672:                                              ; preds = %656, %668, %671
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #12
  %673 = add nuw nsw i64 %586, 1
  %674 = icmp eq i64 %673, 18
  br i1 %674, label %200, label %585

675:                                              ; preds = %579
  %676 = sub nsw i64 %209, %583
  %677 = add i64 %676, -9223372036854775807
  %678 = icmp ult i64 %677, 2
  br i1 %678, label %686, label %679

679:                                              ; preds = %675
  %680 = icmp slt i64 %676, 0
  %681 = select i1 %680, i64 -9223372036854775808, i64 9223372036854775807
  %682 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %581, i64 %676) #12
  %683 = extractvalue { i64, i1 } %682, 1
  %684 = extractvalue { i64, i1 } %682, 0
  %685 = select i1 %683, i64 %681, i64 %684, !prof !3
  br label %694

686:                                              ; preds = %675
  %687 = add i64 %581, -9223372036854775807
  %688 = icmp ugt i64 %687, 1
  %689 = icmp eq i64 %581, %676
  %690 = or i1 %688, %689
  br i1 %690, label %694, label %691

691:                                              ; preds = %686
  %692 = bitcast %"class.logging::CheckError"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %692) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %693 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %24) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %692) #12
  br label %694

694:                                              ; preds = %691, %686, %679, %579
  %695 = phi i64 [ %581, %579 ], [ %685, %679 ], [ %676, %686 ], [ %676, %691 ]
  %696 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %37, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i64 23) #12
  %697 = add i64 %695, -9223372036854775807
  %698 = icmp ult i64 %697, 2
  br i1 %698, label %702, label %699

699:                                              ; preds = %694
  %700 = sitofp i64 %695 to double
  %701 = fdiv double %700, 1.000000e+06
  br label %705

702:                                              ; preds = %694
  %703 = icmp slt i64 %695, 0
  %704 = select i1 %703, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %705

705:                                              ; preds = %699, %702
  %706 = phi double [ %704, %702 ], [ %701, %699 ]
  %707 = bitcast %"class.std::__1::unique_ptr.2086"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %707) #12
  %708 = call i8* @_Znwm(i64 24) #14
  %709 = bitcast i8* %708 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %709, align 8
  %710 = getelementptr inbounds i8, i8* %708, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %710, i8 0, i64 16, i1 false) #12
  %711 = ptrtoint i8* %708 to i64
  %712 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %730, label %715

715:                                              ; preds = %705
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load atomic i32, i32* %716 monotonic, align 4
  %718 = and i32 %717, 2
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %730

720:                                              ; preds = %715
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 0
  %722 = load i32, i32* %721, align 4
  %723 = zext i32 %722 to i33
  %724 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %723, i33 1) #12
  %725 = extractvalue { i33, i1 } %724, 1
  %726 = extractvalue { i33, i1 } %724, 0
  %727 = icmp slt i33 %726, 0
  %728 = or i1 %725, %727
  br i1 %728, label %729, label %733, !prof !3

729:                                              ; preds = %720
  call void @llvm.trap() #12
  unreachable

730:                                              ; preds = %715, %705
  %731 = ptrtoint %"class.WTF::StringImpl"* %713 to i64
  %732 = bitcast i8* %710 to i64*
  store i64 %731, i64* %732, align 8
  br label %753

733:                                              ; preds = %720
  %734 = trunc i33 %726 to i32
  store i32 %734, i32* %721, align 4
  %735 = bitcast i8* %710 to %"class.WTF::StringImpl"**
  %736 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %735, align 8
  %737 = ptrtoint %"class.WTF::StringImpl"* %713 to i64
  %738 = bitcast i8* %710 to i64*
  store i64 %737, i64* %738, align 8
  %739 = icmp eq %"class.WTF::StringImpl"* %736, null
  br i1 %739, label %753, label %740

740:                                              ; preds = %733
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %736, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %742 = load atomic i32, i32* %741 monotonic, align 4
  %743 = and i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %736, i64 0, i32 0
  %746 = load i32, i32* %745, align 4
  br i1 %744, label %747, label %749

747:                                              ; preds = %740
  %748 = add i32 %746, -1
  store i32 %748, i32* %745, align 4
  br label %749

749:                                              ; preds = %747, %740
  %750 = phi i32 [ %748, %747 ], [ %746, %740 ]
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %752, label %753

752:                                              ; preds = %749
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %736) #12
  br label %753

753:                                              ; preds = %730, %733, %749, %752
  %754 = getelementptr inbounds i8, i8* %708, i64 16
  %755 = bitcast i8* %754 to double*
  store double %706, double* %755, align 8
  %756 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %23, i64 0, i32 0, i32 0, i32 0
  %757 = bitcast %"class.std::__1::unique_ptr.2086"* %23 to i64*
  store i64 %711, i64* %757, align 8
  %758 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %759 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %760 = icmp ult %"class.std::__1::unique_ptr.2086"* %758, %759
  br i1 %760, label %761, label %765

761:                                              ; preds = %753
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %756, align 8
  %762 = bitcast %"class.std::__1::unique_ptr.2086"* %758 to i64*
  store i64 %711, i64* %762, align 8
  %763 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %758, i64 1
  %764 = ptrtoint %"class.std::__1::unique_ptr.2086"* %763 to i64
  store i64 %764, i64* %199, align 8
  br label %766

765:                                              ; preds = %753
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %23) #12
  br label %766

766:                                              ; preds = %761, %765
  %767 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %756, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %756, align 8
  %768 = icmp eq %"class.blink::protocol::Performance::Metric"* %767, null
  br i1 %768, label %774, label %769

769:                                              ; preds = %766
  %770 = bitcast %"class.blink::protocol::Performance::Metric"* %767 to void (%"class.blink::protocol::Performance::Metric"*)***
  %771 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %770, align 8
  %772 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %771, i64 2
  %773 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %772, align 8
  call void %773(%"class.blink::protocol::Performance::Metric"* nonnull %767) #12
  br label %774

774:                                              ; preds = %766, %769
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %707) #12
  %775 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  %776 = icmp eq %"class.WTF::StringImpl"* %775, null
  br i1 %776, label %790, label %777

777:                                              ; preds = %774
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4
  %780 = and i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  br i1 %781, label %784, label %786

784:                                              ; preds = %777
  %785 = add i32 %783, -1
  store i32 %785, i32* %782, align 4
  br label %786

786:                                              ; preds = %784, %777
  %787 = phi i32 [ %785, %784 ], [ %783, %777 ]
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %790

789:                                              ; preds = %786
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %775) #12
  br label %790

790:                                              ; preds = %774, %786, %789
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #12
  %791 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 7, i32 0
  %792 = load i64, i64* %791, align 8
  %793 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 8, i32 0, i32 0
  %794 = load i64, i64* %793, align 8
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %815, label %796

796:                                              ; preds = %790
  %797 = sub nsw i64 %209, %794
  %798 = add i64 %797, -9223372036854775807
  %799 = icmp ult i64 %798, 2
  br i1 %799, label %807, label %800

800:                                              ; preds = %796
  %801 = icmp slt i64 %797, 0
  %802 = select i1 %801, i64 -9223372036854775808, i64 9223372036854775807
  %803 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %792, i64 %797) #12
  %804 = extractvalue { i64, i1 } %803, 1
  %805 = extractvalue { i64, i1 } %803, 0
  %806 = select i1 %804, i64 %802, i64 %805, !prof !3
  br label %815

807:                                              ; preds = %796
  %808 = add i64 %792, -9223372036854775807
  %809 = icmp ugt i64 %808, 1
  %810 = icmp eq i64 %792, %797
  %811 = or i1 %809, %810
  br i1 %811, label %815, label %812

812:                                              ; preds = %807
  %813 = bitcast %"class.logging::CheckError"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %813) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %814 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %22) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %813) #12
  br label %815

815:                                              ; preds = %812, %807, %800, %790
  %816 = phi i64 [ %792, %790 ], [ %806, %800 ], [ %797, %807 ], [ %797, %812 ]
  %817 = bitcast %"class.WTF::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %817) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #12
  %818 = add i64 %816, -9223372036854775807
  %819 = icmp ult i64 %818, 2
  br i1 %819, label %823, label %820

820:                                              ; preds = %815
  %821 = sitofp i64 %816 to double
  %822 = fdiv double %821, 1.000000e+06
  br label %826

823:                                              ; preds = %815
  %824 = icmp slt i64 %816, 0
  %825 = select i1 %824, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %826

826:                                              ; preds = %820, %823
  %827 = phi double [ %825, %823 ], [ %822, %820 ]
  %828 = bitcast %"class.std::__1::unique_ptr.2086"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %828) #12
  %829 = call i8* @_Znwm(i64 24) #14
  %830 = bitcast i8* %829 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %830, align 8
  %831 = getelementptr inbounds i8, i8* %829, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %831, i8 0, i64 16, i1 false) #12
  %832 = ptrtoint i8* %829 to i64
  %833 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %834 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %833, align 8
  %835 = icmp eq %"class.WTF::StringImpl"* %834, null
  br i1 %835, label %851, label %836

836:                                              ; preds = %826
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %834, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %838 = load atomic i32, i32* %837 monotonic, align 4
  %839 = and i32 %838, 2
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %851

841:                                              ; preds = %836
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %834, i64 0, i32 0
  %843 = load i32, i32* %842, align 4
  %844 = zext i32 %843 to i33
  %845 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %844, i33 1) #12
  %846 = extractvalue { i33, i1 } %845, 1
  %847 = extractvalue { i33, i1 } %845, 0
  %848 = icmp slt i33 %847, 0
  %849 = or i1 %846, %848
  br i1 %849, label %850, label %854, !prof !3

850:                                              ; preds = %841
  call void @llvm.trap() #12
  unreachable

851:                                              ; preds = %836, %826
  %852 = ptrtoint %"class.WTF::StringImpl"* %834 to i64
  %853 = bitcast i8* %831 to i64*
  store i64 %852, i64* %853, align 8
  br label %874

854:                                              ; preds = %841
  %855 = trunc i33 %847 to i32
  store i32 %855, i32* %842, align 4
  %856 = bitcast i8* %831 to %"class.WTF::StringImpl"**
  %857 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %856, align 8
  %858 = ptrtoint %"class.WTF::StringImpl"* %834 to i64
  %859 = bitcast i8* %831 to i64*
  store i64 %858, i64* %859, align 8
  %860 = icmp eq %"class.WTF::StringImpl"* %857, null
  br i1 %860, label %874, label %861

861:                                              ; preds = %854
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %857, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %863 = load atomic i32, i32* %862 monotonic, align 4
  %864 = and i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %857, i64 0, i32 0
  %867 = load i32, i32* %866, align 4
  br i1 %865, label %868, label %870

868:                                              ; preds = %861
  %869 = add i32 %867, -1
  store i32 %869, i32* %866, align 4
  br label %870

870:                                              ; preds = %868, %861
  %871 = phi i32 [ %869, %868 ], [ %867, %861 ]
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %873, label %874

873:                                              ; preds = %870
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %857) #12
  br label %874

874:                                              ; preds = %851, %854, %870, %873
  %875 = getelementptr inbounds i8, i8* %829, i64 16
  %876 = bitcast i8* %875 to double*
  store double %827, double* %876, align 8
  %877 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %21, i64 0, i32 0, i32 0, i32 0
  %878 = bitcast %"class.std::__1::unique_ptr.2086"* %21 to i64*
  store i64 %832, i64* %878, align 8
  %879 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %880 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %881 = icmp ult %"class.std::__1::unique_ptr.2086"* %879, %880
  br i1 %881, label %882, label %886

882:                                              ; preds = %874
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %877, align 8
  %883 = bitcast %"class.std::__1::unique_ptr.2086"* %879 to i64*
  store i64 %832, i64* %883, align 8
  %884 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %879, i64 1
  %885 = ptrtoint %"class.std::__1::unique_ptr.2086"* %884 to i64
  store i64 %885, i64* %199, align 8
  br label %887

886:                                              ; preds = %874
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %21) #12
  br label %887

887:                                              ; preds = %882, %886
  %888 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %877, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %877, align 8
  %889 = icmp eq %"class.blink::protocol::Performance::Metric"* %888, null
  br i1 %889, label %895, label %890

890:                                              ; preds = %887
  %891 = bitcast %"class.blink::protocol::Performance::Metric"* %888 to void (%"class.blink::protocol::Performance::Metric"*)***
  %892 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %891, align 8
  %893 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %892, i64 2
  %894 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %893, align 8
  call void %894(%"class.blink::protocol::Performance::Metric"* nonnull %888) #12
  br label %895

895:                                              ; preds = %887, %890
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %828) #12
  %896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %833, align 8
  %897 = icmp eq %"class.WTF::StringImpl"* %896, null
  br i1 %897, label %911, label %898

898:                                              ; preds = %895
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 0
  %904 = load i32, i32* %903, align 4
  br i1 %902, label %905, label %907

905:                                              ; preds = %898
  %906 = add i32 %904, -1
  store i32 %906, i32* %903, align 4
  br label %907

907:                                              ; preds = %905, %898
  %908 = phi i32 [ %906, %905 ], [ %904, %898 ]
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %911

910:                                              ; preds = %907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %896) #12
  br label %911

911:                                              ; preds = %895, %907, %910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %817) #12
  %912 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 11, i32 0
  %913 = load i64, i64* %912, align 8
  %914 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 12, i32 0, i32 0
  %915 = load i64, i64* %914, align 8
  %916 = icmp eq i64 %915, 0
  br i1 %916, label %936, label %917

917:                                              ; preds = %911
  %918 = sub nsw i64 %209, %915
  %919 = add i64 %918, -9223372036854775807
  %920 = icmp ult i64 %919, 2
  br i1 %920, label %928, label %921

921:                                              ; preds = %917
  %922 = icmp slt i64 %918, 0
  %923 = select i1 %922, i64 -9223372036854775808, i64 9223372036854775807
  %924 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %913, i64 %918) #12
  %925 = extractvalue { i64, i1 } %924, 1
  %926 = extractvalue { i64, i1 } %924, 0
  %927 = select i1 %925, i64 %923, i64 %926, !prof !3
  br label %936

928:                                              ; preds = %917
  %929 = add i64 %913, -9223372036854775807
  %930 = icmp ugt i64 %929, 1
  %931 = icmp eq i64 %913, %918
  %932 = or i1 %930, %931
  br i1 %932, label %936, label %933

933:                                              ; preds = %928
  %934 = bitcast %"class.logging::CheckError"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %934) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %935 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %20) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %934) #12
  br label %936

936:                                              ; preds = %933, %928, %921, %911
  %937 = phi i64 [ %913, %911 ], [ %927, %921 ], [ %918, %928 ], [ %918, %933 ]
  %938 = bitcast %"class.WTF::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %938) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i64 17) #12
  %939 = add i64 %937, -9223372036854775807
  %940 = icmp ult i64 %939, 2
  br i1 %940, label %944, label %941

941:                                              ; preds = %936
  %942 = sitofp i64 %937 to double
  %943 = fdiv double %942, 1.000000e+06
  br label %947

944:                                              ; preds = %936
  %945 = icmp slt i64 %937, 0
  %946 = select i1 %945, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %947

947:                                              ; preds = %941, %944
  %948 = phi double [ %946, %944 ], [ %943, %941 ]
  %949 = bitcast %"class.std::__1::unique_ptr.2086"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %949) #12
  %950 = call i8* @_Znwm(i64 24) #14
  %951 = bitcast i8* %950 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %951, align 8
  %952 = getelementptr inbounds i8, i8* %950, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %952, i8 0, i64 16, i1 false) #12
  %953 = ptrtoint i8* %950 to i64
  %954 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %955 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %954, align 8
  %956 = icmp eq %"class.WTF::StringImpl"* %955, null
  br i1 %956, label %972, label %957

957:                                              ; preds = %947
  %958 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %959 = load atomic i32, i32* %958 monotonic, align 4
  %960 = and i32 %959, 2
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %972

962:                                              ; preds = %957
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  %965 = zext i32 %964 to i33
  %966 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %965, i33 1) #12
  %967 = extractvalue { i33, i1 } %966, 1
  %968 = extractvalue { i33, i1 } %966, 0
  %969 = icmp slt i33 %968, 0
  %970 = or i1 %967, %969
  br i1 %970, label %971, label %975, !prof !3

971:                                              ; preds = %962
  call void @llvm.trap() #12
  unreachable

972:                                              ; preds = %957, %947
  %973 = ptrtoint %"class.WTF::StringImpl"* %955 to i64
  %974 = bitcast i8* %952 to i64*
  store i64 %973, i64* %974, align 8
  br label %995

975:                                              ; preds = %962
  %976 = trunc i33 %968 to i32
  store i32 %976, i32* %963, align 4
  %977 = bitcast i8* %952 to %"class.WTF::StringImpl"**
  %978 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %977, align 8
  %979 = ptrtoint %"class.WTF::StringImpl"* %955 to i64
  %980 = bitcast i8* %952 to i64*
  store i64 %979, i64* %980, align 8
  %981 = icmp eq %"class.WTF::StringImpl"* %978, null
  br i1 %981, label %995, label %982

982:                                              ; preds = %975
  %983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %978, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %984 = load atomic i32, i32* %983 monotonic, align 4
  %985 = and i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %978, i64 0, i32 0
  %988 = load i32, i32* %987, align 4
  br i1 %986, label %989, label %991

989:                                              ; preds = %982
  %990 = add i32 %988, -1
  store i32 %990, i32* %987, align 4
  br label %991

991:                                              ; preds = %989, %982
  %992 = phi i32 [ %990, %989 ], [ %988, %982 ]
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %994, label %995

994:                                              ; preds = %991
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %978) #12
  br label %995

995:                                              ; preds = %972, %975, %991, %994
  %996 = getelementptr inbounds i8, i8* %950, i64 16
  %997 = bitcast i8* %996 to double*
  store double %948, double* %997, align 8
  %998 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %19, i64 0, i32 0, i32 0, i32 0
  %999 = bitcast %"class.std::__1::unique_ptr.2086"* %19 to i64*
  store i64 %953, i64* %999, align 8
  %1000 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1001 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1002 = icmp ult %"class.std::__1::unique_ptr.2086"* %1000, %1001
  br i1 %1002, label %1003, label %1007

1003:                                             ; preds = %995
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %998, align 8
  %1004 = bitcast %"class.std::__1::unique_ptr.2086"* %1000 to i64*
  store i64 %953, i64* %1004, align 8
  %1005 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1000, i64 1
  %1006 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1005 to i64
  store i64 %1006, i64* %199, align 8
  br label %1008

1007:                                             ; preds = %995
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %19) #12
  br label %1008

1008:                                             ; preds = %1003, %1007
  %1009 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %998, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %998, align 8
  %1010 = icmp eq %"class.blink::protocol::Performance::Metric"* %1009, null
  br i1 %1010, label %1016, label %1011

1011:                                             ; preds = %1008
  %1012 = bitcast %"class.blink::protocol::Performance::Metric"* %1009 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1013 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1012, align 8
  %1014 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1013, i64 2
  %1015 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1014, align 8
  call void %1015(%"class.blink::protocol::Performance::Metric"* nonnull %1009) #12
  br label %1016

1016:                                             ; preds = %1008, %1011
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %949) #12
  %1017 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %954, align 8
  %1018 = icmp eq %"class.WTF::StringImpl"* %1017, null
  br i1 %1018, label %1032, label %1019

1019:                                             ; preds = %1016
  %1020 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1021 = load atomic i32, i32* %1020 monotonic, align 4
  %1022 = and i32 %1021, 2
  %1023 = icmp eq i32 %1022, 0
  %1024 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 0
  %1025 = load i32, i32* %1024, align 4
  br i1 %1023, label %1026, label %1028

1026:                                             ; preds = %1019
  %1027 = add i32 %1025, -1
  store i32 %1027, i32* %1024, align 4
  br label %1028

1028:                                             ; preds = %1026, %1019
  %1029 = phi i32 [ %1027, %1026 ], [ %1025, %1019 ]
  %1030 = icmp eq i32 %1029, 0
  br i1 %1030, label %1031, label %1032

1031:                                             ; preds = %1028
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1017) #12
  br label %1032

1032:                                             ; preds = %1016, %1028, %1031
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %938) #12
  %1033 = bitcast %"class.base::TimeDelta"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1033) #12
  %1034 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %40, i64 0, i32 0
  %1035 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 9, i32 0
  %1036 = load i64, i64* %1035, align 8
  store i64 %1036, i64* %1034, align 8
  %1037 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 10, i32 0, i32 0
  %1038 = load i64, i64* %1037, align 8
  %1039 = icmp eq i64 %1038, 0
  br i1 %1039, label %1061, label %1040

1040:                                             ; preds = %1032
  %1041 = sub nsw i64 %209, %1038
  %1042 = add i64 %1041, -9223372036854775807
  %1043 = icmp ult i64 %1042, 2
  br i1 %1043, label %1051, label %1044

1044:                                             ; preds = %1040
  %1045 = icmp slt i64 %1041, 0
  %1046 = select i1 %1045, i64 -9223372036854775808, i64 9223372036854775807
  %1047 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1036, i64 %1041) #12
  %1048 = extractvalue { i64, i1 } %1047, 1
  %1049 = extractvalue { i64, i1 } %1047, 0
  %1050 = select i1 %1048, i64 %1046, i64 %1049, !prof !3
  br label %1059

1051:                                             ; preds = %1040
  %1052 = add i64 %1036, -9223372036854775807
  %1053 = icmp ugt i64 %1052, 1
  %1054 = icmp eq i64 %1036, %1041
  %1055 = or i1 %1053, %1054
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %1051
  %1057 = bitcast %"class.logging::CheckError"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1057) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %1058 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %18) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1057) #12
  br label %1059

1059:                                             ; preds = %1044, %1051, %1056
  %1060 = phi i64 [ %1050, %1044 ], [ %1041, %1051 ], [ %1041, %1056 ]
  store i64 %1060, i64* %1034, align 8
  br label %1061

1061:                                             ; preds = %1059, %1032
  %1062 = bitcast %"class.WTF::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1062) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12) #12
  %1063 = load i64, i64* %1034, align 8
  %1064 = add i64 %1063, -9223372036854775807
  %1065 = icmp ult i64 %1064, 2
  br i1 %1065, label %1069, label %1066

1066:                                             ; preds = %1061
  %1067 = sitofp i64 %1063 to double
  %1068 = fdiv double %1067, 1.000000e+06
  br label %1072

1069:                                             ; preds = %1061
  %1070 = icmp slt i64 %1063, 0
  %1071 = select i1 %1070, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1072

1072:                                             ; preds = %1066, %1069
  %1073 = phi double [ %1071, %1069 ], [ %1068, %1066 ]
  %1074 = bitcast %"class.std::__1::unique_ptr.2086"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1074) #12
  %1075 = call i8* @_Znwm(i64 24) #14
  %1076 = bitcast i8* %1075 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1076, align 8
  %1077 = getelementptr inbounds i8, i8* %1075, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1077, i8 0, i64 16, i1 false) #12
  %1078 = ptrtoint i8* %1075 to i64
  %1079 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %1080 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1081 = icmp eq %"class.WTF::StringImpl"* %1080, null
  br i1 %1081, label %1097, label %1082

1082:                                             ; preds = %1072
  %1083 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1084 = load atomic i32, i32* %1083 monotonic, align 4
  %1085 = and i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  br i1 %1086, label %1087, label %1097

1087:                                             ; preds = %1082
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 4
  %1090 = zext i32 %1089 to i33
  %1091 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1090, i33 1) #12
  %1092 = extractvalue { i33, i1 } %1091, 1
  %1093 = extractvalue { i33, i1 } %1091, 0
  %1094 = icmp slt i33 %1093, 0
  %1095 = or i1 %1092, %1094
  br i1 %1095, label %1096, label %1100, !prof !3

1096:                                             ; preds = %1087
  call void @llvm.trap() #12
  unreachable

1097:                                             ; preds = %1082, %1072
  %1098 = ptrtoint %"class.WTF::StringImpl"* %1080 to i64
  %1099 = bitcast i8* %1077 to i64*
  store i64 %1098, i64* %1099, align 8
  br label %1120

1100:                                             ; preds = %1087
  %1101 = trunc i33 %1093 to i32
  store i32 %1101, i32* %1088, align 4
  %1102 = bitcast i8* %1077 to %"class.WTF::StringImpl"**
  %1103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1102, align 8
  %1104 = ptrtoint %"class.WTF::StringImpl"* %1080 to i64
  %1105 = bitcast i8* %1077 to i64*
  store i64 %1104, i64* %1105, align 8
  %1106 = icmp eq %"class.WTF::StringImpl"* %1103, null
  br i1 %1106, label %1120, label %1107

1107:                                             ; preds = %1100
  %1108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1109 = load atomic i32, i32* %1108 monotonic, align 4
  %1110 = and i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1103, i64 0, i32 0
  %1113 = load i32, i32* %1112, align 4
  br i1 %1111, label %1114, label %1116

1114:                                             ; preds = %1107
  %1115 = add i32 %1113, -1
  store i32 %1115, i32* %1112, align 4
  br label %1116

1116:                                             ; preds = %1114, %1107
  %1117 = phi i32 [ %1115, %1114 ], [ %1113, %1107 ]
  %1118 = icmp eq i32 %1117, 0
  br i1 %1118, label %1119, label %1120

1119:                                             ; preds = %1116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1103) #12
  br label %1120

1120:                                             ; preds = %1097, %1100, %1116, %1119
  %1121 = getelementptr inbounds i8, i8* %1075, i64 16
  %1122 = bitcast i8* %1121 to double*
  store double %1073, double* %1122, align 8
  %1123 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %17, i64 0, i32 0, i32 0, i32 0
  %1124 = bitcast %"class.std::__1::unique_ptr.2086"* %17 to i64*
  store i64 %1078, i64* %1124, align 8
  %1125 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1126 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1127 = icmp ult %"class.std::__1::unique_ptr.2086"* %1125, %1126
  br i1 %1127, label %1128, label %1132

1128:                                             ; preds = %1120
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1123, align 8
  %1129 = bitcast %"class.std::__1::unique_ptr.2086"* %1125 to i64*
  store i64 %1078, i64* %1129, align 8
  %1130 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1125, i64 1
  %1131 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1130 to i64
  store i64 %1131, i64* %199, align 8
  br label %1133

1132:                                             ; preds = %1120
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %17) #12
  br label %1133

1133:                                             ; preds = %1128, %1132
  %1134 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1123, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1123, align 8
  %1135 = icmp eq %"class.blink::protocol::Performance::Metric"* %1134, null
  br i1 %1135, label %1141, label %1136

1136:                                             ; preds = %1133
  %1137 = bitcast %"class.blink::protocol::Performance::Metric"* %1134 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1138 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1137, align 8
  %1139 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1138, i64 2
  %1140 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1139, align 8
  call void %1140(%"class.blink::protocol::Performance::Metric"* nonnull %1134) #12
  br label %1141

1141:                                             ; preds = %1133, %1136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1074) #12
  %1142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1143 = icmp eq %"class.WTF::StringImpl"* %1142, null
  br i1 %1143, label %1157, label %1144

1144:                                             ; preds = %1141
  %1145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1146 = load atomic i32, i32* %1145 monotonic, align 4
  %1147 = and i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 0
  %1150 = load i32, i32* %1149, align 4
  br i1 %1148, label %1151, label %1153

1151:                                             ; preds = %1144
  %1152 = add i32 %1150, -1
  store i32 %1152, i32* %1149, align 4
  br label %1153

1153:                                             ; preds = %1151, %1144
  %1154 = phi i32 [ %1152, %1151 ], [ %1150, %1144 ]
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1156, label %1157

1156:                                             ; preds = %1153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1142) #12
  br label %1157

1157:                                             ; preds = %1141, %1153, %1156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1062) #12
  br i1 %940, label %1165, label %1158

1158:                                             ; preds = %1157
  %1159 = icmp slt i64 %937, 0
  %1160 = select i1 %1159, i64 -9223372036854775808, i64 9223372036854775807
  %1161 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %816, i64 %937) #12
  %1162 = extractvalue { i64, i1 } %1161, 1
  %1163 = extractvalue { i64, i1 } %1161, 0
  %1164 = select i1 %1162, i64 %1160, i64 %1163, !prof !3
  br label %1172

1165:                                             ; preds = %1157
  %1166 = icmp ugt i64 %818, 1
  %1167 = icmp eq i64 %816, %937
  %1168 = or i1 %1166, %1167
  br i1 %1168, label %1172, label %1169

1169:                                             ; preds = %1165
  %1170 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1170) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %1171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1170) #12
  br label %1172

1172:                                             ; preds = %1158, %1165, %1169
  %1173 = phi i64 [ %1164, %1158 ], [ %937, %1165 ], [ %937, %1169 ]
  %1174 = load i64, i64* %484, align 8
  %1175 = add i64 %1174, -9223372036854775807
  %1176 = icmp ult i64 %1175, 2
  br i1 %1176, label %1184, label %1177

1177:                                             ; preds = %1172
  %1178 = icmp slt i64 %1174, 0
  %1179 = select i1 %1178, i64 -9223372036854775808, i64 9223372036854775807
  %1180 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1173, i64 %1174) #12
  %1181 = extractvalue { i64, i1 } %1180, 1
  %1182 = extractvalue { i64, i1 } %1180, 0
  %1183 = select i1 %1181, i64 %1179, i64 %1182, !prof !3
  br label %1192

1184:                                             ; preds = %1172
  %1185 = add i64 %1173, -9223372036854775807
  %1186 = icmp ugt i64 %1185, 1
  %1187 = icmp eq i64 %1173, %1174
  %1188 = or i1 %1187, %1186
  br i1 %1188, label %1192, label %1189

1189:                                             ; preds = %1184
  %1190 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1190) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %1191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1190) #12
  br label %1192

1192:                                             ; preds = %1177, %1184, %1189
  %1193 = phi i64 [ %1183, %1177 ], [ %1174, %1184 ], [ %1174, %1189 ]
  %1194 = load i64, i64* %387, align 8
  %1195 = add i64 %1194, -9223372036854775807
  %1196 = icmp ult i64 %1195, 2
  br i1 %1196, label %1204, label %1197

1197:                                             ; preds = %1192
  %1198 = icmp slt i64 %1194, 0
  %1199 = select i1 %1198, i64 -9223372036854775808, i64 9223372036854775807
  %1200 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1193, i64 %1194) #12
  %1201 = extractvalue { i64, i1 } %1200, 1
  %1202 = extractvalue { i64, i1 } %1200, 0
  %1203 = select i1 %1201, i64 %1199, i64 %1202, !prof !3
  br label %1212

1204:                                             ; preds = %1192
  %1205 = add i64 %1193, -9223372036854775807
  %1206 = icmp ugt i64 %1205, 1
  %1207 = icmp eq i64 %1193, %1194
  %1208 = or i1 %1207, %1206
  br i1 %1208, label %1212, label %1209

1209:                                             ; preds = %1204
  %1210 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1210) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %1211 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1210) #12
  br label %1212

1212:                                             ; preds = %1197, %1204, %1209
  %1213 = phi i64 [ %1203, %1197 ], [ %1194, %1204 ], [ %1194, %1209 ]
  br i1 %698, label %1221, label %1214

1214:                                             ; preds = %1212
  %1215 = icmp slt i64 %695, 0
  %1216 = select i1 %1215, i64 -9223372036854775808, i64 9223372036854775807
  %1217 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1213, i64 %695) #12
  %1218 = extractvalue { i64, i1 } %1217, 1
  %1219 = extractvalue { i64, i1 } %1217, 0
  %1220 = select i1 %1218, i64 %1216, i64 %1219, !prof !3
  br label %1229

1221:                                             ; preds = %1212
  %1222 = add i64 %1213, -9223372036854775807
  %1223 = icmp ugt i64 %1222, 1
  %1224 = icmp eq i64 %1213, %695
  %1225 = or i1 %1224, %1223
  br i1 %1225, label %1229, label %1226

1226:                                             ; preds = %1221
  %1227 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1227) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %1228 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1227) #12
  br label %1229

1229:                                             ; preds = %1214, %1221, %1226
  %1230 = phi i64 [ %1220, %1214 ], [ %695, %1221 ], [ %695, %1226 ]
  %1231 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %40, i64 %1230)
  %1232 = bitcast %"class.WTF::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1232) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %42, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i64 17) #12
  %1233 = add i64 %1231, -9223372036854775807
  %1234 = icmp ult i64 %1233, 2
  br i1 %1234, label %1238, label %1235

1235:                                             ; preds = %1229
  %1236 = sitofp i64 %1231 to double
  %1237 = fdiv double %1236, 1.000000e+06
  br label %1241

1238:                                             ; preds = %1229
  %1239 = icmp slt i64 %1231, 0
  %1240 = select i1 %1239, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1241

1241:                                             ; preds = %1235, %1238
  %1242 = phi double [ %1240, %1238 ], [ %1237, %1235 ]
  %1243 = bitcast %"class.std::__1::unique_ptr.2086"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1243) #12
  %1244 = call i8* @_Znwm(i64 24) #14
  %1245 = bitcast i8* %1244 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1245, align 8
  %1246 = getelementptr inbounds i8, i8* %1244, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1246, i8 0, i64 16, i1 false) #12
  %1247 = ptrtoint i8* %1244 to i64
  %1248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %1249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1248, align 8
  %1250 = icmp eq %"class.WTF::StringImpl"* %1249, null
  br i1 %1250, label %1266, label %1251

1251:                                             ; preds = %1241
  %1252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1253 = load atomic i32, i32* %1252 monotonic, align 4
  %1254 = and i32 %1253, 2
  %1255 = icmp eq i32 %1254, 0
  br i1 %1255, label %1256, label %1266

1256:                                             ; preds = %1251
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 0
  %1258 = load i32, i32* %1257, align 4
  %1259 = zext i32 %1258 to i33
  %1260 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1259, i33 1) #12
  %1261 = extractvalue { i33, i1 } %1260, 1
  %1262 = extractvalue { i33, i1 } %1260, 0
  %1263 = icmp slt i33 %1262, 0
  %1264 = or i1 %1261, %1263
  br i1 %1264, label %1265, label %1269, !prof !3

1265:                                             ; preds = %1256
  call void @llvm.trap() #12
  unreachable

1266:                                             ; preds = %1251, %1241
  %1267 = ptrtoint %"class.WTF::StringImpl"* %1249 to i64
  %1268 = bitcast i8* %1246 to i64*
  store i64 %1267, i64* %1268, align 8
  br label %1289

1269:                                             ; preds = %1256
  %1270 = trunc i33 %1262 to i32
  store i32 %1270, i32* %1257, align 4
  %1271 = bitcast i8* %1246 to %"class.WTF::StringImpl"**
  %1272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1271, align 8
  %1273 = ptrtoint %"class.WTF::StringImpl"* %1249 to i64
  %1274 = bitcast i8* %1246 to i64*
  store i64 %1273, i64* %1274, align 8
  %1275 = icmp eq %"class.WTF::StringImpl"* %1272, null
  br i1 %1275, label %1289, label %1276

1276:                                             ; preds = %1269
  %1277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1278 = load atomic i32, i32* %1277 monotonic, align 4
  %1279 = and i32 %1278, 2
  %1280 = icmp eq i32 %1279, 0
  %1281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 0
  %1282 = load i32, i32* %1281, align 4
  br i1 %1280, label %1283, label %1285

1283:                                             ; preds = %1276
  %1284 = add i32 %1282, -1
  store i32 %1284, i32* %1281, align 4
  br label %1285

1285:                                             ; preds = %1283, %1276
  %1286 = phi i32 [ %1284, %1283 ], [ %1282, %1276 ]
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1288, label %1289

1288:                                             ; preds = %1285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1272) #12
  br label %1289

1289:                                             ; preds = %1266, %1269, %1285, %1288
  %1290 = getelementptr inbounds i8, i8* %1244, i64 16
  %1291 = bitcast i8* %1290 to double*
  store double %1242, double* %1291, align 8
  %1292 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %12, i64 0, i32 0, i32 0, i32 0
  %1293 = bitcast %"class.std::__1::unique_ptr.2086"* %12 to i64*
  store i64 %1247, i64* %1293, align 8
  %1294 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1295 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1296 = icmp ult %"class.std::__1::unique_ptr.2086"* %1294, %1295
  br i1 %1296, label %1297, label %1301

1297:                                             ; preds = %1289
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1292, align 8
  %1298 = bitcast %"class.std::__1::unique_ptr.2086"* %1294 to i64*
  store i64 %1247, i64* %1298, align 8
  %1299 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1294, i64 1
  %1300 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1299 to i64
  store i64 %1300, i64* %199, align 8
  br label %1302

1301:                                             ; preds = %1289
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %12) #12
  br label %1302

1302:                                             ; preds = %1297, %1301
  %1303 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1292, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1292, align 8
  %1304 = icmp eq %"class.blink::protocol::Performance::Metric"* %1303, null
  br i1 %1304, label %1310, label %1305

1305:                                             ; preds = %1302
  %1306 = bitcast %"class.blink::protocol::Performance::Metric"* %1303 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1307 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1306, align 8
  %1308 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1307, i64 2
  %1309 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1308, align 8
  call void %1309(%"class.blink::protocol::Performance::Metric"* nonnull %1303) #12
  br label %1310

1310:                                             ; preds = %1302, %1305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1243) #12
  %1311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1248, align 8
  %1312 = icmp eq %"class.WTF::StringImpl"* %1311, null
  br i1 %1312, label %1326, label %1313

1313:                                             ; preds = %1310
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1315 = load atomic i32, i32* %1314 monotonic, align 4
  %1316 = and i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 0
  %1319 = load i32, i32* %1318, align 4
  br i1 %1317, label %1320, label %1322

1320:                                             ; preds = %1313
  %1321 = add i32 %1319, -1
  store i32 %1321, i32* %1318, align 4
  br label %1322

1322:                                             ; preds = %1320, %1313
  %1323 = phi i32 [ %1321, %1320 ], [ %1319, %1313 ]
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %1326

1325:                                             ; preds = %1322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1311) #12
  br label %1326

1326:                                             ; preds = %1310, %1322, %1325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1232) #12
  %1327 = call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %1328 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 15, i32 0, i32 0
  %1329 = load i64, i64* %1328, align 8
  %1330 = sub nsw i64 %1327, %1329
  %1331 = bitcast %"class.WTF::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1331) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i64 10) #12
  %1332 = add i64 %1330, -9223372036854775807
  %1333 = icmp ult i64 %1332, 2
  br i1 %1333, label %1337, label %1334

1334:                                             ; preds = %1326
  %1335 = sitofp i64 %1330 to double
  %1336 = fdiv double %1335, 1.000000e+06
  br label %1340

1337:                                             ; preds = %1326
  %1338 = icmp slt i64 %1330, 0
  %1339 = select i1 %1338, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1340

1340:                                             ; preds = %1334, %1337
  %1341 = phi double [ %1339, %1337 ], [ %1336, %1334 ]
  %1342 = bitcast %"class.std::__1::unique_ptr.2086"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1342) #12
  %1343 = call i8* @_Znwm(i64 24) #14
  %1344 = bitcast i8* %1343 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1344, align 8
  %1345 = getelementptr inbounds i8, i8* %1343, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1345, i8 0, i64 16, i1 false) #12
  %1346 = ptrtoint i8* %1343 to i64
  %1347 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %1348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1347, align 8
  %1349 = icmp eq %"class.WTF::StringImpl"* %1348, null
  br i1 %1349, label %1365, label %1350

1350:                                             ; preds = %1340
  %1351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1352 = load atomic i32, i32* %1351 monotonic, align 4
  %1353 = and i32 %1352, 2
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1355, label %1365

1355:                                             ; preds = %1350
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1348, i64 0, i32 0
  %1357 = load i32, i32* %1356, align 4
  %1358 = zext i32 %1357 to i33
  %1359 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1358, i33 1) #12
  %1360 = extractvalue { i33, i1 } %1359, 1
  %1361 = extractvalue { i33, i1 } %1359, 0
  %1362 = icmp slt i33 %1361, 0
  %1363 = or i1 %1360, %1362
  br i1 %1363, label %1364, label %1368, !prof !3

1364:                                             ; preds = %1355
  call void @llvm.trap() #12
  unreachable

1365:                                             ; preds = %1350, %1340
  %1366 = ptrtoint %"class.WTF::StringImpl"* %1348 to i64
  %1367 = bitcast i8* %1345 to i64*
  store i64 %1366, i64* %1367, align 8
  br label %1388

1368:                                             ; preds = %1355
  %1369 = trunc i33 %1361 to i32
  store i32 %1369, i32* %1356, align 4
  %1370 = bitcast i8* %1345 to %"class.WTF::StringImpl"**
  %1371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1370, align 8
  %1372 = ptrtoint %"class.WTF::StringImpl"* %1348 to i64
  %1373 = bitcast i8* %1345 to i64*
  store i64 %1372, i64* %1373, align 8
  %1374 = icmp eq %"class.WTF::StringImpl"* %1371, null
  br i1 %1374, label %1388, label %1375

1375:                                             ; preds = %1368
  %1376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1377 = load atomic i32, i32* %1376 monotonic, align 4
  %1378 = and i32 %1377, 2
  %1379 = icmp eq i32 %1378, 0
  %1380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1371, i64 0, i32 0
  %1381 = load i32, i32* %1380, align 4
  br i1 %1379, label %1382, label %1384

1382:                                             ; preds = %1375
  %1383 = add i32 %1381, -1
  store i32 %1383, i32* %1380, align 4
  br label %1384

1384:                                             ; preds = %1382, %1375
  %1385 = phi i32 [ %1383, %1382 ], [ %1381, %1375 ]
  %1386 = icmp eq i32 %1385, 0
  br i1 %1386, label %1387, label %1388

1387:                                             ; preds = %1384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1371) #12
  br label %1388

1388:                                             ; preds = %1365, %1368, %1384, %1387
  %1389 = getelementptr inbounds i8, i8* %1343, i64 16
  %1390 = bitcast i8* %1389 to double*
  store double %1341, double* %1390, align 8
  %1391 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %11, i64 0, i32 0, i32 0, i32 0
  %1392 = bitcast %"class.std::__1::unique_ptr.2086"* %11 to i64*
  store i64 %1346, i64* %1392, align 8
  %1393 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1394 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1395 = icmp ult %"class.std::__1::unique_ptr.2086"* %1393, %1394
  br i1 %1395, label %1396, label %1400

1396:                                             ; preds = %1388
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1391, align 8
  %1397 = bitcast %"class.std::__1::unique_ptr.2086"* %1393 to i64*
  store i64 %1346, i64* %1397, align 8
  %1398 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1393, i64 1
  %1399 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1398 to i64
  store i64 %1399, i64* %199, align 8
  br label %1401

1400:                                             ; preds = %1388
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %11) #12
  br label %1401

1401:                                             ; preds = %1396, %1400
  %1402 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1391, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1391, align 8
  %1403 = icmp eq %"class.blink::protocol::Performance::Metric"* %1402, null
  br i1 %1403, label %1409, label %1404

1404:                                             ; preds = %1401
  %1405 = bitcast %"class.blink::protocol::Performance::Metric"* %1402 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1406 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1405, align 8
  %1407 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1406, i64 2
  %1408 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1407, align 8
  call void %1408(%"class.blink::protocol::Performance::Metric"* nonnull %1402) #12
  br label %1409

1409:                                             ; preds = %1401, %1404
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1342) #12
  %1410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1347, align 8
  %1411 = icmp eq %"class.WTF::StringImpl"* %1410, null
  br i1 %1411, label %1425, label %1412

1412:                                             ; preds = %1409
  %1413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1414 = load atomic i32, i32* %1413 monotonic, align 4
  %1415 = and i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1410, i64 0, i32 0
  %1418 = load i32, i32* %1417, align 4
  br i1 %1416, label %1419, label %1421

1419:                                             ; preds = %1412
  %1420 = add i32 %1418, -1
  store i32 %1420, i32* %1417, align 4
  br label %1421

1421:                                             ; preds = %1419, %1412
  %1422 = phi i32 [ %1420, %1419 ], [ %1418, %1412 ]
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1425

1424:                                             ; preds = %1421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1410) #12
  br label %1425

1425:                                             ; preds = %1409, %1421, %1424
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1331) #12
  %1426 = bitcast %"class.base::Process"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1426) #12
  call void @_ZN4base7Process7CurrentEv(%"class.base::Process"* nonnull sret %10) #12
  %1427 = call i32 @_ZNK4base7Process6HandleEv(%"class.base::Process"* nonnull %10) #12
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1426) #12
  %1428 = call %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32 %1427) #12
  %1429 = call i64 @_ZN4base14ProcessMetrics21GetCumulativeCPUUsageEv(%"class.base::ProcessMetrics"* %1428) #12
  %1430 = icmp eq %"class.base::ProcessMetrics"* %1428, null
  br i1 %1430, label %1433, label %1431

1431:                                             ; preds = %1425
  call void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"* nonnull %1428) #12
  %1432 = bitcast %"class.base::ProcessMetrics"* %1428 to i8*
  call void @_ZdlPv(i8* %1432) #14
  br label %1433

1433:                                             ; preds = %1425, %1431
  %1434 = bitcast %"class.WTF::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1434) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %44, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #12
  %1435 = add i64 %1429, -9223372036854775807
  %1436 = icmp ult i64 %1435, 2
  br i1 %1436, label %1440, label %1437

1437:                                             ; preds = %1433
  %1438 = sitofp i64 %1429 to double
  %1439 = fdiv double %1438, 1.000000e+06
  br label %1443

1440:                                             ; preds = %1433
  %1441 = icmp slt i64 %1429, 0
  %1442 = select i1 %1441, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1443

1443:                                             ; preds = %1437, %1440
  %1444 = phi double [ %1442, %1440 ], [ %1439, %1437 ]
  %1445 = bitcast %"class.std::__1::unique_ptr.2086"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1445) #12
  %1446 = call i8* @_Znwm(i64 24) #14
  %1447 = bitcast i8* %1446 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1447, align 8
  %1448 = getelementptr inbounds i8, i8* %1446, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1448, i8 0, i64 16, i1 false) #12
  %1449 = ptrtoint i8* %1446 to i64
  %1450 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %1451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1450, align 8
  %1452 = icmp eq %"class.WTF::StringImpl"* %1451, null
  br i1 %1452, label %1468, label %1453

1453:                                             ; preds = %1443
  %1454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1455 = load atomic i32, i32* %1454 monotonic, align 4
  %1456 = and i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  br i1 %1457, label %1458, label %1468

1458:                                             ; preds = %1453
  %1459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1451, i64 0, i32 0
  %1460 = load i32, i32* %1459, align 4
  %1461 = zext i32 %1460 to i33
  %1462 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1461, i33 1) #12
  %1463 = extractvalue { i33, i1 } %1462, 1
  %1464 = extractvalue { i33, i1 } %1462, 0
  %1465 = icmp slt i33 %1464, 0
  %1466 = or i1 %1463, %1465
  br i1 %1466, label %1467, label %1471, !prof !3

1467:                                             ; preds = %1458
  call void @llvm.trap() #12
  unreachable

1468:                                             ; preds = %1453, %1443
  %1469 = ptrtoint %"class.WTF::StringImpl"* %1451 to i64
  %1470 = bitcast i8* %1448 to i64*
  store i64 %1469, i64* %1470, align 8
  br label %1491

1471:                                             ; preds = %1458
  %1472 = trunc i33 %1464 to i32
  store i32 %1472, i32* %1459, align 4
  %1473 = bitcast i8* %1448 to %"class.WTF::StringImpl"**
  %1474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1473, align 8
  %1475 = ptrtoint %"class.WTF::StringImpl"* %1451 to i64
  %1476 = bitcast i8* %1448 to i64*
  store i64 %1475, i64* %1476, align 8
  %1477 = icmp eq %"class.WTF::StringImpl"* %1474, null
  br i1 %1477, label %1491, label %1478

1478:                                             ; preds = %1471
  %1479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1480 = load atomic i32, i32* %1479 monotonic, align 4
  %1481 = and i32 %1480, 2
  %1482 = icmp eq i32 %1481, 0
  %1483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1474, i64 0, i32 0
  %1484 = load i32, i32* %1483, align 4
  br i1 %1482, label %1485, label %1487

1485:                                             ; preds = %1478
  %1486 = add i32 %1484, -1
  store i32 %1486, i32* %1483, align 4
  br label %1487

1487:                                             ; preds = %1485, %1478
  %1488 = phi i32 [ %1486, %1485 ], [ %1484, %1478 ]
  %1489 = icmp eq i32 %1488, 0
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1474) #12
  br label %1491

1491:                                             ; preds = %1468, %1471, %1487, %1490
  %1492 = getelementptr inbounds i8, i8* %1446, i64 16
  %1493 = bitcast i8* %1492 to double*
  store double %1444, double* %1493, align 8
  %1494 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %9, i64 0, i32 0, i32 0, i32 0
  %1495 = bitcast %"class.std::__1::unique_ptr.2086"* %9 to i64*
  store i64 %1449, i64* %1495, align 8
  %1496 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1497 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1498 = icmp ult %"class.std::__1::unique_ptr.2086"* %1496, %1497
  br i1 %1498, label %1499, label %1503

1499:                                             ; preds = %1491
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1494, align 8
  %1500 = bitcast %"class.std::__1::unique_ptr.2086"* %1496 to i64*
  store i64 %1449, i64* %1500, align 8
  %1501 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1496, i64 1
  %1502 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1501 to i64
  store i64 %1502, i64* %199, align 8
  br label %1504

1503:                                             ; preds = %1491
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %9) #12
  br label %1504

1504:                                             ; preds = %1499, %1503
  %1505 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1494, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1494, align 8
  %1506 = icmp eq %"class.blink::protocol::Performance::Metric"* %1505, null
  br i1 %1506, label %1512, label %1507

1507:                                             ; preds = %1504
  %1508 = bitcast %"class.blink::protocol::Performance::Metric"* %1505 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1509 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1508, align 8
  %1510 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1509, i64 2
  %1511 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1510, align 8
  call void %1511(%"class.blink::protocol::Performance::Metric"* nonnull %1505) #12
  br label %1512

1512:                                             ; preds = %1504, %1507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1445) #12
  %1513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1450, align 8
  %1514 = icmp eq %"class.WTF::StringImpl"* %1513, null
  br i1 %1514, label %1528, label %1515

1515:                                             ; preds = %1512
  %1516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1517 = load atomic i32, i32* %1516 monotonic, align 4
  %1518 = and i32 %1517, 2
  %1519 = icmp eq i32 %1518, 0
  %1520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1513, i64 0, i32 0
  %1521 = load i32, i32* %1520, align 4
  br i1 %1519, label %1522, label %1524

1522:                                             ; preds = %1515
  %1523 = add i32 %1521, -1
  store i32 %1523, i32* %1520, align 4
  br label %1524

1524:                                             ; preds = %1522, %1515
  %1525 = phi i32 [ %1523, %1522 ], [ %1521, %1515 ]
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1527, label %1528

1527:                                             ; preds = %1524
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1513) #12
  br label %1528

1528:                                             ; preds = %1512, %1524, %1527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1434) #12
  %1529 = bitcast %"class.v8::HeapStatistics"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1529) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1529, i8 -86, i64 112, i1 false)
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %45) #12
  %1530 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #12
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* %1530, %"class.v8::HeapStatistics"* nonnull %45) #12
  %1531 = bitcast %"class.WTF::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1531) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i64 14) #12
  %1532 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %45, i64 0, i32 4
  %1533 = load i64, i64* %1532, align 8
  %1534 = uitofp i64 %1533 to double
  %1535 = bitcast %"class.std::__1::unique_ptr.2086"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1535) #12
  %1536 = call i8* @_Znwm(i64 24) #14
  %1537 = bitcast i8* %1536 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1537, align 8
  %1538 = getelementptr inbounds i8, i8* %1536, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1538, i8 0, i64 16, i1 false) #12
  %1539 = ptrtoint i8* %1536 to i64
  %1540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %1541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1540, align 8
  %1542 = icmp eq %"class.WTF::StringImpl"* %1541, null
  br i1 %1542, label %1558, label %1543

1543:                                             ; preds = %1528
  %1544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1541, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1545 = load atomic i32, i32* %1544 monotonic, align 4
  %1546 = and i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  br i1 %1547, label %1548, label %1558

1548:                                             ; preds = %1543
  %1549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1541, i64 0, i32 0
  %1550 = load i32, i32* %1549, align 4
  %1551 = zext i32 %1550 to i33
  %1552 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1551, i33 1) #12
  %1553 = extractvalue { i33, i1 } %1552, 1
  %1554 = extractvalue { i33, i1 } %1552, 0
  %1555 = icmp slt i33 %1554, 0
  %1556 = or i1 %1553, %1555
  br i1 %1556, label %1557, label %1561, !prof !3

1557:                                             ; preds = %1548
  call void @llvm.trap() #12
  unreachable

1558:                                             ; preds = %1543, %1528
  %1559 = ptrtoint %"class.WTF::StringImpl"* %1541 to i64
  %1560 = bitcast i8* %1538 to i64*
  store i64 %1559, i64* %1560, align 8
  br label %1581

1561:                                             ; preds = %1548
  %1562 = trunc i33 %1554 to i32
  store i32 %1562, i32* %1549, align 4
  %1563 = bitcast i8* %1538 to %"class.WTF::StringImpl"**
  %1564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1563, align 8
  %1565 = ptrtoint %"class.WTF::StringImpl"* %1541 to i64
  %1566 = bitcast i8* %1538 to i64*
  store i64 %1565, i64* %1566, align 8
  %1567 = icmp eq %"class.WTF::StringImpl"* %1564, null
  br i1 %1567, label %1581, label %1568

1568:                                             ; preds = %1561
  %1569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1564, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1570 = load atomic i32, i32* %1569 monotonic, align 4
  %1571 = and i32 %1570, 2
  %1572 = icmp eq i32 %1571, 0
  %1573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1564, i64 0, i32 0
  %1574 = load i32, i32* %1573, align 4
  br i1 %1572, label %1575, label %1577

1575:                                             ; preds = %1568
  %1576 = add i32 %1574, -1
  store i32 %1576, i32* %1573, align 4
  br label %1577

1577:                                             ; preds = %1575, %1568
  %1578 = phi i32 [ %1576, %1575 ], [ %1574, %1568 ]
  %1579 = icmp eq i32 %1578, 0
  br i1 %1579, label %1580, label %1581

1580:                                             ; preds = %1577
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1564) #12
  br label %1581

1581:                                             ; preds = %1558, %1561, %1577, %1580
  %1582 = getelementptr inbounds i8, i8* %1536, i64 16
  %1583 = bitcast i8* %1582 to double*
  store double %1534, double* %1583, align 8
  %1584 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %8, i64 0, i32 0, i32 0, i32 0
  %1585 = bitcast %"class.std::__1::unique_ptr.2086"* %8 to i64*
  store i64 %1539, i64* %1585, align 8
  %1586 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1587 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1588 = icmp ult %"class.std::__1::unique_ptr.2086"* %1586, %1587
  br i1 %1588, label %1589, label %1593

1589:                                             ; preds = %1581
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1584, align 8
  %1590 = bitcast %"class.std::__1::unique_ptr.2086"* %1586 to i64*
  store i64 %1539, i64* %1590, align 8
  %1591 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1586, i64 1
  %1592 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1591 to i64
  store i64 %1592, i64* %199, align 8
  br label %1594

1593:                                             ; preds = %1581
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %8) #12
  br label %1594

1594:                                             ; preds = %1589, %1593
  %1595 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1584, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1584, align 8
  %1596 = icmp eq %"class.blink::protocol::Performance::Metric"* %1595, null
  br i1 %1596, label %1602, label %1597

1597:                                             ; preds = %1594
  %1598 = bitcast %"class.blink::protocol::Performance::Metric"* %1595 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1599 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1598, align 8
  %1600 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1599, i64 2
  %1601 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1600, align 8
  call void %1601(%"class.blink::protocol::Performance::Metric"* nonnull %1595) #12
  br label %1602

1602:                                             ; preds = %1594, %1597
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1535) #12
  %1603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1540, align 8
  %1604 = icmp eq %"class.WTF::StringImpl"* %1603, null
  br i1 %1604, label %1618, label %1605

1605:                                             ; preds = %1602
  %1606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1607 = load atomic i32, i32* %1606 monotonic, align 4
  %1608 = and i32 %1607, 2
  %1609 = icmp eq i32 %1608, 0
  %1610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1603, i64 0, i32 0
  %1611 = load i32, i32* %1610, align 4
  br i1 %1609, label %1612, label %1614

1612:                                             ; preds = %1605
  %1613 = add i32 %1611, -1
  store i32 %1613, i32* %1610, align 4
  br label %1614

1614:                                             ; preds = %1612, %1605
  %1615 = phi i32 [ %1613, %1612 ], [ %1611, %1605 ]
  %1616 = icmp eq i32 %1615, 0
  br i1 %1616, label %1617, label %1618

1617:                                             ; preds = %1614
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1603) #12
  br label %1618

1618:                                             ; preds = %1602, %1614, %1617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1531) #12
  %1619 = bitcast %"class.WTF::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1619) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), i64 15) #12
  %1620 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %45, i64 0, i32 0
  %1621 = load i64, i64* %1620, align 8
  %1622 = uitofp i64 %1621 to double
  %1623 = bitcast %"class.std::__1::unique_ptr.2086"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1623) #12
  %1624 = call i8* @_Znwm(i64 24) #14
  %1625 = bitcast i8* %1624 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1625, align 8
  %1626 = getelementptr inbounds i8, i8* %1624, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1626, i8 0, i64 16, i1 false) #12
  %1627 = ptrtoint i8* %1624 to i64
  %1628 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %1629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1628, align 8
  %1630 = icmp eq %"class.WTF::StringImpl"* %1629, null
  br i1 %1630, label %1646, label %1631

1631:                                             ; preds = %1618
  %1632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1633 = load atomic i32, i32* %1632 monotonic, align 4
  %1634 = and i32 %1633, 2
  %1635 = icmp eq i32 %1634, 0
  br i1 %1635, label %1636, label %1646

1636:                                             ; preds = %1631
  %1637 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1629, i64 0, i32 0
  %1638 = load i32, i32* %1637, align 4
  %1639 = zext i32 %1638 to i33
  %1640 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1639, i33 1) #12
  %1641 = extractvalue { i33, i1 } %1640, 1
  %1642 = extractvalue { i33, i1 } %1640, 0
  %1643 = icmp slt i33 %1642, 0
  %1644 = or i1 %1641, %1643
  br i1 %1644, label %1645, label %1649, !prof !3

1645:                                             ; preds = %1636
  call void @llvm.trap() #12
  unreachable

1646:                                             ; preds = %1631, %1618
  %1647 = ptrtoint %"class.WTF::StringImpl"* %1629 to i64
  %1648 = bitcast i8* %1626 to i64*
  store i64 %1647, i64* %1648, align 8
  br label %1669

1649:                                             ; preds = %1636
  %1650 = trunc i33 %1642 to i32
  store i32 %1650, i32* %1637, align 4
  %1651 = bitcast i8* %1626 to %"class.WTF::StringImpl"**
  %1652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1651, align 8
  %1653 = ptrtoint %"class.WTF::StringImpl"* %1629 to i64
  %1654 = bitcast i8* %1626 to i64*
  store i64 %1653, i64* %1654, align 8
  %1655 = icmp eq %"class.WTF::StringImpl"* %1652, null
  br i1 %1655, label %1669, label %1656

1656:                                             ; preds = %1649
  %1657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1652, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1658 = load atomic i32, i32* %1657 monotonic, align 4
  %1659 = and i32 %1658, 2
  %1660 = icmp eq i32 %1659, 0
  %1661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1652, i64 0, i32 0
  %1662 = load i32, i32* %1661, align 4
  br i1 %1660, label %1663, label %1665

1663:                                             ; preds = %1656
  %1664 = add i32 %1662, -1
  store i32 %1664, i32* %1661, align 4
  br label %1665

1665:                                             ; preds = %1663, %1656
  %1666 = phi i32 [ %1664, %1663 ], [ %1662, %1656 ]
  %1667 = icmp eq i32 %1666, 0
  br i1 %1667, label %1668, label %1669

1668:                                             ; preds = %1665
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1652) #12
  br label %1669

1669:                                             ; preds = %1646, %1649, %1665, %1668
  %1670 = getelementptr inbounds i8, i8* %1624, i64 16
  %1671 = bitcast i8* %1670 to double*
  store double %1622, double* %1671, align 8
  %1672 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %7, i64 0, i32 0, i32 0, i32 0
  %1673 = bitcast %"class.std::__1::unique_ptr.2086"* %7 to i64*
  store i64 %1627, i64* %1673, align 8
  %1674 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1675 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1676 = icmp ult %"class.std::__1::unique_ptr.2086"* %1674, %1675
  br i1 %1676, label %1677, label %1681

1677:                                             ; preds = %1669
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1672, align 8
  %1678 = bitcast %"class.std::__1::unique_ptr.2086"* %1674 to i64*
  store i64 %1627, i64* %1678, align 8
  %1679 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1674, i64 1
  %1680 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1679 to i64
  store i64 %1680, i64* %199, align 8
  br label %1682

1681:                                             ; preds = %1669
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %7) #12
  br label %1682

1682:                                             ; preds = %1677, %1681
  %1683 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1672, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1672, align 8
  %1684 = icmp eq %"class.blink::protocol::Performance::Metric"* %1683, null
  br i1 %1684, label %1690, label %1685

1685:                                             ; preds = %1682
  %1686 = bitcast %"class.blink::protocol::Performance::Metric"* %1683 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1687 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1686, align 8
  %1688 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1687, i64 2
  %1689 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1688, align 8
  call void %1689(%"class.blink::protocol::Performance::Metric"* nonnull %1683) #12
  br label %1690

1690:                                             ; preds = %1682, %1685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1623) #12
  %1691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1628, align 8
  %1692 = icmp eq %"class.WTF::StringImpl"* %1691, null
  br i1 %1692, label %1706, label %1693

1693:                                             ; preds = %1690
  %1694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1695 = load atomic i32, i32* %1694 monotonic, align 4
  %1696 = and i32 %1695, 2
  %1697 = icmp eq i32 %1696, 0
  %1698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1691, i64 0, i32 0
  %1699 = load i32, i32* %1698, align 4
  br i1 %1697, label %1700, label %1702

1700:                                             ; preds = %1693
  %1701 = add i32 %1699, -1
  store i32 %1701, i32* %1698, align 4
  br label %1702

1702:                                             ; preds = %1700, %1693
  %1703 = phi i32 [ %1701, %1700 ], [ %1699, %1693 ]
  %1704 = icmp eq i32 %1703, 0
  br i1 %1704, label %1705, label %1706

1705:                                             ; preds = %1702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1691) #12
  br label %1706

1706:                                             ; preds = %1690, %1702, %1705
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1619) #12
  %1707 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %1708 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %1707, align 8
  %1709 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %1708, i64 0, i32 1, i32 0, i32 0
  %1710 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1709, align 8
  %1711 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1710) #12
  %1712 = icmp eq %"class.blink::Document"* %1711, null
  br i1 %1712, label %2007, label %1713

1713:                                             ; preds = %1706
  %1714 = bitcast %"class.WTF::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1714) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20) #12
  %1715 = call dereferenceable(152) %"class.blink::PaintTiming"* @_ZN5blink11PaintTiming4FromERNS_8DocumentE(%"class.blink::Document"* nonnull dereferenceable(2848) %1711) #12
  %1716 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %1715, i64 0, i32 9, i32 0, i32 0
  %1717 = load i64, i64* %1716, align 8
  %1718 = add i64 %1717, -9223372036854775807
  %1719 = icmp ult i64 %1718, 2
  br i1 %1719, label %1723, label %1720

1720:                                             ; preds = %1713
  %1721 = sitofp i64 %1717 to double
  %1722 = fdiv double %1721, 1.000000e+06
  br label %1726

1723:                                             ; preds = %1713
  %1724 = icmp slt i64 %1717, 0
  %1725 = select i1 %1724, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1726

1726:                                             ; preds = %1720, %1723
  %1727 = phi double [ %1725, %1723 ], [ %1722, %1720 ]
  %1728 = bitcast %"class.std::__1::unique_ptr.2086"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1728) #12
  %1729 = call i8* @_Znwm(i64 24) #14
  %1730 = bitcast i8* %1729 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1730, align 8
  %1731 = getelementptr inbounds i8, i8* %1729, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1731, i8 0, i64 16, i1 false) #12
  %1732 = ptrtoint i8* %1729 to i64
  %1733 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %1734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1733, align 8
  %1735 = icmp eq %"class.WTF::StringImpl"* %1734, null
  br i1 %1735, label %1751, label %1736

1736:                                             ; preds = %1726
  %1737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1734, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1738 = load atomic i32, i32* %1737 monotonic, align 4
  %1739 = and i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  br i1 %1740, label %1741, label %1751

1741:                                             ; preds = %1736
  %1742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1734, i64 0, i32 0
  %1743 = load i32, i32* %1742, align 4
  %1744 = zext i32 %1743 to i33
  %1745 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1744, i33 1) #12
  %1746 = extractvalue { i33, i1 } %1745, 1
  %1747 = extractvalue { i33, i1 } %1745, 0
  %1748 = icmp slt i33 %1747, 0
  %1749 = or i1 %1746, %1748
  br i1 %1749, label %1750, label %1754, !prof !3

1750:                                             ; preds = %1741
  call void @llvm.trap() #12
  unreachable

1751:                                             ; preds = %1736, %1726
  %1752 = ptrtoint %"class.WTF::StringImpl"* %1734 to i64
  %1753 = bitcast i8* %1731 to i64*
  store i64 %1752, i64* %1753, align 8
  br label %1774

1754:                                             ; preds = %1741
  %1755 = trunc i33 %1747 to i32
  store i32 %1755, i32* %1742, align 4
  %1756 = bitcast i8* %1731 to %"class.WTF::StringImpl"**
  %1757 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1756, align 8
  %1758 = ptrtoint %"class.WTF::StringImpl"* %1734 to i64
  %1759 = bitcast i8* %1731 to i64*
  store i64 %1758, i64* %1759, align 8
  %1760 = icmp eq %"class.WTF::StringImpl"* %1757, null
  br i1 %1760, label %1774, label %1761

1761:                                             ; preds = %1754
  %1762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1757, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1763 = load atomic i32, i32* %1762 monotonic, align 4
  %1764 = and i32 %1763, 2
  %1765 = icmp eq i32 %1764, 0
  %1766 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1757, i64 0, i32 0
  %1767 = load i32, i32* %1766, align 4
  br i1 %1765, label %1768, label %1770

1768:                                             ; preds = %1761
  %1769 = add i32 %1767, -1
  store i32 %1769, i32* %1766, align 4
  br label %1770

1770:                                             ; preds = %1768, %1761
  %1771 = phi i32 [ %1769, %1768 ], [ %1767, %1761 ]
  %1772 = icmp eq i32 %1771, 0
  br i1 %1772, label %1773, label %1774

1773:                                             ; preds = %1770
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1757) #12
  br label %1774

1774:                                             ; preds = %1751, %1754, %1770, %1773
  %1775 = getelementptr inbounds i8, i8* %1729, i64 16
  %1776 = bitcast i8* %1775 to double*
  store double %1727, double* %1776, align 8
  %1777 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %6, i64 0, i32 0, i32 0, i32 0
  %1778 = bitcast %"class.std::__1::unique_ptr.2086"* %6 to i64*
  store i64 %1732, i64* %1778, align 8
  %1779 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1780 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1781 = icmp ult %"class.std::__1::unique_ptr.2086"* %1779, %1780
  br i1 %1781, label %1782, label %1786

1782:                                             ; preds = %1774
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1777, align 8
  %1783 = bitcast %"class.std::__1::unique_ptr.2086"* %1779 to i64*
  store i64 %1732, i64* %1783, align 8
  %1784 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1779, i64 1
  %1785 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1784 to i64
  store i64 %1785, i64* %199, align 8
  br label %1787

1786:                                             ; preds = %1774
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %6) #12
  br label %1787

1787:                                             ; preds = %1782, %1786
  %1788 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1777, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1777, align 8
  %1789 = icmp eq %"class.blink::protocol::Performance::Metric"* %1788, null
  br i1 %1789, label %1795, label %1790

1790:                                             ; preds = %1787
  %1791 = bitcast %"class.blink::protocol::Performance::Metric"* %1788 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1792 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1791, align 8
  %1793 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1792, i64 2
  %1794 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1793, align 8
  call void %1794(%"class.blink::protocol::Performance::Metric"* nonnull %1788) #12
  br label %1795

1795:                                             ; preds = %1787, %1790
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1728) #12
  %1796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1733, align 8
  %1797 = icmp eq %"class.WTF::StringImpl"* %1796, null
  br i1 %1797, label %1811, label %1798

1798:                                             ; preds = %1795
  %1799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1796, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1800 = load atomic i32, i32* %1799 monotonic, align 4
  %1801 = and i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1796, i64 0, i32 0
  %1804 = load i32, i32* %1803, align 4
  br i1 %1802, label %1805, label %1807

1805:                                             ; preds = %1798
  %1806 = add i32 %1804, -1
  store i32 %1806, i32* %1803, align 4
  br label %1807

1807:                                             ; preds = %1805, %1798
  %1808 = phi i32 [ %1806, %1805 ], [ %1804, %1798 ]
  %1809 = icmp eq i32 %1808, 0
  br i1 %1809, label %1810, label %1811

1810:                                             ; preds = %1807
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1796) #12
  br label %1811

1811:                                             ; preds = %1795, %1807, %1810
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1714) #12
  %1812 = bitcast %"class.WTF::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1812) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 16) #12
  %1813 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1711, i64 0, i32 120, i32 2, i32 0, i32 0
  %1814 = load i64, i64* %1813, align 8
  %1815 = add i64 %1814, -9223372036854775807
  %1816 = icmp ult i64 %1815, 2
  br i1 %1816, label %1820, label %1817

1817:                                             ; preds = %1811
  %1818 = sitofp i64 %1814 to double
  %1819 = fdiv double %1818, 1.000000e+06
  br label %1823

1820:                                             ; preds = %1811
  %1821 = icmp slt i64 %1814, 0
  %1822 = select i1 %1821, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1823

1823:                                             ; preds = %1817, %1820
  %1824 = phi double [ %1822, %1820 ], [ %1819, %1817 ]
  %1825 = bitcast %"class.std::__1::unique_ptr.2086"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1825) #12
  %1826 = call i8* @_Znwm(i64 24) #14
  %1827 = bitcast i8* %1826 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1827, align 8
  %1828 = getelementptr inbounds i8, i8* %1826, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1828, i8 0, i64 16, i1 false) #12
  %1829 = ptrtoint i8* %1826 to i64
  %1830 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %1831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1830, align 8
  %1832 = icmp eq %"class.WTF::StringImpl"* %1831, null
  br i1 %1832, label %1848, label %1833

1833:                                             ; preds = %1823
  %1834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1835 = load atomic i32, i32* %1834 monotonic, align 4
  %1836 = and i32 %1835, 2
  %1837 = icmp eq i32 %1836, 0
  br i1 %1837, label %1838, label %1848

1838:                                             ; preds = %1833
  %1839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1831, i64 0, i32 0
  %1840 = load i32, i32* %1839, align 4
  %1841 = zext i32 %1840 to i33
  %1842 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1841, i33 1) #12
  %1843 = extractvalue { i33, i1 } %1842, 1
  %1844 = extractvalue { i33, i1 } %1842, 0
  %1845 = icmp slt i33 %1844, 0
  %1846 = or i1 %1843, %1845
  br i1 %1846, label %1847, label %1851, !prof !3

1847:                                             ; preds = %1838
  call void @llvm.trap() #12
  unreachable

1848:                                             ; preds = %1833, %1823
  %1849 = ptrtoint %"class.WTF::StringImpl"* %1831 to i64
  %1850 = bitcast i8* %1828 to i64*
  store i64 %1849, i64* %1850, align 8
  br label %1871

1851:                                             ; preds = %1838
  %1852 = trunc i33 %1844 to i32
  store i32 %1852, i32* %1839, align 4
  %1853 = bitcast i8* %1828 to %"class.WTF::StringImpl"**
  %1854 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1853, align 8
  %1855 = ptrtoint %"class.WTF::StringImpl"* %1831 to i64
  %1856 = bitcast i8* %1828 to i64*
  store i64 %1855, i64* %1856, align 8
  %1857 = icmp eq %"class.WTF::StringImpl"* %1854, null
  br i1 %1857, label %1871, label %1858

1858:                                             ; preds = %1851
  %1859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1854, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1860 = load atomic i32, i32* %1859 monotonic, align 4
  %1861 = and i32 %1860, 2
  %1862 = icmp eq i32 %1861, 0
  %1863 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1854, i64 0, i32 0
  %1864 = load i32, i32* %1863, align 4
  br i1 %1862, label %1865, label %1867

1865:                                             ; preds = %1858
  %1866 = add i32 %1864, -1
  store i32 %1866, i32* %1863, align 4
  br label %1867

1867:                                             ; preds = %1865, %1858
  %1868 = phi i32 [ %1866, %1865 ], [ %1864, %1858 ]
  %1869 = icmp eq i32 %1868, 0
  br i1 %1869, label %1870, label %1871

1870:                                             ; preds = %1867
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1854) #12
  br label %1871

1871:                                             ; preds = %1848, %1851, %1867, %1870
  %1872 = getelementptr inbounds i8, i8* %1826, i64 16
  %1873 = bitcast i8* %1872 to double*
  store double %1824, double* %1873, align 8
  %1874 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %5, i64 0, i32 0, i32 0, i32 0
  %1875 = bitcast %"class.std::__1::unique_ptr.2086"* %5 to i64*
  store i64 %1829, i64* %1875, align 8
  %1876 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1877 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1878 = icmp ult %"class.std::__1::unique_ptr.2086"* %1876, %1877
  br i1 %1878, label %1879, label %1883

1879:                                             ; preds = %1871
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1874, align 8
  %1880 = bitcast %"class.std::__1::unique_ptr.2086"* %1876 to i64*
  store i64 %1829, i64* %1880, align 8
  %1881 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1876, i64 1
  %1882 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1881 to i64
  store i64 %1882, i64* %199, align 8
  br label %1884

1883:                                             ; preds = %1871
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %5) #12
  br label %1884

1884:                                             ; preds = %1879, %1883
  %1885 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1874, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1874, align 8
  %1886 = icmp eq %"class.blink::protocol::Performance::Metric"* %1885, null
  br i1 %1886, label %1892, label %1887

1887:                                             ; preds = %1884
  %1888 = bitcast %"class.blink::protocol::Performance::Metric"* %1885 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1889 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1888, align 8
  %1890 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1889, i64 2
  %1891 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1890, align 8
  call void %1891(%"class.blink::protocol::Performance::Metric"* nonnull %1885) #12
  br label %1892

1892:                                             ; preds = %1884, %1887
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1825) #12
  %1893 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1830, align 8
  %1894 = icmp eq %"class.WTF::StringImpl"* %1893, null
  br i1 %1894, label %1908, label %1895

1895:                                             ; preds = %1892
  %1896 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1897 = load atomic i32, i32* %1896 monotonic, align 4
  %1898 = and i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  %1900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1893, i64 0, i32 0
  %1901 = load i32, i32* %1900, align 4
  br i1 %1899, label %1902, label %1904

1902:                                             ; preds = %1895
  %1903 = add i32 %1901, -1
  store i32 %1903, i32* %1900, align 4
  br label %1904

1904:                                             ; preds = %1902, %1895
  %1905 = phi i32 [ %1903, %1902 ], [ %1901, %1895 ]
  %1906 = icmp eq i32 %1905, 0
  br i1 %1906, label %1907, label %1908

1907:                                             ; preds = %1904
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1893) #12
  br label %1908

1908:                                             ; preds = %1892, %1904, %1907
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1812) #12
  %1909 = bitcast %"class.WTF::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1909) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %50, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i64 15) #12
  %1910 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* nonnull %1711) #12
  %1911 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %1910, i64 0, i32 37, i32 6, i32 0, i32 0
  %1912 = load i64, i64* %1911, align 8
  %1913 = add i64 %1912, -9223372036854775807
  %1914 = icmp ult i64 %1913, 2
  br i1 %1914, label %1918, label %1915

1915:                                             ; preds = %1908
  %1916 = sitofp i64 %1912 to double
  %1917 = fdiv double %1916, 1.000000e+06
  br label %1921

1918:                                             ; preds = %1908
  %1919 = icmp slt i64 %1912, 0
  %1920 = select i1 %1919, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1921

1921:                                             ; preds = %1915, %1918
  %1922 = phi double [ %1920, %1918 ], [ %1917, %1915 ]
  %1923 = bitcast %"class.std::__1::unique_ptr.2086"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1923) #12
  %1924 = call i8* @_Znwm(i64 24) #14
  %1925 = bitcast i8* %1924 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11Performance6MetricE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1925, align 8
  %1926 = getelementptr inbounds i8, i8* %1924, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1926, i8 0, i64 16, i1 false) #12
  %1927 = ptrtoint i8* %1924 to i64
  %1928 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %1929 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1928, align 8
  %1930 = icmp eq %"class.WTF::StringImpl"* %1929, null
  br i1 %1930, label %1946, label %1931

1931:                                             ; preds = %1921
  %1932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1933 = load atomic i32, i32* %1932 monotonic, align 4
  %1934 = and i32 %1933, 2
  %1935 = icmp eq i32 %1934, 0
  br i1 %1935, label %1936, label %1946

1936:                                             ; preds = %1931
  %1937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 0
  %1938 = load i32, i32* %1937, align 4
  %1939 = zext i32 %1938 to i33
  %1940 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1939, i33 1) #12
  %1941 = extractvalue { i33, i1 } %1940, 1
  %1942 = extractvalue { i33, i1 } %1940, 0
  %1943 = icmp slt i33 %1942, 0
  %1944 = or i1 %1941, %1943
  br i1 %1944, label %1945, label %1949, !prof !3

1945:                                             ; preds = %1936
  call void @llvm.trap() #12
  unreachable

1946:                                             ; preds = %1931, %1921
  %1947 = ptrtoint %"class.WTF::StringImpl"* %1929 to i64
  %1948 = bitcast i8* %1926 to i64*
  store i64 %1947, i64* %1948, align 8
  br label %1969

1949:                                             ; preds = %1936
  %1950 = trunc i33 %1942 to i32
  store i32 %1950, i32* %1937, align 4
  %1951 = bitcast i8* %1926 to %"class.WTF::StringImpl"**
  %1952 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1951, align 8
  %1953 = ptrtoint %"class.WTF::StringImpl"* %1929 to i64
  %1954 = bitcast i8* %1926 to i64*
  store i64 %1953, i64* %1954, align 8
  %1955 = icmp eq %"class.WTF::StringImpl"* %1952, null
  br i1 %1955, label %1969, label %1956

1956:                                             ; preds = %1949
  %1957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1952, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1958 = load atomic i32, i32* %1957 monotonic, align 4
  %1959 = and i32 %1958, 2
  %1960 = icmp eq i32 %1959, 0
  %1961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1952, i64 0, i32 0
  %1962 = load i32, i32* %1961, align 4
  br i1 %1960, label %1963, label %1965

1963:                                             ; preds = %1956
  %1964 = add i32 %1962, -1
  store i32 %1964, i32* %1961, align 4
  br label %1965

1965:                                             ; preds = %1963, %1956
  %1966 = phi i32 [ %1964, %1963 ], [ %1962, %1956 ]
  %1967 = icmp eq i32 %1966, 0
  br i1 %1967, label %1968, label %1969

1968:                                             ; preds = %1965
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1952) #12
  br label %1969

1969:                                             ; preds = %1946, %1949, %1965, %1968
  %1970 = getelementptr inbounds i8, i8* %1924, i64 16
  %1971 = bitcast i8* %1970 to double*
  store double %1922, double* %1971, align 8
  %1972 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %4, i64 0, i32 0, i32 0, i32 0
  %1973 = bitcast %"class.std::__1::unique_ptr.2086"* %4 to i64*
  store i64 %1927, i64* %1973, align 8
  %1974 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %157, align 8
  %1975 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %160, align 8
  %1976 = icmp ult %"class.std::__1::unique_ptr.2086"* %1974, %1975
  br i1 %1976, label %1977, label %1981

1977:                                             ; preds = %1969
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1972, align 8
  %1978 = bitcast %"class.std::__1::unique_ptr.2086"* %1974 to i64*
  store i64 %1927, i64* %1978, align 8
  %1979 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1974, i64 1
  %1980 = ptrtoint %"class.std::__1::unique_ptr.2086"* %1979 to i64
  store i64 %1980, i64* %199, align 8
  br label %1982

1981:                                             ; preds = %1969
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"* nonnull %55, %"class.std::__1::unique_ptr.2086"* nonnull dereferenceable(8) %4) #12
  br label %1982

1982:                                             ; preds = %1977, %1981
  %1983 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %1972, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %1972, align 8
  %1984 = icmp eq %"class.blink::protocol::Performance::Metric"* %1983, null
  br i1 %1984, label %1990, label %1985

1985:                                             ; preds = %1982
  %1986 = bitcast %"class.blink::protocol::Performance::Metric"* %1983 to void (%"class.blink::protocol::Performance::Metric"*)***
  %1987 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %1986, align 8
  %1988 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1987, i64 2
  %1989 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %1988, align 8
  call void %1989(%"class.blink::protocol::Performance::Metric"* nonnull %1983) #12
  br label %1990

1990:                                             ; preds = %1982, %1985
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1923) #12
  %1991 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1928, align 8
  %1992 = icmp eq %"class.WTF::StringImpl"* %1991, null
  br i1 %1992, label %2006, label %1993

1993:                                             ; preds = %1990
  %1994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1991, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1995 = load atomic i32, i32* %1994 monotonic, align 4
  %1996 = and i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1991, i64 0, i32 0
  %1999 = load i32, i32* %1998, align 4
  br i1 %1997, label %2000, label %2002

2000:                                             ; preds = %1993
  %2001 = add i32 %1999, -1
  store i32 %2001, i32* %1998, align 4
  br label %2002

2002:                                             ; preds = %2000, %1993
  %2003 = phi i32 [ %2001, %2000 ], [ %1999, %1993 ]
  %2004 = icmp eq i32 %2003, 0
  br i1 %2004, label %2005, label %2006

2005:                                             ; preds = %2002
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1991) #12
  br label %2006

2006:                                             ; preds = %1990, %2002, %2005
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1909) #12
  br label %2007

2007:                                             ; preds = %1706, %2006
  %2008 = getelementptr inbounds %"class.std::__1::unique_ptr.2081", %"class.std::__1::unique_ptr.2081"* %2, i64 0, i32 0, i32 0, i32 0
  %2009 = load %"class.std::__1::vector.2084"*, %"class.std::__1::vector.2084"** %2008, align 8
  %2010 = bitcast %"class.std::__1::unique_ptr.2081"* %2 to i64*
  store i64 %56, i64* %2010, align 8
  %2011 = icmp eq %"class.std::__1::vector.2084"* %2009, null
  br i1 %2011, label %2041, label %2012

2012:                                             ; preds = %2007
  %2013 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %2009, i64 0, i32 0, i32 0
  %2014 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %2013, align 8
  %2015 = icmp eq %"class.std::__1::unique_ptr.2086"* %2014, null
  br i1 %2015, label %2039, label %2016

2016:                                             ; preds = %2012
  %2017 = bitcast %"class.std::__1::unique_ptr.2086"* %2014 to i8*
  %2018 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %2009, i64 0, i32 0, i32 1
  %2019 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %2018, align 8
  %2020 = icmp eq %"class.std::__1::unique_ptr.2086"* %2019, %2014
  br i1 %2020, label %2037, label %2021

2021:                                             ; preds = %2016, %2032
  %2022 = phi %"class.std::__1::unique_ptr.2086"* [ %2023, %2032 ], [ %2019, %2016 ]
  %2023 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %2022, i64 -1
  %2024 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %2023, i64 0, i32 0, i32 0, i32 0
  %2025 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %2024, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %2024, align 8
  %2026 = icmp eq %"class.blink::protocol::Performance::Metric"* %2025, null
  br i1 %2026, label %2032, label %2027

2027:                                             ; preds = %2021
  %2028 = bitcast %"class.blink::protocol::Performance::Metric"* %2025 to void (%"class.blink::protocol::Performance::Metric"*)***
  %2029 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %2028, align 8
  %2030 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %2029, i64 2
  %2031 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %2030, align 8
  call void %2031(%"class.blink::protocol::Performance::Metric"* nonnull %2025) #12
  br label %2032

2032:                                             ; preds = %2027, %2021
  %2033 = icmp eq %"class.std::__1::unique_ptr.2086"* %2023, %2014
  br i1 %2033, label %2034, label %2021

2034:                                             ; preds = %2032
  %2035 = bitcast %"class.std::__1::vector.2084"* %2009 to i8**
  %2036 = load i8*, i8** %2035, align 8
  br label %2037

2037:                                             ; preds = %2034, %2016
  %2038 = phi i8* [ %2036, %2034 ], [ %2017, %2016 ]
  store %"class.std::__1::unique_ptr.2086"* %2014, %"class.std::__1::unique_ptr.2086"** %2018, align 8
  call void @_ZdlPv(i8* %2038) #14
  br label %2039

2039:                                             ; preds = %2037, %2012
  %2040 = bitcast %"class.std::__1::vector.2084"* %2009 to i8*
  call void @_ZdlPv(i8* %2040) #14
  br label %2041

2041:                                             ; preds = %2007, %2039
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1529) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1033) #12
  br label %2042

2042:                                             ; preds = %2041, %91
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare i32 @_ZN5blink16InstanceCounters12CounterValueENS0_11CounterTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"*) unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #1

declare void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"*, %"class.v8::HeapStatistics"*) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::PaintTiming"* @_ZN5blink11PaintTiming4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPerformanceAgent"* readonly, %"class.std::__1::unique_ptr.2081"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %1, i64 -1, i32 21, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPerformanceAgent"* %5, %"class.std::__1::unique_ptr.2081"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent16ConsoleTimeStampERKN3WTF6StringE(%"class.blink::InspectorPerformanceAgent"* readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2081", align 8
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 20, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::unique_ptr.2081"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.2081", %"class.std::__1::unique_ptr.2081"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.2081"* %3 to i64*
  store i64 0, i64* %11, align 8
  call void @_ZN5blink25InspectorPerformanceAgent10getMetricsEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol11Performance6MetricENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* nonnull sret %4, %"class.blink::InspectorPerformanceAgent"* %0, %"class.std::__1::unique_ptr.2081"* nonnull %3)
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %8, %17
  %21 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %21, align 8
  %23 = load %"class.std::__1::vector.2084"*, %"class.std::__1::vector.2084"** %10, align 8
  call void @_ZN5blink8protocol11Performance8Frontend7metricsENSt3__110unique_ptrINS3_6vectorINS4_INS1_6MetricENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEERKN3WTF6StringE(%"class.blink::protocol::Performance::Frontend"* %22, %"class.std::__1::vector.2084"* %23, %"class.WTF::String"* dereferenceable(8) %1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  br label %24

24:                                               ; preds = %2, %20
  ret void
}

declare void @_ZN5blink8protocol11Performance8Frontend7metricsENSt3__110unique_ptrINS3_6vectorINS4_INS1_6MetricENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEERKN3WTF6StringE(%"class.blink::protocol::Performance::Frontend"*, %"class.std::__1::vector.2084"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent12ScriptStartsEv(%"class.blink::InspectorPerformanceAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %14

12:                                               ; preds = %6
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent10ScriptEndsEv(%"class.blink::InspectorPerformanceAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %63

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %16

14:                                               ; preds = %8
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %17, %19
  %21 = add i64 %20, -9223372036854775807
  %22 = icmp ult i64 %21, 2
  %23 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 7, i32 0
  %24 = load i64, i64* %23, align 8
  br i1 %22, label %32, label %25

25:                                               ; preds = %16
  %26 = icmp slt i64 %20, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %20) #12
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !3
  br label %40

32:                                               ; preds = %16
  %33 = add i64 %24, -9223372036854775807
  %34 = icmp ugt i64 %33, 1
  %35 = icmp eq i64 %24, %20
  %36 = or i1 %35, %34
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %40

40:                                               ; preds = %25, %32, %37
  %41 = phi i64 [ %31, %25 ], [ %20, %32 ], [ %20, %37 ]
  store i64 %41, i64* %23, align 8
  store i64 0, i64* %18, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %63, label %45

45:                                               ; preds = %40
  br i1 %22, label %53, label %46

46:                                               ; preds = %45
  %47 = icmp slt i64 %20, 0
  %48 = select i1 %47, i64 -9223372036854775808, i64 9223372036854775807
  %49 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %43, i64 %20) #12
  %50 = extractvalue { i64, i1 } %49, 1
  %51 = extractvalue { i64, i1 } %49, 0
  %52 = select i1 %50, i64 %48, i64 %51, !prof !3
  br label %61

53:                                               ; preds = %45
  %54 = add i64 %43, -9223372036854775807
  %55 = icmp ugt i64 %54, 1
  %56 = icmp eq i64 %43, %20
  %57 = or i1 %56, %55
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  br label %61

61:                                               ; preds = %46, %53, %58
  %62 = phi i64 [ %52, %46 ], [ %20, %53 ], [ %20, %58 ]
  store i64 %62, i64* %42, align 8
  br label %63

63:                                               ; preds = %40, %61, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent4WillERKNS_5probe12CallFunctionE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::CallFunction"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %15

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i64 [ %12, %11 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent3DidERKNS_5probe12CallFunctionE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::CallFunction"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25InspectorPerformanceAgent10ScriptEndsEv(%"class.blink::InspectorPerformanceAgent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent4WillERKNS_5probe13ExecuteScriptE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::ExecuteScript"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %15

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i64 [ %12, %11 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent3DidERKNS_5probe13ExecuteScriptE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::ExecuteScript"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25InspectorPerformanceAgent10ScriptEndsEv(%"class.blink::InspectorPerformanceAgent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent4WillERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::RecalculateStyle"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %10

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i64 [ %7, %6 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent3DidERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::RecalculateStyle"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %112, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %18

16:                                               ; preds = %10
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %19, %21
  %23 = add i64 %22, -9223372036854775807
  %24 = icmp ult i64 %23, 2
  %25 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 5, i32 0
  %26 = load i64, i64* %25, align 8
  br i1 %24, label %34, label %27

27:                                               ; preds = %18
  %28 = icmp slt i64 %22, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %22) #12
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !3
  br label %42

34:                                               ; preds = %18
  %35 = add i64 %26, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %26, %22
  %38 = or i1 %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %22, %34 ], [ %22, %39 ]
  store i64 %43, i64* %25, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 17
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  store i64 0, i64* %7, align 8
  %47 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %42
  br i1 %24, label %58, label %51

51:                                               ; preds = %50
  %52 = icmp slt i64 %22, 0
  %53 = select i1 %52, i64 -9223372036854775808, i64 9223372036854775807
  %54 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %48, i64 %22) #12
  %55 = extractvalue { i64, i1 } %54, 1
  %56 = extractvalue { i64, i1 } %54, 0
  %57 = select i1 %55, i64 %53, i64 %56, !prof !3
  br label %66

58:                                               ; preds = %50
  %59 = add i64 %48, -9223372036854775807
  %60 = icmp ugt i64 %59, 1
  %61 = icmp eq i64 %48, %22
  %62 = or i1 %61, %60
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  br label %66

66:                                               ; preds = %51, %58, %63
  %67 = phi i64 [ %57, %51 ], [ %22, %58 ], [ %22, %63 ]
  store i64 %67, i64* %47, align 8
  br label %68

68:                                               ; preds = %66, %42
  %69 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %68
  br i1 %24, label %80, label %73

73:                                               ; preds = %72
  %74 = icmp slt i64 %22, 0
  %75 = select i1 %74, i64 -9223372036854775808, i64 9223372036854775807
  %76 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %70, i64 %22) #12
  %77 = extractvalue { i64, i1 } %76, 1
  %78 = extractvalue { i64, i1 } %76, 0
  %79 = select i1 %77, i64 %75, i64 %78, !prof !3
  br label %88

80:                                               ; preds = %72
  %81 = add i64 %70, -9223372036854775807
  %82 = icmp ugt i64 %81, 1
  %83 = icmp eq i64 %70, %22
  %84 = or i1 %83, %82
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #12
  br label %88

88:                                               ; preds = %73, %80, %85
  %89 = phi i64 [ %79, %73 ], [ %22, %80 ], [ %22, %85 ]
  store i64 %89, i64* %69, align 8
  br label %90

90:                                               ; preds = %88, %68
  %91 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %90
  br i1 %24, label %102, label %95

95:                                               ; preds = %94
  %96 = icmp slt i64 %22, 0
  %97 = select i1 %96, i64 -9223372036854775808, i64 9223372036854775807
  %98 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %92, i64 %22) #12
  %99 = extractvalue { i64, i1 } %98, 1
  %100 = extractvalue { i64, i1 } %98, 0
  %101 = select i1 %99, i64 %97, i64 %100, !prof !3
  br label %110

102:                                              ; preds = %94
  %103 = add i64 %92, -9223372036854775807
  %104 = icmp ugt i64 %103, 1
  %105 = icmp eq i64 %92, %22
  %106 = or i1 %105, %104
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #12
  br label %110

110:                                              ; preds = %95, %102, %107
  %111 = phi i64 [ %101, %95 ], [ %22, %102 ], [ %22, %107 ]
  store i64 %111, i64* %91, align 8
  br label %112

112:                                              ; preds = %90, %110, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent4WillERKNS_5probe12UpdateLayoutE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::UpdateLayout"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 19
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %15

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent3DidERKNS_5probe12UpdateLayoutE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::UpdateLayout"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 19
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %117

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %117, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %23

21:                                               ; preds = %15
  %22 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi i64 [ %20, %19 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = sub nsw i64 %24, %26
  %28 = add i64 %27, -9223372036854775807
  %29 = icmp ult i64 %28, 2
  %30 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 3, i32 0
  %31 = load i64, i64* %30, align 8
  br i1 %29, label %39, label %32

32:                                               ; preds = %23
  %33 = icmp slt i64 %27, 0
  %34 = select i1 %33, i64 -9223372036854775808, i64 9223372036854775807
  %35 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %31, i64 %27) #12
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 %34, i64 %37, !prof !3
  br label %47

39:                                               ; preds = %23
  %40 = add i64 %31, -9223372036854775807
  %41 = icmp ugt i64 %40, 1
  %42 = icmp eq i64 %31, %27
  %43 = or i1 %42, %41
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  br label %47

47:                                               ; preds = %32, %39, %44
  %48 = phi i64 [ %38, %32 ], [ %27, %39 ], [ %27, %44 ]
  store i64 %48, i64* %30, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 16
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  store i64 0, i64* %12, align 8
  %52 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %47
  br i1 %29, label %63, label %56

56:                                               ; preds = %55
  %57 = icmp slt i64 %27, 0
  %58 = select i1 %57, i64 -9223372036854775808, i64 9223372036854775807
  %59 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %53, i64 %27) #12
  %60 = extractvalue { i64, i1 } %59, 1
  %61 = extractvalue { i64, i1 } %59, 0
  %62 = select i1 %60, i64 %58, i64 %61, !prof !3
  br label %71

63:                                               ; preds = %55
  %64 = add i64 %53, -9223372036854775807
  %65 = icmp ugt i64 %64, 1
  %66 = icmp eq i64 %53, %27
  %67 = or i1 %66, %65
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  br label %71

71:                                               ; preds = %56, %63, %68
  %72 = phi i64 [ %62, %56 ], [ %27, %63 ], [ %27, %68 ]
  store i64 %72, i64* %52, align 8
  br label %73

73:                                               ; preds = %71, %47
  %74 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 6, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %73
  br i1 %29, label %85, label %78

78:                                               ; preds = %77
  %79 = icmp slt i64 %27, 0
  %80 = select i1 %79, i64 -9223372036854775808, i64 9223372036854775807
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %75, i64 %27) #12
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = extractvalue { i64, i1 } %81, 0
  %84 = select i1 %82, i64 %80, i64 %83, !prof !3
  br label %93

85:                                               ; preds = %77
  %86 = add i64 %75, -9223372036854775807
  %87 = icmp ugt i64 %86, 1
  %88 = icmp eq i64 %75, %27
  %89 = or i1 %88, %87
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %93

93:                                               ; preds = %78, %85, %90
  %94 = phi i64 [ %84, %78 ], [ %27, %85 ], [ %27, %90 ]
  store i64 %94, i64* %74, align 8
  br label %95

95:                                               ; preds = %93, %73
  %96 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %117, label %99

99:                                               ; preds = %95
  br i1 %29, label %107, label %100

100:                                              ; preds = %99
  %101 = icmp slt i64 %27, 0
  %102 = select i1 %101, i64 -9223372036854775808, i64 9223372036854775807
  %103 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %97, i64 %27) #12
  %104 = extractvalue { i64, i1 } %103, 1
  %105 = extractvalue { i64, i1 } %103, 0
  %106 = select i1 %104, i64 %102, i64 %105, !prof !3
  br label %115

107:                                              ; preds = %99
  %108 = add i64 %97, -9223372036854775807
  %109 = icmp ugt i64 %108, 1
  %110 = icmp eq i64 %97, %27
  %111 = or i1 %110, %109
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #12
  br label %115

115:                                              ; preds = %100, %107, %112
  %116 = phi i64 [ %106, %100 ], [ %27, %107 ], [ %27, %112 ]
  store i64 %116, i64* %96, align 8
  br label %117

117:                                              ; preds = %95, %115, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent4WillERKNS_5probe9V8CompileE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::V8Compile"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %10

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i64 [ %7, %6 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent3DidERKNS_5probe9V8CompileE(%"class.blink::InspectorPerformanceAgent"* nocapture, %"class.blink::probe::V8Compile"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 12, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %63, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %16

14:                                               ; preds = %8
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 12, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %17, %19
  %21 = add i64 %20, -9223372036854775807
  %22 = icmp ult i64 %21, 2
  %23 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 11, i32 0
  %24 = load i64, i64* %23, align 8
  br i1 %22, label %32, label %25

25:                                               ; preds = %16
  %26 = icmp slt i64 %20, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %20) #12
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !3
  br label %40

32:                                               ; preds = %16
  %33 = add i64 %24, -9223372036854775807
  %34 = icmp ugt i64 %33, 1
  %35 = icmp eq i64 %24, %20
  %36 = or i1 %35, %34
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %40

40:                                               ; preds = %25, %32, %37
  %41 = phi i64 [ %31, %25 ], [ %20, %32 ], [ %20, %37 ]
  store i64 %41, i64* %23, align 8
  store i64 0, i64* %5, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %63, label %45

45:                                               ; preds = %40
  br i1 %22, label %53, label %46

46:                                               ; preds = %45
  %47 = icmp slt i64 %20, 0
  %48 = select i1 %47, i64 -9223372036854775808, i64 9223372036854775807
  %49 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %43, i64 %20) #12
  %50 = extractvalue { i64, i1 } %49, 1
  %51 = extractvalue { i64, i1 } %49, 0
  %52 = select i1 %50, i64 %48, i64 %51, !prof !3
  br label %61

53:                                               ; preds = %45
  %54 = add i64 %43, -9223372036854775807
  %55 = icmp ugt i64 %54, 1
  %56 = icmp eq i64 %43, %20
  %57 = or i1 %56, %55
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  br label %61

61:                                               ; preds = %46, %53, %58
  %62 = phi i64 [ %52, %46 ], [ %20, %53 ], [ %20, %58 ]
  store i64 %62, i64* %42, align 8
  br label %63

63:                                               ; preds = %40, %61, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent21WillStartDebuggerTaskEv(%"class.blink::InspectorPerformanceAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %9

7:                                                ; preds = %1
  %8 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi i64 [ %6, %5 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent21DidFinishDebuggerTaskEv(%"class.blink::InspectorPerformanceAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %14

12:                                               ; preds = %6
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %15, %17
  %19 = add i64 %18, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  %21 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 13, i32 0
  %22 = load i64, i64* %21, align 8
  br i1 %20, label %30, label %23

23:                                               ; preds = %14
  %24 = icmp slt i64 %18, 0
  %25 = select i1 %24, i64 -9223372036854775808, i64 9223372036854775807
  %26 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 %18) #12
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 %25, i64 %28, !prof !3
  br label %38

30:                                               ; preds = %14
  %31 = add i64 %22, -9223372036854775807
  %32 = icmp ugt i64 %31, 1
  %33 = icmp eq i64 %22, %18
  %34 = or i1 %33, %32
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %23, %30, %35
  %39 = phi i64 [ %29, %23 ], [ %18, %30 ], [ %18, %35 ]
  store i64 %39, i64* %21, align 8
  store i64 0, i64* %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent15WillProcessTaskEN4base9TimeTicksE(%"class.blink::InspectorPerformanceAgent"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %10

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i64 [ %7, %6 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink25InspectorPerformanceAgent15WillProcessTaskEN4base9TimeTicksE(%"class.blink::InspectorPerformanceAgent"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 20, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"* %3 to %"class.blink::InspectorPerformanceAgent"*
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %4, i64 0, i32 21, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %12

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %12

12:                                               ; preds = %8, %10
  %13 = phi i64 [ %9, %8 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 16
  %15 = bitcast %"class.WTF::String"* %14 to i64*
  store i64 %13, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorPerformanceAgent14DidProcessTaskEN4base9TimeTicksES2_(%"class.blink::InspectorPerformanceAgent"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 21, i32 2
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  br label %16

14:                                               ; preds = %8
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %17, %19
  %21 = add i64 %20, -9223372036854775807
  %22 = icmp ult i64 %21, 2
  %23 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 9, i32 0
  %24 = load i64, i64* %23, align 8
  br i1 %22, label %32, label %25

25:                                               ; preds = %16
  %26 = icmp slt i64 %20, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %20) #12
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !3
  br label %40

32:                                               ; preds = %16
  %33 = add i64 %24, -9223372036854775807
  %34 = icmp ugt i64 %33, 1
  %35 = icmp eq i64 %24, %20
  %36 = or i1 %35, %34
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %40

40:                                               ; preds = %25, %32, %37
  %41 = phi i64 [ %31, %25 ], [ %20, %32 ], [ %20, %37 ]
  store i64 %41, i64* %23, align 8
  store i64 0, i64* %5, align 8
  br label %42

42:                                               ; preds = %3, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink25InspectorPerformanceAgent14DidProcessTaskEN4base9TimeTicksES2_(%"class.blink::InspectorPerformanceAgent"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 -1, i32 20, i32 0, i32 1
  %5 = bitcast %"class.WTF::String"* %4 to %"class.blink::InspectorPerformanceAgent"*
  tail call void @_ZN5blink25InspectorPerformanceAgent14DidProcessTaskEN4base9TimeTicksES2_(%"class.blink::InspectorPerformanceAgent"* %5, i64 undef, i64 undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25InspectorPerformanceAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorPerformanceAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorPerformanceAgent", %"class.blink::InspectorPerformanceAgent"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #12
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #14
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Performance::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Performance::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Performance::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol11Performance10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Performance::Backend"* %26) #12
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #12
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %16, align 8
  store %"class.blink::protocol::Performance::Frontend"* null, %"class.blink::protocol::Performance::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Performance::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Performance::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %3, align 8
  store %"class.blink::protocol::Performance::Frontend"* null, %"class.blink::protocol::Performance::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Performance::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Performance::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #12
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Performance::Frontend"*, %"class.blink::protocol::Performance::Frontend"** %5, align 8
  store %"class.blink::protocol::Performance::Frontend"* null, %"class.blink::protocol::Performance::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Performance::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Performance::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #12
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11Performance8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11Performance6MetricENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2084"*, %"class.std::__1::unique_ptr.2086"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2086"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2084"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2084"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2086"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2086"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2086"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2086"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2086"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2086"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2086"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2084", %"class.std::__1::vector.2084"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2086"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2086"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Performance::Metric"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2086"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2086"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2086"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2086"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2086"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2086"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2086"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2086"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2086"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2086"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2086"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2086"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2086"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2086"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2086"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2086"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2086"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2086"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2086"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2086"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2086"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2086"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2086"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2086"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2086"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2086"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2086"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2086"*, %"class.std::__1::unique_ptr.2086"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2086"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2086"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2086"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2086"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2086"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2086"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2086"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Performance::Metric"*, %"class.blink::protocol::Performance::Metric"** %142, align 8
  store %"class.blink::protocol::Performance::Metric"* null, %"class.blink::protocol::Performance::Metric"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Performance::Metric"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Performance::Metric"* %143 to void (%"class.blink::protocol::Performance::Metric"*)***
  %147 = load void (%"class.blink::protocol::Performance::Metric"*)**, void (%"class.blink::protocol::Performance::Metric"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Performance::Metric"*)*, void (%"class.blink::protocol::Performance::Metric"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Performance::Metric"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2086"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i64 @_ZN4base14ProcessMetrics21GetCumulativeCPUUsageEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #1

declare void @_ZN4base7Process7CurrentEv(%"class.base::Process"* sret) local_unnamed_addr #1

declare i32 @_ZNK4base7Process6HandleEv(%"class.base::Process"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #11

declare %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base14ProcessMetricsD1Ev(%"class.base::ProcessMetrics"*) unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #12
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #12
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #12
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.1814"*) local_unnamed_addr #1

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.1814"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol11Performance10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Performance::Backend"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink25InspectorPerformanceAgent7disableEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink25InspectorPerformanceAgent7disableEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink25InspectorPerformanceAgent13setTimeDomainERKN3WTF6StringE"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
